(() => {
	var e = {
			881152: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => S, o: () => v });
				var n = i(602770),
					a = i(29273),
					s = i(385192),
					r = i(309029),
					o = i(729558),
					l = (i(228748), i(547052)),
					c = i(80879),
					d = i(895509),
					u = i(717776);
				c.Ay.loadNamespaces(['diving', 'activity', 'units', 'common']);
				const p = ['#be5142', '#75a1cb', '#503dac', '#24ea59'],
					y = ['surfTotalWaves', 'surfLongestWave', 'surfTime', 'avgSpeedSurf'],
					h = [
						'wakesportsTotalRuns',
						'wakesportsLongestRun',
						'activeTime',
						'avgSpeedWakesportsRun',
					],
					g = {
						[d.A.Surfing]: h,
						[d.A.SurfingV2]: h,
						[d.A.Watertubing]: y,
						[d.A.Wakeboarding]: y,
						[d.A.WakeboardingV2]: y,
						[d.A.Wakesurfing]: y,
						[d.A.Waterskiing]: y,
					},
					m = [
						'surfTotalWaves',
						'surfLongestWave',
						'surfTime',
						'duration',
						'maxSpeedSurf',
						'avgSpeedSurf',
						'averageHR',
						'maxHR',
						'calories',
					],
					A = [
						'wakesportsTotalRuns',
						'wakesportsLongestRun',
						'activeTime',
						'duration',
						'maxSpeedSurf',
						'avgSpeedWakesportsRun',
						'averageHR',
						'maxHR',
						'calories',
					],
					_ = [
						'averageSpeed',
						'maxSpeed',
						'duration',
						'movingDuration',
						'averageHR',
						'maxHR',
						'averagePower',
						'maxPower',
						'averageBikeCadence',
						'maxBikeCadence',
						'calories',
						'distance',
					],
					E = [
						'averageSpeed',
						'maxSpeed',
						'duration',
						'movingDuration',
						'averageHR',
						'maxHR',
						'averagePower',
						'maxPower',
						'averageBikeCadence',
						'maxBikeCadence',
						'calories',
						'distance',
					],
					T = [
						'elevationLoss',
						'distance',
						'resortSkiNoOfRuns',
						'maxSpeed',
						'averageSpeed',
						'duration',
						'runMovingTime',
						'liftTime',
					],
					C = {
						indoor_climbing: [
							'noOfSplits',
							'maxGradeValue',
							'climbTime',
							'ascent',
							'maxAscent',
							'numClimbsAttempted',
							'numClimbsCompleted',
							'numClimbSends',
							'numFalls',
							'calories',
							'averageHR',
							'maxHR',
							'totalRestTime',
							'duration',
						],
						bouldering: [
							'noOfSplits',
							'maxGradeValue',
							'climbTime',
							'numClimbsAttempted',
							'numClimbsCompleted',
							'calories',
							'averageHR',
							'maxHR',
							'totalRestTime',
							'duration',
						],
						[d.A.OffShoreGrinding]: _,
						[d.A.OffShoreGrindingV2]: _,
						[d.A.OnShoreGrinding]: E,
						[d.A.OnShoreGrindingV2]: E,
						[d.A.Surfing]: m,
						[d.A.SurfingV2]: m,
						[d.A.Esport]: ['duration', 'avgStress', 'averageHR', 'maxStress'],
						[d.A.Watertubing]: A,
						[d.A.Wakeboarding]: A,
						[d.A.WakeboardingV2]: A,
						[d.A.Wakesurfing]: A,
						[d.A.Waterskiing]: A,
						[d.A.ResortSkiing]: T,
						[d.A.ResortSnowboarding]: T,
						[d.A.ResortSkiSnowboard]: T,
						[d.A.Dance]: ['maxHR', 'duration', 'avgTempo', 'steps', 'calories'],
						[d.A.JumpRope]: [
							'calories',
							'duration',
							'totalReps',
							'averageHR',
							'avgJumpRopeCadence',
						],
					},
					S = {
						modes: () => ({ Speed: 'Speed', Pace: 'Pace' }),
						getAllMetrics() {
							return {
								maxDepth: {
									label: 'max_depth',
									ns: 'diving',
									personalize: (e) =>
										e.maxDepth ? a.A.personalizeDepth(e.maxDepth) : '--',
									unitKey: () => a.A.getDepthUnitKey(),
								},
								bottomTime: {
									label: 'dive_time',
									ns: 'diving',
									personalize: (e) =>
										e.bottomTime ? a.A.personalizeDuration(e.bottomTime) : '--',
								},
								surfaceInterval: {
									label: 'surface_interval',
									ns: 'diving',
									personalize: (e) =>
										e.surfaceInterval
											? a.A.personalizeDuration(e.surfaceInterval)
											: '--',
								},
								diveWeight: {
									label: 'dive_weight',
									ns: 'diving',
									key: 'diveInfo.weight',
									personalize: (e) =>
										e.maxDepth
											? a.A.personalizeDiveWeight(e.diveInfo.weight)
											: '--',
									unitKey: (e) =>
										e.diveInfo
											? a.A.personalizeDiveWeightUnit(
													e.diveInfo.weightUnit,
													c.Ay
												)
											: '',
								},
								waterCurrent: {
									label: 'water_current',
									ns: 'diving',
									key: 'diveInfo.current',
									personalize: (e) => (e.diveInfo ? e.diveInfo.current : '--'),
								},
								surfaceCondition: {
									label: 'surface_condition',
									ns: 'diving',
									key: 'diveInfo.surfaceCondition',
									personalize: (e) =>
										e.diveInfo ? e.diveInfo.surfaceCondition : '--',
								},
								decompressionDive: {
									label: 'decompression_dive',
									ns: 'diving',
									key: 'diveInfo',
									personalize: (e) => {
										const t = e.decoDive
											? 'decompression_yes'
											: 'decompression_no';
										return this.isDivingActivity(e.activityTypeDTO.typeKey)
											? (0, u.jsx)(l.A, { ns: 'diving', content: t })
											: '--';
									},
								},
								diveVisibility: {
									label: 'dive_visibility',
									ns: 'diving',
									key: 'diveInfo.visibility',
									personalize: (e) =>
										e.diveInfo && e.diveInfo.visibility
											? a.A.personalizeVisibility(e.diveInfo.visibility)
											: '--',
									unitKey: (e) => {
										if (e.diveInfo && e.diveInfo.visibilityUnit) {
											const t = a.A.personalizeVisibilityUnit(
												e.diveInfo.visibilityUnit,
												c.Ay
											)
												.replace('[', '')
												.replace(']', '');
											return (0, u.jsx)(l.A, { ns: 'diving', content: t });
										}
										return '';
									},
								},
								waterType: {
									label: 'water_type',
									ns: 'diving',
									key: 'diveInfo.diveSettings',
									personalize: (e) => {
										if (e.diveInfo && e.diveInfo.diveSettings) {
											const t = a.A.personalizeDiveWaterType(
												e.diveInfo.diveSettings.waterType,
												e.diveInfo.diveSettings.waterDensity,
												c.Ay
											)
												.replace('[', '')
												.replace(']', '');
											return (0, u.jsx)(l.A, { ns: 'diving', content: t });
										}
										return '--';
									},
								},
								distance: {
									label: 'label_distance',
									ns: 'units',
									personalize: (e) => {
										var t;
										const i =
											(null === e ||
											void 0 === e ||
											null === (t = e.metadataDTO) ||
											void 0 === t
												? void 0
												: t.hasSplits) ||
											(null === e || void 0 === e ? void 0 : e.hasSplits);
										if (
											n.Ay.isResortSkiActivity(e.activityTypeDTO.typeKey) &&
											i
										) {
											const t = this.getSplitSummary(e, r.Di).distance;
											return a.A.personalizeDistance(
												t,
												e.activityTypeDTO.typeKey,
												e.unitOfPoolLength
											);
										}
										return a.A.personalizeDistance(
											e.summaryDTO.distance,
											e.activityTypeDTO.typeKey,
											e.unitOfPoolLength
										);
									},
									unitKey: (e) =>
										a.A.getDistanceUnitKey(
											e.activityTypeDTO.typeKey,
											e.summaryDTO.distance,
											e.unitOfPoolLength
										),
								},
								duration: {
									label: (e) =>
										a.A.getDurationLabelKey(e.activityTypeDTO.typeKey),
									ns: (e) =>
										n.Ay.isSurfingActivity(e.activityTypeDTO.typeKey)
											? 'activity'
											: 'units',
									personalize: (e) =>
										a.A.personalizeDuration(e.summaryDTO.duration),
								},
								calories: {
									label: 'label_calories',
									ns: 'units',
									personalize: (e) =>
										e.summaryDTO.calories
											? a.A.formatWholeNumber(e.summaryDTO.calories)
											: 0,
									unitKey: () => a.A.getCalorieUnitKey(),
								},
								averageSpeed: {
									label: (e) =>
										a.A.getAvgSpeedTypeLabelKey(e.activityTypeDTO.typeKey),
									ns: 'units',
									key: 'speedModel.avgSpeedOrPace',
									personalize: (e) =>
										e.speedModel.avgSpeedOrPace
											? e.speedModel.avgSpeedOrPace
											: '--',
									unitKey: (e) => e.speedModel.avgSpeedOrPaceUnit,
								},
								averageMovingSpeed: {
									label: (e) =>
										a.A.getAvgMovingSpeedTypeLabelKey(
											e.activityTypeDTO.typeKey
										),
									ns: 'units',
									key: 'speedModel.avgMovingSpeedOrPace',
									personalize: (e) =>
										e.speedModel.avgMovingSpeedOrPace
											? e.speedModel.avgMovingSpeedOrPace
											: '--',
									unitKey: (e) => e.speedModel.avgMovingSpeedOrPaceUnit,
								},
								avgGradeAdjustedSpeed: {
									label: 'avg_grade_adjusted_pace',
									ns: 'gap',
									key: 'speedModel.avgGradeAdjustedSpeedOrPace',
									personalize: (e) =>
										e.speedModel.avgGradeAdjustedSpeedOrPace
											? e.speedModel.avgGradeAdjustedSpeedOrPace
											: '--',
									unitKey: (e) => e.speedModel.avgGradeAdjustedSpeedOrPaceUnit,
								},
								avgPace: {
									label: 'label_avg_pace',
									ns: 'units',
									personalize: (e) =>
										e.speedModel.avgSpeedOrPace
											? e.speedModel.avgSpeedOrPace
											: '--',
									unitKey: (e) => e.speedModel.avgSpeedOrPaceUnit,
								},
								avgMovingPace: {
									label: 'label_avg_moving_pace',
									ns: 'units',
									personalize: (e) => e.speedModel.avgMovingSpeedOrPace,
									unitKey: (e) => e.speedModel.avgMovingSpeedOrPaceUnit,
								},
								maxSpeed: {
									label: (e) =>
										a.A.getMaxSpeedTypeLabelKey(e.activityTypeDTO.typeKey),
									ns: 'units',
									personalize: (e) =>
										e.movingDuration || e.maxSpeed
											? e.speedModel.maxSpeedOrPace
											: '--',
									unitKey: (e) => e.speedModel.maxSpeedOrPaceUnit,
								},
								maxPace: {
									label: 'label_max_pace',
									ns: 'units',
									key: 'speedPaceModel.paceModel.maxSpeedOrPace',
									personalize: (e) =>
										e.movingDuration || e.maxSpeed
											? e.speedModel.maxSpeedOrPace
											: '--',
									unitKey: (e) => e.speedModel.maxSpeedOrPaceUnit,
								},
								runDuration: {
									label: 'label_active_time',
									ns: 'activity',
									key: 'runActiveSplitSummary.duration',
									personalize: (e) => {
										const t = this.getSplitSummary(e, r.V2).duration;
										return t ? a.A.personalizeDuration(t) : '--';
									},
								},
								restDuration: {
									label: 'label_rest_time',
									ns: 'units',
									key: 'restSplitSummary.duration',
									personalize: (e) => {
										const t = this.getSplitSummary(e, r.RK).duration;
										return t ? a.A.personalizeDuration(t) : '--';
									},
								},
								movingDuration: {
									label: 'label_moving_time',
									ns: 'units',
									personalize: (e) =>
										e.movingDuration
											? a.A.personalizeDuration(e.movingDuration)
											: '--',
								},
								elapsedDuration: {
									label: 'label_elapsed_time',
									ns: 'units',
									personalize: (e) =>
										e.summaryDTO.elapsedDuration
											? a.A.personalizeDuration(e.summaryDTO.elapsedDuration)
											: '--',
								},
								runMovingTime: {
									label: 'label_run_moving_time',
									ns: 'activity',
									key: 'runMovingSplitSummary.duration',
									personalize: (e) => {
										const t = this.getSplitSummary(e, r.Di).duration;
										return t ? a.A.personalizeDuration(t) : '--';
									},
								},
								liftTime: {
									label: 'label_lift_time',
									ns: 'activity',
									key: 'liftSplitSummary.duration',
									personalize: (e) => {
										const t = this.getSplitSummary(e, r.nX).duration;
										return t ? a.A.personalizeDuration(t) : '--';
									},
								},
								resortSkiNoOfRuns: {
									label: 'number_of_runs',
									ns: 'activity',
									key: 'aliasModel.numberOfResortSkiRuns',
									personalize: (e) =>
										e.aliasModel.numberOfResortSkiRuns
											? e.aliasModel.numberOfResortSkiRuns
											: '--',
								},
								elevationGain: {
									label: (e) =>
										n.Ay.isFloorClimbingActivity(e.activityTypeDTO.typeKey)
											? 'label_elevation_gain'
											: 'label_total_ascent',
									ns: 'units',
									personalize: (e) => a.A.personalizeElevation(e.elevationGain),
									unitKey: () => a.A.getElevationUnitKey(),
								},
								elevationLoss: {
									label: (e) =>
										n.Ay.isFloorClimbingActivity(e.activityTypeDTO.typeKey)
											? 'label_elevation_loss'
											: 'label_total_descent',
									ns: 'units',
									personalize: (e) => {
										var t;
										const i =
											(null === e ||
											void 0 === e ||
											null === (t = e.metadataDTO) ||
											void 0 === t
												? void 0
												: t.hasSplits) ||
											(null === e || void 0 === e ? void 0 : e.hasSplits);
										if (
											n.Ay.isResortSkiActivity(e.activityTypeDTO.typeKey) &&
											i
										) {
											const t = this.getSplitSummary(e, r.Di).elevationLoss;
											return a.A.personalizeElevation(t);
										}
										return a.A.personalizeElevation(e.elevationLoss);
									},
									unitKey: () => a.A.getElevationUnitKey(),
								},
								minElevation: {
									label: 'label_min_elevation',
									ns: 'units',
									personalize: (e) => a.A.personalizeElevation(e.minElevation),
									unitKey: () => a.A.getElevationUnitKey(),
								},
								maxElevation: {
									label: 'label_max_elevation',
									ns: 'units',
									personalize: (e) => a.A.personalizeElevation(e.maxElevation),
									unitKey: () => a.A.getElevationUnitKey(),
								},
								averageHR: {
									label: 'label_avg_HR',
									ns: 'units',
									personalize: (e) =>
										e.averageHR ? a.A.formatWholeNumber(e.averageHR) : '--',
									unitKey: () => a.A.getHeartRateUnitKey(),
								},
								maxHR: {
									label: 'label_max_HR',
									ns: 'units',
									personalize: (e) =>
										e.maxHR ? a.A.formatWholeNumber(e.maxHR) : '--',
									unitKey: () => a.A.getHeartRateUnitKey(),
								},
								avgWheelchairCadence: {
									label: 'label_avg_wheelchair_cadence',
									ns: 'units',
									personalize: (e) =>
										e.avgWheelchairCadence
											? a.A.personalizeCadence(e.avgWheelchairCadence)
											: '--',
									unitKey: (e) =>
										a.A.getCadenceUnitKey(e.activityTypeDTO.typeKey),
								},
								maxWheelchairCadence: {
									label: 'label_max_wheelchair_cadence',
									ns: 'units',
									personalize: (e) =>
										e.avgWheelchairCadence
											? a.A.personalizeCadence(e.avgWheelchairCadence)
											: '--',
									unitKey: (e) =>
										a.A.getCadenceUnitKey(e.activityTypeDTO.typeKey),
								},
								averageRunCadence: {
									label: 'label_avg_run_cadence',
									ns: 'units',
									personalize: (e) =>
										e.averageRunCadence &&
										a.A.getCadenceSensorTypeFromActivityType(
											e.activityTypeDTO.typeKey
										) === o.A.Ped
											? a.A.personalizeCadence(e.averageRunCadence)
											: '--',
									unitKey: (e) =>
										a.A.getCadenceUnitKey(e.activityTypeDTO.typeKey),
								},
								maxRunCadence: {
									label: 'label_max_run_cadence',
									ns: 'units',
									personalize: (e) =>
										e.maxRunCadence &&
										a.A.getCadenceSensorTypeFromActivityType(
											e.activityTypeDTO.typeKey
										) === o.A.Ped
											? a.A.personalizeCadence(e.maxRunCadence)
											: '--',
									unitKey: (e) =>
										a.A.getCadenceUnitKey(e.activityTypeDTO.typeKey),
								},
								averageTemperature: {
									label: 'label_avg_temp',
									ns: 'units',
									personalize: (e) =>
										isNaN(e.averageTemperature)
											? '--'
											: a.A.personalizeTemperature(e.averageTemperature),
									unitKey: () => a.A.getTemperatureUnitKey(),
								},
								minTemperature: {
									label: (e) =>
										this.isDivingActivity(e.activityTypeDTO.typeKey)
											? 'min_water_temperature'
											: 'label_min_temp',
									ns: (e) =>
										n.Ay.isDivingActivity(e.activityTypeDTO.typeKey)
											? 'diving'
											: 'units',
									personalize: (e) =>
										isNaN(e.minTemperature)
											? '--'
											: a.A.personalizeTemperature(e.minTemperature),
									unitKey: () => a.A.getTemperatureUnitKey(),
								},
								maxTemperature: {
									label: 'label_max_temp',
									ns: 'units',
									personalize: (e) =>
										isNaN(e.maxTemperature)
											? '--'
											: a.A.personalizeTemperature(e.maxTemperature),
									unitKey: () => a.A.getTemperatureUnitKey(),
								},
								bestLap: {
									label: 'marq_best_laptime',
									ns: 'activity',
									personalize: (e) =>
										a.A.fromSecondsToDuration(e.minActivityLapDuration),
								},
								totalTime: {
									label: 'label_time_total',
									ns: 'units',
									personalize: (e) =>
										a.A.fromSecondsToDuration(e.autoRacingDuration),
								},
								numberOfRuns: {
									label: 'number_of_runs',
									ns: 'activity',
									personalize: (e) =>
										a.A.formatWholeNumber(e.numberOfRuns) || '--',
								},
								numberOfLaps: {
									label: 'marq_number_laps',
									ns: 'activity',
									personalize: (e) =>
										a.A.formatWholeNumber(e.numberOfLaps) || '--',
								},
								averageStrokes: {
									label: 'label_strokes',
									ns: 'units',
									personalize: (e) =>
										e.averageStrokes
											? a.A.personalizeCadence(e.averageStrokes)
											: '--',
									unitKey: (e) =>
										a.A.getCadenceUnitKey(e.activityTypeDTO.typeKey),
								},
								averageSwimCadence: {
									label: 'label_strokes',
									ns: 'units',
									personalize: (e) =>
										e.averageSwimCadence
											? a.A.personalizeCadence(e.averageSwimCadence)
											: '--',
									unitKey: (e) =>
										a.A.getCadenceUnitKey(e.activityTypeDTO.typeKey),
								},
								totalNumberOfStrokes: {
									label: (e) =>
										a.A.getTotalStrokesLabelKey(e.activityTypeDTO.typeKey),
									ns: 'units',
									personalize: (e) =>
										a.A.personalizeCadence(
											null === e || void 0 === e
												? void 0
												: e.totalNumberOfStrokes
										),
									unitKey: '',
								},
								verticalOscillation: {
									label: 'label_avg_vertical_oscillation',
									ns: 'units',
									personalize: (e) =>
										e.verticalOscillation
											? a.A.personalizeVerticalOscillation(
													e.verticalOscillation
												)
											: '--',
									unitKey: () => a.A.getVerticalOscillationUnitKey(),
								},
								groundContactTime: {
									label: 'label_avg_ground_contact_time',
									ns: 'units',
									personalize: (e) =>
										e.groundContactTime
											? a.A.personalizeGroundContactTime(e.groundContactTime)
											: '--',
									unitKey: () => a.A.getGroundContactTimeUnitKey(),
								},
								strideLength: {
									label: 'label_avg_stride_length',
									ns: 'units',
									personalize: (e) =>
										e.strideLength
											? a.A.personalizeAvgStrideLength(e.strideLength)
											: '--',
									unitKey: () => a.A.getAvgStrideLengthUnitKey(),
								},
								trainingEffect: {
									label: 'label_training_effect',
									ns: 'units',
									personalize: (e) =>
										e.trainingEffect
											? a.A.personalizeVerticalOscillation(e.trainingEffect)
											: '--',
								},
								averageBikeCadence: {
									label: (e) =>
										a.A.getAvgCadenceTypeLabelKey(e.activityTypeDTO.typeKey),
									ns: 'units',
									personalize: (e) =>
										e.averageBikeCadence
											? a.A.personalizeCadence(e.averageBikeCadence)
											: '--',
									unitKey: (e) =>
										a.A.getCadenceUnitKey(e.activityTypeDTO.typeKey),
								},
								maxBikeCadence: {
									label: (e) =>
										a.A.getMaxCadenceTypeLabelKey(e.activityTypeDTO.typeKey),
									ns: 'units',
									personalize: (e) =>
										e.maxBikeCadence
											? a.A.personalizeCadence(e.maxBikeCadence)
											: '--',
									unitKey: (e) =>
										a.A.getCadenceUnitKey(e.activityTypeDTO.typeKey),
								},
								averagePower: {
									label: 'label_avg_power',
									ns: 'units',
									personalize: (e, t) => {
										const i = n.Ay.isRunningActivity(e.activityTypeDTO.typeKey);
										return !e.averagePower || (i && !t)
											? '--'
											: a.A.personalizePower(e.averagePower);
									},
									unitKey: () => a.A.getPowerUnitKey(),
								},
								maxPower: {
									label: 'label_max_power',
									ns: 'units',
									personalize: (e, t) => {
										const i = n.Ay.isRunningActivity(e.activityTypeDTO.typeKey);
										return !e.maxPower || (i && !t)
											? '--'
											: a.A.personalizePower(e.maxPower);
									},
									unitKey: () => a.A.getPowerUnitKey(),
								},
								windData: {
									label: 'wind_data',
									ns: 'power_zone',
									personalize: (e) => {
										const {
											runPowerWindDataEnabled: t,
											hasRunPowerWindData: i,
										} = e.metadataDTO;
										return t && i
											? c.Ay.t('common:enabled')
											: t
												? c.Ay.t('common:unavailable')
												: !1 === t
													? c.Ay.t('common:disabled')
													: '--';
									},
								},
								maxPowerTwentyMinutes: {
									label: 'label_max_avg_power',
									ns: 'units',
									personalize: (e) =>
										e.maxPowerTwentyMinutes
											? a.A.personalizePower(e.maxPowerTwentyMinutes)
											: '--',
									unitKey: () => a.A.getPowerUnitKey(),
								},
								totalReps: {
									label: 'label_total_reps',
									ns: 'units',
									key: 'exerciseSets',
									personalize: (e) => a.A.zeroDash(this.getTotalRepCount(e)),
								},
								totalSets: {
									label: 'label_total_exercises',
									ns: 'units',
									key: 'exerciseSets',
									personalize: (e) => a.A.zeroDash(this.getActiveSetCount(e)),
								},
								avgRespirationRate: {
									label: 'label_average_respiration_rate',
									ns: 'units',
									personalize: (e) =>
										a.A.personalizeRespiration(e.avgRespirationRate),
									unitKey: () => a.A.getRespirationUnitKey(),
								},
								minRespirationRate: {
									label: 'label_min_respiration_rate',
									ns: 'units',
									personalize: (e) =>
										a.A.personalizeRespiration(e.minRespirationRate),
									unitKey: () => a.A.getRespirationUnitKey(),
								},
								maxRespirationRate: {
									label: 'label_max_respiration_rate',
									ns: 'units',
									personalize: (e) =>
										a.A.personalizeRespiration(e.maxRespirationRate),
									unitKey: () => a.A.getRespirationUnitKey(),
								},
								avgStress: {
									label: 'label_avg_stress',
									ns: 'units',
									personalize: (e) => a.A.personalizeStress(e.avgStress),
								},
								maxStress: {
									label: 'label_max_stress',
									ns: 'units',
									personalize: (e) => a.A.personalizeStress(e.maxStress),
								},
								startStress: {
									label: 'label_stress_start',
									ns: 'units',
									personalize: (e) => a.A.personalizeStress(e.startStress),
								},
								endStress: {
									label: 'label_stress_end',
									ns: 'units',
									personalize: (e) => a.A.personalizeStress(e.endStress),
								},
								differenceStress: {
									label: 'label_stress_change',
									ns: 'units',
									personalize: (e) => a.A.personalizeStress(e.differenceStress),
								},
								leftBalance: {
									label: 'label.leftRightBalance',
									ns: 'activity-api',
									personalize: (e) => {
										const t = a.A.personalizeLeftRightBalance(e.leftBalance),
											i = a.A.personalizeLeftRightBalance(100 - t);
										return e.leftBalance
											? (0, u.jsx)(
													l.A,
													{
														ns: 'units',
														content: a.A.getPowerBalanceUnitKey(),
														params: { 0: t, 1: i },
													},
													a.A.getPowerBalanceUnitKey()
												)
											: '-- L / -- R';
									},
								},
								normalizedPower: {
									label: 'label_normalized_power',
									ns: 'units',
									personalize: (e) => {
										const t = n.Ay.isRunningActivity(e.activityTypeDTO.typeKey);
										return e.normalizedPower && !t
											? a.A.personalizePower(e.normalizedPower)
											: '--';
									},
									unitKey: () => a.A.getPowerUnitKey(),
								},
								intensityFactor: {
									label: 'label_intensity_factor',
									ns: 'units',
									personalize: (e) =>
										e.intensityFactor
											? a.A.personalizeIntensityFactor(e.intensityFactor)
											: '--',
								},
								trainingStressScore: {
									label: 'label_training_stress_score',
									ns: 'units',
									personalize: (e) =>
										e.trainingStressScore
											? a.A.personalizeTSS(e.trainingStressScore)
											: '--',
								},
								noOfSplits: {
									label: 'total_climb_routes',
									ns: 'activity',
									key: 'climbSummary.noOfSplits',
									personalize: (e) =>
										a.A.formatWholeNumber(e.climbSummary.noOfSplits),
								},
								maxGradeValue: {
									label: 'label_max_difficulty',
									ns: 'activity',
									key: 'climbSummary.maxGradeValue',
									personalize: (e, t) =>
										!e.climbSummary ||
										(e.climbSummary && !e.climbSummary.maxGradeValue)
											? '--'
											: (0, s.Sx)(
													e.climbSummary.maxGradeValue.scale,
													e.climbSummary.maxGradeValue.valueKey,
													t
												),
								},
								climbTime: {
									label: 'climb_active_time',
									ns: 'activity',
									key: 'climbSummary.duration',
									personalize: (e) =>
										e.climbSummary.duration
											? a.A.personalizeDuration(e.climbSummary.duration)
											: '--',
								},
								ascent: {
									label: 'activity_total_ascent',
									ns: 'activity',
									key: 'climbSummary.elevationGain',
									personalize: (e) =>
										a.A.personalizeElevation(e.climbSummary.elevationGain),
									unitKey: () => a.A.getElevationUnitKey(),
								},
								maxAscent: {
									label: 'climb_max_ascent',
									ns: 'activity',
									key: 'climbSummary.maxElevationGain',
									personalize: (e) =>
										a.A.personalizeElevation(e.climbSummary.maxElevationGain),
									unitKey: () => a.A.getElevationUnitKey(),
								},
								numClimbsAttempted: {
									label: 'climb_routes_attempted',
									ns: 'activity',
									key: 'climbSummary.numClimbsAttempted',
									personalize: (e) =>
										a.A.formatWholeNumber(e.climbSummary.numClimbsAttempted),
								},
								numClimbsCompleted: {
									label: 'climb_routes_completed',
									ns: 'activity',
									key: 'climbSummary.numClimbsCompleted',
									personalize: (e) =>
										a.A.formatWholeNumber(e.climbSummary.numClimbsCompleted),
								},
								numClimbSends: {
									label: 'climb_sends',
									ns: 'activity',
									key: 'climbSummary.numClimbSends',
									personalize: (e) =>
										a.A.formatWholeNumber(e.climbSummary.numClimbSends),
								},
								numFalls: {
									label: 'climb_falls',
									ns: 'activity',
									key: 'climbSummary.numFalls',
									personalize: (e) =>
										a.A.formatWholeNumber(e.climbSummary.numFalls),
								},
								surfTotalWaves: {
									label: 'total_waves_surf',
									ns: 'activity',
									key: 'surfSummary.noOfSplits',
									personalize: (e) => {
										const { noOfSplits: t } = this.getSplitSummary(
											e,
											'SURF_ACTIVE'
										);
										return t || '--';
									},
								},
								wakesportsTotalRuns: {
									label: 'total_runs_wakesports',
									ns: 'activity',
									key: 'surfSummary.noOfSplits',
									personalize: (e) => {
										const { noOfSplits: t } = this.getSplitSummary(
											e,
											'SURF_ACTIVE'
										);
										return t || '--';
									},
								},
								surfLongestWave: {
									label: 'surf_longest_wave_label',
									ns: 'activity',
									key: 'surfSummary.maxDistance',
									personalize: (e) => {
										const { maxDistance: t } = this.getSplitSummary(
											e,
											'SURF_ACTIVE'
										);
										return t ? a.A.personalizeWaveDistance(t) : '--';
									},
									unitKey: () => a.A.getWaveDistanceUnitKey(),
								},
								wakesportsLongestRun: {
									label: 'wakesports_longest_run_label',
									ns: 'activity',
									key: 'surfSummary.maxDistance',
									personalize: (e) => {
										const { maxDistance: t } = this.getSplitSummary(
											e,
											'SURF_ACTIVE'
										);
										return t ? a.A.personalizeWaveDistance(t) : '--';
									},
									unitKey: () => a.A.getWaveDistanceUnitKey(),
								},
								surfTime: {
									label: 'surf_time_label',
									ns: 'activity',
									key: 'surfSummary.duration',
									personalize: (e) => {
										const { duration: t } = this.getSplitSummary(
											e,
											'SURF_ACTIVE'
										);
										return t ? a.A.personalizeDuration(t) : '--';
									},
								},
								activeTime: {
									label: 'label_active_time',
									ns: 'activity',
									key: 'surfSummary.duration',
									personalize: (e) => {
										const { duration: t } = this.getSplitSummary(
											e,
											'SURF_ACTIVE'
										);
										return t ? a.A.personalizeDuration(t) : '--';
									},
								},
								maxSpeedSurf: {
									label: 'max_speed_surf',
									ns: 'activity',
									key: 'surfSummary.maxSpeed',
									personalize: (e) =>
										a.A.personalizeSpeed(
											this.getSplitSummary(e, 'SURF_ACTIVE').maxSpeed
										),
									unitKey: () => a.A.getSpeedTypeKey(),
								},
								avgSpeedSurf: {
									label: 'avg_surf_speed',
									ns: 'activity',
									key: 'surfSummary.averageSpeed',
									personalize: (e) => {
										const { averageSpeed: t } = this.getSplitSummary(
											e,
											'SURF_ACTIVE'
										);
										return t ? a.A.personalizeSpeed(t) : '--';
									},
									unitKey: () => a.A.getSpeedTypeKey(),
								},
								avgSpeedWakesportsRun: {
									label: 'avg_run_speed',
									ns: 'activity',
									key: 'surfSummary.averageSpeed',
									personalize: (e) => {
										const { averageSpeed: t } = this.getSplitSummary(
											e,
											'SURF_ACTIVE'
										);
										return t ? a.A.personalizeSpeed(t) : '--';
									},
									unitKey: () => a.A.getSpeedTypeKey(),
								},
								totalRestTime: {
									label: 'total_rest_time',
									ns: 'activity',
									key: 'totalRestTime',
									personalize: (e) => {
										let t = this.getActivityRestTime(
											e,
											e.activityTypeDTO.typeKey
										);
										return this.isHiitActivity(e.activityTypeDTO.typeKey)
											? a.A.personalizeDuration(
													e.summaryDTO.duration - e.movingDuration
												)
											: t && t.splitType === s.h5.CLIMB_REST
												? a.A.personalizeDuration(t.duration)
												: '--';
									},
								},
								avgTempo: {
									label: 'label_avg_tempo',
									ns: 'activity',
									personalize: (e) =>
										n.Ay.isDanceActivity(e.activityTypeDTO.typeKey) &&
										e.averageRunCadence
											? a.A.personalizeCadence(e.averageRunCadence)
											: '--',
									unitKey: (e) =>
										a.A.getCadenceUnitKey(e.activityTypeDTO.typeKey),
								},
								steps: {
									label: 'label_steps',
									ns: 'units',
									personalize: (e) =>
										e.steps ? a.A.formatWholeNumber(e.steps) : '--',
								},
								avgJumpRopeCadence: {
									label: 'label_speed',
									ns: 'units',
									personalize: (e) =>
										e.avgJumpRopeCadence
											? a.A.formatWholeNumber(e.avgJumpRopeCadence)
											: '--',
									unitKey: (e) =>
										a.A.getCadenceUnitKey(e.activityTypeDTO.typeKey),
								},
							};
						},
						getAliasesModelForActivity(e) {
							let t = {};
							if (n.Ay.isResortSkiActivity(e.activityTypeDTO.typeKey)) {
								var i;
								var a;
								if (
									(null === e ||
									void 0 === e ||
									null === (i = e.metadataDTO) ||
									void 0 === i
										? void 0
										: i.hasSplits) ||
									(null === e || void 0 === e ? void 0 : e.hasSplits)
								)
									t.numberOfResortSkiRuns = this.getSplitSummary(
										e,
										r.nX
									).noOfSplits;
								else
									t.numberOfResortSkiRuns =
										null === e ||
										void 0 === e ||
										null === (a = e.metadataDTO) ||
										void 0 === a
											? void 0
											: a.lapCount;
							}
							return (
								n.Ay.isAutoRacingActivity(e.activityTypeDTO.typeKey) &&
									((t.numberOfLaps = e.lapCount),
									(t.autoRacingDuration = e.duration)),
								t
							);
						},
						isRepCounting: function (e) {
							return n.Ay.isRepCounting(e);
						},
						isHiitActivity: function (e) {
							return n.Ay.isHiitActivity(e);
						},
						isDivingActivity: function (e) {
							return n.Ay.isDivingActivity(e);
						},
						getActivityRestTime: function (e, t) {
							return n.Ay.isIndoorClimbingActivity(t) ||
								n.Ay.isBoulderingActivity(t)
								? this.getSplitSummary(e, s.h5.CLIMB_REST)
								: this.isHiitActivity(t)
									? a.A.personalizeDuration(
											e.summaryDTO.duration - e.movingDuration
										)
									: void 0;
						},
						getTotalRepCount: function (e) {
							const { typeKey: t } = e.activityTypeDTO;
							let i = 0;
							if (n.Ay.isJumpRopeActivity(t)) {
								var a;
								i = null !== (a = e.totalReps) && void 0 !== a ? a : 0;
							} else {
								const t = e.exerciseSets;
								if (t)
									for (let e = 0, n = t.length; e < n; e++)
										'REST' !== t[e].setType && (i += t[e].repetitionCount);
							}
							return i;
						},
						getActiveSetCount: function (e) {
							const t = e.exerciseSets;
							let i = 0;
							if (t)
								for (let n = 0, a = t.length; n < a; n++)
									'REST' !== t[n].setType && i++;
							else i += 1;
							return i;
						},
						getPropertyByCombinedKey: (e, t) =>
							e.split('.').reduce(function (e, t) {
								return e ? e[t] : null;
							}, t),
						getActivityColor: (e) => p[e],
						getMetricsForActivityType(e) {
							let t = this.getAllMetrics(),
								i = {};
							e.forEach((e) => {
								let n = C[e.activityTypeDTO.typeKey];
								n &&
									n.forEach((e) => {
										void 0 === i[e] && (i[e] = t[e]);
									});
							});
							const n = e.map((e) => e.activityTypeDTO.typeKey);
							return (
								Object.keys(t).forEach((e) => {
									((e) => n.some((t) => g[t] && g[t].includes(e)))(e) ||
										void 0 !== i[e] ||
										(i[e] = t[e]);
								}),
								i
							);
						},
						getSplitSummary(e, t) {
							if (e.splitSummaries) {
								return e.splitSummaries.find((e) => e.splitType === t) || {};
							}
							return {};
						},
						supportsLaps: (e) =>
							!(
								n.Ay.isIndoorClimbingActivity(e) ||
								n.Ay.isBoulderingActivity(e) ||
								n.Ay.isSurfingActivity(e) ||
								n.Ay.isEsportActivity(e) ||
								n.Ay.isDivingActivity(e) ||
								n.Ay.isHiitActivity(e) ||
								n.Ay.isMeditationActivity(e) ||
								n.Ay.isBreathworkActivity(e)
							),
					},
					I = a.A.isMetricMeasurementSystem() ? 'bar' : 'psi',
					v = [
						{
							dataKey: 'directElevation',
							unitKey: a.A.getElevationUnitKey(),
							labelKey: 'label_elevation',
							ns: 'units',
						},
						{
							dataKey: 'directSpeed',
							unitKey: a.A.getSpeedUnitKey(),
							labelKey: 'label_speed',
							ns: 'units',
						},
						{
							dataKey: 'directGradeAdjustedSpeed',
							unitKey: a.A.getSpeedUnitKey(),
							labelKey: 'avg_grade_adjusted_pace',
							ns: 'gap',
						},
						{
							dataKey: 'directHeartRate',
							unitKey: a.A.getHeartRateUnitKey(),
							labelKey: 'label_heart_rate',
							ns: 'units',
						},
						{
							dataKey: 'directPotentialStamina',
							unitKey: 'percentage_unit',
							labelKey: 'real_time_stamina_stamina_potential',
							ns: 'activity',
						},
						{
							dataKey: 'directPerformanceCondition',
							unitKey: '',
							labelKey: 'label_performance_condition',
							ns: 'units',
						},
						{
							dataKey: 'directStrideLength',
							unitKey: a.A.getAvgStrideLengthUnitKey(),
							labelKey: 'label_stride_length',
							ns: 'units',
						},
						{
							dataKey: 'directDoubleCadence',
							unitKey: 'run_cadence_unit',
							labelKey: 'label_cadence',
							ns: 'units',
						},
						{
							dataKey: 'directPower',
							unitKey: a.A.getPowerUnitKey(),
							labelKey: 'label_power',
							ns: 'units',
						},
						{
							dataKey: 'directVerticalOscillation',
							unitKey: a.A.getVerticalOscillationUnitKey(),
							labelKey: 'label_vert_oscillation',
							ns: 'units',
						},
						{
							dataKey: 'directGroundContactTime',
							unitKey: a.A.getGroundContactTimeUnitKey(),
							labelKey: 'label_ground_contact_time',
							ns: 'units',
						},
						{
							dataKey: 'directGroundContactBalanceLeft',
							unitKey: 'percentage_unit',
							labelKey: 'label_ground_contact_time_balance',
							ns: 'units',
						},
						{
							dataKey: 'directRespirationRate',
							unitKey: 'label_respiration_rate_unit',
							labelKey: 'label_respiration_rate',
							ns: 'units',
						},
						{
							dataKey: 'directAirTemperature',
							unitKey: a.A.getTemperatureUnitKey(),
							labelKey: 'label_temperature',
							ns: 'units',
						},
						{
							dataKey: 'directBikeCadence',
							unitKey: 'bike_cadence_unit',
							labelKey: 'label_bike_cadence',
							ns: 'units',
						},
						{
							dataKey: 'directTimestamp',
							unitKey: 'label_time_total',
							labelKey: 'label_time',
							ns: 'units',
						},
						{
							dataKey: 'directRightBalance',
							unitKey: '',
							labelKey: 'right_balance',
							ns: 'activity',
						},
						{
							dataKey: 'directLeftPlatformCenterOffset',
							unitKey: 'platform_center_offset_unit',
							labelKey: 'label_cd_left_pedal_center_offset',
							ns: 'activity',
						},
						{
							dataKey: 'directRightPlatformCenterOffset',
							unitKey: 'platform_center_offset_unit',
							labelKey: 'label_cd_right_pedal_center_offset',
							ns: 'activity',
						},
						{
							dataKey: 'directLeftPowerPhaseStart',
							unitKey: 'degree_unit',
							labelKey: 'label_cd_l_power_phase_start',
							ns: 'units',
						},
						{
							dataKey: 'directLeftPowerPhasePeakStart',
							unitKey: 'degree_unit',
							labelKey: 'label_cd_l_peak_power_phase',
							ns: 'units',
						},
						{
							dataKey: 'directLeftPowerPhaseEnd',
							unitKey: 'degree_unit',
							labelKey: 'label_cd_l_power_phase',
							ns: 'units',
						},
						{
							dataKey: 'directLeftPowerPhasePeakEnd',
							unitKey: 'degree_unit',
							labelKey: 'label_cd_l_peak_power_phase',
							ns: 'units',
						},
						{
							dataKey: 'directFlow',
							unitKey: '',
							labelKey: 'label_flow',
							ns: 'activity',
						},
						{
							dataKey: 'directGrit',
							unitKey: '',
							labelKey: 'label_grit',
							ns: 'activity',
						},
						{
							dataKey: 'weightedMeanSpeed',
							unitKey: a.A.getSwimPaceUnitKey(),
							labelKey: 'label_avg_moving_speed',
							ns: 'units',
						},
						{
							dataKey: 'sumStrokes',
							unitKey: a.A.getStrokesUnitKey(),
							labelKey: 'label_strokes',
							ns: 'units',
						},
						{
							dataKey: 'weightedMeanSwolf',
							unitKey: 'label_swolf',
							labelKey: 'label_swolf',
							ns: 'units',
						},
						{
							dataKey: 'directSwimCadence',
							unitKey: '',
							labelKey: 'label_strokes',
							ns: 'units',
						},
						{
							dataKey: 'directDepth',
							unitKey: a.A.getDepthUnitKey(),
							labelKey: 'label_depth_profile',
							ns: 'diving',
						},
						{
							dataKey: 'tankPressure',
							unitKey: a.A.personalizePressureUnitKey({ unitKey: I }),
							labelKey: 'label_tank_pressure',
							ns: 'diving',
						},
						{
							dataKey: 'directVerticalSpeed',
							unitKey: '',
							labelKey: a.A.isMetricMeasurementSystem()
								? 'label_pace_unit_metric'
								: 'label_pace_unit_statute',
							ns: 'units',
						},
						{
							dataKey: 'directCurrentStress',
							unitKey: '',
							labelKey: 'label_stress',
							ns: 'stress',
						},
						{
							dataKey: 'directStrokeCadence',
							unitKey: 'rowing_cadence_unit',
							labelKey: 'stroke_cadence',
							ns: 'units',
						},
						{
							dataKey: 'directVerticalRatio',
							unitKey: a.A.getVerticalRatioUnitKey(),
							labelKey: 'label_vert_ratio',
							ns: 'units',
						},
						{
							dataKey: 'directWheelchairCadence',
							unitKey: 'wheelchair_cadence_unit',
							labelKey: 'label_wheelchair_cadence',
							ns: 'units',
						},
						{
							dataKey: 'directJumpRopeCadence',
							unitKey: 'bike_cadence_unit',
							labelKey: 'label_speed',
							ns: 'units',
						},
					];
			},
			617592: (e, t, i) => {
				'use strict';
				i.d(t, { U: () => n, g: () => a });
				const n = 25,
					a = {
						EARNED: 'EARNED',
						AVAILABLE: 'AVAILABLE',
						COMPARISON: 'COMPARISON',
					};
			},
			605246: (e, t, i) => {
				'use strict';
				i.d(t, { p: () => n });
				const n = '/blood-pressure';
			},
			697054: (e, t, i) => {
				'use strict';
				i.d(t, { Aw: () => m, ax: () => g, rT: () => h });
				var n = i(34581),
					a = i(352406),
					s = i(29273),
					r = i(450566),
					o = i(798718),
					l = i(80879),
					c = i(785275);
				l.Ay.loadNamespaces([
					'units',
					'userprofile',
					'common',
					'challengewidget',
				]);
				const d = (e, t) => u(e, t, !0),
					u = (e, t, i) => {
						switch (
							(null === t || void 0 === t ? void 0 : t.badgeUnitKey) ||
							t
						) {
							case o.kp.distance:
								return s.A.roundDecimal(s.A.convertDistance(e), i);
							case o.kp.distanceAlt:
								return s.A.roundDecimal(s.A.convertMetersFt(e), i);
							case o.kp.miles:
								return s.A.roundDecimal(
									e * s.A.ConversionFactors.MetersToMiles,
									i
								);
							case o.kp.seconds:
								return s.A.roundDecimal(e / 3600, i);
							case o.kp.steps:
								return s.A.formatWholeNumber(e);
							case o.kp.activities:
							case o.kp.days:
							default:
								return e;
						}
					},
					p = (e) => {
						switch (
							(null === e || void 0 === e ? void 0 : e.badgeUnitKey) ||
							e
						) {
							case o.kp.distance:
								return l.Ay.t(`units:${s.A.getDistanceUnitKey()}`);
							case o.kp.distanceAlt:
								return l.Ay.t(`units:${s.A.getMetersFtUnitKey()}`);
							case o.kp.miles:
								return l.Ay.t('units:distance_unit_statute');
							case o.kp.activities:
								return l.Ay.t('userprofile:activities').toLocaleLowerCase();
							case o.kp.days:
								return l.Ay.t('common:label_days').toLocaleLowerCase();
							case o.kp.steps:
								return l.Ay.t('common:steps').toLocaleLowerCase();
							case o.kp.kilocalories:
								return l.Ay.t('units:kilocalories_abbr').toLocaleLowerCase();
							case o.kp.weeks:
								return l.Ay.t('units:progress_weeks').toLocaleLowerCase();
							case o.kp.likes:
								return l.Ay.t('units:progress_likes').toLocaleLowerCase();
							case o.kp.seconds:
								return l.Ay.t(
									'units:duration_hours_lowercase'
								).toLocaleLowerCase();
							default:
								return '';
						}
					},
					y = (e) => {
						0 === e && (e = 1);
						const t = Object.keys(o.kp)[e - 1];
						return o.kp[t] || null;
					};
				const h = (e, t = !1) => {
						if (!e) return '';
						const i = y(e.badgeUnitId),
							s = d(e.badgeTargetValue, i),
							r = p(i);
						if (t) return `${s} ${r}`;
						const o = (function (e) {
							const t = n.A.get('preferredLocale'),
								i = a.A.getFullLocale(t);
							return new Intl.NumberFormat(i, { notation: 'compact' }).format(
								e
							);
						})(e.approximateValue);
						let u = '';
						switch (e.challengeCategoryId) {
							case c.nJ.VIRTUAL_HIKE:
								u = l.Ay.t('challengewidget:adventure_approximate_step_count', {
									0: o,
								});
								break;
							case c.nJ.VIRTUAL_CLIMB:
								u = l.Ay.t(
									'challengewidget:adventure_approximate_floor_count',
									{ 0: o }
								);
						}
						return u ? `${s} ${r} (${u})` : `${s} ${r}`;
					},
					g = (e, t, i = !1) => {
						if (!t) return '';
						const { badgeProgressValue: n, badgeTargetValue: a } = t,
							r = Math.floor((100 * n) / a),
							l = y(t.badgeUnitId);
						if (
							o.kp.seconds ===
							((null === l || void 0 === l ? void 0 : l.badgeUnitKey) || l)
						)
							return ((e, t, i) => {
								if (!t) return '';
								const { badgeProgressValue: n, badgeTargetValue: a } = t,
									r = Math.floor((100 * n) / a),
									o = s.A.personalizeStandardTimeDuration(n, e),
									l = s.A.personalizeStandardTimeDuration(a, e);
								return e(
									'challengewidget:challenge_progress',
									i ? { 0: o, 1: l } : { 0: o, 1: `${l} \u2022 ${r}%` }
								);
							})(e, t, i);
						const c = ((e, t, i) => {
								let n = !1;
								return e >= t ? ((n = !0), u(e, i, n)) : u(e, i, n);
							})(n, a, l),
							h = d(a, l),
							g = p(l);
						return e(
							'challengewidget:challenge_progress',
							i
								? { 0: c, 1: `${h} ${g}` }
								: { 0: c, 1: `${h} ${g} \u2022 ${r}%` }
						);
					},
					m = (e) => {
						const t = new Date(e.joinDateLocal),
							i = new Date(e.badgeEarnedDate),
							n = (0, r.qi)(t, i) + 1,
							a = s.A.formatWholeNumber(n);
						return n > 1
							? l.Ay.t('challengewidget:expedition_complete_in_days', { 0: a })
							: l.Ay.t('challengewidget:expedition_complete_in_1_day');
					};
			},
			785275: (e, t, i) => {
				'use strict';
				i.d(t, {
					AB: () => r,
					Ip: () => d,
					Kj: () => c,
					VW: () => u,
					ad: () => s,
					hh: () => l,
					nJ: () => a,
					pu: () => n,
					x0: () => o,
				});
				const n = {
						GROUP_CHALLENGE: 1,
						ADHOC_CHALLENGE: 2,
						VIVOKID_CHALLENGE: 3,
						TEAM_STEPS_VIVOKID_CHALLENGE: 4,
					},
					a = {
						RUNNING: 1,
						CYCLING: 2,
						SWIMMING: 3,
						WELLNESS_STEPS_COUNT: 4,
						WALKING: 5,
						YOGA: 6,
						STRENGTH: 7,
						HIKING: 8,
						FITNESS_COMPOSITE: 9,
						CHALLENGE_COMPOSITE: 10,
						CARDIO: 11,
						VIRTUAL_HIKE: 12,
						VIRTUAL_CLIMB: 13,
					},
					s = { ONE_DAY: 4, WEEKEND: 3, WEEK: 0, MONTH: 1, CUSTOM: 2 },
					r = {
						[s.ONE_DAY]: 'custom',
						[s.WEEKEND]: 'custom',
						[s.WEEK]: 'week',
						[s.MONTH]: 'month',
						[s.CUSTOM]: 'custom',
					},
					o = {
						WALKING: 0,
						RUNNING: 1,
						CYCLING: 2,
						SWIMMING: 3,
						WELLNESS_STEPS_COUNT: 4,
						WELLENSS_STEPS_DISTANCE: 5,
						CALORIES_BURNED: 6,
						ACTIVE_MINUTES: 7,
						GOALS: 8,
						WELLNESS_STEPS_COUNT_TEAMS_AVERAGE: 9,
						WELLNESS_PUSHES_COUNT: 10,
						PUSHING_DISTANCE: 11,
					},
					l = {
						[o.WALKING]: 'walking',
						[o.RUNNING]: 'running',
						[o.CYCLING]: 'cycling',
						[o.SWIMMING]: 'swimming',
						[o.WELLNESS_STEPS_COUNT]: 'steps',
						[o.WELLENSS_STEPS_DISTANCE]: 'steps_distance',
						[o.CALORIES_BURNED]: 'calories',
						[o.WELLNESS_PUSHES_COUNT]: 'pushes',
						[o.PUSHING_DISTANCE]: 'para_sports',
					},
					c = {
						ALL_CHALLENGES: 'all_challenges',
						ADVENTURES: 'adventures',
						STEPS: 'steps',
						RUNNING: 'running',
						CYCLING: 'cycling',
						STRENGTH: 'strength',
						SWIMMING: 'swimming',
						WALKING: 'walking',
						HIKING: 'hiking',
						YOGA: 'yoga',
						CARDIO: 'cardio',
						PUSHES: 'wheelchair_pushes',
						PARASPORTS: 'para_sports',
					},
					d = [
						{
							type: c.ADVENTURES,
							ns: 'challengewidget',
							content: 'expeditions',
						},
						{
							type: c.STEPS,
							ns: 'activity_types',
							content: 'activity_type_steps',
						},
						{
							type: c.RUNNING,
							ns: 'activity_types',
							content: 'activity_type_running',
						},
						{
							type: c.CYCLING,
							ns: 'activity_types',
							content: 'activity_type_cycling',
						},
						{ type: c.STRENGTH, ns: 'workout', content: 'workout.strength' },
						{
							type: c.SWIMMING,
							ns: 'activity_types',
							content: 'activity_type_swimming',
						},
						{
							type: c.WALKING,
							ns: 'activity_types',
							content: 'activity_type_walking',
						},
						{
							type: c.HIKING,
							ns: 'activity_types',
							content: 'activity_type_hiking',
						},
						{
							type: c.YOGA,
							ns: 'activity_types',
							content: 'activity_type_yoga',
						},
						{
							type: c.PUSHES,
							ns: 'activity_types',
							content: 'activity_type_wheelchair_pushes',
						},
						{
							type: c.PARASPORTS,
							ns: 'activity_types',
							content: 'activity_type_para_sports',
						},
					],
					u = {
						READY: 0,
						STARTED: 1,
						STOPPED: 2,
						LOCKED: 3,
						COMPLETED: 4,
						FULL: 5,
					};
			},
			999205: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => j });
				var n = i(228748),
					a = i(638761),
					s = i.n(a),
					r = i(765722),
					o = i(698164),
					l = i(502290),
					c = i(668712),
					d = i(946186),
					u = i.n(d),
					p = i(882155),
					y = i.n(p),
					h = i(127433),
					g = i.n(h),
					m = i(188626),
					A = i.n(m),
					_ = i(108990),
					E = i.n(_),
					T = i(389827),
					C = i.n(T),
					S = i(24217),
					I = {};
				(I.styleTagTransform = C()),
					(I.setAttributes = A()),
					(I.insert = g().bind(null, 'head')),
					(I.domAPI = y()),
					(I.insertStyleElement = E());
				u()(S.A, I);
				const v = S.A && S.A.locals ? S.A.locals : void 0;
				var f = i(717776);
				const D = ({
						disabled: e,
						textFieldClassName: t,
						divRef: i,
						handleKeyDown: a,
						handleKeyUp: s,
						handleBlur: r,
						handleFocus: o,
						handleInput: l,
						handleCompositionStart: c,
						handleCompositionEnd: d,
						handlePaste: u,
						showPlaceholder: p,
						placeholder: y,
						shortenPlaceholder: h,
					}) => {
						const {
							containerRef: g,
							placeholderRef: m,
							shortenPlaceholderRef: A,
						} = (function () {
							const e = (0, n.useRef)(null),
								t = (0, n.useRef)(null),
								i = (0, n.useRef)(null),
								a = (0, n.useRef)(null),
								s = () => {
									t.current &&
										i.current &&
										a.current &&
										(t.current.offsetWidth - 12 < i.current.offsetWidth
											? ((i.current.style.visibility = 'hidden'),
												(a.current.style.visibility = 'visible'))
											: ((a.current.style.visibility = 'hidden'),
												(i.current.style.visibility = 'visible')));
								};
							return (
								(0, n.useEffect)(() => {
									if (t.current)
										return (
											(e.current = new ResizeObserver(s)),
											e.current.observe(t.current),
											() => {
												(t.current = null),
													e.current && e.current.disconnect(),
													(e.current = null),
													(i.current = null),
													(a.current = null);
											}
										);
								}, []),
								{ containerRef: t, placeholderRef: i, shortenPlaceholderRef: a }
							);
						})();
						return (0, f.jsxs)('div', {
							ref: g,
							className: v.editorTextFieldContainer,
							children: [
								(0, f.jsx)('div', {
									ref: i,
									className: `${v.editorTextField} ${t}`,
									contentEditable: !e,
									suppressContentEditableWarning: !0,
									onInput: l,
									onCompositionStart: c,
									onCompositionEnd: d,
									onKeyDown: a,
									onKeyUp: s,
									onBlur: r,
									onFocus: o,
									onPaste: u,
								}),
								p &&
									y &&
									(0, f.jsxs)(f.Fragment, {
										children: [
											(0, f.jsx)('div', {
												ref: m,
												className: `${t} ${v.editorPlaceholder}`,
												children: y,
											}),
											(0, f.jsx)('div', {
												ref: A,
												className: `${t} ${v.editorPlaceholder}`,
												style: { visibility: 'hidden' },
												children: h,
											}),
										],
									}),
							],
						});
					},
					N = n.memo(D);
				var R = i(242865),
					b = i(115883),
					L = i(583473),
					P = i(308508),
					O = {};
				(O.styleTagTransform = C()),
					(O.setAttributes = A()),
					(O.insert = g().bind(null, 'head')),
					(O.domAPI = y()),
					(O.insertStyleElement = E());
				u()(P.A, O);
				const w = P.A && P.A.locals ? P.A.locals : void 0,
					F = ({
						suggestions: e,
						keyboardFocusIndex: t,
						handleMouseOver: i,
						handleClick: n,
						keyboardTargetRef: a,
					}) =>
						(0, f.jsx)('ul', {
							className: w.suggestions,
							children: e.map((e, s) => {
								const r = e.fullName || e.displayName;
								return (0, f.jsx)(
									'li',
									{
										role: 'option',
										className: w.suggestion,
										'data-index': s,
										'data-user-profile-id': e.userProfileId,
										'data-display-name': e.displayName,
										'aria-label': r,
										'aria-selected': t === s,
										onMouseOver: i,
										onClick: n,
										tabIndex: s,
										ref: t === s ? a : null,
										children: (0, f.jsxs)('div', {
											className: w.anchor,
											children: [
												(0, f.jsxs)('div', {
													className: w.avatarWrapper,
													children: [
														(0, f.jsx)('img', {
															className: w.avatar,
															role: 'presentation',
															src:
																e.profileImage ||
																e.profileImageUrlSmall ||
																b.Mg,
														}),
														'number' === typeof e.userLevel &&
															(0, f.jsx)(L.A, {
																level: e.userLevel,
																small: !0,
															}),
													],
												}),
												(0, f.jsxs)('div', {
													className: w.nameWrapper,
													children: [
														(0, f.jsx)('div', {
															className: w.username,
															children: r,
														}),
														e.location &&
															(0, f.jsx)('div', {
																className: w.location,
																children: e.location,
															}),
													],
												}),
											],
										}),
									},
									e.displayName
								);
							}),
						}),
					k = n.memo(F),
					U = ({
						forwardedRef: e,
						position: t,
						suggestions: i,
						keyboardFocusIndex: a,
						handleMouseOver: s,
						handleClick: r,
						portalElement: o,
					}) => {
						const l = (0, n.useRef)(null);
						if (
							((0, n.useEffect)(() => {
								if (null === a || !e || !e.current || !l.current) return;
								const t = e.current.getBoundingClientRect(),
									i = l.current.getBoundingClientRect(),
									{ offsetTop: n } = l.current;
								i.top < t.top
									? (e.current.scrollTop = n)
									: i.bottom > t.bottom &&
										(e.current.scrollTop = n + i.height - t.height);
							}, [a]),
							null === t)
						)
							return null;
						const c = (0, f.jsx)('div', {
							className: w.suggestionsOverlay,
							style: t,
							ref: e,
							children: (0, f.jsx)(k, {
								suggestions: i,
								keyboardFocusIndex: a,
								handleMouseOver: s,
								handleClick: r,
								keyboardTargetRef: l,
							}),
						});
						return o ? R.createPortal(c, o) : c;
					},
					M = n.memo(U);
				var G = i(959546);
				function x({
					enableMention: e,
					defaultValue: t,
					maxLength: i,
					triggerPrefix: a,
					cancelPostfix: s,
					placement: r,
					suggestions: o,
					handleSearch: c,
					onChange: d,
					onBlur: u,
					portalElement: p,
					ignorePortalLayout: y,
				}) {
					const {
							overlayRef: h,
							overlayPos: g,
							setOverlayPos: m,
							keyboardFocusIndexRef: A,
							shiftSuggestionFocus: _,
							keyboardFocusIndex: E,
							handleMouseOver: T,
						} = (function ({ suggestions: e }) {
							const t = (0, n.useRef)(null),
								[i, a] = (0, n.useState)(null),
								[s, r] = (0, n.useState)(null),
								o = (0, n.useRef)(s);
							o.current = s;
							const l = (0, n.useCallback)(
								(t) => {
									let i = e.length || 0;
									if (!i) return;
									const n = (o.current + t + i) % i;
									r(n);
								},
								[e]
							);
							return (
								(0, n.useEffect)(() => {
									e &&
										0 !== e.length &&
										(null === o.current
											? r(0)
											: o.current > e.length - 1 && r(e.length - 1));
								}, [e]),
								{
									overlayRef: t,
									overlayPos: i,
									setOverlayPos: a,
									keyboardFocusIndexRef: o,
									shiftSuggestionFocus: l,
									keyboardFocusIndex: s,
								}
							);
						})({ suggestions: o }),
						C = (0, n.useRef)(null);
					C.current = p;
					const S = (0, n.useRef)(null);
					S.current = o;
					const I = (0, n.useRef)(null),
						v = (0, n.useRef)(null),
						[f, D] = (0, n.useState)({
							mentioning: !1,
							mentionText: null,
							mentionPrefix: null,
							mentionIndex: -1,
						}),
						N = (0, n.useRef)(null);
					N.current = f;
					const R = (0, n.useCallback)(
							(t, i, n) => {
								e &&
									D({
										mentioning: !0,
										mentionText: t,
										mentionPrefix: i,
										mentionIndex: n,
									});
							},
							[e]
						),
						b = (0, n.useCallback)(() => {
							D({ mentioning: !1, mentionIndex: -1, mentionText: null }),
								(I.current = null),
								m(null);
						}, []),
						L = (0, n.useRef)(null),
						[P, O] = (0, n.useState)(t),
						[w, F] = (0, n.useState)(0 === t.length),
						k = (0, n.useRef)(!1),
						U = (0, n.useRef)(P),
						M = (0, n.useRef)(null),
						x = (0, n.useCallback)(() => {
							M.current
								? F(!1)
								: ((U.current = (0, G.NF)(L.current)),
									d && d(U.current),
									F(0 === (0, G.mn)(U.current).length));
						}, []);
					(0, n.useEffect)(() => {
						if (!L.current || !t) return;
						const e = (0, G.wk)(t);
						return (
							(L.current.innerHTML = e),
							() => {
								L.current && (L.current.innerHTML = '');
							}
						);
					}, [t]);
					const B = (0, n.useCallback)(() => {
							O([]), F(!0);
							const e = (0, G.wk)([]);
							L.current.innerHTML = e;
						}, []),
						H = (0, n.useCallback)(() => {
							(0, G.Zz)(L.current, document.getSelection(), k.current), x();
						}, []),
						V = (0, n.useCallback)(() => {
							M.current = !0;
						}, []),
						W = (0, n.useCallback)(
							(e) => {
								(M.current = !1), (0, G.pS)(e, document.getSelection(), i), x();
							},
							[i]
						),
						J = (0, n.useCallback)((e) => {
							h.current && h.current.contains(e.relatedTarget)
								? e.preventDefault()
								: ((0, G.Zz)(L.current, document.getSelection()),
									x(),
									O(U.current),
									b(),
									u && u());
						}, []),
						Y = (0, n.useCallback)(
							(e) => {
								const t = o[e];
								if (t) {
									const { anchorNode: e } = I.current,
										n = L.current.innerText.length;
									(0, G.eM)({
										mentionState: N.current,
										anchorNode: e,
										suggestion: t,
										maxLength: i,
										currentLength: n,
									}),
										x();
								}
								b();
							},
							[o, i]
						),
						$ = (0, n.useCallback)(
							(e) => {
								const t = +e.currentTarget.dataset.index;
								Y(t);
							},
							[Y]
						),
						j = (0, n.useCallback)(
							(e) => {
								M.current && e.preventDefault();
								const t = e.keyCode === l.OC.BACKSPACE;
								k.current = t;
								const n = (0, G.nr)(e),
									a = (0, G.dZ)(e),
									s = document.getSelection();
								if (
									(e.target.innerText.length >= i && !t && !n && !a
										? e.preventDefault()
										: (0, G.jS)(s) && t && (0, G.KZ)(e, s, L.current) && x(),
									N.current.mentioning && !(S.current.length < 1))
								)
									switch (
										(l._1.includes(e.keyCode) &&
											(e.preventDefault(), e.stopPropagation()),
										e.keyCode)
									) {
										case l.OC.ESC:
											b();
											break;
										case l.OC.TAB:
										case l.OC.RETURN:
											Y(A.current);
											break;
										case l.OC.UP:
											_(-1);
											break;
										case l.OC.DOWN:
											_(1);
									}
							},
							[_, Y]
						),
						K = (0, n.useCallback)(
							(t) => {
								if (l._1.includes(t.keyCode)) return;
								const i = document.getSelection();
								if (!L.current.contains(i.anchorNode)) return;
								if ((0, G.qU)(i)) return;
								I.current = (0, G.ZR)(i);
								const n = (0, G.rr)(i),
									r = (0, G.Bo)(n, a);
								if (-1 !== r.lastIndex) {
									const i = n.slice(r.lastIndex + a.length),
										o = e && (0, G.pH)(i, s);
									o
										? (t.key === r.prefix ||
												N.current.mentioning ||
												N.current.mentionText !== i) &&
											R(i, r.prefix, r.lastIndex)
										: N.current.mentioning && b(),
										c && o && c(i, r.prefix);
								} else N.current.mentioning && b();
							},
							[e]
						),
						z = (0, n.useCallback)((e) => {
							const t = (e.clipboardData || window.clipboardData).getData(
									'text/plain'
								),
								n = e.target.innerText.length,
								a = document.getSelection().toString(),
								s = i - n + a.length,
								r = t.substring(0, s);
							e.preventDefault(), document.execCommand('insertHTML', !1, r);
						}, []);
					return (
						(0, n.useEffect)(() => {
							if (!f.mentioning) return;
							const e = document.body;
							let t = null;
							e && (t = e.clientHeight);
							let i = null,
								n = null;
							C.current &&
								C.current.parentElement &&
								((i = C.current.getBoundingClientRect()),
								(n = C.current.parentElement.getBoundingClientRect()));
							const a = v.current.getBoundingClientRect(),
								s = a.top - 60,
								o = t - a.bottom;
							let c = r,
								d = { left: 0, width: a.width };
							if (
								(i &&
									i.width &&
									(y ? (d.left = a.left - i.left) : (d.width = i.width)),
								c === l.El.VERTICAL && (c = s > o ? l.El.TOP : l.El.BOTTOM),
								c === l.El.TOP)
							) {
								let e = a.height;
								n && (e += n.bottom - a.bottom), (d.bottom = e);
							} else if (c === l.El.BOTTOM) {
								let e = a.height;
								n && (e += a.top - n.top), (d.top = e);
							}
							m(d);
						}, [f.mentioning]),
						(0, n.useEffect)(() => {
							if (!o.length || !h.current) return;
							const e = h.current.getBoundingClientRect(),
								t = document.body;
							let i,
								n = null;
							t && (n = t.clientHeight),
								n &&
									(e.top < 0
										? (i = e.bottom - 10)
										: e.bottom > n && (i = n - e.top - 10)),
								i &&
									m((e) => {
										let t = { ...e };
										return i && ((t.height = i), (t.maxHeight = i)), t;
									});
						}, [o.length]),
						{
							showOverlay: o.length > 0 && f.mentioning,
							overlayRef: h,
							overlayPos: g,
							keyboardFocusIndex: E,
							handleMouseOver: T,
							handleClick: $,
							editorDivRef: L,
							resetEditor: B,
							handleKeyDown: j,
							handleKeyUp: K,
							handleBlur: J,
							handleInput: H,
							handleCompositionStart: V,
							handleCompositionEnd: W,
							handlePaste: z,
							showPlaceholder: w,
							containerRef: v,
						}
					);
				}
				function B({
					disabled: e,
					enableMention: t,
					enableTooltip: i,
					tooltipText: a,
					containerClassName: s,
					textFieldClassName: r,
					defaultValue: o,
					maxLength: l,
					triggerPrefix: d,
					cancelPostfix: u,
					placement: p,
					placeholder: y,
					shortenPlaceholder: h,
					suggestions: g,
					handleSearch: m,
					onChange: A,
					onBlur: _,
					onFocus: E,
					portalElement: T,
					ignorePortalLayout: C,
					inputRef: S,
				}) {
					const {
						showOverlay: I,
						overlayRef: D,
						overlayPos: R,
						keyboardFocusIndex: b,
						handleMouseOver: L,
						handleClick: P,
						editorDivRef: O,
						resetEditor: w,
						handleKeyDown: F,
						handleKeyUp: k,
						handleBlur: U,
						handleInput: G,
						handleCompositionStart: B,
						handleCompositionEnd: H,
						handlePaste: V,
						showPlaceholder: W,
						containerRef: J,
					} = x({
						enableMention: t,
						defaultValue: o,
						maxLength: l,
						triggerPrefix: d,
						cancelPostfix: u,
						placement: p,
						suggestions: g,
						handleSearch: m,
						onChange: A,
						onBlur: _,
						portalElement: T,
						ignorePortalLayout: C,
					});
					return (
						(0, n.useImperativeHandle)(
							S,
							() => ({
								focus: () => {
									O.current && O.current.focus();
								},
								scrollIntoView(e) {
									O.current && O.current.scrollIntoView(e);
								},
								resetEditor() {
									w();
								},
							}),
							[]
						),
						(0, f.jsxs)('div', {
							className: `${v.commentEditorContainer} ${s}`,
							ref: J,
							children: [
								i &&
									a &&
									(0, f.jsx)('div', {
										className: v.tooltipContainer,
										'aria-hidden': !W,
										children: (0, f.jsx)(c.m_, {
											type: 'standard',
											position: 'top',
											title: a,
											visible: !0,
										}),
									}),
								(0, f.jsx)(N, {
									disabled: e,
									textFieldClassName: r,
									divRef: O,
									handleKeyDown: F,
									handleKeyUp: k,
									handleBlur: U,
									handleFocus: E,
									handleInput: G,
									handleCompositionStart: B,
									handleCompositionEnd: H,
									handlePaste: V,
									showPlaceholder: W,
									placeholder: y,
									shortenPlaceholder: h,
								}),
								I &&
									(0, f.jsx)(M, {
										forwardedRef: D,
										position: R,
										suggestions: g,
										keyboardFocusIndex: b,
										handleMouseOver: L,
										handleClick: P,
										portalElement: T,
									}),
							],
						})
					);
				}
				B.defaultProps = {
					disabled: !1,
					enableTooltip: !0,
					tooltipText: '',
					containerClassName: '',
					textFieldClassName: '',
					defaultValue: [],
					maxLength: l.E2,
					triggerPrefix: l.W4,
					cancelPostfix: '',
					placement: l.El.VERTICAL,
					placeholder: '',
					suggestions: [],
					handleSearch: () => {},
				};
				const H = B;
				const V = 'user_has_seen_newsfeed_tag_tooltip';
				let W = null,
					J = null;
				function Y({ enableMention: e }) {
					const [t, i] = (0, n.useState)(null),
						[a, s] = (0, n.useState)(null),
						o = (0, n.useRef)(null);
					o.current = a;
					const l = (0, n.useRef)(null),
						c = (0, n.useCallback)(() => {
							o.current &&
								(s(!1),
								r.tI.put(`/userpreference-service/${V}`, {
									key: V,
									value: 'true',
								}));
						}, []);
					return (
						(0, n.useEffect)(() => {
							if (((l.current = new Date()), !1 === e))
								return i(!1), void s(!1);
							return (
								(async function () {
									let e = !1,
										t = !0;
									if ((null !== W && ((e = W), (t = !1)), t))
										try {
											e = (
												await (async function () {
													if (null !== W) return { memoPromoteOn: W };
													J || (J = r.tI.get(`/userpreference-service/${V}`));
													const e = await J;
													return (
														e.data && (W = 'true' !== e.data.value),
														{ memoPromoteOn: W }
													);
												})()
											).memoPromoteOn;
										} catch (n) {}
									l.current && (i(!0), s(e));
								})(),
								() => {
									l.current = null;
								}
							);
						}, [e]),
						{ tagFeatureOn: t, tagPromoteOn: a, turnOffPromote: c }
					);
				}
				function $(e) {
					const {
						enableMention: t,
						placeholder: i,
						shortenPlaceholder: a,
						enableTooltip: o,
						tooltipText: l,
						suggestions: c,
						handleSearch: d,
						handleChange: u,
						handleBlur: p,
					} = (function ({
						enableMention: e,
						shortPlaceholder: t,
						customizedPlaceholder: i,
						viewerDisplayName: a,
						onChange: o,
						onBlur: l,
						t: c,
					}) {
						const {
								tagFeatureOn: d,
								tagPromoteOn: u,
								turnOffPromote: p,
							} = Y({ enableMention: e }),
							[y, h] = (0, n.useState)([]),
							[g, m] = (0, n.useState)(''),
							A = (0, n.useRef)(null),
							_ = (0, n.useRef)(null),
							E = (0, n.useRef)(null),
							T = (0, n.useRef)(null),
							C = (0, n.useCallback)(async () => {
								_.current && (_.current.cancel(), (_.current = null)),
									(_.current = s().CancelToken.source());
								let e = [];
								try {
									e =
										(
											await (0, r.tI)({
												method: 'get',
												url: '/conversation-service/conversation/tag/connections',
												cancelToken: _.current.token,
											})
										).data || [];
								} catch (t) {
									if (s().isCancel(t)) return;
								}
								A.current && h(e);
							}, [a]),
							S = (0, n.useCallback)(
								async (e) => {
									m(e),
										(T.current = e),
										e ||
											(clearTimeout(E.current),
											(E.current = setTimeout(() => {
												C();
											}, 300)));
								},
								[C]
							),
							I = (0, n.useMemo)(
								() =>
									(function (e, t) {
										if (!e) return e;
										if (!t) {
											const t = e.filter((e) => e.recent).slice(0, 10);
											return t.length > 0 ? t : e;
										}
										const i = t.toLowerCase().trim();
										return i
											? e.filter((e) =>
													(e.fullName || e.displayName)
														.toLowerCase()
														.includes(i)
												)
											: e;
									})(y, g),
								[y, g]
							);
						(0, n.useEffect)(
							() => (
								(A.current = Date.now()),
								() => {
									clearTimeout(E.current), (A.current = null);
								}
							),
							[]
						);
						const v = (0, n.useCallback)(
								(e, t) => {
									p(), o && o(e, t);
								},
								[o]
							),
							f = (0, n.useCallback)(() => {
								p(), l && l();
							}, [l]),
							{
								placeholder: D,
								shortenPlaceholder: N,
								enableTooltip: R,
								tooltipText: b,
							} = (0, n.useMemo)(() => {
								let e = '',
									n = '',
									a = '';
								const s = d && u;
								return (
									null !== d &&
										((e = c('common:enter_your_comment')),
										(a = e),
										i ? (e = i) : d && !t && (e = c('tag:tag_promotion_input')),
										(n = s ? c('tag:tag_promotion_tooltip') : '')),
									{
										placeholder: e,
										shortenPlaceholder: a,
										enableTooltip: s,
										tooltipText: n,
									}
								);
							}, [t, i, d, u, c]);
						return {
							enableMention: d,
							placeholder: D,
							shortenPlaceholder: N,
							enableTooltip: R,
							tooltipText: b,
							suggestions: I,
							handleSearch: S,
							handleChange: v,
							handleBlur: f,
						};
					})(e);
					return (0, f.jsx)(H, {
						...e,
						enableMention: t,
						placeholder: i,
						shortenPlaceholder: a,
						enableTooltip: o,
						tooltipText: l,
						suggestions: c,
						handleSearch: d,
						onChange: u,
						onBlur: p,
					});
				}
				$.defaultProps = { enableMention: !0 };
				const j = (0, o.CI)(['common', 'tag'])($);
			},
			502290: (e, t, i) => {
				'use strict';
				i.d(t, {
					E2: () => c,
					El: () => l,
					OC: () => n,
					Q4: () => a,
					W4: () => o,
					_1: () => r,
					xb: () => s,
				});
				const n = {
						BACKSPACE: 8,
						TAB: 9,
						RETURN: 13,
						ESC: 27,
						LEFT: 37,
						UP: 38,
						RIGHT: 39,
						DOWN: 40,
						A: 65,
						C: 67,
						V: 86,
						X: 88,
						Z: 90,
					},
					a = [n.A, n.C, n.V, n.X, n.Z],
					s = [n.LEFT, n.UP, n.RIGHT, n.DOWN],
					r = [n.TAB, n.RETURN, n.ESC, n.UP, n.DOWN],
					o = '@',
					l = { VERTICAL: 'vertical', TOP: 'top', BOTTOM: 'bottom' },
					c = 1e3;
			},
			959546: (e, t, i) => {
				'use strict';
				i.d(t, {
					Bo: () => s,
					Jd: () => I,
					KZ: () => A,
					NF: () => T,
					ZR: () => o,
					Zz: () => _,
					dZ: () => p,
					eM: () => m,
					jS: () => h,
					kg: () => C,
					mn: () => S,
					nr: () => u,
					pH: () => r,
					pS: () => E,
					qU: () => g,
					rr: () => a,
					td: () => v,
					wk: () => c,
				});
				var n = i(502290);
				function a(e) {
					if (!e.anchorNode) return '';
					const { anchorNode: t, anchorOffset: i } = e,
						{ nodeValue: n } = t;
					return n ? n.slice(0, i) : '';
				}
				function s(e, t) {
					return (Array.isArray(t) ? t : [t]).reduce(
						(t, i) => {
							const n = e.lastIndexOf(i);
							return n > t.lastIndex ? { lastIndex: n, prefix: i } : t;
						},
						{ lastIndex: -1, prefix: '' }
					);
				}
				function r(e, t) {
					return (
						!e.startsWith(' ') &&
						!(e.length > 0 && 0 === e.trim().length) &&
						(!t || -1 === e.indexOf(t))
					);
				}
				function o(e) {
					const {
						anchorNode: t,
						anchorOffset: i,
						baseNode: n,
						baseOffset: a,
						extentNode: s,
						extentOffset: r,
						focusNode: o,
						focusOffset: l,
						isCollapsed: c,
						rangeCount: d,
					} = e;
					return {
						anchorNode: t,
						anchorOffset: i,
						baseNode: n,
						baseOffset: a,
						extentNode: s,
						extentOffset: r,
						focusNode: o,
						focusOffset: l,
						isCollapsed: c,
						rangeCount: d,
					};
				}
				function l(e) {
					return e ? e.replace(/ /g, '\xa0') : e;
				}
				function c(e) {
					if (!Array.isArray(e)) return '';
					return e
						.map((e) => {
							switch (e.type) {
								default:
									return '';
								case 'raw':
									return e.text;
								case 'linebreak':
									return '<br>';
								case 'tag': {
									const t = [
											'spellcheck="true"',
											'data-type="tag"',
											`data-display-name="${e.displayName}"`,
											`data-user-id="${e.userId}"`,
											`data-text="${e.text}"`,
										],
										i = l(e.text);
									return `<span ${t.join(' ')}>${i}</span>`;
								}
							}
						})
						.join('');
				}
				function d(e, t, i) {
					const n = document.createElement('span');
					return (
						(function (e, t, i, n) {
							if (!e) return e;
							(e.spellcheck = !1),
								(e.dataset.type = 'tag'),
								(e.dataset.displayName = t),
								(e.dataset.userId = i),
								(e.dataset.text = n);
							const a = l(n);
							e.innerHTML = a;
						})(n, e, t, i),
						n
					);
				}
				function u(e) {
					return (e.ctrlKey || e.metaKey) && n.Q4.includes(e.keyCode);
				}
				function p(e) {
					return n.xb.includes(e.keyCode);
				}
				function y(e) {
					return !(!e || !e.dataset || 'tag' !== e.dataset.type);
				}
				function h(e) {
					return (
						!!e &&
						(!(!e.anchorNode || !y(e.anchorNode.parentElement)) ||
							!(!e.focusNode || !y(e.focusNode.parentElement)))
					);
				}
				function g(e) {
					return !(!e || !e.focusNode) && y(e.focusNode.parentElement);
				}
				function m({
					mentionState: e,
					anchorNode: t,
					suggestion: i,
					maxLength: n,
					currentLength: a,
				}) {
					const { mentionText: s, mentionIndex: r, mentionPrefix: o } = e,
						{ nodeValue: l } = t,
						c = (function (e, t, i) {
							if (!e) return ['', '', ''];
							t < 0 && (t = 0);
							const n = ['', '', ''];
							return (
								(n[0] = e.slice(0, t)),
								(n[1] = e.slice(t, i)),
								(n[2] = e.slice(i)),
								n
							);
						})(l, r, r + o.length + s.length),
						{ nextSibling: u, parentElement: p } = t;
					p.removeChild(t);
					let y = !0,
						h = i.fullName || i.displayName;
					if (
						(a - c[2].length + h.length > n &&
							((y = !1), (h = h.substring(0, n - a + c[2].length))),
						y)
					) {
						const e = document.createTextNode(c[0]),
							t = d(i.displayName, i.userProfileId, h),
							n = document.createTextNode(`\xa0${c[2]}`);
						u
							? (p.insertBefore(e, u),
								p.insertBefore(t, u),
								p.insertBefore(n, u))
							: (p.appendChild(e), p.appendChild(t), p.appendChild(n));
						const a = document.createRange();
						a.selectNode(n), a.setStart(n, 1), a.collapse(!0);
						const s = document.getSelection();
						s.removeAllRanges(), s.addRange(a);
					} else {
						const e = document.createTextNode(`${c[0]}${h} ${c[2]}`);
						u ? p.insertBefore(e, u) : p.appendChild(e);
						const t = document.createRange();
						t.selectNodeContents(e), t.setStart(e, t.endOffset), t.collapse(!0);
						const i = document.getSelection();
						i.removeAllRanges(), i.addRange(t);
					}
				}
				function A(e, t, i) {
					if (t && i && t.isCollapsed) {
						if (!t.anchorNode) return;
						const n = t.anchorNode.parentElement;
						if (0 !== t.anchorOffset)
							return (
								e.preventDefault(),
								e.stopPropagation(),
								n.parentElement.removeChild(n),
								!0
							);
						let a = !n.nextSibling || '#text' !== n.nextSibling.nodeName;
						(a = n.previousSibling
							? a && '#text' !== n.previousSibling.nodeName
							: a && !i.firstChild.contains(n)),
							a &&
								n.parentElement.insertBefore(
									document.createTextNode('\xa0'),
									n.nextSibling
								);
					}
				}
				function _(e, t, i) {
					const { childNodes: n } = e;
					n.forEach((n) => {
						const { nodeName: a, dataset: s } = n;
						if ('DIV' === a) _(n, t);
						else if (s && 'tag' === s.type) {
							const a = (r = n.innerText) ? r.replace(/\u00a0/g, ' ') : r;
							if (s.text === a) return;
							let o = null,
								c = !1,
								d = !1,
								u = null;
							o = t.anchorOffset;
							const [p, y] = a.split(s.text);
							if ('\n' === p || '\n' === y) d = !0;
							else if (a.endsWith(s.text)) {
								let t = n.previousSibling;
								(t && 'SPAN' !== t.nodeName) ||
									((t = document.createTextNode('')), e.insertBefore(t, n)),
									t &&
										((t.nodeValue = `${t.nodeValue}${p}`),
										(c = !0),
										(u = t),
										t.nodeValue && (o = t.nodeValue.length));
							} else if (a.startsWith(s.text)) {
								let t = n.nextSibling;
								(t && 'SPAN' !== t.nodeName) ||
									((t = document.createTextNode('')),
									e.insertBefore(t, n.nextSibling)),
									t &&
										((t.nodeValue = `${y}${t.nodeValue}`),
										(c = !0),
										(u = t),
										(o = 1));
							}
							if (c) n.innerText = l(s.text);
							else if (d) {
								const t = document.createElement('br');
								e.replaceChild(t, n);
							} else
								i && s.text.startsWith(a) && a.length === s.text.length - 1
									? ((u = n.previousSibling), e.removeChild(n))
									: ((u = document.createTextNode(a)), e.replaceChild(u, n));
							if (u) {
								const e = document.createRange();
								e.selectNodeContents(u),
									(o = Math.min(o, e.endOffset)),
									e.setStart(u, o),
									e.collapse(!0),
									document.getSelection().removeAllRanges(),
									document.getSelection().addRange(e);
							}
						} else if ('#text' !== a && 'BR' !== a) {
							const i = document.createTextNode(n.innerText),
								a = t.anchorOffset;
							e.replaceChild(i, n);
							const s = document.createRange();
							s.setStart(i, a),
								s.collapse(!0),
								document.getSelection().removeAllRanges(),
								document.getSelection().addRange(s);
						}
						var r;
					});
				}
				function E(e, t, i) {
					const n = e.data,
						a = e.target.innerText.length - i;
					if (a <= 0) return;
					const s = n.substring(0, n.length - a);
					if (!t || !t.anchorNode || !t.anchorNode.nodeValue) return;
					const r = Math.max(t.anchorOffset - n.length, 0);
					if (t.anchorNode.nodeValue.indexOf(n, r) < 0) return;
					let o = r + s.length;
					t.anchorNode.nodeValue = t.anchorNode.nodeValue.replace(n, s);
					const l = document.createRange();
					l.selectNodeContents(t.anchorNode),
						(o = Math.min(o, l.endOffset)),
						l.setStart(t.anchorNode, o),
						l.collapse(),
						t.removeAllRanges(),
						t.addRange(l);
				}
				function T(e) {
					const { childNodes: t } = e;
					let i = [];
					return (
						t.forEach((e) => {
							if ('DIV' === e.nodeName) {
								i.push({ type: 'linebreak', text: '\n' });
								const t = T(e);
								(1 === t.length && 'linebreak' === t[0].type) ||
									(i = i.concat(t));
							} else {
								let t = null;
								(t =
									'BR' === e.nodeName
										? { type: 'linebreak', text: '\n' }
										: e.dataset
											? (function (e) {
													if (!e) return;
													return {
														type: e.dataset.type,
														displayName: e.dataset.displayName,
														userId: Number.parseInt(e.dataset.userId),
														text: e.dataset.text,
													};
												})(e)
											: { type: 'raw', text: e.nodeValue }),
									t && t.text && i.push(t);
							}
						}),
						1 === i.length && 'linebreak' === i[0].type && (i = []),
						i
					);
				}
				function C(e) {
					if (!e) return [];
					const t = [];
					return (
						e.split('\n').forEach((e, i) => {
							i > 0 && t.push({ type: 'linebreak', text: '\n' }),
								t.push({ type: 'raw', text: e });
						}),
						t
					);
				}
				function S(e) {
					return e
						.map((e) => e.text)
						.join('')
						.trim();
				}
				function I(e) {
					if (!e || e.length < 1) return [];
					let t = [];
					return (
						e.forEach((e) => {
							switch (e.type) {
								default:
								case 'RAW':
									const i = C(e.text);
									t = t.concat(i);
									break;
								case 'TAG_USER':
									t.push({
										type: 'tag',
										displayName: e.displayName,
										userId: e.userId,
										text: e.text,
									});
							}
						}),
						t
					);
				}
				function v(e) {
					let t = [],
						i = null,
						n = '';
					e.forEach((e) => {
						'tag' === e.type
							? (i &&
									(n.length > 0 && t.push({ type: 'RAW', text: n }), (n = '')),
								t.push({
									type: 'TAG_USER',
									displayName: e.displayName,
									userId: e.userId,
									text: e.text,
								}),
								(i = !1))
							: ((n = `${n}${e.text}`), (i = !0));
					}),
						n.length > 0 && t.push({ type: 'RAW', text: n });
					for (
						let a = 0;
						a < t.length &&
						'RAW' === t[a].type &&
						((t[a].text = t[a].text.trimStart()), !(t[a].text.length > 0));
						a += 1
					);
					for (
						let a = t.length - 1;
						a >= 0 &&
						'RAW' === t[a].type &&
						((t[a].text = t[a].text.trimEnd()), !(t[a].text.length > 0));
						a -= 1
					);
					return (t = t.filter((e) => !('RAW' === e.type && '' === e.text))), t;
				}
			},
			118956: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => R });
				var n = i(228748),
					a = i(115883),
					s = i(80879),
					r = i(698164),
					o = i(318383),
					l = i(999205),
					c = i(959546),
					d = i(12883),
					u = i(946186),
					p = i.n(u),
					y = i(882155),
					h = i.n(y),
					g = i(127433),
					m = i.n(g),
					A = i(188626),
					_ = i.n(A),
					E = i(108990),
					T = i.n(E),
					C = i(389827),
					S = i.n(C),
					I = i(517942),
					v = {};
				(v.styleTagTransform = S()),
					(v.setAttributes = _()),
					(v.insert = m().bind(null, 'head')),
					(v.domAPI = h()),
					(v.insertStyleElement = T());
				p()(I.A, v);
				const f = I.A && I.A.locals ? I.A.locals : void 0;
				var D = i(717776);
				function N({
					enableMention: e,
					viewerSocialProfile: t,
					onAddComment: i,
					portalElement: r,
					ignorePortalLayout: u,
					maxLength: p,
					mode: y,
					submitting: h,
				}) {
					const [g, m] = (0, n.useState)(''),
						[A, _] = (0, n.useState)([]),
						E = (0, n.useRef)(null),
						T = (0, n.useCallback)(() => {
							if (i && g.length > 0) {
								i(g, A) && (m(''), _([]), E.current && E.current.resetEditor());
							}
						}, [i, g, A]),
						C = (0, n.useCallback)((e) => {
							m((0, c.mn)(e)), _((0, c.td)(e));
						}, []),
						S = 0 === g.trim().length || h;
					let I = f.container;
					return (
						f[y] && (I = `${I} ${f[y]}`),
						(0, D.jsxs)('div', {
							className: I,
							children: [
								(0, D.jsx)('div', {
									className: f.profileImage,
									children: (0, D.jsxs)('a', {
										className: `profile ${f.profile}`,
										href: o.default.url(`/profile/${t.displayName}`),
										'aria-label': s.Ay.t('main_container:profile_and_account'),
										children: [
											(0, D.jsx)('img', {
												alt: '',
												className: 'media-object avatar avatar-tiny',
												'data-src': 'holder.js/64x64',
												src: t.profileImageUrlSmall || a.Mg,
											}),
											t.userPro &&
												(0, D.jsx)('div', {
													className: f.proIconWrapper,
													children: (0, D.jsx)(d.A, {
														customizedStyle: f.proIcon,
													}),
												}),
										],
									}),
								}),
								(0, D.jsxs)('div', {
									className: f.right,
									children: [
										(0, D.jsx)(l.A, {
											enableMention: e,
											viewerDisplayName: t.displayName,
											maxLength: p,
											onChange: C,
											containerClassName: f.editorContainer,
											textFieldClassName: f.editorTextArea,
											portalElement: r,
											ignorePortalLayout: u,
											shortPlaceholder: 'widget' === y,
											inputRef: E,
											disabled: h,
										}),
										(0, D.jsx)('button', {
											className: `btn ${f.button}`,
											type: 'submit',
											onClick: T,
											disabled: S,
											children: s.Ay.t('news_feed:comments_post'),
										}),
									],
								}),
							],
						})
					);
				}
				N.defaultProps = { mode: 'widget' };
				const R = (0, r.CI)(['main_container', 'news_feed'])(N);
			},
			895538: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => S });
				i(228748);
				var n = i(318383),
					a = i(547052),
					s = i(946186),
					r = i.n(s),
					o = i(882155),
					l = i.n(o),
					c = i(127433),
					d = i.n(c),
					u = i(188626),
					p = i.n(u),
					y = i(108990),
					h = i.n(y),
					g = i(389827),
					m = i.n(g),
					A = i(426390),
					_ = {};
				(_.styleTagTransform = m()),
					(_.setAttributes = p()),
					(_.insert = d().bind(null, 'head')),
					(_.domAPI = l()),
					(_.insertStyleElement = h());
				r()(A.A, _);
				const E = A.A && A.A.locals ? A.A.locals : void 0;
				var T = i(717776);
				function C({ commentBlockList: e, body: t }) {
					return null !== e && e.length
						? (0, T.jsx)(T.Fragment, {
								children: e.map((e, t) => {
									switch (e.type) {
										default:
										case 'RAW':
											return e.text;
										case 'TAG_USER':
											return e.displayName || e.userId || 'Anonymous' !== e.text
												? (0, T.jsx)(
														'a',
														{
															className: E.mention,
															href: n.default.url(
																`/profile/${e.displayName}?fromTag=true`
															),
															'aria-label': e.text,
															title: e.text,
															children: e.text,
														},
														t
													)
												: (0, T.jsx)(
														a.A,
														{ ns: 'news_feed', content: 'label_anonymous' },
														t
													);
									}
								}),
							})
						: t;
				}
				C.defaultProps = { commentBlockList: null, body: '' };
				const S = C;
			},
			927195: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => p });
				var n = i(595695),
					a = i.n(n),
					s = i(29273),
					r = i(856492),
					o = i(170545),
					l = i(996605),
					c = i(363099),
					d = i(998813),
					u = ['north', 'south', 'east', 'west'];
				const p = {
					getElevationGainThreshold: function () {
						return 2;
					},
					getElevationLossThreshold: function () {
						return 2;
					},
					convertElevationDataForElevationAnalyzer: function (e) {
						var t;
						if (e) {
							var i = e.distance || e.x;
							(!a().isNaN(i) && a().isNumber(i)) || (i = 0),
								(t = {
									elevation: s.A.convertElevationToMeter(e.y || e.elevation),
									lat: e.latlng ? e.latlng[0] : e.lat,
									lng: e.latlng ? e.latlng[1] : e.lng,
									distance: i > 0 ? s.A.revertDistance(i) : i,
								});
						}
						return t;
					},
					getElevationDataFromGeoPoints: function (e, t = !0) {
						for (
							var i, n, a = [], r = 0, o = 0, l = 0, c = e.length;
							l < c;
							l += 1
						)
							e[l] &&
								((i = e[l]),
								n &&
									(r =
										null !== i.distance && void 0 !== i.distance
											? i.distance
											: (o += r =
													this.calculateDistanceBetweenPointsInMeters(
														n.latitude,
														n.longitude,
														i.latitude,
														i.longitude
													))),
								(n = i),
								i.latitude &&
									i.longitude &&
									a.push({
										latlng: [i.latitude, i.longitude],
										timestamp: i.timestamp,
										y: i.elevation ? s.A.convertElevation(i.elevation) : null,
										x: s.A.convertDistance(r),
									}));
						return (
							a.sort(this.sortElevationDataByDistance),
							t && this.stripDupDistancesFromPoints(a, 'x'),
							a
						);
					},
					calculateAvgGradient: function (e, t, i) {
						var n = (100 * (t - e)) / i;
						return a().isNaN(n) || !a().isFinite(n) ? 0 : n;
					},
					calculateBoundingBoxAreaInKM: function (e, t, i, n) {
						return r.A.calculateBoundingBoxAreaInKM(e, t, i, n);
					},
					calculateDistanceBetweenPointsInKM: function (e, t, i, n) {
						return r.A.calculateDistanceBetweenPointsInKM(e, t, i, n);
					},
					calculateDistanceBetweenPointsInMeters: function (e, t, i, n) {
						return r.A.calculateDistanceBetweenPointsInMeters(e, t, i, n);
					},
					calculateDistanceFromLeafletLatLngs: function (e) {
						return r.A.calculateDistanceFromCollectionOfLatLngs(e);
					},
					populateDistanceInGeoPoints: function (e) {
						for (var t, i = 0, n = 0, a = 0, s = e.length; a < s; a += 1)
							e[a] &&
								(t &&
									(i =
										n +=
										i =
											this.calculateDistanceBetweenPointsInMeters(
												t.latitude,
												t.longitude,
												e[a].latitude,
												e[a].longitude
											)),
								(t = e[a]),
								(e[a].distance = i));
						return e;
					},
					sortElevationDataByDistance: function (e, t) {
						return e.x < t.x ? -1 : e.x > t.x ? 1 : 0;
					},
					stripDupDistancesFromPoints: function (e, t) {
						var i, n;
						!(function e(a) {
							for (var s = 0, r = a.length; s < r; s += 1)
								if (a[s]) {
									if (!!i && i[t] === a[s][t]) {
										n = s;
										break;
									}
									i = a[s];
								}
							n && (a.splice(n, 1), (n = null), e(a));
						})(e);
					},
					getRandomRoundTripDirection: function () {
						return u[Math.floor(Math.random() * u.length)];
					},
					showSendToDeviceView: function (e, t, i, n) {
						this.sendToDevicePageView &&
							(this.sendToDevicePageView.removeComponent(),
							(this.sendToDevicePageView = null)),
							(this.sendToDevicePageView = new c.A()),
							this.sendToDevicePageView.renderComponent(
								o.A,
								d('#sendToDevice-placeholder'),
								{
									sendType: l.jg,
									courseId: e,
									messageName: t,
									courseOriginalCoordinateSystem: i,
									sendToDeviceFrom: n,
								}
							);
					},
				};
			},
			109241: (e, t, i) => {
				'use strict';
				i.d(t, {
					$7: () => w,
					$8: () => ae,
					A2: () => Ee,
					AL: () => Se,
					AX: () => bt,
					BE: () => be,
					BK: () => et,
					BR: () => nt,
					BV: () => Le,
					CI: () => st,
					Cj: () => lt,
					Cu: () => We,
					D$: () => X,
					E4: () => Ot,
					EV: () => ct,
					FN: () => Be,
					Fn: () => Ft,
					Gb: () => Ce,
					HO: () => te,
					HZ: () => R,
					Hl: () => Ne,
					J6: () => vt,
					JF: () => gt,
					JV: () => je,
					JX: () => oe,
					K0: () => q,
					K7: () => we,
					M2: () => Ye,
					Mi: () => It,
					Mw: () => ne,
					Nf: () => Xe,
					OD: () => At,
					Oq: () => k,
					QU: () => I,
					RV: () => ft,
					RZ: () => wt,
					Rk: () => N,
					S: () => Re,
					SJ: () => ut,
					SQ: () => _t,
					SZ: () => mt,
					Sd: () => Fe,
					U5: () => Ze,
					U7: () => He,
					UA: () => se,
					UR: () => ye,
					Uv: () => W,
					VX: () => Z,
					Vg: () => xe,
					Vh: () => Q,
					Vi: () => f,
					W: () => Ct,
					W0: () => S,
					XT: () => ee,
					YK: () => yt,
					YT: () => Nt,
					Yu: () => K,
					Yz: () => ve,
					Ze: () => U,
					_M: () => le,
					_T: () => P,
					_U: () => ht,
					_q: () => F,
					ac: () => Te,
					aj: () => me,
					ct: () => St,
					gm: () => rt,
					gn: () => Tt,
					gv: () => Oe,
					h2: () => ce,
					iB: () => ie,
					ij: () => Pt,
					jF: () => pt,
					jl: () => Ae,
					kP: () => it,
					ke: () => Dt,
					kj: () => de,
					mQ: () => Qe,
					mg: () => Et,
					mv: () => j,
					nW: () => M,
					ne: () => Y,
					nn: () => re,
					o: () => Je,
					pC: () => Pe,
					pP: () => ue,
					p_: () => De,
					q$: () => v,
					rE: () => V,
					rK: () => J,
					rh: () => at,
					rl: () => z,
					sI: () => O,
					td: () => Ie,
					u1: () => ke,
					uj: () => pe,
					vf: () => $,
					wX: () => Lt,
					xA: () => L,
					yE: () => D,
					yQ: () => b,
				});
				var n = i(927195),
					a = i(54009),
					s = i.n(a),
					r = i(133499),
					o = i(850564),
					l = i(856492),
					c = i(360123),
					d = i(248871),
					u = (i(839259), i(29273)),
					p = i(6933),
					y = i(28351),
					h = i(965204),
					g = i(543175),
					m = (i(544310), i(436465)),
					A = i(276812),
					_ = i(178982),
					E = i(586816),
					T = i(281202),
					C = i(576797);
				const S = 128,
					I = 12,
					v = r.A.userInChina()
						? [39.92889, 116.38833]
						: [38.854699, -94.797763],
					f = [10, 24],
					D = [14, 14],
					N = [7, 7],
					R = [18, 18],
					b = [8, 8],
					L = '/modern/images/map/coursePointsIcons/map-marker-end.svg',
					P = '/modern/images/map/coursePointsIcons/map-marker-start.svg',
					O = 'startMarker',
					w = 'endMarker',
					F = [20, 28],
					k = [10, 10],
					U = [22, 22],
					M = 500,
					G = 'elevation',
					x = 'distance',
					B = 'ADMIN',
					{ mapProviderInfo: H } = _.Ay,
					V = 'map_provider_type',
					W = 'service.tile.host',
					J = 'google',
					Y = 'baidu',
					$ = 'CourseCreator.AllowRunningPopularityRouting',
					j = 'Map.Setting.Courses',
					K =
						'{"courseMarkers":true,"lapMarkers":false,"popularityHeatMap":"none", "popularityHeatMapCheckStatus": true, "trails": true, "climbs": false}',
					z = 10,
					q = 200,
					Q = (0, T.hg)('9aaItduDZd4rzKRriZKTp9'),
					X = { FromActivity: 1, System: 2, Manual: 3, GarminTrail: 4 },
					Z = { cycling: 15.4, running: 5 },
					ee = {
						public: { id: 1, key: 'public' },
						private: { id: 2, key: 'private' },
					},
					te = {
						RANDOM: 'random',
						SOUTH: 'south',
						NORTH: 'north',
						EAST: 'east',
						WEST: 'west',
					},
					ie = {
						USERS_COURSES: { value: 'Owner', tabIndex: 0 },
						FAVORITES: { value: 'Favorites', tabIndex: 1 },
						NEARBY: { value: 'Public', tabIndex: 2 },
					},
					ne = [
						{
							value: 'CREATED_DATE_DESC',
							preferenceValue: 'recent',
							label: 'course_map_list_sort_by_recently_created',
						},
						{
							value: 'NAME_ASC',
							preferenceValue: 'course-name-asc',
							label: 'course_map_list_sort_by_course_name_ascending',
						},
						{
							value: 'NAME_DESC',
							preferenceValue: 'course-name-desc',
							label: 'course_map_list_sort_by_course_name_descending',
						},
						{
							value: 'DISTANCE_ASC',
							preferenceValue: 'shortest-distance',
							label: 'course_map_list_sort_by_shortest_distance',
						},
						{
							value: 'DISTANCE_DESC',
							preferenceValue: 'longest-distance',
							label: 'course_map_list_sort_by_longest_distance',
						},
					],
					ae = (e, t) => {
						let i = [...e];
						if (t && i.length) {
							if (t === ne[0].preferenceValue)
								return i.sort((e, t) =>
									e.createdDate < t.createdDate
										? 1
										: t.createdDate < e.createdDate
											? -1
											: 0
								);
							if (t === ne[1].preferenceValue)
								return i.sort((e, t) =>
									e.courseName && t.courseName
										? e.courseName
												.toUpperCase()
												.localeCompare(t.courseName.toUpperCase())
										: 0
								);
							if (t === ne[2].preferenceValue)
								return i.sort((e, t) =>
									e.courseName && t.courseName
										? t.courseName
												.toUpperCase()
												.localeCompare(e.courseName.toUpperCase())
										: 0
								);
							if (t === ne[3].preferenceValue)
								return i.sort((e, t) =>
									e.distanceInMeters > t.distanceInMeters
										? 1
										: t.distanceInMeters > e.distanceInMeters
											? -1
											: 0
								);
							if (t === ne[4].preferenceValue)
								return i.sort((e, t) =>
									e.distanceInMeters < t.distanceInMeters
										? 1
										: t.distanceInMeters < e.distanceInMeters
											? -1
											: 0
								);
						}
						return i;
					},
					se = (e, t) => {
						let i = [...e];
						return (
							i &&
								i.length &&
								t &&
								(t &&
									t.courseTypes &&
									t.courseTypes.length &&
									(i = i.filter(
										(e) =>
											-1 !== t.courseTypes.indexOf(e.activityTypeId.typeKey)
									)),
								t &&
									t.courseName &&
									t.courseName.length &&
									(i = i.filter(
										(e) =>
											-1 !==
											e.courseName
												.toUpperCase()
												.indexOf(t.courseName.toUpperCase())
									)),
								t &&
									t.minDistance &&
									(i = i.filter(
										(e) => e.distanceInMeters >= t.minDistanceInMeters
									)),
								t &&
									t.maxDistance &&
									(i = i.filter(
										(e) => e.distanceInMeters <= t.maxDistanceInMeters
									)),
								t &&
									t.minAscent &&
									(i = i.filter(
										(e) => e.elevationGainInMeters >= t.minAscentInMeters
									)),
								t &&
									t.maxAscent &&
									(i = i.filter(
										(e) => e.elevationGainInMeters <= t.maxAscentInMeters
									))),
							i
						);
					},
					re = [
						{
							value: 'activity_type_road_cycling',
							postfixValue: 'course_map_filter_options_only',
							typeValue: 'road_biking',
							group: 1,
							customGroupTitle: 'activity_type_cycling',
							iconName: 'icon-activity-cycling',
							mapMarkerIconName: 'map-marker-course-cycling',
							parentType: 'cycling',
						},
						{
							value: 'activity_type_gravel_cycling',
							shortValue: 'course_map_filter_options_gravel_unpaved',
							postfixValue: 'course_map_filter_options_only',
							typeValue: 'gravel_cycling',
							group: 1,
							customGroupTitle: 'activity_type_cycling',
							iconName: 'icon-cycling-gravel',
							mapMarkerIconName: 'map-marker-course-gravel-cycling',
							parentType: 'cycling',
						},
						{
							value: 'activity_type_mountain_biking',
							postfixValue: 'course_map_filter_options_only',
							typeValue: 'mountain_biking',
							group: 1,
							customGroupTitle: 'activity_type_cycling',
							iconName: 'icon-cycling-MTB',
							mapMarkerIconName: 'map-marker-course-mtb-cycling',
							parentType: 'cycling',
						},
						{
							value: 'activity_type_running',
							postfixValue: 'course_map_filter_options_only',
							typeValue: 'running',
							group: 2,
							customGroupTitle: 'activity_type_running',
							iconName: 'icon-activity-running',
							mapMarkerIconName: 'map-marker-course-running',
							parentType: 'running',
						},
						{
							value: 'activity_type_trail_running',
							postfixValue: 'course_map_filter_options_only',
							typeValue: 'trail_running',
							group: 2,
							customGroupTitle: 'activity_type_running',
							iconName: 'icon-activity-trail-running',
							mapMarkerIconName: 'map-marker-course-trail-running',
							parentType: 'running',
						},
						{
							value: 'activity_type_obstacle_run',
							postfixValue: 'course_map_filter_options_only',
							typeValue: 'obstacle_run',
							group: 2,
							customGroupTitle: 'activity_type_running',
							iconName: 'icon-activity-obstacle-run',
							mapMarkerIconName: 'map-marker-course-obstacle-run',
							parentType: 'running',
						},
						{
							value: 'activity_type_hiking',
							postfixValue: 'course_map_filter_options_only',
							typeValue: 'hiking',
							group: 3,
							customGroupTitle: 'activity_type_hiking',
							iconName: 'icon-activity-hiking',
							mapMarkerIconName: 'map-marker-course-hiking',
							parentType: 'running',
						},
						{
							value: 'activity_type_other',
							postfixValue: 'course_map_filter_options_only',
							typeValue: 'other',
							group: 4,
							customGroupTitle: 'activity_types_more',
							iconName: 'icon-activity-other',
							mapMarkerIconName: 'map-marker-course-other',
							parentType: 'cycling',
						},
					],
					oe = {
						ROAD_BIKING: 'ROAD_CYCLING',
						ROAD_CYCLING: 'ROAD_CYCLING',
						MOUNTAIN_BIKING: 'MOUNTAIN_BIKING',
						GRAVEL_BIKING: 'GRAVEL_BIKING',
						GRAVEL_CYCLING: 'GRAVEL_BIKING',
						RUNNING: 'RUNNING',
						TRAIL_RUNNING: 'TRAIL_RUNNING',
						HIKING: 'HIKING',
					},
					le = { custom: 'custom', roundTrip: 'roundTrip' },
					ce = [
						{
							label: 'course_map_custom_label',
							optionDetailsLabel: 'create_own_course',
							value: le.custom,
						},
						{
							label: 'course_drawing_option_automatic',
							optionDetailsLabel: 'create_automatic_course',
							value: le.roundTrip,
						},
					],
					de = {
						POPULAR_ROUTES: {
							label: 'follow_popular_routes',
							tooltipLabel: 'popularity_routing_tooltip',
							value: 'popular',
						},
						SNAP_TO_ROAD: {
							label:
								'course_map_drawing_method_options_follow_roads_and_trails',
							tooltipLabel: 'follow_roads_tooltip',
							value: 'snap',
						},
						FREEHAND: {
							label: 'course_map_drawing_method_options_draw_freehand',
							tooltipLabel: 'freehand_tooltip',
							value: 'free',
						},
					},
					ue = (e) =>
						e === ee.public.id
							? ee.public.key
							: e === ee.private.id
								? ee.private.key
								: null,
					pe = (e, t) => {
						let i = e.filter((e) => e.typeKey === t);
						if (i && i.length) return i[0].typeId;
					},
					ye = (e, t) => {
						let i = e.filter((e) => e.typeId === t);
						if (i && i.length) {
							let e = re.filter((e) => e.typeValue === i[0].typeKey);
							if (e && e.length) return e[0];
						}
						return {};
					},
					he = (e) => {
						let t = [];
						for (let i = 0, n = e.length; i < n; i += 1) {
							let n = e[i].points;
							for (let e = 0, i = n.length; e < i; e += 1) n[e] && t.push(n[e]);
						}
						return t;
					},
					ge = (e) => {
						let t = [],
							i = [];
						for (let n = 0, a = e.length; n < a; n += 1)
							if (e[n]) {
								for (let t = 0, a = e[n].length; t < a; t += 1)
									e[n][t] &&
										i.push({
											latitude: e[n][t][0],
											longitude: e[n][t][1],
											distance: null,
											timestamp: null,
										});
								t.push({ points: i }), (i = []);
							}
						return t;
					},
					me = (e) => e === le.roundTrip,
					Ae = (e) => e === le.custom,
					_e = (e) => s().polyline(e).getBounds(),
					Ee = (e) => {
						let t = e.map((e) => [e.latitude || e.lat, e.longitude || e.lon]),
							i = _e(t);
						return [i.getSouthWest(), i.getNorthEast()];
					},
					Te = () =>
						-1 !== window.location.href.indexOf('create-from-activity'),
					Ce = (e) => e === o.A.MapProviders.OSM,
					Se = (e) =>
						r.A.userInChina() ||
						-1 !== window.location.href.indexOf('chinaMode=true')
							? Te() || e
								? o.A.CoordinateSystem.WGS84
								: o.A.CoordinateSystem.BD09
							: o.A.CoordinateSystem.WGS84,
					Ie = () => {
						let e = window.location.pathname.lastIndexOf('/');
						return parseInt(window.location.pathname.substring(e + 1), 10);
					},
					ve = (e, t = null) => {
						if (e && e.length)
							return e.map(
								(e, i) => (
									(e.courseId = t),
									(e.sortOrder = i + 1),
									(e.numberOfPoints = e.points.length),
									(e.bearing = 0),
									(e.coordinateSystem = Se()),
									e.points.length && (e.distanceInMeters = fe(e.points)),
									e
								)
							);
					},
					fe = (e) => e[e.length - 1].distance - e[0].distance,
					De = (e) => {
						let t = ge(e);
						return he(t).map((e) => [e.latitude, e.longitude, null]);
					},
					Ne = (e, t) =>
						e.map((e) => {
							let i = t.find(
									(t) => e.latitude === t[0] && e.longitude === t[1]
								),
								n = { ...e };
							return i && (n.elevation = i[2]), { ...n };
						}),
					Re = (e) => {
						let t = n.A.getElevationDataFromGeoPoints(e),
							i = new c.A(n.A.getElevationGainThreshold()),
							a = new d.A(n.A.getElevationLossThreshold());
						return (
							t.forEach((e, t) => {
								i.notifyNewPoint(
									n.A.convertElevationDataForElevationAnalyzer(e)
								),
									a.notifyNewPoint(
										n.A.convertElevationDataForElevationAnalyzer(e)
									);
							}),
							{
								getElevationGain: i.getValue(),
								getElevationLoss: a.getValue(),
								getElevationGainForRange: i.getElevationGainForRange,
								getElevationLossForRange: a.getElevationLossForRange,
							}
						);
					},
					be = (e, t = []) => {
						let i,
							a = ge(e),
							s = he(a);
						return (
							(i = t && t.length > 0 ? [...t, ...s] : [...s]),
							n.A.populateDistanceInGeoPoints(i),
							ot(i, 'distance'),
							Le(i)
						);
					},
					Le = (e) => {
						if (e && e.length) {
							let t = Re(e),
								i = e && e.length ? e[e.length - 1] : null,
								n = e.map((e) => [e.latitude, e.longitude]),
								a = _e(n),
								s = a.getSouthWest(),
								r = a.getNorthEast(),
								o = {
									startPoint: e && e.length ? e[0] : null,
									geoPoints: e,
									boundingBox: {
										lowerLeft: { latitude: s && s.lat, longitude: s && s.lng },
										upperRight: { latitude: r && r.lat, longitude: r && r.lng },
										lowerLeftLatIsSet: !0,
										lowerLeftLongIsSet: !0,
										upperRightLatIsSet: !0,
										upperRightLongIsSet: !0,
									},
								};
							return (
								i && i.distance && (o.distanceMeter = i.distance),
								!t ||
									isNaN(t.getElevationGain) ||
									isNaN(t.getElevationLoss) ||
									((o.elevationGainMeter = t.getElevationGain),
									(o.elevationLossMeter = t.getElevationLoss)),
								o
							);
						}
						return we();
					},
					Pe = (e = !1, t, i) => {
						const { courseLines: a, geoPoints: s, courseId: r } = i;
						if (e) {
							let e =
								t && t.length
									? ((e) => {
											let t,
												i,
												a = [],
												s = [],
												r = 0,
												o = 0,
												l = 0,
												c = 0;
											return (
												(void 0 !== e[0].distance && null !== e[0].distance) ||
													(e = n.A.populateDistanceInGeoPoints(e)),
												(c = e[e.length - 1].distance),
												(l = c / 6),
												e.forEach((c, d) => {
													(i = e[d + 1]),
														(t = Oe(c)),
														i &&
															((o = n.A.calculateDistanceBetweenPointsInMeters(
																i.latitude,
																i.longitude,
																c.latitude,
																c.longitude
															)),
															(r += o),
															(o = r)),
														r >= l &&
															(a.push(t),
															s.push({ points: a, distanceInMeters: o }),
															(a = []),
															(r = 0)),
														a.push(t);
												}),
												a.length > 0 &&
													s.push({ points: a, distanceInMeters: r }),
												s
											);
										})(t)
									: [];
							return ve(e, r);
						}
						if (t && t.length > 1 && s && s.length > 1) {
							let e = [],
								i = s.filter(
									(t, i) => (
										isNaN(t.elevation) && e.push(i), isNaN(t.elevation)
									)
								);
							if (!a.length) {
								let e = {
									distanceInMeters: t[t.length - 1].distance,
									points: t.map((e) => Oe(e)),
								};
								return ve([e], r);
							}
							if (i && i.length) {
								let i = e[0] > 0 ? e[0] - 1 : e[0],
									n = e[e.length],
									s = [...t].slice(i, n),
									o = fe(s),
									l = s.map((e) => Oe(e));
								return ve([...a, { distanceInMeters: o, points: l }], r);
							}
						}
						return a;
					},
					Oe = (e) => {
						let t = {
							lon: e.longitude,
							lat: e.latitude,
							timestamp: e.timestamp,
							elevation: e.elevation,
							distance: e.distance,
						};
						return e.tempId && (t.tempId = e.tempId), t;
					},
					we = (e = !1) =>
						'object' === typeof e
							? {
									startPoint: e.startPoint,
									distanceMeter: e.distanceMeter,
									geoPoints: e.geoPoints,
									courseLines: e.courseLines,
									boundingBox: e.boundingBox,
									elevationGainMeter: e.elevationGainMeter,
									elevationLossMeter: e.elevationLossMeter,
									coursePoints: e.coursePoints,
								}
							: {
									startPoint: null,
									distanceMeter: null,
									geoPoints: [],
									courseLines: [],
									boundingBox: null,
									elevationGainMeter: null,
									elevationLossMeter: null,
									coursePoints: null,
								},
					Fe = (e, t, i) => {
						let n = e ? e.userProfilePk : null,
							a = !1;
						return n && (a = t === n), !a && i && (a = i.groupRole === B), a;
					},
					ke = (e, t) => {
						const i = ye(e, t),
							n = i && i.typeValue;
						return i && 'cycling' === i.parentType && 'other' !== n;
					};
				function Ue(e) {
					return window
						.getComputedStyle(document.body, null)
						.getPropertyValue(e);
				}
				let Me = null;
				function Ge(e) {
					if (!Me) {
						Me = document.createElement('canvas');
						const e = Ue('font-weight') || 'normal',
							t = Ue('font-size') || '14px',
							i = Ue('font-family') || 'sans-serif';
						Me.getContext('2d').font = `${e} ${t} ${i}`;
					}
					return Me.getContext('2d').measureText(e).width;
				}
				const xe = (e, t = 0) => {
						if (e && e.length) {
							return t + 16 + Ge(e) + 'px';
						}
						return 'auto';
					},
					Be = (e, t = 0) => {
						if (e && e.length) {
							return t + 32 + Ge(e) + 'px';
						}
						return 'auto';
					},
					He = (e, t, i, n, a) => {
						let s = { ...t };
						(s[e] = { ...we() }),
							i && (s[e] = { ...s[e], ...i }),
							n && (s[e].coursePoints = [...n]),
							a && (s[e].courseLines = [...a]);
						return (
							Object.keys(t)
								.filter((t) => t > e)
								.forEach((e) => {
									delete s[e];
								}),
							s
						);
					},
					Ve = (e, t = !1, i = !1) => {
						if (e) {
							let n,
								a = t ? G : x;
							return (
								(n = i
									? e.reduce((e, t) => (e[a] < t[a] ? e : t))
									: e.reduce((e, t) => (e[a] > t[a] ? e : t))),
								n[a]
							);
						}
					},
					We = (e, t = !1, i = !1, n = 0) => {
						let a = [],
							s = Ve(e, t, !0) - n,
							r = Ve(e, t) + n;
						if (
							(t && n && r - s < 200 && (r = s + 200), !isNaN(s) && !isNaN(r))
						) {
							let e = i && !t ? 9 : 3,
								n = (r - s) / e;
							if (t)
								a.push(parseInt(s, 10)),
									a.push(parseInt(s + Math.floor(n), 10)),
									a.push(parseInt(r - Math.floor(n), 10)),
									a.push(parseInt(r, 10));
							else {
								a.push(s);
								let t = Math.floor(n);
								for (let i = 1; i < e; i++) a.push(s + t), (t += Math.floor(n));
								a.push(r);
							}
						}
						return a;
					},
					Je = (e) => {
						let t = e.slice().reverse(),
							i = 0;
						return (
							(t = t.map((e, t) => {
								let n = t + 1,
									a = [...e.points].slice().reverse();
								return (
									(e = { ...e, sortOrder: n, points: $e(a, i) }),
									(i = e.points[e.points.length - 1].distance),
									e
								);
							})),
							t
						);
					},
					Ye = (e = []) => {
						let t = Je(e);
						t.forEach((e) => {
							e.points &&
								e.points.length &&
								e.points.forEach((e) => {
									(e.timestamp = null), (e.coursePointId = null);
								});
						});
						let i,
							n = [...e, ...t];
						return (
							(n = n.map((t, n) => {
								let a = { ...t, sortOrder: n + 1 };
								return (
									a.sortOrder === e[e.length - 1].sortOrder &&
									e[e.length - 1].points.length
										? (i = t.points[t.points.length - 1].distance)
										: i &&
											((a.points = $e(t.points, i)),
											(i = a.points[a.points.length - 1].distance)),
									a
								);
							})),
							n
						);
					},
					$e = (e, t = 0) => {
						let i = t;
						return e.map((t, a) => {
							const s = e[a + 1];
							let r = { ...t, timestamp: null, distance: i };
							if (s) {
								let e = n.A.calculateDistanceBetweenPointsInMeters(
									t.lat,
									t.lon,
									s.lat,
									s.lon
								);
								i += e;
							}
							return r;
						});
					},
					je = (e, t) => {
						let i = 'string' === typeof t ? JSON.parse(t) : t,
							n = null;
						switch (e) {
							case H.here.value:
								n = Ke(i);
								break;
							case H.osm.value:
								n = H.osm.value;
								break;
							case H.google.value:
								n = ze(i);
								break;
							case H.baidu.value:
								n = qe(i);
								break;
							default:
								n = (0, E.B)() ? qe(i) : ze(i);
						}
						return n;
					},
					Ke = (e) => (e && (e.satellite || e.hybrid) ? 'hybrid' : 'normal'),
					ze = (e) =>
						e && (e.satellite || e.hybrid)
							? H.google.types.hybrid
							: e && e.terrain
								? H.google.types.terrain
								: H.google.types.default,
					qe = (e) =>
						e && (e.satellite || e.hybrid) ? 'satellite' : H.baidu.type.default,
					Qe = (e) => {
						switch (e) {
							case H.here.value:
								return {
									maxZoom: H.here.options.maxZoom,
									minZoom: H.here.options.minZoom,
								};
							case H.osm.value:
								return {
									maxZoom: H.osm.options.maxZoom,
									minZoom: H.osm.options.minZoom,
								};
							case H.google.value:
								return {
									maxZoom: H.google.options.maxZoom,
									minZoom: H.google.options.minZoom,
								};
							case H.baidu.value:
								return {
									maxZoom: H.baidu.options.maxZoom,
									minZoom: H.baidu.options.minZoom,
								};
							default:
								return { maxZoom: 17, minZoom: 3 };
						}
					},
					Xe = (e, t, i = !1) => {
						const n =
							t &&
							e &&
							e.CourseMapDefaultOptions &&
							e.CourseMapDefaultOptions.CoursePointIDMap[t] &&
							e.CourseMapDefaultOptions.CoursePointIDMap[t].iconOptions;
						return n
							? i
								? n.iconHoverUrl
								: n.iconUrl
							: i
								? '/modern/images/map/coursePointsIcons/map-marker-course-point-generic-reverse.svg'
								: '/modern/images/map/coursePointsIcons/map-marker-course-point-generic.svg';
					},
					Ze = (e, t) => {
						const i =
							t &&
							e &&
							e.CourseMapDefaultOptions &&
							e.CourseMapDefaultOptions.CoursePointIDMap[t];
						return i ? i.key : '';
					},
					et = (e, t = 100) => {
						let i = [...e],
							n = t && !isNaN(t) ? t : 100;
						if (i && i.length >= 2)
							for (let a = 0; a < i.length - 1; a++) {
								let e = { lat: i[a].latitude, lng: i[a].longitude },
									t = { lat: i[a + 1].latitude, lng: i[a + 1].longitude };
								if (e && t) {
									if (
										l.A.calculateDistanceBetweenPointsInMeters(
											e.lat,
											e.lng,
											t.lat,
											t.lng
										) > n
									) {
										let r = l.A.calculateBearingOfPoints(e, t),
											o = l.A.calculateDestinationPoint(e, n, r);
										if (o && o.lat && o.lng) {
											let e = s().latLng(o.lat, o.lng);
											i.splice(a + 1, 0, {
												...e,
												latitude: e.lat,
												longitude: e.lng,
											});
										}
									}
								}
							}
						return i;
					},
					tt = (e, t, i = 10) => {
						let n = e[e.length - 1].parentIndex,
							a = [...e];
						a = ((e, t = 0.1) => {
							let i = [...e],
								n = t && !isNaN(t) ? t : 0.1;
							if (e && e.length >= 2)
								for (let a = 0; a < i.length - 1; a++) {
									let e = i[a],
										t = i[a + 1];
									if (
										e &&
										t &&
										l.A.calculateDistanceBetweenPointsInMeters(
											e.lat,
											e.lng,
											t.lat,
											t.lng
										) > n
									) {
										let r = l.A.calculateBearingOfPoints(e, t),
											o = l.A.calculateDestinationPoint(e, n, r);
										if (o && o.lat && o.lng) {
											let t = s().latLng(o.lat, o.lng);
											isNaN(e.parentIndex) || (t.parentIndex = e.parentIndex),
												i.splice(a + 1, 0, t);
										}
									}
								}
							return i;
						})(a, 1);
						let o = l.A.indexOfClosestPoint(a, t.latlng, 14),
							c = ((e, t, i, n) => {
								const a = r.A.userInChina()
									? s().CRS.BEPSG3857
									: s().CRS.Simple;
								let o,
									l,
									c = e[i - 1],
									d = e[i],
									u = a.latLngToPoint(c, n).x,
									p = a.latLngToPoint(c, n).y,
									y = a.latLngToPoint(d, n).x,
									h = a.latLngToPoint(d, n).y,
									g =
										((a.latLngToPoint(t, n).x - u) * (y - u) +
											(a.latLngToPoint(t, n).y - p) * (h - p)) /
										(Math.pow(y - u, 2) + Math.pow(h - p, 2));
								return (
									g > 1
										? ((l = { ...d }), (l.parentIndex = c.parentIndex))
										: g < 0
											? (l = { ...c })
											: ((o = { x: u + g * (y - u), y: p + g * (h - p) }),
												(l = a.pointToLatLng(o, n)),
												(l.parentIndex = c.parentIndex)),
									l
								);
							})(a, t.latlng, o, i);
						return c.parentIndex < n && (c.parentIndex = c.parentIndex + 1), c;
					},
					it = (e, t, i, a = !1) => {
						let s = [...e].map((e, t) =>
							a && e.lat && e.lon
								? { parentIndex: t, lat: e.lat, lng: e.lon }
								: e.latitude && e.longitude
									? { parentIndex: t, lat: e.latitude, lng: e.longitude }
									: void 0
						);
						if (s.length > 1 && t && t.latlng) {
							let r = tt(s, t, i);
							if (r) {
								const t = r.parentIndex,
									i = e[t],
									s = n.A.calculateDistanceBetweenPointsInMeters(
										i.lat ? i.lat : i.latitude,
										i.lon ? i.lon : i.longitude,
										r.lat,
										r.lng
									);
								return {
									...{
										indexToAddThePointAt: t,
										distance: i.distance - s,
										latitude: r.lat,
										longitude: r.lng,
										elevation: i.elevation,
										courseLine: a || !1,
									},
								};
							}
						}
						return null;
					},
					nt = (e) => !(!e || !e.pointType),
					at = (e) => !!(e && e.pointType && e.pointLocation),
					st = (e = {}, t = []) => {
						if (t && t.length && 'object' === typeof e)
							return t.find((t) =>
								e.lat && e.lon
									? t.lat === e.lat && t.lon === e.lon
									: t.lat === e.latitude && t.lon === e.longitude
							);
					},
					rt = (e) => {
						let t = [];
						return (
							e.forEach((e) => {
								e.points && e.points.length && t.push(...e.points);
							}),
							(t = t.map((e) =>
								((e) => ({
									longitude: e.lon,
									latitude: e.lat,
									timestamp: e.timestamp,
									elevation: e.elevation,
									distance: e.distance,
								}))(e)
							)),
							ot(t, 'distance'),
							t
						);
					},
					ot = (e, t) => {
						let i,
							n,
							a = !1;
						const s = (e) => {
							for (let s = 0, r = e.length; s < r; s += 1)
								if (e[s]) {
									if (
										((a = !!i && i[t] === e[s][t] && !e[s].coursePointId), a)
									) {
										n = s;
										break;
									}
									i = e[s];
								}
							n && (e.splice(n, 1), (n = null), s(e));
						};
						s(e);
					},
					lt = (e, t) => {
						if (e.length && t && t.courseLine) {
							let i = ((e, t) => {
									let i = Oe(t),
										n = [...e.points];
									n.splice(t.indexToAddThePointAt, 0, i);
									let a = n.slice(0, t.indexToAddThePointAt + 1),
										s = fe(a),
										r = {
											...e,
											points: a,
											distanceInMeters: s,
											numberOfPoints: a.length,
										},
										o = n.slice(t.indexToAddThePointAt, n.length),
										l = fe(o);
									return [
										r,
										{
											...e,
											points: o,
											distanceInMeters: l,
											numberOfPoints: o.length,
											sortOrder: e.sortOrder + 1,
										},
									];
								})(t.courseLine, t),
								n = !1,
								a = [];
							return (
								e.forEach((e, i) => {
									e.sortOrder === t.courseLine.sortOrder
										? (n = !0)
										: n
											? a.push({ ...e, sortOrder: e.sortOrder + 1 })
											: a.push(e);
								}),
								i.forEach((e) => {
									a.splice(e.sortOrder - 1, 0, e);
								}),
								a
							);
						}
						return e;
					},
					ct = (e, t) => (
						t &&
							t.length &&
							t.forEach((t) => {
								let i, n;
								e.forEach((e) => {
									e.points.forEach((e) => {
										let a = Math.abs(t.distance - e.distance);
										(!n || a < n) && ((i = e), (n = a));
									});
								}),
									i && (i.coursePointId = t.coursePointId);
							}),
						e
					),
					dt = (e, t) => {
						let i,
							n = e.find((e, n) => {
								let a =
									!t.coursePointId &&
									e.tempId &&
									t.tempId &&
									e.tempId === t.tempId;
								return (
									((t.coursePointId && e.coursePointId === t.coursePointId) ||
										a) &&
										(i = n),
									(t.coursePointId && e.coursePointId === t.coursePointId) || a
								);
							});
						return { findPointAtIndex: i, foundPoint: n };
					},
					ut = (e, t) => (
						t &&
							t.length &&
							(t.forEach((t) => {
								e.find((e) => {
									let i = dt(e.points, t);
									if (i && i.foundPoint && !isNaN(i.findPointAtIndex))
										return (t.distance = i.foundPoint.distance), e;
								});
							}),
							t.sort((e, t) =>
								e.distance < t.distance ? -1 : e.distance > t.distance ? 1 : 0
							)),
						t
					),
					pt = (e, t = [], i = !1) => {
						let n,
							a = JSON.stringify(e),
							s = JSON.parse(a),
							r = i ? s[s.length - 1] : s[0],
							o = ((e, t) => {
								let i = [];
								return (
									e &&
										e.points &&
										t &&
										t.length &&
										[...t].forEach((t) => {
											let n = dt(e.points, t);
											isNaN(n.findPointAtIndex) ||
												i.push({
													marker: { ...t },
													indexInLinePoints: n.findPointAtIndex,
												});
										}),
									i
								);
							})(r, t);
						if (o && o.length) {
							let e = ((e, t, i = !1) => {
								if (e && e.length) {
									let n,
										a = { ...t },
										s = e.reduce(function (e, t) {
											return i
												? e.indexInLinePoints > t.indexInLinePoints
													? e
													: t
												: e.indexInLinePoints < t.indexInLinePoints
													? e
													: t;
										}),
										r = s.indexInLinePoints,
										o = a.points.length - 1;
									i && ((o = r), (r = 0));
									let l = a.points.slice(r, o + 1),
										c = fe(l);
									return (
										(a = {
											...a,
											distanceInMeters: c,
											points: l,
											numberOfPoints: l.length,
										}),
										(n = s.marker),
										{ lineChanged: a, markerToBeRemoved: n }
									);
								}
							})(o, r, i);
							i
								? (s[s.length - 1] = { ...e.lineChanged })
								: (s[0] = { ...e.lineChanged }),
								(n = e.markerToBeRemoved);
						} else i ? s.pop() : s.shift();
						let l = 0;
						s.forEach((e, t) => {
							(e.sortOrder = t + 1),
								Rt(e.points, l),
								(e.numberOfPoints = e.points.length),
								(l = e.points[e.points.length - 1].distance),
								(e.distanceInMeters = fe(e.points));
						});
						let c = t && t.length ? [...t] : [],
							d = { newLines: s, newCoursePoints: c };
						return n && (d.newCoursePoints = ht(c, n)), d;
					},
					yt = (e, t, i) => {
						let n = [...e];
						if (
							t &&
							t.lat &&
							t.lon &&
							i &&
							i.points &&
							i.points.length &&
							i.sortOrder > 1
						) {
							let e = 0;
							n = n
								.map((t) => {
									if (t.sortOrder === i.sortOrder - 1) {
										let n = t.distanceInMeters + i.distanceInMeters,
											a = [...t.points, ...i.points];
										return (
											ot(a, 'distance'),
											(e += 1),
											{
												...t,
												distanceInMeters: n,
												numberOfPoints: a.length,
												points: a,
												sortOrder: e,
											}
										);
									}
									if (t.sortOrder !== i.sortOrder)
										return (e += 1), { ...t, sortOrder: e };
								})
								.filter(Boolean);
						}
						return n;
					},
					ht = (e, t) => {
						let i = e && e.length ? [...e] : [];
						return (
							(i = i.filter(
								(e) =>
									!(
										(t.coursePointId && t.coursePointId === e.coursePointId) ||
										(t.lat === e.lat && t.lon === e.lon)
									)
							)),
							i
						);
					},
					gt = (e, t, i = 0, a) => {
						const s = n.A.calculateDistanceBetweenPointsInMeters(
							e,
							t,
							a[0],
							a[1]
						);
						return {
							distanceBetweenPoints: s,
							point: { distance: s + i, lat: a[0], lon: a[1], elevation: a[2] },
						};
					},
					mt = (e, t) => {
						const i = e[e.length - 1],
							a = i.points[i.points.length - 1],
							s = n.A.calculateDistanceBetweenPointsInMeters(
								a.lat,
								a.lon,
								t.lat,
								t.lon
							),
							r = [a, { ...t, distance: a.distance + s }];
						return [
							...e,
							{
								...i,
								sortOrder: i.sortOrder + 1,
								distanceInMeters: s,
								points: r,
								numberOfPoints: r.length,
							},
						];
					};
				function At(e, t) {
					let i,
						n,
						a = e;
					switch (
						((n =
							t && t.parent && 'cycling' === t.parent
								? o.A.TRANSIT_MODE.CYCLING
								: o.A.TRANSIT_MODE.PEDESTRIAN),
						r.A.userInChina()
							? (a = o.A.MapProviders.BAIDU)
							: a === o.A.MapProviders.BAIDU && (a = o.A.MapProviders.GOOGLE),
						a)
					) {
						case o.A.MapProviders.OSM:
							i = new p.A({
								transitMode: n,
								layerType: o.A.MAP_LAYER_TYPES.ROAD,
							});
							break;
						case o.A.MapProviders.GOOGLE:
							i = new y.default({ transitMode: n });
							break;
						case o.A.MapProviders.HERE:
							i = new h.default({ transitMode: n });
							break;
						case o.A.MapProviders.BAIDU:
							i = new g.default({ transitMode: n });
							break;
						default:
							return null;
					}
					return i;
				}
				const _t = (e, t = []) => {
					let i,
						a = e.map((e) => ({
							latitude: e[0],
							longitude: e[1],
							distance: null,
							timestamp: null,
						}));
					return (
						(i = t && t.length > 0 ? [...t, ...a] : [...a]),
						n.A.populateDistanceInGeoPoints(i),
						ot(i, 'distance'),
						Le(i)
					);
				};
				function Et({
					editableCourseDetails: e,
					coursePointSelection: t,
					pointLocation: i,
				}) {
					const { pointType: n, editModeMarkerInitialValue: a } = t,
						{ coursePoints: s, courseLines: r, courseId: o } = e;
					let l = s && s.length ? [...s] : [],
						c = i.indexToAddThePointAt,
						d = i.courseLine,
						u = new Date().getTime(),
						p = {
							createdDate: new Date().toISOString(),
							...n,
							distance: i.distance,
							lat: i.latitude,
							lon: i.longitude,
							elevation: i.elevation,
							modifiedDate: new Date().toISOString(),
							timestamp: null,
							coursePointId: null,
							tempId: u,
						},
						y = {
							distance: p.distance,
							elevation: p.elevation,
							latitude: p.lat,
							longitude: p.lon,
							timestamp: p.timestamp,
							tempId: p.tempId,
						},
						h = r ? [...r] : [];
					return (
						!isNaN(c) &&
							d &&
							d.points &&
							(h = r.map((e) => {
								if (d.sortOrder === e.sortOrder) {
									let t = Oe(y),
										i = [...e.points];
									return (
										i.forEach((e) => {
											a &&
												a.coursePointId &&
												a.coursePointId === e.coursePointId &&
												(e.coursePointId = null);
										}),
										i.splice(c, 0, t),
										{ ...e, numberOfPoints: e.numberOfPoints + 1, points: i }
									);
								}
								return e;
							})),
						delete p.limitedLabel,
						delete p.label,
						delete p.longitude,
						delete p.latitude,
						delete p.value,
						o && !p.coursePk && (p.coursePk = o),
						a && (l = l.filter((e) => !Tt(a, e))),
						l.push(p),
						l.sort((e, t) =>
							e.distance < t.distance ? -1 : e.distance > t.distance ? 1 : 0
						),
						{ allCoursePoints: l, newCourseLines: h, setCoursePointData: p }
					);
				}
				const Tt = (e, t) =>
						(e.coursePointId && e.coursePointId === t.coursePointId) ||
						(e.tempId && e.tempId === t.tempId) ||
						(e.lat === t.lat && e.lon === t.lon),
					Ct = (e = [], t = [], i = !1) => {
						let n = JSON.stringify(e),
							a = JSON.parse(n);
						i && a.length && a.reverse();
						let s = a.find((e) =>
							e.coursePointId && t
								? t.find((t) => t.coursePointId === e.coursePointId)
								: !(!e.tempId || !t) && t.find((t) => t.tempId === e.tempId)
						);
						return s || (s = a[a.length - 1]), s;
					},
					St = (e = 'metric', t = !1, i = !1) =>
						i
							? e === u.A.MeasurementSystems.METRIC
								? m.CY
								: m.k4
							: t
								? e === u.A.MeasurementSystems.METRIC
									? A.w0
									: A.w9
								: void 0,
					It = (e, t, i) =>
						i
							? e === u.A.MeasurementSystems.METRIC
								? m.AG
								: m.kT
							: t
								? e === u.A.MeasurementSystems.METRIC
									? A.iY
									: A.Wf
								: void 0,
					vt = (e, t, i, n, a) => {
						let s = e.find((e) => e.sortOrder === a.sortOrder - 1),
							r = s.points.find((e) => {
								let t = i.distance === e.distance;
								return e.lat === i.lat && i.lon === e.lon && t;
							});
						return Dt(e, s.sortOrder, t, r, !0);
					},
					ft = (e, t, i, n, a) => {
						let s = a.points.find((e) => {
							let t = n.distance === e.distance;
							return e.lat === n.lat && n.lon === e.lon && t;
						});
						return Dt(e, a.sortOrder, t, s);
					},
					Dt = (e, t, i, n, a = !1) => {
						let s,
							r = JSON.stringify(e),
							o = JSON.parse(r),
							l = o.find((e) => e.sortOrder === t),
							c = a;
						return (
							(l.points = l.points.filter((e, t) =>
								e.lat === n.lat && e.lon === n.lon ? ((c = !a), !0) : c
							)),
							i.forEach((e) => {
								(s = { latitude: e[0], longitude: e[1], elevation: e[2] }),
									a ? l.points.push(Oe(s)) : l.points.splice(0, 0, Oe(s));
							}),
							(o = Nt(o)),
							o
						);
					},
					Nt = (e) => {
						let t = JSON.stringify(e),
							i = JSON.parse(t),
							n = 0;
						return (
							i.forEach((e, t) => {
								Rt(e.points, n),
									(n = e.points[e.points.length - 1].distance),
									(e.numberOfPoints = e.points.length),
									(e.sortOrder = t + 1),
									(e.distanceInMeters = fe(e.points));
							}),
							i
						);
					},
					Rt = (e, t = 0, i = 'lat', a = 'lon') => {
						let s,
							r = t;
						if (e && e.length)
							for (let o = 0, l = e.length; o < l; o += 1)
								e[o] &&
									(s &&
										(r += n.A.calculateDistanceBetweenPointsInMeters(
											s[i],
											s[a],
											e[o][i],
											e[o][a]
										)),
									(s = e[o]),
									(e[o].distance = r));
						return e;
					},
					bt = () => {
						const e = new URLSearchParams(window.location.search).get(
							'redirectUrl'
						);
						if (e) {
							if (-1 !== e.indexOf('power-guidance'))
								return re.filter(
									(e) => 'cycling' === e.parentType && 'other' !== e.typeValue
								);
							if (-1 !== e.indexOf('pacepro'))
								return re.filter(
									(e) => 'running' === e.parentType && 'hiking' !== e.typeValue
								);
						}
						return re.filter((e) => 'activity_type_obstacle_run' !== e.value);
					},
					Lt = (e, t) => e > 0 && 0 === t,
					Pt = (e, t, i = !1) => {
						let n,
							a,
							s = i || (!(!e || !e.activityTypePk) && e.activityTypePk);
						return (
							t && t.length && s && ((a = ye(t, s)), (n = a && a.typeValue)),
							{
								courseType: a,
								supportedPopularityType: n ? oe[n.toUpperCase()] : 'none',
							}
						);
					},
					Ot = (e, t, i) => {
						e &&
							e.locate &&
							e.on &&
							e
								.locate({ maxZoom: I, setView: !0 })
								.on('locationfound', (e) => {
									'function' === typeof t && t();
								})
								.on('locationerror', (e) => {
									'function' === typeof i && i();
								});
					},
					wt = (e, t) => !(!e || !t || JSON.stringify(e) === JSON.stringify(t)),
					Ft = (e, t = '') => {
						let i = { event: 'track_event', category: 'Courses', action: e };
						t && (i.label = t), C.A.push(i);
					};
			},
			786927: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ev: () => a,
					K7: () => u,
					Op: () => c,
					P8: () => l,
					Rz: () => s,
					ad: () => n.ad,
					m2: () => d,
					rf: () => o,
					sx: () => p,
					ut: () => y,
					x_: () => r,
				});
				var n = i(785275);
				const a = { TYPE: 1, PARTICIPANT: 2, DURATION: 3, SUMMARY: 4 },
					s = { CONNECTIONS: 1, GROUP: 2 },
					r = [
						n.x0.WELLNESS_STEPS_COUNT,
						n.x0.RUNNING,
						n.x0.CYCLING,
						n.x0.SWIMMING,
					],
					o = [
						n.x0.WELLNESS_PUSHES_COUNT,
						n.x0.PUSHING_DISTANCE,
						n.x0.CYCLING,
						n.x0.SWIMMING,
					],
					l = [n.x0.WELLNESS_PUSHES_COUNT, n.x0.PUSHING_DISTANCE],
					c = [n.x0.WELLNESS_STEPS_COUNT, n.x0.RUNNING],
					d = [n.x0.CYCLING, n.x0.SWIMMING],
					u = [
						n.x0.WELLNESS_STEPS_COUNT,
						n.x0.WELLNESS_PUSHES_COUNT,
						n.x0.PUSHING_DISTANCE,
						n.x0.RUNNING,
						n.x0.CYCLING,
						n.x0.SWIMMING,
						n.x0.WALKING,
					],
					p = (e, t) => {
						switch (e) {
							case n.x0.WALKING:
								return 'icon-activity-walking';
							case n.x0.RUNNING:
								return 'icon-activity-running';
							case n.x0.CYCLING:
								return t
									? 'icon-activity-hand-cycling'
									: 'icon-activity-cycling';
							case n.x0.SWIMMING:
								return 'icon-activity-swimming';
							case n.x0.WELLNESS_STEPS_COUNT:
								return 'icon-steps-1';
							case n.x0.WELLNESS_PUSHES_COUNT:
								return 'icon-activity-wheelchair-push-walk';
							case n.x0.PUSHING_DISTANCE:
								return 'icon-activity-wheelchair-push-run';
							default:
								return '';
						}
					},
					y = [n.ad.ONE_DAY, n.ad.WEEKEND, n.ad.WEEK, n.ad.MONTH];
			},
			275659: (e, t, i) => {
				'use strict';
				i.d(t, {
					Jy: () => d,
					N3: () => a,
					VQ: () => l,
					WI: () => n,
					X1: () => s,
					kO: () => r,
					mJ: () => o,
					v9: () => c,
				});
				const n = {
						steps: !0,
						heartRate: 'hasAllDayHeartRateCapableDevice',
						intensityMinutes: 'hasIntensityMinuteCapableDevice',
						floorsClimbed: 'hasFloorCountCapableDevice',
						stress: 'hasAllDayStressCapableDevice',
						bodyBattery: 'hasBodyBatteryCapableDevice',
						calories: !0,
						weight: !0,
						hydration: !0,
						sleepCoach: 'hasSleepNeedCapableDevice',
						sleepResults: !0,
						sleep: !0,
						sleepScore: 'hasSleepScoreCapableDevice',
						sleepPulseOx: (e) =>
							!e.hasPulseOxAllDayCapableDevice &&
							e.hasPulseOxSleepCapableDevice,
						respiration: 'hasRespirationCapableDevice',
						allDayPulseOx: 'hasPulseOxAllDayCapableDevice',
						menstrualCycle: !1,
						trainingStatus: 'hasTrainingStatusCapableDevice',
						pregnancy: !1,
						bloodPressure: !0,
						trainingReadiness: 'hasTrainingReadinessCapableDevice',
						hrvStatus: 'hasHrvStatusCapableDevice',
						jetLag: !1,
						pushes: !0,
					},
					a = Object.keys(n),
					s = [
						'trainingStatus',
						'pushes',
						'steps',
						'intensityMinutes',
						'floorsClimbed',
						'calories',
						'menstrualCycle',
						'pregnancy',
						'weight',
						'bloodPressure',
						'hydration',
						'trainingReadiness',
						'hrvStatus',
						'jetLag',
					],
					r = {
						FLOORS_CLIMBED: {
							key: 'FLOORS_CLIMBED',
							urlFriendly: 'floors-climbed',
						},
						INTENSITY_MINUTES: {
							key: 'INTENSITY_MINUTES',
							urlFriendly: 'intensity-minutes',
						},
						HYDRATION: { key: 'HYDRATION' },
					},
					o = {
						WELLNESS_TOTAL_STEPS: 'WELLNESS_TOTAL_STEPS',
						WELLNESS_MODERATE_INTENSITY_MINUTES:
							'WELLNESS_MODERATE_INTENSITY_MINUTES',
						WELLNESS_VIGOROUS_INTENSITY_MINUTES:
							'WELLNESS_VIGOROUS_INTENSITY_MINUTES',
						WELLNESS_FLOORS_ASCENDED: 'WELLNESS_FLOORS_ASCENDED',
						COMMON_TOTAL_CALORIES: 'COMMON_TOTAL_CALORIES',
						WELLNESS_TOTAL_PUSHES: 'WELLNESS_TOTAL_PUSHES',
					},
					l = {
						WELLNESS_TOTAL_STEPS: 29,
						WELLNESS_MODERATE_INTENSITY_MINUTES: 51,
						WELLNESS_VIGOROUS_INTENSITY_MINUTES: 52,
						WELLNESS_FLOORS_ASCENDED: 53,
						COMMON_TOTAL_CALORIES: 41,
						WELLNESS_TOTAL_PUSHES: 87,
					},
					c = (e) => {
						if (e)
							for (var t = 0, i = e.length; t < i; t++)
								if (e[t].primaryActivityTrackerIndicator) return e[t];
					},
					d = {
						order: [
							'activity',
							'ecgRecording',
							'healthSnapshot',
							'trainingReadiness',
							'trainingStatus',
							'jetLag',
							'heartRate',
							'bodyBattery',
							'stress',
							'intensityMinutes',
							'pushes',
							'steps',
							'floorsClimbed',
							'calories',
							'sleepCoach',
							'sleepResults',
							'sleep',
							'sleepScore',
							'hrvStatus',
							'sleepPulseOx',
							'allDayPulseOx',
							'respiration',
							'menstrualCycle',
							'weight',
							'floorsClimbed',
							'hydration',
							'menstrualCycle',
							'pregnancy',
							'bloodPressure',
							'event',
						],
						activity: { enabled: !0 },
						ecgRecording: { enabled: !0 },
						healthSnapshot: { enabled: !0 },
						trainingStatus: { enabled: !0 },
						steps: { enabled: !0, open: !1 },
						heartRate: { enabled: !0, open: !1 },
						intensityMinutes: { enabled: !0, open: !1 },
						floorsClimbed: { enabled: !0 },
						stress: { enabled: !0, open: !1 },
						bodyBattery: { enabled: !0, open: !1 },
						calories: { enabled: !0, open: !1 },
						weight: { enabled: !0, open: !1 },
						sleepCoach: { enabled: !0, open: !1 },
						sleepResults: { enabled: !0, open: !1 },
						sleep: { enabled: !0, open: !1 },
						sleepScore: { enabled: !0, open: !1 },
						sleepPulseOx: { enabled: !0, open: !1 },
						allDayPulseOx: { enabled: !0, open: !1 },
						hydration: { enabled: !0, open: !1 },
						menstrualCycle: { enabled: !0, open: !1 },
						respiration: { enabled: !0, open: !1 },
						pregnancy: { enabled: !0, open: !1 },
						bloodPressure: { enabled: !0, open: !1 },
						trainingReadiness: { enabled: !0, open: !1 },
						hrvStatus: { enabled: !0, open: !1 },
						event: { enabled: !0 },
						jetLag: { enabled: !0, open: !1 },
						pushes: { enabled: !0, open: !1 },
					};
			},
			818591: (e, t, i) => {
				'use strict';
				i.d(t, {
					AX: () => l,
					Fl: () => u,
					Qc: () => o,
					Tj: () => r,
					To: () => d,
					VQ: () => s,
					eL: () => c,
				});
				var n = i(80879),
					a = i(544310);
				const s = {
						UNTRAINED: 'Untrained',
						FAIR: 'Fair',
						GOOD: 'Good',
						EXCELLENT: 'Excellent',
						SUPERIOR: 'Superior',
					},
					r = {
						UNTRAINED: a.ColorRedPrimary,
						FAIR: a.ColorOrangePrimary,
						GOOD: a.ColorGreenPrimary,
						EXCELLENT: a.ColorBluePrimary,
						SUPERIOR: a.ColorPurplePrimary,
					},
					o = 'cycling',
					l = 'cross_country_skiing',
					c = (e, t) => {
						const i = Object.values(e).find(
							(e) => e.minValue <= t && (t <= e.maxValue || 0 === e.maxValue)
						);
						return void 0 === i
							? { key: 'superior', label: n.Ay.t('reportswidget:ftp.superior') }
							: {
									key: i.category_key || i.category,
									label: i.category_key
										? n.Ay.t('reportswidget:ftp.' + i.category_key)
										: i.category,
								};
					},
					d = (e, t = 1) => {
						const i = 10 ** t;
						return Math.round(e * i) / i;
					},
					u = (e, t) => `${d(e, 2)} ${t}`;
			},
			378016: (e, t, i) => {
				'use strict';
				i.d(t, {
					Er: () => K,
					IW: () => N,
					Le: () => P,
					Lq: () => m,
					Lu: () => le,
					No: () => de,
					O8: () => j,
					OI: () => ee,
					Ou: () => pe,
					R8: () => I,
					SJ: () => S,
					T4: () => D,
					Tt: () => ne,
					VJ: () => J,
					Vy: () => w,
					W7: () => h,
					WF: () => L,
					WS: () => W,
					YC: () => E,
					YL: () => ce,
					Yg: () => O,
					Yu: () => T,
					Yv: () => z,
					aN: () => Z,
					ag: () => k,
					c3: () => A,
					cq: () => C,
					eb: () => V,
					l6: () => v,
					m6: () => re,
					mC: () => oe,
					ml: () => b,
					oz: () => ae,
					pu: () => Y,
					rE: () => c,
					rJ: () => g,
					rK: () => d,
					rU: () => F,
					rb: () => ie,
					s7: () => _,
					uo: () => se,
					vL: () => y,
					x5: () => ue,
					yp: () => te,
					z9: () => p,
					zw: () => R,
				});
				i(228748);
				var n = i(133499),
					a = i(29273),
					s = i(544310),
					r = i(80879),
					o = i(547052),
					l = i(717776);
				const c = 'map_provider_type',
					d = 'google',
					u = 'baidu',
					p = 'Map.Setting.Trails',
					y =
						'{"courseMarkers":false,"lapMarkers":false,"popularityHeatMap":"none", "popularityHeatMapCheckStatus": false, "trails": false,"showTutorial":true, "hybrid":false,"sattelite":false,"terrain":true, "explorerTab":"Nearby", "trailsListNearbySort":"highest-rated", "trailsListSavedSort":"highest-rated", "trailsReviewSort":"most-recent"}',
					h = {
						NEARBY: { value: 'Nearby', tabIndex: 0 },
						SAVED: { value: 'Saved', tabIndex: 1 },
					},
					g = (e, t) => e > 0 && 0 === t,
					m = () => [
						{
							value: 'HIGHEST_RATED_DESC',
							preferenceValue: 'highest-rated',
							label: r.Ay.t('trails:highest_rated_label'),
						},
						{
							value: 'MOST_POPULAR_DESC',
							preferenceValue: 'most-popular',
							label: r.Ay.t('trails:most_reviews_label'),
						},
					],
					A = (e, t) => {
						let i = [...e];
						if (t && i.length) {
							if (t === m()[0].preferenceValue)
								return i.sort((e, t) => t.courseRating - e.courseRating);
							if (t === m()[1].preferenceValue)
								return i.sort((e, t) => t.tripReportCount - e.tripReportCount);
						}
						return i;
					},
					_ = (e, t) => {
						let i = [...e];
						if (t && i.length) {
							if (t === ie()[0].preferenceValue)
								return i.sort((e, t) => t.activityDateMs - e.activityDateMs);
							if (t === ie()[1].preferenceValue)
								return i.sort((e, t) => e.activityDateMs - t.activityDateMs);
							if (t === ie()[2].preferenceValue)
								return i.sort(
									(e, t) => t.helpfulRatingCount - e.helpfulRatingCount
								);
							if (t === ie()[3].preferenceValue)
								return i.sort((e, t) => {
									const i = e.courseName.toUpperCase(),
										n = t.courseName.toUpperCase();
									return i < n ? -1 : i > n ? 1 : 0;
								});
						}
						return i;
					},
					E = (e) =>
						e
							.slice(11)
							.replace(/([()])/g, '')
							.split(', ')
							.map((e) => {
								let [t, i] = e.split(' ');
								return { lat: +i, lon: +t };
							}),
					T = () => ({
						1: {
							color: s.ColorBlueLight3,
							name: r.Ay.t('training_plans:activity_rating_easy'),
						},
						2: {
							color: s.ColorRedDark2,
							name: r.Ay.t('training_plans:activity_rating_moderate'),
						},
						3: {
							color: s.ColorDarkuiSurface3,
							name: r.Ay.t('training_plans:activity_rating_hard'),
						},
					}),
					C = 2,
					S = 3,
					I = 4,
					v = 5,
					f = (e) => Math.ceil((e / 3600) * 2) / 2,
					D = (e) =>
						f(e.durationMinSeconds) === f(e.durationMaxSeconds)
							? (0, l.jsxs)(l.Fragment, {
									children: [
										f(e.durationMinSeconds) - 0.5,
										'-',
										f(e.durationMaxSeconds),
										' ',
										(0, l.jsx)(o.A, { ns: 'userprofile', content: 'hours' }),
										' ',
									],
								})
							: e.durationMinSeconds <= 1800
								? (0, l.jsxs)(l.Fragment, {
										children: [
											' ',
											'< ',
											f(e.durationMaxSeconds),
											' ',
											e.durationMaxSeconds <= 3600
												? (0, l.jsx)(o.A, {
														ns: 'units',
														content: 'duration_hour',
													})
												: (0, l.jsx)(o.A, {
														ns: 'userprofile',
														content: 'hours',
													}),
											' ',
										],
									})
								: (0, l.jsxs)(l.Fragment, {
										children: [
											f(e.durationMinSeconds),
											'-',
											f(e.durationMaxSeconds),
											' ',
											(0, l.jsx)(o.A, { ns: 'userprofile', content: 'hours' }),
											' ',
										],
									}),
					N = () => {
						let e = d;
						return n.A.userInChina() ? (e = u) : e === u && (e = d), e;
					},
					R = () => ({
						POINT_TO_POINT: r.Ay.t('trails:point_to_point_label'),
						LOOP: r.Ay.t('trails:loop_label'),
						OUT_AND_BACK: r.Ay.t('trails:out_and_back_label'),
					}),
					b = () => [
						{ content: r.Ay.t('trails:any_label'), type: 'ANY' },
						{ content: '1', type: '1_STAR' },
						{ content: '2', type: '2_STAR' },
						{ content: '3', type: '3_STAR' },
						{ content: '4+', type: '4_STAR' },
					],
					L = () => [
						{ content: r.Ay.t('trails:any_label'), type: 'ANY' },
						{
							content: r.Ay.t('training_plans:activity_rating_easy'),
							type: '1_EASY',
						},
						{
							content: r.Ay.t('training_plans:activity_rating_moderate'),
							type: '2_MODERATE',
						},
						{
							content: r.Ay.t('training_plans:activity_rating_hard'),
							type: '3_HARD',
						},
					],
					P = () => [
						{ content: r.Ay.t('trails:any_label'), type: 'ANY' },
						{ content: r.Ay.t('trails:loop_label'), type: 'LOOP' },
						{
							content: r.Ay.t('trails:out_and_back_label'),
							type: 'OUT_AND_BACK',
						},
						{
							content: r.Ay.t('trails:point_to_point_label'),
							type: 'POINT_TO_POINT',
						},
					],
					O = () => [
						{ content: r.Ay.t('trails:any_label'), type: 'ANY' },
						{
							content: r.Ay.t('trails:features_dog_friendly_label'),
							type: 'DOG_FRIENDLY',
						},
						{
							content: r.Ay.t('trails:features_no_dogs_label'),
							type: 'NO_DOGS',
						},
						{
							content: r.Ay.t('trails:features_waterfalls_label'),
							type: 'WATERFALLS',
						},
						{ content: r.Ay.t('trails:features_lakes_label'), type: 'LAKES' },
						{ content: r.Ay.t('trails:features_rivers_label'), type: 'RIVERS' },
						{ content: r.Ay.t('trails:features_oceans_label'), type: 'OCEANS' },
						{
							content: r.Ay.t('trails:features_mountaineering_label'),
							type: 'MOUNTAINEERING',
						},
						{
							content: r.Ay.t('trails:features_steep_sections_label'),
							type: 'STEEP_SECTIONS',
						},
						{ content: r.Ay.t('trails:features_forest_label'), type: 'FOREST' },
						{
							content: r.Ay.t('trails:features_flowers_label'),
							type: 'FLOWERS',
						},
						{
							content: r.Ay.t('trails:features_kid_friendly_label'),
							type: 'KID_FRIENDLY',
						},
						{
							content: r.Ay.t('trails:features_permit_required_label'),
							type: 'PERMIT_REQUIRED',
						},
						{
							content: r.Ay.t('trails:features_water_stations_label'),
							type: 'WATER_STATIONS',
						},
						{
							content: r.Ay.t('trails:features_reaches_peaks_label'),
							type: 'REACHES_PEAKS',
						},
					],
					w = () => [
						{
							content: r.Ay.t('trails:conditions_temporary_closure'),
							type: 'TEMPORARY_CLOSURE',
						},
						{
							content: r.Ay.t('trails:conditions_trail_damage'),
							type: 'TRAIL_DAMAGE',
						},
						{ content: r.Ay.t('trails:conditions_wet'), type: 'WET' },
						{ content: r.Ay.t('trails:conditions_muddy'), type: 'MUDDY' },
						{
							content: r.Ay.t('trails:conditions_ice_snow'),
							type: 'ICE_AND_SNOW',
						},
						{
							content: r.Ay.t('trails:conditions_flooded_sections'),
							type: 'FLOODED_SECTIONS',
						},
						{ content: r.Ay.t('trails:conditions_bugs'), type: 'BUGS' },
					],
					F = (e) => {
						switch (e) {
							case '1_EASY':
								return 1;
							case '2_MODERATE':
								return 2;
							case '3_HARD':
								return 3;
							default:
								return '';
						}
					},
					k = (e) => {
						switch (e) {
							case 1:
								return '1_EASY';
							case 2:
								return '2_MODERATE';
							case 3:
								return '3_HARD';
							default:
								return '';
						}
					},
					U = 0,
					M = 100,
					G = 150,
					x = 0,
					B = 1e4,
					H = 3e3,
					V = () => U,
					W = () =>
						'distance_unit_metric' === a.A.getDistanceUnitKey() ? G : M,
					J = () => x,
					Y = () =>
						'elevation_unit_metric' === a.A.getMetersFtUnitKey() ? H : B,
					$ = (e, t, i, n) => {
						const a = (Math.PI / 180) * e,
							s = (Math.PI / 180) * t,
							r = (Math.PI / 180) * i,
							o = r - a,
							l = (Math.PI / 180) * n - s,
							c =
								Math.sin(o / 2) * Math.sin(o / 2) +
								Math.cos(a) * Math.cos(r) * Math.sin(l / 2) * Math.sin(l / 2);
						return (
							6371 * (2 * Math.atan2(Math.sqrt(c), Math.sqrt(1 - c))) * 1e3
						);
					},
					j = (e, t, i) => {
						for (let n = 0; n < t.length - 1; n++) {
							const a = [t[n], t[n + 1]],
								s = $(e.lat, e.lng, a[0].lat, a[0].lon),
								r = $(e.lat, e.lng, a[1].lat, a[1].lon),
								o = $(a[0].lat, a[0].lon, a[1].lat, a[1].lon);
							if (s <= i || r <= i || s + r <= o + i) return !0;
						}
						return !1;
					},
					K = [
						'01',
						'02',
						'03',
						'04',
						'05',
						'06',
						'07',
						'08',
						'09',
						'10',
						'11',
						'12',
					],
					z = (e) => {
						const t =
							(null === e || void 0 === e ? void 0 : e.trailUsage) || {};
						return Object.keys(t).forEach((e) => (t[e] *= 100)), t;
					};
				function q(e, t, i, n) {
					let a;
					return (
						'distance' === n ? (a = W()) : 'ascent' === n && (a = Y()),
						i === a ? e >= t : e >= t && e <= i
					);
				}
				function Q(e, t, i, n, a) {
					if (t.includes('ANY') && void 0 === a) return !0;
					if ('rating' === i) {
						if (t.includes('ANY')) return !!a || (e > 0 && e <= 5 && n > 0);
						const i = t.map((e) => parseInt(e.split('_')[0]));
						return a
							? i.some(
									(t) =>
										0 === e ||
										0 === n ||
										(t <= e && (4 === t ? e <= t + 1 : e < t + 1))
								)
							: i.some(
									(t) => t <= e && (4 === t ? e <= t + 1 : e < t + 1) && n > 0
								);
					}
					if ('difficulty' === i) {
						return t.map((e) => parseInt(e.split('_')[0])).includes(e);
					}
					return 'features' === i
						? t.every((t) => !e || e.includes(t))
						: t.includes(e);
				}
				const X = [
					(e, t) =>
						(!e.minDistance && 0 !== e.minDistance) ||
						!e.maxDistance ||
						q(
							parseFloat(a.A.personalizeDistance(t.courseDistanceCM / 100)),
							e.minDistance,
							e.maxDistance,
							'distance'
						),
					(e, t) =>
						(!e.minAscent && 0 !== e.minAscent) ||
						!e.maxAscent ||
						q(
							parseFloat(
								a.A.personalizeElevation(t.courseElevationGainCM / 100)
							),
							e.minAscent,
							e.maxAscent,
							'ascent'
						),
					(e, t) =>
						!e.starRating ||
						Q(
							t.courseRating,
							e.starRating,
							'rating',
							t.tripReportCount,
							e.displayNotRated
						),
					(e, t) =>
						!e.difficulty || Q(t.courseDifficulty, e.difficulty, 'difficulty'),
					(e, t) => !e.trailType || Q(t.courseTypeDTO, e.trailType),
					(e, t) => !e.trailFeatures || Q(t.tags, e.trailFeatures, 'features'),
				];
				function Z(e, t) {
					return (function (e, t, ...i) {
						return e.filter((e) => i.every((i) => i(t, e)));
					})([...e], t, ...X);
				}
				const ee = () => [
						{
							value: 'MOST_RECENT',
							preferenceValue: 'most-recent',
							label: r.Ay.t('common:most_recent'),
						},
						{
							value: 'MOST_HELPFUL',
							preferenceValue: 'most-helpful',
							label: r.Ay.t('trails:most_helpful_label'),
						},
					],
					te = [
						{ preferenceValue: 'most-recent', orderValue: 'ACTIVITY_DATE' },
						{
							preferenceValue: 'most-helpful',
							orderValue: 'HELPFULNESS_SCORE',
						},
					],
					ie = () => [
						{
							value: 'NEWEST_TO_OLDEST',
							preferenceValue: 'newest-to-oldest',
							label: r.Ay.t('trails:trail_review_sort_new_old'),
						},
						{
							value: 'OLDEST_TO_NEWEST',
							preferenceValue: 'oldest-to-newest',
							label: r.Ay.t('trails:trail_review_sort_old_new'),
						},
						{
							value: 'MOST_HELPFUL',
							preferenceValue: 'most-helpful',
							label: r.Ay.t('trails:most_helpful_label'),
						},
						{
							value: 'ALPHABETICAL',
							preferenceValue: 'alphabetical',
							label: r.Ay.t('trails:trail_review_sort_alphabetical'),
						},
					],
					ne = (e) => {
						var t, i;
						return !(
							null === e ||
							void 0 === e ||
							!e.rating ||
							!(
								(null !== e && void 0 !== e && e.reviewComment) ||
								(null !== e && void 0 !== e && e.difficulty) ||
								(null === e ||
								void 0 === e ||
								null === (t = e.courseConditions) ||
								void 0 === t
									? void 0
									: t.length) > 0 ||
								(null === e ||
								void 0 === e ||
								null === (i = e.images) ||
								void 0 === i
									? void 0
									: i.length) > 0
							)
						);
					},
					ae =
						'https://support.garmin.com/sas/gcweb/?productId=73207&contentId=qinBCuTjdl53j3VHSaxl76',
					se = '/images/trails/avatar-trails-generic.png',
					re = '/images/trails/trail-default-thumbnail.png',
					oe = 10,
					le = (e) => {
						let t = new FormData();
						return t.append('image', e), t;
					},
					ce = (e, t, i) => {
						const n = Math.min(e.length, t.length);
						for (let a = 0; a < n; a++) if (e[a][i] !== t[a][i]) return !1;
						return !0;
					},
					de = 5242880,
					ue = (e, t, i) => {
						const n = [];
						function a() {
							e.length > 0
								? (function (e) {
										const i = new FileReader();
										(i.onload = function (i) {
											const s = new Image();
											(s.onload = function () {
												if (e.size > t) {
													const i = document.createElement('canvas'),
														r = i.getContext('2d'),
														o = t / e.size,
														l = s.width * o,
														c = s.height * o;
													(i.width = l),
														(i.height = c),
														r.drawImage(s, 0, 0, l, c),
														i.toBlob((t) => {
															URL.revokeObjectURL(s.src), i.remove();
															const r = new File([t], e.name, {
																type: e.type,
																lastModified: Date.now(),
															});
															n.push(r), a();
														}, e.type);
												} else n.push(e), a();
											}),
												(s.src = i.target.result);
										}),
											i.readAsDataURL(e);
									})(e.shift())
								: i(n);
						}
						a();
					},
					pe = function (e) {
						return e.reduce(
							function (t, i) {
								return [t[0] + i[0] / e.length, t[1] + i[1] / e.length];
							},
							[0, 0]
						);
					};
			},
			287752: (e, t, i) => {
				'use strict';
				i.d(t, {
					C: () => y,
					Fd: () => h,
					NB: () => d,
					NF: () => u,
					SK: () => m,
					c_: () => g,
					ee: () => r,
					fD: () => s,
					hb: () => p,
					lg: () => o,
					pU: () => c,
					rY: () => l,
				});
				var n = i(696031),
					a = i(80879);
				const s = ['Driver', 'Wood', 'Hybrid', 'Iron', 'Wedge', 'Putter'],
					r = {
						REGULAR: 'flex.regular',
						STIFF: 'flex.stiff',
						EXTRA_STIFF: 'flex.extra.stiff',
						SENIOR: 'flex.senior',
						LADIES: 'flex.ladies',
						STIFF_REGULAR: 'flex.stiff.regular',
						REGULAR: 'flex.regular',
					},
					o = {
						0: {
							shortName: 'unknown.abbrev',
							fullName: 'golf_club_type_unknown',
						},
						1: { shortName: 'driver.abbrev', fullName: 'club.type.driver' },
						2: { shortName: 'three.wood.abbrev', fullName: 'club.type.3.wood' },
						3: { shortName: 'five.wood.abbrev', fullName: 'club.type.5.wood' },
						4: {
							shortName: 'one.hybrid.abbrev',
							fullName: 'club.type.1.hybrid',
						},
						5: {
							shortName: 'two.hybrid.abbrev',
							fullName: 'club.type.2.hybrid',
						},
						6: {
							shortName: 'three.hybrid.abbrev',
							fullName: 'club.type.3.hybrid',
						},
						7: {
							shortName: 'four.hybrid.abbrev',
							fullName: 'club.type.4.hybrid',
						},
						8: {
							shortName: 'five.hybrid.abbrev',
							fullName: 'club.type.5.hybrid',
						},
						9: {
							shortName: 'six.hybrid.abbrev',
							fullName: 'club.type.6.hybrid',
						},
						10: { shortName: 'one.iron.abbrev', fullName: 'club.type.1.iron' },
						11: { shortName: 'two.iron.abbrev', fullName: 'club.type.2.iron' },
						12: {
							shortName: 'three.iron.abbrev',
							fullName: 'club.type.3.iron',
						},
						13: { shortName: 'four.iron.abbrev', fullName: 'club.type.4.iron' },
						14: { shortName: 'five.iron.abbrev', fullName: 'club.type.5.iron' },
						15: { shortName: 'six.iron.abbrev', fullName: 'club.type.6.iron' },
						16: {
							shortName: 'seven.iron.abbrev',
							fullName: 'club.type.7.iron',
						},
						17: {
							shortName: 'eight.iron.abbrev',
							fullName: 'club.type.8.iron',
						},
						18: { shortName: 'nine.iron.abbrev', fullName: 'club.type.9.iron' },
						19: {
							shortName: 'pitching.wedge.abbrev',
							fullName: 'club.type.pitching.wedge',
						},
						20: {
							shortName: 'gap.wedge.abbrev',
							fullName: 'club.type.gap.wedge',
						},
						21: {
							shortName: 'sand.wedge.abbrev',
							fullName: 'club.type.sand.wedge',
						},
						22: {
							shortName: 'lob.wedge.abbrev',
							fullName: 'club.type.lob.wedge',
						},
						23: { shortName: 'putter.abbrev', fullName: 'putter' },
						24: { shortName: 'two.wood.abbrev', fullName: 'club.type.2.wood' },
						25: { shortName: 'four.wood.abbrev', fullName: 'club.type.4.wood' },
						26: {
							shortName: 'seven.wood.abbrev',
							fullName: 'club.type.7.wood',
						},
						27: { shortName: 'nine.wood.abbrev', fullName: 'club.type.9.wood' },
						28: {
							shortName: 'eleven.wood.abbrev',
							fullName: 'club.type.11.wood',
						},
						29: {
							shortName: 'thirteen.wood.abbrev',
							fullName: 'club.type.13.wood',
						},
						30: {
							shortName: 'fifteen.wood.abbrev',
							fullName: 'club.type.15.wood',
						},
						31: {
							shortName: 'seventeen.wood.abbrev',
							fullName: 'club.type.17.wood',
						},
						32: {
							shortName: 'nineteen.wood.abbrev',
							fullName: 'club.type.19.wood',
						},
						33: {
							shortName: 'twenty.one.wood.abbrev',
							fullName: 'club.type.21.wood',
						},
						34: {
							shortName: 'twenty.three.wood.abbrev',
							fullName: 'club.type.23.wood',
						},
						35: {
							shortName: 'twenty.five.wood.abbrev',
							fullName: 'club.type.25.wood',
						},
						36: {
							shortName: 'seven.hybrid.abbrev',
							fullName: 'club.type.7.hybrid',
						},
						37: {
							shortName: 'eight.hybrid.abbrev',
							fullName: 'club.type.8.hybrid',
						},
						38: {
							shortName: 'nine.hybrid.abbrev',
							fullName: 'club.type.9.hybrid',
						},
						39: {
							shortName: 'pitching.wedge.hybrid.abbrev',
							fullName: 'club.type.pitching.wedge.hybrid',
						},
						40: {
							shortName: 'gap.wedge.hybrid.abbrev',
							fullName: 'club.type.gap.wedge.hybrid',
						},
						41: {
							shortName: 'sand.wedge.hybrid.abbrev',
							fullName: 'club.type.sand.wedge.hybrid',
						},
						42: {
							shortName: 'lob.wedge.hybrid.abbrev',
							fullName: 'club.type.lob.wedge.hybrid',
						},
					},
					l = (e) =>
						void 0 === e || null === e
							? o[0].fullName
							: o[e.toString()].fullName,
					c = (e) => (e ? r[e] : ''),
					d = (e, t, i) => {
						let n = [];
						for (let a = 0; a < t.length; a++)
							t[a].uuid === e.uuid &&
								!0 === t[a].defaultGear &&
								i.map((e, i) => {
									e.typeId === t[a].activityTypePk &&
										n.push({ ...e, uuid: t[a].uuid });
								});
						return n;
					},
					u = (e, t, i) => {
						const n = i || !1,
							a = (e, t, i) => {
								if (!t) return [];
								const a = (e, t) => t.find((t) => t.value === parseInt(e));
								let s = [];
								if (i && t) {
									for (let a = 0; a < t.length; a++)
										for (let r = 0; r < i.length; r++)
											t[a].clubTypeId === i[r].value &&
												i[r].name.indexOf(e) > -1 &&
												t[a].retired === n &&
												s.push(t[a]);
									s &&
										s.sort((e, t) => {
											const n = a(e.clubTypeId, i).loftAngle,
												s = a(t.clubTypeId, i).loftAngle,
												r = e.name || '',
												o = t.name || '';
											return n === s
												? r.localeCompare(o)
												: n < s
													? -1
													: n > s
														? 1
														: 0;
										});
								}
								return s;
							};
						let r = [];
						for (let l = 0; l < s.length; l++) {
							let i = a(s[l], e, t);
							if (i) for (var o = 0; o < i.length; o += 1) i[o] && r.push(i[o]);
						}
						return r;
					},
					p = (e) => {
						const t = e.clubStats ? e.clubStats.averageDistance : null;
						return t
							? n.A.personalizeDistance(t) +
									' ' +
									a.Ay.t(`units:${n.A.distanceUnitKey()}`)
							: '\u2014 ' + a.Ay.t(`units:${n.A.distanceUnitKey()}`);
					},
					y = (e) => {
						const t = e.clubStats ? e.clubStats.maxLifetimeDistance : null;
						return t
							? n.A.personalizeDistance(t) +
									' ' +
									a.Ay.t(`units:${n.A.distanceUnitKey()}`)
							: '\u2014 ' + a.Ay.t(`units:${n.A.distanceUnitKey()}`);
					},
					h = (e, t, i) => {
						let n = '';
						return (
							(n = t.find((t) => t.value === e)),
							n
								? i.htmlDecode(
										(a = n).displayRange
											? a.displayRange
											: a.loftAngle + '&deg;'
									)
								: n
						);
						var a;
					},
					g = (e, t) => {
						let i = s.findIndex((t) => e.value > 0 && e.name.indexOf(t) > -1),
							n = s.findIndex((e) => t.value > 0 && t.name.indexOf(e) > -1);
						if (i !== n) return i - n;
						let a = e.loftAngle,
							r = t.loftAngle;
						return a < r ? -1 : a > r ? 1 : 0;
					},
					m = Object.keys(o).length - 1;
			},
			105172: (e, t, i) => {
				'use strict';
				i.d(t, {
					AB: () => _,
					Pq: () => N,
					Qq: () => O,
					V0: () => L,
					VK: () => v,
					Zo: () => b,
					_h: () => m,
					fu: () => f,
					jK: () => A,
					tX: () => P,
					v2: () => D,
				});
				var n = i(698431),
					a = i(702291),
					s = i(422460),
					r = i(29273),
					o = i(34581),
					l = i(352406);
				const c = 'walking',
					d = 'running',
					u = 'cycling',
					p = 'swimming',
					y = 'steps',
					h = 'pushes',
					g = 'para_sports',
					m = {
						0: c,
						1: d,
						2: u,
						3: p,
						4: y,
						5: 'steps_distance',
						6: 'calories',
						10: h,
						11: g,
					},
					A = (e, t) => {
						if (((t = t || 0), m[e] === y)) return r.A.personalizeSteps(t);
						if (((e) => m[e] === p)(e)) {
							return `${r.A.personalizeSwimDistance(t)} ${n.A.t(`units:${r.A.getSwimDistanceUnitKey()}`)}`;
						}
						if (
							((e) => m[e] === d)(e) ||
							((e) => m[e] === u)(e) ||
							((e) => m[e] === c)(e) ||
							((e) => m[e] === g)(e)
						) {
							return `${r.A.personalizeDistancePrecision1(t)} ${n.A.t(`units:${r.A.getDistanceUnitKey()}`)}`;
						}
						return ((e) => m[e] === h)(e) ? r.A.formatWholeNumber(t) : t;
					},
					_ = {
						[4]: 'custom',
						[3]: 'custom',
						[0]: 'week',
						[1]: 'month',
						[2]: 'custom',
					},
					E = 'ready',
					T = 'started',
					C = 'stopped',
					S = 'completed',
					I = { 0: E, 1: T, 2: C, 3: 'locked', 4: S, 5: 'full' },
					v = (e) => I[e] === E,
					f = (e) => I[e] === T,
					D = (e) => I[e] === C,
					N = (e) => I[e] === S,
					R = (e, t = !1) => {
						if (!e) return '';
						let i;
						switch (e) {
							case 1:
								i = n.A.t('challengewidget:number_st', { 0: e });
								break;
							case 2:
								i = n.A.t('challengewidget:number_nd', { 0: e });
								break;
							case 3:
								i = n.A.t('challengewidget:number_rd', { 0: e });
								break;
							default:
								i = e;
						}
						return t ? i : `${i} ${n.A.t('challengewidget:rank_place')}`;
					};
				function b(e, t) {
					return t
						? n.A.t('challengewidget:user_rank_n_of_rank_total_n', {
								0: e,
								1: t,
							})
						: R(e);
				}
				const L = (e) => {
					const t = a.A.parseISO(e);
					return s.Ay.formatMonthDayYear(t);
				};
				function P(e, t) {
					const i = new Date(),
						n = o.A.get('preferredLocale'),
						a = l.A.getFullLocale(n);
					return e.toDateString() === t.toDateString()
						? i.getFullYear() === e.getFullYear()
							? new Intl.DateTimeFormat(a, {
									month: 'long',
									day: 'numeric',
								}).format(e)
							: new Intl.DateTimeFormat(a, {
									year: 'numeric',
									month: 'short',
									day: 'numeric',
								}).format(e)
						: s.Ay.formatDateRange(e, t);
				}
				const O = (e) => {
					switch (e) {
						case 1:
							return 'colorGold';
						case 2:
							return 'colorSilver';
						case 3:
							return 'colorBronze';
						default:
							return '';
					}
				};
			},
			471270: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => l });
				var n = i(228748),
					a = i(668712),
					s = i(547052),
					r = i(568574),
					o = i(717776);
				const l = function ({ open: e, onClose: t, errorType: i }) {
					const { errorTitle: l, errorContent: c } = (0, n.useMemo)(
						() =>
							i === r.QC.groupDeleted
								? {
										errorTitle: 'group_unavailable_title',
										errorContent: 'group_unavailable_message',
									}
								: i === r.QC.acceptRequestNoPermission
									? {
											errorTitle: 'group_request_not_accepted_modal_title',
											errorContent: 'group_request_not_accepted_modal_message',
										}
									: i === r.QC.requestCancelled
										? {
												errorTitle: 'group_request_canceled_modal_title',
												errorContent: 'group_request_canceled_modal_message',
											}
										: i === r.QC.invitationCancelled
											? {
													errorTitle: 'group_invitation_expired_modal_title',
													errorContent:
														'group_invitation_expired_modal_message',
												}
											: i === r.QC.announcementDeleted
												? {
														errorTitle:
															'group_announcement_unavailable_modal_title',
														errorContent:
															'group_announcement_unavailable_modal_message',
													}
												: { errorTitle: null, errorContent: null },
						[i]
					);
					return (
						l &&
						c &&
						(0, o.jsxs)(a.lG, {
							open: e,
							onClose: t,
							children: [
								(0, o.jsx)(a.L3, {
									children: (0, o.jsx)(s.A, { ns: 'group', content: l }),
								}),
								(0, o.jsx)(a.Cf, {
									children: (0, o.jsx)(s.A, { ns: 'group', content: c }),
								}),
								(0, o.jsx)(a.ii, {
									children: (0, o.jsx)(a.$n, {
										onClick: t,
										children: (0, o.jsx)(s.A, {
											ns: 'common',
											content: 'button_ok',
										}),
									}),
								}),
							],
						})
					);
				};
			},
			820284: (e, t, i) => {
				'use strict';
				i.d(t, {
					BS: () => s,
					No: () => r,
					Vl: () => a,
					iR: () => n,
					wR: () => o,
				});
				const n = {
						CONNECTION_REQUEST: 1,
						GROUP_JOIN_REQUEST: 2,
						GROUP_INVITE: 3,
						ADHOC_INVITE: 4,
						KIDADHOC_INVITE: 5,
						KIDTEAM_INVITE: 6,
						DEVICE_INVITE: 7,
					},
					a = {
						AUTO: 0,
						GROUP: 1,
						AD_HOC: 2,
						VIVOKID: 3,
						VIVOKID_TEAMS: 4,
						TEAM: 5,
						BADGE: 6,
					},
					s = {
						UNDECIDED: 0,
						PROCESSING: 1,
						ACCEPTED: 2,
						DECLINED: 3,
						UNDOING: 4,
					},
					r = { CANCEL: 0, OK: 1, DO_NOT_SHOW_AGAIN: 2 },
					o = { PRIVACY_CONFIRM: 1, CANCEL_CONFIRM: 2, PRIVACY_INFO: 3 };
			},
			604497: (e, t, i) => {
				'use strict';
				i.d(t, {
					GA: () => p,
					H5: () => u,
					Li: () => y,
					Mo: () => m,
					Rp: () => o,
					S8: () => s,
					_T: () => h,
					cL: () => c,
					dS: () => r,
					fi: () => A,
					fr: () => _,
					ix: () => g,
					w4: () => d,
					yZ: () => l,
				});
				var n = i(544310),
					a = i(624438);
				const s = {
						acclimated: n.ColorGreenPrimary,
						mild: n.ColorGreenPrimary,
						moderate: n.ColorYellowDark3,
						significant: n.ColorOrangeDark2,
						severe: n.ColorRedPrimary,
						white: n.ColorWhite,
						preTrip: n.ColorLightuiAccent1,
					},
					r = {
						ACCLIMATED: 1,
						MILD: 2,
						MODERATE: 3,
						SIGNIFICANT: 4,
						SEVERE: 5,
					},
					o = {
						LIGHT: {
							id: 'LIGHT',
							iconClassName: 'icon-jetlag-light',
							color: n.ColorOrangeDark1,
						},
						SLEEP: {
							id: 'SLEEP',
							iconClassName: 'icon-jetlag-sleep',
							color: n.ColorBlueDark1,
						},
						ACTIVITIES: {
							id: 'ACTIVITIES',
							iconClassName: 'icon-jetlag-activity',
							color: n.ColorGreenDark2,
						},
					},
					l = [o.LIGHT.id, o.SLEEP.id, o.ACTIVITIES.id],
					c = {
						LHA_JET_LAG_NOTIFICATION_TYPE_LIGHT_EXPOSE: {
							type: 'LHA_JET_LAG_NOTIFICATION_TYPE_LIGHT_EXPOSE',
							category: o.LIGHT.id,
							color: n.ColorOrangeDark1,
							borderColor: n.ColorOrangeDark1,
						},
						LHA_JET_LAG_NOTIFICATION_TYPE_LIGHT_AVOID: {
							type: 'LHA_JET_LAG_NOTIFICATION_TYPE_LIGHT_AVOID',
							category: o.LIGHT.id,
							color: 'transparent',
							borderColor: n.ColorOrangeDark1,
						},
						LHA_JET_LAG_NOTIFICATION_TYPE_LIGHT_AVOID_END: {
							type: 'LHA_JET_LAG_NOTIFICATION_TYPE_LIGHT_AVOID_END',
							category: o.LIGHT.id,
							color: 'transparent',
							borderColor: n.ColorOrangeDark1,
						},
						LHA_JET_LAG_NOTIFICATION_TYPE_SLEEP: {
							type: 'LHA_JET_LAG_NOTIFICATION_TYPE_SLEEP',
							category: o.SLEEP.id,
							color: n.ColorBlueDark1,
							borderColor: n.ColorBlueDark1,
						},
						LHA_JET_LAG_NOTIFICATION_TYPE_ACTIVITIES: {
							type: 'LHA_JET_LAG_NOTIFICATION_TYPE_ACTIVITIES',
							category: o.ACTIVITIES.id,
							color: n.ColorGreenDark2,
							borderColor: n.ColorGreenDark2,
						},
					},
					d = 'LHA_JET_LAG_FEEDBACK_UNKNOWN',
					u = 'LHA_JET_LAG_BODY_CLOCK_SHIFT_FEEDBACK_UNKNOWN',
					p = `/${a.fX}/edit`,
					y = `/${a.fX}/setup`,
					h = `/${a.fX}/manage-trips`,
					g = 'fromCalendar=true',
					m = 'calendarDate',
					A = 204,
					_ = 25;
			},
			559685: (e, t, i) => {
				'use strict';
				i.d(t, {
					E2: () => E,
					G2: () => D,
					Ip: () => A,
					LU: () => L,
					Lq: () => M,
					ME: () => v,
					Mu: () => f,
					Qi: () => w,
					RS: () => C,
					WX: () => P,
					Xu: () => T,
					Zx: () => m,
					e4: () => U,
					lv: () => k,
					oN: () => g,
					rR: () => _,
					yH: () => O,
					yg: () => N,
				});
				i(228748);
				var n = i(422460),
					a = i(702291),
					s = i(505157),
					r = i(758948),
					o = i(576797),
					l = i(362905),
					c = i(80879),
					d = i(408822),
					u = i(547052),
					p = i(604497),
					y = i(128652),
					h = i(717776);
				const g = (e, t) => {
						const i = n.Ay.formatISODate(a.A.parseISO(e)),
							r = s.A.secondsToHoursMinutesAndSeconds(a.A.parseTime(t));
						return n.Ay.formatConnectTimestamp(new Date(`${i}T${r}`));
					},
					m = (e, t, i, s) => {
						const {
							originTime: r,
							originDate: o,
							originTimezone: l,
							destinationTime: c,
							destinationDate: d,
							destinationTimezone: p,
						} = e;
						let y = {};
						const m = g(o, r),
							A = g(d, c),
							_ = a.A.parseISOUTC(m + l),
							E = a.A.parseISOUTC(A + p),
							T = n.Ay.getDaysDiffBetweenTwoDates(o, d);
						T < 0
							? (y.destinationDateError = (0, h.jsx)(u.A, {
									ns: 'jet_lag',
									content: 'error_message_arrival_date',
								}))
							: 0 === T &&
								E.getTime() < _.getTime() &&
								(y.destinationTimeError = (0, h.jsx)(u.A, {
									ns: 'jet_lag',
									content: 'error_message_arrival_time',
								}));
						const C = t[i - 2];
						if (C) {
							const e = C.originDate.getTime() > o.getTime(),
								t =
									C.originDate.getTime() < o.getTime() &&
									o.getTime() < C.destinationDate.getTime();
							(e || t || !C.originDate) &&
								(y.originDateError = (0, h.jsx)(u.A, {
									ns: 'jet_lag',
									content: 'error_message_previous_destination_date_conflict',
								}));
							const i = g(C.destinationDate, C.destinationTime),
								n = a.A.parseISOUTC(i + C.destinationTimezone);
							C.destinationDate.getTime() === o.getTime() &&
								n.getTime() > _.getTime() &&
								(y.originTimeError = (0, h.jsx)(u.A, {
									ns: 'jet_lag',
									content: 'error_message_previous_destination_time_conflict',
								}));
						}
						return (
							s.forEach((t) => {
								if (e.tripId && t.tripId === e.tripId) return;
								const i = t.flights[0],
									n = t.flights[t.flights.length - 1],
									s = a.A.parseISOUTC(i.originTimestamp + i.originTimezone),
									r = a.A.parseISOUTC(
										n.destinationTimestamp + n.destinationTimezone
									);
								s.getTime() <= _.getTime() &&
									_.getTime() <= r.getTime() &&
									(y.originDateError = (0, h.jsx)(u.A, {
										ns: 'jet_lag',
										content: 'error_message_another_trip_conflict',
									})),
									s.getTime() <= E.getTime() &&
										E.getTime() <= r.getTime() &&
										(y.destinationDateError = (0, h.jsx)(u.A, {
											ns: 'jet_lag',
											content: 'error_message_another_trip_conflict',
										})),
									_.getTime() <= s.getTime() &&
										r.getTime() <= E.getTime() &&
										((y.originDateError = (0, h.jsx)(u.A, {
											ns: 'jet_lag',
											content: 'error_message_another_trip_conflict',
										})),
										(y.destinationDateError = (0, h.jsx)(u.A, {
											ns: 'jet_lag',
											content: 'error_message_another_trip_conflict',
										})));
							}),
							y
						);
					},
					A = (e) =>
						!Object.values(e).includes(null) && !Object.values(e).includes(''),
					_ = (e) => {
						const t = e.split(/:| /);
						if (isNaN(t[0]) || isNaN(t[1])) return !1;
						if (t.length > 2) {
							if (
								3 === t.length &&
								t[2] !== d.A.localize('AM') &&
								t[2] !== d.A.localize('PM')
							)
								return !1;
							if (
								4 === t.length &&
								t[2] + ' ' + t[3] !== d.A.localize('AM') &&
								t[2] + ' ' + t[3] !== d.A.localize('PM')
							)
								return !1;
						}
						return !0;
					},
					E = (e) => {
						if (!e || !e.startDate || !e.endDate) return !1;
						const t = new Date();
						let i, n;
						const { flights: a } = e;
						return (
							a && a.length > 0
								? ((i = new Date(
										`${a[0].originTimestamp}${a[0].originTimezone}`
									)),
									(n = new Date(
										`${a[a.length - 1].destinationTimestamp}${a[a.length - 1].destinationTimezone}`
									)))
								: ((i = new Date(e.startDate)), (n = new Date(e.endDate))),
							i.getTime() <= t.getTime() && t.getTime() <= n.getTime()
						);
					},
					T = (e) => {
						if (!e || !e.startDate || !e.endDate) return !1;
						const t = new Date();
						let i;
						const { flights: n } = e;
						return (
							(i =
								n && n.length > 0
									? new Date(`${n[0].originTimestamp}${n[0].originTimezone}`)
									: new Date(e.startDate)),
							i.getTime() >= t.getTime()
						);
					},
					C = (e) => {
						switch (e) {
							case p.dS.SEVERE:
								return p.S8.severe;
							case p.dS.SIGNIFICANT:
								return p.S8.significant;
							case p.dS.MODERATE:
								return p.S8.moderate;
							case p.dS.MILD:
								return p.S8.mild;
							default:
								return p.S8.acclimated;
						}
					},
					S = (e, t, i) => {
						const s = new Date().getTime();
						if (t && i) {
							const e =
								s + (parseFloat(i) - parseFloat(t)) * y.A.MS_IN_ONE_HOUR;
							return n.Ay.formatTime(a.A.parseEpoch(e));
						}
						const r = s + e * y.A.MS_IN_ONE_HOUR;
						return n.Ay.formatTime(a.A.parseEpoch(r));
					},
					I = (e, t, i) => {
						const n = t && i ? (0, l.A0)(parseFloat(i) - parseFloat(t)) : e;
						return n > 0 ? `+${n}h` : `${n}h`;
					},
					v = (e) => {
						const {
								calendarDate: t,
								bodyClockDifference: i,
								severity: n,
								flights: a,
							} = e,
							s = e.overlappingFlights || [];
						if (null === i || 0 === n)
							return {
								jetLagTime: '--',
								jetLagLabel: c.Ay.t('jet_lag:feels_like'),
							};
						const o = N(e);
						let d = '',
							u = '',
							p = 0;
						const y = r.A.isPastDay(t),
							h = y ? I : S;
						if (R(e)) {
							const e = F(a, t, o);
							if (e && e.length > 0) {
								const t = e[0],
									n = e[e.length - 1];
								(d = h(i, t.originTimezone, n.destinationTimezone)),
									(p = (0, l.A0)(
										parseFloat(n.destinationTimezone) -
											parseFloat(t.originTimezone)
									));
							} else (d = h(i)), (p = i);
							u = c.Ay.t('jet_lag:destination');
						} else if (b(e)) {
							const e = F(a, t, 1);
							if (e && e.length > 0) {
								const t = e[0],
									n = e[e.length - 1];
								(d = h(i, t.originTimezone, n.destinationTimezone)),
									(p = (0, l.A0)(
										parseFloat(n.destinationTimezone) -
											parseFloat(t.originTimezone)
									));
							} else (d = h(i)), (p = i);
							u = c.Ay.t('jet_lag:destination');
						} else if (L(e)) {
							if (s && s.length > 0) {
								const e = s[0],
									t = s[s.length - 1];
								(d = h(i, e.originTimezone, t.destinationTimezone)),
									(p = (0, l.A0)(
										parseFloat(t.destinationTimezone) -
											parseFloat(e.originTimezone)
									));
							} else (d = h(i)), (p = i);
							u = c.Ay.t('jet_lag:destination');
						} else
							0 === i && 1 === n
								? ((d = c.Ay.t('jet_lag:acclimated')),
									(u = y
										? c.Ay.t('jet_lag:felt_like')
										: c.Ay.t('jet_lag:feels_like')),
									(p = 0))
								: ((d = h(i)),
									(u = y
										? c.Ay.t('jet_lag:felt_like')
										: c.Ay.t('jet_lag:feels_like')),
									(p = i));
						return { jetLagTime: d, jetLagLabel: u, timeDiffVsLocal: p };
					},
					f = (e, t) =>
						e.indexOf(p.ix) >= 0 || !t
							? e
							: e.indexOf('?') >= 0
								? `${e}&${p.ix}`
								: `${e}?${p.ix}`,
					D = (e, t, i) => {
						let n = f(e, t);
						return t && (n += `&${p.Mo}=${i}`), n;
					},
					N = (e) => {
						const { calendarDate: t, tripStartDate: i } = e,
							n = a.A.parseISO(i).getTime(),
							s = a.A.parseISO(t).getTime();
						return Math.floor((n - s) / y.A.MS_IN_ONE_DAY);
					},
					R = (e) => N(e) > 0,
					b = (e) => {
						const { calendarDate: t, flights: i } = e,
							n = F(i, t, 1);
						return !R(e) && n && n.length > 0;
					},
					L = (e) => {
						const t = e.overlappingFlights || [],
							i = a.A.parseISO(e.calendarDate).getTime(),
							s = new Date(),
							r =
								0 === n.Ay.getDaysDiff(e.calendarDate)
									? s.getTime()
									: i + y.A.MS_IN_ONE_DAY;
						return (
							t && t.length > 0 && t[t.length - 1].destinationTimestampLocal > r
						);
					},
					P = (e) => R(e) || b(e) || L(e),
					O = (e) => {
						const { bodyClockFeedback: t, bodyClockShiftFeedback: i } = e;
						return t === p.w4 || i === p.H5;
					},
					w = (e, t) => {
						if (!e || 0 === e.length) return [];
						const i = e.map(
							(e) => (
								(e.originTimestampLocal = a.A.parseISO(
									`${e.originTimestamp}${e.originTimezone}`
								).getTime()),
								(e.destinationTimestampLocal = a.A.parseISO(
									`${e.destinationTimestamp}${e.destinationTimezone}`
								).getTime()),
								e
							)
						);
						if (!i || 0 === i.length) return [];
						const n = a.A.parseISO(t).getTime(),
							s = n + y.A.MS_IN_ONE_DAY;
						return i
							.filter(
								(e) =>
									(n <= e.originTimestampLocal && e.originTimestampLocal < s) ||
									(n <= e.destinationTimestampLocal &&
										e.destinationTimestampLocal < s)
							)
							.sort((e, t) => e.originTimestampLocal - t.originTimestampLocal);
					},
					F = (e, t, i) => {
						if (!e || 0 === e.length) return [];
						const n = a.A.parseISO(t).getTime() + i * y.A.MS_IN_ONE_DAY,
							s = n + y.A.MS_IN_ONE_DAY;
						return e
							.filter(
								(e) =>
									(n <= e.originTimestampLocal && e.originTimestampLocal < s) ||
									(n <= e.destinationTimestampLocal &&
										e.destinationTimestampLocal < s)
							)
							.sort((e, t) => e.originTimestampLocal - t.originTimestampLocal);
					};
				function k(e) {
					o.A.push({
						event: 'track_event',
						category: 'Jet Lag Events',
						action: e,
					});
				}
				const U = (e) => (e ? e.split(',')[0] : ''),
					M = (e) => {
						if (!e || 0 === e.length) return null;
						const t = a.A.parseISO().getTime(),
							i = e.filter((e) => {
								const { guidanceStartTime: i, guidanceEndTime: n } = e,
									s = a.A.parseISO(i).getTime(),
									r = a.A.parseISO(n).getTime();
								return s <= t && t <= r;
							});
						if (0 === i.length)
							return (0, h.jsx)(u.A, { ns: 'jet_lag', content: 'no_guidance' });
						if (1 === i.length)
							return (0, h.jsx)(u.A, {
								ns: 'jet_lag',
								content: i[0].guidanceType,
							});
						const n = i.map((e) => e.guidanceType);
						if (2 !== n.length) return null;
						const s = [
							p.cL.LHA_JET_LAG_NOTIFICATION_TYPE_SLEEP.type,
							p.cL.LHA_JET_LAG_NOTIFICATION_TYPE_LIGHT_AVOID.type,
						];
						if (s.includes(n[0]) && s.includes(n[1]))
							return (0, h.jsx)(u.A, {
								ns: 'jet_lag',
								content: 'sleep_and_avoid_light_guidance',
							});
						const r = [
							p.cL.LHA_JET_LAG_NOTIFICATION_TYPE_LIGHT_EXPOSE.type,
							p.cL.LHA_JET_LAG_NOTIFICATION_TYPE_ACTIVITIES.type,
						];
						return r.includes(n[0]) && r.includes(n[1])
							? (0, h.jsx)(u.A, {
									ns: 'jet_lag',
									content: 'seek_light_and_be_active_guidance',
								})
							: null;
					};
			},
			825123: (e, t, i) => {
				'use strict';
				i.r(t);
				var n = i(54009),
					a = i(178982),
					s = i(75651);
				(s.VERSION = '3.18'),
					(n.GridLayer.GoogleMutant = n.GridLayer.extend({
						includes: n.Evented,
						APIKey: 'AIzaSyBuqMiuCNohSYg09UnOzu9Poy05jND5m3k',
						options: {
							minZoom: 0,
							maxZoom: a.gb.google.options.maxZoom,
							tileSize: 256,
							subdomains: 'abc',
							errorTileUrl: '',
							attribution: '',
							opacity: 1,
							continuousWorld: !1,
							noWrap: !1,
							type: 'satellite',
							maxNativeZoom: 21,
						},
						initialize: function (e) {
							n.GridLayer.prototype.initialize.call(this, e);
							var t = this;
							e.asclientid
								? (s.CLIENT = e.googlekey || this.APIKey)
								: (s.KEY = e.googlekey || this.APIKey),
								(s.CHANNEL = 'connect'),
								(s.LIBRARIES = e.libraries || []),
								(t._type = e.maptype || 'SATELLITE'),
								s.load(function (i) {
									(google = i),
										(t._ready = !0),
										t._initMutant(),
										t._update(),
										e.onAfterLoad && e.onAfterLoad(google);
								}),
								(this._tileCallbacks = {}),
								(this._freshTiles = {}),
								(this._subLayers = {}),
								(this._imagesPerTile = 'HYBRID' === t._type ? 2 : 1),
								(this.createTile =
									'HYBRID' === t._type
										? this._createMultiTile
										: this._createSingleTile);
						},
						onAdd: function (e) {
							n.GridLayer.prototype.onAdd.call(this, e),
								this._initMutantContainer(),
								this._ready &&
									((this._map = e),
									this._initMutant(),
									e.on('viewreset', this._reset, this),
									e.on('move', this._update, this),
									e.on('zoomend', this._handleZoomAnim, this),
									e.on('resize', this._resize, this),
									(e._controlCorners.bottomright.style.marginBottom = '20px'),
									this._reset(),
									this._update());
						},
						onRemove: function (e) {
							n.GridLayer.prototype.onRemove.call(this, e),
								e._container.removeChild(this._mutantContainer),
								(this._mutantContainer = void 0),
								e.off('viewreset', this._reset, this),
								e.off('move', this._update, this),
								e.off('zoomend', this._handleZoomAnim, this),
								e.off('resize', this._resize, this),
								e._controlCorners &&
									(e._controlCorners.bottomright.style.marginBottom = '0em');
						},
						getAttribution: function () {
							return this.options.attribution;
						},
						setOpacity: function (e) {
							(this.options.opacity = e),
								e < 1 && n.DomUtil.setOpacity(this._mutantContainer, e);
						},
						setElementSize: function (e, t) {
							(e.style.width = t.x + 'px'), (e.style.height = t.y + 'px');
						},
						addGoogleLayer: function (e, t) {
							if (!this._subLayers[e] && this._ready) {
								var i = new (0, google.maps[e])(t);
								i.setMap(this._mutant),
									(this._subLayers[e] = i),
									n.GridLayer.prototype.redraw.call(this);
							}
						},
						removeGoogleLayer: function (e) {
							var t = this._subLayers[e];
							t &&
								(t.setMap(null),
								n.GridLayer.prototype.redraw.call(this),
								delete this._subLayers[e]);
						},
						_initMutantContainer: function () {
							this._mutantContainer ||
								((this._mutantContainer = n.DomUtil.create(
									'div',
									'leaflet-google-mutant leaflet-top leaflet-left'
								)),
								(this._mutantContainer.id =
									'_MutantContainer_' + n.Util.stamp(this._mutantContainer)),
								(this._mutantContainer.style.pointerEvents = 'none'),
								this._map.getContainer().appendChild(this._mutantContainer)),
								this.setOpacity(this.options.opacity),
								this.setElementSize(this._mutantContainer, this._map.getSize()),
								this._attachObserver(this._mutantContainer);
						},
						_initMutant: function () {
							if (this._ready && this._mutantContainer) {
								this._mutantCenter = new google.maps.LatLng(0, 0);
								var e = new google.maps.Map(this._mutantContainer, {
									center: this._mutantCenter,
									zoom: 0,
									tilt: 0,
									mapTypeId: google.maps.MapTypeId[this._type],
									disableDefaultUI: !0,
									keyboardShortcuts: !1,
									draggable: !1,
									disableDoubleClickZoom: !0,
									scrollwheel: !1,
									streetViewControl: !1,
									styles: this.options.styles || {},
									backgroundColor: 'transparent',
								});
								(this._mutant = e),
									google.maps.event.addListenerOnce(
										e,
										'tilesloaded',
										function () {
											setTimeout(
												function () {
													if (this._mutantContainer)
														for (
															var e =
																	this._mutantContainer.querySelectorAll('a'),
																t = 0;
															t < e.length;
															t++
														)
															(e[t].style.pointerEvents = 'auto'),
																e[t].addEventListener('click', (e) => {
																	e.stopPropagation();
																});
												}.bind(this),
												500
											);
										}.bind(this)
									),
									this.fire('spawned', { mapObject: e });
							}
						},
						_attachObserver: function (e) {
							new MutationObserver(this._onMutations.bind(this)).observe(e, {
								childList: !0,
								subtree: !0,
							});
						},
						_onMutations: function (e) {
							for (var t = 0; t < e.length; ++t)
								for (var i = e[t], n = 0; n < i.addedNodes.length; ++n) {
									var a = i.addedNodes[n];
									a instanceof HTMLImageElement
										? this._onMutatedImage(a)
										: a instanceof HTMLElement &&
											Array.prototype.forEach.call(
												a.querySelectorAll('img'),
												this._onMutatedImage.bind(this)
											);
								}
						},
						_roadRegexp: /!1i(\d+)!2i(\d+)!3i(\d+)!/,
						_satRegexp: /x=(\d+)&y=(\d+)&z=(\d+)/,
						_staticRegExp: /StaticMapService\.GetMapImage/,
						_onMutatedImage: function (e) {
							var t,
								i,
								a,
								s = e.src.match(this._roadRegexp);
							if (
								(s
									? ((t = { z: s[1], x: s[2], y: s[3] }),
										this._imagesPerTile > 1 && (e.style.zIndex = 1),
										(i = 1))
									: ((s = e.src.match(this._satRegexp)) &&
											(t = { x: s[1], y: s[2], z: s[3] }),
										(i = 0)),
								t)
							) {
								var r = this._tileCoordsToKey(t);
								(e.style.position = 'absolute'),
									this._imagesPerTile > 1 && (r += '/' + i),
									r in this._tileCallbacks && this._tileCallbacks[r]
										? (this._tileCallbacks[r].pop()(e),
											this._tileCallbacks[r].length ||
												delete this._tileCallbacks[r])
										: ((a = e.parentNode) &&
												(a.removeChild(e), (a.removeChild = n.Util.falseFn)),
											r in this._freshTiles
												? this._freshTiles[r].push(e)
												: (this._freshTiles[r] = [e]));
							} else
								e.src.match(this._staticRegExp) &&
									(a = e.parentNode) &&
									e.parentNode.replaceChild(n.DomUtil.create('img'), e);
						},
						_createSingleTile: function (e, t) {
							var i = this._tileCoordsToKey(e);
							if (i in this._freshTiles) {
								var a = this._freshTiles[i].pop();
								return (
									this._freshTiles[i].length || delete this._freshTiles[i],
									n.Util.requestAnimFrame(t),
									a
								);
							}
							var s = n.DomUtil.create('div');
							return (
								(this._tileCallbacks[i] = this._tileCallbacks[i] || []),
								this._tileCallbacks[i].push(
									function (e) {
										return function (i) {
											var a = i.parentNode;
											a && (a.removeChild(i), (a.removeChild = n.Util.falseFn)),
												e.appendChild(i),
												t();
										}.bind(this);
									}.bind(this)(s)
								),
								s
							);
						},
						_createMultiTile: function (e, t) {
							var i = this._tileCoordsToKey(e),
								a = n.DomUtil.create('div');
							a.dataset.pending = this._imagesPerTile;
							for (var s = 0; s < this._imagesPerTile; s++) {
								var r = i + '/' + s;
								r in this._freshTiles
									? (a.appendChild(this._freshTiles[r].pop()),
										this._freshTiles[r].length || delete this._freshTiles[r],
										a.dataset.pending--)
									: ((this._tileCallbacks[r] = this._tileCallbacks[r] || []),
										this._tileCallbacks[r].push(
											function (e) {
												return function (i) {
													var a = i.parentNode;
													a &&
														(a.removeChild(i),
														(a.removeChild = n.Util.falseFn)),
														e.appendChild(i),
														e.dataset.pending--,
														parseInt(e.dataset.pending) || t();
												}.bind(this);
											}.bind(this)(a)
										));
							}
							return (
								parseInt(a.dataset.pending) || n.Util.requestAnimFrame(t), a
							);
						},
						_checkZoomLevels: function () {
							void 0 !== this._map.getZoom() &&
								this._mutant.getZoom() !== this._map.getZoom() &&
								this._map.setZoom(this._mutant.getZoom());
						},
						_reset: function () {
							this._initContainer();
						},
						_update: function () {
							if ((n.GridLayer.prototype._update.call(this), this._mutant)) {
								var e = this._map.getCenter(),
									t = new google.maps.LatLng(e.lat, e.lng);
								this._mutant.setCenter(t),
									void 0 !== this._map.getZoom() &&
										this._mutant.setZoom(Math.round(this._map.getZoom()));
							}
						},
						_resize: function () {
							var e = this._map.getSize();
							(this._mutantContainer.style.width === e.x &&
								this._mutantContainer.style.height === e.y) ||
								(this.setElementSize(this._mutantContainer, e),
								this._mutant &&
									google.maps.event.trigger(this._mutant, 'resize'));
						},
						_handleZoomAnim: function () {
							var e = this._map.getCenter(),
								t = new google.maps.LatLng(e.lat, e.lng);
							this._mutant.setCenter(t),
								this._mutant.setZoom(Math.round(this._map.getZoom()));
						},
						_removeTile: function (e) {
							if (this._imagesPerTile > 1)
								for (var t = 0; t < this._imagesPerTile; t++) {
									var i = e + '/' + t;
									i in this._freshTiles && delete this._freshTiles[i];
								}
							else e in this._freshTiles && delete this._freshTiles[e];
							return n.GridLayer.prototype._removeTile.call(this, e);
						},
					})),
					(n.gridLayer.googleMutant = function (e) {
						return new n.GridLayer.GoogleMutant(e);
					});
			},
			178982: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, Bp: () => o, gb: () => r });
				var n = i(54009),
					a = i(951298),
					s = i(544310);
				const r = {
						google: {
							value: 'google',
							key: 'AIzaSyBuqMiuCNohSYg09UnOzu9Poy05jND5m3k',
							types: {
								default: 'ROADMAP',
								satellite: 'SATELLITE',
								terrain: 'TERRAIN',
								hybrid: 'HYBRID',
							},
							options: { minZoom: 3, maxZoom: 21, noWrap: !0 },
						},
						bing: { value: 'bing' },
						here: {
							value: 'here',
							attribution:
								'&copy; <a href="https://legal.here.com/terms/serviceterms" />HERE maps.</a>',
							mapViewType: {
								normal: 'explore.day',
								satellite: 'satellite.day',
								terrain: 'terrain',
								hybrid: 'explore.satellite.day',
							},
							options: { minZoom: 3, maxZoom: 18 },
							appId: a.A.HereAppId,
							apiKey: a.A.HereApiKey,
						},
						osm: {
							value: 'osm',
							options: {
								minZoom: 3,
								maxZoom: 17,
								maxNativeZoom: 17,
								attribution:
									'&copy; <a href="https://openstreetmap.org/copyright" target="_blank" rel="noopener">OpenStreetMaps</a> contributors &copy; Garmin Ltd. or its Affiliates ',
							},
						},
						baidu: {
							value: 'baidu',
							baiduKey: a.A.baiduKey,
							type: {
								default: 'ROAD.Map',
								satellite: 'SATELLITE.Map',
								terrain: 'ROAD.Map',
							},
							options: {
								minZoom: 3,
								maxZoom: 18,
								subdomains: '0123',
								crs: n.CRS.BEPSG3857,
								attribution: `\xa9 ${new Date().getFullYear()} Baidu - GS(2021)6026\u53f7 - \u7532\u6d4b\u8d44\u5b5711111342 - \u4eacICP\u8bc1030173\u53f7 - Data \xa9 \u767e\u5ea6\u667a\u56fe`,
							},
						},
					},
					o = {
						0.2: s.ColorBlueDark3,
						0.4: s.ColorLimeDark2,
						0.6: s.ColorYellowDark1,
						0.8: s.ColorOrangeLight3,
						1: s.ColorRedDark1,
					},
					l = { mapProviderInfo: r, activityHeatMapPalette: o };
			},
			162557: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(756036),
					a = i.n(n),
					s = i(87786),
					r = i(178982);
				const { baiduKey: o } = r.gb.baidu;
				var l = function () {};
				((l.prototype = Object.create(l.prototype)).constructor = l),
					(l.prototype.fetch = function (e, t) {
						var i = e.inputPoints,
							n = i.length,
							s = [],
							r = [],
							o = !1,
							l = [],
							c = 0,
							d = Math.ceil(i.length / 20);
						i.forEach(function (e, t) {
							s.push(Number(e.longitude)), r.push(Number(e.latitude));
							var i = t + 1;
							if (i % 20 == 0 || i == n) {
								var l = Math.ceil(i / 20) - 1,
									c =
										'https://sapi.map.baidu.com/ag/coord/convert?v=2.0&ak=KQMz9KcIzBwWNUgbHWUHZGSD&s=1&from=0&to=4&x=' +
										s.join() +
										'&y=' +
										r.join() +
										'&mode=1';
								a()(c, {
									headers: { Accept: 'application/json' },
									jsonCallbackFunction: 'showLocation',
								})
									.then((e) => e.json())
									.then((e) => {
										let t = [];
										e.forEach(function (e) {
											if (0 == e.error) {
												let i = Number(window.atob(e.x)),
													n = Number(window.atob(e.y));
												t.push({ lat: n, lng: i });
											} else o = !0;
										}),
											u(l, t);
									}),
									(s.length = 0),
									(r.length = 0);
							}
						});
						var u = function (i, n) {
							(l[i] = n),
								(++c == d || o) &&
									(function () {
										if (o) e.success.call(t, { points: i });
										else {
											for (var i = [], n = 0; n < l.length; n++)
												for (var a = 0; a < l[n].length; a++) i.push(l[n][a]);
											e.success.call(t, { points: i });
										}
									})();
						};
					}),
					(l.prototype.fetchGenerator = function* (e, t = !1) {
						let i = [],
							n = 0,
							r = 0;
						let l = e.length;
						for (; l > 0; ) {
							let c = [],
								d = [],
								u = l >= 20 ? 20 : l;
							(n = r),
								(r = n + u),
								(l -= u),
								e.slice(n, r).forEach((e) => {
									c.push(Number(e.longitude || e.lon)),
										d.push(Number(e.latitude || e.lat));
								});
							const p = `https://sapi.map.baidu.com/ag/coord/convert${(0, s.zJ)({ v: '2.0', ak: o, s: 1, from: t ? 2 : 0, to: 4, x: c.join(), y: d.join(), mode: 1 })}`,
								y = yield a()(p, {
									headers: { Accept: 'application/json' },
									jsonCallbackFunction: 'showLocation',
								}),
								h = yield y.json();
							let g = [];
							h.forEach((e) => {
								if (0 !== e.error)
									throw 'Baidu coordinates convertion error on fetchGenerator';
								{
									let t = Number(window.atob(e.x)),
										i = Number(window.atob(e.y));
									g.push({ lat: i, lon: t });
								}
							}),
								i.push(...g);
						}
						return i;
					});
				const c = l;
			},
			91644: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => x });
				var n = i(228748),
					a = i(82040),
					s = i(331412),
					r = i(919734),
					o = i(906519),
					l = i(28139),
					c = i(717776);
				const d = { fetchGroupConversationLikes: r.j },
					u = (0, a.Ng)(
						(e, t) => ({
							groupConversationLikes: (0, o.Zx)(e, t.activityId),
							groupConversationLikesFetchSuccess: (0, o.MG)(e),
						}),
						d
					)(
						({
							isModalOpen: e,
							onCloseModal: t,
							activityId: i,
							numberOfLikes: n,
							viewerSocialProfile: a,
							groupLikeParams: s,
							fetchGroupConversationLikes: r,
							groupConversationLikes: o,
							groupConversationLikesFetchSuccess: d,
						}) => {
							s = s || {};
							const {
								isGroupLikes: u,
								resourceType: p,
								userGroupPk: y,
								store: h,
								likedByUser: g,
								getUniqueConversationLikes: m,
							} = s;
							let A = !!o && o.length < n;
							return (0, c.jsx)(l.A, {
								isModalOpen: e,
								onCloseModal: t,
								likes: m(o[i], g),
								disableConnectButtons: u,
								fetchLikes: (e) => {
									r(y, i, p);
								},
								likesFetching: !1,
								fetchSuccess: d,
								hasMoreToFetch: A,
								viewerSocialProfile: a,
							});
						}
					);
				var p = i(935378),
					y = i(946186),
					h = i.n(y),
					g = i(882155),
					m = i.n(g),
					A = i(127433),
					_ = i.n(A),
					E = i(188626),
					T = i.n(E),
					C = i(108990),
					S = i.n(C),
					I = i(389827),
					v = i.n(I),
					f = i(983725),
					D = {};
				(D.styleTagTransform = v()),
					(D.setAttributes = T()),
					(D.insert = _().bind(null, 'head')),
					(D.domAPI = m()),
					(D.insertStyleElement = S());
				h()(f.A, D);
				const N = f.A && f.A.locals ? f.A.locals : void 0,
					R = (e) => {
						const {
							generalConversations: t,
							dataForLike: i,
							tooltipText: n,
							userGroupPk: a,
							resourceType: s,
							activityId: r,
							needCommentCountIntialValue: o = !1,
							commentCount: l,
							onLikeClicked: d,
							onNumberClicked: u,
							ariaLabel: y = null,
						} = e;
						return (0, c.jsxs)(c.Fragment, {
							children: [
								(0, c.jsx)('span', {
									className: N.entryLike,
									children: (0, c.jsx)('div', {
										className: N.likeIcon,
										children: (0, c.jsx)(p.A, {
											data: i,
											onLikeClicked: d,
											tooltipText: n,
											onNumberClicked: u,
										}),
									}),
								}),
								(0, c.jsxs)('span', {
									className: N.entryComment,
									children: [
										(0, c.jsx)('button', {
											className: `btn-comment ${N.btnComment}`,
											...(y ? { ariaLabel: y } : {}),
											'data-conversationresourcetype': s,
											'data-conversationresourceid': r,
											'data-conversationgroupid': a || '',
											children: (0, c.jsx)('i', {
												className: `icon-speech-bubble2 ${N.btnCommentSpeechIcon}`,
											}),
										}),
										(0, c.jsx)('button', {
											className: `btn-comment-number ${N.btnCommentNumber}`,
											...(y ? { ariaLabel: y } : {}),
											'data-conversationresourcetype': s,
											'data-conversationresourceid': r,
											'data-conversationgroupid': a || '',
											children: (0, c.jsx)('span', {
												className: `btn-comment-value ${N.btnCommentValue}`,
												children:
													'undefined' === typeof l || !1 === o
														? l
														: t[r]
															? t[r].numberOfComments + l
															: l,
											}),
										}),
									],
								}),
							],
						});
					};
				var b = i(824359),
					L = {};
				(L.styleTagTransform = v()),
					(L.setAttributes = T()),
					(L.insert = _().bind(null, 'head')),
					(L.domAPI = m()),
					(L.insertStyleElement = S());
				h()(b.A, L);
				const P = b.A && b.A.locals ? b.A.locals : void 0;
				var O = i(315205),
					w = i(462026),
					F = i(998317),
					k = i(333474),
					U = i(532383),
					M = i(950170);
				const G = {
						fetchConversation: w.ike,
						fetchConversationLikes: F.i,
						fetchGroupConversation: w.Z0H,
						fetchGroupConversationLikes: r.j,
						addLike: w.Rxw,
						removeLike: w.gw3,
						addGroupLike: w.Qdx,
						removeGroupLike: w.b_A,
					},
					x = (0, a.Ng)(
						(e) => ({
							conversationLikes: (0, k.wl)(e),
							conversations: (0, U.l)(e),
							groupConversationLikes: (0, o.Zx)(e),
							groupConversations: (0, M.G)(e),
						}),
						G
					)((e) => {
						const [t, i] = (0, n.useState)(!1),
							{
								activityId: r,
								resourceType: o,
								viewerSocialProfile: l,
								userGroupPk: d,
								isGroupLikes: y,
								dataForCommentIcon: h,
								store: g,
								fetchConversation: m,
								fetchConversationLikes: A,
								fetchGroupConversation: _,
								fetchGroupConversationLikes: E,
								addLike: T,
								removeLike: C,
								addGroupLike: S,
								removeGroupLike: I,
								conversationLikes: v,
								conversations: f,
								groupConversationLikes: D,
								groupConversations: N,
							} = e;
						(0, n.useEffect)(() => {
							y
								? (N[r] || _(d, o, r), D[r] || E(d, r, o))
								: (f[r] || m(o, r), v[r] || A(r, o));
						}, [r, o, d]);
						let b = y ? N : f,
							L = y ? D : v;
						const w = () => {
								let e = b[r].conversationUuid;
								y
									? N[r] && (N[r].likedByUser ? I(d, o, r, e) : S(d, o, r, e))
									: f[r] && (f[r].likedByUser ? C(o, r, e) : T(o, r, e));
							},
							F = (e = [], t) => {
								let i = {};
								return (
									e.forEach((e) => {
										i[e.displayName] ||
											(l.displayName === e.displayName
												? t && (i[e.displayName] = e)
												: (i[e.displayName] = e));
									}),
									Object.values(i)
								);
							};
						return (0, c.jsxs)(a.Kq, {
							store: g,
							children: [
								(0, c.jsx)(c.Fragment, {
									children:
										'undefined' !== typeof h && null !== h
											? (0, c.jsx)(R, {
													generalConversations: b,
													generalConversationLikes: F(
														L[r] || [],
														!!b[r] && b[r].likedByUser
													),
													dataForLike: {
														likedByUser: !!b[r] && b[r].likedByUser,
														numberOfLikes: b[r] ? b[r].numberOfLikes : 0,
													},
													tooltipText: (0, O.z)(
														F(L[r] || [], !!b[r] && b[r].likedByUser),
														l
													),
													onLikeClicked: w,
													onNumberClicked: () => i(!0),
													activityId: r,
													resourceType: o,
													userGroupPk: d,
													needCommentCountIntialValue:
														h.needCommentCountIntialValue,
													commentCount: h.commentCount,
													ariaLabel: h.ariaLabel,
												})
											: (0, c.jsx)('div', {
													className: P.likeIcon,
													children: (0, c.jsx)(p.A, {
														tooltipText: (0, O.z)(
															F(L[r] || [], !!b[r] && b[r].likedByUser),
															l
														),
														onLikeClicked: w,
														onNumberClicked: () => i(!0),
														data: {
															likedByUser: !!b[r] && b[r].likedByUser,
															numberOfLikes: b[r] ? b[r].numberOfLikes : 0,
														},
													}),
												}),
								}),
								y
									? (0, c.jsx)(u, {
											isModalOpen: t,
											onCloseModal: () => i(!1),
											viewerSocialProfile: l,
											activityId: r,
											numberOfLikes: b[r] ? b[r].numberOfLikes : 0,
											groupConversationLikes: L,
											groupLikeParams: {
												isGroupLikes: y,
												resourceType: o,
												userGroupPk: d,
												store: g,
												likedByUser: !!b[r] && b[r].likedByUser,
												getUniqueConversationLikes: F,
											},
										})
									: (0, c.jsx)(s.A, {
											isModalOpen: t,
											onCloseModal: () => i(!1),
											activityId: Number(r),
											numberOfLikes: b[r] ? b[r].numberOfLikes : 0,
											viewerSocialProfile: l,
										}),
							],
						});
					});
			},
			183180: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				i(228748);
				var n = i(82040),
					a = i(950575),
					s = i(383746),
					r = i(28139),
					o = i(717776);
				const l = { fetchNewsFeedCommentLikes: a.FZ },
					c = ({
						isModalOpen: e,
						onCloseModal: t,
						conversationCommentUuid: i,
						numberOfLikes: n,
						viewerSocialProfile: a,
						disableConnectButtons: s,
						activityId: l,
						resourceType: c,
						fetchNewsFeedCommentLikes: d,
						commentLikes: u,
						commentLikesFetching: p,
						commentLikesFetchSuccess: y,
					}) => {
						const h = Array.isArray(u) && u.length > 0 && u.length < n;
						return (0, o.jsx)(r.A, {
							isModalOpen: e,
							onCloseModal: t,
							likes: u,
							fetchLikes: (e) => {
								d({
									conversationCommentUuid: i,
									start: e,
									limit: 10,
									connectionStatusIncluded: !0,
									activityId: l,
									resourceType: c,
								});
							},
							likesFetching: p,
							fetchSuccess: y,
							hasMoreToFetch: h,
							viewerSocialProfile: a,
							disableConnectButtons: s,
						});
					};
				c.defaultProps = { resourceType: '' };
				const d = (0, n.Ng)(
					(e) => ({
						commentLikes: (0, s.kj)(e),
						commentLikesFetching: (0, s.qG)(e),
						commentLikesFetchSuccess: (0, s.rG)(e),
					}),
					l
				)(c);
			},
			331412: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				i(228748);
				var n = i(82040),
					a = i(950575),
					s = i(383746),
					r = i(28139),
					o = i(717776);
				const l = { fetchNewsFeedConversationLikes: a.x6 },
					c = (0, n.Ng)(
						(e) => ({
							conversationLikes: (0, s.wl)(e),
							conversationLikesFetching: (0, s.o$)(e),
							conversationLikesFetchSuccess: (0, s.NR)(e),
						}),
						l
					)(
						({
							isModalOpen: e,
							onCloseModal: t,
							activityId: i,
							numberOfLikes: n,
							viewerSocialProfile: a,
							fetchNewsFeedConversationLikes: s,
							conversationLikes: l,
							conversationLikesFetching: c,
							conversationLikesFetchSuccess: d,
						}) => {
							const u = Array.isArray(l) && l.length > 0 && l.length < n;
							return (0, o.jsx)(r.A, {
								isModalOpen: e,
								onCloseModal: t,
								likes: l,
								fetchLikes: (e) => {
									s({
										resourceId: i,
										start: e,
										limit: 10,
										connectionStatusIncluded: !0,
									});
								},
								likesFetching: c,
								fetchSuccess: d,
								hasMoreToFetch: u,
								viewerSocialProfile: a,
							});
						}
					);
			},
			28139: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => v });
				var n = i(228748),
					a = i(82040),
					s = i(462026),
					r = i(624344),
					o = i(950575),
					l = i(630325),
					c = i(687024),
					d = i(970751),
					u = i(280185),
					p = i(668712),
					y = i(547052),
					h = i(359983),
					g = i(960474),
					m = i(992187),
					A = i(276052),
					_ = i(895292),
					E = i(155641),
					T = i(898499),
					C = i(717776);
				const S = {
						updateNewsfeedErrorState: o.YD,
						fetchUserPreference: s.xOb,
						setUserPreference: s.$76,
						saveSendConnectionRequest: s.RJJ,
						acceptConnectionRequest: s.KtH,
						unBlockUser: r.U,
					},
					I = ({
						isModalOpen: e,
						onCloseModal: t,
						likes: i,
						fetchLikes: a,
						likesFetching: s,
						fetchSuccess: r,
						hasMoreToFetch: o,
						viewerSocialProfile: l,
						disableConnectButtons: c,
						updateNewsfeedErrorState: S,
						fetchUserPreference: I,
						setUserPreference: v,
						saveSendConnectionRequest: f,
						acceptConnectionRequest: D,
						unBlockUser: N,
						profileActivityVisibility: R,
						unblockSuccess: b,
						unblockFail: L,
					}) => {
						const [P, O] = (0, n.useState)(!1),
							[w, F] = (0, n.useState)(!1),
							[k, U] = (0, n.useState)(!0),
							[M, G] = (0, n.useState)({
								isUserConnectionsOverLimitation: !1,
								modalOpen: !1,
								nameToDisplay: '',
							}),
							[x, B] = (0, n.useState)([]),
							H = (0, n.useRef)(1),
							V = (0, n.useRef)(''),
							W = (0, n.useRef)(null),
							J = (0, n.useRef)(T.gy.REQUEST);
						(0, n.useEffect)(() => {
							e && (U(!0), (H.current = 1), $(H.current));
						}, [e]),
							(0, n.useEffect)(() => {
								e && !R && I('GDPR.ProfileActivityVisibility.Dismissed');
							}, [e, R]),
							(0, n.useEffect)(() => {
								Array.isArray(i) &&
									i.length > 0 &&
									((H.current = i.length + 1), B(te()));
							}, [i]),
							(0, n.useEffect)(() => {
								r && k && U(!1);
							}, [r, k]),
							(0, n.useEffect)(() => {
								b &&
									B((e) =>
										e.map((e) => {
											if (e.displayName === V.current) {
												const {
													userProfilePk: t,
													displayName: i,
													fullName: n,
												} = e;
												return {
													...e,
													action: j({
														connectionRequest: null,
														userProfilePk: t,
														displayName: i,
														fullName: n,
														userConnectionStatus: E.or.NO_CONNECTION,
													}),
												};
											}
											return e;
										})
									),
									L && (0, _.I)() && S({ hasError: !0 });
							}, [b, L]);
						const { profileId: Y } = l,
							$ = () => a(H.current),
							j = ({
								connectionRequest: e,
								userProfilePk: t,
								displayName: i,
								fullName: n,
								userConnectionStatus: a,
							}) => {
								const s = Date.now();
								if (e) {
									const { requestorId: t, id: a } = e;
									return t === Y
										? (0, C.jsx)(
												y.A,
												{ ns: 'news_feed', content: 'label_request_sent' },
												`request-sent-label-${s}`
											)
										: (0, C.jsx)(
												p.$n,
												{
													size: 'small',
													color: 'primary',
													onClick: () =>
														K({
															type: T.gy.CONFIRM,
															displayName: i,
															id: a,
															fullName: n,
														}),
													children: (0, C.jsx)(y.A, {
														ns: 'challengewidget',
														content: 'accept',
													}),
												},
												`accept-btn-${s}`
											);
								}
								return t !== Y && (0, E.gP)(a)
									? (0, C.jsx)(
											p.$n,
											{
												size: 'small',
												color: 'primary',
												onClick: () =>
													K({
														type: T.gy.REQUEST,
														displayName: i,
														fullName: n,
													}),
												children: (0, C.jsx)(y.A, {
													ns: 'userprofile',
													content: 'connect',
												}),
											},
											`connect-btn-${s}`
										)
									: (0, E.CA)(a)
										? (0, C.jsx)(
												p.$n,
												{
													size: 'small',
													color: 'primary',
													onClick: () =>
														((e) => {
															(V.current = e), N({ displayName: e });
														})(i),
													children: (0, C.jsx)(y.A, {
														ns: 'userprofile',
														content: 'unblock.user',
													}),
												},
												`unblock-btn-${s}`
											)
										: null;
							},
							K = ({ type: e, displayName: t, id: i, fullName: n }) => {
								G({ ...M, nameToDisplay: n || t }),
									(J.current = e),
									(V.current = t),
									(W.current = i),
									'true' === R
										? e === T.gy.REQUEST
											? z(t, n || t)
											: e === T.gy.CONFIRM && q(i, n || t)
										: O(!0);
							},
							z = (e = V.current, t) => {
								F(!0), (0, _.I)() && S({ hasError: !1 });
								const i = {
									onSuccess: (t) => {
										(0, _.Q)('Hit Connect Button', 'Send Request'),
											B((i) =>
												i.map((i) => {
													if (i.displayName === e) {
														const {
															userProfilePk: e,
															displayName: n,
															fullName: a,
														} = i;
														return {
															...i,
															action: j({
																connectionRequest: t,
																userProfilePk: e,
																displayName: n,
																fullName: a,
																userConnectionStatus: E.or.CREATED,
															}),
														};
													}
													return i;
												})
											),
											O(!1),
											F(!1),
											h.A.renderPrivacyAlert(g.A, m.A, 'connection');
									},
									onError: (e) => {
										X(e.response, t);
									},
								};
								f(e, !1, i);
							},
							q = (e = W.current, t) => {
								F(!0), (0, _.I)() && S({ hasError: !1 });
								const i = {
									onSuccess: (e) => {
										(0, _.Q)('Hit Connect Button', 'Confirm Request'),
											O(!1),
											F(!1),
											B((t) =>
												t.map((t) => {
													if (t.userProfilePk === e.requestorId) {
														const {
																userProfilePk: e,
																displayName: i,
																fullName: n,
															} = t,
															a = j({
																connectionRequest: null,
																userProfilePk: e,
																displayName: i,
																fullName: n,
																userConnectionStatus: E.or.ACCEPTED,
															});
														return { ...t, action: a };
													}
													return t;
												})
											);
									},
									onError: (e) => {
										X(e.response, t);
									},
								};
								D(e, V.current, !1, i);
							},
							Q = (e) => {
								if (e && 400 === e.status && e.data) {
									const t = e.data.errorType;
									if (
										'USER_CONNECTIONS_OVER_LIMIT' === t ||
										'TARGET_CONNECTIONS_OVER_LIMIT' === t
									)
										return !0;
								}
								return !1;
							},
							X = (e, t) => {
								if (
									((0, _.I)() && !Q(e) && S({ hasError: !0 }),
									P && (O(!1), F(!1)),
									Q(e))
								) {
									const i = e.data.errorType;
									G({
										...M,
										isUserConnectionsOverLimitation:
											'USER_CONNECTIONS_OVER_LIMIT' === i,
										modalOpen: !0,
										nameToDisplay: t || M.nameToDisplay,
									});
								}
							},
							Z = () =>
								J.current === T.gy.REQUEST
									? z
									: J.current === T.gy.CONFIRM
										? q
										: void 0,
							ee = ({ profileImageUrl: e, playerType: t, avatarId: i }) =>
								'string' === typeof e
									? e
									: 'number' === typeof t && 2 === t
										? 'number' === typeof i
											? `/web-images/vivofitjr/avatars/svg/avatar_${i}.svg`
											: '/web-images/vivofitjr/avatars/svg/avatar_x.svg'
										: void 0,
							te = () =>
								Array.isArray(i) && i.length > 0
									? i.map(
											({
												fullName: e,
												displayName: t,
												profileImageUrl: i,
												connectionRequest: n,
												userProfilePk: a,
												userConnectionStatus: s,
												playerType: r,
												avatarId: o,
											}) => ({
												fullName: e,
												displayName: t,
												userProfilePk: a,
												profileImage: ee({
													profileImageUrl: i,
													playerType: r,
													avatarId: o,
												}),
												disableNavigation: 'number' === typeof r && 2 === r,
												action: c
													? null
													: j({
															connectionRequest: n,
															userProfilePk: a,
															displayName: t,
															fullName: e,
															userConnectionStatus: s,
														}),
											})
										)
									: [];
						return (0, C.jsxs)(C.Fragment, {
							children: [
								e &&
									(0, C.jsxs)(C.Fragment, {
										children: [
											(0, C.jsx)(d.A, {
												modalOpen: e,
												onClose: t,
												title: (0, C.jsx)(y.A, {
													ns: 'news_feed',
													content: 'likes_modal_title',
												}),
												connectionList: x,
												isFetching: s,
												showSpinner: k,
												hasMore: o,
												fetchNext: $,
											}),
											(0, C.jsx)(u.A, {
												isModalOpen: P,
												onCloseModal: () => O(!1),
												onDoNotShowAgainClick: () => {
													Z()(),
														v(
															'GDPR.ProfileActivityVisibility.Dismissed',
															'true'
														);
												},
												handleOkClicked: Z(),
												btnDisabled: w,
											}),
										],
									}),
								M.modalOpen &&
									(0, C.jsx)(A.A, {
										isUserConnectionsOverLimitation:
											M.isUserConnectionsOverLimitation,
										shouldModalOpen: M.modalOpen,
										nameToDisplay: M.nameToDisplay,
										onCloseModal: () => {
											G({ ...M, modalOpen: !1 });
										},
									}),
							],
						});
					};
				I.defaultProps = { disableConnectButtons: !1 };
				const v = (0, a.Ng)(
					(e) => ({
						profileActivityVisibility: (0, l.cC)(
							e,
							'GDPR.ProfileActivityVisibility.Dismissed'
						),
						unblockSuccess: (0, c.hV)(e),
						unblockFail: (0, c.G_)(e),
					}),
					S
				)(I);
			},
			53335: (e, t, i) => {
				'use strict';
				i.d(t, {
					DY: () => b,
					FO: () => m,
					GT: () => u,
					IP: () => B,
					LF: () => N,
					MK: () => _,
					NO: () => G,
					TT: () => f,
					UC: () => E,
					V$: () => c,
					V4: () => T,
					XX: () => p,
					YV: () => x,
					_A: () => A,
					_S: () => F,
					bO: () => M,
					d1: () => d,
					jL: () => U,
					kW: () => I,
					lT: () => D,
					m3: () => w,
					p$: () => g,
					rg: () => C,
					tN: () => S,
					z1: () => R,
				});
				var n = i(318383),
					a = (i(947272), i(109285)),
					s = i.n(a),
					r = i(422460),
					o = i(450566),
					l = i(80879);
				const c = 4,
					d = 'training-plans/setup/',
					u = 7,
					p = [1, 2, 3, 4, 5, 6, 7],
					y = [7, 1, 2, 3, 4, 5, 6],
					h = [6, 7, 1, 2, 3, 4, 5],
					g = 6,
					m = 30,
					A = [
						{ value: '1', label: '0-4' },
						{ value: '2', label: '5-9' },
						{ value: '3', label: '10+' },
					],
					_ = (e) => {
						let t = [...p];
						return (
							e &&
								e.firstDayOfWeek &&
								e.firstDayOfWeek.dayId &&
								(2 === e.firstDayOfWeek.dayId
									? (t = [...y])
									: 1 === e.firstDayOfWeek.dayId && (t = [...h])),
							t
						);
					},
					E = (e, t, i) => {
						let a;
						(a = i && !isNaN(i) ? parseInt(i) : parseInt(t) + 1),
							n.default.navigate(`/training-plans/setup/${e}/${a}`);
					},
					T = (e) =>
						'object' !== typeof e
							? 1
							: e.hasPowerMeter || e.hasHRMonitor
								? e.currentTrainingLevel
									? e.trainingPlanLevel
										? e.daysAvailable && e.daysAvailable.length
											? e.longRideDay
												? e.eventDate
													? 7
													: 6
												: 5
											: 4
										: 3
									: 2
								: 1,
					C = (e, t) => e >= t.workoutsPerWeekMin - 1,
					S = (e) =>
						e.workoutsPerWeekMax !== e.workoutsPerWeekMin
							? `${e.workoutsPerWeekMin} - ${e.workoutsPerWeekMax}`
							: e.workoutsPerWeekMin,
					I = (e) => {
						const t = e.daysAvailable;
						return t.length < 4 && v(t);
					},
					v = (e) => {
						let t = [...e].sort(),
							i = 0,
							n = 0,
							a = p.length + 3;
						for (let s = 0; s < a; s++)
							t.indexOf(p[s % p.length]) >= 0
								? i++
								: (i > n && (n = i), (i = 0));
						return n >= 3;
					},
					f = (e) => e && !!e.peakWeeks,
					D = (e) =>
						A[0].value === e.currentTrainingLevel &&
						'Advanced' === e.trainingPlanLevel,
					N = (e) => {
						if (e) {
							let t = 0;
							return (
								e.forEach((e) => {
									e.stats &&
										e.stats.all &&
										e.stats.all.duration &&
										!isNaN(e.stats.all.duration.sum) &&
										(t += e.stats.all.duration.sum);
								}),
								(t /= 60 * c * 60 * 1e3),
								t > 10 ? A[2].value : t > 5 ? A[1].value : A[0].value
							);
						}
						return A[0].value;
					},
					R = (e) => {
						const t = new (s())().format(r.Ay.LINK_FORMAT);
						return e && e.taskList
							? e.taskList.find((e) => {
									if (e.taskWorkout) {
										return (e.calendarDate === t &&
											!e.taskWorkout.associatedActivityId) ||
											e.calendarDate > t
											? e
											: null;
									}
								})
							: null;
					},
					b = (e, t) => {
						let i = [];
						if (e && e.length) {
							let n = [...e],
								a = P(n),
								s = (0, o.GV)(t),
								l = (e) =>
									(0, o.qP)(s, e.calendarDate).format(r.Ay.LINK_FORMAT) ===
									e.calendarDate,
								c = 0;
							(i[c] = []),
								a &&
									a.forEach((e) => {
										l(e) && i[c].length && (c++, (i[c] = [])), i[c].push(e);
									}),
								(i = O(i, s));
						}
						return i;
					},
					L = (e, t) => ({
						calendarDate: e,
						taskNote: { calendarDate: e },
						taskWorkout: null,
						isForCompleteWeek: !0,
						dayOfWeekId: t,
					}),
					P = (e) => {
						let t = [];
						return (
							[...e].forEach((e) => {
								let i = null,
									n = t.find(
										(t, n) => ((i = n), t.calendarDate === e.calendarDate)
									);
								if (n) {
									let a = { ...n };
									if (!a.taskWorkout && e.taskWorkout)
										a.taskWorkout = { ...e.taskWorkout };
									else if (a.taskWorkout && e.taskWorkout) {
										if (
											((a.taskWorkout = { ...n.taskWorkout }), a.workoutsList)
										) {
											let t = {
												...e.taskWorkout,
												workoutOrder: e.workoutOrder,
												trainingPlanId: e.trainingPlanId,
											};
											a.workoutsList.push(t);
										} else {
											let t = {
													...a.taskWorkout,
													workoutOrder: a.workoutOrder,
													trainingPlanId: a.trainingPlanId,
												},
												i = {
													...e.taskWorkout,
													workoutOrder: e.workoutOrder,
													trainingPlanId: e.trainingPlanId,
												};
											a.workoutsList = [t, i];
										}
										a.workoutsList &&
											a.workoutsList.length &&
											a.workoutsList.sort((e, t) =>
												e.workoutOrder > t.workoutOrder ? 1 : -1
											);
									}
									t.splice(i, 1, a);
								} else t.push({ ...e });
							}),
							t
						);
					},
					O = (e, t) => (
						e.forEach((i, n) => {
							if (i.length < 7) {
								let a = [],
									l = (0, o.qP)(t, i[0].calendarDate).format(r.Ay.LINK_FORMAT),
									c = null;
								for (let e = 0; e < 7; e++) {
									c = new (s())(l, r.Ay.LINK_FORMAT)
										.add(e, 'days')
										.format(r.Ay.LINK_FORMAT);
									let t = i.find((e) => e.calendarDate === c);
									if (t) a.push(t);
									else {
										let t = new (s())(l, r.Ay.LINK_FORMAT).add(e, 'days').day();
										0 === t && (t = 7), a.push({ ...L(c, t) });
									}
								}
								e[n] = a;
							}
						}),
						e
					),
					w = (e) => {
						let t = new (s())().format(r.Ay.LINK_FORMAT),
							i = 0;
						return (
							e &&
								e.length &&
								e.forEach((e, n) => {
									e.find((e) => {
										let a = e.calendarDate;
										a && -1 !== a.indexOf(t) && (i = n);
									});
								}),
							i
						);
					},
					F = (e) => {
						let t = {
								basePhase: null,
								buildPhase: null,
								peakPhase: null,
								totalDays: 0,
								recoveryWeeks: [],
							},
							i = e.taskList,
							n = [...e.taskList].reverse(),
							a = e.baseWeeks ? 1 : null,
							o = e.baseWeeks ? e.baseWeeks + 1 : e.buildWeeks ? 1 : null,
							l = e.peakWeeks ? e.durationInWeeks - e.peakWeeks + 1 : null,
							c = a && o ? (o - 1 > 1 ? o - 1 : 1) : null,
							d = o && l ? (l - 1 > 1 ? l - 1 : 1) : null,
							u =
								e.weekTypes && e.weekTypes.RECOVERY
									? e.weekTypes.RECOVERY
									: null;
						if (a) {
							let e = i.find((e) => e.weekId === a);
							if (((t.basePhase = { basePhaseStart: e.calendarDate }), c)) {
								let e = n.find((e) => e.weekId === c);
								(t.basePhase.basePhaseEnd = e.calendarDate),
									(t.basePhase.phaseLengthInDays =
										new (s())(e.calendarDate).diff(
											t.basePhase.basePhaseStart,
											'days'
										) + 1),
									(t.totalDays = t.totalDays += t.basePhase.phaseLengthInDays),
									(t.basePhase.weeksAndDays = k(t.basePhase.phaseLengthInDays));
							}
						}
						if (o) {
							let e = i.find((e) => e.weekId === o);
							if (((t.buildPhase = { buildPhaseStart: e.calendarDate }), d)) {
								let e = n.find((e) => e.weekId === d);
								(t.buildPhase.buildPhaseEnd = e.calendarDate),
									(t.buildPhase.phaseLengthInDays =
										new (s())(e.calendarDate).diff(
											t.buildPhase.buildPhaseStart,
											'days'
										) + 1),
									(t.totalDays = t.totalDays += t.buildPhase.phaseLengthInDays),
									(t.buildPhase.weeksAndDays = k(
										t.buildPhase.phaseLengthInDays
									));
							}
						}
						if (l) {
							let n = i.find((e) => e.weekId === l),
								a = new (s())(e.endDate).format(r.Ay.LINK_FORMAT);
							(t.peakPhase = {
								peakPhaseStart: n.calendarDate,
								peakPhaseEnd: a,
							}),
								(t.peakPhase.phaseLengthInDays =
									new (s())(a).diff(n.calendarDate, 'days') + 1),
								(t.totalDays = t.totalDays += t.peakPhase.phaseLengthInDays),
								(t.peakPhase.weeksAndDays = k(t.peakPhase.phaseLengthInDays));
						}
						return (
							u &&
								u.length &&
								u.forEach((e) => {
									let n = i.find((t) => t.weekId === e);
									t.recoveryWeeks.push(n.calendarDate);
								}),
							t
						);
					},
					k = (e) => {
						let t = { weeks: 0, days: 0 };
						return (
							isNaN(e) || ((t.weeks = Math.floor(e / 7)), (t.days = e % 7)), t
						);
					},
					U = (e, t) => {
						if (e && e.length) {
							return e.filter((e) => e.trainingSubType.subTypeKey === t)[0];
						}
						return !1;
					},
					M = (e) => {
						if (e) {
							let t = e.weeks,
								i = e.days,
								n = () => {
									let e = t ? '&' : '\u2022';
									return i
										? 1 === i
											? ` ${e} ${l.Ay.t('training_plans:one_day_in_phase', { 0: i })}`
											: ` ${e} ${l.Ay.t('training_plans:number_of_days', { 0: i })}`
										: '';
								};
							return (
								(() =>
									t
										? 1 === t
											? ` \u2022 ${l.Ay.t('training_plans:one_week_in_phase', { 0: t })}`
											: ` \u2022 ${l.Ay.t('training_plans:training_plans_duration_weeks', { 0: t })}`
										: '')() + n()
							);
						}
						return null;
					},
					G = (e) => {
						let t = 1;
						if (e && e.length) {
							let i = new (s())().format(r.Ay.LINK_FORMAT);
							e.find((e, n) => {
								e.calendarDate === i && (t = n + 1);
							});
						}
						return t;
					},
					x = (e) => {
						let t = 1;
						if (e && e.length) {
							let i = new (s())().format(r.Ay.LINK_FORMAT);
							e.map((e, n) => {
								e.find((e) => {
									e.calendarDate === i && (t = n + 1);
								});
							});
						}
						return t;
					},
					B = (e) => {
						let t = '';
						if (e) {
							let i = new (s())().format(r.Ay.LINK_FORMAT);
							e.basePhase &&
							i <= e.basePhase.basePhaseEnd &&
							i >= e.basePhase.basePhaseStart
								? (t = l.Ay.t('training_plans:base_phase'))
								: e.buildPhase &&
									  i <= e.buildPhase.buildPhaseEnd &&
									  i >= e.buildPhase.buildPhaseStart
									? (t = l.Ay.t('training_plans:build_phase'))
									: e.peakPhase &&
										i <= e.peakPhase.peakPhaseEnd &&
										i >= e.peakPhase.peakPhaseStart &&
										(t = l.Ay.t('training_plans:peak_phase'));
						}
						return t;
					};
			},
			711370: (e, t, i) => {
				'use strict';
				i.d(t, { VN: () => s, iC: () => n, xo: () => a });
				const n = 'FETCH_HERE_LOCATION',
					a = 'RECEIVE_HERE_LOCATION',
					s = 'RESET_HERE_LOCATION';
			},
			499435: (e, t, i) => {
				'use strict';
				i.d(t, { H0: () => a, _5: () => s, fh: () => r });
				var n = i(711370);
				const a = (e, t) => {
						let i = null;
						if (t.items && t.items.length > 0) {
							let e = t.items[0].position;
							i = [e.lat, e.lng];
						}
						return { type: e, location: i, receivedAt: Date.now() };
					},
					s = (e, t) => ({ type: n.iC, searchText: e, hereToken: t }),
					r = () => ({ type: n.VN });
			},
			790081: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, O: () => s });
				var n = i(711370);
				const a = { isFetching: !1, location: null },
					s = (e) => ({ location: e.HERELocation.location || null }),
					r = {
						[n.xo]: (e, t) => ({
							...e,
							isFetching: !1,
							location: t.location,
							lastUpdated: t.receivedAt,
						}),
						[n.VN]: () => a,
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			436465: (e, t, i) => {
				'use strict';
				i.d(t, {
					AG: () => R,
					Bf: () => v,
					By: () => y,
					CF: () => m,
					CY: () => N,
					D$: () => I,
					F6: () => E,
					IB: () => M,
					KX: () => w,
					MW: () => h,
					Nn: () => F,
					RE: () => W,
					Tu: () => U,
					U$: () => x,
					Vx: () => V,
					XY: () => u,
					g: () => k,
					gx: () => _,
					j5: () => C,
					k4: () => b,
					kT: () => L,
					m7: () => P,
					n_: () => f,
					p5: () => S,
					sT: () => T,
					tO: () => A,
					tc: () => H,
					uD: () => p,
					w_: () => g,
					z9: () => D,
				});
				var n = i(505157),
					a = i(80879),
					s = i(109285),
					r = i.n(s),
					o = i(703174),
					l = i(29273),
					c = i(576797);
				const d = [25, 55, 75, 90, 105, 120, 150, 200],
					u = 'keepExistingValues',
					p = ['FEMALE', 'MALE'],
					y = 'power-guidance/create-strategy',
					h = ['RELAXED', 'STANDARD', 'OPTIMIZED'],
					g = ['MOUNTAIN', 'GRAVEL', 'ROAD'],
					m = {
						CREATE_POWER_GUIDE_ACTION: 'Create Power Guide',
						GO_TO_POWER_GUIDE_ACTION: 'Go to Power Guide',
						VIEW_COURSE_ACTION: 'View Course',
						HELP_MODAL_OPENED_ACTION: 'Opened the Help Modal',
						UPDATE_USER_WEIGHT_ACTION: 'User weight Updated',
						UPDATE_USER_FTP_ACTION: 'User FTP Updated',
						POWER_GUIDE_SAVE_ACTION: 'Power Guide Saved',
						POWER_GUIDE_UPDATE_ACTION: 'Power Guide Updated',
						DELETE_POWER_GUIDE_ACTION: 'Delete Power Guide Clicked',
						DUPLICATE_POWER_GUIDE_ACTION: 'Duplicate Power Guide Clicked',
						SEND_POWER_GUIDE_TO_DEVICE_ACTION:
							'Send Power Guide to Device Clicked',
						EDIT_COURSE_FROM_POWER_GUIDE_ACTION: 'Edit Course From Power Guide',
						CREATE_A_COURSE_FROM_POWER_GUIDE_ACTION:
							'Create a Course From Power Guide',
						FAVORITE_A_COURSE_FROM_POWER_GUIDE_ACTION:
							'Favorite a Course From Power Guide',
						SELECT_A_COURSE_FOR_POWER_GUIDE_SETUP_ACTION:
							'Select a Course For Power Guide Setup',
						REPLACE_POWER_GUIDE_STRATEGY:
							'Replace Power Guide strategy (remove and create new)',
						VIEW_POWER_GUIDE_STRATEGY:
							'View Power Guide Strategy from Select a Course (PG Create)',
					},
					A = 'power-guidance/select-course',
					_ = (e, t) => {
						if (e && 'string' === typeof e)
							return (e = e.toUpperCase()), t ? h.indexOf(e) : g.indexOf(e);
					},
					E = [
						{ value: 'UNTRAINED', label: 'ftp.untrained', max: 23e3 },
						{ value: 'FAIR', label: 'ftp.fair', min: 23e3, max: 28e3 },
						{ value: 'GOOD', label: 'ftp.good', min: 29e3, max: 34e3 },
						{
							value: 'EXCELLENT',
							label: 'ftp.excellent',
							min: 35e3,
							max: 37e3,
						},
						{ value: 'SUPERIOR', label: 'ftp.superior', min: 37e3 },
					],
					T = {
						roadBike: { min: 1e4, max: 12e3, label: 'road_bike_approx_weight' },
						gravelBike: {
							min: 13e3,
							max: 15e3,
							label: 'gravel_bike_approx_weight',
						},
						mountainBike: {
							min: 16e3,
							max: 17e3,
							label: 'mountain_bike_approx_weight',
						},
						loadedTouringBike: {
							min: 2e4,
							max: 22e3,
							label: 'loaded_touring_bike_approx_weight',
						},
						custom: { min: null, max: null },
					},
					C = 453e3,
					S = 1e3,
					I = 453e3,
					v = 1e3,
					f = 402500,
					D = 15e3,
					N = 400,
					R = 15,
					b = 250,
					L = 10,
					P = (e) => {
						let t = { sport: e && e.sport ? e.sport : 'CYCLING', ...e };
						for (let i = 1; i <= 7; i++) {
							let e = d[i],
								n = O(t.functionalThresholdPower, e);
							i < 8 && (t['zone' + i + 'Floor'] = n);
						}
						return t;
					},
					O = (e, t) => Math.round((t * e) / 100),
					w = (e) => (0, o.a)(e, void 0, void 0, !1),
					F = (e, t) => {
						if (null === e || (null === t && isNaN(e)) || isNaN(t)) return 0;
						if (0 === e || t <= 0.75)
							return (0, a.t)('power_guidance:less_than_one_hour');
						if (e <= 0.75 || t <= 1.5)
							return (0, a.t)('power_guidance:about_one_hour');
						let i = n.A.secondsToTime(3600 * e),
							s = n.A.secondsToTime(3600 * t),
							r = `${i.h + (0, a.t)('units:duration_hour_short')}${i.m ? i.m + (0, a.t)('units:duration_minute_short') : ''}`,
							o = `${s.h + (0, a.t)('units:duration_hour_short')}${s.m ? s.m + (0, a.t)('units:duration_minute_short') : ''}`;
						return (
							e !== t ||
								(e <= 1.5 || t <= 4
									? ((i = n.A.secondsToTime(5400)),
										(s = n.A.secondsToTime(14400)))
									: e <= 4 || t <= 6
										? ((i = n.A.secondsToTime(14400)),
											(s = n.A.secondsToTime(21600)))
										: e <= 6 || t <= 10
											? ((i = n.A.secondsToTime(21600)),
												(s = n.A.secondsToTime(36e3)))
											: (e <= 10 || t <= 48) &&
												((i = n.A.secondsToTime(36e3)),
												(s = n.A.secondsToTime(172800))),
								(r = `${i.h + (0, a.t)('units:duration_hour_short')}${i.m ? i.m + (0, a.t)('units:duration_minute_short') : ''}`),
								(o = `${s.h + (0, a.t)('units:duration_hour_short')}${s.m ? s.m + (0, a.t)('units:duration_minute_short') : ''}`)),
							`${r} - ${o}`
						);
					},
					k = (e, t, i, n, a) => {
						let s = e.planPoints,
							o = {
								estimatedDuration: 0,
								splitCount: s.length,
								userProfilePk: a,
								lastUpdatedDate: new (r())().toISOString(),
								coursePk: t,
								distance: i,
								ftpUsagePercent: 0,
								meanPowerUsage: 0,
								maxPowerUsage: 0,
								estimatedDurationHigh: e.summary.summaryHoursUpper,
								estimatedDurationLow: e.summary.summaryHoursLower,
							};
						isNaN(e.summary.aeroCoefficient) ||
							(o.aeroCoefficient = e.summary.aeroCoefficient),
							isNaN(e.summary.rollingResistanceCoefficient) ||
								(o.rollingResistanceCoefficient =
									e.summary.rollingResistanceCoefficient);
						let l = 0;
						return (
							s.forEach((e) => {
								e.estimatedSeconds &&
									(o.estimatedDuration += e.estimatedSeconds),
									e.powerTargetWatts > o.maxPowerUsage &&
										(o.maxPowerUsage = e.powerTargetWatts),
									(l += e.estimatedSeconds * e.powerTargetWatts);
							}),
							(l /= o.estimatedDuration),
							(o.meanPowerUsage = Math.round(l)),
							isNaN(n) ||
								null === n ||
								(o.ftpUsagePercent = Math.round((100 * o.meanPowerUsage) / n)),
							o
						);
					},
					U = (e, t, i) => {
						let n = { splitArr: [], chartDataArr: [] },
							a = i && i.powerGuidancePk,
							s = 0;
						return (
							e.forEach((r, o) => {
								let l = {},
									c = r.coursePointIndex,
									d = e[o + 1] ? e[o + 1].coursePointIndex : t.length - 1,
									u = t[c],
									p = t[d];
								if (u && p) {
									a && (l.powerGuidancePk = a);
									let e = p.elevation - u.elevation,
										o = p.distance - u.distance,
										y = (e / o) * 100;
									(l.powerTarget = r.powerTargetWatts ? r.powerTargetWatts : 1),
										(l.estimatedDuration = r.estimatedSeconds),
										(l.distance = o),
										(l.coursePointIndex = c),
										(s = p.distance),
										(l.cumulativeDistance = s),
										(l.meanGrade = V(y)),
										(l.startLongitude = u.longitude),
										(l.startLatitude = u.latitude),
										(l.startElevation = u.elevation),
										(l.endLongitude = p.longitude),
										(l.endLatitude = p.latitude),
										(l.endElevation = p.elevation),
										(l.elevationChange = e),
										n.splitArr.push(l);
									let h = G(t, l, c, d, i.userFTP);
									n.chartDataArr = [...n.chartDataArr, ...h];
								}
							}),
							n
						);
					},
					M = (e, t, i) => {
						let n = [];
						return (
							t.forEach((a, s) => {
								let r = a.coursePointIndex,
									o = t[s + 1] ? t[s + 1].coursePointIndex : e.length - 1,
									l = G(e, a, r, o, i);
								n = [...n, ...l];
							}),
							n
						);
					},
					G = (e, t, i, n, a) => {
						let s = [],
							r = n !== e.length - 1 ? n : e.length;
						return (
							e.slice(i, r).forEach((e) => {
								let n = {
									splitNumber: i,
									elevation: e.elevation,
									distance: e.distance,
									meanGrade: t.meanGrade,
									powerTargetWatts: t.powerTarget,
									userFtp: a,
								};
								s.push(n);
							}),
							s
						);
					},
					x = (e, t) => {
						if (e.length !== t.length) return !1;
						for (let i = 0; i < e.length; i++) {
							const n = e[i],
								a = t[i];
							if (!B(n, a)) return !1;
						}
						return !0;
					},
					B = (e, t) =>
						e.powerTarget === t.powerTarget &&
						e.estimatedDuration === t.estimatedDuration,
					H = () => {
						let e, t, i;
						return (
							l.A.measurementSystem === l.A.MeasurementSystems.METRIC
								? ((i = (0, a.t)('units:label_distance_unit_metric')),
									(e = R),
									(t = N))
								: ((i = (0, a.t)('units:label_distance_unit_statute')),
									(e = L),
									(t = b)),
							(0, a.t)('power_guidance:create_strategy_warning', {
								0: e,
								1: t,
								2: i.toLowerCase(),
							})
						);
					},
					V = (e) => Math.round(100 * e) / 100,
					W = (e, t) => {
						c.A.push({
							event: 'track_event',
							category: 'Power Guide Events',
							action: e,
							label: t,
						});
					};
			},
			429833: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => p });
				var n = i(228748),
					a = i(547052),
					s = i(813436),
					r = i(875403),
					o = i(582333),
					l = i(698431),
					c = i(698164),
					d = i(717776);
				class u extends n.Component {
					constructor(e) {
						super(e),
							(this.changeOptionValue = (e, t) => {
								const { activitySubcategoryPrivacyLocalSettings: i } =
										this.state,
									{
										changeOptionValue: n,
										activitySubcategoryPrivacySettings: a,
									} = this.props;
								let s = [...this.state.changedOptions],
									r = {},
									o = s.find((e) => Object.keys(e)[0] === t);
								o
									? (o[t] = e.target.value)
									: ((r[t] = e.target.value), s.push(r));
								let l = i.map((e) => {
									let i = {
										...e,
										subcategoryDetails: { ...e.subcategoryDetails },
									};
									return (
										e.privacySubcategoryType === t &&
											(r[t]
												? (i.subcategoryDetails.accessRule = r[t])
												: o[t] && (i.subcategoryDetails.accessRule = o[t])),
										i
									);
								});
								this.setState({
									changedOptions: [...s],
									activitySubcategoryPrivacyLocalSettings: l,
								}),
									'function' === typeof n && n([...s], l);
							}),
							(this.getMainContent = () => {
								const { activitySubcategoryPrivacyLocalSettings: e } =
									this.state;
								return (0, o.Zc)(e).map((e) =>
									(0, d.jsxs)(
										'div',
										{
											className: s.A.optionContainer,
											children: [
												(0, d.jsx)('div', {
													className: s.A.optionTitleContainer,
													children: (0, d.jsx)(a.A, {
														ns: 'activity_types',
														content: `activity_type_${e.privacySubcategoryType}`,
													}),
												}),
												(0, d.jsx)('div', {
													className: s.A.dropdownContainer,
													children: (0, d.jsxs)('select', {
														className: s.A.selectInput,
														onChange: (t) => {
															this.changeOptionValue(
																t,
																e.privacySubcategoryType
															);
														},
														value: e.subcategoryDetails.accessRule,
														children: [
															(0, d.jsx)('option', {
																value: r.A.Visibility.PRIVATE,
																children: l.A.t(
																	'privacy_alert:privacy.alert.only.me'
																),
															}),
															(0, d.jsx)('option', {
																value: r.A.Visibility.SUBSCRIBERS,
																children: l.A.t(
																	'privacy_alert:privacy.alert.connections'
																),
															}),
															(0, d.jsx)('option', {
																value: r.A.Visibility.GROUPS,
																children: l.A.t(
																	'privacy_alert:privacy.alert.groups'
																),
															}),
															(0, d.jsx)('option', {
																value: r.A.Visibility.PUBLIC,
																children: l.A.t(
																	'privacy_alert:privacy.alert.everyone'
																),
															}),
														],
													}),
												}),
											],
										},
										e.privacySubcategoryType
									)
								);
							}),
							(this.state = {
								changedOptions: [],
								activitySubcategoryPrivacyLocalSettings: [
									...e.activitySubcategoryPrivacySettings,
								],
							});
					}
					componentDidUpdate(e, t, i) {
						JSON.stringify(this.props.activitySubcategoryPrivacySettings) !==
							JSON.stringify(e.activitySubcategoryPrivacySettings) &&
							this.setState({
								activitySubcategoryPrivacyLocalSettings: [
									...this.props.activitySubcategoryPrivacySettings,
								],
							});
					}
					render() {
						const { activitySubcategoryPrivacyLocalSettings: e } = this.state;
						return (0, d.jsxs)(d.Fragment, {
							children: [
								(0, d.jsx)('p', {
									children: (0, d.jsx)(a.A, {
										ns: 'settings',
										content: 'privacy_custom_levels_description',
									}),
								}),
								e && e.length ? this.getMainContent() : null,
							],
						});
					}
				}
				const p = (0, c.CI)(['privacy_alert'])(u);
			},
			483796: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(228748),
					a = i(82040),
					s = i(838626),
					r = i(462026),
					o = i(717776);
				class l extends n.Component {
					render() {
						let { store: e, children: t } = this.props;
						return (0, o.jsx)(a.Kq, {
							store: e,
							children: (0, o.jsx)('div', { children: t }),
						});
					}
					componentDidMount() {
						(0, s.F)();
					}
					componentDidUpdate() {
						(0, s.F)();
					}
					componentWillUnmount() {
						const { dispatch: e } = this.props;
						e && e((0, r.ASY)());
					}
				}
				const c = l;
			},
			908950: (e, t, i) => {
				'use strict';
				i.d(t, {
					D9: () => R,
					F8: () => v,
					I4: () => U,
					IC: () => x,
					K9: () => k,
					OS: () => F,
					SL: () => c,
					XA: () => N,
					Z$: () => D,
					a2: () => G,
					aH: () => O,
					jE: () => I,
					ki: () => d,
					lu: () => B,
					nG: () => H,
					ny: () => M,
					p0: () => b,
					qQ: () => P,
					qw: () => w,
					sU: () => L,
					ui: () => f,
				});
				i(228748);
				var n = i(385192),
					a = i(820470),
					s = i(895509),
					r = i(717776);
				function o(e) {
					switch (e) {
						case 'ACTIVITY_TOTAL_ELEVATION_GAIN':
							return 'label_elevation_gain_total';
						case 'ACTIVITY_TRAINING_STRESS_SCORE':
							return 'label_training_stress_score';
						case 'ACTIVITY_AVG_DISTANCE':
							return 'label_average_distance';
						case 'ACTIVITY_MAX_DISTANCE':
							return 'gear_max_distance';
						case 'ACTIVITY_MAX_SPEED':
							return 'label_max_speed';
						case 'ACTIVITY_MAX_RUN_CADENCE':
							return 'label_max_run_cadence';
						case 'ACTIVITY_MAX_BIKE_CADENCE':
							return 'label_max_bike_cadence';
						case 'ACTIVITY_MAX_POWER':
							return 'label_max_power';
						case 'ACTIVITY_TOTAL_ELEVATION_LOSS':
							return 'course_map_elevation_loss';
						case 'ACTIVITY_AVERAGE_STRESS':
							return 'label_avg_stress';
						case 'ACTIVITY_MAX_STRESS':
							return 'label_max_stress';
						case 'ACTIVITY_AVERAGE_CADENCE':
							return 'label_average_cadence';
						case 'ACTIVITY_MAX_CADENCE':
							return 'label_max_cadence';
						case 'ACTIVITY_MOVING_DURATION':
							return 'label_moving_time';
						case 'ACTIVITY_TOTAL_ROUTES':
							return 'label_total_routes';
						case 'ACTIVITY_CLIMBING_TIME':
							return 'label_climbing_time';
						case 'ACTIVITY_TOTAL_ROUTE_ASCENT':
							return 'label_total_route_ascent';
						case 'ACTIVITY_MAX_ROUTE_ASCENT':
							return 'label_max_route_ascent';
						case 'ACTIVITY_ROUTES_ATTEMPTED':
							return 'label_routes_attempted';
						case 'ACTIVITY_ROUTES_COMPLETED':
							return 'label_routes_completed';
						case 'ACTIVITY_SENDS':
							return 'label_sends';
						case 'ACTIVITY_FALLS':
							return 'label_falls';
						case 'ACTIVITY_TOTAL_REST_TIME':
							return 'label_total_rest_time';
						case 'ACTIVITY_TOTAL_TIME':
							return 'label_time_total';
						case 'ACTIVITY_AVG_GAP':
							return 'avg_grade_adjusted_pace';
						case 'ACTIVITY_AVG_WHEELCHAIR_CADENCE':
							return 'label_avg_wheelchair_cadence';
						case 'ACTIVITY_MAX_WHEELCHAIR_CADENCE':
							return 'label_max_wheelchair_cadence';
						default:
							return e;
					}
				}
				function l(e) {
					switch (e) {
						case 'ACTIVITY_TOTAL_ELEVATION_GAIN':
						case 'ACTIVITY_TRAINING_STRESS_SCORE':
						case 'ACTIVITY_MAX_SPEED':
						case 'ACTIVITY_MAX_RUN_CADENCE':
						case 'ACTIVITY_MAX_BIKE_CADENCE':
						case 'ACTIVITY_MAX_POWER':
						case 'ACTIVITY_AVERAGE_STRESS':
						case 'ACTIVITY_MAX_STRESS':
						case 'ACTIVITY_AVERAGE_CADENCE':
						case 'ACTIVITY_MAX_CADENCE':
						case 'ACTIVITY_MOVING_DURATION':
						case 'ACTIVITY_TOTAL_ROUTE_ASCENT':
						case 'ACTIVITY_MAX_ROUTE_ASCENT':
						case 'ACTIVITY_TOTAL_TIME':
						case 'ACTIVITY_AVG_WHEELCHAIR_CADENCE':
						case 'ACTIVITY_MAX_WHEELCHAIR_CADENCE':
						case 'label_max_pace':
							return 'units';
						case 'ACTIVITY_AVG_DISTANCE':
							return 'golf_main';
						case 'ACTIVITY_MAX_DISTANCE':
							return 'gear_tracking';
						case 'ACTIVITY_TOTAL_ELEVATION_LOSS':
							return 'course';
						case 'ACTIVITY_TOTAL_ROUTES':
						case 'ACTIVITY_CLIMBING_TIME':
						case 'ACTIVITY_ROUTES_ATTEMPTED':
						case 'ACTIVITY_ROUTES_COMPLETED':
						case 'ACTIVITY_SENDS':
						case 'ACTIVITY_FALLS':
						case 'ACTIVITY_TOTAL_REST_TIME':
							return 'activity';
						case 'ACTIVITY_AVG_GAP':
							return 'gap';
						default:
							return 'reportswidget';
					}
				}
				function c(e, t, { i18next: i, Personalizer: n, DateFormatter: a }, r) {
					const o =
						!!r &&
						(function (e) {
							switch (e) {
								case s.A.Windsurfing:
								case s.A.WindsurfingV2:
								case 'boating':
								case s.A.Boating:
									return !0;
								default:
									return !1;
							}
						})(r);
					switch (e) {
						case 'FULL_DATE':
							return p(n.personalizeDate(t));
						case 'MONTH_YEAR':
							return p(a.formatMonthYear(t));
						case 'YEAR':
							return p(t.getFullYear());
						case 'ACTIVITY_TOTAL_DISTANCE':
						case 'ACTIVITY_AVG_DISTANCE':
						case 'ACTIVITY_MEDIAN_DISTANCE':
						case 'ACTIVITY_MAX_DISTANCE':
							return p(
								o
									? n.personalizeDistance(t / 100, r)
									: n.personalizeDistance(t / 100, 'all'),
								o
									? i.t(`units:${n.getDistanceUnitKey(r)}`)
									: i.t(`units:${n.getDistanceUnitKey()}`)
							);
						case 'ACTIVITY_AVERAGE_SPEED':
						case 'ACTIVITY_MAX_SPEED':
							return p(
								o ? n.personalizeSpeed(10 * t, r) : n.personalizeSpeed(10 * t),
								o
									? i.t(`units:${n.getSpeedUnitKey(r)}`)
									: i.t(`units:${n.getSpeedUnitKey()}`)
							);
						case 'ACTIVITY_TOTAL_ELEVATION_GAIN':
						case 'ACTIVITY_AVG_ELEVATION_GAIN':
						case 'ACTIVITY_MEDIAN_ELEVATION_GAIN':
						case 'ACTIVITY_MAX_ELEVATION_GAIN':
						case 'ACTIVITY_TOTAL_ELEVATION_LOSS':
						case 'ACTIVITY_AVG_ELEVATION_LOSS':
						case 'ACTIVITY_MEDIAN_ELEVATION_LOSS':
						case 'ACTIVITY_MAX_ELEVATION_LOSS':
							return p(
								n.personalizeElevation(t / 100),
								i.t(`units:${n.getElevationUnitKey()}`)
							);
						case 'ACTIVITY_TOTAL_ROUTE_ASCENT':
						case 'ACTIVITY_MAX_ROUTE_ASCENT':
							return p(
								n.personalizeElevation(t),
								i.t(`units:${n.getElevationUnitKey()}`)
							);
						case 'ACTIVITY_CLIMBING_TIME':
						case 'ACTIVITY_TOTAL_REST_TIME':
							return p(
								n.personalizeDuration(t),
								i.t(`units:${n.getDurationUnitKey()}`)
							);
						case 'ACTIVITY_TOTAL_DURATION':
						case 'ACTIVITY_MOVING_DURATION':
						case 'ACTIVITY_AVG_TIME':
						case 'ACTIVITY_MEDIAN_TIME':
						case 'ACTIVITY_MAX_TIME':
						case 'ACTIVITY_TOTAL_TIME':
							return p(
								n.personalizeDuration(t / 1e3),
								i.t(`units:${n.getDurationUnitKey()}`)
							);
						case 'ACTIVITY_AVG_STRIDE_LENGTH':
							return p(
								n.personalizeAvgStrideLength(t),
								i.t(`units:${n.getAvgStrideLengthUnitKey()}`)
							);
						case 'ACTIVITY_AVERAGE_POWER':
						case 'ACTIVITY_MAX_POWER':
							return p(
								n.personalizePower(t),
								i.t(`units:${n.getPowerUnitKey()}`)
							);
						case 'ACTIVITY_AVERAGE_PACE':
						case 'label_max_pace':
						case 'ACTIVITY_AVG_GAP':
							return p(
								n.formatPace(60 / n.convertSpeed(10 * t)),
								i.t(`units:${n.getPaceUnitKey()}`)
							);
						case 'ACTIVITY_ACTIVE_CALORIES':
							return p(n.personalizeCalories(t));
						case 'ACTIVITY_MAX_HEART_RATE':
						case 'ACTIVITY_AVERAGE_HEART_RATE':
							return p(
								n.personalizeHeartRate(t),
								i.t(`units:${n.getHeartRateUnitKey()}`)
							);
						case 'ACTIVITY_GROUND_CONTACT_TIME':
							return p(
								n.personalizeGroundContactTime(t),
								i.t(`units:${n.getGroundContactTimeUnitKey()}`)
							);
						case 'ACTIVITY_AVERAGE_RUN_CADENCE':
						case 'ACTIVITY_MAX_RUN_CADENCE':
							return p(
								n.personalizeCadence(t),
								i.t(`units:${n.getCadenceUnitKey('running')}`)
							);
						case 'ACTIVITY_AVERAGE_CADENCE':
						case 'ACTIVITY_MAX_CADENCE':
						case 'ACTIVITY_AVERAGE_BIKE_CADENCE':
						case 'ACTIVITY_MAX_BIKE_CADENCE':
							return p(
								n.personalizeCadence(t),
								i.t(`units:${n.getCadenceUnitKey()}`)
							);
						case 'ACTIVITY_VO2_MAX':
						case 'ACTIVITY_VO2_MAX_CYCLING':
							return p(n.personalizeVO2Max(t));
						case 'ACTIVITY_AVERAGE_SWIM_PACE':
							return p(
								n.personalizeSwimPace(t),
								i.t(`units:${n.getSwimPaceUnitKey()}`)
							);
						case 'ACTIVITY_AVG_VERTICAL_RATIO':
							return p(
								n.personalizeVerticalRatio(t),
								i.t(`units:${n.getVerticalRatioUnitKey()}`)
							);
						case 'ACTIVITY_VERTICAL_OSCILLATION':
							return p(
								n.personalizeVerticalOscillation(t),
								i.t(`units:${n.getVerticalOscillationUnitKey()}`)
							);
						case 'ACTIVITY_AVG_GROUND_CONTACT_BALANCE':
							return p(n.personalizeGroundContactTime(t));
						case 'ACTIVITY_AVG_WHEELCHAIR_CADENCE':
						case 'ACTIVITY_MAX_WHEELCHAIR_CADENCE':
							return p(
								t,
								i.t(`units:${n.getCadenceUnitKey('wheelchair_push_run')}`)
							);
						case 'ACTIVITY_AVERAGE_STRESS':
						case 'ACTIVITY_MAX_STRESS':
							return p(n.personalizeStress(t));
						default:
							return p(t);
					}
				}
				const d = {
					ACTIVITY_TOTAL_ROUTES: {
						requestMetric: 'splitSummaries.noOfSplits.CLIMB_ACTIVE',
						summaryType: n.h5.CLIMB_ACTIVE,
						statsName: 'splitSummaries.noOfSplits',
					},
					ACTIVITY_CLIMBING_TIME: {
						requestMetric: 'splitSummaries.duration.CLIMB_ACTIVE',
						summaryType: n.h5.CLIMB_ACTIVE,
						statsName: 'splitSummaries.duration',
					},
					ACTIVITY_TOTAL_ROUTE_ASCENT: {
						requestMetric: 'splitSummaries.totalAscent.CLIMB_ACTIVE',
						summaryType: n.h5.CLIMB_ACTIVE,
						statsName: 'splitSummaries.totalAscent',
					},
					ACTIVITY_MAX_ROUTE_ASCENT: {
						requestMetric: 'splitSummaries.maxElevationGain.CLIMB_ACTIVE',
						summaryType: n.h5.CLIMB_ACTIVE,
						statsName: 'splitSummaries.maxElevationGain',
					},
					ACTIVITY_ROUTES_ATTEMPTED: {
						requestMetric: 'splitSummaries.numClimbsAttempted.CLIMB_ACTIVE',
						summaryType: n.h5.CLIMB_ACTIVE,
						statsName: 'splitSummaries.numClimbsAttempted',
					},
					ACTIVITY_ROUTES_COMPLETED: {
						requestMetric: 'splitSummaries.numClimbsCompleted.CLIMB_ACTIVE',
						summaryType: n.h5.CLIMB_ACTIVE,
						statsName: 'splitSummaries.numClimbsCompleted',
					},
					ACTIVITY_SENDS: {
						requestMetric: 'splitSummaries.numClimbSends.CLIMB_ACTIVE',
						summaryType: n.h5.CLIMB_ACTIVE,
						statsName: 'splitSummaries.numClimbSends',
					},
					ACTIVITY_FALLS: {
						requestMetric: 'splitSummaries.numFalls.CLIMB_ACTIVE',
						summaryType: n.h5.CLIMB_ACTIVE,
						statsName: 'splitSummaries.numFalls',
					},
					ACTIVITY_TOTAL_REST_TIME: {
						requestMetric: 'splitSummaries.duration.CLIMB_REST',
						summaryType: n.h5.CLIMB_REST,
						statsName: 'splitSummaries.duration',
					},
				};
				function u(e, t) {
					return { metric: e, property: t };
				}
				function p(e, t) {
					return { value: e, unit: t };
				}
				const y = {
						ACTIVITY_TOTAL_DISTANCE: u('distance', 'sum'),
						ACTIVITY_AVG_DISTANCE: u('distance', 'avg'),
						ACTIVITY_MAX_DISTANCE: u('distance', 'max'),
						ACTIVITY_NUMBER_OF_ACTIVITIES: u('duration', 'count'),
						ACTIVITY_TOTAL_DURATION: u('duration', 'sum'),
						ACTIVITY_MOVING_DURATION: u('movingDuration', 'sum'),
						ACTIVITY_AVG_TIME: u('duration', 'avg'),
						ACTIVITY_MAX_TIME: u('duration', 'max'),
						ACTIVITY_ACTIVE_CALORIES: u('calories', 'sum'),
						ACTIVITY_TOTAL_ELEVATION_GAIN: u('elevationGain', 'sum'),
						ACTIVITY_AVG_ELEVATION_GAIN: u('elevationGain', 'avg'),
						ACTIVITY_MAX_ELEVATION_GAIN: u('elevationGain', 'max'),
						ACTIVITY_TOTAL_ELEVATION_LOSS: u('elevationLoss', 'sum'),
						ACTIVITY_AVG_ELEVATION_LOSS: u('elevationLoss', 'avg'),
						ACTIVITY_MAX_ELEVATION_LOSS: u('elevationLoss', 'max'),
						ACTIVITY_AVERAGE_SPEED: u('avgSpeed', 'avg'),
						ACTIVITY_MAX_SPEED: u('maxSpeed', 'max'),
						ACTIVITY_AVERAGE_PACE: u('avgSpeed', 'avg'),
						label_max_pace: u('maxSpeed', 'max'),
						ACTIVITY_AVERAGE_HEART_RATE: u('avgHr', 'avg'),
						ACTIVITY_MAX_HEART_RATE: u('maxHr', 'max'),
						ACTIVITY_AVERAGE_RUN_CADENCE: u('avgRunCadence', 'avg'),
						ACTIVITY_MAX_RUN_CADENCE: u('maxRunCadence', 'max'),
						ACTIVITY_AVERAGE_BIKE_CADENCE: u('avgBikeCadence', 'avg'),
						ACTIVITY_MAX_BIKE_CADENCE: u('maxBikeCadence', 'max'),
						ACTIVITY_AVG_WHEELCHAIR_CADENCE: u('avgWheelchairCadence', 'avg'),
						ACTIVITY_MAX_WHEELCHAIR_CADENCE: u('maxWheelchairCadence', 'max'),
						ACTIVITY_AVERAGE_POWER: u('avgPower', 'avg'),
						ACTIVITY_MAX_POWER: u('maxPower', 'max'),
						ACTIVITY_VERTICAL_OSCILLATION: u('avgVerticalOscillation', 'avg'),
						ACTIVITY_GROUND_CONTACT_TIME: u('avgGroundContactTime', 'avg'),
						ACTIVITY_AVG_STRIDE_LENGTH: u('avgStrideLength', 'avg'),
						ACTIVITY_AVERAGE_STRESS: u('avgStress', 'avg'),
						ACTIVITY_MAX_STRESS: u('maxStress', 'max'),
						ACTIVITY_AVERAGE_CADENCE: u('avgBikeCadence', 'avg'),
						ACTIVITY_MAX_CADENCE: u('maxBikeCadence', 'max'),
						ACTIVITY_TOTAL_ROUTES: u(
							d.ACTIVITY_TOTAL_ROUTES.requestMetric,
							'sum'
						),
						ACTIVITY_CLIMBING_TIME: u(
							d.ACTIVITY_CLIMBING_TIME.requestMetric,
							'sum'
						),
						ACTIVITY_TOTAL_ROUTE_ASCENT: u(
							d.ACTIVITY_TOTAL_ROUTE_ASCENT.requestMetric,
							'sum'
						),
						ACTIVITY_MAX_ROUTE_ASCENT: u(
							d.ACTIVITY_MAX_ROUTE_ASCENT.requestMetric,
							'max'
						),
						ACTIVITY_ROUTES_ATTEMPTED: u(
							d.ACTIVITY_ROUTES_ATTEMPTED.requestMetric,
							'sum'
						),
						ACTIVITY_ROUTES_COMPLETED: u(
							d.ACTIVITY_ROUTES_COMPLETED.requestMetric,
							'sum'
						),
						ACTIVITY_SENDS: u(d.ACTIVITY_SENDS.requestMetric, 'sum'),
						ACTIVITY_FALLS: u(d.ACTIVITY_FALLS.requestMetric, 'sum'),
						ACTIVITY_TOTAL_REST_TIME: u(
							d.ACTIVITY_TOTAL_REST_TIME.requestMetric,
							'sum'
						),
						ACTIVITY_TOTAL_TIME: u('duration', 'sum'),
						ACTIVITY_AVG_GAP: u('avgGradeAdjustedSpeed', 'avg'),
					},
					h = [
						'ACTIVITY_NUMBER_OF_ACTIVITIES',
						'ACTIVITY_TOTAL_DISTANCE',
						'ACTIVITY_TOTAL_DURATION',
						'ACTIVITY_TOTAL_ELEVATION_GAIN',
						'ACTIVITY_AVERAGE_SPEED',
						'ACTIVITY_AVERAGE_HEART_RATE',
						'ACTIVITY_AVERAGE_RUN_CADENCE',
						'ACTIVITY_AVERAGE_BIKE_CADENCE',
						'ACTIVITY_ACTIVE_CALORIES',
					],
					g = [
						'ACTIVITY_NUMBER_OF_ACTIVITIES',
						'ACTIVITY_TOTAL_DURATION',
						'ACTIVITY_AVERAGE_STRESS',
						'ACTIVITY_AVERAGE_HEART_RATE',
						'ACTIVITY_MAX_STRESS',
					],
					m = [
						'ACTIVITY_TOTAL_DURATION',
						'ACTIVITY_MOVING_DURATION',
						'ACTIVITY_AVERAGE_HEART_RATE',
						'ACTIVITY_MAX_HEART_RATE',
						'ACTIVITY_AVERAGE_POWER',
						'ACTIVITY_MAX_POWER',
						'ACTIVITY_ACTIVE_CALORIES',
						'ACTIVITY_TOTAL_DISTANCE',
						'ACTIVITY_AVERAGE_CADENCE',
						'ACTIVITY_MAX_CADENCE',
					],
					A = [
						'ACTIVITY_NUMBER_OF_ACTIVITIES',
						'ACTIVITY_TOTAL_DISTANCE',
						'ACTIVITY_TOTAL_DURATION',
						'ACTIVITY_ACTIVE_CALORIES',
						'ACTIVITY_AVERAGE_SPEED',
						'ACTIVITY_MAX_SPEED',
						'ACTIVITY_AVERAGE_HEART_RATE',
						'ACTIVITY_TOTAL_ELEVATION_GAIN',
					],
					_ = [
						'ACTIVITY_TOTAL_ROUTES',
						'ACTIVITY_CLIMBING_TIME',
						'ACTIVITY_TOTAL_ROUTE_ASCENT',
						'ACTIVITY_MAX_ROUTE_ASCENT',
						'ACTIVITY_ROUTES_ATTEMPTED',
						'ACTIVITY_ROUTES_COMPLETED',
						'ACTIVITY_SENDS',
						'ACTIVITY_FALLS',
						'ACTIVITY_ACTIVE_CALORIES',
						'ACTIVITY_AVERAGE_HEART_RATE',
						'ACTIVITY_MAX_HEART_RATE',
						'ACTIVITY_TOTAL_REST_TIME',
						'ACTIVITY_TOTAL_TIME',
					],
					E = [
						'ACTIVITY_NUMBER_OF_ACTIVITIES',
						'ACTIVITY_TOTAL_DISTANCE',
						'ACTIVITY_AVG_DISTANCE',
						'ACTIVITY_MAX_DISTANCE',
						'ACTIVITY_TOTAL_DURATION',
						'ACTIVITY_ACTIVE_CALORIES',
						'ACTIVITY_TOTAL_ELEVATION_GAIN',
						'ACTIVITY_AVG_ELEVATION_GAIN',
						'ACTIVITY_MAX_ELEVATION_GAIN',
						'ACTIVITY_TOTAL_ELEVATION_LOSS',
						'ACTIVITY_AVG_ELEVATION_LOSS',
						'ACTIVITY_MAX_ELEVATION_LOSS',
						'ACTIVITY_AVERAGE_PACE',
						'ACTIVITY_AVG_GAP',
						'label_max_pace',
						'ACTIVITY_AVERAGE_HEART_RATE',
						'ACTIVITY_MAX_HEART_RATE',
						'ACTIVITY_AVERAGE_RUN_CADENCE',
						'ACTIVITY_MAX_RUN_CADENCE',
						'ACTIVITY_VERTICAL_OSCILLATION',
						'ACTIVITY_GROUND_CONTACT_TIME',
						'ACTIVITY_AVG_STRIDE_LENGTH',
					],
					T = [
						'ACTIVITY_NUMBER_OF_ACTIVITIES',
						'ACTIVITY_TOTAL_DISTANCE',
						'ACTIVITY_AVG_DISTANCE',
						'ACTIVITY_MAX_DISTANCE',
						'ACTIVITY_TOTAL_DURATION',
						'ACTIVITY_ACTIVE_CALORIES',
						'ACTIVITY_TOTAL_ELEVATION_GAIN',
						'ACTIVITY_AVG_ELEVATION_GAIN',
						'ACTIVITY_MAX_ELEVATION_GAIN',
						'ACTIVITY_TOTAL_ELEVATION_LOSS',
						'ACTIVITY_AVG_ELEVATION_LOSS',
						'ACTIVITY_MAX_ELEVATION_LOSS',
						'ACTIVITY_AVERAGE_PACE',
						'ACTIVITY_AVG_GAP',
						'label_max_pace',
						'ACTIVITY_AVERAGE_HEART_RATE',
						'ACTIVITY_MAX_HEART_RATE',
						'ACTIVITY_AVG_WHEELCHAIR_CADENCE',
						'ACTIVITY_MAX_WHEELCHAIR_CADENCE',
					],
					C = [
						'ACTIVITY_NUMBER_OF_ACTIVITIES',
						'ACTIVITY_TOTAL_DISTANCE',
						'ACTIVITY_AVG_DISTANCE',
						'ACTIVITY_MAX_DISTANCE',
						'ACTIVITY_TOTAL_DURATION',
						'ACTIVITY_ACTIVE_CALORIES',
						'ACTIVITY_TOTAL_ELEVATION_GAIN',
						'ACTIVITY_AVG_ELEVATION_GAIN',
						'ACTIVITY_MAX_ELEVATION_GAIN',
						'ACTIVITY_TOTAL_ELEVATION_LOSS',
						'ACTIVITY_AVG_ELEVATION_LOSS',
						'ACTIVITY_MAX_ELEVATION_LOSS',
						'ACTIVITY_AVERAGE_SPEED',
						'ACTIVITY_MAX_SPEED',
						'ACTIVITY_AVERAGE_HEART_RATE',
						'ACTIVITY_MAX_HEART_RATE',
						'ACTIVITY_AVERAGE_BIKE_CADENCE',
						'ACTIVITY_MAX_BIKE_CADENCE',
						'ACTIVITY_AVERAGE_POWER',
						'ACTIVITY_MAX_POWER',
					],
					S = [
						'ACTIVITY_NUMBER_OF_ACTIVITIES',
						'ACTIVITY_TOTAL_DISTANCE',
						'ACTIVITY_AVG_DISTANCE',
						'ACTIVITY_MAX_DISTANCE',
						'ACTIVITY_TOTAL_DURATION',
						'ACTIVITY_MOVING_DURATION',
						'ACTIVITY_AVG_TIME',
						'ACTIVITY_MAX_TIME',
						'ACTIVITY_TOTAL_ROUTES',
						'ACTIVITY_CLIMBING_TIME',
						'ACTIVITY_TOTAL_ROUTE_ASCENT',
						'ACTIVITY_MAX_ROUTE_ASCENT',
						'ACTIVITY_ROUTES_ATTEMPTED',
						'ACTIVITY_ROUTES_COMPLETED',
						'ACTIVITY_SENDS',
						'ACTIVITY_FALLS',
						'ACTIVITY_ACTIVE_CALORIES',
						'ACTIVITY_TOTAL_ELEVATION_GAIN',
						'ACTIVITY_AVG_ELEVATION_GAIN',
						'ACTIVITY_MAX_ELEVATION_GAIN',
						'ACTIVITY_TOTAL_ELEVATION_LOSS',
						'ACTIVITY_AVG_ELEVATION_LOSS',
						'ACTIVITY_MAX_ELEVATION_LOSS',
						'ACTIVITY_AVERAGE_SPEED',
						'ACTIVITY_MAX_SPEED',
						'ACTIVITY_AVERAGE_PACE',
						'ACTIVITY_AVG_GAP',
						'label_max_pace',
						'ACTIVITY_AVERAGE_HEART_RATE',
						'ACTIVITY_MAX_HEART_RATE',
						'ACTIVITY_AVERAGE_RUN_CADENCE',
						'ACTIVITY_MAX_RUN_CADENCE',
						'ACTIVITY_AVERAGE_BIKE_CADENCE',
						'ACTIVITY_MAX_BIKE_CADENCE',
						'ACTIVITY_AVG_WHEELCHAIR_CADENCE',
						'ACTIVITY_MAX_WHEELCHAIR_CADENCE',
						'ACTIVITY_AVERAGE_POWER',
						'ACTIVITY_MAX_POWER',
						'ACTIVITY_VERTICAL_OSCILLATION',
						'ACTIVITY_GROUND_CONTACT_TIME',
						'ACTIVITY_AVG_STRIDE_LENGTH',
						'ACTIVITY_AVERAGE_STRESS',
						'ACTIVITY_MAX_STRESS',
						'ACTIVITY_AVERAGE_CADENCE',
						'ACTIVITY_MAX_CADENCE',
						'ACTIVITY_TOTAL_REST_TIME',
						'ACTIVITY_TOTAL_TIME',
					];
				function I() {
					return S;
				}
				function v() {
					return h;
				}
				function f() {
					return g;
				}
				function D() {
					return m;
				}
				function N() {
					let e = [...h];
					const t = h.findIndex((e) => 'ACTIVITY_AVERAGE_HEART_RATE' === e);
					return e.splice(t + 1, 0, 'ACTIVITY_MAX_HEART_RATE'), e;
				}
				function R() {
					return A;
				}
				function b() {
					return _;
				}
				function L() {
					return E;
				}
				function P() {
					return C;
				}
				function O() {
					return T;
				}
				function w(e) {
					return e.map((e) => e.key);
				}
				function F(e) {
					return S.map((t) => ({
						title: `${l(t)}:${o(t)}`,
						key: t,
						visible: -1 !== e.indexOf(t),
						align: 'right',
					}));
				}
				function k(e) {
					let t = [];
					return (
						e.forEach((e) => {
							let i = y[e];
							if (!i) return !0;
							-1 === t.indexOf(i.metric) && t.push(i.metric);
						}),
						t
					);
				}
				function U(e) {
					return y[e];
				}
				function M() {
					return [
						'all',
						'running',
						'cycling',
						'multi_sport',
						'fitness_equipment',
						'hiking',
						'swimming',
						'walking',
						'transition',
						'motorcycling',
						'other',
						'diving',
						'yoga',
					];
				}
				function G(e) {
					return e.unit ? `${e.value} ${e.unit}` : e.value;
				}
				const x = {
						FOUR_WEEKS: 'fourWeeks',
						ONE_MONTH: 'oneMonth',
						SEVEN_DAYS: 'sevenDays',
					},
					B = [
						a.A.FITNESS_AGE,
						a.A.SLEEP_SLEEP_SCORE,
						a.A.WELLNESS_FLOORS_ASCENDED,
						a.A.WELLNESS_MODERATE_INTENSITY_MINUTES,
						a.A.WELLNESS_TOTAL_STEPS,
						a.A.SLEEP_SLEEP_DURATION,
						a.A.COMMON_TOTAL_CALORIES,
						a.A.WELLNESS_HYDRATION,
						a.A.WELLNESS_RESTING_HEART_RATE,
						a.A.WELLNESS_AVERAGE_STRESS,
					],
					H = (e) => {
						const {
							cx: t,
							cy: i,
							stroke: n,
							payload: a,
							value: s,
							dotColor: o,
							dotShape: l,
							dotWidth: c,
							dotHeight: d,
							strokeWidth: u,
						} = e;
						if (null === s) return null;
						const p = c || 14,
							y = d || 14,
							h = o || 'red',
							g = l || 'circle';
						return 'diamond' === g
							? (0, r.jsx)('svg', {
									x: t - p / 2,
									y: i - y / 2,
									width: p,
									height: y,
									fill: h,
									viewBox: '0 0 32 32',
									children: (0, r.jsx)('path', {
										fill: h,
										cx: '16',
										cy: '16',
										type: g,
										className: 'recharts-symbols',
										transform: 'translate(16, 16)',
										d: 'M0,-16L9.237604307034012,0L0,16L-9.237604307034012,0Z',
									}),
								})
							: 'triangle' === g
								? (0, r.jsx)('svg', {
										x: t - p / 2,
										y: i - y / 2,
										width: p,
										height: y,
										fill: h,
										viewBox: '0 0 32 32',
										children: (0, r.jsx)('path', {
											fill: h,
											stroke: n || 'none',
											strokeWidth: u || 0,
											cx: '16',
											cy: '16',
											type: g,
											className: 'recharts-symbols',
											transform: 'translate(16, 16)',
											d: 'M0,-18.475208614068023L15.999999999999998,9.237604307034012L-15.999999999999998,9.237604307034012Z',
										}),
									})
								: 'square' === g
									? (0, r.jsx)('svg', {
											x: t - p / 2,
											y: i - y / 2,
											width: p,
											height: y,
											fill: h,
											viewBox: '0 0 32 32',
											children: (0, r.jsx)('path', {
												fill: h,
												cx: '16',
												cy: '16',
												type: g,
												className: 'recharts-symbols',
												transform: 'translate(16, 16)',
												d: 'M-16,-16h32v32h-32Z',
											}),
										})
									: (0, r.jsx)('svg', {
											x: t - p / 2,
											y: i - y / 2,
											width: p,
											height: y,
											fill: h,
											viewBox: '0 0 32 32',
											children: (0, r.jsx)('path', {
												fill: h,
												cx: '16',
												cy: '16',
												type: g,
												className: 'recharts-symbols',
												transform: 'translate(16, 16)',
												d: 'M16,0A16,16,0,1,1,-16,0A16,16,0,1,1,16,0',
											}),
										});
					};
			},
			692135: (e, t, i) => {
				'use strict';
				i.d(t, {
					$r: () => de,
					Cl: () => J,
					DF: () => E,
					Fl: () => V,
					Hv: () => q,
					I0: () => L,
					I8: () => v,
					Jp: () => Y,
					KV: () => Q,
					L4: () => j,
					M7: () => f,
					Mh: () => U,
					NI: () => ue,
					OH: () => ge,
					Q8: () => A,
					Rz: () => K,
					UP: () => X,
					_W: () => W,
					cK: () => ie,
					ck: () => ne,
					df: () => k,
					ei: () => ee,
					g$: () => te,
					in: () => I,
					j2: () => F,
					nj: () => O,
					oZ: () => ae,
					qE: () => T,
					qL: () => w,
					tO: () => ye,
					uZ: () => $,
					wD: () => P,
					w_: () => G,
					wv: () => he,
					xK: () => R,
					xz: () => C,
					y$: () => pe,
					y6: () => S,
					y8: () => N,
					zk: () => x,
				});
				var n = i(748630),
					a = i(34581),
					s = i(109285),
					r = i.n(s),
					o = i(422460),
					l = i(868622),
					c = i(29273),
					d = i(578493),
					u = i(526504),
					p = i(408822),
					y = i(80879),
					h = i(353761),
					g = i(181990),
					m = i(544310);
				const A = 13;
				let _ = new l.A({ numberSeparator: c.A.getNumberSeparator() });
				const E = {
						ONE_MONTH: 4,
						ONE_DAY: 3,
						SEVEN_DAYS: 2,
						FOUR_WEEKS: 1,
						FIFTY_TWO_WEEKS: 0,
					},
					T = {
						FOUR_WEEKS: 'fourWeeksWeights',
						ONE_MONTH: 'oneMonthWeights',
						SEVEN_DAYS: 'sevenDaysWeights',
					},
					C = {
						weight: 'weight',
						bmi: 'bmi',
						bodyFat: 'bodyFat',
						muscleMass: 'muscleMass',
						boneMass: 'boneMass',
						bodyWater: 'bodyWater',
						physiqueRating: 'physiqueRating',
						visceralFat: 'visceralFat',
						metabolicAge: 'metabolicAge',
						caloricIntake: 'caloricIntake',
					},
					S = {
						weight: m.Color227,
						bmi: m.Color710,
						bodyFat: m.Color711,
						muscleMass: m.Color712,
						boneMass: m.Color113,
						bodyWater: m.Color228,
						physiqueRating: m.Color227,
						visceralFat: m.Color227,
						metabolicAge: m.Color227,
						caloricIntake: m.Color227,
					},
					I = m.Color100,
					v = {
						visceralFatHealthyLevel: '1 - 12',
						visceralFatExcessLevel: '13 - 59',
						bodyWaterWomenRange: '45 - 60%',
						bodyWaterMenRange: '50 - 65%',
					},
					f = (e, t, i, n, a) => {
						const s = D(e, t);
						if (i && a) {
							const e = D(a, t);
							return s &&
								e &&
								(isNaN(s) ||
									isNaN(e) ||
									'string' === typeof s ||
									'string' === typeof e)
								? s
								: !(
										!s ||
										(0 !== e && !e) ||
										(s === d.A.minStWeight && e < d.A.minWeight) ||
										s > d.A.maxStWeight ||
										e > d.A.maxLbsWeight ||
										(s === d.A.maxStWeight && e > d.A.maxStLbsWeight)
									) || 'invalid_weight_message_short';
						}
						const r =
								n === c.A.WeightUnitKeys.METRIC
									? d.A.minKgWeight
									: d.A.minWeight,
							o =
								n === c.A.WeightUnitKeys.METRIC
									? d.A.maxKgWeight
									: d.A.maxWeight;
						return s && 'string' === typeof s
							? s
							: !(isNaN(s) || s > o || s < r) || 'invalid_weight_message_short';
					},
					D = (e, t) => {
						const i = e;
						let n,
							a = i.search(/^[0-9]+(,[0-9]{3})*(\.[0-9]+)?$/),
							s = i.search(/^[0-9]+(\.[0-9]{3})*(,[0-9]+)?$/),
							r = t.numberFormat;
						try {
							n = _.parse(i);
						} catch (o) {
							return 'invalid_weight_message_short';
						}
						return 'decimal_comma' === r && -1 === s && -1 !== a
							? 'invalid_format_use_comma'
							: 'decimal_period' === r && -1 === a && -1 !== s
								? 'invalid_format_use_period'
								: !isNaN(n) && n;
					},
					N = (e, t, i, n) => {
						const a = e ? e.getValue() : null,
							s = i ? i.getValue() : null,
							r = c.A.personalizeWeight(t, c.A.NumberFormats.PRECISION1, n);
						let o = a || null;
						if (a && s) {
							o = (_.parse(a) + _.parse(s)) * c.A.ConversionFactors.StToLbs;
						}
						return !o || o === r;
					},
					R = (e, t, i) => {
						let n = f(e, a.A.toJSON());
						if (!0 !== n) {
							let e = t;
							return (
								i.tooltipError && i.tooltipError.remove(),
								(i.tooltipError = new u.A({
									message: function () {
										return p.A.localize(n);
									},
									element: e,
									container: i.toolTipContainer,
								})),
								i.tooltipError.report(e, n),
								!1
							);
						}
						return i.tooltipError && i.tooltipError.remove(), !0;
					},
					b = (e, t) => {
						const i = e;
						let n,
							a = i.search(/^[0-9]+(,[0-9]{3})*(\.[0-9]+)?$/),
							s = i.search(/^[0-9]+(\.[0-9]{3})*(,[0-9]+)?$/),
							r = t.numberFormat;
						try {
							n = _.parse(i);
						} catch (o) {
							return !1;
						}
						return (
							('decimal_comma' !== r || -1 !== s || -1 === a) &&
							('decimal_period' !== r || -1 !== a || -1 === s) &&
							!isNaN(n) &&
							n
						);
					},
					L = (e) => {
						const t = b(e, a.A.toJSON());
						return t && 'string' === typeof t
							? t
							: !(t > d.A.maxBodyFat || t < d.A.minBodyFat);
					},
					P = (e, t) => {
						const i = b(e, a.A.toJSON());
						if (i && 'string' === typeof i) return i;
						switch (t) {
							case p.A.localize('weight_unit_metric'):
								if (i > d.A.maxMuscleMassKg || i < d.A.minMuscleMassKg)
									return !1;
								break;
							case p.A.localize('weight_unit_statute'):
								if (i > d.A.maxMuscleMassLbs || i < d.A.minMuscleMassLbs)
									return !1;
						}
						return !0;
					},
					O = (e) => {
						let t = new (r())(e, o.Ay.LINK_FORMAT);
						return {
							endDate: t.format(o.Ay.LINK_FORMAT),
							startDate: t.subtract(6, 'days').format(o.Ay.LINK_FORMAT),
						};
					},
					w = (e) => {
						let t = new (r())(e, o.Ay.LINK_FORMAT);
						return {
							endDate: t.format(o.Ay.LINK_FORMAT),
							startDate: t.subtract(27, 'days').format(o.Ay.LINK_FORMAT),
						};
					},
					F = (e) => {
						let t = new (r())(e, o.Ay.LINK_FORMAT).endOf('month');
						return {
							endDate: (t.isAfter(new (r())()) ? new (r())() : t).format(
								o.Ay.LINK_FORMAT
							),
							startDate: new (r())(e, o.Ay.LINK_FORMAT)
								.startOf('month')
								.format(o.Ay.LINK_FORMAT),
						};
					},
					k = (e) => {
						let t = new (r())(e, o.Ay.LINK_FORMAT);
						return {
							endDate: t.format(o.Ay.LINK_FORMAT),
							startDate: t
								.subtract(52, 'weeks')
								.add(1, 'd')
								.format(o.Ay.LINK_FORMAT),
						};
					},
					U = (e) =>
						e.timestampGMT ||
						r()(e.calendarDate, o.Ay.LINK_FORMAT).startOf('d').valueOf(),
					M = (e) => {
						switch (e) {
							case E.SEVEN_DAYS:
								return T.SEVEN_DAYS;
							case E.FOUR_WEEKS:
								return T.FOUR_WEEKS;
							case E.ONE_MONTH:
								return T.ONE_MONTH;
						}
					},
					G = (e, t) => {
						let i = null;
						if (e === E.ONE_DAY || null === e)
							i = { type: n.ak, date: t, cacheTime: !0 };
						else if (
							e === E.SEVEN_DAYS ||
							e === E.FOUR_WEEKS ||
							e === E.ONE_MONTH
						) {
							let a =
								e === E.FOUR_WEEKS ? w(t) : e === E.SEVEN_DAYS ? O(t) : F(t);
							i = { type: n.G0, dates: a, dateRange: M(e), cacheTime: !0 };
						} else if (e === E.FIFTY_TWO_WEEKS) {
							let e = ((e) => {
								let t = new (r())(e, o.Ay.LINK_FORMAT);
								return {
									endDate: t.endOf('months').format(o.Ay.LINK_FORMAT),
									startDate: t
										.subtract(11, 'months')
										.startOf('months')
										.format(o.Ay.LINK_FORMAT),
								};
							})(t);
							i = { type: n.TI, dates: e, cacheTime: !0 };
						}
						return i;
					},
					x = (e, t, i, n) => {
						if (t < 993) return '';
						let a = '';
						return (
							e.forEach((e) => {
								switch (e) {
									case C.weight:
									case C.muscleMass:
									case C.boneMass:
										a += i
											? p.A.localize('weight_unit_statute_uk_title')
											: B(n, void 0) +
												' (' +
												y.Ay.t('units:' + c.A.getWeightUnitKey(n)) +
												')';
										break;
									case C.bodyFat:
									case C.bodyWater:
										a += y.Ay.t('units:percent');
										break;
									case C.bmi:
										a += y.Ay.t('weightwidget:bmi');
								}
								a += ' ';
							}),
							a
						);
					},
					B = (e) => y.Ay.t('weightwidget:' + H(e)),
					H = (e) =>
						'weight_unit_metric' === c.A.getWeightUnitKey(e)
							? 'kilograms'
							: 'weight_unit_statute' === c.A.getWeightUnitKey(e)
								? 'pounds'
								: 'stones',
					V = (e, t, i, n) => {
						if (e) {
							let a = W(e[t], t, i, n);
							if (!a) return null;
							let s = {
								x: U(e),
								y: a || c.A.personalizeWeight(e[t], !1, n),
								timestampGMT: e.timestampGMT,
								weightObject: e,
							};
							return '--' !== s.y && (s.y = Number(s.y)), s;
						}
					},
					W = (e, t, i, n, a) => {
						if (!e) return null;
						switch (t) {
							case C.weight:
							case C.muscleMass:
							case C.boneMass:
								return i
									? c.A.convertWeightToGivenUnit(
											e,
											c.A.WeightUnitKeys.STATUTE_UK
										)
									: a
										? c.A.personalizeWeight(e, a, n)
										: c.A.convertWeight(e, n);
							case C.bodyFat:
							case C.bodyWater:
								return parseFloat(
									c.A.personalizeWeightWithoutConvert(
										e,
										h.A.PRECISION1
									).replace(/,/g, '.')
								);
							case C.bmi:
							case C.visceralFat:
								return parseFloat(
									c.A.personalizeWeightWithoutConvert(
										e,
										h.A.PRECISION2
									).replace(/,/g, '.')
								);
							case C.caloricIntake:
								return parseFloat(
									c.A.personalizeWeightWithoutConvert(
										e,
										h.A.NO_DECIMAL
									).replace(/,/g, '.')
								);
							case C.physiqueRating:
								return e;
							case C.metabolicAge:
								return Math.floor(e / 31536e6);
						}
					},
					J = (e, t) => {
						switch (e) {
							case C.weight:
							case C.muscleMass:
							case C.boneMass:
								return y.Ay.t(`units:${c.A.getWeightUnitKey(t)}`);
							case C.bodyFat:
							case C.bodyWater:
								return '%';
							case C.bmi:
								return y.Ay.t('weightwidget:bmi');
							case C.metabolicAge:
								return y.Ay.t('weightwidget:age_label');
							case C.caloricIntake:
								return y.Ay.t('units:calories_unit');
							default:
								return '';
						}
					},
					Y = (e, t, i) => (e ? J(t, i) : null),
					$ = (e) =>
						e && e.weightScaleDeviceCount && e.weightScaleDeviceCount > 0,
					j = (e) =>
						z(e)
							? y.Ay.t('weightwidget:weigh_in')
							: y.Ay.t(
									'weightwidget:' +
										e
											.split(/(?=[A-Z])/)
											.join('_')
											.toLowerCase()
								),
					K = (e, t) => Math.round((t - e) / 4),
					z = (e) => e === C.weight,
					q = (e, t) => {
						let i = t && t.userData && t.userData.height;
						if (i) {
							const t = i / 100;
							return (e * g.A.GramsToKg) / (t * t);
						}
						return null;
					},
					Q = (e, t, i) =>
						t
							? c.A.convertWeightToGivenUnit(e, i)
							: Z(c.A.personalizeWeight(e, !1, i)),
					X = (e, t) =>
						t
							? e.value !== e.minWeight || e.value !== e.maxWeight
							: Number(e.value || e.averageWeight.weight) !== Z(e.minWeight) ||
								Number(e.value || e.averageWeight.weight) !== Z(e.maxWeight),
					Z = (e) => Number(e.toString().replace(/,/g, '.')),
					ee = (e, t, i, n) => {
						let a = n.plotLeft,
							s = n.plotTop,
							r = n.plotWidth,
							o = i.plotX + 15;
						return (
							o + e > a + r && (o -= o + e + 2 - (a + r)),
							{ x: o, y: s - t - 10 }
						);
					},
					te = (e) => {
						let t = {};
						for (let i in C)
							t[i] = !!e.find((e) =>
								e.latestWeight
									? e.latestWeight[i]
									: e.averageWeight
										? e.averageWeight[i]
										: e[i]
											? e[i]
											: void 0
							);
						return t;
					},
					ie = (e) => {
						let t = e.latestWeight || e.averageWeight || e || {};
						return t &&
							e.allWeightMetrics &&
							(null === t[C.caloricIntake] ||
								null === t[C.metabolicAge] ||
								null === t[C.visceralFat] ||
								null === t[C.physiqueRating])
							? ((t = e.allWeightMetrics),
								t.find((e) => e[C.caloricIntake]) ||
									t.find((e) => e[C.metabolicAge]) ||
									t.find((e) => e[C.visceralFat]) ||
									t.find((e) => e[C.physiqueRating]))
							: t[C.caloricIntake] ||
									t[C.metabolicAge] ||
									t[C.visceralFat] ||
									t[C.physiqueRating];
					},
					ne = (e, t, i) => {
						if (0 !== e && !e) return '--';
						let n = c.A.personalizeWeight(e, h.A.PRECISION1, t);
						return (
							i && (n = c.A.personalizeWeight(Math.abs(e), h.A.PRECISION1, t)),
							n + ' ' + y.Ay.t(`units:${c.A.getWeightUnitKey(t)}`)
						);
					},
					ae = (e) => e.latestWeight || e.averageWeight || e || {},
					se = (e, t, i) => {
						let n,
							a,
							s,
							r,
							l = [];
						return (
							l.push(o.Ay.formatTime(new Date(U(e)))),
							i
								? ((n = ue(c.A.convertGramsToStLbs(e.weight), t)),
									(a = ue(c.A.convertGramsToStLbs(e.weightDelta), t, !0)),
									(s = ue(c.A.convertGramsToStLbs(e.muscleMass), t)),
									(r = ue(c.A.convertGramsToStLbs(e.boneMass), t)))
								: ((n = re(ne(e.weight, t))),
									(a = re(ne(e.weightDelta, t, !0))),
									(s = e.muscleMass ? re(ne(e.muscleMass, t)) : '--'),
									(r = e.boneMass ? re(ne(e.boneMass, t)) : '--')),
							l.push(n),
							l.push(a),
							l.push(e.bmi ? re(Math.round(10 * e.bmi) / 10) : '--'),
							l.push(
								e.bodyFat ? re(Math.round(10 * e.bodyFat) / 10 + ' %') : '--'
							),
							l.push(s),
							l.push(r),
							l.push(
								e.bodyWater
									? re(
											c.A.personalizeWeightWithoutConvert(
												e.bodyWater,
												h.A.PRECISION1
											) + ' %'
										)
									: '--'
							),
							ie(e) &&
								(l.push(oe(e, C.physiqueRating)),
								l.push(oe(e, C.metabolicAge)),
								l.push(oe(e, C.visceralFat)),
								l.push(oe(e, C.caloricIntake))),
							l
						);
					};
				function re(e) {
					return ('' + e).replace(/,/g, '.');
				}
				function oe(e, t) {
					let i = W(e[t], t);
					return i ? re(i + ' ' + J(t)) : '--';
				}
				const le = (e, t) => {
						const i = [];
						return (
							i.push(y.Ay.t('units:label_time')),
							e
								? (i.push(y.Ay.t('weightwidget:avg_weigth')),
									i.push(y.Ay.t('email-summary-reports:email_change')),
									i.push(y.Ay.t('weightwidget:avg_bmi')),
									i.push(y.Ay.t('weightwidget:avg_body_fat')),
									i.push(y.Ay.t('weightwidget:avg_muscle_mass')),
									i.push(y.Ay.t('weightwidget:avg_bone_mass')),
									i.push(y.Ay.t('weightwidget:avg_body_water')),
									t &&
										(i.push(y.Ay.t('weightwidget:avg_physique_rating')),
										i.push(y.Ay.t('weightwidget:avg_visceral_fat')),
										i.push(y.Ay.t('weightwidget:avg_metabolic_age')),
										i.push(y.Ay.t('weightwidget:avg_caloric_intake'))))
								: (i.push(y.Ay.t('units:label_weight')),
									i.push(y.Ay.t('email-summary-reports:email_change')),
									i.push(y.Ay.t('weightwidget:bmi')),
									i.push(y.Ay.t('weightwidget:body_fat')),
									i.push(y.Ay.t('weightwidget:muscle_mass')),
									i.push(y.Ay.t('weightwidget:bone_mass')),
									i.push(y.Ay.t('weightwidget:body_water')),
									t &&
										(i.push(y.Ay.t('weightwidget:physique_rating')),
										i.push(y.Ay.t('weightwidget:visceral_fat')),
										i.push(y.Ay.t('weightwidget:metabolic_age')),
										i.push(y.Ay.t('weightwidget:caloric_intake')))),
							i
						);
					},
					ce = (e) => !!e.find((e) => ie(e)),
					de = (e, t, i, n) => {
						const a = ce(e),
							s = [le(n, a)];
						return (
							e.forEach((e) => {
								if (e.allWeightMetrics) {
									const n =
										`".${o.Ay.formatMonthDayYear(new (r())(e.summaryDate, o.Ay.LINK_FORMAT).toDate())}"`.replace(
											'.',
											' '
										);
									s.push([n]),
										e.allWeightMetrics.forEach((e) => {
											s.push(se(e, t, i));
										});
								} else {
									let n = e.latestWeight || e.averageWeight || e || {};
									s.push(se(n, t, i));
								}
							}),
							((e) => {
								let t = '\ufeff';
								return (
									e.forEach((e) => {
										e.forEach((e) => {
											t += e + ',';
										}),
											(t += '\n');
									}),
									t
								);
							})(s)
						);
					},
					ue = (e, t, i) =>
						(0 !== e && !e) || (0 === e.stone && 0 === e.pounds && !i)
							? '--'
							: (i &&
									((e.stone = Math.abs(e.stone)),
									(e.pounds = Math.abs(e.pounds))),
								e.stone +
									' ' +
									p.A.localize(t) +
									' ' +
									e.pounds +
									' ' +
									y.Ay.t(`units:${c.A.getWeightUnitKey()}`)),
					pe = (e) => C.weight === e || C.muscleMass === e || C.boneMass === e,
					ye = (e, t, i) => {
						const n = ((e, t, i) =>
								e
									? t
										? ue(c.A.convertGramsToStLbs(e), i)
										: c.A.personalizeWeight(e, h.A.PRECISION1, i)
									: null)(e, t, i),
							a = t ? '' : c.A.getWeightUnitKey(i);
						return n
							? t
								? `${y.Ay.t('weightwidget:goal')} (${n})`
								: `${y.Ay.t('weightwidget:goal')} (${n} ${y.Ay.t(`units:${a}`)})`
							: null;
					},
					he = (e, t) => e.indexOf(t) > -1,
					ge = (e, t, i, n, a, s, r) => {
						let o, l, c, d;
						return (
							e.forEach((e) =>
								t.forEach((t) => {
									let s = ae(e)[t];
									const r = W(s, t, n, a);
									o || (o = r),
										i ? r && r < o && (o = r) : r && r > o && (o = r);
								})
							),
							s && he(t, C.weight) && (c = W(s.goalValue, C.weight, n, a)),
							r && he(t, C.weight) && (d = W(r, C.weight, n, a)),
							!d || (c < d && i) || (!i && c > d)
								? (l = c)
								: (!c || (i && c > d) || (!i && c < d)) && (l = d),
							l && (o || (o = l), i ? l < o && (o = l) : l > o && (o = l)),
							o
						);
					};
			},
			44222: (e, t, i) => {
				'use strict';
				i.d(t, {
					L8: () => o,
					MZ: () => c,
					Rm: () => r,
					VL: () => s,
					jz: () => u,
					lg: () => a,
					qy: () => d,
					wV: () => n,
					yT: () => l,
				});
				const n = {
						Create: 'create',
						Edit: 'edit',
						Readonly: 'readonly',
						Saved: 'saved',
					},
					a = {
						Edit: 'edit',
						SendToDevice: 'sendToDevice',
						Cancel: 'cancel',
						Done: 'done',
						Save: 'save',
					},
					s = {
						NoAlert: 'NO_ALERT',
						CopyError: 'COPY_ERROR',
						CopySuccess: 'COPY_SUCCESS',
						Saved: 'SAVED',
						SaveError: 'SAVE_ERROR',
						NameUpdated: 'NAME_UPDATED',
						EmptyRepeat: 'EMPTY_REPEAT',
						ExceedMaxSteps: 'EXCEED_MAX_STEPS',
						NearMaxSteps: 'NEAR_MAX_STEPS',
						RepeatTooDeep: 'REPEAT_TOO_DEEP',
						Scheduled: 'SCHEDULED',
						ScheduleError: 'SCHEDULE_ERROR',
						RepeatTooDeep: 'REPEAT_TOO_DEEP',
					},
					r = { Executable: 'ExecutableStepDTO', Repeat: 'RepeatGroupDTO' },
					o = {
						Time: 'TIME_ESTIMATED',
						Distance: 'DISTANCE_ESTIMATED',
						TimeAndDistance: 'TIME_AND_DISTANCE_ESTIMATED',
					},
					l = {
						Running: 'running',
						Cycling: 'cycling',
						Other: 'other',
						Swimming: 'swimming',
						Strength_Training: 'strength_training',
						Cardio: 'cardio_training',
						Yoga: 'yoga',
						Pilates: 'pilates',
						Hiit: 'hiit',
					},
					c = {
						TABATA: 'TABATA',
						EMOM: 'EMOM',
						AMRAP: 'AMRAP',
						GENERIC: 'GENERIC',
					},
					d = { CANCEL: 'CANCEL', CONFIRM: 'CONFIRM' },
					u = 'choose_an_exercise';
			},
			316550: (e, t, i) => {
				'use strict';
				i.d(t, {
					$3c: () => cl,
					$6I: () => Ca,
					$8n: () => gE,
					$9: () => tu,
					$B4: () => w,
					$CA: () => Lb,
					$FJ: () => X,
					$Fw: () => ds,
					$G$: () => LO,
					$GL: () => HT,
					$IY: () => W_,
					$J4: () => dN,
					$N7: () => JF,
					$Pn: () => CT,
					$QG: () => Wu,
					$QK: () => se,
					$Uc: () => Ig,
					$Vz: () => ZS,
					$bN: () => fs,
					$ch: () => lc,
					$fs: () => AS,
					$kO: () => J_,
					$lp: () => HC,
					$mY: () => DM,
					$mk: () => Xe,
					$nJ: () => Ka,
					$nT: () => lr,
					$qU: () => Uu,
					$rI: () => Ns,
					$rY: () => iD,
					$ts: () => mt,
					$us: () => $y,
					$vs: () => Nc,
					$z2: () => DA,
					A1r: () => Jm,
					A79: () => lL,
					A9: () => Jo,
					A9V: () => WP,
					ABb: () => no,
					ACT: () => In,
					AGY: () => pv,
					AI7: () => x,
					AIH: () => Dw,
					AL: () => fm,
					AL1: () => du,
					ALi: () => jy,
					ANZ: () => fN,
					ANw: () => dE,
					AOU: () => uP,
					AR1: () => sT,
					ARp: () => md,
					AU_: () => xU,
					AVH: () => xg,
					AXw: () => jp,
					AY8: () => WU,
					AYP: () => BN,
					AaN: () => Id,
					AbA: () => iN,
					Abj: () => _I,
					Abp: () => jg,
					AcC: () => Pi,
					AeV: () => zt,
					Afm: () => Wo,
					Ag$: () => Ir,
					AgV: () => qt,
					Ai6: () => kL,
					AkP: () => ae,
					AnI: () => yf,
					Ar6: () => ND,
					ArK: () => GR,
					AtF: () => Uw,
					Axc: () => ns,
					Az4: () => qU,
					AzX: () => YU,
					B00: () => zT,
					B9N: () => br,
					BA4: () => VF,
					BBw: () => qR,
					BC: () => Ob,
					BC2: () => zd,
					BCg: () => cO,
					BID: () => tP,
					BJc: () => rr,
					BJj: () => zD,
					BKO: () => yP,
					BKr: () => uO,
					BLH: () => hi,
					BLT: () => dt,
					BLe: () => Ci,
					BNs: () => CP,
					BTK: () => gM,
					BTm: () => Be,
					BU9: () => ln,
					BUZ: () => rb,
					BVL: () => lp,
					BfN: () => Zy,
					Bh5: () => Fk,
					BhG: () => Yp,
					Bjb: () => Jy,
					Bkw: () => WT,
					Bl6: () => ID,
					BnX: () => sO,
					Bpi: () => Kn,
					Br5: () => NF,
					Bt5: () => rE,
					Bto: () => oF,
					BuB: () => GL,
					BvN: () => RL,
					ByZ: () => AF,
					Bz9: () => Ie,
					BzT: () => Gc,
					Bzi: () => Ym,
					C1p: () => yr,
					C27: () => tO,
					C2V: () => Kl,
					C4w: () => Th,
					C92: () => BA,
					CF$: () => sv,
					CFX: () => fT,
					CJj: () => qc,
					CLN: () => Mf,
					CLe: () => Ds,
					CLr: () => Cw,
					CPF: () => xL,
					CT3: () => lh,
					CUS: () => SI,
					CWI: () => fn,
					Cb8: () => wa,
					CeJ: () => xD,
					CfB: () => bp,
					Cgc: () => Wl,
					CjE: () => gA,
					CkZ: () => sy,
					Ckh: () => Ny,
					Cnj: () => r_,
					Cod: () => eU,
					Cp8: () => DF,
					Cpz: () => fk,
					Csb: () => ls,
					Cso: () => Xr,
					CzN: () => ye,
					D0T: () => _,
					D1C: () => TE,
					D1G: () => on,
					D1L: () => kn,
					D3v: () => gP,
					D4e: () => Of,
					D5I: () => tN,
					D8k: () => UO,
					D9N: () => zp,
					D9o: () => sr,
					DAU: () => cF,
					DBO: () => vC,
					DCy: () => Kd,
					DD8: () => sA,
					DF3: () => AD,
					DIR: () => Jv,
					DKG: () => po,
					DKw: () => cb,
					DMH: () => ll,
					DQH: () => z_,
					DQW: () => Pp,
					DRT: () => n_,
					DRW: () => pF,
					DV8: () => Eo,
					DVA: () => _l,
					DX5: () => FN,
					DYz: () => hC,
					D_$: () => sb,
					DbE: () => DP,
					Dbj: () => yk,
					Dbt: () => xN,
					Det: () => Uh,
					Dfe: () => Zl,
					DhK: () => co,
					DiT: () => Ep,
					DjC: () => im,
					DjL: () => Ku,
					Dkz: () => Yn,
					Dmj: () => ek,
					DoA: () => IR,
					DsC: () => AO,
					DtS: () => oU,
					Dtf: () => h_,
					Du5: () => s,
					DuF: () => er,
					Dvb: () => WS,
					DwB: () => Tf,
					Dwq: () => xC,
					DyE: () => uu,
					E3d: () => kk,
					E7Z: () => VR,
					E8C: () => cN,
					ECM: () => ys,
					EE0: () => kT,
					EG: () => pa,
					EGn: () => QT,
					EI$: () => Nn,
					EOf: () => rm,
					ERt: () => T,
					ESR: () => _s,
					ETp: () => Lg,
					ETz: () => kC,
					EV4: () => rU,
					EVx: () => ro,
					EW9: () => fu,
					EWk: () => iw,
					E_A: () => ov,
					Ea6: () => Su,
					EbZ: () => nL,
					EcZ: () => J,
					Ecg: () => xa,
					EeR: () => za,
					EhE: () => OU,
					EiT: () => a,
					Eig: () => M_,
					Em2: () => PE,
					Emh: () => dU,
					Eq3: () => Gy,
					EqB: () => oT,
					Eqk: () => VC,
					Erh: () => At,
					Euz: () => Z,
					EwQ: () => zC,
					F1P: () => $f,
					F1d: () => de,
					F1u: () => gy,
					F2f: () => LE,
					F3w: () => RM,
					F6R: () => oP,
					F8p: () => Jr,
					FB: () => yv,
					FB5: () => cm,
					FBA: () => JU,
					FEB: () => OO,
					FKM: () => YE,
					FLj: () => VP,
					FM3: () => Tv,
					FNQ: () => tT,
					FNW: () => us,
					FNg: () => AR,
					FP_: () => wO,
					FQ0: () => CN,
					FQZ: () => qS,
					FT8: () => vt,
					FUg: () => Na,
					FV0: () => kc,
					FVI: () => Us,
					FVp: () => BO,
					FWo: () => G,
					FXT: () => Xd,
					FXf: () => Cc,
					FXg: () => Ky,
					FY1: () => Kr,
					FYX: () => KN,
					F_I: () => H_,
					FcZ: () => f,
					FeS: () => K_,
					Fhd: () => Qs,
					Fhv: () => aL,
					Fic: () => va,
					Fih: () => Hl,
					Fkv: () => ou,
					Fl7: () => Bi,
					Fm1: () => GE,
					FpF: () => qw,
					Fqw: () => pf,
					Fr_: () => Nm,
					Frk: () => EC,
					Ft_: () => Oe,
					FvB: () => qe,
					FvP: () => LP,
					FvW: () => nE,
					Fvt: () => zh,
					Fw9: () => f_,
					Fzl: () => Js,
					G2X: () => Ai,
					G2h: () => uI,
					G3l: () => XO,
					G7X: () => mp,
					GD: () => M,
					GDX: () => lM,
					GG$: () => xl,
					GG2: () => gf,
					GLC: () => R_,
					GLJ: () => zs,
					GMr: () => Py,
					GOn: () => qr,
					GSt: () => TI,
					GVD: () => VA,
					GXg: () => xs,
					GcM: () => jd,
					Ge4: () => jl,
					Gf2: () => Qc,
					Gg7: () => eT,
					GgE: () => Yg,
					Gjn: () => sD,
					Glc: () => RO,
					GmR: () => Yf,
					Gmq: () => ZF,
					Goe: () => QE,
					Guc: () => c,
					Gv3: () => Le,
					Gx$: () => Jd,
					Gxb: () => Sv,
					GzH: () => Gm,
					H$_: () => jR,
					H$q: () => Pa,
					H0O: () => cw,
					H0w: () => $,
					H2Z: () => wg,
					H2o: () => Zh,
					H50: () => su,
					H8s: () => qs,
					H8w: () => Xs,
					HCb: () => Nr,
					HFH: () => ch,
					HGh: () => uM,
					HHK: () => jb,
					HHh: () => ik,
					HI5: () => PU,
					HNN: () => Mu,
					HNW: () => Ac,
					HNn: () => ey,
					HOh: () => Qn,
					HP9: () => Vt,
					HPu: () => oO,
					HTe: () => Xh,
					HV1: () => Tm,
					HVJ: () => oa,
					HXR: () => qa,
					HXW: () => Ju,
					HZT: () => wo,
					H_H: () => Ys,
					H_v: () => _f,
					HgN: () => lN,
					Hgi: () => Pu,
					HhY: () => cu,
					Hi4: () => Cr,
					HiC: () => Jp,
					Hj: () => p_,
					Hsv: () => By,
					HuV: () => EN,
					HuX: () => jF,
					HvM: () => IN,
					Hwy: () => Et,
					Hx4: () => oe,
					HxA: () => s_,
					Hxb: () => qO,
					Hxz: () => D,
					HyF: () => FU,
					I$b: () => sg,
					I$f: () => GP,
					I$h: () => kE,
					I19: () => Ba,
					I6M: () => wE,
					I6l: () => cv,
					I8F: () => mi,
					I8z: () => Jl,
					IC$: () => yT,
					IDU: () => My,
					IEj: () => cs,
					IEr: () => fM,
					IGR: () => zo,
					IHW: () => vr,
					IHw: () => pi,
					IIK: () => BT,
					IIj: () => Cb,
					IJ$: () => _M,
					IK7: () => JA,
					IK_: () => XA,
					IO1: () => GN,
					IRv: () => sI,
					ISL: () => yc,
					IVz: () => by,
					IY0: () => hp,
					IZT: () => hN,
					I_F: () => cI,
					I_T: () => Ri,
					Ice: () => mP,
					Ier: () => Cv,
					If5: () => ha,
					IgD: () => Vn,
					IgG: () => Or,
					Ii6: () => CR,
					IiA: () => jI,
					Ik3: () => HL,
					Iln: () => Nu,
					Inc: () => Am,
					Io3: () => L,
					IpZ: () => ff,
					IrP: () => bL,
					IuD: () => wm,
					IuF: () => Fs,
					Iuq: () => OL,
					IwY: () => PP,
					Iwi: () => ab,
					IyG: () => Tc,
					Iz1: () => Io,
					J$$: () => AN,
					J3N: () => GC,
					J5U: () => IO,
					J9e: () => Qu,
					JAq: () => nN,
					JD0: () => Ps,
					JD2: () => Gg,
					JDs: () => dT,
					JE: () => YD,
					JEj: () => jT,
					JIv: () => Cp,
					JJV: () => ia,
					JJr: () => Vo,
					JOV: () => Hg,
					JPE: () => ad,
					JPR: () => VI,
					JQO: () => Zv,
					JQc: () => Ph,
					JQj: () => Wa,
					JTP: () => Ke,
					JVA: () => nn,
					J_v: () => Wf,
					Jbg: () => fO,
					Jbr: () => bP,
					JcD: () => qd,
					Jcb: () => ET,
					Jce: () => aP,
					JeB: () => dp,
					Jel: () => Dv,
					Jh6: () => mO,
					Jh_: () => Km,
					Jkn: () => c_,
					Jlk: () => y,
					Jmn: () => $o,
					JnV: () => Vr,
					JoU: () => Hh,
					JqS: () => gU,
					JrO: () => Gu,
					JsE: () => nA,
					JtR: () => eO,
					JvC: () => Md,
					JvZ: () => Zb,
					Jvz: () => Mt,
					Jx$: () => RT,
					Jxe: () => E_,
					K$7: () => $i,
					K1i: () => _d,
					K2W: () => JI,
					K2i: () => Dy,
					K6S: () => Hm,
					K8A: () => sd,
					K8x: () => Ea,
					K8y: () => xt,
					K9b: () => jk,
					KBe: () => wr,
					KC$: () => vM,
					KCs: () => hd,
					KD8: () => wU,
					KFJ: () => Wh,
					KH1: () => rA,
					KK: () => NO,
					KMI: () => Lh,
					KMo: () => DU,
					KN8: () => up,
					KO4: () => Qi,
					KOQ: () => Lm,
					KPb: () => Rb,
					KRD: () => zu,
					KTH: () => PT,
					KXX: () => rP,
					KYd: () => JE,
					KZ$: () => Hb,
					K_Z: () => ee,
					Kb5: () => dS,
					Kel: () => Ii,
					Kgm: () => mo,
					Ki8: () => Qy,
					KiN: () => UD,
					Kj3: () => Sg,
					Kp_: () => pl,
					Kr: () => JL,
					KsP: () => wp,
					KuJ: () => $n,
					Kwd: () => rN,
					KxQ: () => TC,
					KyZ: () => ta,
					Kyh: () => Gi,
					L03: () => QF,
					L0G: () => iO,
					L0r: () => WI,
					L9q: () => On,
					LA5: () => AM,
					LDT: () => b_,
					LDX: () => ct,
					LGT: () => SU,
					LIf: () => GD,
					LJg: () => sU,
					LK3: () => Dt,
					LKb: () => dy,
					LMM: () => GF,
					LNJ: () => Ao,
					LP6: () => Ei,
					LRj: () => lt,
					LVN: () => MA,
					LVS: () => pp,
					LVb: () => Gr,
					LW7: () => uE,
					LWL: () => Tw,
					LZf: () => Dc,
					LZp: () => ZC,
					LbT: () => H,
					LdV: () => mf,
					Le9: () => Bm,
					Ll5: () => Ut,
					LnP: () => Ff,
					LoB: () => Xf,
					LpY: () => rw,
					Lsd: () => ed,
					LuW: () => LL,
					LvO: () => Ae,
					Lvd: () => tf,
					Lvr: () => U_,
					Ly1: () => lT,
					Lzh: () => Qh,
					M1f: () => kf,
					M63: () => fr,
					M7I: () => SL,
					M8R: () => Qa,
					M8r: () => B,
					MBc: () => Va,
					MC3: () => IT,
					MFJ: () => fL,
					MFy: () => aN,
					MGt: () => We,
					MIJ: () => mU,
					MIS: () => Yo,
					MKI: () => WR,
					MN5: () => rk,
					MNn: () => qT,
					MNr: () => rM,
					MQ4: () => ic,
					MRF: () => qP,
					MTJ: () => ry,
					Mc: () => mb,
					McN: () => Pd,
					Mcb: () => mS,
					MhH: () => Pc,
					Mir: () => em,
					MlU: () => oC,
					MoJ: () => vi,
					MpV: () => vD,
					MrY: () => nI,
					MvU: () => Cy,
					Mvk: () => FS,
					Mwu: () => ut,
					MxI: () => Oh,
					N$y: () => xc,
					N1D: () => Qk,
					N1N: () => zn,
					N5Q: () => iL,
					N5l: () => Yh,
					NDt: () => Wm,
					NH8: () => pt,
					NHy: () => gD,
					NJl: () => Q,
					NKt: () => JT,
					NLO: () => xR,
					NMB: () => sR,
					NMx: () => aC,
					NO0: () => $U,
					NOF: () => ly,
					NSB: () => F,
					NVV: () => Tl,
					NWp: () => sF,
					NXi: () => CD,
					NYb: () => Np,
					NZI: () => nC,
					NaE: () => Vk,
					NdP: () => Gw,
					Ngh: () => QS,
					NjK: () => qg,
					Njq: () => De,
					NkD: () => Zd,
					NmK: () => GI,
					No2: () => WA,
					Nr: () => Eg,
					Nr3: () => an,
					NrZ: () => Ne,
					Nrv: () => NI,
					Ntx: () => x_,
					Nuf: () => lC,
					NxO: () => Ft,
					NyP: () => Fw,
					Nyv: () => yO,
					O$d: () => Lk,
					O$n: () => pP,
					O0X: () => hk,
					O3t: () => jN,
					O6s: () => Zc,
					O7g: () => jw,
					OAh: () => FP,
					OD1: () => NA,
					OFo: () => yR,
					OIx: () => $P,
					OJ0: () => IA,
					OK$: () => Fn,
					ONS: () => KT,
					OPe: () => nD,
					OQj: () => ig,
					OUw: () => _O,
					OVC: () => iS,
					OWM: () => tU,
					OXG: () => JN,
					OYM: () => Bf,
					OYy: () => vR,
					OYz: () => Gd,
					OZA: () => Vd,
					O_6: () => Dh,
					O_r: () => Ek,
					Od3: () => Yw,
					Odt: () => _g,
					Ohr: () => Ht,
					Ohs: () => jA,
					Oht: () => m_,
					Ohz: () => Cs,
					OkU: () => HP,
					Oku: () => zw,
					Omb: () => Aw,
					Ot9: () => cM,
					OuJ: () => Ow,
					OvS: () => rF,
					OzG: () => VN,
					P1U: () => eP,
					P2N: () => $v,
					P3c: () => EE,
					P4y: () => qh,
					P6B: () => vT,
					PAq: () => wT,
					PCN: () => uF,
					PDz: () => Sa,
					PFn: () => XR,
					PHf: () => Vy,
					PI0: () => aS,
					PLH: () => uA,
					PPd: () => GS,
					PRO: () => mk,
					PTi: () => lv,
					PWE: () => zb,
					PWo: () => sc,
					PXI: () => Is,
					PXt: () => ep,
					P_s: () => Dr,
					Pbl: () => uT,
					PdC: () => oo,
					PeN: () => DN,
					Pht: () => ma,
					PkB: () => Wg,
					PmV: () => ft,
					Pq9: () => Gv,
					PtW: () => lg,
					Ptp: () => mc,
					Pvm: () => VU,
					Pyg: () => bI,
					Pys: () => dw,
					PzS: () => UC,
					Q$A: () => qF,
					Q$H: () => Ko,
					Q1o: () => Ru,
					Q3W: () => $C,
					Q4E: () => Wd,
					Q4_: () => Fc,
					Q50: () => Yt,
					Q5r: () => ME,
					Q9P: () => XF,
					QAG: () => di,
					QDy: () => Kf,
					QEz: () => Af,
					QG7: () => RC,
					QH5: () => eb,
					QI5: () => Zr,
					QI7: () => ZR,
					QJU: () => Nv,
					QKo: () => Sf,
					QLz: () => KL,
					QP6: () => Im,
					QPy: () => yn,
					QRd: () => Lp,
					QUe: () => SN,
					QVT: () => tv,
					QVw: () => eN,
					QXQ: () => hw,
					QXg: () => mD,
					QXx: () => yN,
					QYo: () => p,
					Q_t: () => l_,
					QaH: () => zy,
					QdA: () => Si,
					Qdd: () => lk,
					Qdh: () => ok,
					Qfy: () => st,
					QgJ: () => UR,
					Qk: () => cE,
					Qkm: () => $b,
					QmB: () => Ss,
					Qmh: () => he,
					QnG: () => fl,
					Qo: () => Ok,
					QoZ: () => NM,
					Qr3: () => Ue,
					QrN: () => To,
					Qrg: () => XC,
					QtE: () => vS,
					Qu: () => Ya,
					QzT: () => NL,
					R24: () => kd,
					R6E: () => IE,
					RA2: () => L_,
					RC3: () => Dl,
					RIx: () => Ih,
					RJp: () => PN,
					RLf: () => Pk,
					RM7: () => YN,
					RPB: () => Hn,
					RQz: () => RP,
					RS8: () => af,
					RWK: () => ve,
					RX6: () => NU,
					RYt: () => Fv,
					R_Y: () => DR,
					RaI: () => Ho,
					RdK: () => vw,
					ReH: () => ag,
					Rfe: () => gT,
					RgZ: () => Jw,
					Rop: () => ol,
					RrC: () => Pg,
					Rs7: () => Qf,
					Run: () => EU,
					RyD: () => rn,
					RyL: () => zv,
					Rzy: () => we,
					S28: () => LT,
					S4_: () => Qw,
					S4v: () => hl,
					S56: () => MT,
					S6m: () => ot,
					SAF: () => Zf,
					SG4: () => eC,
					SHX: () => zN,
					SIi: () => oD,
					SJ4: () => uo,
					SJ6: () => Ly,
					SK8: () => XL,
					SNx: () => V,
					SOJ: () => Os,
					SS$: () => XN,
					SS9: () => bt,
					SST: () => Kc,
					SUC: () => Lu,
					SUq: () => qb,
					SY$: () => th,
					SZj: () => Um,
					S_P: () => wv,
					SaA: () => gC,
					SaL: () => KF,
					Sc0: () => Ia,
					Sc5: () => gk,
					Scr: () => MS,
					SdF: () => yD,
					SeH: () => fy,
					Sft: () => hc,
					SgA: () => BR,
					Si5: () => Bw,
					Sir: () => qp,
					SlF: () => mR,
					Sle: () => $D,
					Snr: () => PA,
					Su6: () => XD,
					Sv9: () => qv,
					SvL: () => MC,
					SxR: () => Ls,
					SyM: () => DO,
					Szd: () => xE,
					Szy: () => HE,
					T$R: () => wN,
					T1Q: () => Sn,
					T1p: () => fC,
					T2z: () => Wn,
					T34: () => gR,
					T39: () => KR,
					T3P: () => _m,
					T4M: () => bS,
					T4V: () => $S,
					T7H: () => QC,
					T8H: () => KI,
					T8n: () => MD,
					T9v: () => o_,
					TAt: () => rD,
					TBF: () => oR,
					TC0: () => $_,
					TF4: () => N,
					TFF: () => Vp,
					TFp: () => UF,
					TH4: () => id,
					THl: () => Tn,
					THx: () => nt,
					TI0: () => kS,
					TIL: () => Ik,
					TJW: () => KE,
					TLU: () => ht,
					TLl: () => Eh,
					TNY: () => nk,
					TOR: () => jL,
					TQl: () => Lv,
					TTW: () => NE,
					TV$: () => YR,
					TX6: () => Rk,
					TYz: () => Pm,
					T_f: () => K,
					Tar: () => fg,
					Tbi: () => BE,
					Teo: () => Oo,
					Tf9: () => _T,
					ThX: () => Dn,
					Tii: () => bC,
					Tl$: () => aD,
					TlM: () => $c,
					TmI: () => A_,
					Tnq: () => KS,
					ToW: () => Ee,
					TpR: () => vU,
					Tpf: () => SC,
					Tpz: () => gs,
					Tqm: () => zf,
					Tto: () => bF,
					TvT: () => La,
					Tvt: () => WN,
					Tzx: () => Fa,
					U0h: () => FR,
					U13: () => Jc,
					U1b: () => Vw,
					U33: () => MO,
					U3t: () => VD,
					U4D: () => al,
					U6E: () => bE,
					U6J: () => LU,
					U82: () => TF,
					U8F: () => yF,
					U9W: () => Ch,
					UE1: () => Mp,
					UI3: () => gO,
					UIC: () => B_,
					UJj: () => sk,
					UKW: () => JS,
					UNA: () => ZU,
					UOc: () => Xc,
					UPU: () => ss,
					UQ4: () => fd,
					US8: () => OC,
					UTk: () => nd,
					UUm: () => Me,
					UX4: () => nf,
					UYL: () => cA,
					UZ9: () => lb,
					UZo: () => u_,
					UZq: () => qf,
					Uab: () => ib,
					UcT: () => cP,
					UeO: () => MU,
					Uft: () => jS,
					Uh2: () => SS,
					Ujl: () => xv,
					Umf: () => $u,
					UnO: () => vE,
					Uoj: () => uc,
					Uol: () => rc,
					Upd: () => gm,
					UsA: () => Hr,
					UsZ: () => wy,
					Usb: () => bA,
					Usl: () => Mr,
					Uuk: () => ud,
					Uv6: () => UP,
					V09: () => Ml,
					V0m: () => AE,
					V0o: () => EI,
					V1e: () => Uc,
					V6I: () => AP,
					V7_: () => u,
					VAD: () => _n,
					VAI: () => RR,
					VB$: () => nl,
					VBI: () => ea,
					VDP: () => QN,
					VFA: () => ZN,
					VF_: () => AI,
					VGp: () => sl,
					VH4: () => Wb,
					VIo: () => xe,
					VJ9: () => W,
					VJU: () => Uo,
					VJx: () => zk,
					VKR: () => te,
					VLF: () => FL,
					VM4: () => xo,
					VQP: () => e_,
					VW1: () => IL,
					VZ: () => kD,
					Vag: () => _h,
					Var: () => RD,
					Vd1: () => lE,
					Vfm: () => rt,
					VgC: () => vh,
					Vh: () => Hd,
					Vit: () => iE,
					Vjl: () => ua,
					VoB: () => eA,
					Vr$: () => UU,
					Vr3: () => Mc,
					Vso: () => bD,
					VuJ: () => tg,
					Vut: () => Ev,
					Vyg: () => qo,
					W1J: () => si,
					W30: () => bf,
					W3k: () => XU,
					W8j: () => Qb,
					W8n: () => xm,
					WBI: () => Fr,
					WC9: () => ge,
					WEB: () => Og,
					WI1: () => Gt,
					WJC: () => El,
					WLQ: () => fo,
					WLw: () => AC,
					WOH: () => TL,
					WUz: () => MN,
					WXR: () => ub,
					WXU: () => pO,
					Wby: () => mn,
					WcL: () => Ye,
					WeC: () => nU,
					Weo: () => Gb,
					Wfb: () => Yi,
					WhI: () => tR,
					Wj1: () => Zm,
					WkO: () => Mb,
					WlW: () => sE,
					Wlf: () => et,
					Wm1: () => Fi,
					WmP: () => uk,
					WmQ: () => pT,
					WnG: () => dR,
					Woz: () => kg,
					Wqr: () => TP,
					Wsf: () => ul,
					WvB: () => uC,
					Wyt: () => Ab,
					X8p: () => Ts,
					X90: () => mw,
					XCM: () => Ui,
					XCX: () => Bp,
					XD0: () => Nh,
					XDw: () => Ms,
					XOP: () => mA,
					XOU: () => Av,
					XSI: () => St,
					XUu: () => cU,
					XW9: () => hT,
					XWB: () => gp,
					XXh: () => vl,
					XXo: () => Er,
					XbS: () => le,
					Xej: () => gF,
					Xev: () => yu,
					XfR: () => $r,
					XgF: () => G_,
					XgG: () => it,
					Xkv: () => eD,
					XnB: () => vf,
					Xnf: () => Nd,
					Xo0: () => Ew,
					Xoq: () => Bb,
					Xrj: () => Rl,
					Xui: () => Jn,
					Xw2: () => ug,
					XwX: () => ni,
					XxG: () => Ad,
					XzT: () => OT,
					Y$2: () => aM,
					Y17: () => Xp,
					Y3L: () => ji,
					Y3S: () => Mn,
					Y5X: () => Vh,
					Y8Y: () => Pf,
					Y9f: () => SP,
					YAw: () => ml,
					YDL: () => tk,
					YDX: () => Y_,
					YEL: () => hP,
					YFP: () => Cg,
					YIJ: () => cg,
					YK7: () => GA,
					YM9: () => Hk,
					YMu: () => KD,
					YN3: () => sL,
					YQC: () => YS,
					YR4: () => I_,
					YVf: () => Rn,
					YXX: () => na,
					Ycf: () => RI,
					Ycw: () => wu,
					YdH: () => ui,
					Yed: () => yw,
					YfN: () => Ry,
					Yfh: () => Kt,
					YlI: () => re,
					Ymo: () => Ga,
					YoW: () => vu,
					YqF: () => fp,
					YqN: () => yL,
					YrR: () => PL,
					Yt7: () => OF,
					Ytm: () => ng,
					Yvr: () => CC,
					Yyk: () => dc,
					Z: () => vP,
					Z1_: () => i_,
					Z30: () => Hp,
					Z5J: () => ur,
					Z6Z: () => jh,
					Z76: () => FC,
					Z7Y: () => Z_,
					Z9t: () => NT,
					ZAp: () => Uv,
					ZDz: () => RS,
					ZIC: () => DD,
					ZLD: () => nw,
					ZMG: () => Gh,
					ZN: () => mT,
					ZQw: () => gb,
					ZR7: () => kN,
					ZYz: () => la,
					ZaM: () => XE,
					ZaY: () => HO,
					ZgL: () => pD,
					ZgN: () => $s,
					ZhA: () => dd,
					Znr: () => Te,
					ZoF: () => AU,
					ZoO: () => OE,
					ZpI: () => F_,
					ZqM: () => Vv,
					ZsZ: () => Li,
					Zt0: () => ym,
					Zxz: () => wI,
					Zz5: () => QD,
					_06: () => AL,
					_09: () => TN,
					_1h: () => Zi,
					_4C: () => Xb,
					_5I: () => OI,
					_5U: () => CA,
					_7Y: () => hA,
					_A0: () => jC,
					_AV: () => k,
					_DV: () => tp,
					_DY: () => Ze,
					_FU: () => Yr,
					_Kp: () => qk,
					_Ni: () => Ub,
					_RB: () => Ty,
					_Sr: () => _c,
					_UJ: () => $e,
					_UK: () => ri,
					_Uj: () => ei,
					_Yt: () => pk,
					_ZD: () => zE,
					_dh: () => LF,
					_eC: () => og,
					_hI: () => pd,
					_jn: () => IP,
					_kh: () => Co,
					_ku: () => um,
					_mE: () => So,
					_nY: () => Fo,
					_nf: () => vn,
					_po: () => Wk,
					_tM: () => ko,
					_tV: () => Ro,
					_w7: () => QP,
					_wP: () => Db,
					_wz: () => iF,
					_ye: () => CE,
					a$d: () => V_,
					a28: () => ah,
					a5T: () => xT,
					a8A: () => $g,
					a8y: () => uf,
					a9Z: () => cc,
					aBo: () => Do,
					aHb: () => vN,
					aMx: () => jE,
					aPE: () => lR,
					aZV: () => WO,
					a_z: () => TS,
					aa9: () => TO,
					afS: () => hO,
					ahI: () => DC,
					ahV: () => NR,
					am: () => nh,
					amQ: () => Nt,
					amc: () => Hf,
					an4: () => LS,
					anv: () => Fd,
					apb: () => bR,
					aqZ: () => Sk,
					arQ: () => IF,
					au5: () => qC,
					b2C: () => xu,
					b5F: () => dL,
					b8x: () => OD,
					b9T: () => xP,
					bAb: () => CS,
					bBA: () => Nb,
					bCV: () => YF,
					bFD: () => U,
					bH3: () => Sh,
					bLy: () => Ot,
					bNV: () => lf,
					bNu: () => oE,
					bO2: () => FE,
					bS4: () => T_,
					bSH: () => pN,
					bV0: () => Vb,
					bV2: () => km,
					bV8: () => Ge,
					bVL: () => O,
					bWy: () => rl,
					bY8: () => Xm,
					bZH: () => Pn,
					b_3: () => qE,
					bdI: () => iR,
					beK: () => wL,
					bfs: () => kr,
					bim: () => $A,
					bis: () => dA,
					bl: () => wR,
					bl$: () => RN,
					bn2: () => fI,
					bnb: () => lA,
					brq: () => Up,
					bru: () => fD,
					bsy: () => Di,
					bt5: () => ld,
					buo: () => nv,
					bwc: () => so,
					bxW: () => Ww,
					c0n: () => MI,
					c0x: () => Ol,
					c2A: () => pR,
					c2D: () => Bo,
					c2b: () => zg,
					c3z: () => yS,
					c53: () => v,
					cAO: () => pE,
					cC4: () => wc,
					cDy: () => jm,
					cKe: () => vg,
					cN1: () => QL,
					cQ1: () => am,
					cQB: () => zI,
					cTA: () => bn,
					cTc: () => YC,
					cTn: () => Uy,
					cTw: () => hg,
					cWA: () => _P,
					cXU: () => Gl,
					cZ4: () => zc,
					can: () => LC,
					cbv: () => yI,
					ccf: () => yh,
					cf7: () => sn,
					cjn: () => _i,
					cjp: () => Zn,
					cks: () => UA,
					cnh: () => uy,
					coK: () => hI,
					cu: () => ho,
					cvz: () => n,
					cxb: () => aO,
					d16: () => Qd,
					d1r: () => xr,
					d3g: () => wb,
					d6P: () => CI,
					d7H: () => xp,
					d7M: () => CL,
					d7Y: () => mE,
					d7w: () => DL,
					d9n: () => CF,
					dAD: () => Gn,
					dCO: () => rd,
					dDV: () => Lf,
					dE9: () => N_,
					dEu: () => HN,
					dHr: () => Zs,
					dMC: () => iy,
					dOI: () => Il,
					dP4: () => gd,
					dPV: () => yd,
					dPY: () => Xg,
					dU2: () => UL,
					dWh: () => ke,
					dXp: () => _r,
					dbk: () => Tp,
					dcY: () => ZI,
					ddf: () => Fl,
					deR: () => gu,
					dgr: () => Vm,
					dhA: () => _y,
					dhP: () => bb,
					dq_: () => iv,
					dr7: () => Hw,
					dsR: () => Wy,
					dx0: () => PD,
					dxM: () => hu,
					dxq: () => OA,
					dy6: () => Ou,
					dyk: () => ZE,
					e$N: () => ii,
					e0n: () => of,
					e0q: () => sf,
					e14: () => bk,
					e5G: () => ny,
					e5r: () => od,
					e72: () => q_,
					e8J: () => g,
					eAk: () => Ws,
					eCA: () => ck,
					eD5: () => bO,
					eEA: () => uh,
					eG0: () => gt,
					eH: () => xO,
					eLm: () => nS,
					ePi: () => Wv,
					eQq: () => dh,
					eTM: () => Vg,
					eVc: () => ju,
					eWY: () => aw,
					eX0: () => lw,
					ebH: () => Yv,
					ecG: () => BD,
					eiq: () => eL,
					ej7: () => Kv,
					ejV: () => bv,
					elR: () => WC,
					eoS: () => sp,
					eoq: () => QR,
					eq6: () => xF,
					erE: () => SM,
					etd: () => SO,
					eu: () => zS,
					eu0: () => Mw,
					ewP: () => Iy,
					ezn: () => TD,
					f$O: () => zA,
					f3V: () => Xl,
					f43: () => bT,
					f4Z: () => yM,
					f5x: () => QU,
					f6$: () => Fu,
					f6T: () => Gs,
					f9c: () => Uf,
					fCB: () => av,
					fDb: () => ZD,
					fGZ: () => sM,
					fHE: () => kb,
					fHo: () => xI,
					fIj: () => Se,
					fM2: () => Ks,
					fMB: () => Xt,
					fOQ: () => FD,
					fP9: () => yi,
					fQZ: () => Jg,
					fRn: () => Kg,
					fSY: () => A,
					fSr: () => cr,
					fU2: () => LA,
					fUw: () => is,
					fYC: () => $a,
					f_Y: () => gr,
					f_j: () => Jf,
					faG: () => bo,
					faM: () => iA,
					fdE: () => qu,
					fdT: () => j,
					feX: () => KO,
					ffC: () => BF,
					fgM: () => fS,
					fhx: () => ne,
					fiT: () => Bc,
					fll: () => Al,
					fnA: () => ka,
					fqy: () => fU,
					fre: () => QA,
					fsE: () => Ha,
					fvB: () => Jt,
					fxo: () => io,
					fxz: () => Sd,
					fyJ: () => Fb,
					fyP: () => Vu,
					g0W: () => EM,
					g2Q: () => SF,
					g3v: () => EA,
					g4t: () => HD,
					g7R: () => sw,
					g9h: () => Hv,
					gBU: () => Yd,
					gDl: () => Ul,
					gF2: () => cf,
					gJ3: () => Ah,
					gMX: () => je,
					gNL: () => wk,
					gNg: () => Lw,
					gOy: () => DI,
					gP: () => Ql,
					gPC: () => qL,
					gR$: () => zm,
					gSB: () => ws,
					gSc: () => hM,
					gTf: () => PF,
					gV: () => ao,
					gWR: () => Bs,
					gY7: () => Td,
					gYR: () => zi,
					gZE: () => Xo,
					gd6: () => cD,
					gdS: () => Pe,
					ggo: () => sP,
					gh$: () => Cf,
					gkj: () => tc,
					gmR: () => k_,
					goz: () => Iw,
					gr9: () => Em,
					gs1: () => Gk,
					gtj: () => pU,
					gu: () => Yu,
					gwB: () => lS,
					h3Z: () => eg,
					h3e: () => hh,
					h4F: () => Ra,
					h4o: () => Tb,
					h5N: () => fb,
					h7W: () => ks,
					hAT: () => $t,
					hDe: () => Hu,
					hEL: () => QI,
					hEq: () => Ur,
					hGj: () => _R,
					hHs: () => lD,
					hHv: () => nF,
					hKg: () => mC,
					hLx: () => jc,
					hN6: () => Nl,
					hNn: () => Mo,
					hPY: () => Pr,
					hRY: () => op,
					hST: () => lI,
					hTv: () => Ey,
					hWY: () => z,
					hWm: () => nm,
					hY0: () => _t,
					hZo: () => Oa,
					h_3: () => ip,
					h_v: () => eh,
					haw: () => ow,
					hfK: () => iu,
					hgz: () => Rf,
					hhd: () => tS,
					hjG: () => bl,
					hk$: () => ak,
					hkF: () => _p,
					hlJ: () => js,
					hqh: () => Au,
					hu3: () => vo,
					hw8: () => Kp,
					hwF: () => cL,
					hzL: () => Zw,
					i0f: () => rs,
					i1H: () => yy,
					i4L: () => jU,
					i4R: () => Je,
					i6F: () => NP,
					i6j: () => hv,
					iF0: () => ER,
					iFS: () => Bk,
					iII: () => oi,
					iJg: () => wl,
					iLS: () => $N,
					iOn: () => kI,
					iP4: () => Tu,
					iPz: () => vF,
					iT7: () => gc,
					iYs: () => Ta,
					iZ2: () => uv,
					iZm: () => TT,
					i_L: () => pS,
					ia5: () => X_,
					icv: () => jO,
					idc: () => $L,
					igT: () => Rm,
					ijK: () => vO,
					ik0: () => dl,
					il0: () => _D,
					imj: () => IU,
					ino: () => Cu,
					ioR: () => C_,
					iqT: () => Mg,
					ir9: () => _u,
					itB: () => ga,
					ivV: () => ci,
					j0T: () => Qe,
					j0q: () => bu,
					j6K: () => KA,
					j7R: () => $E,
					j7Y: () => Lr,
					j84: () => _a,
					jA$: () => gh,
					jBf: () => $w,
					jDP: () => OR,
					jE0: () => qi,
					jHm: () => be,
					jJ0: () => cR,
					jJe: () => ce,
					jMC: () => aR,
					jOm: () => dI,
					jOq: () => Po,
					jR8: () => Ak,
					jTh: () => gS,
					jX2: () => tC,
					jY4: () => Gf,
					jau: () => tn,
					jcG: () => ay,
					je6: () => bw,
					jg$: () => Ov,
					jgz: () => Vc,
					jh5: () => py,
					jl6: () => P,
					jlu: () => Ar,
					jm5: () => FF,
					jph: () => Bv,
					jpz: () => Mh,
					jq6: () => Df,
					jrt: () => zU,
					jyr: () => $h,
					k3K: () => jP,
					k69: () => Yl,
					k7: () => ev,
					k8E: () => Iv,
					k9t: () => Es,
					kBW: () => Hs,
					kCo: () => pr,
					kCx: () => iT,
					kEF: () => _F,
					kEh: () => ZA,
					kFJ: () => td,
					kFk: () => _N,
					kHG: () => PR,
					kHX: () => kt,
					kI: () => An,
					kK2: () => kU,
					kMJ: () => ec,
					kPp: () => Vf,
					kRn: () => HR,
					kUB: () => RE,
					k_1: () => wn,
					ka5: () => Bt,
					kf1: () => Zt,
					kgH: () => oI,
					kj2: () => Ve,
					kkP: () => om,
					kmk: () => FO,
					knh: () => ra,
					kpd: () => ef,
					ks0: () => t_,
					ktn: () => mg,
					kun: () => HI,
					kv8: () => uw,
					kwJ: () => iC,
					kwR: () => sh,
					kwX: () => rR,
					l0b: () => pe,
					l11: () => kO,
					l1d: () => EL,
					l3Z: () => aI,
					l4D: () => aT,
					l78: () => Xu,
					l7k: () => Kw,
					l9v: () => KC,
					lB5: () => iI,
					lDt: () => kP,
					lEv: () => ja,
					lGK: () => vd,
					lJZ: () => uS,
					lMF: () => WE,
					lNg: () => oM,
					lOB: () => UT,
					lPs: () => dM,
					lRj: () => tw,
					lVf: () => ie,
					lWh: () => Rv,
					lXe: () => hb,
					lag: () => JC,
					lfR: () => el,
					lff: () => Hc,
					lgd: () => nb,
					lhG: () => Vs,
					lji: () => g_,
					lm5: () => Bl,
					lmp: () => YL,
					lnI: () => en,
					loZ: () => mm,
					loq: () => vA,
					lrD: () => YP,
					luh: () => pu,
					lyq: () => fa,
					m0_: () => BC,
					m1p: () => nR,
					m3P: () => r,
					m7E: () => S,
					m8A: () => vy,
					mCc: () => fP,
					mDq: () => LI,
					mES: () => or,
					mEv: () => my,
					mGT: () => eR,
					mKP: () => wf,
					mM3: () => tM,
					mNn: () => uD,
					mPR: () => qI,
					mPY: () => kh,
					mQ6: () => zL,
					mQG: () => LM,
					mQt: () => Cl,
					mRG: () => Wi,
					mSF: () => mM,
					mSH: () => kl,
					mSg: () => ph,
					mTK: () => tI,
					mXb: () => Sp,
					mZ9: () => Rw,
					mdI: () => WF,
					mdq: () => YT,
					meH: () => $m,
					mer: () => Sy,
					mhG: () => w_,
					mhb: () => sm,
					mi$: () => Op,
					miu: () => fi,
					mj7: () => Ec,
					mju: () => TU,
					mk7: () => SD,
					mlh: () => b,
					mnx: () => pC,
					mos: () => lu,
					mqM: () => fv,
					mqO: () => Nf,
					mqt: () => rL,
					mst: () => bh,
					mw$: () => __,
					mw6: () => rO,
					mx$: () => Kh,
					mxT: () => Qt,
					mxd: () => kF,
					myF: () => Cm,
					mzN: () => uL,
					n$5: () => PC,
					n$R: () => DE,
					n$m: () => iM,
					n3F: () => II,
					n3x: () => vm,
					n5B: () => zl,
					n5m: () => Rt,
					n6s: () => ki,
					n7Z: () => bs,
					n9N: () => NS,
					n9V: () => Re,
					nB: () => rS,
					nDq: () => eo,
					nEc: () => pg,
					nIQ: () => yb,
					nJ3: () => VL,
					nK3: () => Ug,
					nKE: () => bg,
					nKx: () => XI,
					nO7: () => ac,
					nRW: () => uR,
					nSW: () => JO,
					nVB: () => GO,
					nVG: () => Bg,
					nVg: () => Oy,
					nY_: () => Ap,
					nb: () => Qr,
					ncT: () => gg,
					nfx: () => Fe,
					ngr: () => wt,
					nhR: () => Mk,
					nl0: () => dk,
					nmy: () => nu,
					noR: () => zP,
					nrT: () => _E,
					ns7: () => Pl,
					nsX: () => yp,
					nuq: () => Pw,
					nwT: () => Rg,
					nwg: () => vL,
					nx4: () => df,
					ny0: () => iU,
					nzh: () => KP,
					o1N: () => fh,
					o3$: () => Xv,
					o6n: () => cS,
					o84: () => Hi,
					oC0: () => Ef,
					oCH: () => mu,
					oDQ: () => ty,
					oHl: () => Wr,
					oL: () => aa,
					oMA: () => lO,
					oMJ: () => np,
					oMs: () => $I,
					oMt: () => yE,
					oN$: () => _v,
					oOV: () => Rs,
					oRM: () => dv,
					oS3: () => rp,
					oTr: () => HS,
					oaP: () => xh,
					oao: () => Kb,
					oav: () => Iu,
					oaz: () => lU,
					obt: () => RU,
					obv: () => Aa,
					ocE: () => zR,
					ocK: () => ST,
					od5: () => eF,
					of5: () => xb,
					oge: () => mN,
					ogs: () => dO,
					oit: () => Hy,
					ojM: () => dr,
					ojr: () => gv,
					okM: () => It,
					oli: () => Eb,
					oni: () => tl,
					osH: () => Dp,
					osn: () => LD,
					otu: () => Rh,
					ox_: () => vb,
					p$4: () => mL,
					p4H: () => oN,
					p4q: () => TA,
					p53: () => Cd,
					p5M: () => dm,
					p8: () => Qm,
					pBn: () => ZP,
					pC0: () => eu,
					pCG: () => Ic,
					pCV: () => $p,
					pDV: () => xy,
					pDX: () => zr,
					pEC: () => Sw,
					pF4: () => bU,
					pGz: () => Xy,
					pHz: () => _A,
					pIF: () => Ay,
					pJP: () => ob,
					pL: () => Un,
					pMx: () => pA,
					pNI: () => xw,
					pPb: () => _L,
					pRx: () => Fg,
					pS7: () => kR,
					pU8: () => wA,
					pUd: () => xk,
					pVc: () => Zo,
					pVp: () => xd,
					pVu: () => Sr,
					pWE: () => Uk,
					pWW: () => Rc,
					pWl: () => eM,
					pY1: () => Ed,
					pbH: () => fF,
					pdt: () => bm,
					pfG: () => _e,
					pk4: () => oS,
					pkM: () => rf,
					pld: () => nM,
					po$: () => rv,
					poc: () => wF,
					pqn: () => Yc,
					psl: () => pb,
					psu: () => Br,
					pt_: () => xf,
					ptg: () => UI,
					pyP: () => li,
					q$b: () => oh,
					q$n: () => Ag,
					q0$: () => VE,
					q1c: () => lF,
					q3K: () => a_,
					q4r: () => yA,
					q9c: () => ai,
					qA6: () => yC,
					qAt: () => Bd,
					qC: () => LR,
					qDd: () => MF,
					qDz: () => to,
					qF: () => cd,
					qG9: () => ms,
					qGQ: () => mh,
					qIU: () => Cn,
					qJ9: () => Tr,
					qLZ: () => j_,
					qNB: () => rh,
					qOu: () => nr,
					qOx: () => Mi,
					qQD: () => _C,
					qR: () => Yk,
					qUx: () => Du,
					qVj: () => Pv,
					qYd: () => OM,
					qZ8: () => Od,
					qk7: () => l,
					qmT: () => XP,
					quN: () => iP,
					qvK: () => cy,
					qxB: () => go,
					qyj: () => $F,
					qz6: () => hR,
					qz9: () => dg,
					qzx: () => hs,
					r$k: () => BL,
					r4R: () => UN,
					r55: () => nP,
					r7g: () => bi,
					r7y: () => TR,
					r9R: () => jv,
					r9e: () => _o,
					rAn: () => yg,
					rBs: () => Jh,
					rCd: () => BS,
					rEx: () => Kk,
					rFN: () => hU,
					rFZ: () => hS,
					rGC: () => ya,
					rIZ: () => Ll,
					rJc: () => Sc,
					rK5: () => at,
					rKG: () => kw,
					rKr: () => Y,
					rMO: () => Ud,
					rNV: () => gn,
					rNk: () => d,
					rQr: () => GU,
					rWJ: () => RA,
					rYD: () => Qp,
					rZK: () => Ln,
					rZV: () => Jb,
					rZg: () => tb,
					re9: () => nO,
					rfH: () => Mm,
					rjW: () => Nw,
					rkL: () => xi,
					rn3: () => oc,
					rnI: () => eS,
					s0I: () => IM,
					s1i: () => pn,
					s29: () => JP,
					s2Z: () => cT,
					s2w: () => jD,
					s3C: () => ca,
					s3g: () => Wp,
					s5P: () => tD,
					s5d: () => Xn,
					s5n: () => IC,
					s6F: () => I,
					s6R: () => Oc,
					s9A: () => ih,
					s9q: () => JD,
					sA8: () => uN,
					sE5: () => VO,
					sE7: () => Eu,
					sEL: () => eI,
					sH9: () => y_,
					sIe: () => tA,
					sJD: () => v_,
					sKH: () => oA,
					sMW: () => XT,
					sMg: () => WL,
					sOV: () => wS,
					sOw: () => Xi,
					sP1: () => Qo,
					sPE: () => Da,
					sZM: () => hr,
					scF: () => RF,
					seO: () => aA,
					sen: () => vv,
					sfP: () => E,
					sff: () => US,
					shm: () => mF,
					siJ: () => vp,
					sjL: () => tr,
					skB: () => fA,
					skU: () => Dg,
					skk: () => Vi,
					smW: () => rC,
					soF: () => gw,
					sq2: () => _U,
					sr2: () => Pb,
					svi: () => cC,
					t$B: () => ue,
					t6w: () => yo,
					t86: () => Ma,
					tER: () => kA,
					tH: () => oL,
					tJz: () => _w,
					tN$: () => VS,
					tPY: () => GT,
					tPc: () => NC,
					tQx: () => Q_,
					tWs: () => Gp,
					tXk: () => nc,
					tZ0: () => EF,
					ta0: () => JR,
					ta5: () => Bh,
					tgI: () => mv,
					tkB: () => CM,
					tlM: () => sN,
					tmf: () => CO,
					tmu: () => Vl,
					trH: () => PM,
					tsG: () => lP,
					twM: () => Yy,
					twg: () => tF,
					twl: () => YO,
					u12: () => YA,
					u1g: () => IS,
					u3h: () => Qg,
					u56: () => Ld,
					u6Q: () => Nk,
					u9q: () => Fh,
					uBU: () => lo,
					uHc: () => qA,
					uHn: () => FT,
					uI8: () => q,
					uIT: () => ky,
					uIV: () => $d,
					uIu: () => ku,
					uKb: () => FA,
					uM$: () => jf,
					uMM: () => PO,
					uOE: () => jo,
					uPQ: () => gi,
					uSs: () => Wc,
					uU5: () => Ti,
					uUY: () => Om,
					uWG: () => Wt,
					ub9: () => Rd,
					uhL: () => HU,
					ujQ: () => hy,
					uk0: () => db,
					uk7: () => sa,
					umi: () => ze,
					umx: () => wD,
					unu: () => mr,
					uoP: () => Xw,
					uqG: () => ZL,
					urR: () => ew,
					usX: () => bN,
					utT: () => sS,
					uuz: () => gl,
					uxq: () => Ni,
					uy4: () => Lt,
					uyD: () => NN,
					v1v: () => jn,
					v2W: () => ZO,
					v3k: () => _k,
					v6A: () => DT,
					v6H: () => lm,
					v9P: () => fw,
					vBN: () => tE,
					vBT: () => yU,
					vBh: () => hE,
					vHg: () => rT,
					vJ6: () => Ce,
					vJl: () => Tk,
					vPC: () => qm,
					vRY: () => dC,
					vS0: () => ww,
					vTv: () => Ck,
					vVR: () => Yb,
					vY0: () => dn,
					v_S: () => ES,
					vbC: () => dP,
					vbd: () => Ip,
					vhE: () => KU,
					vid: () => qN,
					viz: () => tt,
					vj: () => PS,
					vj_: () => Dd,
					vjo: () => Pt,
					vm1: () => ir,
					vnz: () => ps,
					vol: () => Ja,
					vos: () => Ib,
					voy: () => Tg,
					vzy: () => vc,
					w1Y: () => ts,
					w32: () => hm,
					w41: () => VT,
					wGf: () => o,
					wHs: () => nT,
					wJK: () => AT,
					wKt: () => R,
					wMf: () => As,
					wN3: () => Bu,
					wND: () => YI,
					wOg: () => xn,
					wPM: () => AA,
					wRI: () => Dk,
					wSH: () => qD,
					wSQ: () => XS,
					wSg: () => Zg,
					wTF: () => gL,
					wUi: () => Rp,
					wXw: () => hF,
					wYd: () => ML,
					w_q: () => zO,
					wff: () => OP,
					whr: () => Xk,
					whv: () => Qv,
					wit: () => Ng,
					wlF: () => CU,
					wmB: () => sC,
					wox: () => es,
					wpS: () => Fp,
					wqD: () => No,
					wu1: () => ti,
					wuq: () => Bn,
					wvs: () => aE,
					wvx: () => SR,
					wwx: () => Ct,
					wx$: () => aU,
					wyZ: () => Mv,
					x$f: () => tm,
					x0h: () => O_,
					x1z: () => _b,
					x4Q: () => ru,
					x4c: () => bM,
					x8Y: () => Dm,
					xAn: () => ar,
					xBd: () => zF,
					xDI: () => UE,
					xDv: () => hn,
					xHB: () => xS,
					xIW: () => as,
					xIf: () => pL,
					xKC: () => oy,
					xMh: () => Sm,
					xMj: () => dF,
					xNS: () => uU,
					xQJ: () => dD,
					xSB: () => SE,
					xTV: () => pc,
					xUB: () => cp,
					xUt: () => SA,
					xW6: () => os,
					xXe: () => pM,
					xYJ: () => ZT,
					xbA: () => yt,
					xbj: () => Xa,
					xex: () => Fy,
					xhR: () => $O,
					xi7: () => Ji,
					xl1: () => cn,
					xnF: () => Tt,
					xnI: () => $T,
					xnf: () => wd,
					xoK: () => Ua,
					xpi: () => fE,
					xrQ: () => pI,
					xst: () => me,
					y1W: () => d_,
					y4: () => vI,
					y4K: () => wi,
					y4l: () => qy,
					y5R: () => mI,
					y63: () => pw,
					y6o: () => ba,
					y8l: () => Za,
					y9K: () => Zp,
					yDr: () => Oi,
					yEH: () => OS,
					yFL: () => kp,
					yK$: () => jt,
					yKI: () => fe,
					yLp: () => HF,
					yR9: () => Sb,
					yRW: () => jr,
					yS6: () => aF,
					yU1: () => MP,
					yUV: () => DS,
					yVf: () => ap,
					yW_: () => kv,
					yY3: () => TM,
					yZU: () => QO,
					yZz: () => BI,
					y_2: () => au,
					yeF: () => ON,
					yge: () => Ki,
					yho: () => _S,
					yi2: () => LN,
					yjs: () => yl,
					ykr: () => FI,
					yoI: () => ql,
					yq2: () => Fm,
					yqQ: () => hD,
					yqw: () => If,
					yrg: () => $R,
					ytU: () => vs,
					ywP: () => Lc,
					yzC: () => Lo,
					yzx: () => P_,
					z01: () => EP,
					z3L: () => ED,
					z3k: () => En,
					z5Y: () => wh,
					z7O: () => Go,
					z7x: () => da,
					zEi: () => hL,
					zF2: () => Sl,
					zFJ: () => Rr,
					zJP: () => rg,
					zJe: () => bc,
					zKB: () => MR,
					zMT: () => eE,
					zNS: () => D_,
					zO9: () => BU,
					zR8: () => gN,
					zSV: () => qn,
					zV0: () => fR,
					zVA: () => tL,
					zVl: () => S_,
					zXJ: () => fc,
					zZW: () => xA,
					z_l: () => He,
					zbO: () => un,
					zbY: () => WD,
					zbv: () => HA,
					zcN: () => h,
					zdJ: () => rI,
					zdU: () => bd,
					zeH: () => il,
					zez: () => pm,
					zfY: () => $l,
					zgE: () => wP,
					ziN: () => PI,
					zik: () => Zu,
					ziu: () => Zk,
					zj9: () => hf,
					zo: () => vk,
					zoe: () => C,
					zq: () => Jk,
					ztF: () => BP,
					zuq: () => $k,
					zwW: () => gI,
					zwi: () => m,
					zy2: () => EO,
					zyI: () => wC,
				});
				const n = 'RESET_PROFILE_PAGE',
					a = 'RESET_PROFILE_PAGE_REQUEST',
					s = 'FETCH_PUBLIC_USER_PROFILE',
					r = 'REQUEST_PUBLIC_USER_PROFILE',
					o = 'RECEIVE_PUBLIC_USER_PROFILE',
					l = 'FAILED_PUBLIC_USER_PROFILE',
					c = 'RESET_PUBLIC_USER_PROFILE',
					d = 'SET_SHOW_PROFILE_PAGE_GENERAL_ERROR',
					u = 'SET_SOCIAL_LIMIT_ERROR_DIALOG',
					p = 'FETCH_DAILY_SUMMARY',
					y = 'REQUEST_DAILY_SUMMARY',
					h = 'RECEIVE_DAILY_SUMMARY',
					g = 'FETCH_REGISTERED_DEVICES',
					m = 'REQUEST_REGISTERED_DEVICES',
					A = 'RECEIVE_REGISTERED_DEVICES',
					_ = 'FETCH_VALIDATE_DAILY_SUMMARY',
					E = 'REQUEST_VALIDATE_DAILY_SUMMARY',
					T = 'RECEIVE_VALIDATE_DAILY_SUMMARY',
					C = 'FETCH_VALIDATE_DEVICE_EPOCH',
					S = 'REQUEST_VALIDATE_DEVICE_EPOCH',
					I = 'RECEIVE_VALIDATE_DEVICE_EPOCH',
					v = 'FETCH_VALIDATE_DEVICE_EPOCH_SUMMARY',
					f = 'REQUEST_VALIDATE_DEVICE_EPOCH_SUMMARY',
					D = 'RECEIVE_VALIDATE_DEVICE_EPOCH_SUMMARY',
					N = 'FETCH_VALIDATE_DEVICE_HEART_RATE',
					R = 'REQUEST_VALIDATE_DEVICE_HEART_RATE',
					b = 'RECEIVE_VALIDATE_DEVICE_HEART_RATE',
					L = 'FETCH_VALIDATE_DEVICE_HEART_RATE_SUMMARY',
					P = 'REQUEST_VALIDATE_DEVICE_HEART_RATE_SUMMARY',
					O = 'RECEIVE_VALIDATE_DEVICE_HEART_RATE_SUMMARY',
					w = 'SET_MAT_SUPPORT_FILTER',
					F = 'SET_MAT_SUPPORT_EXPANDED_DEVICE',
					k = 'SET_MAT_SUPPORT_REPORT_FILTER',
					U = 'FETCH_USER_SOCIAL_PROFILE',
					M = 'FETCH_USER_SOCIAL_PROFILE_FETCHING',
					G = 'FETCH_USER_SOCIAL_PROFILE_SUCCESS',
					x = 'FETCH_USER_SOCIAL_PROFILE_FAIL',
					B = 'UPDATE_USER_SOCIAL_PROFILE',
					H = 'UPDATE_USER_SOCIAL_PROFILE_UPDATING',
					V = 'UPDATE_USER_SOCIAL_PROFILE_SUCCESS',
					W = 'UPDATE_USER_SOCIAL_PROFILE_FAIL',
					J = 'FETCH_PROFILE_USER_PRIVACY',
					Y = 'REQUEST_USER_PRIVACY',
					$ = 'RECEIVE_USER_PRIVACY',
					j = 'UPDATE_USER_PRIVACY',
					K = 'UPDATE_USER_SOCIAL_PRIVACY',
					z = 'FAILED_USER_PRIVACY',
					q = 'PROFILE_PAGE_REPORT_SET_REPORT_DIALOG',
					Q = 'PROFILE_PAGE_REPORT_USER_PROFILE_IMAGE',
					X = 'FETCH_SYSTEM_MESSAGE',
					Z = 'RECEIVE_SYSTEM_MESSAGE',
					ee = 'FETCH_SYSTEM_STATUS',
					te = 'RECEIVE_SYSTEM_STATUS',
					ie = 'SET_PAGE_MESSAGE',
					ne = 'REMOVE_PAGE_MESSAGE',
					ae = 'SET_BADGES_PAGE_VIEW',
					se = 'RESET_BADGES_PAGE_VIEW',
					re = 'SET_BADGES_TYPE_FILTER',
					oe = 'SET_BADGES_POINTS_FILTER',
					le = 'RESET_BADGES_FILTERS',
					ce = 'RESET_BADGES',
					de = 'REQUEST_LATEST_EARNED_BADGES',
					ue = 'RECEIVE_LATEST_EARNED_BADGES',
					pe = 'FAILED_LATEST_EARNED_BADGES',
					ye = 'REQUEST_BADGE_ATTRIBUTES',
					he = 'RECEIVE_BADGE_ATTRIBUTES',
					ge = 'FAILED_BADGE_ATTRIBUTES',
					me = 'REQUEST_EARNED_BADGES',
					Ae = 'RECEIVE_EARNED_BADGES',
					_e = 'FAILED_EARNED_BADGES',
					Ee = 'REQUEST_AVAILABLE_BADGES',
					Te = 'RECEIVE_AVAILABLE_BADGES',
					Ce = 'FAILED_AVAILABLE_BADGES',
					Se = 'REQUEST_COMPARISON_BADGES',
					Ie = 'RECEIVE_COMPARISON_BADGES',
					ve = 'FAILED_COMPARISON_BADGES',
					fe = 'FETCH_BADGES_LEADERBOARD',
					De = 'REQUEST_BADGES_LEADERBOARD',
					Ne = 'RECEIVE_BADGES_LEADERBOARD',
					Re = 'FAILED_BADGES_LEADERBOARD',
					be = 'RESET_BADGES_LEADERBOARD',
					Le = 'UPDATE_VIEWED_BADGES',
					Pe = 'BADGE_MARKED_AS_SEEN',
					Oe = 'REQUEST_ACTIVITY_BADGES',
					we = 'RECEIVE_ACTIVITY_BADGES',
					Fe = 'FAILED_ACTIVITY_BADGES',
					ke = 'REQUEST_DAILY_SUMMARY_BADGES',
					Ue = 'RECEIVE_DAILY_SUMMARY_BADGES',
					Me = 'FAILED_DAILY_SUMMARY_BADGES',
					Ge = 'REQUEST_COMMENTS',
					xe = 'RECEIVE_COMMENTS',
					Be = 'FAILED_COMMENTS',
					He = 'ADD_CONVERSASION_COMMENT',
					Ve = 'ADD_CONVERSASION_COMMENT_DONE',
					We = 'ADD_COMMENT',
					Je = 'DELETE_COMMENT',
					Ye = 'EDIT_COMMENT_START',
					$e = 'EDIT_COMMENT_DONE',
					je = 'EDIT_COMMENT_ERROR',
					Ke = 'REMOVE_COMMENT',
					ze = 'ADD_COMMENT_LIKE',
					qe = 'REMOVE_COMMENT_LIKE',
					Qe = 'MANAGE_COMMENT_LIKES',
					Xe = 'RESET_COMMENTS',
					Ze = 'FETCH_COMMENTS',
					et = 'FETCH_COMMENT_LIKES',
					tt = 'REQUEST_COMMENT_LIKES',
					it = 'RECEIVE_COMMENT_LIKES',
					nt = 'RESET_COMMENT_LIKES',
					at = 'FETCH_CONVERSATION',
					st = 'REQUEST_CONVERSATION',
					rt = 'POST_CONVERSATION',
					ot = 'RECEIVE_CONVERSATION',
					lt = 'MANAGE_COMMENTS',
					ct = 'MANAGE_LIKES',
					dt = 'REMOVE_PROFILE_PAGE_COMMENTS_PROFILE_IMAGE',
					ut = 'RESET_CONVERSATION',
					pt = 'REQUEST_CONVERSATION_LIKES',
					yt = 'RECEIVE_CONVERSATION_LIKES',
					ht = 'RESET_CONVERSATION_LIKES',
					gt = 'ADD_CONVERSATION_LIKE',
					mt = 'REMOVE_CONVERSATION_LIKE',
					At = 'FETCH_CONVERSATION_LIKES',
					_t = 'FETCH_CONVERSATION_LIKES_FETCHING',
					Et = 'FETCH_CONVERSATION_LIKES_FINISHED',
					Tt = 'RESET_MUTUAL_CONNECTIONS',
					Ct = 'FETCH_MUTUAL_CONNECTIONS',
					St = 'FETCH_MUTUAL_CONNECTIONS_FETCHING',
					It = 'FETCH_MUTUAL_CONNECTIONS_SUCCESS',
					vt = 'FETCH_MUTUAL_CONNECTIONS_FAIL',
					ft = 'POST_GROUP_CONVERSATION',
					Dt = 'FETCH_GROUP_CONVERSATION',
					Nt = 'ADD_GROUP_CONVERSATION_LIKE',
					Rt = 'REMOVE_GROUP_CONVERSATION_LIKE',
					bt = 'REQUEST_GROUP_CONVERSATION',
					Lt = 'RECEIVE_GROUP_CONVERSATION',
					Pt = 'MANAGE_GROUP_COMMENTS',
					Ot = 'MANAGE_GROUP_LIKES',
					wt = 'REQUEST_GROUP_CONVERSATION_LIKES',
					Ft = 'RECEIVE_GROUP_CONVERSATION_LIKES',
					kt = 'FETCH_GROUP_CONVERSATION_LIKES',
					Ut = 'FETCH_GROUP_CONVERSATION_LIKES_FETCHING',
					Mt = 'FETCH_GROUP_CONVERSATION_LIKES_FINISHED',
					Gt = 'ACCEPT_CONNECTION_REQUEST',
					xt = 'DECLINE_CONNECTION_REQUEST',
					Bt = 'CANCEL_CONNECTION_REQUEST',
					Ht = 'BLOCK_USER_REQUEST',
					Vt = 'UNBLOCK_USER_REQUEST',
					Wt = 'DISCONNECT_CONNECTION',
					Jt = 'FOLLOW_CONNECTION',
					Yt = 'UNFOLLOW_CONNECTION',
					$t = 'FETCH_CONNECTION_PROFILE_STATUS',
					jt = 'REQUEST_CONNECTION_PROFILE_STATUS',
					Kt = 'RECEIVE_CONNECTION_PROFILE_STATUS',
					zt = 'FAILED_CONNECTION_PROFILE_STATUS',
					qt = 'RESET_CONNECTION_PROFILE_STATUS',
					Qt = 'SAVE_SEND_CONNECTION_REQUEST',
					Xt = 'FETCH_PROFILE_PENDING_CONNECTIONS',
					Zt = 'REQUEST_PENDING_CONNECTIONS',
					ei = 'RECEIVE_PENDING_CONNECTIONS',
					ti = 'RESET_PENDING_CONNECTIONS',
					ii = 'SHOW_MODAL',
					ni = 'HIDE_MODAL',
					ai = 'REQUEST_USER_PERSONAL_INFO',
					si = 'RECEIVE_USER_PERSONAL_INFO',
					ri = 'FAILED_USER_PERSONAL_INFO',
					oi = 'RESET_USER_PERSONAL_INFO',
					li = 'FETCH_USER_PERSONAL_INFO',
					ci = 'REQUEST_USER_DAILY_STEPS',
					di = 'RECEIVE_USER_DAILY_STEPS',
					ui = 'FAILED_USER_DAILY_STEPS',
					pi = 'RESET_USER_DAILY_STEPS',
					yi = 'FETCH_USER_DAILY_STEPS',
					hi = 'FETCH_USER_STATISTICS',
					gi = 'REQUEST_USER_STATISTICS',
					mi = 'RECEIVE_USER_STATISTICS',
					Ai = 'RESET_USER_STATISTICS',
					_i = 'FETCH_FAVORITE_ACTIVITIES',
					Ei = 'REQUEST_FAVORITE_ACTIVITIES',
					Ti = 'RECEIVE_FAVORITE_ACTIVITIES',
					Ci = 'RESET_FAVORITE_ACTIVITIES',
					Si = 'REQUEST_CALENDAR_PREFERENCES',
					Ii = 'RECEIVE_CALENDAR_PREFERENCES',
					vi = 'UPDATE_CALENDAR_PREFERENCES',
					fi = 'FETCH_TRAINING_PLAN_CALENDAR_NOTE',
					Di = 'SET_MODAL_DISPATCHER',
					Ni = 'RESET_MODAL_DISPATCHER',
					Ri = 'SHOW_ADD_MENU',
					bi = 'HIDE_ADD_MENU',
					Li = 'SET_CALENDAR_YEAR_AND_MONTH',
					Pi = 'REQUEST_CALENDAR_WEEK',
					Oi = 'RECEIVE_CALENDAR_WEEK',
					wi = 'REQUEST_CALENDAR_MONTH',
					Fi = 'RECEIVE_CALENDAR_MONTH',
					ki = 'REQUEST_CALENDAR_YEAR',
					Ui = 'RECEIVE_CALENDAR_YEAR',
					Mi = 'UPDATE_CALENDAR_ITEMS',
					Gi = 'SET_CALENDAR_SNACKBAR',
					xi = 'SHOW_ADD_SIDEBAR',
					Bi = 'REFRESH_CALENDAR',
					Hi = 'HIDE_ADD_SIDEBAR',
					Vi = 'REQUEST_CALENDAR_NOTE',
					Wi = 'RECEIVE_CALENDAR_NOTE',
					Ji = 'FETCH_CALENDAR_EVENT',
					Yi = 'REQUEST_CALENDAR_EVENT',
					$i = 'RECEIVE_CALENDAR_EVENT',
					ji = 'REQUEST_CALENDAR_EXPORT',
					Ki = 'RECEIVE_CALENDAR_EXPORT',
					zi = 'PUBLISH_CALENDAR_EXPORT',
					qi = 'UNPUBLISH_CALENDAR_EXPORT',
					Qi = 'DISPLAY_CALENDAR_MESSAGE',
					Xi = 'SEND_CALENDAR_ITEMS_TO_DEVICE',
					Zi = 'SEND_CALENDAR_ITEMS_TO_DEVICE_SUCCESS',
					en = 'SEND_CALENDAR_ITEMS_TO_DEVICE_ERROR',
					tn = 'RESET_CALENDAR_ITMES_TO_DEVICE',
					nn = 'REQUEST_TRAINING_PLANS_FOR_DATE',
					an = 'RECEIVE_TRAINING_PLANS_FOR_DATE',
					sn = 'FETCH_TRAINING_PLAN',
					rn = 'REQUEST_TRAINING_PLAN',
					on = 'RECEIVE_TRAINING_PLAN',
					ln = 'ADD_WEIGHT',
					cn = 'ADD_WEIGHT_REQUEST',
					dn = 'DELETE_WEIGHT',
					un = 'DELETE_WEIGHT_REQUEST',
					pn = 'REQUEST_ACTIVITY_TYPES',
					yn = 'RECEIVE_ACTIVITY_TYPES',
					hn = 'ACTIVITY_TYPES_FAIL',
					gn = 'FETCH_ACTIVITY_HR_TIME_IN_ZONE',
					mn = 'REQUEST_ACTIVITY_HR_TIME_IN_ZONE',
					An = 'RECEIVE_ACTIVITY_HR_TIME_IN_ZONE',
					_n = 'ACTIVITY_HR_TIME_IN_ZONE_FAIL',
					En = 'REQUEST_ACTIVITY_POWER_TIME_IN_ZONE',
					Tn = 'RECEIVE_ACTIVITY_POWER_TIME_IN_ZONE',
					Cn = 'ACTIVITY_POWER_TIME_IN_ZONE_FAIL',
					Sn = 'FETCH_ACTIVITY',
					In = 'REQUEST_ACTIVITY',
					vn = 'RECEIVE_ACTIVITY',
					fn = 'RESET_ACTIVITY',
					Dn = 'REQUEST_CHARTS_ORDER',
					Nn = 'FETCH_CHARTS_ORDER',
					Rn = 'FETCH_GOALS',
					bn = 'FETCH_ALL_GOALS',
					Ln = 'REQUEST_GOALS',
					Pn = 'RECEIVE_GOALS',
					On = 'RECEIVE_ALL_GOALS',
					wn = 'DELETE_GOAL_REQUEST',
					Fn = 'DELETE_GOAL',
					kn = 'CREATE_GOAL',
					Un = 'CREATE_GOAL_REQUEST',
					Mn = 'CREATING_GOAL',
					Gn = 'CREATE_GOAL_SUCCESS',
					xn = 'CREATE_GOAL_FAIL',
					Bn = 'UPDATE_GOAL',
					Hn = 'UPDATING_GOAL',
					Vn = 'UPDATE_GOAL_SUCCESS',
					Wn = 'UPDATE_GOAL_FAIL',
					Jn = 'REQUEST_COURSES',
					Yn = 'RECEIVE_COURSES',
					$n = 'FETCH_THIRD_PARTY_CONSUMER_INFO',
					jn = 'RECEIVE_THIRD_PARTY_CONSUMER_INFO',
					Kn = 'REQUEST_WEB_GATEWAY_COURSES',
					zn = 'RECEIVE_WEB_GATEWAY_COURSES',
					qn = 'REQUEST_WEB_GATEWAY_COURSES_FOR_CHINA',
					Qn = 'RECEIVE_WEB_GATEWAY_COURSES_FOR_CHINA',
					Xn = 'RESET_EDITABLE_COURSE_DATA',
					Zn = 'RESET_EDITABLE_COURSE_DATA_ON_DRAWING_METHOD_CHANGED',
					ea = 'RESET_EDITABLE_COURSE_DRAWING_DATA',
					ta = 'ADD_EDITABLE_COURSE_DATA',
					ia = 'ADD_EDITABLE_COURSE_DRAWING_DATA',
					na = 'ADD_IMPORTED_COURSE_DATA',
					aa = 'RESET_IMPORTED_COURSE_DATA',
					sa = 'CREATE_NEW_COURSE',
					ra = 'CREATE_NEW_COURSE_SUCCESS',
					oa = 'CREATE_NEW_COURSE_ERROR',
					la = 'UPDATE_COURSE_DATA_SUCCESS',
					ca = 'UPDATE_COURSE_DATA_ERROR',
					da = 'UPDATE_COURSE_DATA',
					ua = 'UPDATE_COURSE_PRIVACY_SUCCESS',
					pa = 'UPDATE_COURSE_PRIVACY_ERROR',
					ya = 'UPDATE_COURSE_PRIVACY',
					ha = 'UNDO_COURSE_ROUTE_HISTORY',
					ga = 'REDO_COURSE_ROUTE_HISTORY',
					ma = 'SET_COURSE_ELEVATION_CHART_EXPANDED_STATUS',
					Aa = 'RESET_COURSE_ELEVATION_CHART_EXPANDED_STATUS',
					_a = 'SET_CHART_SELECTED_AREA_START_END_VALUE',
					Ea = 'RESET_CHART_SELECTED_AREA_START_END_VALUE',
					Ta = 'SET_ELEVATION_CHART_SELECTED_GEO_POINTS',
					Ca = 'RESET_ELEVATION_CHART_SELECTED_GEO_POINTS',
					Sa = 'SET_COURSE_MARKER_DATA',
					Ia = 'RESET_COURSE_MARKER_DATA',
					va = 'SET_COURSE_ROUTE_SEGMENT',
					fa = 'SET_COURSE_ROUTE_SEGMENT_SUCCESS',
					Da = 'SET_COURSE_ROUTE_SEGMENT_ERROR',
					Na = 'GET_COURSE_ROUTE_SEGMENT',
					Ra = 'GET_COURSE_ROUTE_SEGMENT_SUCCESS',
					ba = 'GET_COURSE_ROUTE_SEGMENT_ERROR',
					La = 'REQUEST_CLIMBS',
					Pa = 'RECEIVE_CLIMBS',
					Oa = 'RECEIVE_CLIMBS_FAILED',
					wa = 'RESET_CACHED_CLIMBS',
					Fa = 'REQUEST_CLIMBS_ON_ROUTE',
					ka = 'RECEIVE_CLIMBS_ON_ROUTE',
					Ua = 'REQUEST_CLIMBS_ON_COURSE',
					Ma = 'RECEIVE_CLIMBS_ON_COURSE',
					Ga = 'REQUEST_SECONDARY_CLIMBS',
					xa = 'RECEIVE_SECONDARY_CLIMBS',
					Ba = 'RESET_SECONDARY_CLIMBS',
					Ha = 'RESET_CLIMBS_ON_ROUTE_OR_COURSE',
					Va = 'FETCH_WORKOUTS',
					Wa = 'FETCH_WORKOUTS_FETCHING',
					Ja = 'FETCH_WORKOUTS_FINISHED',
					Ya = 'FETCH_PROVIDER_WORKOUTS',
					$a = 'FETCH_PROVIDER_WORKOUTS_FETCHING',
					ja = 'FETCH_PROVIDER_WORKOUTS_FINISHED',
					Ka = 'FETCH_PROVIDER_WORKOUT',
					za = 'FETCH_PROVIDER_WORKOUT_FETCHING',
					qa = 'FETCH_PROVIDER_WORKOUT_SUCCESS',
					Qa = 'FETCH_PROVIDER_WORKOUT_FAIL',
					Xa = 'FETCH_WORKOUT_BY_ID',
					Za = 'FETCH_WORKOUT_BY_ID_FETCHING',
					es = 'FETCH_WORKOUT_BY_ID_FINISHED',
					ts = 'UPDATE_WORKOUT_BY_ID',
					is = 'UPDATE_WROKOUT_BY_ID_UPDATING',
					ns = 'UPDATE_WROKOUT_BY_ID_SUCCESS',
					as = 'UPDATE_WROKOUT_BY_ID_FAIL',
					ss = 'UPDATE_WORKOUTS_FILTER',
					rs = 'RESET_WORKOUTS_FILTER',
					os = 'RESCHEDULE_WORKOUT',
					ls = 'SCHEDULE_WORKOUT',
					cs = 'SCHEDULE_WORKOUT_REQUEST',
					ds = 'REMOVE_SCHEDULED_WORKOUT',
					us = 'REMOVE_SCHEDULED_WORKOUT_REQUEST',
					ps = 'FETCH_WORKOUT_SCHEDULE',
					ys = 'REQUEST_WORKOUT_SCHEDULE',
					hs = 'RECEIVE_WORKOUT_SCHEDULE',
					gs = 'CREATE_WORKOUT',
					ms = 'COPY_WORKOUT',
					As = 'DELETE_WORKOUT',
					_s = 'UPLOAD_AUDIO_NOTE',
					Es = 'DELETE_AUDIO_NOTE',
					Ts = 'FETCH_WORKOUTS_EXPORT',
					Cs = 'REQUEST_WORKOUTS_EXPORT',
					Ss = 'RECEIVE_WORKOUTS_EXPORT',
					Is = 'FETCH_WORKOUT_TYPES',
					vs = 'FETCH_WORKOUT_TYPES_FETCHING',
					fs = 'FETCH_WORKOUT_TYPES_SUCCESS',
					Ds = 'FETCH_WORKOUT_TYPES_FAIL',
					Ns = 'FETCH_WORKOUT_ALL_TYPE',
					Rs = 'FETCH_WORKOUT_ALL_TYPE_FETCHING',
					bs = 'FETCH_WORKOUT_ALL_TYPE_SUCCESS',
					Ls = 'FETCH_WORKOUT_ALL_TYPE_FAIL',
					Ps = 'FETCH_EXERCISE_DATA',
					Os = 'FETCH_EXERCISE_DATA_FETCHING',
					ws = 'FETCH_EXERCISE_DATA_FINISHED',
					Fs = 'FETCH_UPCOMING_EVENTS',
					ks = 'REQUEST_UPCOMING_EVENTS',
					Us = 'RECEIVE_UPCOMING_EVENTS',
					Ms = 'RESET_UPCOMING_EVENTS',
					Gs = 'FETCH_UPCOMING_CAL_EVENTS',
					xs = 'REQUEST_UPCOMING_CAL_EVENTS',
					Bs = 'RECEIVE_UPCOMING_CAL_EVENTS',
					Hs = 'RESET_UPCOMING_CAL_EVENTS',
					Vs = 'SELECT_PROFILE_PAGE_TAB',
					Ws = 'FETCH_MONTHLY_REPORT',
					Js = 'REQUEST_MONTHLY_REPORT',
					Ys = 'RECEIVE_MONTHLY_REPORT',
					$s = 'RESET_MONTHLY_REPORT',
					js = 'REQUEST_MONTHLY_STEPS_REPORT',
					Ks = 'RECEIVE_MONTHLY_STEPS_REPORT ',
					zs = 'FETCH_STEPS_REPORT',
					qs = 'REQUEST_DAILY_STEPS_REPORT',
					Qs = 'RECEIVE_DAILY_STEPS_REPORT',
					Xs = 'REQUEST_LIFETIME_DAILY_STEPS_REPORT',
					Zs = 'RECEIVE_LIFETIME_DAILY_STEPS_REPORT',
					er = 'RESET_STEPS_REPORT ',
					tr = 'FETCH_USER_PRIVACY',
					ir = 'FETCH_USER_PRIVACY_START',
					nr = 'FETCH_USER_PRIVACY_SUCCESS',
					ar = 'FETCH_USER_PRIVACY_ERROR',
					sr = 'SAVE_UPDATED_USER_PRIVACY',
					rr = 'SET_USER_PRIVACY_START',
					or = 'SET_USER_PRIVACY_SUCCESS',
					lr = 'SET_USER_PRIVACY_ERROR',
					cr = 'FETCH_BULK_PRIVACY',
					dr = 'FETCH_BULK_PRIVACY_START',
					ur = 'FETCH_BULK_PRIVACY_SUCCESS',
					pr = 'FETCH_BULK_PRIVACY_ERROR',
					yr = 'SAVE_BULK_PRIVACY',
					hr = 'SET_BULK_PRIVACY_START',
					gr = 'SET_BULK_PRIVACY_SUCCESS',
					mr = 'SET_BULK_PRIVACY_ERROR',
					Ar = 'FETCHING_POWER_GUIDANCE_START',
					_r = 'FETCHING_POWER_GUIDANCE_ERROR',
					Er = 'FINISHED_FETCHING_POWER_GUIDANCE',
					Tr = 'FETCH_POWER_GUIDE_BY_COURSE_ID',
					Cr = 'FETCHING_POWER_GUIDE_BY_COURSE_ID_START',
					Sr = 'FINISHED_FETCHING_POWER_GUIDE_BY_COURSE_ID',
					Ir = 'FETCHING_POWER_GUIDE_BY_COURSE_ID_START_ERROR',
					vr = 'FETCH_POWER_GUIDANCE',
					fr = 'SET_POWER_GUIDANCE_COURSE_NAME',
					Dr = 'DELETE_POWER_GUIDANCE',
					Nr = 'DELETE_POWER_GUIDANCE_SUCCESS',
					Rr = 'SAVE_POWER_GUIDANCE',
					br = 'SEND_POWER_GUIDANCE_TO_DEVICE',
					Lr = 'DUPLICATE_POWER_GUIDANCE_STRATEGY',
					Pr = 'SEND_POWER_GUIDANCE_TO_DEVICE_SUCCESS',
					Or = 'SEND_POWER_GUIDANCE_TO_DEVICE_ERROR',
					wr = 'DUPLICATE_POWER_GUIDANCE_ERROR',
					Fr = 'DELETE_POWER_GUIDANCE_ERROR',
					kr = 'FETCH_POWER_GUIDANCE_COURSE_DETAILS',
					Ur = 'FETCH_POWER_GUIDANCE_COURSE_DETAILS_SUCCESS',
					Mr = 'FETCH_POWER_GUIDANCE_COURSE_DETAILS_FAIL',
					Gr = 'FETCH_POWER_GUIDANCE_DETAILS',
					xr = 'SET_SPECIFIC_DATA_TO_POWER_GUIDE',
					Br = 'FETCH_POWER_GUIDANCE_DETAILS_SUCCESS',
					Hr = 'FETCH_POWER_GUIDANCE_DETAILS_FAIL',
					Vr = 'SET_POWER_GUIDANCE_SUMMARY_FROM_ALGORITHM_DATA',
					Wr = 'SET_POWER_GUIDANCE_SPLITS_FROM_ALGORITHM_DATA',
					Jr = 'SAVE_POWER_GUIDANCE_SUCCESS',
					Yr = 'SAVE_POWER_GUIDANCE_FAIL',
					$r = 'UPDATE_POWER_GUIDANCE',
					jr = 'UPDATE_POWER_GUIDANCE_FAIL',
					Kr = 'UPDATE_POWER_GUIDANCE_SUCCESS',
					zr = 'FETCH_FITNESS_STATS_START',
					qr = 'FETCH_FITNESS_STATS_SUCCESS',
					Qr = 'FETCH_FITNESS_STATS_ERROR',
					Xr = 'FETCH_FITNESS_STATS',
					Zr = 'RESET_POWER_GUIDANCE_DATA',
					eo = 'FETCH_LATEST_FUNCTIONAL_THRESHOLD',
					to = 'FETCH_LATEST_FUNCTIONAL_THRESHOLD_START',
					io = 'FETCH_LATEST_FUNCTIONAL_THRESHOLD_SUCCESS',
					no = 'FETCH_LATEST_FUNCTIONAL_THRESHOLD_ERROR',
					ao = 'SAVE_POWER_ZONES_FROM_USER_INFO',
					so = 'SAVE_POWER_ZONES_FROM_USER_INFO_START',
					ro = 'SAVE_POWER_ZONES_FROM_USER_INFO_SUCCESS',
					oo = 'SAVE_POWER_ZONES_FROM_USER_INFO_ERROR',
					lo = 'UPDATE_POWER_ZONES',
					co = 'UPDATE_POWER_ZONES_START',
					uo = 'UPDATE_POWER_ZONES_SUCCESS',
					po = ' UPDATE_POWER_ZONES_ERROR',
					yo = 'FETCH_ACTIVITIES',
					ho = 'REQUEST_ACTIVITIES',
					go = 'RECEIVE_ACTIVITIES',
					mo = 'FETCH_MULTIPLE_ACTIVITIES',
					Ao = 'REQUEST_MULTIPLE_ACTIVITIES',
					_o = 'RECEIVE_MULTIPLE_ACTIVITIES',
					Eo = 'REMOVE_PROFILE_PAGE_ACTIVITIES_PROFILE_IMAGE',
					To = 'RESET_ACTIVITIES',
					Co = 'FETCH_ACTIVITY_DETAILS',
					So = 'FETCH_ACTIVITY_DETAILS_BAIDU',
					Io = 'FETCH_ACTIVITY_DETAILS_SUCCESS',
					vo = 'FETCH_ACTIVITY_DETAILS_FAIL',
					fo = 'FETCH_ACTIVITY_DETAILS_METRICS_FOR_UPDATE',
					Do = 'FETCH_ACTIVITY_DETAILS_BAIDU_METRICS_FOR_UPDATE',
					No = 'FETCH_ACTIVITY_DETAILS_METRICS_FOR_UPDATE_SUCCESS',
					Ro = 'FETCH_ACTIVITY_WEATHER',
					bo = 'FETCH_ACTIVITY_DETAILS_START',
					Lo = 'FETCH_ACTIVITY_WEATHER_SUCCESS',
					Po = 'FETCH_ACTIVITY_WEATHER_FAIL',
					Oo = 'RESET_ACTIVITY_WEATHER',
					wo = 'SET_SELECTED_SURF_INDEX',
					Fo = 'FETCH_ACTIVITY_POLYLINE',
					ko = 'FETCH_ACTIVITY_POLYLINE_BAIDU',
					Uo = 'REQUEST_ACTIVITY_POLYLINE',
					Mo = 'RECEIVE_ACTIVITY_POLYLINE',
					Go = 'RESET_ACTIVITY_POLYLINE',
					xo = 'FETCH_ACTIVITY_MAP_DETAILS',
					Bo = 'FETCH_ACTIVITY_MAP_DETAILS_DONE',
					Ho = 'FETCH_ACTIVITY_MAP_DETAILS_BAIDU',
					Vo = 'FETCH_GEAR',
					Wo = 'REQUEST_GEAR',
					Jo = 'RECEIVE_GEAR',
					Yo = 'RESET_GEAR',
					$o = 'FETCH_ACTIVITIES_365_REPORT',
					jo = 'REQUEST_ACTIVITIES_365_REPORT',
					Ko = 'RECEIVE_ACTIVITIES_365_REPORT',
					zo = 'RESET_ACTIVITIES_365_REPORT',
					qo = 'SET_USER_PREFERENCE',
					Qo = 'RECEIVE_USER_PREFERENCE',
					Xo = 'REQUEST_USER_PREFERENCE',
					Zo = 'FETCH_USER_PREFERENCE_DEP',
					el = 'SET_USER_PREFERENCE_DEP',
					tl = 'FETCH_ACTIVITIES_BY_SEARCH',
					il = 'RECEIVE_ACTIVITIES_BY_SEARCH',
					nl = 'REQUEST_ACTIVITIES_BY_SEARCH',
					al = 'RECEIVE_ACTIVITIES_BY_SEARCH_ERROR',
					sl = 'RESET_ACTIVITIES_BY_SEARCH',
					rl = 'FAVORITE_ACTIVITY',
					ol = 'RECEIVE_FAVORITE_ACTIVITY',
					ll = 'DELETE_ACTIVITY_BY_SEARCH',
					cl = 'RECEIVE_DELETE_ACTIVITY_BY_SEARCH',
					dl = 'SET_SELECTED_DIVE',
					ul = 'SET_GOLF_STATS_PAGE_STATE',
					pl = 'REQUEST_SEGMENT_TYPES',
					yl = 'RECEIVE_SEGMENT_TYPES',
					hl = 'REQUEST_SURFACE_TYPES',
					gl = 'RECEIVE_SURFACE_TYPES',
					ml = 'UPDATE_SEGMENT',
					Al = 'RECEIVE_ACTIVITY_POLYLINE_FOR_SEGMENT',
					_l = 'REQUEST_ACTIVITY_POLYLINE_FOR_SEGMENT',
					El = 'REQUEST_ACTIVITY_POLYLINE_FOR_SEGMENT_FAIL',
					Tl = 'RECEIVE_ACTIVITY_POLYLINE_FOR_BAIDU_CONVERT',
					Cl = 'SELECT_SEGMENTS_TAB',
					Sl = 'REQUEST_SEGMENTS',
					Il = 'RECEIVE_SEGMENTS',
					vl = 'RECEIVE_SEGMENTS_ERROR',
					fl = 'TOGGLE_FAVORITE_SEGMENT',
					Dl = 'TOGGLE_FAVORITE_SEGMENT_IN_SEGMENT_DETAILS',
					Nl = 'ADD_SEGMENT_TO_FAVOURITES',
					Rl = 'REMOVE_SEGMENT_FROM_FAVOURITES',
					bl = 'REQUEST_GROUP_COURSES',
					Ll = 'RECEIVE_GROUP_COURSES',
					Pl = 'RESET_CALENDAR_PAGE',
					Ol = 'FETCH_ACTIVITY_SUMMARY',
					wl = 'FETCH_ACTIVITY_SUMMARY_SUCCESS',
					Fl = 'FETCH_ACTIVITY_SUMMARY_GROUPED_SUCCESS',
					kl = 'FETCH_ACTIVITY_SUMMARY_WEEKLY',
					Ul = 'FETCH_ACTIVITY_SUMMARY_WEEKLY_SUCCESS',
					Ml = 'FETCH_ACTIVITY_SUMMARY_WEEKLY_GROUPED_SUCCESS',
					Gl = 'FETCH_ACTIVITY_SUMMARY_MONTHLY',
					xl = 'FETCH_ACTIVITY_SUMMARY_MONTHLY_SUCCESS',
					Bl = 'FETCH_ACTIVITY_SUMMARY_MONTHLY_GROUPED_SUCCESS',
					Hl = 'FETCH_ACTIVITY_SUMMARY_YEARLY',
					Vl = 'FETCH_ACTIVITY_SUMMARY_YEARLY_SUCCESS',
					Wl = 'FETCH_ACTIVITY_SUMMARY_YEARLY_GROUPED_SUCCESS',
					Jl = 'FETCH_ACTIVITY_SUMMARY_STATS',
					Yl = 'FETCH_ACTIVITY_SUMMARY_STATS_ACTIVITY_SUCCESS',
					$l = 'FETCH_ACTIVITY_SUMMARY_STATS_EVENT_SUCCESS',
					jl = 'FETCH_ADAPTIVE_PLAN',
					Kl = 'FETCH_ADAPTIVE_PLAN_SUCCESS',
					zl = 'FETCH_ADAPTIVE_PLAN_ERROR',
					ql = 'FETCH_ADAPTIVE_PLAN_NEXT_WORKOUT',
					Ql = 'FETCH_ADAPTIVE_PLAN_NEXT_WORKOUT_SUCCESS',
					Xl = 'FETCH_ADAPTIVE_PLAN_NEXT_WORKOUT_ERROR',
					Zl = 'RESET_ADAPTIVE_PLAN_NEXT_WORKOUT',
					ec = 'FETCHING_ADAPTIVE_PLAN_NEXT_WORKOUT',
					tc = 'UPDATE_ADAPTIVE_PLAN_STATUS',
					ic = 'UPDATE_ADAPTIVE_PLAN_STATUS_SUCCESS',
					nc = 'UPDATE_ADAPTIVE_PLAN_STATUS_ERROR',
					ac = 'FETCH_ADAPTIVE_PLAN_CALENDAR',
					sc = 'FETCH_ADAPTIVE_PLAN_CALENDAR_SUCCESS',
					rc = 'FETCH_ADAPTIVE_PLAN_CALENDAR_ERROR',
					oc = 'FETCHING_ADAPTIVE_PLAN_CALENDAR',
					lc = 'ENABLE_CONFIRMATION_BUTTON',
					cc = 'DISABLE_CONFIRMATION_BUTTON',
					dc = 'FETCH_RESCHEDULE_DAYS',
					uc = 'FETCH_RESCHEDULE_DAYS_SUCCESS',
					pc = 'FETCH_SYSTEM_PREFERENCE',
					yc = 'REQUEST_SYSTEM_PREFERENCE',
					hc = 'RECEIVE_SYSTEM_PREFERENCE',
					gc = 'FETCH_USAGE_INDICATORS',
					mc = 'REQUEST_USAGE_INDICATORS',
					Ac = 'RECEIVE_USAGE_INDICATORS',
					_c = 'RECEIVE_USAGE_INDICATORS_ERROR',
					Ec = 'FETCH_PLAYER_GOLF_STATS',
					Tc = 'FETCH_PLAYER_GOLF_STATS_SUCCESS',
					Cc = 'FETCH_PLAYER_GOLF_STATS_FAIL',
					Sc = 'FETCH_ALLDRIVE_GOLF_STATS',
					Ic = 'FETCH_ALLDRIVE_GOLF_STATS_SUCCESS',
					vc = 'FETCH_FILTERED_DRIVE_GOLF_STATS',
					fc = 'FETCH_FILTERED_DRIVE_GOLF_STATS_SUCCESS',
					Dc = 'FETCH_ALL_APPROACH_GOLF_STATS',
					Nc = 'FETCH_ALL_APPROACH_GOLF_STATS_SUCCESS',
					Rc = 'FETCH_FILTERED_APPROACH_GOLF_STATS',
					bc = 'FETCH_FILTERED_APPROACH_GOLF_STATS_SUCCESS',
					Lc = 'SET_APPROACH_GOLF_STATS_FILTER',
					Pc = 'SET_DRIVE_GOLF_STATS_FILTER',
					Oc = 'SET_CHIP_GOLF_STATS_FILTER',
					wc = 'FETCH_GOLF_CLUBS',
					Fc = 'FETCH_GOLF_CLUBS_SUCCESS',
					kc = 'FETCH_GOLF_CLUB_TYPES',
					Uc = 'FETCH_GOLF_CLUB_TYPES_SUCCESS',
					Mc = 'FETCH_GOLF_CLUB_FLEX_TYPES',
					Gc = 'FETCH_GOLF_CLUB_FLEX_TYPES_SUCCESS',
					xc = 'FETCH_ALL_CHIP_GOLF_STATS',
					Bc = 'FETCH_ALL_CHIP_GOLF_STATS_SUCCESS',
					Hc = 'FETCH_FILTERED_CHIP_GOLF_STATS',
					Vc = 'FETCH_FILTERED_CHIP_GOLF_STATS_SUCCESS',
					Wc = 'FETCH_ALL_PUTT_GOLF_STATS',
					Jc = 'FETCH_ALL_PUTT_GOLF_STATS_SUCCESS',
					Yc = 'RECEIVE_SEGMENT_DETAILS',
					$c = 'REQUEST_SEGMENT_DETAILS',
					jc = 'RESET_SEGMENT_INFO',
					Kc = 'RECEIVE_SEGMENT_LEADERBOARD',
					zc = 'REQUEST_SEGMENT_LEADERBOARD',
					qc = 'RECEIVE_SEGMENT_LEADERBOARD_ONLY_ME',
					Qc = 'REQUEST_SEGMENT_LEADERBOARD_ONLY_ME',
					Xc = 'REQUEST_SEGMENT_LEADERBOARD_ONLY_ME_FAIL',
					Zc = 'FETCH_GROUPS',
					ed = 'FETCH_GROUPS_START',
					td = 'FETCH_GROUPS_SUCCESS',
					id = 'FETCH_GROUPS_FAIL',
					nd = 'FETCH_ADMINISTERED_GROUPS',
					ad = 'FETCH_ADMINISTERED_GROUPS_START',
					sd = 'FETCH_ADMINISTERED_GROUPS_SUCCESS',
					rd = 'FETCH_ADMINISTERED_GROUPS_FAIL',
					od = 'FETCH_GROUP_REQUESTS',
					ld = 'FETCH_GROUP_REQUESTS_START',
					cd = 'FETCH_GROUP_REQUESTS_SUCCESS',
					dd = 'FETCH_GROUP_REQUESTS_FAIL',
					ud = 'FETCH_UNHANDLED_GROUP_REQUESTS',
					pd = 'FETCH_UNHANDLED_GROUP_REQUESTS_SUCCESS',
					yd = 'FETCH_UNHANDLED_GROUP_REQUESTS_FAIL',
					hd = 'LEAVE_GROUP',
					gd = 'LEAVE_GROUP_START',
					md = 'LEAVE_GROUP_SUCCESS',
					Ad = 'LEAVE_GROUP_FAIL',
					_d = 'DELETE_GROUP',
					Ed = 'DELETE_GROUP_START',
					Td = 'DELETE_GROUP_SUCCESS',
					Cd = 'DELETE_GROUP_FAIL',
					Sd = 'SEARCH_GROUP',
					Id = 'SEARCH_GROUP_START',
					vd = 'SEARCH_GROUP_SUCCESS',
					fd = 'SEARCH_GROUP_FAIL',
					Dd = 'UPDATE_GROUP_SEARCH_KEYWORD',
					Nd = 'JOIN_GROUP',
					Rd = 'JOIN_GROUP_START',
					bd = 'JOIN_GROUP_SUCCESS',
					Ld = 'JOIN_GROUP_FAIL',
					Pd = 'CANCEL_REQUEST_JOIN_GROUP',
					Od = 'CANCEL_REQUEST_JOIN_GROUP_SUCCESS',
					wd = 'CANCEL_REQUEST_JOIN_GROUP_FAIL',
					Fd = 'SET_GROUP_LIST_PAGE_TAB',
					kd = 'RESET_GROUPS',
					Ud = 'FETCH_GROUP',
					Md = 'FETCH_GROUP_SUCCESS',
					Gd = 'FETCH_GROUP_FAIL',
					xd = 'SET_GROUP_PAGE_TAB',
					Bd = 'SET_GROUP_PAGE_FEED_TAB',
					Hd = 'SET_GROUP_PAGE_FEED_TAB_START',
					Vd = 'SAVE_GROUP_ANNOUNCEMENT',
					Wd = 'SAVE_GROUP_ANNOUNCEMENT_SUCCESS',
					Jd = 'SAVE_GROUP_ANNOUNCEMENT_FAILED',
					Yd = 'DELETE_GROUP_ANNOUNCEMENT',
					$d = 'DELETE_GROUP_ANNOUNCEMENT_SUCCESS',
					jd = 'DELETE_GROUP_ANNOUNCEMENT_FAILED',
					Kd = 'OPEN_DELETE_CONFIRM_DIALOG',
					zd = 'CLOSE_DELETE_CONFIRM_DIALOG',
					qd = 'CONFIRM_DELETE_CONFIRM_DIALOG',
					Qd = 'SAVE_GROUP_POST',
					Xd = 'SAVE_GROUP_POST_SUCCESS',
					Zd = 'SAVE_GROUP_POST_FAILED',
					eu = 'DELETE_GROUP_POST',
					tu = 'DELETE_GROUP_POST_SUCCESS',
					iu = 'DELETE_GROUP_POST_FAILED',
					nu = 'REMOVE_IMAGE_FROM_GROUP_POST',
					au = 'REMOVE_IMAGE_FROM_GROUP_POST_START',
					su = 'REMOVE_IMAGE_FROM_GROUP_POST_END',
					ru = 'REMOVE_GROUP_PROFILE_IMAGE',
					ou = 'REMOVE_IMAGE_FROM_GROUP_ACTIVITY_FEED',
					lu = 'FETCH_GROUP_CONVERSATION_LIKERS',
					cu = 'FETCH_GROUP_CONVERSATION_LIKERS_DONE',
					du = 'UPDATE_GROUP_CONVERSATION_LIKE',
					uu = 'UPDATE_GROUP_CONVERSATION_LIKE_START',
					pu = 'UPDATE_GROUP_CONVERSATION_LIKE_DONE',
					yu = 'FETCH_GROUP_POSTS',
					hu = 'FETCH_GROUP_POSTS_SUCCESS',
					gu = 'FETCH_GROUP_POSTS_FAILED',
					mu = 'FETCH_GROUP_POST',
					Au = 'FETCH_GROUP_POST_START',
					_u = 'FETCH_GROUP_POST_SUCCESS',
					Eu = 'FETCH_GROUP_POST_FAILED',
					Tu = 'FETCH_GROUP_COMMENTS',
					Cu = 'FETCH_GROUP_COMMENTS_SUCCESS',
					Su = 'FETCH_GROUP_COMMENTS_FAILED',
					Iu = 'SAVE_GROUP_COMMENT',
					vu = 'SAVE_GROUP_COMMENT_SUCCESS',
					fu = 'SAVE_GROUP_COMMENT_FAILED',
					Du = 'DELETE_GROUP_COMMENT',
					Nu = 'DELETE_GROUP_COMMENT_SUCCESS',
					Ru = 'DELETE_GROUP_COMMENT_FAILED',
					bu = 'EDIT_GROUP_COMMENT',
					Lu = 'EDIT_GROUP_COMMENT_START',
					Pu = 'EDIT_GROUP_COMMENT_SUCCESS',
					Ou = 'EDIT_GROUP_COMMENT_FAILED',
					wu = 'FETCH_GROUP_COMMENT_LIKERS',
					Fu = 'FETCH_GROUP_COMMENT_LIKERS_DONE',
					ku = 'UPDATE_GROUP_COMMENT_LIKE',
					Uu = 'UPDATE_GROUP_COMMENT_LIKE_START',
					Mu = 'UPDATE_GROUP_COMMENT_LIKE_DONE',
					Gu = 'CONFIRM_LEAVE_GROUP',
					xu = 'INIT_GROUP_LEADERBOARD',
					Bu = 'SET_GROUP_LEADERBOARD_TYPE',
					Hu = 'SET_GROUP_LEADERBOARD_VIEW_PREVIOUS',
					Vu = 'FETCH_GROUP_LEADERBOARD',
					Wu = 'FETCH_GROUP_LEADERBOARD_SUCCESS',
					Ju = 'FETCH_GROUP_LEADERBOARD_FAILED',
					Yu = 'INITIALIZE_GROUP_SINGLE_PAGE',
					$u = 'INITIALIZE_GROUP_SINGLE_PAGE_SUCCESS',
					ju = 'INITIALIZE_GROUP_SINGLE_PAGE_FAILED',
					Ku = 'FETCH_GROUP_ALL_FEEDS',
					zu = 'FETCH_GROUP_ALL_FEEDS_START',
					qu = 'FETCH_GROUP_ALL_FEEDS_SUCCESS',
					Qu = 'FETCH_GROUP_ALL_FEEDS_FAILED',
					Xu = 'FETCH_GROUP_ACTIVITY_FEEDS',
					Zu = 'FETCH_GROUP_ACTIVITY_FEEDS_SUCCESS',
					ep = 'FETCH_GROUP_ACTIVITY_FEEDS_FAILED',
					tp = 'FETCH_GROUP_ACTIVITY_FEED',
					ip = 'FETCH_GROUP_ACTIVITY_FEED_START',
					np = 'FETCH_GROUP_ACTIVITY_FEED_SUCCESS',
					ap = 'FETCH_GROUP_ACTIVITY_FEED_FAILED',
					sp = 'RESET_GROUP_SHOW_ERROR_ALERT',
					rp = 'RESET_GROUP_POST_ERROR',
					op = 'RESET_GROUP_ANNOUNCEMENT_ERROR',
					lp = 'RESET_GROUP_FEED_ANIMATE_STATE',
					cp = 'RESET_GROUP_COMMENT_FOCUS',
					dp = 'UPLOAD_POST_IMAGE',
					up = 'UPLOAD_POST_IMAGE_START',
					pp = 'UPLOAD_POST_IMAGE_SUCCESS',
					yp = 'UPLOAD_POST_IMAGE_FAILED',
					hp = 'REMOVE_POST_IMAGE',
					gp = 'REMOVE_POST_IMAGES',
					mp = 'UPDATE_POST_IMAGES',
					Ap = 'UPDATE_POST_IMAGES_LIMIT_ERROR',
					_p = 'RESET_POST_IMAGES_UPLOAD_RETRY_HINT',
					Ep = 'DELETE_POST_IMAGE',
					Tp = 'DELETE_POST_IMAGE_SUCCESS',
					Cp = 'DELETE_POST_IMAGE_FAILED',
					Sp = 'FETCH_GROUP_CHALLENGES',
					Ip = 'FETCH_GROUP_CHALLENGES_START',
					vp = 'FETCH_GROUP_CHALLENGES_SUCCESS',
					fp = 'FETCH_GROUP_CHALLENGES_FAILED',
					Dp = 'UPDATE_GROUP_CHALLENGE',
					Np = 'UPDATE_GROUP_CHALLENGE_START',
					Rp = 'UPDATE_GROUP_CHALLENGE_SUCCESS',
					bp = 'UPDATE_GROUP_CHALLENGE_FAILED',
					Lp = 'DELETE_GROUP_CHALLENGE',
					Pp = 'DELETE_GROUP_CHALLENGE_START',
					Op = 'DELETE_GROUP_CHALLENGE_SUCCESS',
					wp = 'DELETE_GROUP_CHALLENGE_FAILED',
					Fp = 'UPDATE_GROUP_CHALLENGE_UUID',
					kp = 'UPDATE_GROUP_CHALLENGE_VIEW',
					Up = 'FETCH_GROUP_CHALLENGE_LEADERBOARD',
					Mp = 'FETCH_GROUP_CHALLENGE_LEADERBOARD_START',
					Gp = 'FETCH_GROUP_CHALLENGE_LEADERBOARD_SUCCESS',
					xp = 'FETCH_GROUP_CHALLENGE_LEADERBOARD_FAILED',
					Bp = 'GROUP_PAGE_JOIN_GROUP',
					Hp = 'GROUP_PAGE_JOIN_GROUP_SUCCESS',
					Vp = 'GROUP_PAGE_REQUEST_JOIN_GROUP',
					Wp = 'GROUP_PAGE_CANCEL_REQUEST_JOIN_GROUP',
					Jp = 'GROUP_PAGE_ACCEPT_INVITATION',
					Yp = 'GROUP_PAGE_ACCEPT_INVITATION_SUCCESS',
					$p = 'UPDATE_GROUP_MEMBER_REQUEST',
					jp = 'UPDATE_GROUP_MEMBERS',
					Kp = 'SORT_GROUP_MEMBERS',
					zp = 'UPDATE_GROUP_INVITES',
					qp = 'UPDATE_GROUP_USER_CONNECTIONS',
					Qp = 'UPDATE_GROUP_USER_CONNECTION',
					Xp = 'UPDATE_GROUP_USER_CONNECTION_DONE',
					Zp = 'GROUP_PAGE_SEARCH_USER',
					ey = 'UPDATE_GROUP_SEARCH_USER_CONNECTION_STATUS',
					ty = 'GROUP_PAGE_SEARCH_USER_DONE',
					iy = 'GROUP_PAGE_UNBLOCK_USER',
					ny = 'GROUP_PAGE_UNBLOCK_USER_DONE',
					ay = 'GROUP_PAGE_CANCEL_INVITE_USER',
					sy = 'GROUP_PAGE_CANCEL_INVITE_USER_DONE',
					ry = 'GROUP_PAGE_INVITE_USER',
					oy = 'GROUP_PAGE_INVITE_USER_DONE',
					ly = 'GROUP_PAGE_SET_INVITE_ERROR_DIALOG_STATE',
					cy = 'UPDATE_GROUP_PAGE_SHOW_ERROR_ALERT',
					dy = 'GROUP_PAGE_INIT_COURSE_TAB',
					uy = 'GROUP_PAGE_INIT_COURSE_TAB_DONE',
					py = 'GROUP_PAGE_FETCH_COURSE_DETAIL',
					yy = 'GROUP_PAGE_FETCH_COURSE_DETAIL_DONE',
					hy = 'GROUP_PAGE_ADD_GROUP_COURSE',
					gy = 'GROUP_PAGE_ADD_GROUP_COURSE_DONE',
					my = 'GROUP_PAGE_DELETE_GROUP_COURSE',
					Ay = 'GROUP_PAGE_DELETE_GROUP_COURSE_DONE',
					_y = 'GROUP_PAGE_CLEAR_LAST_DELETE_COURSE_NAME',
					Ey = 'GROUP_PAGE_CLOSE_DELETE_COURSE_ERROR_DIALOG',
					Ty = 'RESET_GROUP_PAGE',
					Cy = 'REMOVE_GROUP_MEMBER',
					Sy = 'REMOVE_GROUP_MEMBER_SUCCESS',
					Iy = 'REMOVE_GROUP_MEMBER_FAILED',
					vy = 'UPDATE_GROUP_MEMBER_ROLE',
					fy = 'UPDATE_GROUP_MEMBER_ROLE_SUCCESS',
					Dy = 'UPDATE_GROUP_MEMBER_ROLE_FAILED',
					Ny = 'TRANSFER_GROUP_OWNERSHIP',
					Ry = 'TRANSFER_GROUP_OWNERSHIP_SUCCESS',
					by = 'TRANSFER_GROUP_OWNERSHIP_FAILED',
					Ly = 'GROUP_PAGE_OPEN_REPORT_GROUP_PHOTO_DIALOG',
					Py = 'GROUP_PAGE_CLOSE_REPORT_GROUP_PHOTO_DIALOG',
					Oy = 'GROUP_PAGE_SUBMIT_REPORT_GROUP_PHOTO',
					wy = 'GROUP_PAGE_SUBMIT_REPORT_GROUP_PHOTO_DONE',
					Fy = 'GROUP_PAGE_UPDATE_GROUP_SETTING',
					ky = 'GROUP_PAGE_RESET_SHOW_CHANGES_SAVED',
					Uy = 'DELETE_SEGMENT',
					My = 'DELETED_SEGMENT',
					Gy = 'FETCH_GROUP_MEMBER',
					xy = 'START_FETCHING_GROUP_MEMBER',
					By = 'FETCH_GROUP_MEMBER_ERROR',
					Hy = 'RECEIVED_GROUP_MEMBER_DATA',
					Vy = 'REQUEST_FAVORITE_GROUP_SEGMENT',
					Wy = 'RECEIVE_FAVORITE_GROUP_SEGMENT',
					Jy = 'RESET_FAVORITE_GROUP_SEGMENT',
					Yy = 'DELETE_FAVORITE_GROUP_SEGMENT',
					$y = 'UPDATE_FAVORITE_GROUP_SEGMENT',
					jy = 'SET_OPENED_FILTER',
					Ky = 'RESET_OPENED_FILTER',
					zy = 'SET_SEGMENTS_FILTERS',
					qy = 'RESET_SEGMENT_PAGE',
					Qy = 'RECEIVE_SEGMENT_ACTIVITY',
					Xy = 'FETCH_ADAPTIVE_PLAN_FEED',
					Zy = 'FETCHING_ADAPTIVE_PLAN_FEED',
					eh = 'FETCH_ADAPTIVE_PLAN_FEED_SUCCESS',
					th = 'FETCH_ADAPTIVE_PLAN_FEED_ERROR',
					ih = 'FETCH_CONTENTFUL_DATA_ARTICLE',
					nh = 'FETCH_CONTENTFUL_DATA_ARTICLE_SUCCESS',
					ah = 'FETCH_CONTENTFUL_DATA_ARTICLE_FAILED',
					sh = 'FETCHING_CONTENTFUL_DATA_ARTICLE',
					rh = 'CONTENTFUL_LOAD_CLIENT_PARTIAL',
					oh = 'CONTENTFUL_LOAD_CLIENT_PARTIAL_SUCCESS',
					lh = 'CONTENTFUL_LOAD_CLIENT_PARTIAL_FAILED',
					ch = 'FETCHING_CONTENTFUL_LOAD_CLIENT_PARTIAL',
					dh = 'FETCH_CONTENTFUL_VIDEO',
					uh = 'FETCH_CONTENTFUL_VIDEO_SUCCESS',
					ph = 'FETCH_CONTENTFUL_VIDEO_FAILED',
					yh = 'FETCHING_CONTENTFUL_VIDEO',
					hh = 'SUBMIT_ACTIVITY_FEEDBACK',
					gh = 'SUBMIT_ACTIVITY_FEEDBACK_SUCCESS',
					mh = 'REQUEST_ATP_TYPES',
					Ah = 'REQUEST_ATP_TYPES_SUCCESS',
					_h = 'REQUEST_ATP_ACTIVE',
					Eh = 'REQUEST_ATP_ACTIVE_SUCCESS',
					Th = 'REQUEST_ATP_COMPLETED',
					Ch = 'REQUEST_ATP_COMPLETED_SUCCESS',
					Sh = 'FETCH_SYSTEM_PREFERENCE_WITH_OPTIONS',
					Ih = 'UPDATE_WORKOUT_DATE',
					vh = 'UPDATE_WORKOUT_SCHEDULE_DATE_SUCCESS',
					fh = 'FETCH_COACH_PLAN',
					Dh = 'FETCH_COACH_PLAN_SUCCESS',
					Nh = 'FETCH_COACH_PLAN_ERROR',
					Rh = 'FETCH_GDPR_FEATURE',
					bh = 'FETCH_GDPR_FEATURE_RESET',
					Lh = 'FETCH_GDPR_FEATURE_SUCCESS',
					Ph = 'FETCH_GDPR_FEATURE_FAIL',
					Oh = 'POST_GDPR_FEATURE_OPT_IN',
					wh = 'POST_GDPR_FEATURE_OPT_OUT',
					Fh = 'FETCH_GDPR_CONSENT_TEXT',
					kh = 'FETCH_GDPR_CONSENT_TEXT_SUCCESS',
					Uh = 'FETCH_GDPR_CONSENT_TEXT_FAIL',
					Mh = 'FETCH_GDPR_REVOKE_CONSENT',
					Gh = 'FETCH_GDPR_REVOKE_CONSENT_SUCCESS',
					xh = 'FETCH_GDPR_REVOKE_CONSENT_FAIL',
					Bh = 'FETCH_GDPR_GRANT_CONSENT',
					Hh = 'FETCH_GDPR_GRANT_CONSENT_SUCCESS',
					Vh = 'RESET_GDPR_GRANT_CONSENT',
					Wh = 'FETCH_GDPR_GRANT_CONSENT_FAIL',
					Jh = 'SET_GDPR_FEATURE_ALERT',
					Yh = 'FETCH_COACH_INFO',
					$h = 'FETCH_COACH_INFO_SUCCESS',
					jh = 'FETCH_COACH_INFO_FAILED',
					Kh = 'REQUEST_WIDGET_STATES',
					zh = 'FETCH_WIDGET_STATES',
					qh = 'FETCH_WIDGET_STATES_SUCCESS',
					Qh = 'FETCH_WIDGET_DEFINITIONS',
					Xh = 'FETCH_WIDGET_DEFINITIONS_SUCCESS',
					Zh = 'ADD_WIDGET_STATE',
					eg = 'ADD_WIDGET_STATE_SUCCESS',
					tg = 'ADD_WIDGET_STATE_FAILED',
					ig = 'FETCH_PULSE_OX_ACCLIMATION',
					ng = 'FETCH_PULSE_OX_ACCLIMATION_SUCCESS',
					ag = 'FETCH_PULSE_OX_ACCLIMATION_FAIL',
					sg = 'FETCH_ACTIVITIES_FOR_DAILY_SUMMARY',
					rg = 'FETCH_ACTIVITIES_FOR_DAILY_SUMMARY_FETCHING',
					og = 'FETCH_ACTIVITIES_FOR_DAILY_SUMMARY_SUCCESS',
					lg = 'FETCH_ACTIVITIES_FOR_DAILY_SUMMARY_FAIL',
					cg = 'FETCH_ACTIVITIES_LIST',
					dg = 'FETCH_ACTIVITIES_LIST_SUCCESS',
					ug = 'FETCH_ACTIVITIES_LIST_FETCHING',
					pg = 'FETCH_ACTIVITIES_LIST_FAIL',
					yg = 'FETCH_MERGED_SUMMARY',
					hg = 'FETCH_MERGED_SUMMARY_FETCHING',
					gg = 'FETCH_MERGED_SUMMARY_SUCCESS',
					mg = 'FETCH_MERGED_SUMMARY_FAIL',
					Ag = 'SAVE_MERGED_SUMMARY',
					_g = 'SAVE_MERGED_SUMMARY_SUCCESS',
					Eg = 'FETCH_MERGED_SUMMARY_COUNT',
					Tg = 'FETCH_MERGED_SUMMARY_COUNT_SUCCESS',
					Cg = 'FETCH_MERGED_SUMMARY_COUNT_FAIL',
					Sg = 'FETCH_WELLNESS_DAILY_SLEEP_DATA',
					Ig = 'FETCH_WELLNESS_DAILY_SLEEP_DATA_FETCHING',
					vg = 'FETCH_WELLNESS_DAILY_SLEEP_DATA_SUCCESS',
					fg = 'FETCH_WELLNESS_DAILY_SLEEP_DATA_FAIL',
					Dg = 'UPDATE_SLEEP_DTO',
					Ng = 'UPDATE_SLEEP_DTO_SUCCESS',
					Rg = 'UPDATE_SLEEP_DTO_FAIL',
					bg = 'UPDATE_WELLNESS_SLEEP_NOTE',
					Lg = 'UPDATE_WELLNESS_SLEEP_NOTE_START',
					Pg = 'UPDATE_WELLNESS_SLEEP_NOTE_SUCCESS',
					Og = 'UPDATE_WELLNESS_SLEEP_NOTE_FAIL',
					wg = 'UPDATE_WELLNESS_SLEEP_WINDOW',
					Fg = 'UPDATE_WELLNESS_SLEEP_WINDOW_SUCCESS',
					kg = 'UPDATE_WELLNESS_SLEEP_WINDOW_FAIL',
					Ug = 'FETCH_DAILY_MOVEMENT',
					Mg = 'FETCH_DAILY_MOVEMENT_FETCHING',
					Gg = 'FETCH_DAILY_MOVEMENT_SUCCESS',
					xg = 'FETCH_DAILY_MOVEMENT_FAIL',
					Bg = 'FETCH_DAILY_HEART_RATE',
					Hg = 'FETCH_DAILY_HEART_RATE_SUCCESS',
					Vg = 'FETCH_DAILY_HEART_RATE_FAIL',
					Wg = 'FETCH_HEART_RATE_ZONES',
					Jg = 'FETCH_HEART_RATE_ZONES_SUCCESS',
					Yg = 'FETCH_HEART_RATE_ZONES_FAIL',
					$g = 'FETCH_BIOMETRIC_POWER_ZONES',
					jg = 'FETCH_BIOMETRIC_POWER_ZONES_SUCCESS',
					Kg = 'FETCH_BIOMETRIC_POWER_ZONES_FAIL',
					zg = 'FETCH_DAILY_MOVE_IQ_EVENTS',
					qg = 'FETCH_DAILY_MOVE_IQ_EVENTS_FETCHING',
					Qg = 'FETCH_DAILY_MOVE_IQ_EVENTS_SUCCESS',
					Xg = 'FETCH_DAILY_MOVE_IQ_EVENTS_FAIL',
					Zg = 'DELETE_MOVE_IQ_EVENT',
					em = 'DELETE_MOVE_IQ_EVENT_SUCCESS',
					tm = 'DELETE_MOVE_IQ_EVENT_FAIL',
					im = 'FETCH_LAST_SYNC_TIMESTAMP',
					nm = 'FETCH_LAST_SYNC_TIMESTAMP_SUCCESS',
					am = 'FETCH_LAST_SYNC_TIMESTAMP_FAIL',
					sm = 'SET_PAGE_STATUS',
					rm = 'FETCH_AUTO_DETECTED_EVENTS',
					om = 'FETCH_AUTO_DETECTED_EVENTS_SUCCESS',
					lm = 'FETCH_AUTO_DETECTED_EVENTS_FAIL',
					cm = 'FETCH_WELLNESS_DAILY_STRESS_DATA',
					dm = 'FETCH_WELLNESS_DAILY_STRESS_DATA_SUCCESS',
					um = 'FETCH_WELLNESS_DAILY_STRESS_DATA_FAIL',
					pm = 'FETCH_DEVICE_LIST',
					ym = 'FETCH_DEVICE_LIST_SUCCESS',
					hm = 'FETCH_DEVICE_LIST_FAIL',
					gm = 'FETCH_REGISTERED_DEVICE_LIST',
					mm = 'FETCH_REGISTERED_DEVICE_LIST_FETCHING',
					Am = 'FETCH_REGISTERED_DEVICE_LIST_SUCCESS',
					_m = 'FETCH_REGISTERED_DEVICE_LIST_FAIL',
					Em = 'FETCH_HISTORICAL_DEVICE_LIST',
					Tm = 'FETCH_HISTORICAL_DEVICE_LIST_FETCHING',
					Cm = 'FETCH_HISTORICAL_DEVICE_LIST_SUCCESS',
					Sm = 'FETCH_HISTORICAL_DEVICE_LIST_FAIL',
					Im = 'FETCH_DEVICE_BETA_SOFTWARE_INFO',
					vm = 'FETCH_DEVICE_BETA_SOFTWARE_INFO_FETCHING',
					fm = 'FETCH_DEVICE_BETA_SOFTWARE_INFO_SUCCESS',
					Dm = 'FETCH_DEVICE_BETA_SOFTWARE_INFO_FAIL',
					Nm = 'FETCH_DEVICE_INFO',
					Rm = 'FETCH_DEVICE_INFO_START',
					bm = 'FETCH_DEVICE_INFO_SUCCESS',
					Lm = 'FETCH_DEVICE_INFO_FAIL',
					Pm = 'FETCH_USER_DEVICE_INFO',
					Om = 'FETCH_USER_DEVICE_INFO_START',
					wm = 'FETCH_USER_DEVICE_INFO_SUCCESS',
					Fm = 'FETCH_USER_DEVICE_INFO_FAIL',
					km = 'FETCH_DEVICE_INFO_BY_PART_NUMBER',
					Um = 'FETCH_DEVICE_INFO_BY_PART_NUMBER_START',
					Mm = 'FETCH_DEVICE_INFO_BY_PART_NUMBER_SUCCESS',
					Gm = 'FETCH_DEVICE_INFO_BY_PART_NUMBER_FAIL',
					xm = 'FETCH_DEVICE_BY_HEALTH_DEVICE_ID',
					Bm = 'FETCH_DEVICE_BY_HEALTH_DEVICE_ID_START',
					Hm = 'FETCH_DEVICE_BY_HEALTH_DEVICE_ID_SUCCESS',
					Vm = 'FETCH_DEVICE_BY_HEALTH_DEVICE_ID_FAIL',
					Wm = 'FETCH_HYDRATION_DATA',
					Jm = 'FETCH_HYDRATION_DATA_FETCHING',
					Ym = 'FETCH_HYDRATION_DATA_SUCCESS',
					$m = 'FETCH_HYDRATION_DATA_FAIL',
					jm = 'UPDATE_HYDRATION_LEVEL',
					Km = 'UPDATE_HYDRATION_LEVEL_UPDATING',
					zm = 'UPDATE_HYDRATION_LEVEL_SUCCESS',
					qm = 'UPDATE_HYDRATION_LEVEL_ERROR',
					Qm = 'RESET_HYDRATION',
					Xm = 'RESET_HYDRATION_UPDATE',
					Zm = 'UPDATE_HYDRATION_ALL_DATA',
					eA = 'UPDATE_HYDRATION_ALL_DATA_UPDATING',
					tA = 'UPDATE_HYDRATION_ALL_DATA_SUCCESS',
					iA = 'UPDATE_HYDRATION_ALL_DATA_ERROR',
					nA = 'FETCH_USER_SETTINGS',
					aA = 'FETCH_USER_SETTINGS_FETCHING',
					sA = 'FETCH_USER_SETTINGS_SUCCESS',
					rA = 'FETCH_USER_SETTINGS_FAIL',
					oA = 'UPDATE_USER_SETTINGS',
					lA = 'UPDATE_USER_SETTINGS_UPDATING',
					cA = 'UPDATE_USER_SETTINGS_SUCCESS',
					dA = 'UPDATE_USER_SETTINGS_ERROR',
					uA = 'UPDATE_USER_SETTINGS_MCT',
					pA = 'UPDATE_USER_SETTINGS_MCT_SUCCESS',
					yA = 'UPDATE_USER_SETTINGS_MCT_ERROR',
					hA = 'RESET_USER_SETTINGS',
					gA = 'RESET_USER_SETTINGS_UPDATE',
					mA = 'FETCH_USER_PROFILE_BASE',
					AA = 'FETCH_USER_PROFILE_BASE_FETCHING',
					_A = 'FETCH_USER_PROFILE_BASE_SUCCESS',
					EA = 'FETCH_USER_PROFILE_BASE_FAIL',
					TA = 'FETCH_VIEWER_USER_PREFERENCES',
					CA = 'FETCH_VIEWER_USER_PREFERENCES_FETCHING',
					SA = 'FETCH_VIEWER_USER_PREFERENCES_SUCCESS',
					IA = 'FETCH_VIEWER_USER_PREFERENCES_FAIL',
					vA = 'SET_VIEWER_USER_PREFERENCES',
					fA = 'UPDATE_VIEWER_USER_PREFERENCES',
					DA = 'UPDATE_VIEWER_USER_PREFERENCES_UPDATING',
					NA = 'UPDATE_VIEWER_USER_PREFERENCES_SUCCESS',
					RA = 'UPDATE_VIEWER_USER_PREFERENCES_FAIL',
					bA = 'FETCH_STRAVA_ACCESS',
					LA = 'FETCH_STRAVA_ACCESS_FETCHING',
					PA = 'FETCH_STRAVA_ACCESS_SUCCESS',
					OA = 'FETCH_STRAVA_ACCESS_FAIL',
					wA = 'UPDATE_STRAVA_ACCESS',
					FA = 'UPDATE_STRAVA_ACCESS_UPDATING',
					kA = 'UPDATE_STRAVA_ACCESS_SUCCESS',
					UA = 'UPDATE_STRAVA_ACCESS_FAIL',
					MA = 'FETCH_STRAVA_CONSUMER_DATA',
					GA = 'FETCH_STRAVA_CONSUMER_DATA_FETCHING',
					xA = 'FETCH_STRAVA_CONSUMER_DATA_SUCCESS',
					BA = 'FETCH_STRAVA_CONSUMER_DATA_FAIL',
					HA = 'FETCH_STRAVA_DEVICE_STATUS',
					VA = 'FETCH_STRAVA_DEVICE_STATUS_FETCHING',
					WA = 'FETCH_STRAVA_DEVICE_STATUS_SUCCESS',
					JA = 'FETCH_STRAVA_DEVICE_STATUS_FAIL',
					YA = 'FETCH_INSIGHTS_LIST',
					$A = 'FETCH_INSIGHTS_LIST_FETCHING',
					jA = 'FETCH_INSIGHTS_LIST_SUCCESS',
					KA = 'FETCH_INSIGHTS_LIST_FAIL',
					zA = 'FETCH_INSIGHT_DATA',
					qA = 'FETCH_INSIGHT_DATA_FETCHING',
					QA = 'FETCH_INSIGHT_DATA_SUCCESS',
					XA = 'FETCH_INSIGHT_DATA_FAIL',
					ZA = 'UPDATE_INSIGHT_STATUS',
					e_ = 'UPDATE_INSIGHT_STATUS_UPDATING',
					t_ = 'UPDATE_INSIGHT_STATUS_SUCCESS',
					i_ = 'UPDATE_INSIGHT_STATUS_FAIL',
					n_ = 'FETCH_DEMOGRAPHIC_SELECTIONS',
					a_ = 'FETCH_DEMOGRAPHIC_SELECTIONS_FETCHING',
					s_ = 'FETCH_DEMOGRAPHIC_SELECTIONS_SUCCESS',
					r_ = 'FETCH_DEMOGRAPHIC_SELECTIONS_FAIL',
					o_ = 'FETCH_DEMOGRAPHIC_COMPARE',
					l_ = 'FETCH_DEMOGRAPHIC_COMPARE_FETCHING',
					c_ = 'FETCH_DEMOGRAPHIC_COMPARE_SUCCESS',
					d_ = 'FETCH_DEMOGRAPHIC_COMPARE_FAIL',
					u_ = 'FETCH_DEMOGRAPHIC_COMPARE_PREFERENCES',
					p_ = 'FETCH_DEMOGRAPHIC_COMPARE_PREFERENCES_FETCHING',
					y_ = 'FETCH_DEMOGRAPHIC_COMPARE_PREFERENCES_SUCCESS',
					h_ = 'FETCH_DEMOGRAPHIC_COMPARE_PREFERENCES_FAIL',
					g_ = 'UPDATE_DEMOGRAPHIC_COMPARE_PREFERENCES',
					m_ = 'UPDATE_DEMOGRAPHIC_COMPARE_PREFERENCES_UPDATING',
					A_ = 'UPDATE_DEMOGRAPHIC_COMPARE_PREFERENCES_SUCCESS',
					__ = 'UPDATE_DEMOGRAPHIC_COMPARE_PREFERENCES_FAIL',
					E_ = 'FETCH_STEPS_LIFETIME_TOTALS',
					T_ = 'FETCH_STEPS_LIFETIME_TOTALS_SUCCESS',
					C_ = 'FETCH_STEPS_LIFETIME_TOTALS_FAIL',
					S_ = 'FETCH_FAVORITE_COURSES',
					I_ = 'SET_COURSE_TO_FAVORITE',
					v_ = 'SET_COURSE_TO_FAVORITE_SUCCESS',
					f_ = 'SET_COURSE_TO_FAVORITE_FAIL',
					D_ = 'REMOVE_COURSE_FROM_FAVORITE',
					N_ = 'REMOVE_COURSE_FROM_FAVORITE_SUCCESS',
					R_ = 'REMOVE_COURSE_FROM_FAVORITE_FAIL',
					b_ = 'RESET_CHANGING_FAVORITE_COURSE_STATUS_FAIL',
					L_ = 'FETCH_FAVORITE_COURSES_SUCCESS',
					P_ = 'FETCH_FAVORITE_COURSES_FAIL',
					O_ = 'DELETE_COURSE_START',
					w_ = 'DELETE_COURSE_SUCCESS',
					F_ = 'DELETE_COURSE_ERROR',
					k_ = 'RESET_DELETE_COURSE_ERROR_STATUS',
					U_ = 'REQUEST_NEARBY_COURSES',
					M_ = 'FETCH_NEARBY_COURSES_SUCCESS',
					G_ = 'FETCH_NEARBY_COURSES_ERROR',
					x_ = 'RESET_NEARBY_COURSES_ERROR',
					B_ = 'DUPLICATE_COURSE',
					H_ = 'DUPLICATE_COURSE_START',
					V_ = 'DUPLICATE_COURSE_SUCCESS',
					W_ = 'DUPLICATE_COURSE_ERROR',
					J_ = 'FETCH_GEOPOINTS_FOR_COURSES_MINIMAP',
					Y_ = 'FETCH_GEOPOINTS_FOR_COURSES_MINIMAP_START',
					$_ = 'FETCH_GEOPOINTS_FOR_COURSES_MINIMAP_SUCCESS',
					j_ = 'FETCH_GEOPOINTS_FOR_COURSES_MINIMAP_ERROR',
					K_ = 'RESET_GEOPOINTS_FOR_COURSES_MINIMAP_LIST',
					z_ = 'REMOVE_CACHED_MINIMAP_ROUTE_BY_IDS',
					q_ = 'SET_COURSES_LIST_SORT_VALUE',
					Q_ = 'RESET_COURSES_LIST_SORT_VALUE',
					X_ = 'SET_COURSES_LIST_FILTER_VALUE',
					Z_ = 'RESET_COURSES_LIST_FILTER_VALUE',
					eE = 'SET_TRAILS_LIST_NEARBY_SORT_VALUE',
					tE = 'SET_TRAILS_LIST_SAVED_SORT_VALUE',
					iE = 'SET_TRAILS_LIST_NEARBY_FILTER_VALUE',
					nE = 'SET_TRAILS_LIST_SAVED_FILTER_VALUE',
					aE = 'SET_TRAILS_LIST_NEARBY',
					sE = 'SET_TRAILS_LIST_SAVED',
					rE = 'ADD_TRAIL_TO_FAVORITES',
					oE = 'REMOVE_TRAIL_FROM_FAVORITES',
					lE = 'RESET_FAVORITE_TRAILS',
					cE = 'SET_FAVORITES_NOTIFICATION_DATA',
					dE = 'SET_SUGGEST_EDIT_MODAL_STATUS',
					uE = 'SET_REPORT_ISSUE_MODAL_STATUS',
					pE = 'SET_SUBMIT_REVIEW_MODAL_STATUS',
					yE = 'SET_STAR_RATING_VALUE',
					hE = 'SET_TRAIL_REVIEW_SORT_VALUE',
					gE = 'SET_SELECTED_TRAIL_REVIEW',
					mE = 'SET_SUBMIT_REVIEW_PHOTOS',
					AE = 'SET_CENTER_LOCATION',
					_E = 'SET_SEARCHED_LOCATION',
					EE = 'SET_SHARE_REVIEW_MODAL_STATUS',
					TE = 'SET_SEARCH_ADDITIONAL_DATA',
					CE = 'CONFIRM_ELEVATION_WAS_UPDATED_BY_API_FOR_COURSE',
					SE = 'SET_PACEPRO_CREATE_COURSE',
					IE = 'SET_MAP_BOUNDING_BOX',
					vE = 'RESET_MAP_BOUNDING_BOX',
					fE = 'SET_PACEPRO_CREATE_DISTANCE',
					DE = 'SET_PACEPRO_CREATE_COURSE_FROM_EVENT',
					NE = 'REQUEST_COURSE_MAP_MATCH',
					RE = 'REQUEST_COURSE_MAP_MATCH_DONE',
					bE = 'RESET_COURSE_MAP_MATCH_STATUS',
					LE = 'FETCH_USER_STATS_WELLNESS_DAILY',
					PE = 'FETCH_USER_STATS_WELLNESS_DAILY_FETCHING',
					OE = 'FETCH_USER_STATS_WELLNESS_DAILY_SUCCESS',
					wE = 'FETCH_USER_STATS_WELLNESS_DAILY_FAIL',
					FE = 'FETCH_USER_STATS_WELLNESS_WEEKLY',
					kE = 'FETCH_USER_STATS_WELLNESS_WEEKLY_FETCHING',
					UE = 'FETCH_USER_STATS_WELLNESS_WEEKLY_SUCCESS',
					ME = 'FETCH_USER_STATS_WELLNESS_WEEKLY_FAIL',
					GE = 'FETCH_USER_STATS_WELLNESS_MONTHLY',
					xE = 'FETCH_USER_STATS_WELLNESS_MONTHLY_FETCHING',
					BE = 'FETCH_USER_STATS_WELLNESS_MONTHLY_SUCCESS',
					HE = 'FETCH_USER_STATS_WELLNESS_MONTHLY_FAIL',
					VE = 'FETCH_WELLNESS_GOALS',
					WE = 'FETCH_WELLNESS_GOALS_FETCHING',
					JE = 'FETCH_WELLNESS_GOALS_SUCCESS',
					YE = 'FETCH_WELLNESS_GOALS_FAIL',
					$E = 'UPDATE_WELLNESS_GOALS',
					jE = 'UPDATE_WELLNESS_GOALS_UPDATING',
					KE = 'UPDATE_WELLNESS_GOALS_SUCCESS',
					zE = 'UPDATE_WELLNESS_GOALS_FAIL',
					qE = 'RESET_WELLNESS_GOALS_UPDATE',
					QE = 'FETCH_FLOORS_DATA',
					XE = 'FETCH_FLOORS_DATA_FETCHING',
					ZE = 'FETCH_FLOORS_DATA_FAIL',
					eT = 'FETCH_FLOORS_DATA_SUCCESS',
					tT = 'GET_PACEPRO_CREATE',
					iT = 'RESET_PACEPRO_CREATE',
					nT = 'FETCH_CONSOLIDATED_STEP_GOAL',
					aT = 'FETCH_CONSOLIDATED_STEP_GOAL_FETCHING',
					sT = 'FETCH_CONSOLIDATED_STEP_GOAL_SUCCESS',
					rT = 'FETCH_CONSOLIDATED_STEP_GOAL_FAIL',
					oT = 'FETCH_CONSOLIDATED_PUSHES_GOAL',
					lT = 'FETCH_CONSOLIDATED_PUSHES_GOAL_FETCHING',
					cT = 'FETCH_CONSOLIDATED_PUSHES_GOAL_SUCCESS',
					dT = 'FETCH_CONSOLIDATED_PUSHES_GOAL_FAIL',
					uT = 'UPDATE_CONSOLIDATED_STEP_GOAL',
					pT = 'UPDATE_CONSOLIDATED_STEP_GOAL_SUCCESS',
					yT = 'UPDATE_CONSOLIDATED_STEP_GOAL_FAIL',
					hT = 'RESET_CONSOLIDATED_STEP_GOAL_UPDATE',
					gT = 'UPDATE_CONSOLIDATED_PUSHES_GOAL',
					mT = 'UPDATE_CONSOLIDATED_PUSHES_GOAL_SUCCESS',
					AT = 'UPDATE_CONSOLIDATED_PUSHES_GOAL_FAIL',
					_T = 'RESET_CONSOLIDATED_PUSHES_GOAL_UPDATE',
					ET = 'FETCH_DAILY_STEPS',
					TT = 'FETCH_DAILY_STEPS_FETCHING',
					CT = 'FETCH_DAILY_STEPS_SUCCESS',
					ST = 'FETCH_DAILY_STEPS_FAIL',
					IT = 'FETCH_PUSHES_DAILY_AVERAGE',
					vT = 'FETCH_PUSHES_DAILY_AVERAGE_FETCHING',
					fT = 'FETCH_PUSHES_DAILY_AVERAGE_SUCCESS',
					DT = 'FETCH_PUSHES_DAILY_AVERAGE_FAIL',
					NT = 'FETCH_COURSE_DETAIL',
					RT = 'FETCH_COURSE_DETAILS_START',
					bT = 'FETCH_COURSE_DETAIL_SUCCESS',
					LT = 'FETCH_COURSE_DETAIL_FAIL',
					PT = 'FETCH_COURSE_ROUND_TRIP_ROUTE',
					OT = 'FETCH_START_COURSE_ROUND_TRIP_ROUTE',
					wT = 'RECEIVE_COURSE_ROUND_TRIP_ROUTE',
					FT = 'RECEIVE_COURSE_ROUND_TRIP_ROUTE_ERROR',
					kT = 'FETCH_COURSE_POPULAR_ROUTES',
					UT = 'FETCH_START_COURSE_POPULAR_ROUTES',
					MT = 'FETCH_COURSE_POPULAR_ROUTES_SUCCESS',
					GT = 'FETCH_COURSE_POPULAR_ROUTES_ERROR',
					xT = 'FETCH_COURSE_POPULAR_ROUTES_AND_ADD_CLIMB',
					BT = 'FETCH_COURSE_POPULAR_ROUTES_AND_ADD_CLIMB_SUCCESS',
					HT = 'FETCH_COURSE_POPULAR_ROUTES_AND_ADD_CLIMB_ERROR',
					VT = 'FETCH_ELEVATION_DATA_FOR_COURSE_POINTS',
					WT = 'FETCH_ELEVATION_DATA_FOR_COURSE_POINTS_START',
					JT = 'FETCH_ELEVATION_DATA_FOR_COURSE_POINTS_ENDED',
					YT = 'FETCH_ELEVATION_DATA_FOR_COURSE_POINTS_SUCCESS',
					$T = 'FETCH_ELEVATION_DATA_FOR_COURSE_POINTS_ERROR',
					jT = 'FETCH_COURSE_POINTS',
					KT = 'FETCH_COURSE_POINTS_START',
					zT = 'FETCH_COURSE_POINTS_SUCCESS',
					qT = 'FETCH_COURSE_POINTS_ERROR',
					QT = 'ELEVATION_CHART_HOVER',
					XT = 'RESET_ELEVATION_CHART_HOVER',
					ZT = 'SET_COURSE_POINT_SELECTION',
					eC = 'RESET_COURSE_POINT_SELECTION',
					tC = 'SET_PACEPRO_CREATE_STRATEGY',
					iC = 'SET_PACEPRO_CREATE_HILL_EFFORT',
					nC = 'SET_PACEPRO_CREATE_ELEVATION_SEGMENT_MIN_LENGTH',
					aC = 'SET_PACEPRO_CREATE_SPLITS',
					sC = 'SET_PACEPRO_CREATE_GOALTIME',
					rC = 'SET_PACEPRO_CREATE_PACE_INTERVALS',
					oC = 'FETCH_MENSTRUAL_CYCLE_DAILY_VIEW',
					lC = 'FETCH_MENSTRUAL_CYCLE_DAILY_VIEW_FETCHING',
					cC = 'FETCH_MENSTRUAL_CYCLE_DAILY_VIEW_SUCCESS',
					dC = 'FETCH_MENSTRUAL_CYCLE_DAILY_VIEW_FAIL',
					uC = 'SET_MENSTRUAL_CYCLE_SYMPTOM',
					pC = 'RESET_MENSTRUAL_CYCLE_SYMPTOMS',
					yC = 'UPDATE_USER_MENSTRUAL_CYCLE_SYMPTOMS',
					hC = 'UPDATE_USER_MENSTRUAL_CYCLE_SYMPTOMS_START',
					gC = 'UPDATE_USER_MENSTRUAL_CYCLE_SYMPTOMS_SUCCESS',
					mC = 'UPDATE_USER_MENSTRUAL_CYCLE_SYMPTOMS_ERROR',
					AC = 'FETCH_MENSTRUAL_CYCLE_SYMPTOMS_ICONS',
					_C = 'MENSTRUAL_CYCLE_SYMPTOMS_ICONS_FETCHING',
					EC = 'MENSTRUAL_CYCLE_SYMPTOMS_ICONS_SUCCESS',
					TC = 'MENSTRUAL_CYCLE_SYMPTOMS_ICONS_ERROR',
					CC = 'FETCH_MENSTRUAL_CYCLING_TRACKING_SUMMARY',
					SC = 'FETCH_MENSTRUAL_CYCLING_TRACKING_SUMMARY_FETCHING',
					IC = 'FETCH_MENSTRUAL_CYCLING_TRACKING_SUMMARY_SUCCESS',
					vC = 'FETCH_MENSTRUAL_CYCLING_TRACKING_SUMMARY_FAIL',
					fC = 'RESET_MENSTRUAL_CYCLING_TRACKING_SUMMARY',
					DC = 'FETCH_MENSTRUAL_CYCLING_TRACKING_CALENDAR',
					NC = 'FETCH_MENSTRUAL_CYCLING_TRACKING_CALENDAR_FETCHING',
					RC = 'FETCH_MENSTRUAL_CYCLING_TRACKING_CALENDAR_SUCCESS',
					bC = 'FETCH_MENSTRUAL_CYCLING_TRACKING_CALENDAR_FAIL',
					LC = 'ADD_OR_REMOVE_MENSTRUAL_DATE',
					PC = 'RESET_MENSTRUAL_CYCLING_TRACKING_CALENDAR',
					OC = 'ONLY_RESET_MENSTRUAL_CYCLING_TRACKING_CALENDAR',
					wC = 'SAVE_MENSTRUAL_DATE_CHANGES_AND_UPDATE_DAY_VIEW_DATA',
					FC = 'SAVE_MENSTRUAL_DATE_CHANGES',
					kC = 'SAVE_MENSTRUAL_DATE_CHANGES_START',
					UC = 'STARTED_CYCLE_UPDATE_FROM_CALENDAR',
					MC = 'ENDED_CYCLE_UPDATE_FROM_CALENDAR',
					GC = 'ENDED_CYCLE_UPDATE_FROM_CALENDAR_FAIL',
					xC = 'SAVE_MENSTRUAL_DATE_CHANGES_SUCCESS',
					BC = 'SAVE_MENSTRUAL_DATE_CHANGES_FAIL',
					HC = 'SET_MCT_CALENDAR_MODAL_OPENED_STATE',
					VC = 'SET_MCT_CALENDAR_MODAL_OPENED_IN_EDIT_STATE',
					WC = 'SET_MCT_CALENDAR_SELECTED_DATES_TO_PRISTINE',
					JC = 'SET_CALENDAR_EDITABLE_UNTIL_DATE',
					YC = 'RESET_CALENDAR_EDITABLE_UNTIL_DATE',
					$C = 'FETCH_MENSTRUAL_CYCLE_EDUCATIONAL_CONTENT',
					jC = 'MENSTRUAL_CYCLE_EDUCATIONAL_CONTENT_FETCHING',
					KC = 'MENSTRUAL_CYCLE_EDUCATIONAL_CONTENT_SUCCESS',
					zC = 'MENSTRUAL_CYCLE_EDUCATIONAL_CONTENT_ERROR',
					qC = 'FETCH_USER_CAPABLE',
					QC = 'FETCH_USER_CAPABLE_FETCHING',
					XC = 'FETCH_USER_CAPABLE_SUCCESS',
					ZC = 'FETCH_USER_CAPABLE_FAIL',
					eS = 'UPDATE_CALORIES_VIEW_STATE',
					tS = 'UPDATE_CALORIES_FLAME_PERCENT',
					iS = 'AUTHORIZE_MFP',
					nS = 'AUTHORIZE_MFP_SUCCESS',
					aS = 'AUTHORIZE_MFP_FAIL',
					sS = 'DISCONNECT_FROM_MFP',
					rS = 'FETCH_MFP',
					oS = 'FETCH_MFP_SUCCESS',
					lS = 'FETCH_MFP_FAIL',
					cS = 'FETCH_MFP_INFO',
					dS = 'FETCH_MFP_INFO_SUCCESS',
					uS = 'FETCH_MFP_INFO_FAIL',
					pS = 'FETCH_BODY_BATTERY_TODAY',
					yS = 'FETCH_BODY_BATTERY_TODAY_SUCCESS',
					hS = 'FETCH_BODY_BATTERY_TODAY_FAIL',
					gS = 'FETCH_WEIGHT_LIST',
					mS = 'FETCH_WEIGHT_LIST_FETCHING',
					AS = 'FETCH_WEIGHT_LIST_SUCCESS',
					_S = 'FETCH_WEIGHT_LIST_FAIL',
					ES = 'FETCH_MENSTRUAL_CYCLING_TRACKING_REPORTS',
					TS = 'FETCH_MENSTRUAL_CYCLING_TRACKING_REPORTS_FETCHING',
					CS = 'FETCH_MENSTRUAL_CYCLING_TRACKING_REPORTS_SUCCESS',
					SS = 'FETCH_MENSTRUAL_CYCLING_TRACKING_REPORTS_FAIL',
					IS = 'RESET_MENSTRUAL_CYCLING_TRACKING_REPORTS',
					vS = 'SAVE_MENSTRUAL_CYCLE_INITIAL_SETUP',
					fS = 'SAVE_MENSTRUAL_CYCLE_INITIAL_SETUP_START',
					DS = 'SAVE_MENSTRUAL_CYCLE_INITIAL_SETUP_SUCCESS',
					NS = 'SAVE_MENSTRUAL_CYCLE_INITIAL_SETUP_FAIL',
					RS = 'RESET_MENSTRUAL_CYCLE_INITIAL_SETUP_SAVE_STATUS',
					bS = 'SET_MENSTRUAL_CYCLE_INITIAL_SETUP',
					LS = 'UNSET_MENSTRUAL_CYCLE_INITIAL_SETUP',
					PS = 'SET_MENSTRUAL_CYCLE_INITIAL_SETUP_STEP1',
					OS = 'UNSET_MENSTRUAL_CYCLE_INITIAL_SETUP_STEP1',
					wS = 'OPEN_MCT_INITIAL_SETUP_ALL_SET_MODAL',
					FS = 'CLOSE_MCT_INITIAL_SETUP_ALL_SET_MODAL',
					kS = 'SET_PACEPRO_CREATE_NAME',
					US = 'FETCH_MFP_LAST_SYNC',
					MS = 'FETCH_MFP_LAST_SYNC_SUCCESS',
					GS = 'FETCH_MFP_LAST_SYNC_FAIL',
					xS = 'SYNC_MFP_NOW',
					BS = 'SYNC_MFP_NOW_SUCCESS',
					HS = 'SYNC_MFP_NOW_FAIL',
					VS = 'SET_PACEPRO_CREATE',
					WS = 'SAVE_OR_CONFIRM_SINGLE_CYCLE',
					JS = 'SAVE_OR_CONFIRM_SINGLE_CYCLE_FAIL',
					YS = 'SAVE_OR_CONFIRM_SINGLE_CYCLE_START',
					$S = 'SAVE_OR_CONFIRM_SINGLE_CYCLE_END',
					jS = 'FETCH_WELLNESS_DAILY_PULSE_OX_DATA',
					KS = 'FETCH_WELLNESS_DAILY_PULSE_OX_DATA_FETCHING',
					zS = 'FETCH_WELLNESS_DAILY_PULSE_OX_DATA_SUCCESS',
					qS = 'FETCH_WELLNESS_DAILY_PULSE_OX_DATA_FAIL',
					QS = 'FETCH_WELLNESS_DAILY_RESPIRATION_DATA',
					XS = 'FETCH_WELLNESS_DAILY_RESPIRATION_DATA_FETCHING',
					ZS = 'FETCH_WELLNESS_DAILY_RESPIRATION_DATA_SUCCESS',
					eI = 'FETCH_WELLNESS_DAILY_RESPIRATION_DATA_FAIL',
					tI = 'RESET_PACEPRO_CREATE_STRATEGY',
					iI = 'RESET_PACEPRO_CREATE_HILL_EFFORT',
					nI = 'RESET_PACEPRO_CREATE_ELEVATION_SEGMENT_MIN_LENGTH;',
					aI = 'INITIALIZE_PACEPRO_CREATE',
					sI = 'SET_PACEPRO_CREATE_MANUAL_PACE',
					rI = 'FETCH_PERSONAL_RECORDS',
					oI = 'FETCH_PERSONAL_RECORDS_FETCHING',
					lI = 'FETCH_PERSONAL_RECORDS_SUCCESS',
					cI = 'FETCH_PERSONAL_RECORDS_FAIL',
					dI = 'FETCH_PERSONAL_RECORD_CANDIDATES',
					uI = 'FETCH_PERSONAL_RECORD_CANDIDATES_FETCHING',
					pI = 'FETCH_PERSONAL_RECORD_CANDIDATES_SUCCESS',
					yI = 'FETCH_PERSONAL_RECORD_CANDIDATES_FAIL',
					hI = 'FETCH_PERSONAL_RECORD_TYPES',
					gI = 'FETCH_PERSONAL_RECORD_TYPES_FETCHING',
					mI = 'FETCH_PERSONAL_RECORD_TYPES_SUCCESS',
					AI = 'FETCH_PERSONAL_RECORD_TYPES_FAIL',
					_I = 'FETCH_PERSONAL_RECORD_BY_ACTIVITY_ID',
					EI = 'FETCH_PERSONAL_RECORD_BY_ACTIVITY_ID_FETCHING',
					TI = 'FETCH_PERSONAL_RECORD_BY_ACTIVITY_ID_SUCCESS',
					CI = 'FETCH_PERSONAL_RECORD_BY_ACTIVITY_ID_FAIL',
					SI = 'FETCH_TRAINING_STATUS_AGGREGATED_DATA',
					II = 'FETCH_TRAINING_STATUS_AGGREGATED_DATA_FETCHING',
					vI = 'FETCH_TRAINING_STATUS_AGGREGATED_DATA_SUCCESS',
					fI = 'FETCH_TRAINING_STATUS_AGGREGATED_DATA_FAIL',
					DI = 'FETCH_TRAINING_STATUS_MOST_RECENT_DATA',
					NI = 'FETCH_TRAINING_STATUS_MOST_RECENT_DATA_FETCHING',
					RI = 'FETCH_TRAINING_STATUS_MOST_RECENT_DATA_SUCCESS',
					bI = 'FETCH_TRAINING_STATUS_MOST_RECENT_DATA_FAIL',
					LI = 'FETCH_TRAINING_STATUS_WEEKLY_DATA',
					PI = 'FETCH_TRAINING_STATUS_WEEKLY_DATA_FETCHING',
					OI = 'FETCH_TRAINING_STATUS_WEEKLY_DATA_SUCCESS',
					wI = 'FETCH_TRAINING_STATUS_WEEKLY_DATA_FAIL',
					FI = 'FETCH_SELF_EVALUATION_ICONS',
					kI = 'SELF_EVALUATION_ICONS_FETCHING',
					UI = 'SELF_EVALUATION_ICONS_SUCCESS',
					MI = 'SELF_EVALUATION_ICONS_ERROR',
					GI = 'FETCH_CHALLENGE',
					xI = 'FETCH_CHALLENGE_SUCCESS',
					BI = 'FETCH_CHALLENGE_FAIL',
					HI = 'CLEAN_BADGE_CHALLENGE_PAGE',
					VI = 'JOIN_CHALLENGE',
					WI = 'JOIN_CHALLENGE_SUCCESS',
					JI = 'JOIN_CHALLENGE_FAIL',
					YI = 'CLOSE_JOIN_CHALLENGE_MODAL',
					$I = 'LEAVE_CHALLENGE',
					jI = 'LEAVE_CHALLENGE_SUCCESS',
					KI = 'LEAVE_CHALLENGE_FAIL',
					zI = 'RESET_TRAINING_PLAN_SETUP_DATA',
					qI = 'FETCH_TRAINING_PLAN_FOR_SETUP',
					QI = 'FETCH_USER_CURRENT_TRAINING_DATA',
					XI = 'FETCHING_USER_CURRENT_TRAINING_DATA',
					ZI = 'FETCH_USER_CURRENT_TRAINING_DATA_SUCCESS',
					ev = 'FETCH_USER_CURRENT_TRAINING_DATA_ERROR',
					tv = 'FETCH_TRAINING_PLAN_BY_ID',
					iv = 'GET_WORKOUT_SCHEDULE_BY_PERIOD',
					nv = 'FETCHING_WORKOUT_SCHEDULE_BY_PERIOD',
					av = 'FETCHING_WORKOUT_SCHEDULE_BY_PERIOD_SUCCESS',
					sv = 'FETCHING_WORKOUT_SCHEDULE_BY_PERIOD_ERROR',
					rv = 'DELETE_TRAINING_PLAN',
					ov = 'DELETING_TRAINING_PLAN',
					lv = 'DELETE_TRAINING_PLAN_SUCCESS',
					cv = 'DELETE_TRAINING_PLAN_FAIL',
					dv = 'RESET_TRAINING_PLAN_BY_ID_DATA',
					uv = 'FETCHING_TRAINING_PLAN',
					pv = 'FETCHING_TRAINING_PLAN_SUCCESS',
					yv = 'FETCHING_TRAINING_PLAN_ERROR',
					hv = 'FETCHING_TRAINING_PLAN_FOR_SETUP',
					gv = 'FETCHING_TRAINING_PLAN_FOR_SETUP_SUCCESS',
					mv = 'FETCHING_TRAINING_PLAN_FOR_SETUP_ERROR',
					Av = 'SET_TRAINING_PLAN_SETUP_DATA',
					_v = 'CREATE_PHASED_TRAINING_PLAN',
					Ev = 'CREATING_PHASED_TRAINING_PLAN',
					Tv = 'CREATE_PHASED_TRAINING_PLAN_ERROR',
					Cv = 'CREATED_PHASED_TRAINING_PLAN',
					Sv = 'SKIP_RACE_DAY_STEP',
					Iv = 'RESET_SKIP_RACE_DAY_STEP',
					vv = 'SET_TRAINING_PLAN_LEVEL_DATA',
					fv = 'FETCH_INTENSITY_MINUTES_DATA',
					Dv = 'FETCH_INTENSITY_MINUTES_DATA_FETCHING',
					Nv = 'FETCH_INTENSITY_MINUTES_DATA_SUCCESS',
					Rv = 'FETCH_INTENSITY_MINUTES_DATA_FAIL',
					bv = 'FETCH_INTENSITY_MINUTES_DAILY_DATA',
					Lv = 'FETCH_INTENSITY_MINUTES_DAILY_DATA_FETCHING',
					Pv = 'FETCH_INTENSITY_MINUTES_DAILY_DATA_SUCCESS',
					Ov = 'FETCH_INTENSITY_MINUTES_DAILY_DATA_FAIL',
					wv = 'FETCH_INTENSITY_MINUTES_WEEKLY_DATA',
					Fv = 'FETCH_INTENSITY_MINUTES_WEEKLY_DATA_FETCHING',
					kv = 'FETCH_INTENSITY_MINUTES_WEEKLY_DATA_SUCCESS',
					Uv = 'FETCH_INTENSITY_MINUTES_WEEKLY_DATA_FAIL',
					Mv = 'FETCH_INTENSITY_MINUTES_HOURLY_DATA',
					Gv = 'FETCH_INTENSITY_MINUTES_HOURLY_DATA_DONE',
					xv = 'CREATE_EPOCH_DATA_RELOAD',
					Bv = 'CREATE_EPOCH_DATA_RELOAD_FETCHING',
					Hv = 'CREATE_EPOCH_DATA_RELOAD_SUCCESS',
					Vv = 'CREATE_EPOCH_DATA_RELOAD_FAIL',
					Wv = 'FETCH_USER_SUMMARY_MONTHLY',
					Jv = 'FETCH_USER_SUMMARY_MONTHLY_FETCHING',
					Yv = 'FETCH_USER_SUMMARY_MONTHLY_SUCCESS',
					$v = 'FETCH_USER_SUMMARY_MONTHLY_FAIL',
					jv = 'FETCH_FITNESS_AGE_DATA',
					Kv = 'FETCH_FITNESS_AGE_DATA_FETCHING',
					zv = 'FETCH_FITNESS_AGE_DATA_SUCCESS',
					qv = 'FETCH_FITNESS_AGE_DATA_FAIL',
					Qv = 'FETCH_TYPED_SPLITS',
					Xv = 'FETCH_TYPED_SPLITS_SUCCESS',
					Zv = 'FETCH_TYPED_SPLITS_FAIL',
					ef = 'FETCH_TIMEZONES',
					tf = 'FETCH_TIMEZONES_FETCHING',
					nf = 'FETCH_TIMEZONES_SUCCESS',
					af = 'FETCH_TIMEZONES_FAIL',
					sf = 'FETCH_SUBSCRIBER_EVENT_DETAILS',
					rf = 'FETCH_SUBSCRIBER_EVENT_DETAILS_FETCHING',
					of = 'FETCH_SUBSCRIBER_EVENT_DETAILS_SUCCESS',
					lf = 'FETCH_SUBSCRIBER_EVENT_DETAILS_FAIL',
					cf = 'FETCH_BENCHMARK_EXERCISES_DATA',
					df = 'FETCH_BENCHMARK_EXERCISES_DATA_FETCHING',
					uf = 'FETCH_BENCHMARK_EXERCISES_DATA_SUCCESS',
					pf = 'FETCH_BENCHMARK_EXERCISES_DATA_FAIL',
					yf = 'FETCH_EXERCISE_TYPES',
					hf = 'FETCH_EXERCISE_TYPES_FETCHING',
					gf = 'FETCH_EXERCISE_TYPES_SUCCESS',
					mf = 'FETCH_EXERCISE_TYPES_FAIL',
					Af = 'FETCH_EXERCISE_EQUIPMENTS',
					_f = 'FETCH_EXERCISE_EQUIPMENTS_FETCHING',
					Ef = 'FETCH_EXERCISE_EQUIPMENTS_SUCCESS',
					Tf = 'FETCH_EXERCISE_EQUIPMENTS_FAIL',
					Cf = 'SAVE_BENCHMARK_EXERCISE_DATA',
					Sf = 'SAVE_BENCHMARK_EXERCISE_DATA_START',
					If = 'SAVE_BENCHMARK_EXERCISE_DATA_SUCCESS',
					vf = 'SAVE_BENCHMARK_EXERCISE_DATA_FAIL',
					ff = 'UPDATE_BENCHMARK_EXERCISE_DATA',
					Df = 'UPDATE_BENCHMARK_EXERCISE_DATA_START',
					Nf = 'UPDATE_BENCHMARK_EXERCISE_DATA_SUCCESS',
					Rf = 'UPDATE_BENCHMARK_EXERCISE_DATA_FAIL',
					bf = 'DELETE_BENCHMARK_EXERCISE_DATA',
					Lf = 'DELETE_BENCHMARK_EXERCISE_DATA_DELETING',
					Pf = 'DELETE_BENCHMARK_EXERCISE_DATA_SUCCESS',
					Of = 'DELETE_BENCHMARK_EXERCISE_DATA_FAIL',
					wf = 'FETCH_MUSCLE_MAPPING_MODEL',
					Ff = 'FETCH_MUSCLE_MAPPING_MODEL_FETCHING',
					kf = 'FETCH_MUSCLE_MAPPING_MODEL_SUCCESS',
					Uf = 'FETCH_MUSCLE_MAPPING_MODEL_FAIL',
					Mf = 'RESET_EXPORT_REPORT',
					Gf = 'CREATE_EXPORT_REPORT',
					xf = 'CREATE_EXPORT_REPORT_SUCCESS',
					Bf = 'CREATE_EXPORT_REPORT_FAIL',
					Hf = 'CHECK_EXPORT_REPORT_STATUS',
					Vf = 'CHECK_EXPORT_REPORT_STATUS_SUCCESS',
					Wf = 'CHECK_EXPORT_REPORT_STATUS_FAIL',
					Jf = 'FETCH_HEALTH_SNAPSHOT_LIST_BY_DATE_RANGE',
					Yf = 'FETCH_HEALTH_SNAPSHOT_LIST_BY_DATE_RANGE_START',
					$f = 'FETCH_HEALTH_SNAPSHOT_LIST_BY_DATE_RANGE_SUCCESS',
					jf = 'FETCH_HEALTH_SNAPSHOT_LIST_BY_DATE_RANGE_FAIL',
					Kf = 'FETCH_HEALTH_SNAPSHOT_LIST',
					zf = 'FETCH_HEALTH_SNAPSHOT_LIST_START',
					qf = 'FETCH_HEALTH_SNAPSHOT_LIST_SUCCESS',
					Qf = 'FETCH_HEALTH_SNAPSHOT_LIST_FAIL',
					Xf = 'DELETE_HEALTH_SNAPSHOT_LIST_ITEM',
					Zf = 'DELETE_HEALTH_SNAPSHOT_LIST_ITEM_START',
					eD = 'DELETE_HEALTH_SNAPSHOT_LIST_ITEM_SUCCESS',
					tD = 'DELETE_HEALTH_SNAPSHOT_LIST_ITEM_FAIL',
					iD = 'UPDATE_HEALTH_SNAPSHOT_LIST_ITEM',
					nD = 'UPDATE_HEALTH_SNAPSHOT_LIST_ITEM_START',
					aD = 'UPDATE_HEALTH_SNAPSHOT_LIST_ITEM_SUCCESS',
					sD = 'UPDATE_HEALTH_SNAPSHOT_LIST_ITEM_FAIL',
					rD = 'UPDATE_HEALTH_SNAPSHOT_ITEM_NOTE',
					oD = 'UPDATE_HEALTH_SNAPSHOT_ITEM_NOTE_START',
					lD = 'UPDATE_HEALTH_SNAPSHOT_ITEM_NOTE_SUCCESS',
					cD = 'UPDATE_HEALTH_SNAPSHOT_ITEM_NOTE_FAIL',
					dD = 'FETCH_HEALTH_SNAPSHOTS_FOR_DAILY_SUMMARY',
					uD = 'FETCH_HEALTH_SNAPSHOTS_FOR_DAILY_SUMMARY_START',
					pD = 'FETCH_HEALTH_SNAPSHOTS_FOR_DAILY_SUMMARY_SUCCESS',
					yD = 'FETCH_HEALTH_SNAPSHOTS_FOR_DAILY_SUMMARY_FAIL',
					hD = 'FETCH_HEALTH_SNAPSHOT_SUMMARY',
					gD = 'FETCH_HEALTH_SNAPSHOT_SUMMARY_START',
					mD = 'FETCH_HEALTH_SNAPSHOT_SUMMARY_SUCCESS',
					AD = 'FETCH_HEALTH_SNAPSHOT_SUMMARY_FAIL',
					_D = 'FETCH_HEALTH_SNAPSHOT_EPOCH_DATA',
					ED = 'FETCH_HEALTH_SNAPSHOT_EPOCH_DATA_START',
					TD = 'FETCH_HEALTH_SNAPSHOT_EPOCH_DATA_SUCCESS',
					CD = 'FETCH_HEALTH_SNAPSHOT_EPOCH_DATA_FAIL',
					SD = 'FETCH_HEALTH_SNAPSHOT_RELATIVE_ACTIVITIES',
					ID = 'FETCH_HEALTH_SNAPSHOT_RELATIVE_ACTIVITIES_START',
					vD = 'FETCH_HEALTH_SNAPSHOT_RELATIVE_ACTIVITIES_SUCCESS',
					fD = 'FETCH_HEALTH_SNAPSHOT_RELATIVE_ACTIVITIES_FAIL',
					DD = 'UPDATE_PERSONAL_RECORD_TYPE_FAIL',
					ND = 'UPDATE_PERSONAL_RECORD_TYPE',
					RD = 'DELETE_PERSONAL_RECORD',
					bD = 'DELETE_PERSONAL_RECORD_SUCCESS',
					LD = 'DELETE_PERSONAL_RECORD_FAIL',
					PD = 'DELETE_PERSONAL_RECORD_CANDIDATE',
					OD = 'DELETE_PERSONAL_RECORD_CANDIDATE_SUCCESS',
					wD = 'DELETE_PERSONAL_RECORD_CANDIDATE_FAIL',
					FD = 'ADD_PERSONAL_RECORD',
					kD = 'ADD_PERSONAL_RECORD_SUCCESS',
					UD = 'ADD_PERSONAL_RECORD_FAIL',
					MD = 'UPDATE_PERSONAL_RECORD',
					GD = 'UPDATE_PERSONAL_RECORD_SUCCESS',
					xD = 'UPDATE_PERSONAL_RECORD_FAIL',
					BD = 'RESET_POWER_GUIDANCE_DELETE_ERROR',
					HD = 'RESET_POWER_GUIDANCE_DUPLICATE_ERROR',
					VD = 'FETCH_LATEST_POWER_TO_WEIGHT',
					WD = 'FETCH_LATEST_POWER_TO_WEIGHT_FETCHING',
					JD = 'FETCH_LATEST_POWER_TO_WEIGHT_SUCCESS',
					YD = 'FETCH_LATEST_POWER_TO_WEIGHT_FAIL',
					$D = 'FETCH_POWER_BENCHMARKS',
					jD = 'FETCH_POWER_BENCHMARKS_SUCCESS',
					KD = 'FETCH_FTP',
					zD = 'FETCH_FTP_FETCHING',
					qD = 'FETCH_FTP_SUCCESS',
					QD = 'FETCH_FTP_FAIL',
					XD = 'FETCH_POWER_TO_WEIGHT',
					ZD = 'FETCH_POWER_TO_WEIGHT_FETCHING',
					eN = 'FETCH_POWER_TO_WEIGHT_SUCCESS',
					tN = 'FETCH_POWER_TO_WEIGHT_FAIL',
					iN = 'TOGGLE_SPORT',
					nN = 'SWITCH_POWER_TO_WEIGHT_FILTER',
					aN = 'FETCH_NEWS_FEED_ACTIVITIES',
					sN = 'FETCH_NEWS_FEED_ACTIVITIES_START',
					rN = 'FETCH_NEWS_FEED_ACTIVITIES_SUCCESS',
					oN = 'FETCH_NEWS_FEED_ACTIVITIES_FAIL',
					lN = 'UPDATE_NEWS_FEED_ACTIVITY_COMMENT_COUNT',
					cN = 'UPDATE_NEWS_FEED_ACTIVITY_PRIVACY',
					dN = 'UPDATE_NEWS_FEED_ACTIVITY_PRIVACY_START',
					uN = 'UPDATE_NEWS_FEED_ACTIVITY_PRIVACY_SUCCESS',
					pN = 'UPDATE_NEWS_FEED_ACTIVITY_PRIVACY_FAIL',
					yN = 'UPDATE_NEWS_FEED_ERROR_STATE',
					hN = 'FILTER_NEWS_FEED_ACTIVITIES',
					gN = 'FETCH_NEWS_FEED_ACTIVITY_AND_UPDATE_LIKES',
					mN = 'UPDATE_NEWS_FEED_ACTIVITY_LIKES',
					AN = 'FETCH_NEWS_FEED_COMMENTS',
					_N = 'FETCH_NEWS_FEED_COMMENTS_START',
					EN = 'FETCH_NEWS_FEED_COMMENTS_SUCCESS',
					TN = 'FETCH_NEWS_FEED_COMMENTS_FAIL',
					CN = 'ADD_NEWS_FEED_COMMENT',
					SN = 'ADD_NEWS_FEED_COMMENT_START',
					IN = 'ADD_NEWS_FEED_COMMENT_SUCCESS',
					vN = 'ADD_NEWS_FEED_COMMENT_FAIL',
					fN = 'EDIT_NEWS_FEED_COMMENT',
					DN = 'EDIT_NEWS_FEED_COMMENT_START',
					NN = 'EDIT_NEWS_FEED_COMMENT_SUCCESS',
					RN = 'EDIT_NEWS_FEED_COMMENT_FAIL',
					bN = 'ADD_NEWS_FEED_HIGHLIGHTED_COMMENTS',
					LN = 'REMOVE_NEWS_FEED_COMMENT',
					PN = 'REMOVE_NEWS_FEED_COMMENT_START',
					ON = 'REMOVE_NEWS_FEED_COMMENT_SUCCESS',
					wN = 'REMOVE_NEWS_FEED_COMMENT_FAIL',
					FN = 'UPDATE_NEWS_FEED_COMMENT_LIKED_BY_USER',
					kN = 'FETCH_NEWS_FEED_COMMENT_LIKERS',
					UN = 'FETCH_NEWS_FEED_COMMENT_LIKERS_SUCCESS',
					MN = 'FETCH_NEWS_FEED_COMMENT_LIKERS_FAIL',
					GN = 'UPDATE_NEWS_FEED_COMMENT_LIKERS',
					xN = 'FETCH_NEWS_FEED_COMMENT_LIKES',
					BN = 'FETCH_NEWS_FEED_COMMENT_LIKES_START',
					HN = 'FETCH_NEWS_FEED_COMMENT_LIKES_SUCCESS',
					VN = 'FETCH_NEWS_FEED_COMMENT_LIKES_FAIL',
					WN = 'ADD_NEWS_FEED_COMMENT_LIKE',
					JN = 'ADD_NEWS_FEED_COMMENT_LIKE_START',
					YN = 'ADD_NEWS_FEED_COMMENT_LIKE_SUCCESS',
					$N = 'ADD_NEWS_FEED_COMMENT_LIKE_FAIL',
					jN = 'REMOVE_NEWS_FEED_COMMENT_LIKE',
					KN = 'REMOVE_NEWS_FEED_COMMENT_LIKE_START',
					zN = 'REMOVE_NEWS_FEED_COMMENT_LIKE_SUCCESS',
					qN = 'REMOVE_NEWS_FEED_COMMENT_LIKE_FAIL',
					QN = 'ADD_NEWS_FEED_CONVERSATION_LIKE',
					XN = 'ADD_NEWS_FEED_CONVERSATION_LIKE_START',
					ZN = 'ADD_NEWS_FEED_CONVERSATION_LIKE_SUCCESS',
					eR = 'ADD_NEWS_FEED_CONVERSATION_LIKE_FAIL',
					tR = 'REMOVE_NEWS_FEED_CONVERSATION_LIKE',
					iR = 'REMOVE_NEWS_FEED_CONVERSATION_LIKE_START',
					nR = 'REMOVE_NEWS_FEED_CONVERSATION_LIKE_SUCCESS',
					aR = 'REMOVE_NEWS_FEED_CONVERSATION_LIKE_FAIL',
					sR = 'FETCH_NEWS_FEED_CONVERSATION_LIKES',
					rR = 'FETCH_NEWS_FEED_CONVERSATION_LIKES_START',
					oR = 'FETCH_NEWS_FEED_CONVERSATION_LIKES_SUCCESS',
					lR = 'FETCH_NEWS_FEED_CONVERSATION_LIKES_FAIL',
					cR = 'FETCH_CONNECTIONS_LEADERBOARD',
					dR = 'FETCH_CONNECTIONS_LEADERBOARD_START',
					uR = 'FETCH_CONNECTIONS_LEADERBOARD_SUCCESS',
					pR = 'FETCH_CONNECTIONS_LEADERBOARD_FAIL',
					yR = 'REFETCH_CONNECTIONS_LEADERBOARD',
					hR = 'REMOVE_CONNECTION',
					gR = 'REMOVE_CONNECTION_START',
					mR = 'REMOVE_CONNECTION_SUCCESS',
					AR = 'REMOVE_CONNECTION_FAIL',
					_R = 'MUTE_CONNECTION',
					ER = 'MUTE_CONNECTION_START',
					TR = 'MUTE_CONNECTION_SUCCESS',
					CR = 'MUTE_CONNECTION_FAIL',
					SR = 'UNMUTE_CONNECTION',
					IR = 'UNMUTE_CONNECTION_START',
					vR = 'UNMUTE_CONNECTION_SUCCESS',
					fR = 'UNMUTE_CONNECTION_FAIL',
					DR = 'FETCH_MUTED_CONNECTION_LIST',
					NR = 'FETCH_MUTED_CONNECTION_LIST_START',
					RR = 'FETCH_MUTED_CONNECTION_LIST_SUCCESS',
					bR = 'FETCH_MUTED_CONNECTION_LIST_FAIL',
					LR = 'FETCH_CONNECTION_COUNT',
					PR = 'FETCH_CONNECTION_COUNT_SUCCESS',
					OR = 'FETCH_CONNECTION_COUNT_FAIL',
					wR = 'FETCH_SUGGESTED_CONNECTION_LIST',
					FR = 'FETCH_SUGGESTED_CONNECTION_LIST_START',
					kR = 'FETCH_SUGGESTED_CONNECTION_LIST_SUCCESS',
					UR = 'FETCH_SUGGESTED_CONNECTION_LIST_FAIL',
					MR = 'FETCH_PAGED_SUGGESTED_CONNECTION_LIST',
					GR = 'FETCH_PAGED_SUGGESTED_CONNECTION_LIST_START',
					xR = 'FETCH_PAGED_SUGGESTED_CONNECTION_LIST_SUCCESS',
					BR = 'FETCH_PAGED_SUGGESTED_CONNECTION_LIST_FAIL',
					HR = 'UPDATE_PAGED_SUGGESTED_CONNECTION_DISMISSING',
					VR = 'REMOVE_PAGED_SUGGESTED_CONNECTION',
					WR = 'CLEAR_PAGED_SUGGESTED_CONNECTION_LIST',
					JR = 'FETCH_SUGGESTED_CONNECTIONS_COUNT',
					YR = 'FETCH_SUGGESTED_CONNECTIONS_COUNT_SUCCESS',
					$R = 'FETCH_SUGGESTED_CONNECTIONS_COUNT_FAIL',
					jR = 'NEWS_FEED_OPEN_REPORT_PHOTO_DIALOG',
					KR = 'NEWS_FEED_CLOSE_REPORT_PHOTO_DIALOG',
					zR = 'NEWS_FEED_SUMBIT_REPORT_PHOTO',
					qR = 'NEWS_FEED_SUMBIT_REPORT_PHOTO_DONE',
					QR = 'NEWS_FEED_REMOVE_IMAGE_FROM_FEED',
					XR = 'RESET_NEWS_FEED_ACTIVITIES',
					ZR = 'RESET_NEWS_FEED_COMMENTS',
					eb = 'RESET_NEWS_FEED_LIKES',
					tb = 'RESET_NEWS_FEED_CONNECTIONS',
					ib = 'FETCH_HRV_STATUS_DAILY_SUMMARY',
					nb = 'FETCH_HRV_STATUS_DAILY_SUMMARY_START',
					ab = 'FETCH_HRV_STATUS_DAILY_SUMMARY_SUCCESS',
					sb = 'FETCH_HRV_STATUS_DAILY_SUMMARY_FAIL',
					rb = 'FETCH_HRV_STATUS_DAILY',
					ob = 'DISMISS_NOTIFICATION',
					lb = 'DISMISS_NOTIFICATION_START',
					cb = 'DISMISS_NOTIFICATION_SUCCESS',
					db = 'DISMISS_NOTIFICATION_FAIL',
					ub = 'FETCH_ACTIVITY_DATA',
					pb = 'FETCH_ACTIVITY_DATA_USING_V1_ENDPOINT',
					yb = 'FETCH_SINGLE_SPORT_ACTIVITY',
					hb = 'PUT_RECONSTRUCTED_ACTIVITY_DATA',
					gb = 'SET_ACTIVE_LEG',
					mb = 'DELETE_LEG_SAGA',
					Ab = 'PUT_RECONSTRUCTED_ACTIVITY_DATA_START',
					_b = 'PUT_RECONSTRUCTED_ACTIVITY_DATA_SUCCESS',
					Eb = 'PUT_RECONSTRUCTED_ACTIVITY_DATA_FAIL',
					Tb = 'FETCH_ACTIVITY_DATA_START',
					Cb = 'FETCH_ACTIVITY_DATA_SUCCESS',
					Sb = 'FETCH_ACTIVITY_DATA_SUCCESS_V1',
					Ib = 'FETCH_ACTIVITY_DATA_FAIL',
					vb = 'FETCH_CHILD_ACTIVITY_DATA_START',
					fb = 'FETCH_CHILD_ACTIVITY_DATA_SUCCESS',
					Db = 'FETCH_CHILD_ACTIVITY_DATA_FAIL',
					Nb = 'FETCH_ALL_CHILDS_METRICS_DATA_START',
					Rb = 'FETCH_ALL_CHILDS_METRICS_DATA_SUCCESS',
					bb = 'FETCH_ALL_CHILDS_METRICS_DATA_FAIL',
					Lb = 'TOGGLE_SELECT_LEG_MODAL',
					Pb = 'CLEAR_STATE',
					Ob = 'SET_CURRENT_LEG_INDEX',
					wb = 'SET_START_TO_TIMESTAMP',
					Fb = 'INSERT_LEG',
					kb = 'DELETE_LEG',
					Ub = 'MAKE_LEGS_SNAPSHOT',
					Mb = 'RESTORE_LEGS_SNAPSHOT',
					Gb = 'ERASE_LEGS_SNAPSHOT',
					xb = 'HIDE_ALERT',
					Bb = 'SET_TRIM_START',
					Hb = 'SET_TRIM_END',
					Vb = 'MAKE_TRIM_SNAPSHOT',
					Wb = 'RESTORE_TRIM_SNAPSHOT',
					Jb = 'RESET_TRIM',
					Yb = 'UPDATE_ACTIVITY_TYPE',
					$b = 'FETCH_ECG_RECORDING_LIST',
					jb = 'FETCH_ECG_RECORDING_LIST_START',
					Kb = 'FETCH_ECG_RECORDING_LIST_SUCCESS',
					zb = 'FETCH_ECG_RECORDING_LIST_FAIL',
					qb = 'FETCH_MORE_ECG_RECORDING_LIST',
					Qb = 'FETCH_MORE_ECG_RECORDING_LIST_SUCCESS',
					Xb = 'FETCH_ECG_RECORDING_DETAILS',
					Zb = 'FETCH_ECG_RECORDING_DETAILS_START',
					eL = 'FETCH_ECG_RECORDING_DETAILS_SUCCESS',
					tL = 'FETCH_ECG_RECORDING_DETAILS_FAIL',
					iL = 'FETCH_ECG_RELATIVE_RECORDINGS',
					nL = 'FETCH_ECG_RELATIVE_RECORDINGS_START',
					aL = 'FETCH_ECG_RELATIVE_RECORDINGS_SUCCESS',
					sL = 'FETCH_ECG_RELATIVE_RECORDINGS_FAIL',
					rL = 'DELETE_ECG_RECORDING',
					oL = 'DELETE_ECG_RECORDING_START',
					lL = 'DELETE_ECG_RECORDING_SUCCESS',
					cL = 'DELETE_ECG_RECORDING_FAIL',
					dL = 'FETCH_ECG_RECORDINGS_FOR_CALENDAR',
					uL = 'FETCH_ECG_RECORDINGS_FOR_CALENDAR_START',
					pL = 'FETCH_ECG_RECORDINGS_FOR_CALENDAR_SUCCESS',
					yL = 'FETCH_ECG_RECORDINGS_FOR_CALENDAR_FAIL',
					hL = 'FETCH_ECG_RECORDINGS_FOR_DAILY_SUMMARY',
					gL = 'FETCH_ECG_RECORDINGS_FOR_DAILY_SUMMARY_START',
					mL = 'FETCH_ECG_RECORDINGS_FOR_DAILY_SUMMARY_SUCCESS',
					AL = 'FETCH_ECG_RECORDINGS_FOR_DAILY_SUMMARY_FAIL',
					_L = 'UPDATE_ECG_LIST_FILTERS',
					EL = 'RESET_ECG_LIST_FILTERS',
					TL = 'FETCH_ECG_VIDEO_TUTORIAL',
					CL = 'FETCH_ECG_VIDEO_TUTORIAL_START',
					SL = 'FETCH_ECG_VIDEO_TUTORIAL_SUCCESS',
					IL = 'FETCH_ECG_VIDEO_TUTORIAL_FAIL',
					vL = 'FETCH_BLOCKED_USER_LIST',
					fL = 'FETCH_BLOCKED_USER_LIST_START',
					DL = 'FETCH_BLOCKED_USER_LIST_SUCCESS',
					NL = 'FETCH_BLOCKED_USER_LIST_FAIL',
					RL = 'UNBLOCK_USER',
					bL = 'UNBLOCK_USER_START',
					LL = 'UNBLOCK_USER_SUCCESS',
					PL = 'UNBLOCK_USER_FAIL',
					OL = 'FETCH_FLOORS_REPORT_CHART_DATA',
					wL = 'FETCH_FLOORS_REPORT_CHART_DATA_FETCHING',
					FL = 'FETCH_FLOORS_REPORT_CHART_DATA_FAIL',
					kL = 'FETCH_FLOORS_REPORT_CHART_DATA_SUCCESS',
					UL = 'FETCH_TRAINING_READINESS',
					ML = 'FETCH_TRAINING_READINESS_START',
					GL = 'FETCH_TRAINING_READINESS_SUCCESS',
					xL = 'FETCH_TRAINING_READINESS_FAIL',
					BL = 'FETCH_VO2MAX_METRICS',
					HL = 'FETCH_VO2MAX_METRICS_START',
					VL = 'FETCH_VO2MAX_METRICS_SUCCESS',
					WL = 'FETCH_VO2MAX_METRICS_FAIL',
					JL = 'FETCH_VO2MAX_RANGES',
					YL = 'FETCH_VO2MAX_RANGES_START',
					$L = 'FETCH_VO2MAX_RANGES_SUCCESS',
					jL = 'FETCH_VO2MAX_RANGES_FAIL',
					KL = 'REQUEST_PRIMARY_EVENT_METADATA',
					zL = 'RECEIVE_PRIMARY_EVENT_METADATA',
					qL = 'RECEIVE_CALENDAR_UPCOMING_EVENTS',
					QL = 'REQUEST_CALENDAR_UPCOMING_EVENTS',
					XL = 'REQUEST_CALENDAR_UPCOMING_EVENTS_FOR_COURSE_ID',
					ZL = 'REQUEST_CALENDAR_UPCOMING_EVENTS_FOR_COURSE_ID_SUCCESS',
					eP = 'REQUEST_CALENDAR_UPCOMING_EVENTS_FOR_COURSE_ID_ERROR',
					tP = 'SET_EVENT_FOR_POWER_GUIDE',
					iP = 'SET_POWER_GUIDE_FROM_EVENT',
					nP = 'SHOW_MUTUAL_CONNECTIONS_MODAL',
					aP = 'FETCH_FLOORS_REPORT_ONE_YEAR_CHART_DATA',
					sP = 'FETCH_FLOORS_REPORT_ONE_YEAR_CHART_DATA_FETCHING',
					rP = 'FETCH_FLOORS_REPORT_ONE_YEAR_CHART_DATA_FAIL',
					oP = 'FETCH_FLOORS_REPORT_ONE_YEAR_CHART_DATA_SUCCESS',
					lP = 'FETCH_CONNECTIONS',
					cP = 'FETCH_CONNECTIONS_START',
					dP = 'FETCH_CONNECTIONS_SUCCESS',
					uP = 'FETCH_CONNECTIONS_FAIL',
					pP = 'RESET_CONNECTIONS',
					yP = 'FETCH_PENDING_CONNECTIONS',
					hP = 'FETCH_PENDING_CONNECTIONS_START',
					gP = 'FETCH_PENDING_CONNECTIONS_SUCCESS',
					mP = 'FETCH_PENDING_CONNECTIONS_FAIL',
					AP = 'UPDATE_PENDING_CONNECTION_DISMISSING_STATUS',
					_P = 'REMOVE_PENDING_CONNECTION',
					EP = 'FETCH_FOLLOWERS',
					TP = 'FETCH_FOLLOWERS_START',
					CP = 'FETCH_FOLLOWERS_SUCCESS',
					SP = 'FETCH_FOLLOWERS_FAIL',
					IP = 'UPDATE_FOLLOWER_DISMISSING_STATE',
					vP = 'REMOVE_FOLLOWER',
					fP = 'FETCH_HEART_RATE_REPORT_DAILY',
					DP = 'FETCH_HEART_RATE_REPORT_DAILY_FETCHING',
					NP = 'FETCH_HEART_RATE_REPORT_DAILY_SUCCESS',
					RP = 'FETCH_HEART_RATE_REPORT_DAILY_ERROR',
					bP = 'FETCH_HEART_RATE_REPORT_ONE_YEAR',
					LP = 'FETCH_HEART_RATE_REPORT_ONE_YEAR_SUCCESS',
					PP = 'FETCH_HEART_RATE_REPORT_ONE_YEAR_ERROR',
					OP = 'FETCH_HEART_RATE_REPORT_ONE_YEAR_FETCHING',
					wP = 'DELETE_ABNORMAL_HEART_RATE',
					FP = 'DELETE_ABNORMAL_HEART_RATE_START',
					kP = 'DELETE_ABNORMAL_HEART_RATE_SUCCESS',
					UP = 'DELETE_ABNORMAL_HEART_RATE_FAIL',
					MP = 'FETCH_EVENTS_BY_DATE',
					GP = 'FETCH_EVENTS_BY_DATE_SUCCESS',
					xP = 'FETCH_EVENTS_BY_DATE_ERROR',
					BP = 'FETCH_EVENTS_BY_DATE_FETCHING',
					HP = 'RESET_FETCH_EVENTS_BY_DATE',
					VP = 'ADD_EVENT_TO_DUPLICATE',
					WP = 'REMOVE_EVENT_TO_DUPLICATE',
					JP = 'ADD_EVENT_TO_EDIT',
					YP = 'REMOVE_EVENT_TO_EDIT',
					$P = 'FETCH_GEARS',
					jP = 'FETCH_GEARS_SUCCESS',
					KP = 'FETCH_GEARS_FAIL',
					zP = 'FETCH_GEARS_FECTHING',
					qP = 'ADD_FLIGHT_TO_JET_LAG_TRIP',
					QP = 'UPDATE_FLIGHT_TO_JET_LAG_TRIP',
					XP = 'REMOVE_FLIGHT_FROM_JET_LAG_TRIP',
					ZP = 'SAVE_JET_LAG_TRIP',
					eO = 'SAVE_JET_LAG_TRIP_SUCCESS',
					tO = 'SAVE_JET_LAG_TRIP_FAIL',
					iO = 'FETCH_JET_LAG_TRIPS',
					nO = 'FETCH_JET_LAG_TRIPS_SUCCESS',
					aO = 'FETCH_JET_LAG_TRIPS_FAIL',
					sO = 'RESET_JET_LAG_TRIP',
					rO = 'FETCH_JET_LAG_TRIPS_FETCHING',
					oO = 'FETCH_DAILY_JET_LAG_STATUS',
					lO = 'FETCH_DAILY_JET_LAG_STATUS_START',
					cO = 'FETCH_DAILY_JET_LAG_STATUS_SUCCESS',
					dO = 'FETCH_DAILY_JET_LAG_STATUS_FAIL',
					uO = 'DELETE_JET_LAG_TRIP',
					pO = 'DELETE_JET_LAG_TRIP_START',
					yO = 'DELETE_JET_LAG_TRIP_SUCCESS',
					hO = 'DELETE_JET_LAG_TRIP_FAIL',
					gO = 'ADD_FLIGHTS_TO_STATE',
					mO = 'UPDATE_JET_LAG_TRIP',
					AO = 'UPDATE_JET_LAG_TRIP_SUCCESS',
					_O = 'UPDATE_JET_LAG_TRIP_FAIL',
					EO = 'CHALLENGE_PAGE_INIT',
					TO = 'CHALLENGE_PAGE_RESET',
					CO = 'CHALLENGE_PAGE_SET_ROUTE',
					SO = 'CHALLENGE_PAGE_FETCH_AVAILABLE_BADGE_CHALLENGES',
					IO = 'CHALLENGE_PAGE_FETCH_AVAILABLE_BADGE_CHALLENGES_DONE',
					vO = 'CHALLENGE_PAGE_UPDATE_AVAILABLE_BADGE_CHALLENGE',
					fO = 'CHALLENGE_PAGE_JOIN_BADGE_CHALLENGE',
					DO = 'CHALLENGE_PAGE_JOIN_BADGE_CHALLENGE_DONE',
					NO = 'CHALLENGE_PAGE_SET_BADGE_CHALLENGE_NOTIFICATION_STATUS',
					RO = 'CHALLENGE_PAGE_UNDO_JOIN_BADGE_CHALLENGE',
					bO = 'CHALLENGE_PAGE_FETCH_VIRTUAL_CHALLENGES',
					LO = 'CHALLENGE_PAGE_FETCH_VIRTUAL_CHALLENGES_DONE',
					PO = 'CHALLENGE_PAGE_FETCH_CURRENT_CHALLENGES',
					OO = 'CHALLENGE_PAGE_FETCH_CURRENT_CHALLENGES_DONE',
					wO = 'CHALLENGE_PAGE_OPT_OUT_AUTO_CHALLENGE',
					FO = 'CHALLENGE_PAGE_FETCH_AUTO_CHALLENGE_DONE',
					kO = 'CHALLENGE_PAGE_SET_OPT_OUT_DIALOG',
					UO = 'CHALLENGE_PAGE_FETCH_PAST_CHALLENGES',
					MO = 'CHALLENGE_PAGE_FETCH_PAST_CHALLENGES_DONE',
					GO = 'CHALLENGE_PAGE_VIRTUAL_CHALLENGE_DETAIL_INIT',
					xO = 'CHALLENGE_PAGE_VIRTUAL_CHALLENGE_DETAIL_INIT_DONE',
					BO = 'CHALLENGE_PAGE_SHOW_BADGE_DETAIL_DIALOG',
					HO = 'CHALLENGE_PAGE_FETCH_BADGE_DETAIL',
					VO = 'CHALLENGE_PAGE_FETCH_BADGE_DETAIL_DONE',
					WO = 'CHALLENGE_PAGE_OPT_IN_VIRTUAL_CHALLENGE',
					JO = 'CHALLENGE_PAGE_OPT_IN_VIRTUAL_CHALLENGE_DONE',
					YO = 'CHALLENGE_PAGE_OPT_IN_VIRTUAL_CHALLENGE_ERROR_ACK',
					$O = 'CHALLENGE_PAGE_OPT_OUT_VIRTUAL_CHALLENGE',
					jO = 'CHALLENGE_PAGE_OPT_OUT_VIRTUAL_CHALLENGE_DONE',
					KO = 'FETCH_DAILY_BODY_BATTERY_REPORT',
					zO = 'FETCH_BODY_BATTERY_REPORT_FETCHING',
					qO = 'FETCH_BODY_BATTERY_REPORT_SUCCESS',
					QO = 'FETCH_BODY_BATTERY_REPORT_FAIL',
					XO = 'FETCH_BODY_BATTERY_EVENTS',
					ZO = 'FETCH_BODY_BATTERY_EVENTS_FETCHING',
					ew = 'FETCH_BODY_BATTERY_EVENTS_SUCCESS',
					tw = 'FETCH_BODY_BATTERY_EVENTS_FAIL',
					iw = 'INBOX_PAGE_INIT',
					nw = 'INBOX_PAGE_FETCH_REQUESTS',
					aw = 'INBOX_PAGE_FETCH_REQUESTS_DONE',
					sw = 'INBOX_PAGE_SET_CHALLENGE_DIALOG_OPEN',
					rw = 'INBOX_PAGE_CHALLENGE_DIALOG_ACTION',
					ow = 'INBOX_PAGE_CHALLENGE_REQ_ACTION',
					lw = 'INBOX_PAGE_CONNECTION_REQ_ACTION',
					cw = 'INBOX_PAGE_GROUP_REQ_ACTION',
					dw = 'INBOX_PAGE_SET_DELETE_GROUP_REQ_DIALOG_OPEN',
					uw = 'INBOX_PAGE_DELETE_GROUP_REQ_DIALOG_ACTION',
					pw = 'INBOX_PAGE_DEVICE_REQ_ACTION',
					yw = 'INBOX_PAGE_SET_REQ_STATUS',
					hw = 'INBOX_PAGE_SET_MUTUAL_CONNECTION_DIALOG_OPEN',
					gw = 'INBOX_PAGE_SET_JOIN_GROUP_CONSENT_DIALOG_OPEN',
					mw = 'INBOX_PAGE_JOIN_GROUP_CONSENT_DIALOG_ACTION',
					Aw = 'INBOX_PAGE_SET_DATA_PRIVACY_DIALOG_OPEN',
					_w = 'INBOX_PAGE_SET_GROUP_ERROR_DIALOG_OPEN',
					Ew = 'INBOX_PAGE_DATA_PRIVACY_DIALOG_ACTION',
					Tw = 'INBOX_PAGE_RESET',
					Cw = 'GET_ALL_AVAILABLE_DEVICE_BACKUPS',
					Sw = 'GET_ALL_AVAILABLE_DEVICE_BACKUPS_START',
					Iw = 'GET_ALL_AVAILABLE_DEVICE_BACKUPS_SUCCESS',
					vw = 'GET_ALL_AVAILABLE_DEVICE_BACKUPS_FAIL',
					fw = 'GET_COMPATIBLE_DEVICE_BACKUPS',
					Dw = 'GET_COMPATIBLE_DEVICE_BACKUPS_START',
					Nw = 'GET_COMPATIBLE_DEVICE_BACKUPS_SUCCESS',
					Rw = 'GET_COMPATIBLE_DEVICE_BACKUPS_FAIL',
					bw = 'RESTORE_DEVICE_BACKUP',
					Lw = 'RESTORE_DEVICE_BACKUP_START',
					Pw = 'RESTORE_DEVICE_BACKUP_SUCCESS',
					Ow = 'RESTORE_DEVICE_BACKUP_FAIL',
					ww = 'REMOVE_DEVICE_BACKUP',
					Fw = 'REMOVE_DEVICE_BACKUP_START',
					kw = 'REMOVE_DEVICE_BACKUP_SUCCESS',
					Uw = 'REMOVE_DEVICE_BACKUP_FAIL',
					Mw = 'SHOULD_LAUNCH_GARMIN_EXPRESS',
					Gw = 'RESET_DEVICE_BACKUPS',
					xw = 'RESET_DEVICE_BACKUPS_ERRORS',
					Bw = 'FETCH_PRIMARY_TRAINING_DEVICE',
					Hw = 'FETCH_PRIMARY_TRAINING_DEVICE_START',
					Vw = 'FETCH_PRIMARY_TRAINING_DEVICE_SUCCESS',
					Ww = 'FETCH_PRIMARY_TRAINING_DEVICE_FAIL',
					Jw = 'FETCH_DEVICE_BACKUPS_SUMMARY',
					Yw = 'FETCH_DEVICE_BACKUPS_SUMMARY_START',
					$w = 'FETCH_DEVICE_BACKUPS_SUMMARY_SUCCESS',
					jw = 'FETCH_DEVICE_BACKUPS_SUMMARY_FAIL',
					Kw = 'UPDATE_PRIMARY_TRAINING_DEVICE',
					zw = 'UPDATE_PRIMARY_TRAINING_DEVICE_START',
					qw = 'UPDATE_PRIMARY_TRAINING_DEVICE_SUCCESS',
					Qw = 'UPDATE_PRIMARY_TRAINING_DEVICE_FAIL',
					Xw = 'UPDATE_PRIMARY_ACTIVITY_TRACKER',
					Zw = 'UPDATE_PRIMARY_ACTIVITY_TRACKER_START',
					eF = 'UPDATE_PRIMARY_ACTIVITY_TRACKER_SUCCESS',
					tF = 'UPDATE_PRIMARY_ACTIVITY_TRACKER_FAIL',
					iF = 'REMOVE_DEVICE',
					nF = 'REMOVE_DEVICE_START',
					aF = 'REMOVE_DEVICE_SUCCESS',
					sF = 'REMOVE_DEVICE_FAIL',
					rF = 'FETCH_DAILY_SLEEP_DATA_WITH_EPOCHS',
					oF = 'FETCH_DAILY_SLEEP_DATA_WITH_EPOCHS_FETCHING',
					lF = 'FETCH_DAILY_SLEEP_DATA_WITH_EPOCHS_SUCCESS',
					cF = 'FETCH_DAILY_SLEEP_DATA_WITH_EPOCHS_FAIL',
					dF = 'UPDATE_SLEEP_NOTE',
					uF = 'UPDATE_SLEEP_NOTE_START',
					pF = 'UPDATE_SLEEP_NOTE_SUCCESS',
					yF = 'UPDATE_SLEEP_NOTE_FAIL',
					hF = 'ADD_SLEEP',
					gF = 'ADD_SLEEP_START',
					mF = 'ADD_SLEEP_SUCCESS',
					AF = 'ADD_SLEEP_FAIL',
					_F = 'FETCH_HRV_DAILY',
					EF = 'FETCH_HRV_DAILY_FETCHING',
					TF = 'FETCH_HRV_DAILY_SUCCESS',
					CF = 'FETCH_HRV_DAILY_FAIL',
					SF = 'RESET_DAILY_SLEEP',
					IF = 'SET_OPEN_TAB_ON_SLEEP_ONE_DAY_VIEW',
					vF = 'FETCH_NAP_BY_DATE',
					fF = 'FETCH_NAP_BY_DATE_FETCHING',
					DF = 'FETCH_NAP_BY_DATE_SUCCESS',
					NF = 'FETCH_NAP_BY_DATE_FAIL',
					RF = 'FETCH_DAILY_SLEEP_START',
					bF = 'FETCH_DAILY_SLEEP_SUCCESS',
					LF = 'FETCH_DAILY_SLEEP_FAIL',
					PF = 'ADD_NAP',
					OF = 'ADD_NAP_SUCCESS',
					wF = 'ADD_NAP_FAIL',
					FF = 'ADD_NAP_START',
					kF = 'DELETE_NAP',
					UF = 'DELETE_NAP_START',
					MF = 'DELETE_NAP_SUCCESS',
					GF = 'DELETE_NAP_FAIL',
					xF = 'UPDATE_NAP',
					BF = 'UPDATE_SLEEP_WINDOW',
					HF = 'UPDATE_SLEEP_WINDOW_START',
					VF = 'UPDATE_SLEEP_WINDOW_SUCCESS',
					WF = 'UPDATE_SLEEP_WINDOW_FAIL',
					JF = 'FETCH_DAILY_SLEEP_REPORT_DATA',
					YF = 'FETCH_WEEKLY_SLEEP_REPORT_DATA',
					$F = 'FETCH_SLEEP_REPORT_DATA_FETCHING',
					jF = 'FETCH_SLEEP_REPORT_DATA_SUCCESS',
					KF = 'FETCH_SLEEP_REPORT_DATA_FAIL',
					zF = 'FETCH_EMAIL_NOTIFICATIONS',
					qF = 'FETCH_EMAIL_NOTIFICATIONS_FETCHING',
					QF = 'FETCH_EMAIL_NOTIFICATIONS_SUCCESS',
					XF = 'FETCH_EMAIL_NOTIFICATIONS_FAIL',
					ZF = 'UPDATE_EMAIL_NOTIFICATIONS',
					ek = 'UPDATE_EMAIL_NOTIFICATIONS_UPDATING',
					tk = 'UPDATE_EMAIL_NOTIFICATIONS_SUCCESS',
					ik = 'UPDATE_EMAIL_NOTIFICATIONS_FAIL',
					nk = 'FETCH_PLAN_CONTENT',
					ak = 'FETCH_PLAN_CONTENT_SUCCESS',
					sk = 'FETCH_PLAN_CONTENT_ERROR',
					rk = 'PLAN_SETUP_RESET',
					ok = 'UPDATE_PLAN_SETUP',
					lk = 'FETCH_COACH_CAUTION',
					ck = 'FETCH_COACH_CAUTION_SUCCESS',
					dk = 'FETCH_COACH_CAUTION_ERROR',
					uk = 'FETCH_PREPLAN_DISTANCE',
					pk = 'FETCH_PREPLAN_DISTANCE_SUCCESS',
					yk = 'FETCH_PREPLAN_DISTANCE_ERROR',
					hk = 'FETCH_PREPLAN_PACE',
					gk = 'FETCH_PREPLAN_PACE_SUCCESS',
					mk = 'FETCH_PREPLAN_PACE_ERROR',
					Ak = 'FETCH_PREPLAN_GOALS',
					_k = 'FETCH_PREPLAN_GOALS_SUCCESS',
					Ek = 'FETCH_PREPLAN_GOALS_ERROR',
					Tk = 'FETCH_PREPLAN_PACE_TIMES',
					Ck = 'FETCH_PREPLAN_PACE_TIMES_SUCCESS',
					Sk = 'FETCH_PREPLAN_PACE_TIMES_ERROR',
					Ik = 'FETCH_PREPLAN_COACHES',
					vk = 'FETCH_PREPLAN_COACHES_SUCCESS',
					fk = 'FETCH_PREPLAN_COACHES_ERROR',
					Dk = 'FETCH_PREPLAN_COACH_INFO',
					Nk = 'FETCH_PREPLAN_COACH_INFO_SUCCESS',
					Rk = 'FETCH_PREPLAN_COACH_INFO_ERROR',
					bk = 'FETCH_COACH_VIDEO',
					Lk = 'FETCH_COACH_VIDEO_SUCCESS',
					Pk = 'FETCH_COACH_VIDEO_ERROR',
					Ok = 'RESET_ATP_PLAN',
					wk = 'FETCH_LATEST_LACTATE_THRESHOLD',
					Fk = 'FETCH_LATEST_LACTATE_THRESHOLD_START',
					kk = 'FETCH_LATEST_LACTATE_THRESHOLD_SUCCESS',
					Uk = 'FETCH_LATEST_LACTATE_THRESHOLD_FAIL',
					Mk = 'FETCH_RANGE_LACTATE_THRESHOLD_HR',
					Gk = 'FETCH_RANGE_LACTATE_THRESHOLD_HR_START',
					xk = 'FETCH_RANGE_LACTATE_THRESHOLD_HR_SUCCESS',
					Bk = 'FETCH_RANGE_LACTATE_THRESHOLD_HR_FAIL',
					Hk = 'FETCH_RANGE_LACTATE_THRESHOLD_SPEED',
					Vk = 'FETCH_RANGE_LACTATE_THRESHOLD_SPEED_START',
					Wk = 'FETCH_RANGE_LACTATE_THRESHOLD_SPEED_SUCCESS',
					Jk = 'FETCH_RANGE_LACTATE_THRESHOLD_SPEED_FAIL',
					Yk = 'FETCH_CURRENT_USER_INFO',
					$k = 'FETCH_CURRENT_USER_INFO_FETCHING',
					jk = 'FETCH_CURRENT_USER_INFO_SUCCESS',
					Kk = 'FETCH_CURRENT_USER_INFO_FAIL',
					zk = 'FETCH_THIRD_PARTY_APPS',
					qk = 'FETCH_THIRD_PARTY_APPS_FETCHING',
					Qk = 'FETCH_THIRD_PARTY_APPS_SUCCESS',
					Xk = 'FETCH_THIRD_PARTY_APPS_FAIL',
					Zk = 'DELETE_THIRD_PARTY_APP',
					eU = 'REMOVE_THIRD_PARTY_APP',
					tU = 'DELETE_THIRD_PARTY_APP_DELETING',
					iU = 'DELETE_THIRD_PARTY_APP_SUCCESS',
					nU = 'DELETE_THIRD_PARTY_APP_FAIL',
					aU = 'FETCH_THIRD_PARTY_APPS_PERMISSIONS',
					sU = 'FETCH_THIRD_PARTY_APPS_PERMISSIONS_FETCHING',
					rU = 'FETCH_THIRD_PARTY_APPS_PERMISSIONS_SUCCESS',
					oU = 'FETCH_THIRD_PARTY_APPS_PERMISSIONS_FAIL',
					lU = 'FETCH_THIRD_PARTY_APPS_CAPABILITIES',
					cU = 'FETCH_THIRD_PARTY_APPS_CAPABILITIES_FETCHING',
					dU = 'FETCH_THIRD_PARTY_APPS_CAPABILITIES_SUCCESS',
					uU = 'FETCH_THIRD_PARTY_APPS_CAPABILITIES_FAIL',
					pU = 'FETCH_THIRD_PARTY_APPS_AND_CAPABILITIES',
					yU = 'UPDATE_THIRD_PARTY_APPS_PERMISSIONS',
					hU = 'UPDATE_THIRD_PARTY_APPS_PERMISSIONS_UPDATING',
					gU = 'UPDATE_THIRD_PARTY_APPS_PERMISSIONS_SUCCESS',
					mU = 'UPDATE_THIRD_PARTY_APPS_PERMISSIONS_FAIL',
					AU = 'FETCH_OPTIONAL_FEATURE',
					_U = 'FETCH_OPTIONAL_FEATURE_FETCHING',
					EU = 'FETCH_OPTIONAL_FEATURE_SUCCESS',
					TU = 'FETCH_OPTIONAL_FEATURE_FAIL',
					CU = 'UPDATE_OPTIONAL_FEATURE',
					SU = 'UPDATE_OPTIONAL_FEATURE_UPDATING',
					IU = 'UPDATE_OPTIONAL_FEATURE_SUCCESS',
					vU = 'UPDATE_OPTIONAL_FEATURE_FAIL',
					fU = 'FETCH_DASHBOARD_CONFIG',
					DU = 'FETCH_DASHBOARD_CONFIG_FETCHING',
					NU = 'FETCH_DASHBOARD_CONFIG_SUCCESS',
					RU = 'FETCH_DASHBOARD_CONFIG_FAIL',
					bU = 'UPDATE_DASHBOARD_CONFIG_DATA',
					LU = 'UPDATE_DASHBOARD_CONFIG_DATA_UPDATING',
					PU = 'UPDATE_DASHBOARD_CONFIG_DATA_SUCCESS',
					OU = 'UPDATE_DASHBOARD_CONFIG_DATA_FAIL',
					wU = 'FETCH_AVAILABLE_PRIMARY_STATS',
					FU = 'FETCH_AVAILABLE_PRIMARY_STATS_FETCHING',
					kU = 'FETCH_AVAILABLE_PRIMARY_STATS_SUCCESS',
					UU = 'FETCH_AVAILABLE_PRIMARY_STATS_FAIL',
					MU = 'FETCH_AVAILABLE_SECONDARY_STATS',
					GU = 'FETCH_AVAILABLE_SECONDARY_STATS_FETCHING',
					xU = 'FETCH_AVAILABLE_SECONDARY_STATS_SUCCESS',
					BU = 'FETCH_AVAILABLE_SECONDARY_STATS_FAIL',
					HU = 'SAVE_DASHBOARD_CONFIG',
					VU = 'SAVE_DASHBOARD_CONFIG_SAVING',
					WU = 'SAVE_DASHBOARD_CONFIG_SUCCESS',
					JU = 'SAVE_DASHBOARD_CONFIG_FAIL',
					YU = 'FETCH_USER_FOCUS',
					$U = 'FETCH_USER_FOCUS_FETCHING',
					jU = 'FETCH_USER_FOCUS_SUCCESS',
					KU = 'FETCH_USER_FOCUS_FAIL',
					zU = 'UPDATE_USER_FOCUS',
					qU = 'UPDATE_USER_FOCUS_UPDATING',
					QU = 'UPDATE_USER_FOCUS_SUCCESS',
					XU = 'UPDATE_USER_FOCUS_FAIL',
					ZU = 'FETCH_USER_FOCUSES_SUGGESTED',
					eM = 'FETCH_USER_FOCUSES_SUGGESTED_FETCHING',
					tM = 'FETCH_USER_FOCUSES_SUGGESTED_SUCCESS',
					iM = 'FETCH_USER_FOCUSES_SUGGESTED_FAIL',
					nM = 'FETCH_RACE_EVENT_PROVIDERS',
					aM = 'FETCH_RACE_EVENT_PROVIDERS_FETCHING',
					sM = 'FETCH_RACE_EVENT_PROVIDERS_SUCCESS',
					rM = 'FETCH_RACE_EVENT_PROVIDERS_FAIL',
					oM = 'ADD_TEMPORARY_EVENT',
					lM = 'REMOVE_TEMPORARY_EVENT',
					cM = 'CREATE_CHALLENGE_PAGE_INIT',
					dM = 'CREATE_CHALLENGE_PAGE_RESET',
					uM = 'CREATE_CHALLENGE_PAGE_SET_STEP',
					pM = 'CREATE_CHALLENGE_PAGE_SET_CHALLENGE_TYPE',
					yM = 'CREATE_CHALLENGE_PAGE_SET_PARTICIPANT_TYPE',
					hM = 'CREATE_CHALLENGE_PAGE_SET_DURATION_TYPE',
					gM = 'CREATE_CHALLENGE_PAGE_SET_DURATION_START_DATE',
					mM = 'CREATE_CHALLENGE_PAGE_SET_DURATION_END_DATE',
					AM = 'CREATE_CHALLENGE_PAGE_FETCH_PARTICIPANTS',
					_M = 'CREATE_CHALLENGE_PAGE_FETCH_PARTICIPANTS_DONE',
					EM = 'CREATE_CHALLENGE_PAGE_CHECK_PARTICIPANT',
					TM = 'CREATE_CHALLENGE_PAGE_SUBMIT',
					CM = 'CREATE_CHALLENGE_PAGE_SUBMIT_DONE',
					SM = 'CREATE_CHALLENGE_PAGE_CLOSE_NOTIFICATION',
					IM = 'CREATE_CHALLENGE_PAGE_SET_SUMMARY_DIALOG_STATE',
					vM = 'CREATE_CHALLENGE_PAGE_SET_DISCARD_DIALOG_STATE',
					fM = 'FETCH_BETA_TESTING_ENROLLMENT',
					DM = 'FETCH_BETA_TESTING_ENROLLMENT_FETCHING',
					NM = 'FETCH_BETA_TESTING_ENROLLMENT_SUCCESS',
					RM = 'FETCH_BETA_TESTING_ENROLLMENT_FAIL',
					bM = 'UPDATE_BETA_TESTING_ENROLLMENT',
					LM = 'UPDATE_BETA_TESTING_ENROLLMENT_UPDATING',
					PM = 'UPDATE_BETA_TESTING_ENROLLMENT_UPDATE_SUCCESS',
					OM = 'UPDATE_BETA_TESTING_ENROLLMENT_UPDATE_FAIL';
			},
			593177: (e, t, i) => {
				'use strict';
				i.d(t, {
					$y: () => A,
					CJ: () => v,
					E1: () => g,
					H9: () => p,
					J0: () => m,
					JH: () => S,
					M: () => R,
					Mg: () => I,
					Nm: () => y,
					O9: () => s,
					PU: () => T,
					VB: () => h,
					YG: () => f,
					aL: () => N,
					aZ: () => _,
					bX: () => D,
					bc: () => E,
					h3: () => c,
					mZ: () => o,
					nA: () => l,
					nq: () => r,
					o_: () => u,
					og: () => d,
					vU: () => C,
				});
				var n = i(765722),
					a = i(316550);
				const s = 'FETCH_ACTIVITIES_QUERY',
					r = 'FETCH_ACTIVITIES_QUERY_FETCHING',
					o = 'FETCH_ACTIVITIES_QUERY_SUCCESS',
					l = 'FETCH_ACTIVITIES_QUERY_FAIL',
					c = (e) => ({ type: a.s1i, meta: { cacheTime: e ? null : 36e5 } }),
					d = (e) => ({ type: a.Wby, activityId: e }),
					u = (e, t) => ({
						type: a.kI,
						activityHrTimeInZones: e,
						activityId: t,
						receivedAt: Date.now(),
					}),
					p = (e) => ({ type: a.z3k, activityId: e }),
					y = (e, t) => ({
						type: a.THl,
						activityPowerTimeInZones: e,
						activityId: t,
						receivedAt: Date.now(),
					}),
					h = (e) => ({ type: s, queryParams: e, receivedAt: Date.now() }),
					g = (e, t) => n.tI.post('/activity-service/activity', t),
					m = (e, t, i) => n.tI.put(`/activity-service/activity/${t}`, i),
					A = (e, t) => n.tI.delete(`/activity-service/activity/${t}`),
					_ = (e) => n.tI.get(`/activity-service/activity/${e}`),
					E = (e) => ({ type: a.ACT, activityId: e }),
					T = (e, t) => ({
						type: a._nf,
						activity: e,
						activityId: t,
						receivedAt: Date.now(),
					}),
					C = (e) => ({ type: a.LNJ, activitiesIds: e }),
					S = (e) => ({ type: a.r9e, activities: e, receivedAt: Date.now() }),
					I = (e) => ({ type: a.ThX, chartsOrder: e, receivedAt: Date.now() }),
					v = (e, t) => ({ type: a.T1Q, activityId: e, callback: t }),
					f = (e) => ({ type: a.Kgm, activitiesIds: e }),
					D = () => ({ type: a.CWI }),
					N = (e, t) => ({
						type: a.Ki8,
						activity: e,
						activityId: t,
						receivedAt: Date.now(),
					}),
					R = () => ({ type: a.EI$ });
			},
			257931: (e, t, i) => {
				'use strict';
				i.d(t, {
					ES: () => A,
					HF: () => s,
					Hd: () => _,
					IX: () => C,
					MR: () => T,
					PA: () => c,
					W0: () => l,
					Wp: () => v,
					XV: () => E,
					YQ: () => y,
					YV: () => g,
					Z4: () => o,
					_n: () => D,
					bh: () => I,
					cR: () => u,
					dj: () => p,
					ic: () => r,
					lv: () => f,
					lx: () => d,
					p$: () => h,
					us: () => S,
					uv: () => m,
				});
				var n = i(316550),
					a = i(765722);
				const s = 'PAUSE_ATP_PLAN',
					r = 'RESUME_ATP_PLAN',
					o = 'REACT_TO_COACH',
					l = 'QUIT_ATP_PLAN',
					c = (e, t) => {
						if (e) return a.q8.delete(`/atp/athlete/plan/schedule/${e}/${t}`);
					},
					d = (e, t, i) => {
						if (e)
							return a.q8.put(
								`/atp/athlete/plan/reschedule?athletePlanId=${e}&scheduleWorkoutId=${t}&newDate=${i}`
							);
					},
					u = (e) => {
						let t = { type: n.gkj };
						if (e)
							for (var i in e) e.hasOwnProperty(i) && e[i] && (t[i] = e[i]);
						return t;
					},
					p = (e, t, i) => ({
						type: n.MQ4,
						response: e.data,
						planStatus: t,
						atpPlan: i,
					}),
					y = (e) => ({ type: n.tXk, error: e }),
					h = (e) => ({ type: s, athletePlanId: e }),
					g = (e, t, i) => ({
						type: r,
						athletePlanId: e,
						reason: t,
						callback: i,
					}),
					m = (e, t) => ({ type: l, athletePlanId: e, callback: t }),
					A = (e) => ({ type: 'COMPLETE_ATP_PLAN', athletePlanId: e }),
					_ = (e, t, i, n) => ({
						type: o,
						athletePlanId: e,
						actionId: t,
						actionOptionId: i,
						callback: n,
					}),
					E = ({ workoutPlanTypeId: e, lang: t }) => ({
						type: n.TNY,
						workoutPlanTypeId: e,
						lang: t,
					}),
					T = ({
						planTypeId: e,
						prePlanWeeklyMileage: t,
						prePlanTrainingPace: i,
						selectedGoal: a,
						selectedPaceGoalTime: s,
					}) => ({
						type: n.Qdd,
						planTypeId: e,
						prePlanWeeklyMileage: t,
						prePlanTrainingPace: i,
						selectedGoal: a,
						selectedPaceGoalTime: s,
					}),
					C = ({ workoutPlanTypeId: e, unitType: t }) => ({
						type: n.WmP,
						workoutPlanTypeId: e,
						unitType: t,
					}),
					S = ({ workoutPlanTypeId: e, unitType: t }) => ({
						type: n.O0X,
						workoutPlanTypeId: e,
						unitType: t,
					}),
					I = ({
						workoutPlanTypeId: e,
						prePlanWeeklyMileage: t,
						prePlanTrainingPace: i,
						lang: a,
					}) => ({
						type: n.jR8,
						workoutPlanTypeId: e,
						prePlanWeeklyMileage: t,
						prePlanTrainingPace: i,
						lang: a,
					}),
					v = ({
						workoutPlanTypeId: e,
						prePlanWeeklyMileage: t,
						prePlanTrainingPace: i,
						lang: a,
					}) => ({
						type: n.vJl,
						workoutPlanTypeId: e,
						prePlanWeeklyMileage: t,
						prePlanTrainingPace: i,
						lang: a,
					}),
					f = ({
						workoutPlanTypeId: e,
						goal: t,
						raceGoalTime: i,
						prePlanWeeklyMileage: a,
						prePlanTrainingPace: s,
						lang: r,
						callback: o,
					}) => ({
						type: n.TIL,
						workoutPlanTypeId: e,
						goal: t,
						raceGoalTime: i,
						prePlanWeeklyMileage: a,
						prePlanTrainingPace: s,
						lang: r,
						callback: o,
					}),
					D = ({ coachKey: e, videoKey: t, lang: i }) => ({
						type: n.e14,
						coachKey: e,
						videoKey: t,
						lang: i,
					});
			},
			211794: (e, t, i) => {
				'use strict';
				i.d(t, {
					$P: () => D,
					Al: () => o,
					BE: () => C,
					BX: () => c,
					Eo: () => R,
					L: () => b,
					L3: () => T,
					L4: () => U,
					LT: () => f,
					Ri: () => s,
					TG: () => F,
					V$: () => y,
					WK: () => O,
					Y1: () => g,
					ZS: () => _,
					Zj: () => v,
					a4: () => h,
					b5: () => M,
					b6: () => E,
					cG: () => u,
					cX: () => d,
					fj: () => A,
					h0: () => G,
					iZ: () => w,
					i_: () => P,
					iu: () => L,
					k0: () => r,
					lj: () => N,
					md: () => l,
					mx: () => m,
					n2: () => B,
					oC: () => H,
					pq: () => x,
					rE: () => k,
					sj: () => p,
					tX: () => I,
					zM: () => S,
				});
				var n = i(316550),
					a = i(765722);
				const s = (e, t) => ({ type: n.AkP, view: e, displayName: t }),
					r = () => ({ type: n.$QK }),
					o = (e) => ({ type: n.YlI, value: e }),
					l = (e) => ({ type: n.Hx4, value: e }),
					c = () => ({ type: n.XbS }),
					d = () => ({ type: n.jJe }),
					u = (e) => ({ type: n.t$B, data: e, receivedAt: Date.now() }),
					p = () => ({ type: n.l0b, data: null, receivedAt: Date.now() }),
					y = (e) => ({ type: n.F1d, displayName: e }),
					h = () => ({ type: n.CzN }),
					g = (e) => ({ type: n.Qmh, data: e, receivedAt: Date.now() }),
					m = () => ({ type: n.WC9, data: null, receivedAt: Date.now() }),
					A = (e) => ({ type: n.LvO, data: e, receivedAt: Date.now() }),
					_ = (e, t, i, a) => ({
						type: n.xst,
						categoryId: e,
						difficultyId: t,
						start: i,
						limit: a,
					}),
					E = () => ({ type: n.pfG, data: null, receivedAt: Date.now() }),
					T = (e) => ({ type: n.Znr, data: e, receivedAt: Date.now() }),
					C = (e, t, i, a) => ({
						type: n.ToW,
						categoryId: e,
						difficultyId: t,
						start: i,
						limit: a,
					}),
					S = () => ({ type: n.vJ6, data: null, receivedAt: Date.now() }),
					I = (e, t, i, a, s) => ({
						type: n.fIj,
						displayName: e,
						categoryId: t,
						difficultyId: i,
						start: a,
						limit: s,
					}),
					v = (e) => ({ type: n.Bz9, data: e, receivedAt: Date.now() }),
					f = () => ({ type: n.RWK, data: null, receivedAt: Date.now() }),
					D = (e, t) => ({
						type: n.NrZ,
						data: e,
						isAppending: t,
						receivedAt: Date.now(),
					}),
					N = () => ({ type: n.n9V, data: null, receivedAt: Date.now() }),
					R = (e, t) => ({ type: n.yKI, start: e, limit: t }),
					b = () => ({ type: n.jHm }),
					L = (e, t) => {
						let i = `/badge-service/badge/detail/v2/${e}`;
						return (
							t && (i = `/badge-service/badge/${t}/earned/detail/${e}`),
							a.tI.get(i).then(({ data: e }) => e)
						);
					},
					P = (e) => ({ type: n.Gv3, badgeIds: e }),
					O = () => ({ type: n.gdS }),
					w = (e, t, i) =>
						a.tI
							.get(`/badge-service/badge/earned/detail/${e}/connections`, {
								params: { start: t, limit: i },
							})
							.then((e) => e.data),
					F = (e, t, i, n) =>
						a.tI
							.get(
								`/badge-service/badge/${e}/earned/detail/repeatable/v2/${t}`,
								{ params: { start: i, limit: n } }
							)
							.then((e) => e.data),
					k = (e, t) => ({ type: n.Ft_, displayName: e, activityId: t }),
					U = (e) => ({ type: n.Rzy, data: e, receivedAt: Date.now() }),
					M = () => ({ type: n.nfx, data: null, receivedAt: Date.now() }),
					G = (e, t) => ({ type: n.dWh, displayName: e, calendarDate: t }),
					x = (e) => ({ type: n.Qr3, data: e, receivedAt: Date.now() }),
					B = () => ({ type: n.UUm, data: null, receivedAt: Date.now() }),
					H = () => a.tI.put('/badge-service/badge/levelupviewed', {});
			},
			624344: (e, t, i) => {
				'use strict';
				i.d(t, { Q: () => a, U: () => s });
				var n = i(316550);
				function a() {
					return { type: n.nwg };
				}
				function s(e) {
					return { type: n.BvN, payload: e };
				}
			},
			22903: (e, t, i) => {
				'use strict';
				i.d(t, {
					$i: () => w,
					$p: () => h,
					CJ: () => P,
					FJ: () => k,
					Fu: () => c,
					G5: () => r,
					JN: () => O,
					K4: () => E,
					Kr: () => g,
					MV: () => d,
					O1: () => b,
					OL: () => f,
					S7: () => R,
					Tt: () => l,
					UN: () => o,
					XM: () => y,
					YY: () => v,
					aF: () => A,
					be: () => L,
					cx: () => F,
					dS: () => m,
					eG: () => U,
					ev: () => T,
					fU: () => D,
					hw: () => n,
					lE: () => s,
					mq: () => u,
					rY: () => _,
					sD: () => p,
					sY: () => a,
					vK: () => C,
					vj: () => I,
					wP: () => S,
					zL: () => N,
				});
				const n = 'FETCH_DAY_BPS',
					a = 'FETCH_DAY_BPS_FETCHING',
					s = 'FETCH_DAY_BPS_SUCCESS',
					r = 'FETCH_DAY_BPS_FAIL',
					o = 'FETCH_52_WEEKS_BPS',
					l = 'FETCH_52_WEEKS_BPS_FETCHING',
					c = 'FETCH_52_WEEKS_BPS_FAIL',
					d = 'FETCH_52_WEEKS_BPS_SUCCESS',
					u = 'FETCH_52_WEEKS_BPS_REPORT_FETCHING',
					p = 'FETCH_52_WEEKS_BPS_REPORT_FAIL',
					y = 'FETCH_52_WEEKS_BPS_REPORT_SUCCESS',
					h = 'FETCH_MULTIPLE_DAYS_BPS',
					g = 'FETCH_MULTIPLE_DAYS_BPS_FETCHING',
					m = 'FETCH_MULTIPLE_DAYS_BPS_SUCCESS',
					A = 'FETCH_MULTIPLE_DAYS_BPS_FAIL',
					_ = 'SET_CURRENT_PAGE_DATE',
					E = 'SET_CURRENT_BP_TAB',
					T = 'DELETE_BP_ENTRY',
					C = 'DELETING_BP_ENTRY',
					S = 'DELETING_BP_SUCCESS',
					I = 'DELETING_BP_FAIL',
					v = 'CLEAN_UP_BP_DATA',
					f = 'ADD_BPM',
					D = 'ADD_BPM_FAIL',
					N = 'ADD_BPM_START',
					R = 'ADD_BPM_SUCCESS',
					b = 'FETCH_LATEST_BP',
					L = 'FETCH_LATEST_BP_FAIL',
					P = 'FETCH_LATEST_BP_SUCCESS',
					O = 'FETCH_LATEST_BP_FETCHING',
					w = 'UPDATE_BPM_NOTE',
					F = 'UPDATE_BPM_NOTE_START',
					k = 'UPDATE_BPM_NOTE_SUCCESS',
					U = 'UPDATE_BPM_NOTE_FAIL';
			},
			570088: (e, t, i) => {
				'use strict';
				i.d(t, {
					$v: () => M,
					AE: () => m,
					AN: () => X,
					Be: () => c,
					Bk: () => B,
					Cl: () => ge,
					D6: () => b,
					Dg: () => z,
					Dv: () => x,
					EM: () => o,
					ER: () => ue,
					Ev: () => Ne,
					FC: () => Ce,
					FK: () => ve,
					Go: () => Fe,
					H9: () => ye,
					Iy: () => R,
					Ki: () => Oe,
					LX: () => Te,
					L_: () => w,
					ND: () => r,
					NU: () => j,
					NX: () => Ae,
					NY: () => N,
					Nl: () => O,
					Po: () => G,
					QA: () => ae,
					Qx: () => H,
					RE: () => le,
					Re: () => Ie,
					SX: () => Y,
					T$: () => Se,
					T9: () => Ee,
					Tj: () => te,
					UG: () => q,
					V2: () => we,
					V6: () => h,
					W2: () => V,
					Wp: () => Le,
					Ws: () => he,
					YR: () => Z,
					Yz: () => u,
					ZA: () => oe,
					Zq: () => re,
					Zs: () => me,
					a$: () => _e,
					aZ: () => pe,
					ah: () => de,
					ar: () => ne,
					av: () => y,
					b3: () => Pe,
					by: () => k,
					c$: () => d,
					ci: () => _,
					cv: () => f,
					e1: () => Re,
					eK: () => se,
					eR: () => F,
					eh: () => A,
					fk: () => U,
					gB: () => Q,
					ge: () => $,
					gp: () => S,
					jN: () => v,
					jf: () => ce,
					jy: () => be,
					kX: () => D,
					ls: () => L,
					ms: () => ie,
					oE: () => E,
					pJ: () => ee,
					qM: () => J,
					ri: () => K,
					sj: () => C,
					tb: () => P,
					tw: () => fe,
					uo: () => g,
					v_: () => p,
					vj: () => T,
					w3: () => I,
					wA: () => W,
					wt: () => l,
					xV: () => De,
				});
				var n = i(316550),
					a = i(782152),
					s = i(765722);
				const r = () => ({ type: n.QdA }),
					o = (e) => ({ type: n.Kel, calendarPreferences: e }),
					l = (e) => ({ type: n.MoJ, calendarPreferences: e }),
					c = (e, t, i, a) => ({
						type: n.bsy,
						modal: e,
						data: t,
						date: i,
						trainingPlanId: a,
					}),
					d = () => ({ type: n.uxq }),
					u = (e, t, i) => ({
						type: n.I_T,
						date: e,
						clickTop: t,
						clickLeft: i,
					}),
					p = () => ({ type: n.r7g }),
					y = (e, t, i) => ({ type: n.ZsZ, year: e, month: t, date: i }),
					h = (e, t, i, a, s, r = !1) => ({
						type: n.AcC,
						year: e,
						month: t,
						day: i,
						firstDayOfWeek: a,
						groupId: s,
						append: r,
					}),
					g = (e, t) => ({
						type: n.yDr,
						calendarWeek: e,
						receivedAt: Date.now(),
						append: t,
					}),
					m = (e, t, i, a = !1) => ({
						type: n.y4K,
						year: e,
						month: t,
						groupId: i,
						append: a,
					}),
					A = (e, t) => ({
						type: n.Wm1,
						calendarMonth: e,
						receivedAt: Date.now(),
						append: t,
					}),
					_ = (e, t) => ({ type: n.qOx, items: e, view: t }),
					E = (e) => ({ type: n.Kyh, message: e }),
					T = (e, t, i, a) => ({
						type: n.rkL,
						content: e,
						date: t,
						editMode: i,
						data: a,
					}),
					C = () => ({ type: n.o84 }),
					S = (e, t, i, n) =>
						s.tI.post('/calendar-service/note', {
							noteName: t,
							content: i,
							date: n,
							id: null,
						}),
					I = (e, t, i, n, a) =>
						s.tI.put(`/calendar-service/note/${t}`, {
							noteName: i,
							content: n,
							date: a,
							id: t,
						}),
					v = (e, t, i, n, a, r, o) =>
						s.tI.put(
							`/trainingplan-service/trainingplan/scheduled/notes/${t}`,
							{
								noteName: i,
								content: n,
								date: a,
								trainingPlanId: r,
								id: t,
								ownerId: o,
							}
						),
					f = (e) => ({ type: n.skk, noteId: e }),
					D = (e, t) => ({ type: n.mRG, noteId: t, json: e }),
					N = (e) => ({ type: n.miu, noteId: e }),
					R = (e, t) => s.tI.delete(`/calendar-service/note/${t}`),
					b = (e, t) =>
						s.tI.delete(
							`/trainingplan-service/trainingplan/noteTask/${t}/${e}`
						),
					L = (e, t, i) =>
						s.tI.put(`/calendar-service/calendarItem/${e}/${t.id}/date/${i}`, {
							...t,
							date: i,
						}),
					P = (e) => ({ type: n.JVA, date: e }),
					O = (e, t) => ({
						type: n.Nr3,
						date: t,
						tps: e ? e.trainingPlanList : [],
						receivedAt: Date.now(),
					}),
					w = (e) =>
						s.tI.get(
							`/trainingplan-service/trainingplan/active-plans?startDate=${e}`
						),
					F = (e, t) => ({ type: n.cf7, tpId: e, callback: t }),
					k = () => ({ type: n.RyD }),
					U = (e) => ({ type: n.D1G, tp: e, receivedAt: Date.now() }),
					M = (e, t) =>
						s.tI.get(
							`/trainingplan-service/trainingplan/schedule/${e}?&startDate=${t}`
						),
					G = (e, t, i) =>
						s.tI.post(
							`/trainingplan-service/trainingplan/addWorkoutTask/${e}`,
							`workoutSchedulePk=${t}&scheduleDate=${i}`,
							{
								headers: {
									'Content-Type': 'application/x-www-form-urlencoded',
								},
							}
						),
					x = (e, t) =>
						s.tI.delete(
							`/trainingplan-service/trainingplan/workoutTask/${e}/${t}`
						),
					B = (e, t, i) =>
						s.tI.post(
							`/trainingplan-service/trainingplan/moveNoteTask/${t}`,
							`noteSchedulePk=${e}&scheduleDate=${i}`,
							{
								headers: {
									'Content-Type': 'application/x-www-form-urlencoded',
								},
							}
						),
					H = (e, t, i) =>
						s.tI.post(
							`/trainingplan-service/trainingplan/moveWorkoutTask/${t}`,
							`workoutSchedulePk=${e}&scheduleDate=${i}`,
							{
								headers: {
									'Content-Type': 'application/x-www-form-urlencoded',
								},
							}
						),
					V = (e, t, i, n = () => {}, a) => {
						let r = '/calendar-service/event';
						return (
							t && (r = `/calendar-service/group/${t}/event`),
							s.tI
								.post(r, e)
								.then((e) => {
									if (i && e.data.id) {
										const t = new FormData();
										t.append('file', i);
										let n = `/calendar-service/event/${e.data.id}/image`;
										s.tI.post(n, t, {
											headers: { 'Content-Type': 'multipart/form-data' },
										});
									}
									return (
										n(e.data),
										a &&
											s.tI.put(
												`/calendar-service/event/${e.data.id}/status/PENDING_OFFICIAL`
											),
										e
									);
								})
								.catch((e) => e)
						);
					},
					W = (e) => {
						var t, i;
						return !e.official &&
							null !== (t = e.statuses) &&
							void 0 !== t &&
							t.includes('OFFICIAL')
							? s.tI.delete(`/calendar-service/event/${e.id}/status/OFFICIAL`)
							: !e.official ||
								  (null !== (i = e.statuses) &&
										void 0 !== i &&
										i.includes('OFFICIAL'))
								? void 0
								: s.tI.put(
										`/calendar-service/event/${e.id}/status/PENDING_OFFICIAL`
									);
					},
					J = (e, t, i, n) => {
						let a = '/calendar-service/';
						return (
							n && (a += `group/${n}/`),
							(a += `event/${t}`),
							i.eventGoal && delete i.eventGoal,
							s.tI.put(a, i).then(() => {
								var e, n;
								!i.official &&
								null !== (e = i.statuses) &&
								void 0 !== e &&
								e.includes('OFFICIAL')
									? s.tI.delete(`/calendar-service/event/${t}/status/OFFICIAL`)
									: !i.offical ||
										(null !== (n = i.statuses) &&
											void 0 !== n &&
											n.includes('OFFICIAL')) ||
										s.tI.put(
											`/calendar-service/event/${t}/status/PENDING_OFFICIAL`
										);
							})
						);
					},
					Y = (e, t, i) => {
						let n = '/calendar-service/';
						return (
							i && (n += `group/${i}/`), (n += `event/${t}`), s.tI.delete(n)
						);
					},
					$ = (e) => {
						const t = `/calendar-service/event/${e}/subscription`;
						return s.tI.post(t);
					},
					j = (e) => {
						const t = `/calendar-service/event/${e}/subscription`;
						return s.tI.delete(t);
					},
					K = (e, t) => {
						const i = `/calendar-service/event/${e}/image`;
						return s.tI.delete(i).then(() => {
							const i = new FormData();
							i.append('file', t);
							let n = `/calendar-service/event/${e}/image`;
							s.tI.post(n, i, {
								headers: { 'Content-Type': 'multipart/form-data' },
							});
						});
					},
					z = (e) => {
						const t = `/calendar-service/event/${e}/image`;
						return s.tI.delete(t);
					},
					q = (e, t) => s.tI.get(`/calendar-service/event/${e}/image/${t}`),
					Q = (e) => {
						const t = { headers: { 'X-RaceEvent-Sig': e.sig } };
						return s.tI.put(
							'/calendar-service/event/discoverable/conversion',
							e,
							t
						);
					},
					X = () => ({ type: n.Wfb }),
					Z = (e, t) => ({ type: n.K$7, eventId: t, json: e }),
					ee = (e, t, i, a) => ({
						type: n.xi7,
						eventId: e,
						groupId: t,
						shareable: i,
						callback: a,
					}),
					te = (e, t, i) => {
						let n = '/calendar-service/';
						return (
							t && (n += `group/${t}/`),
							(n += `event/${e}`),
							i && (n += '/shareable'),
							s.tI.get(n)
						);
					},
					ie = (e) => {
						const t = new a.A().convertObjectToQueryString(e);
						return s.tI.get(`/calendar-service/events${t}`);
					},
					ne = (e) => ({ type: n.Y3L, callback: e }),
					ae = (e) => ({ type: n.yge, json: e }),
					se = (e, t) => ({ type: n.gYR, data: e, callback: t }),
					re = (e, t) => ({ type: n.jE0, id: e, callback: t }),
					oe = (e, t) => ({ type: n.n6s, year: e, groupId: t }),
					le = (e) => ({
						type: n.XCM,
						calendarYear: e,
						receivedAt: Date.now(),
					}),
					ce = () => ({ type: n.ns7 }),
					de = (e) => ({ type: n.KO4, show: e }),
					ue = () => ({ type: n._1h }),
					pe = () => ({ type: n.lnI }),
					ye = () => ({ type: n.jau }),
					he = () => ({ type: n.sOw }),
					ge = (e) => ({ type: n.Fl7, date: e }),
					me = (e) => ({ type: n.kpd, meta: { cacheTime: e ? null : 12e4 } }),
					Ae = (e, t) => ({
						type: n.e0q,
						shareableEventUuid: e,
						meta: { cacheTime: t ? null : 12e4 },
					}),
					_e = ({
						eventImageUUID: e,
						reason: t,
						note: i,
						shareableEventUuid: n,
					}) => {
						const a = { eventImageUUID: e, reason: t, note: i },
							r = `/calendar-service/event/${n}/flag-image`;
						return s.tI.put(r, a);
					},
					Ee = (e) => ({ type: n.QLz, meta: { cacheTime: e ? null : 1e4 } }),
					Te = (e) => ({ type: n.mQ6, json: e }),
					Ce = (e) => ({ type: n.gPC, data: e, receivedAt: Date.now() }),
					Se = ({ numDaysForward: e, limit: t, callback: i }) => ({
						type: n.cN1,
						numDaysForward: e,
						limit: t,
						callback: i,
					}),
					Ie = ({ numDaysForward: e, limit: t }) => {
						let i = `/calendar-service/events/upcoming?numDaysForward=${e}&limit=${t}`;
						return s.tI.get(i);
					},
					ve = (e, t) => {
						let i = `/calendar-service/event/${e}/customization`;
						return s.tI.put(i, t);
					},
					fe = (e) => {
						let t = `/calendar-service/events?trainingPlanId=${e}`;
						return s.tI.get(t);
					},
					De = (
						{
							startDate: e,
							endDate: t,
							eventType: i,
							pageIndex: a,
							limit: s,
							sort: r,
							callback: o,
						},
						l
					) => ({
						type: n.yU1,
						startDate: e,
						endDate: t,
						eventType: i,
						pageIndex: a,
						limit: s,
						sort: r,
						callback: o,
						meta: { cacheTime: l ? null : 1e4 },
					}),
					Ne = () => ({ type: n.OkU }),
					Re = (e) => ({ type: n.FLj, event: e }),
					be = () => ({ type: n.A9V }),
					Le = () => ({ type: n.lrD }),
					Pe = (e) => ({ type: n.SK8, courseId: e }),
					Oe = (e) => ({ type: n.pld, meta: { cacheTime: e ? null : 36e5 } }),
					we = (e) => ({ type: n.lNg, event: e }),
					Fe = () => ({ type: n.GDX });
			},
			348900: (e, t, i) => {
				'use strict';
				i.d(t, {
					Am: () => p,
					BU: () => L,
					DW: () => l,
					Fc: () => b,
					L7: () => E,
					MO: () => f,
					MT: () => N,
					Mb: () => h,
					NT: () => u,
					OJ: () => g,
					Ri: () => T,
					Sb: () => S,
					Vs: () => d,
					Yw: () => D,
					Zz: () => a,
					bc: () => _,
					dj: () => A,
					fg: () => r,
					iu: () => s,
					m1: () => I,
					mR: () => v,
					rH: () => R,
					sy: () => m,
					vJ: () => c,
					wP: () => y,
					xH: () => o,
					y7: () => C,
				});
				var n = i(316550);
				const a = ({ viewerSocialProfile: e, route: t }) => ({
						type: n.zy2,
						viewerSocialProfile: e,
						route: t,
					}),
					s = ({ route: e }) => ({ type: n.tmf, route: e }),
					r = ({ limit: e = 0, categoryTypeIds: t = [] }) => ({
						type: n.etd,
						limit: e,
						categoryTypeIds: t,
					}),
					o = ({ error: e = !1, list: t = null, hasMore: i = !1 }) => ({
						type: n.J5U,
						error: e,
						list: t,
						hasMore: i,
					}),
					l = (e) => ({ type: n.ijK, challenge: e }),
					c = (e) => ({ type: n.Jbg, challenge: e }),
					d = ({ error: e, challenge: t }) => ({
						type: n.SyM,
						error: e,
						challenge: t,
					}),
					u = () => ({ type: n.Glc }),
					p = (e) => ({ type: n.KK, notificationStatus: e }),
					y = ({ limit: e = 0, categoryTypeIds: t = [] }) => ({
						type: n.eD5,
						limit: e,
						categoryTypeIds: t,
					}),
					h = ({ error: e = !1, list: t = null, hasMore: i = !1 }) => ({
						type: n.$G$,
						error: e,
						list: t,
						hasMore: i,
					}),
					g = ({ challengeUuid: e }) => ({ type: n.nVB, challengeUuid: e }),
					m = ({ error: e = !1, challenge: t = null }) => ({
						type: n.eH,
						error: e,
						challenge: t,
					}),
					A = () => ({ type: n.ZaY }),
					_ = ({ error: e = !1, badge: t }) => ({
						type: n.sE5,
						error: e,
						badge: t,
					}),
					E = () => ({ type: n.aZV }),
					T = ({ error: e = !1, tooMany: t = !1 }) => ({
						type: n.nSW,
						error: e,
						tooMany: t,
					}),
					C = () => ({ type: n.twl }),
					S = () => ({ type: n.xhR }),
					I = (e = !1) => ({ type: n.icv, error: e }),
					v = (e = 0) => ({ type: n.uMM, limit: e }),
					f = ({
						error: e = !1,
						autoChallenge: t = null,
						groupChallenges: i = null,
						adHocChallenges: a = null,
						vivokidChallenges: s = null,
						teamStepsVivokidChallenges: r = null,
						badgeChallenges: o = null,
						virtualChallenges: l = null,
					}) => ({
						type: n.FEB,
						error: e,
						autoChallenge: t,
						groupChallenges: i,
						adHocChallenges: a,
						vivokidChallenges: s,
						teamStepsVivokidChallenges: r,
						badgeChallenges: o,
						virtualChallenges: l,
					}),
					D = () => ({ type: n.FP_ }),
					N = ({ open: e = !1, submitting: t = !1 }) => ({
						type: n.l11,
						open: e,
						submitting: t,
					}),
					R = ({ error: e = !1, autoChallenge: t = null }) => ({
						type: n.kmk,
						error: e,
						autoChallenge: t,
					}),
					b = (e = 0) => ({ type: n.D8k, limit: e }),
					L = ({
						error: e = !1,
						autoChallenge: t = null,
						groupChallenges: i = null,
						adHocChallenges: a = null,
						vivokidChallenges: s = null,
						teamStepsVivokidChallenges: r = null,
						badgeChallenges: o = null,
						virtualChallenges: l = null,
					}) => ({
						type: n.U33,
						error: e,
						autoChallenge: t,
						groupChallenges: i,
						adHocChallenges: a,
						vivokidChallenges: s,
						teamStepsVivokidChallenges: r,
						badgeChallenges: o,
						virtualChallenges: l,
					});
			},
			998317: (e, t, i) => {
				'use strict';
				i.d(t, { i: () => a });
				var n = i(316550);
				const a = (e, t, i, a, s) => ({
					type: n.Erh,
					payload: {
						resourceId: e,
						resourceType: t,
						start: i,
						limit: a,
						connectionStatusIncluded: s,
					},
				});
			},
			924392: (e, t, i) => {
				'use strict';
				i.d(t, {
					$o: () => q,
					$q: () => L,
					AB: () => l,
					AQ: () => v,
					Ar: () => ue,
					DO: () => ye,
					Dn: () => ge,
					Dz: () => f,
					E1: () => Re,
					ES: () => h,
					FY: () => _,
					Fl: () => ie,
					Ft: () => W,
					G6: () => c,
					HV: () => ce,
					J4: () => z,
					LU: () => U,
					MF: () => re,
					MH: () => Ee,
					NG: () => Ne,
					NY: () => T,
					Q8: () => O,
					SN: () => te,
					Ve: () => P,
					WB: () => Se,
					X5: () => X,
					Xf: () => E,
					YX: () => be,
					Z$: () => w,
					ZP: () => D,
					ZZ: () => ae,
					_: () => b,
					_N: () => Ae,
					_P: () => H,
					_g: () => De,
					b4: () => Te,
					bl: () => k,
					c4: () => Q,
					e6: () => ve,
					ei: () => g,
					el: () => Z,
					eq: () => y,
					er: () => F,
					f4: () => u,
					f6: () => R,
					fW: () => ee,
					fX: () => $,
					gY: () => Ce,
					gb: () => pe,
					h2: () => le,
					hK: () => G,
					hP: () => Le,
					i0: () => Ie,
					iR: () => he,
					jr: () => ne,
					kH: () => oe,
					n0: () => de,
					o4: () => me,
					o_: () => j,
					pA: () => Y,
					qk: () => _e,
					qn: () => B,
					r5: () => V,
					rU: () => fe,
					rf: () => N,
					ro: () => p,
					rv: () => C,
					to: () => A,
					uC: () => J,
					ue: () => I,
					vj: () => K,
					wG: () => m,
					xY: () => d,
					yW: () => se,
					ys: () => M,
					zD: () => S,
					zs: () => x,
				});
				var n = i(316550),
					a = i(133499),
					s = i(850564),
					r = i(765722),
					o = i(782152);
				const l = ({ displayName: e }, t) => ({
						type: n.Xui,
						displayName: e,
						meta: { cacheTime: t ? null : 1e3 },
					}),
					c = (e) => ({ type: n.Dkz, courses: e, receivedAt: Date.now() }),
					d = (e) => ({ type: n.rIZ, courses: e, receivedAt: Date.now() });
				function u() {
					return { type: n.zVl };
				}
				function p(e, t = !1) {
					return { type: n.Z9t, courseId: e, shouldFetchCourseSegments: t };
				}
				const y = (e, t) => ({
						type: n.Bpi,
						displayName: e,
						meta: { cacheTime: t ? null : 6e4 },
					}),
					h = (e, t) => ({
						type: n.zSV,
						displayName: e,
						meta: { cacheTime: t ? null : 6e4 },
					}),
					g = (e) => ({ type: n.N1N, courses: e, receivedAt: Date.now() }),
					m = (e) => ({ type: n.HOh, courses: e, receivedAt: Date.now() }),
					A = (e, t = !1) => ({
						type: n.KyZ,
						editableCourseData: e,
						historyOverwriteIndex: t,
					}),
					_ = () => ({ type: n.s5d }),
					E = (e) => ({ type: n.YXX, importedCourseData: e }),
					T = () => ({ type: n.oL }),
					C = () => ({ type: n.cjp }),
					S = (e) => ({ type: n.JJV, editableCourseDrawingData: e }),
					I = (e) => ({ type: n.uk7, payload: e }),
					v = (e) => ({ type: n.FUg, courseId: e }),
					f = (e, t, i) => ({
						type: n.z7x,
						payload: e,
						powerGuideIds: t,
						paceProIds: i,
					}),
					D = (e, t) => ({ type: n.rGC, payload: t, courseId: e }),
					N = () => ({ type: n.If5 }),
					R = () => ({ type: n.itB }),
					b = (e) => ({ type: n.Pht, status: e }),
					L = () => ({ type: n.obv }),
					P = (e, t) => ({ type: n.j84, selectionStart: e, selectionEnd: t }),
					O = () => ({ type: n.K8x }),
					w = (e) => ({ type: n.iYs, selectedGeoPoints: e }),
					F = () => ({ type: n.$6I }),
					k = () => ({ type: n.VBI });
				function U(e) {
					return { type: n.YR4, courseId: e };
				}
				function M(e) {
					return { type: n.zNS, courseId: e };
				}
				function G() {
					return { type: n.LDT };
				}
				function x(e) {
					return { type: n.x0h, courseId: e };
				}
				function B() {
					return { type: n.gmR };
				}
				function H(e) {
					return { type: n.KTH, params: e };
				}
				function V(e) {
					return { type: n.EE0, params: e };
				}
				function W(e) {
					return { type: n.w41, coursePointsArray: e };
				}
				function J() {
					return { type: n.JEj };
				}
				function Y(e) {
					return { type: n.EGn, payload: e };
				}
				function $() {
					return { type: n.sMW };
				}
				function j(e, t, i) {
					let a = {};
					return (
						e && (a.pointType = e),
						t && (a.pointLocation = t),
						i && (a.editModeMarkerInitialValue = i),
						{ type: n.xYJ, payload: { ...a } }
					);
				}
				function K() {
					return { type: n.SG4 };
				}
				const z = (e) => {
					const { courseId: t, privacyRule: i } = e,
						n = `/course-service/course/${t}/privacy`;
					return r.tI.put(n, i);
				};
				function q() {
					return { type: n.Bkw };
				}
				function Q() {
					return { type: n.NKt };
				}
				const X = (e) => {
						const t = new o.A().convertObjectToQueryString(e);
						return r.tI.get(`/course-service/course/popularRoutes${t}`);
					},
					Z = (e) => {
						let t = '/course-service/course/elevation';
						return (
							a.A.userInChina() &&
								(t = `/course-service/course/elevation/from/${s.A.CoordinateSystem.BD09}/CN`),
							r.tI.post(t, e)
						);
					},
					ee = (e) => r.tI.get(`/course-service/course/${e}`);
				function te(e) {
					return { type: n.PDz, payload: e };
				}
				function ie() {
					return { type: n.Sc0 };
				}
				const ne = (e, t = 10, i = !1, a, s = null) => ({
						type: n.Lvr,
						bounds: e,
						size: t,
						fromCourseIndex: i,
						sort: a,
						filter: s,
					}),
					ae = () => ({ type: n.Ntx });
				function se(e, t, i) {
					return {
						type: n.KuJ,
						consumer: e,
						courseId: t,
						meta: { cacheTime: i ? null : 6e4 },
					};
				}
				const re = (e, t) => ({
						type: n.TvT,
						boundingBox: e,
						meta: { cacheTime: t ? null : 1e3 },
					}),
					oe = (e) => ({ type: n.H$q, climbs: e, receivedAt: Date.now() }),
					le = () => ({ type: n.hZo });
				function ce() {
					return { type: n.Cb8 };
				}
				function de(e) {
					return { type: n.$kO, coursesList: e };
				}
				function ue(e) {
					return { type: n.DQH, courseIds: e };
				}
				function pe(e, t) {
					return { type: n.e72, courseListSortType: e, callback: t };
				}
				function ye() {
					return { type: n.tQx };
				}
				function he(e) {
					return { type: n.ia5, courseListFilters: e };
				}
				function ge() {
					return { type: n.Z7Y };
				}
				const me = (e, t) => ({
						type: n.Tzx,
						coursePoints: e,
						meta: { cacheTime: t ? null : 1e3 },
					}),
					Ae = (e) => ({
						type: n.fnA,
						climbsOnRouteOrCourse: e,
						receivedAt: Date.now(),
					}),
					_e = (e, t) => ({
						type: n.xoK,
						courseId: e,
						meta: { cacheTime: t ? null : 1e3 },
					}),
					Ee = (e) => ({
						type: n.t86,
						climbsOnRouteOrCourse: e,
						receivedAt: Date.now(),
					});
				function Te(e) {
					return { type: n.UIC, courseId: e };
				}
				const Ce = (e, t, i) => ({
						type: n.Ymo,
						climb: e,
						minDifficulty: t,
						maxDifficulty: i,
						meta: { cacheTime: 1e3 },
					}),
					Se = (e) => ({
						type: n.Ecg,
						secondaryClimbs: e,
						receivedAt: Date.now(),
					});
				function Ie() {
					return { type: n.I19 };
				}
				function ve() {
					return { type: n.fsE };
				}
				function fe(e, t, i) {
					return { type: n.a5T, params: e, climb: t, addClimbOnly: i };
				}
				function De(e) {
					return { type: n.TTW, courseId: e };
				}
				function Ne() {
					return { type: n._ye };
				}
				function Re() {
					return { type: n.U6E };
				}
				function be(e) {
					return { type: n.R6E, mapBoundingBox: e };
				}
				function Le() {
					return { type: n.UnO };
				}
			},
			129800: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ad: () => l,
					Cm: () => o,
					Ul: () => h,
					Uv: () => A,
					V6: () => r,
					VQ: () => m,
					bN: () => y,
					hG: () => g,
					i: () => u,
					ij: () => _,
					kJ: () => E,
					n_: () => a,
					q8: () => s,
					rw: () => c,
					tS: () => d,
					tw: () => p,
				});
				var n = i(316550);
				const a = ({ createFrom: e, initDisplayName: t, initGroupId: i }) => ({
						type: n.Ot9,
						createFrom: e,
						initDisplayName: t,
						initGroupId: i,
					}),
					s = () => ({ type: n.lPs }),
					r = (e) => ({ type: n.HGh, step: e }),
					o = ({ challengeType: e, challengeName: t }) => ({
						type: n.xXe,
						challengeType: e,
						challengeName: t,
					}),
					l = (e) => ({ type: n.f4Z, participantType: e }),
					c = ({ durationType: e, challengeDesc: t }) => ({
						type: n.gSc,
						durationType: e,
						challengeDesc: t,
					}),
					d = (e) => ({ type: n.BTK, startDate: e }),
					u = (e) => ({ type: n.mSF, endDate: e }),
					p = () => ({ type: n.LA5 }),
					y = ({
						error: e = !1,
						wheelchairMode: t = !1,
						initConnection: i = null,
						wheelchairConnections: a,
						nonWheelchairConnections: s,
						connections: r,
						groups: o,
					}) => ({
						type: n.IJ$,
						error: e,
						wheelchairMode: t,
						initConnection: i,
						wheelchairConnections: a,
						nonWheelchairConnections: s,
						connections: r,
						groups: o,
					}),
					h = ({ displayName: e, groupId: t, checked: i }) => ({
						type: n.g0W,
						displayName: e,
						groupId: t,
						checked: i,
					}),
					g = () => ({ type: n.yY3 }),
					m = (e = !1) => ({ type: n.tkB, error: e }),
					A = () => ({ type: n.erE }),
					_ = ({ open: e, dialogType: t, commit: i }) => ({
						type: n.s0I,
						open: e,
						dialogType: t,
						commit: i,
					}),
					E = ({ open: e }) => ({ type: n.KC$, open: e });
			},
			168718: (e, t, i) => {
				'use strict';
				i.d(t, {
					$g: () => p,
					Cp: () => o,
					DB: () => m,
					Hg: () => n,
					Lm: () => d,
					XV: () => A,
					Ym: () => _,
					ZL: () => s,
					_x: () => l,
					cN: () => u,
					fi: () => c,
					gd: () => a,
					i9: () => g,
					kB: () => y,
					lO: () => h,
					yI: () => r,
				});
				const n = 'FETCH_LATEST_CSS',
					a = 'FETCH_LATEST_CSS_FETCHING',
					s = 'FETCH_LATEST_CSS_SUCCESS',
					r = 'FETCH_LATEST_CSS_FAIL',
					o = 'FETCH_CSS_RANGE_DATA',
					l = 'FETCH_CSS_RANGE_DATA_SUCCESS',
					c = 'FETCH_CSS_RANGE_DATA_ERROR',
					d = 'FETCH_CSS_RANGE_DATA_FETCHING',
					u = 'ADD_CSS',
					p = 'ADD_CSS_START',
					y = 'ADD_CSS_SUCCESS',
					h = 'ADD_CSS_FAIL',
					g = 'DELETE_CSS',
					m = 'DELETING_CSS',
					A = 'DELETING_CSS_SUCCESS',
					_ = 'DELETING_CSS_FAIL';
			},
			808171: (e, t, i) => {
				'use strict';
				i.d(t, {
					$C: () => o,
					F$: () => l,
					Ph: () => d,
					Su: () => n,
					X7: () => s,
					ZO: () => r,
					p1: () => u,
					ph: () => p,
					qM: () => a,
					wz: () => c,
				});
				const n = 'CHECK_EXPORTABILITY',
					a = 'CHECK_EXPORTABILITY_SUCCESS',
					s = 'CHECK_EXPORTABILITY_FAIL',
					r = 'CHECK_EXPORTABILITY_FETCHING',
					o = 'DELETE_DAILY_SUMMARY',
					l = 'DELETE_DAILY_SUMMARY_SUCCESS',
					c = 'DELETE_DAILY_SUMMARY_FAIL',
					d = 'CLEAR_DELETE_DAILY_SUMMARY',
					u = 'FETCH_CLIMB_DIFFICULTIES',
					p = 'FETCH_CLIMB_DIFFICULTIES_SUCCESS';
			},
			450997: (e, t, i) => {
				'use strict';
				i.d(t, {
					Gh: () => s,
					NU: () => r,
					Tc: () => c,
					UP: () => a,
					XT: () => o,
					ZK: () => l,
					oI: () => d,
				});
				var n = i(316550);
				function a() {
					return { type: n.CLr };
				}
				function s(e) {
					return { type: n.v9P, payload: e };
				}
				const r = (e) => ({ type: n.rjW, payload: e });
				function o(e) {
					return { type: n.je6, payload: e };
				}
				function l(e) {
					return { type: n.vS0, payload: e };
				}
				function c(e) {
					return { type: n.eu0, payload: e };
				}
				function d() {
					return { type: n.pNI };
				}
			},
			745974: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ru: () => y,
					Y2: () => l,
					a4: () => u,
					aw: () => p,
					dN: () => o,
					eg: () => d,
					fD: () => c,
					in: () => r,
					tF: () => s,
				});
				var n = i(316550),
					a = i(619123);
				function s(e, t) {
					return {
						type: n.Qkm,
						payload: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function r(e, t) {
					return {
						type: n.SUq,
						payload: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function o(e, t) {
					return {
						type: n._4C,
						payload: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function l(e) {
					return { type: n.mqt, payload: e };
				}
				function c(e, t) {
					return {
						type: n.b5F,
						payload: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function d(e, t) {
					return {
						type: n.zEi,
						payload: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function u(e) {
					return {
						type: n.pPb,
						payload: e,
						loadingType: a.NM.loadingTypes.reloadTable,
					};
				}
				function p() {
					return { type: n.l1d, loadingType: a.NM.loadingTypes.reloadTable };
				}
				function y(e, t) {
					return {
						type: n.WOH,
						payload: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
			},
			563117: (e, t, i) => {
				'use strict';
				i.d(t, {
					$1: () => A,
					DA: () => s,
					Dj: () => c,
					Ff: () => n,
					Fm: () => g,
					Gs: () => r,
					NP: () => y,
					SP: () => d,
					Sc: () => h,
					WZ: () => m,
					mj: () => _,
					n2: () => E,
					tU: () => o,
					u4: () => p,
					us: () => a,
					w6: () => l,
					xt: () => u,
				});
				const n = 'FETCH_DAILY_ENDURANCE_SCORE_DATA_REPORTS',
					a = 'FETCH_DAILY_ENDURANCE_SCORE_DATA_REPORTS_FETCHING',
					s = 'FETCH_DAILY_ENDURANCE_SCORE_DATA_REPORTS_SUCCESS',
					r = 'FETCH_DAILY_ENDURANCE_SCORE_DATA_REPORTS_FAIL',
					o = 'FETCH_WEEKLY_ENDURANCE_SCORE_DATA_REPORTS',
					l = 'FETCH_WEEKLY_ENDURANCE_SCORE_DATA_REPORTS_FETCHING',
					c = 'FETCH_WEEKLY_ENDURANCE_SCORE_DATA_REPORTS_SUCCESS',
					d = 'FETCH_WEEKLY_ENDURANCE_SCORE_DATA_REPORTS_FAIL',
					u = 'FETCH_MONTHLY_ENDURANCE_SCORE_DATA_REPORTS',
					p = 'FETCH_MONTHLY_ENDURANCE_SCORE_DATA_REPORTS_FETCHING',
					y = 'FETCH_MONTHLY_ENDURANCE_SCORE_DATA_REPORTS_SUCCESS',
					h = 'FETCH_MONTHLY_ENDURANCE_SCORE_DATA_REPORTS_FAIL',
					g = 'FETCH_LATEST_ENDURANCE_SCORE_DATA_REPORTS',
					m = 'FETCH_LATEST_ENDURANCE_SCORE_DATA_REPORTS_FETCHING',
					A = 'FETCH_LATEST_ENDURANCE_SCORE_DATA_REPORTS_SUCCESS',
					_ = 'FETCH_LATEST_ENDURANCE_SCORE_DATA_REPORTS_FAIL',
					E = 'SWITCH_ENDURANCE_ACTIVE_TOGGLE';
			},
			410682: (e, t, i) => {
				'use strict';
				i.d(t, {
					AV: () => s,
					Be: () => r,
					CK: () => n,
					H7: () => a,
					Sy: () => d,
					Z0: () => l,
					lw: () => o,
					n5: () => u,
					y$: () => c,
				});
				const n = 'FETCH_QUERY_EVENTS',
					a = 'FETCH_QUERY_EVENTS_FETCHING',
					s = 'FETCH_QUERY_EVENTS_SUCCESS',
					r = 'FETCH_QUERY_EVENTS_FAIL',
					o = 'RESET_QUERY_EVENTS',
					l = 'UPDATE_QUERY_EVENTS';
				function c(e, t = () => {}) {
					return { type: n, query: e, callback: t };
				}
				function d() {
					return { type: o };
				}
				function u(e) {
					return { type: l, events: e };
				}
			},
			974396: (e, t, i) => {
				'use strict';
				i.d(t, { ZR: () => r, aZ: () => o, hf: () => a, vu: () => s });
				var n = i(316550);
				function a() {
					return { type: n.KD8 };
				}
				function s() {
					return { type: n.UeO };
				}
				function r() {
					return { type: n.fqy };
				}
				function o(e) {
					return { type: n.pF4, data: e };
				}
			},
			883557: (e, t, i) => {
				'use strict';
				i.d(t, {
					GO: () => g,
					JQ: () => A,
					Oc: () => n,
					Ub: () => a,
					Vm: () => l,
					ZO: () => y,
					am: () => r,
					bT: () => u,
					kD: () => d,
					pM: () => s,
					sD: () => o,
					tE: () => p,
					uD: () => h,
					wR: () => m,
					wh: () => c,
				});
				const n = 'FETCH_GOLF_COURSE',
					a = 'FETCH_GOLF_COURSE_SUCCESS',
					s = 'FETCH_GOLF_COURSE_FAIL',
					r = 'FETCH_GOLF_COURSE_STATS',
					o = 'FETCH_GOLF_COURSE_STATS_SUCCESS',
					l = 'FETCH_GOLF_COURSE_STATS_FAIL',
					c = 'FETCH_GOLF_COURSE_LAYOUTS',
					d = 'FETCH_GOLF_COURSE_LAYOUTS_SUCCESS',
					u = 'FETCH_GOLF_COURSE_LAYOUTS_FAIL',
					p = 'FETCH_GOLF_COURSES',
					y = 'FETCH_GOLF_COURSES_SUCCESS',
					h = 'FETCH_GOLF_COURSES_FAIL',
					g = 'FETCH_GOLF_COURSE_SCORECARDS',
					m = 'FETCH_GOLF_COURSE_SCORECARDS_SUCCESS',
					A = 'FETCH_GOLF_COURSE_SCORECARDS_FAIL';
			},
			853579: (e, t, i) => {
				'use strict';
				i.d(t, { Rs: () => a, gh: () => n, nJ: () => r, wJ: () => s });
				const n = 'FETCH_GOLF_LEADERBOARD',
					a = 'FETCH_GOLF_LEADERBOARD_FETCHING',
					s = 'FETCH_GOLF_LEADERBOARD_SUCCESS',
					r = 'FETCH_GOLF_LEADERBOARD_FAIL';
			},
			42821: (e, t, i) => {
				'use strict';
				i.d(t, { Py: () => s, k_: () => a, s2: () => n });
				const n = 'FETCH_GOLF_PROFILE',
					a = 'FETCH_GOLF_PROFILE_SUCCESS',
					s = 'FETCH_GOLF_PROFILE_FAIL';
			},
			379334: (e, t, i) => {
				'use strict';
				i.d(t, {
					BR: () => a,
					JX: () => n,
					KV: () => A,
					Kk: () => E,
					Qo: () => r,
					RD: () => _,
					XZ: () => c,
					Yn: () => h,
					Z: () => m,
					b1: () => S,
					bi: () => u,
					d6: () => T,
					eU: () => C,
					fO: () => y,
					k1: () => s,
					oD: () => p,
					sy: () => d,
					tg: () => o,
					wc: () => l,
					wi: () => g,
				});
				const n = 'FETCH_GOLF_SCORECARDS_SUMMARY',
					a = 'FETCH_GOLF_SCORECARDS_SUMMARY_SUCCESS',
					s = 'FETCH_GOLF_SCORECARDS_SUMMARY_FAIL',
					r = 'REMOVE_GOLF_SCORECARD_SUMMARY',
					o = 'FETCH_GOLF_SCORECARD_DETAIL',
					l = 'FETCH_GOLF_SCORECARD_DETAIL_FETCHING',
					c = 'FETCH_GOLF_SCORECARD_DETAIL_SUCCESS',
					d = 'FETCH_GOLF_SCORECARD_DETAIL_FAIL',
					u = 'FETCH_GOLF_SCORECARD',
					p = 'FETCH_GOLF_SCORECARD_FETCHING',
					y = 'FETCH_GOLF_SCORECARD_SUCCESS',
					h = 'FETCH_GOLF_SCORECARD_FAIL',
					g = 'UPDATE_GOLF_SCORECARD',
					m = 'UPDATE_GOLF_SCORECARD_UPDATING',
					A = 'UPDATE_GOLF_SCORECARD_SUCCESS',
					_ = 'UPDATE_GOLF_SCORECARD_FAIL',
					E = 'DELETE_GOLF_SCORECARD',
					T = 'DELETE_GOLF_SCORECARD_DELETING',
					C = 'DELETE_GOLF_SCORECARD_SUCCESS',
					S = 'DELETE_GOLF_SCORECARD_FAIL';
			},
			450711: (e, t, i) => {
				'use strict';
				i.d(t, {
					Bp: () => y,
					C0: () => s,
					Co: () => d,
					Ip: () => h,
					NN: () => r,
					Ni: () => l,
					U7: () => p,
					Wf: () => u,
					j: () => o,
					pl: () => a,
					uu: () => g,
					yS: () => c,
				});
				var n = i(316550);
				const a = (e, t) => ({
						type: n.O6s,
						displayName: e,
						meta: { cacheTime: t ? null : 1e3 },
					}),
					s = (e, t) => ({
						type: n.e5r,
						displayName: e,
						meta: { cacheTime: t ? null : 1e3 },
					}),
					r = (e, t) => ({
						type: n.Uuk,
						displayName: e,
						meta: { cacheTime: t ? null : 1e3 },
					}),
					o = (e, t) => ({ type: n.KCs, groupId: e, profileId: t }),
					l = (e) => ({ type: n.K1i, groupId: e }),
					c = () => ({ type: n.R24 }),
					d = (
						{ encodedKeyword: e, reset: t = !1, forceSearch: i = !1 },
						a
					) => ({
						type: n.fxz,
						encodedKeyword: e,
						reset: t,
						forceSearch: i,
						meta: { cacheTime: a ? null : 1e3 },
					}),
					u = (e) => ({ type: n.vj_, keyword: e }),
					p = ({ groupId: e, userProfileId: t, joinType: i }) => ({
						type: n.Xnf,
						groupId: e,
						userProfileId: t,
						joinType: i,
					}),
					y = ({ groupId: e, groupMemberRequestId: t }) => ({
						type: n.McN,
						groupId: e,
						groupMemberRequestId: t,
					}),
					h = (e, t) => ({ type: n.Eq3, groupId: e, userProfileId: t }),
					g = (e) => ({ type: n.anv, tab: e });
			},
			919734: (e, t, i) => {
				'use strict';
				i.d(t, { j: () => a });
				var n = i(316550);
				const a = (e, t, i, a, s, r) => ({
					type: n.kHX,
					payload: {
						userGroupPk: e,
						resourceId: t,
						resourceType: i,
						start: a,
						limit: s,
						connectionStatusIncluded: r,
					},
				});
			},
			212266: (e, t, i) => {
				'use strict';
				i.d(t, {
					$C: () => K,
					$l: () => yt,
					A0: () => Le,
					Aj: () => q,
					B8: () => Fe,
					BR: () => Q,
					Bf: () => z,
					CT: () => de,
					Ct: () => A,
					D3: () => W,
					DV: () => f,
					FX: () => G,
					GN: () => x,
					HF: () => Pe,
					IM: () => Xe,
					IW: () => U,
					IZ: () => N,
					Jb: () => Ne,
					KN: () => Ge,
					Kt: () => m,
					L6: () => rt,
					LU: () => ce,
					Lq: () => L,
					Lt: () => be,
					MT: () => O,
					MW: () => he,
					Mt: () => ne,
					N4: () => w,
					NI: () => M,
					NM: () => fe,
					OB: () => Ke,
					OC: () => B,
					OV: () => Te,
					QF: () => ot,
					QK: () => ke,
					RH: () => $e,
					RQ: () => ie,
					RU: () => te,
					S: () => nt,
					SA: () => D,
					SC: () => R,
					Sg: () => xe,
					Tm: () => He,
					UZ: () => re,
					Ui: () => a,
					VN: () => oe,
					WR: () => Ve,
					Wc: () => Ee,
					Wm: () => y,
					X: () => _,
					X1: () => I,
					XL: () => we,
					XT: () => De,
					Xm: () => Ae,
					Xt: () => V,
					Yn: () => st,
					ZE: () => ht,
					ZQ: () => at,
					ZU: () => s,
					_S: () => C,
					_i: () => ae,
					aG: () => Be,
					aR: () => ze,
					bW: () => me,
					cX: () => We,
					d3: () => Re,
					dZ: () => F,
					eD: () => Ye,
					f3: () => et,
					f7: () => Z,
					fB: () => p,
					fO: () => tt,
					fd: () => u,
					gG: () => Me,
					gJ: () => T,
					hW: () => X,
					hY: () => k,
					jt: () => Y,
					k$: () => h,
					kG: () => Ze,
					kV: () => Ie,
					kl: () => H,
					ks: () => ut,
					l: () => lt,
					l$: () => $,
					lC: () => ct,
					mK: () => ye,
					mc: () => gt,
					me: () => b,
					mm: () => pt,
					n2: () => it,
					ns: () => j,
					nv: () => je,
					nx: () => Se,
					o8: () => ge,
					oF: () => l,
					oV: () => qe,
					op: () => c,
					ou: () => S,
					pB: () => d,
					pg: () => P,
					pt: () => J,
					qJ: () => dt,
					rK: () => v,
					sq: () => se,
					t: () => ue,
					tc: () => pe,
					uU: () => Je,
					uV: () => r,
					uX: () => Ce,
					vX: () => E,
					wJ: () => o,
					xX: () => g,
					xe: () => ee,
					yH: () => Oe,
					yQ: () => ve,
					yZ: () => Ue,
					yr: () => Qe,
					zP: () => _e,
					zj: () => le,
				});
				var n = i(316550);
				const a = ({
						groupId: e,
						viewerSocialProfile: t,
						viewerUserPreferences: i,
						viewerUserBiometrics: a,
					}) => ({
						type: n.rMO,
						groupId: e,
						viewerSocialProfile: t,
						viewerUserPreferences: i,
						viewerUserBiometrics: a,
					}),
					s = ({
						group: e,
						groupMembers: t,
						groupAnnouncement: i,
						groupCourses: a,
						groupUserConnections: s,
						groupMemberRequest: r,
						groupInvitation: o,
					}) => ({
						type: n.JvC,
						group: e,
						groupMembers: t,
						groupAnnouncement: i,
						groupCourses: a,
						groupUserConnections: s,
						groupMemberRequest: r,
						groupInvitation: o,
					}),
					r = ({ isGroupPrivate: e, isGroupDeleted: t }) => ({
						type: n.OYz,
						isGroupPrivate: e,
						isGroupDeleted: t,
					}),
					o = (e) => ({ type: n.pVp, tab: e }),
					l = (e) => ({ type: n.qAt, feedTab: e }),
					c = ({ text: e }) => ({ type: n.OZA, text: e }),
					d = ({ groupAnnouncement: e }) => ({
						type: n.Q4E,
						groupAnnouncement: e,
					}),
					u = () => ({ type: n.Gx$ }),
					p = ({ text: e }) => ({ type: n.d16, text: e }),
					y = ({ newPost: e }) => ({ type: n.FXT, newPost: e }),
					h = () => ({ type: n.NkD }),
					g = ({ postUuid: e }) => ({ type: n.pC0, postUuid: e }),
					m = ({ postUuid: e }) => ({ type: n.$9, postUuid: e }),
					A = ({ postUuid: e }) => ({ type: n.hfK, postUuid: e }),
					_ = ({ postUuid: e, imageUuid: t }) => ({
						type: n.nmy,
						postUuid: e,
						imageUuid: t,
					}),
					E = ({ postUuid: e, imageUuid: t }) => ({
						type: n.y_2,
						postUuid: e,
						imageUuid: t,
					}),
					T = ({ postUuid: e }) => ({ type: n.H50, postUuid: e }),
					C = ({ activityId: e, imageUuid: t }) => ({
						type: n.Fkv,
						activityId: e,
						imageUuid: t,
					}),
					S = () => ({ type: n.gBU }),
					I = () => ({ type: n.uIV }),
					v = () => ({ type: n.GcM }),
					f = () => ({ type: n.Xev }),
					D = ({ posts: e, hasMore: t, cursor: i }) => ({
						type: n.dxM,
						posts: e,
						hasMore: t,
						cursor: i,
					}),
					N = () => ({ type: n.deR }),
					R = ({ groupId: e, postUuid: t }) => ({
						type: n.oCH,
						groupId: e,
						postUuid: t,
					}),
					b = ({ resourceType: e, resourceId: t }) => ({
						type: n.iP4,
						resourceType: e,
						resourceId: t,
					}),
					L = ({
						resourceType: e,
						resourceId: t,
						comments: i,
						hasMore: a,
					}) => ({
						type: n.ino,
						resourceType: e,
						resourceId: t,
						comments: i,
						hasMore: a,
					}),
					P = ({ resourceType: e, resourceId: t }) => ({
						type: n.Ea6,
						resourceType: e,
						resourceId: t,
					}),
					O = ({ resourceType: e, resourceId: t, text: i }) => ({
						type: n.oav,
						resourceType: e,
						resourceId: t,
						text: i,
					}),
					w = ({
						resourceType: e,
						resourceId: t,
						data: i,
						conversationUuid: a,
						conversationCommentUuid: s,
					}) => ({
						type: n.j0q,
						resourceType: e,
						resourceId: t,
						data: i,
						conversationUuid: a,
						conversationCommentUuid: s,
					}),
					F = ({ resourceType: e, resourceId: t, newComment: i }) => ({
						type: n.YoW,
						resourceType: e,
						resourceId: t,
						newComment: i,
					}),
					k = ({
						resourceType: e,
						resourceId: t,
						errorReachLimit: i = !1,
					}) => ({
						type: n.EW9,
						resourceType: e,
						resourceId: t,
						errorReachLimit: i,
					}),
					U = ({ resourceType: e, resourceId: t, comment: i }) => ({
						type: n.qUx,
						resourceType: e,
						resourceId: t,
						comment: i,
					}),
					M = ({ resourceType: e, resourceId: t, comment: i }) => ({
						type: n.Iln,
						resourceType: e,
						resourceId: t,
						comment: i,
					}),
					G = ({ resourceType: e, resourceId: t, comment: i }) => ({
						type: n.Q1o,
						resourceType: e,
						resourceId: t,
						comment: i,
					}),
					x = ({ deleteType: e, postUuid: t, course: i, postImage: a }) => ({
						type: n.DCy,
						deleteType: e,
						postUuid: t,
						course: i,
						postImage: a,
					}),
					B = () => ({ type: n.BC2 }),
					H = () => ({ type: n.JcD }),
					V = ({ resourceType: e, resourceId: t }) => ({
						type: n.mos,
						resourceType: e,
						resourceId: t,
					}),
					W = ({
						resourceType: e,
						resourceId: t,
						likers: i = null,
						error: a = !1,
					}) => ({
						type: n.HhY,
						resourceType: e,
						resourceId: t,
						likers: i,
						error: a,
					}),
					J = ({
						resourceType: e,
						resourceId: t,
						like: i,
						conversationUuid: a,
						likerInfo: s,
					}) => ({
						type: n.AL1,
						resourceType: e,
						resourceId: t,
						like: i,
						conversationUuid: a,
						likerInfo: s,
					}),
					Y = ({ resourceType: e, resourceId: t }) => ({
						type: n.DyE,
						resourceType: e,
						resourceId: t,
					}),
					$ = ({
						resourceType: e,
						resourceId: t,
						like: i = null,
						error: a = !1,
						likerInfo: s = {},
						conversationUuid: r = null,
						errorReachLimit: o = null,
					}) => ({
						type: n.luh,
						resourceType: e,
						resourceId: t,
						like: i,
						error: a,
						likerInfo: s,
						conversationUuid: r,
						errorReachLimit: o,
					}),
					j = ({
						resourceType: e,
						resourceId: t,
						conversationCommentUuid: i,
					}) => ({
						type: n.Ycw,
						resourceType: e,
						resourceId: t,
						conversationCommentUuid: i,
					}),
					K = ({
						resourceType: e,
						resourceId: t,
						conversationCommentUuid: i,
						likers: a = null,
						error: s = !1,
					}) => ({
						type: n.f6$,
						resourceType: e,
						resourceId: t,
						conversationCommentUuid: i,
						likers: a,
						error: s,
					}),
					z = ({
						resourceType: e,
						resourceId: t,
						conversationCommentUuid: i,
						like: a,
					}) => ({
						type: n.uIu,
						resourceType: e,
						resourceId: t,
						conversationCommentUuid: i,
						like: a,
					}),
					q = ({
						resourceType: e,
						resourceId: t,
						conversationCommentUuid: i,
					}) => ({
						type: n.$qU,
						resourceType: e,
						resourceId: t,
						conversationCommentUuid: i,
					}),
					Q = ({
						resourceType: e,
						resourceId: t,
						conversationCommentUuid: i,
						like: a = null,
						likeDto: s = null,
						error: r = !1,
						errorReachLimit: o = null,
					}) => ({
						type: n.HNN,
						resourceType: e,
						resourceId: t,
						conversationCommentUuid: i,
						like: a,
						likeDto: s,
						error: r,
						errorReachLimit: o,
					}),
					X = () => ({ type: n.JrO }),
					Z = () => ({ type: n.b2C }),
					ee = ({ leaderboardType: e }) => ({
						type: n.wN3,
						leaderboardType: e,
					}),
					te = ({ viewPrevious: e }) => ({ type: n.hDe, viewPrevious: e }),
					ie = () => ({ type: n.fyP }),
					ne = ({ list: e }) => ({ type: n.$QG, list: e }),
					ae = () => ({ type: n.HXW }),
					se = () => ({ type: n.DjL }),
					re = () => ({ type: n.l78 }),
					oe = ({ list: e, hasMore: t, cursor: i, daysLimit: a }) => ({
						type: n.zik,
						list: e,
						hasMore: t,
						cursor: i,
						daysLimit: a,
					}),
					le = () => ({ type: n.PXt }),
					ce = ({ groupId: e, activityId: t }) => ({
						type: n._DV,
						groupId: e,
						activityId: t,
					}),
					de = () => ({ type: n.XCX }),
					ue = () => ({ type: n.TFF }),
					pe = () => ({ type: n.s3g }),
					ye = () => ({ type: n.HiC }),
					he = (e) => ({ type: n.pCV, groupMemberRequest: e }),
					ge = (e) => ({ type: n.AXw, groupMembers: e }),
					me = () => ({ type: n.hw8 }),
					Ae = (e, t) => ({
						type: n.D9N,
						groupInvites: e,
						groupRejectedInvites: t,
					}),
					_e = (e) => ({ type: n.Sir, groupUserConnections: e }),
					Ee = (e) => ({ type: n.rYD, groupUserConnection: e }),
					Te = ({ keyword: e, reset: t = !1 }) => ({
						type: n.y9K,
						keyword: e,
						reset: t,
					}),
					Ce = ({
						reset: e = !1,
						list: t = [],
						hasMore: i = !1,
						nextCursor: a,
						error: s,
					}) => ({
						type: n.oDQ,
						reset: e,
						list: t,
						hasMore: i,
						nextCursor: a,
						error: s,
					}),
					Se = (e) => ({ type: n.HNn, connectionStatus: e }),
					Ie = ({ connection: e }) => ({ type: n.dMC, connection: e }),
					ve = ({ connection: e }) => ({ type: n.e5G, connection: e }),
					fe = ({ connection: e }) => ({ type: n.jcG, connection: e }),
					De = ({ connection: e, error: t = !1 }) => ({
						type: n.CkZ,
						connection: e,
						error: t,
					}),
					Ne = ({ connection: e }) => ({ type: n.MTJ, connection: e }),
					Re = ({ connection: e, error: t = !1, newInvite: i = null }) => ({
						type: n.xKC,
						connection: e,
						error: t,
						newInvite: i,
					}),
					be = ({ open: e, errorType: t, inviteDTO: i = null }) => ({
						type: n.NOF,
						open: e,
						errorType: t,
						inviteDTO: i,
					}),
					Le = ({ userProfileId: e }) => ({ type: n.MvU, userProfileId: e }),
					Pe = ({ userProfileId: e, groupRole: t }) => ({
						type: n.m8A,
						userProfileId: e,
						groupRole: t,
					}),
					Oe = ({ userProfileId: e }) => ({ type: n.Ckh, userProfileId: e }),
					we = () => ({ type: n.LKb }),
					Fe = ({ error: e = !1, userCourses: t, groupCourses: i }) => ({
						type: n.cnh,
						error: e,
						userCourses: t,
						groupCourses: i,
					}),
					ke = ({ groupCourseId: e }) => ({ type: n.jh5, groupCourseId: e }),
					Ue = ({ error: e = !1, groupCourseId: t, groupCourseDetail: i }) => ({
						type: n.i1H,
						error: e,
						groupCourseId: t,
						groupCourseDetail: i,
					}),
					Me = (e) => ({ type: n.ujQ, userCourseId: e }),
					Ge = (e) => ({ type: n.F1u, newCourse: e }),
					xe = (e) => ({ type: n.mEv, groupCourseId: e }),
					Be = ({ error: e = !1, groupCourseId: t }) => ({
						type: n.pIF,
						error: e,
						groupCourseId: t,
					}),
					He = () => ({ type: n.dhA }),
					Ve = () => ({ type: n.hTv }),
					We = () => ({ type: n.mXb }),
					Je = (e) => ({ type: n.osH, challenge: e }),
					Ye = (e) => ({ type: n.QRd, uuid: e }),
					$e = (e) => ({ type: n.wpS, uuid: e }),
					je = (e) => ({ type: n.yFL, view: e }),
					Ke = () => ({ type: n.brq }),
					ze = (e = {}) => ({ type: n.SJ6, ...e }),
					qe = ({ reviewStatus: e = '', isGroupProfile: t = !0 }) => ({
						type: n.GMr,
						reviewStatus: e,
						isGroupProfile: t,
					}),
					Qe = ({ flagReason: e, note: t }) => ({
						type: n.nVg,
						flagReason: e,
						note: t,
					}),
					Xe = ({ error: e = !1, reviewStatus: t }) => ({
						type: n.UsZ,
						error: e,
						reviewStatus: t,
					}),
					Ze = () => ({ type: n.eoS }),
					et = ({ showAlert: e }) => ({ type: n.qvK, showAlert: e }),
					tt = () => ({ type: n.BVL }),
					it = ({
						file: e = null,
						imageB64: t = null,
						retryIndex: i = null,
						callback: a = () => {},
					}) => ({
						type: n.JeB,
						file: e,
						imageB64: t,
						retryIndex: i,
						callback: a,
					}),
					nt = ({ index: e }) => ({ type: n.IY0, index: e }),
					at = () => ({ type: n.XWB }),
					st = ({ images: e }) => ({ type: n.G7X, images: e }),
					rt = ({ error: e }) => ({ type: n.nY_, error: e }),
					ot = () => ({ type: n.hkF }),
					lt = ({ newsPostUuid: e, newsPostHasImageId: t }) => ({
						type: n.DiT,
						newsPostUuid: e,
						newsPostHasImageId: t,
					}),
					ct = () => ({ type: n.oS3 }),
					dt = () => ({ type: n.hRY }),
					ut = ({
						groupId: e,
						activityId: t = null,
						postUuid: i = null,
						commentUuid: a = null,
						viewerSocialProfile: s,
					}) => ({
						type: n.gu,
						groupId: e,
						activityId: t,
						postUuid: i,
						commentUuid: a,
						viewerSocialProfile: s,
					}),
					pt = () => ({ type: n.xUB }),
					yt = ({ group: e }) => ({ type: n.xex, group: e }),
					ht = () => ({ type: n.uIT }),
					gt = () => ({ type: n._RB });
			},
			490781: (e, t, i) => {
				'use strict';
				i.d(t, {
					GS: () => n,
					TZ: () => l,
					b1: () => a,
					mu: () => c,
					ot: () => s,
					vQ: () => o,
					zn: () => r,
				});
				const n = 'FETCH_WEATHER',
					a = 'FETCH_WEATHER_FETCHING',
					s = 'FETCH_WEATHER_SUCCESS',
					r = 'FETCH_WEATHER_FAIL',
					o = 'RESET_WEATHER';
				function l(e, t) {
					return { type: n, params: e, callback: t };
				}
				function c() {
					return { type: o };
				}
			},
			811696: (e, t, i) => {
				'use strict';
				i.d(t, {
					AL: () => l,
					AW: () => o,
					Dg: () => r,
					N2: () => a,
					Pz: () => u,
					fo: () => c,
					uD: () => s,
					xA: () => d,
				});
				var n = i(316550);
				function a(e, t) {
					return {
						type: n.QDy,
						payload: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function s(e, t) {
					return {
						type: n.xQJ,
						payload: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function r(e, t) {
					return {
						type: n.yqQ,
						payload: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function o(e, t) {
					return {
						type: n.il0,
						payload: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function l(e, t) {
					return {
						type: n.mk7,
						payload: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function c(e) {
					return { type: n.LoB, payload: e };
				}
				function d(e) {
					return { type: n.$rY, payload: e };
				}
				function u(e) {
					return { type: n.TAt, payload: e };
				}
			},
			410567: (e, t, i) => {
				'use strict';
				i.d(t, {
					$K: () => o,
					Fd: () => d,
					Hh: () => p,
					L7: () => n,
					O3: () => a,
					RM: () => h,
					T0: () => l,
					WB: () => r,
					gJ: () => c,
					hI: () => s,
					oH: () => u,
					wG: () => g,
					we: () => y,
				});
				const n = 'FETCH_DAILY_HILL_SCORE_DATA_REPORTS',
					a = 'FETCH_DAILY_HILL_SCORE_DATA_REPORTS_FETCHING',
					s = 'FETCH_DAILY_HILL_SCORE_DATA_REPORTS_SUCCESS',
					r = 'FETCH_DAILY_HILL_SCORE_DATA_REPORTS_FAIL',
					o = 'FETCH_DAILY_HILL_SCORE_DATA_ONE_DAY_REPORTS_SUCCESS',
					l = 'FETCH_WEEKLY_HILL_SCORE_DATA_REPORTS',
					c = 'FETCH_WEEKLY_HILL_SCORE_DATA_REPORTS_FETCHING',
					d = 'FETCH_WEEKLY_HILL_SCORE_DATA_REPORTS_SUCCESS',
					u = 'FETCH_WEEKLY_HILL_SCORE_DATA_REPORTS_FAIL',
					p = 'FETCH_MONTHLY_HILL_SCORE_DATA_REPORTS',
					y = 'FETCH_MONTHLY_HILL_SCORE_DATA_REPORTS_FETCHING',
					h = 'FETCH_MONTHLY_HILL_SCORE_DATA_REPORTS_SUCCESS',
					g = 'FETCH_MONTHLY_HILL_SCORE_DATA_REPORTS_FAIL';
			},
			771173: (e, t, i) => {
				'use strict';
				i.d(t, {
					Nv: () => o,
					SB: () => a,
					WM: () => d,
					Xv: () => s,
					pt: () => c,
					u2: () => l,
					ul: () => r,
					xE: () => n,
				});
				const n = 'FETCH_DAILY_HYDRATION_DATA_REPORTS',
					a = 'FETCH_DAILY_HYDRATION_DATA_REPORTS_FETCHING',
					s = 'FETCH_DAILY_HYDRATION_DATA_REPORTS_SUCCESS',
					r = 'FETCH_DAILY_HYDRATION_DATA_REPORTS_FAIL',
					o = 'FETCH_WEEKLY_HYDRATION_DATA_REPORTS',
					l = 'FETCH_WEEKLY_HYDRATION_DATA_REPORTS_FETCHING',
					c = 'FETCH_WEEKLY_HYDRATION_DATA_REPORTS_SUCCESS',
					d = 'FETCH_WEEKLY_HYDRATION_DATA_REPORTS_FAIL';
			},
			614683: (e, t, i) => {
				'use strict';
				i.d(t, {
					En: () => u,
					Et: () => _,
					OV: () => o,
					P0: () => T,
					T5: () => l,
					To: () => m,
					V5: () => c,
					Ve: () => A,
					a$: () => p,
					ct: () => g,
					dp: () => s,
					fM: () => h,
					hW: () => y,
					l3: () => C,
					m$: () => E,
					mv: () => r,
					o0: () => a,
					vH: () => S,
					zu: () => d,
				});
				var n = i(316550);
				const a = ({ viewerSocialProfile: e, viewerUserPreferences: t }) => ({
						type: n.EWk,
						viewerSocialProfile: e,
						viewerUserPreferences: t,
					}),
					s = () => ({ type: n.LWL }),
					r = ({ cursor: e = null, limit: t = 50 }) => ({
						type: n.ZLD,
						cursor: e,
						limit: t,
					}),
					o = ({ error: e, requests: t, nextCursor: i }) => ({
						type: n.eWY,
						error: e,
						requests: t,
						nextCursor: i,
					}),
					l = ({
						open: e,
						dialogType: t = null,
						uniqueKey: i = null,
						request: a = null,
					}) => ({
						type: n.g7R,
						open: e,
						dialogType: t,
						uniqueKey: i,
						request: a,
					}),
					c = ({ doNotShowAgain: e = !1, ok: t }) => ({
						type: n.LpY,
						doNotShowAgain: e,
						ok: t,
					}),
					d = ({ uniqueKey: e, request: t, accept: i }) => ({
						type: n.eX0,
						uniqueKey: e,
						request: t,
						accept: i,
					}),
					u = ({ uniqueKey: e, request: t, accept: i }) => ({
						type: n.haw,
						uniqueKey: e,
						request: t,
						accept: i,
					}),
					p = ({ uniqueKey: e, request: t, accept: i }) => ({
						type: n.H0O,
						uniqueKey: e,
						request: t,
						accept: i,
					}),
					y = ({ uniqueKey: e, request: t, newStatus: i }) => ({
						type: n.y63,
						uniqueKey: e,
						request: t,
						newStatus: i,
					}),
					h = ({ uniqueKey: e, status: t }) => ({
						type: n.Yed,
						uniqueKey: e,
						status: t,
					}),
					g = ({ open: e, displayName: t, mutualConnectionsCount: i }) => ({
						type: n.QXQ,
						open: e,
						displayName: t,
						mutualConnectionsCount: i,
					}),
					m = ({ open: e, uniqueKey: t = null, request: i = null }) => ({
						type: n.soF,
						open: e,
						uniqueKey: t,
						request: i,
					}),
					A = (e) => ({ type: n.X90, confirm: e }),
					_ = ({ open: e, uniqueKey: t = null, request: i = null }) => ({
						type: n.Omb,
						open: e,
						uniqueKey: t,
						request: i,
					}),
					E = (e) => ({ type: n.Xo0, actionType: e }),
					T = ({ open: e, errorType: t = null }) => ({
						type: n.tJz,
						open: e,
						errorType: t,
					}),
					C = ({ open: e, uniqueKey: t = null, request: i = null }) => ({
						type: n.Pys,
						open: e,
						uniqueKey: t,
						request: i,
					}),
					S = (e) => ({ type: n.kv8, confirm: e });
			},
			462026: (e, t, i) => {
				'use strict';
				i.d(t, {
					KtH: () => Et,
					BCN: () => Fe,
					b5Q: () => ke,
					sE0: () => nt,
					toR: () => a.to,
					zD6: () => a.zD,
					Qdx: () => ot,
					Xf0: () => a.Xf,
					Rxw: () => st,
					gpr: () => f.gp,
					KTO: () => u,
					gH3: () => zt,
					PoR: () => f.Po,
					wyO: () => ft,
					ARE: () => vt,
					wzx: () => we,
					BVh: () => Ue,
					oWb: () => We,
					aQI: () => Je,
					ESC: () => L.ES,
					NGu: () => a.NG,
					E1O: () => b.E1,
					Ol8: () => oi,
					uel: () => a.ue,
					e7d: () => Tt,
					$yT: () => b.$y,
					oWp: () => pn,
					aac: () => M.a,
					Tu0: () => Me,
					zsr: () => a.zs,
					Y2R: () => x.Y2,
					$xs: () => ai,
					foX: () => G.fo,
					IyJ: () => f.Iy,
					D6K: () => f.D6,
					O9C: () => Qt,
					J1f: () => Ct,
					ahw: () => f.ah,
					b4q: () => a.b4,
					QAT: () => Ve,
					Xch: () => bt,
					ogM: () => Le,
					za0: () => ut,
					$Cf: () => Q,
					bgo: () => Mt,
					jOk: () => Ot,
					rdW: () => Ae,
					Ad9: () => dn,
					mZP: () => Ji,
					spI: () => Gi,
					lXy: () => ln,
					CJH: () => b.CJ,
					CDW: () => Ki,
					h3h: () => b.h3,
					Qio: () => ii,
					uCR: () => a.uC,
					vug: () => j.vu,
					j$J: () => W,
					pJw: () => f.pJ,
					Sul: () => He,
					p4c: () => Oe,
					wse: () => yt,
					ike: () => ze,
					fW9: () => a.fW,
					rod: () => a.ro,
					AQH: () => a.AQ,
					r5e: () => a.r5,
					rUp: () => a.rU,
					_PC: () => a._P,
					D89: () => V,
					rU4: () => H.rU,
					riZ: () => $.ri,
					T$T: () => J,
					y4q: () => ne,
					ZRg: () => j.ZR,
					c4k: () => a.c4,
					Ftx: () => a.Ft,
					$oN: () => a.$o,
					d6z: () => P,
					OfD: () => jt,
					f47: () => a.f4,
					wjm: () => Xi,
					n04: () => a.n0,
					jT0: () => ti,
					Z0H: () => Xe,
					Ipg: () => R.Ip,
					pl7: () => R.pl,
					Qax: () => H.Q,
					V$7: () => N.V$,
					Qs0: () => Pi,
					YGy: () => b.YG,
					dFI: () => _t,
					elF: () => a.el,
					X5M: () => a.X5,
					fwG: () => Sn,
					C9E: () => F,
					aje: () => ee,
					oaq: () => ce,
					xAL: () => Ce,
					h$7: () => Cn,
					_eo: () => Ie,
					yWI: () => a.yW,
					eRr: () => f.eR,
					CL_: () => Ni,
					GKj: () => vi,
					M1P: () => B.M,
					UhW: () => xt,
					eas: () => Ft,
					xOb: () => nn,
					wVU: () => Ee,
					Fte: () => Wt,
					in_: () => de,
					UV9: () => ue,
					kXe: () => pe,
					ryj: () => ye,
					lwO: () => he,
					PFk: () => Y,
					U2o: () => M.U2,
					bUz: () => gi,
					$2U: () => O.$,
					dP$: () => w,
					xU0: () => _i,
					E$7: () => St,
					v_x: () => f.v_,
					sjq: () => f.sj,
					ASY: () => Rt,
					tWn: () => it,
					opp: () => je,
					pT5: () => Kt,
					XYI: () => ri,
					iwK: () => ni,
					NfD: () => qt,
					pAq: () => a.pA,
					m3q: () => ui,
					gDg: () => li,
					p$z: () => L.p$,
					Kgd: () => qe,
					RwZ: () => Ze,
					I_f: () => Ci,
					fvW: () => Ti,
					uvq: () => L.uv,
					Hd2: () => L.Hd,
					zIT: () => Hi,
					VnE: () => Ui,
					Eyz: () => rn,
					aEM: () => on,
					j$m: () => Vi,
					DCJ: () => $i,
					rCv: () => D.rC,
					HKn: () => ei,
					kHJ: () => a.kH,
					MHq: () => a.MH,
					h2h: () => a.h2,
					_Nl: () => a._N,
					NiV: () => xe,
					sF3: () => be,
					jLs: () => dt,
					Fok: () => $e,
					G67: () => a.G6,
					vLN: () => ie,
					bXL: () => un,
					f24: () => Yt,
					Jjc: () => cn,
					XzV: () => qi,
					EOC: () => Zt,
					Ugl: () => et,
					xY3: () => a.xY,
					Xzh: () => bi,
					EsO: () => gt,
					HXB: () => q,
					JwS: () => le,
					WBr: () => a.WB,
					aL2: () => b.aL,
					fA1: () => D.fA,
					zkW: () => wi,
					fzO: () => D.fz,
					qXx: () => Se,
					OZC: () => Tn,
					Rs8: () => ve,
					pM0: () => Di,
					FCz: () => Si,
					dM1: () => Ut,
					vte: () => Pt,
					cty: () => tn,
					HoD: () => me,
					UqE: () => Ht,
					eiw: () => a.ei,
					wGY: () => a.wG,
					y4V: () => hi,
					Ad4: () => Ai,
					f6t: () => a.f6,
					PAT: () => L.PA,
					ArH: () => a.Ar,
					NG5: () => at,
					ysG: () => a.ys,
					LsL: () => fn,
					b_A: () => lt,
					gw3: () => rt,
					peX: () => Ne,
					h1h: () => pi,
					ilE: () => D.il,
					QNs: () => p,
					v8r: () => ki,
					hL0: () => xi,
					IAh: () => sn,
					RK2: () => Bi,
					PIg: () => Yi,
					a49: () => N.a4,
					MFt: () => a.MF,
					qk6: () => a.qk,
					o4M: () => a.o4,
					bju: () => Ge,
					EL7: () => Re,
					rbQ: () => ct,
					NAm: () => Ye,
					_gT: () => a._g,
					x6s: () => te,
					CVV: () => Jt,
					PTS: () => zi,
					OHR: () => Xt,
					kuu: () => tt,
					PnB: () => Ri,
					jrN: () => a.jr,
					axx: () => mt,
					tos: () => z,
					Lli: () => oe,
					gYT: () => a.gY,
					vg9: () => D.vg,
					jkl: () => Oi,
					_Pz: () => En,
					VU5: () => fi,
					uog: () => f.b3,
					lss: () => kt,
					dw2: () => Lt,
					YJo: () => en,
					lx7: () => ge,
					wCo: () => Bt,
					eqJ: () => a.eq,
					ESc: () => a.ES,
					EN7: () => yi,
					wrU: () => mi,
					lxg: () => L.lx,
					qUG: () => di,
					tWq: () => Wi,
					v1g: () => Mi,
					mCO: () => yn,
					Th$: () => ji,
					cXm: () => N.cX,
					Lar: () => N.L,
					k0G: () => N.k0,
					_gb: () => a.HV,
					jfH: () => f.jf,
					hKT: () => a.hK,
					Q8h: () => a.Q8,
					e6T: () => a.e6,
					J3B: () => Be,
					gyK: () => Pe,
					nCm: () => pt,
					dRW: () => Ke,
					vNZ: () => Qe,
					$qf: () => a.$q,
					E1w: () => a.E1,
					Flz: () => a.Fl,
					vj8: () => a.vj,
					DnC: () => a.Dn,
					DOk: () => a.DO,
					qnf: () => a.qn,
					FYQ: () => a.FY,
					rvX: () => a.rv,
					blP: () => a.bl,
					fXE: () => a.fX,
					erx: () => a.er,
					TxS: () => $t,
					mrt: () => D.mr,
					pAo: () => y,
					lv: () => Qi,
					NY0: () => a.NY,
					H93: () => f.H9,
					hP2: () => a.hP,
					c$L: () => f.c$,
					f2H: () => Li,
					ZZN: () => a.ZZ,
					crS: () => At,
					Q8L: () => Zi,
					lDf: () => Z,
					i0s: () => a.i0,
					$d4: () => Fi,
					Nbq: () => Ii,
					bKE: () => Gt,
					pjo: () => wt,
					Any: () => Vt,
					y7p: () => U,
					RJJ: () => ht,
					Nlx: () => ci,
					WsC: () => f.Ws,
					yqE: () => mn,
					RiO: () => N.Ri,
					oEH: () => f.oE,
					avf: () => f.av,
					H2X: () => S,
					Ve1: () => a.Ve,
					SjN: () => _n,
					_al: () => a._,
					SNF: () => a.SN,
					o_v: () => a.o_,
					LUb: () => a.LU,
					iRB: () => a.iR,
					gbt: () => a.gb,
					keB: () => An,
					Z$I: () => a.Z$,
					rIh: () => h,
					ePD: () => gn,
					YXs: () => a.YX,
					vNS: () => se,
					wbi: () => ae,
					mxK: () => re,
					Bep: () => f.Be,
					rpl: () => $.rp,
					sbT: () => D.sb,
					dp3: () => fe,
					yPt: () => De,
					Vit: () => Ei,
					DYx: () => m,
					YY7: () => v,
					LkS: () => I,
					OUT: () => D.OU,
					baZ: () => D.b,
					ayw: () => hn,
					QOE: () => C,
					$lu: () => _,
					EIu: () => X,
					j0T: () => K.j,
					llM: () => E,
					c4h: () => A,
					k4s: () => g,
					lPc: () => T,
					jh2: () => c,
					g3G: () => s,
					Em8: () => o,
					JmD: () => d,
					yiQ: () => r,
					Ycu: () => l,
					$76: () => an,
					Yzg: () => f.Yz,
					vjr: () => f.vj,
					toY: () => Nt,
					lUh: () => Dt,
					YVx: () => L.YV,
					ZqO: () => f.Zq,
					rfj: () => a.rf,
					zwL: () => It,
					J03: () => b.J0,
					lsc: () => f.ls,
					ci3: () => f.ci,
					DzE: () => a.Dz,
					ZPn: () => a.ZP,
					aZ7: () => j.aZ,
					TOD: () => si,
					w3Y: () => f.w3,
					Rim: () => vn,
					WjO: () => In,
					oDl: () => _e,
					BYs: () => D.BY,
					jN7: () => f.jN,
					b7z: () => Te,
					ijq: () => k,
					SVb: () => M.SV,
				});
				var n = i(316550),
					a = i(924392);
				function s(e) {
					return { type: n.Vit, trailsListNearbyFilters: e };
				}
				function r(e) {
					return { type: n.FvW, trailsListSavedFilters: e };
				}
				function o(e, t) {
					return { type: n.zMT, trailsListNearbySortType: e, callback: t };
				}
				function l(e, t) {
					return { type: n.vBN, trailsListSavedSortType: e, callback: t };
				}
				function c(e) {
					return { type: n.wvs, nearbyTrails: e };
				}
				function d(e) {
					return { type: n.WlW, savedTrails: e };
				}
				function u(e) {
					return { type: n.Bt5, trail: e };
				}
				function p(e) {
					return { type: n.bNu, curatedCourseId: e };
				}
				function y(e) {
					return { type: n.Vd1, trails: e };
				}
				function h(e) {
					return { type: n.Qk, data: e };
				}
				function g(e) {
					return { type: n.ANw, suggestEditModalOpened: e };
				}
				function m(e) {
					return { type: n.LW7, reportIssueModalOpened: e };
				}
				function A(e) {
					return { type: n.cAO, submitReviewModalOpened: e };
				}
				function _(e) {
					return { type: n.P3c, shareReviewModalStatus: e };
				}
				function E(e) {
					return { type: n.oMt, starRatingValue: e };
				}
				function T(e) {
					return { type: n.vBh, trailReviewsSortType: e };
				}
				function C(e) {
					return { type: n.$8n, selectedTrailReview: e };
				}
				function S(e) {
					return { type: n.V0m, centerLocation: e };
				}
				function I(e) {
					return { type: n.nrT, searchedLocation: e };
				}
				function v(e) {
					return { type: n.D1C, additionalData: { ...e } };
				}
				var f = i(570088),
					D = i(212861),
					N = i(211794),
					R = i(450711),
					b = i(593177),
					L = i(257931);
				function P(e, t, i) {
					return {
						type: n.JD0,
						payload: { locale: e, categoryKey: t, exerciseKey: i },
					};
				}
				var O = i(701738);
				function w(e, t, i, a, s) {
					return {
						type: n.MBc,
						payload: {
							start: e,
							limit: t,
							myWorkoutsOnly: i,
							sharedWorkoutsOnly: a,
							workoutProvider: s,
						},
					};
				}
				function F(e) {
					return { type: n.Qu, payload: { locale: e } };
				}
				function k(e) {
					return { type: n.UPU, enabledFilters: e };
				}
				function U() {
					return { type: n.i0f };
				}
				var M = i(954179),
					G = i(811696),
					x = i(745974),
					B = i(760497),
					H = i(549385);
				function V(e) {
					return { type: n.feX, payload: e };
				}
				function W(e) {
					return { type: n.G3l, payload: e };
				}
				function J(e) {
					return { type: n.$N7, payload: e };
				}
				function Y(e) {
					return { type: n.bCV, payload: e };
				}
				var $ = i(128903),
					j = i(974396),
					K = i(250355);
				const z = (e) => ({ type: n.m3P, displayName: e }),
					q = (e, t) => ({
						type: n.wGf,
						displayName: e,
						publicUserProfile: t,
						receivedAt: Date.now(),
					}),
					Q = (e) => ({
						type: n.qk7,
						displayName: e,
						publicUserProfile: null,
						receivedAt: Date.now(),
					}),
					X = (e = !1) => ({ type: n.rNk, show: e }),
					Z = () => ({ type: n.Guc }),
					ee = (e) => ({ type: n.Du5, displayName: e }),
					te = (e, t) => ({ type: n.Jlk, userId: e, date: t }),
					ie = (e, t) => ({
						type: n.zcN,
						userId: e,
						dailySummary: t,
						receivedAt: Date.now(),
					}),
					ne = (e, t) => ({ type: n.QYo, userId: e, date: t }),
					ae = (e) => ({ type: n.$B4, filter: e }),
					se = (e) => ({ type: n.NSB, expandedDevice: e }),
					re = (e) => ({ type: n._AV, filter: e }),
					oe = (e) => ({ type: n.zwi, displayName: e }),
					le = (e, t) => ({
						type: n.fSY,
						displayName: e,
						registeredDevices: t,
						receivedAt: Date.now(),
					}),
					ce = (e) => ({ type: n.e8J, displayName: e }),
					de = (e, t) => ({ type: n.D0T, userId: e, date: t }),
					ue = (e, t, i) => ({ type: n.zoe, userId: e, date: t, deviceId: i }),
					pe = (e, t) => ({ type: n.c53, userId: e, date: t }),
					ye = (e, t, i) => ({ type: n.TF4, userId: e, date: t, deviceId: i }),
					he = (e, t) => ({ type: n.Io3, userId: e, date: t }),
					ge = (e) => ({ type: n.rKr, displayName: e }),
					me = (e, t) => ({
						type: n.H0w,
						displayName: e,
						userPrivacy: t,
						receivedAt: Date.now(),
					}),
					Ae = (e) => ({
						type: n.hWY,
						displayName: e,
						userPrivacy: null,
						receivedAt: Date.now(),
					}),
					_e = (e, t) => ({ type: n.fdT, displayName: e, userPrivacy: t }),
					Ee = (e, t) => ({ type: n.EcZ, displayName: t }),
					Te = (e, t, i) => ({
						type: n.T_f,
						displayName: e,
						data: t,
						privacy: i,
					}),
					Ce = () => ({ type: n.$FJ }),
					Se = (e) => ({
						type: n.Euz,
						systemMessage: e,
						receivedAt: Date.now(),
					}),
					Ie = () => ({ type: n.K_Z }),
					ve = (e) => ({
						type: n.VKR,
						systemStatus: e,
						receivedAt: Date.now(),
					}),
					fe = (e, t, i) => ({
						type: n.lVf,
						messageText: t,
						messageType: e,
						messageView: i,
					}),
					De = (e) => ({ type: n.mhb, status: e }),
					Ne = () => ({ type: n.fhx }),
					Re = (e) => ({ type: n.bV8, resourceId: e }),
					be = (e, t) => ({
						type: n.VIo,
						comments: e,
						resourceId: t,
						receivedAt: Date.now(),
					}),
					Le = (e) => ({
						type: n.BTm,
						comments: [],
						resourceId: e,
						receivedAt: Date.now(),
					}),
					Pe = () => ({ type: n.$mk }),
					Oe = (e, t, i = 1, a = 10) => ({
						type: n._DY,
						resourceType: e,
						resourceId: t,
						start: i,
						limit: a,
					}),
					we = (e, t) => ({
						type: n.MGt,
						comment: e,
						resourceId: t,
						addedAt: Date.now(),
					}),
					Fe = (e, t, i, a = !1) => ({
						type: n.z_l,
						resourceId: e,
						resourceType: t,
						data: i,
						shouldFetchComments: a,
					}),
					ke = (e, t, i, a = !1) => ({
						type: n.kj2,
						resourceId: e,
						resourceType: t,
						data: i,
						error: a,
					}),
					Ue = (e, t) => ({
						type: n.JTP,
						conversationCommentUuid: e.conversationCommentUuid,
						resourceId: t,
					}),
					Me = (e, t, i) => ({
						type: n.i4R,
						resourceType: e,
						resourceId: t,
						data: i,
					}),
					Ge = () => ({ type: n.viz }),
					xe = (e, t) => ({
						type: n.XgG,
						data: e,
						conversationCommentUuid: t,
						receivedAt: Date.now(),
					}),
					Be = () => ({ type: n.THx }),
					He = (e) => ({ type: n.Wlf, conversationCommentUuid: e }),
					Ve = (e, t) => ({ type: n.WcL, comment: e, resourceId: t }),
					We = (e, t) => ({ type: n._UJ, comment: e, resourceId: t }),
					Je = (e, t, i) => ({
						type: n.gMX,
						comment: e,
						resourceId: t,
						error: i,
					}),
					Ye = () => ({ type: n.Qfy }),
					$e = (e, t) => ({
						type: n.S6m,
						conversation: e,
						resourceId: t,
						receivedAt: Date.now(),
					}),
					je = (e, t) => ({ type: n.LRj, add: t, resourceId: e }),
					Ke = () => ({ type: n.Mwu }),
					ze = (e, t) => ({ type: n.rK5, resourceType: e, resourceId: t }),
					qe = (e, t, i) => ({
						type: n.Vfm,
						resourceType: e,
						resourceId: t,
						data: i,
					}),
					Qe = () => ({ type: n.TLU }),
					Xe = (e, t, i) => ({
						type: n.LK3,
						userGroupPk: e,
						resourceType: t,
						resourceId: i,
					}),
					Ze = (e, t, i, a) => ({
						type: n.PmV,
						userGroupPk: e,
						resourceType: t,
						resourceId: i,
						data: a,
					}),
					et = (e, t) => ({
						type: n.uy4,
						conversation: e,
						resourceId: t,
						receivedAt: Date.now(),
					}),
					tt = () => ({ type: n.SS9 }),
					it = (e, t, i) => ({
						type: n.j0T,
						conversationCommentUuid: t,
						add: i,
						resourceId: e,
					}),
					nt = (e, t, i) => ({
						type: n.umi,
						resourceType: e,
						resourceId: t,
						data: i,
					}),
					at = (e, t, i) => ({
						type: n.FvB,
						resourceType: e,
						resourceId: t,
						conversationCommentUuid: i,
					}),
					st = (e, t, i) => ({
						type: n.eG0,
						resourceType: e,
						resourceId: t,
						conversationUuid: i,
					}),
					rt = (e, t, i) => ({
						type: n.$ts,
						resourceType: e,
						resourceId: t,
						conversationUuid: i,
					}),
					ot = (e, t, i, a) => ({
						type: n.amQ,
						userGroupPk: e,
						resourceType: t,
						resourceId: i,
						conversationUuid: a,
					}),
					lt = (e, t, i, a) => ({
						type: n.n5m,
						userGroupPk: e,
						resourceType: t,
						resourceId: i,
						conversationUuid: a,
					}),
					ct = (e) => ({ type: n.yK$, displayName: e }),
					dt = (e, t) => ({
						type: n.Yfh,
						displayName: e,
						userConnections: t,
						receivedAt: Date.now(),
					}),
					ut = (e) => ({
						type: n.AeV,
						displayName: e,
						userConnections: null,
						receivedAt: Date.now(),
					}),
					pt = () => ({ type: n.AgV }),
					yt = (e) => ({ type: n.hAT, displayName: e }),
					ht = (e, t = !0, i) => ({
						type: n.mxT,
						displayName: e,
						fetchStatus: t,
						callback: i,
					}),
					gt = (e) => ({ type: n._Uj, json: e, receivedAt: Date.now() }),
					mt = () => ({ type: n.kf1 }),
					At = () => ({ type: n.wu1 }),
					_t = () => ({ type: n.fMB }),
					Et = (e, t, i = !0, a) => ({
						type: n.WI1,
						connectionRequestId: e,
						displayName: t,
						fetchStatus: i,
						callback: a,
					}),
					Tt = (e, t, i) => ({
						type: n.K8y,
						connectionRequestId: e,
						displayName: t,
						callback: i,
					}),
					Ct = (e, t) => ({
						type: n.uWG,
						connectionRequestId: e,
						displayName: t,
					}),
					St = (e) => ({ type: n.fvB, displayName: e }),
					It = (e) => ({ type: n.Q50, displayName: e }),
					vt = (e, t) => ({
						type: n.ka5,
						connectionRequestId: e,
						displayName: t,
					}),
					ft = (e) => ({ type: n.Ohr, displayName: e }),
					Dt = (e) => ({ type: n.HP9, displayName: e }),
					Nt = (e) => ({ type: n.e$N, data: e }),
					Rt = (e) => ({ type: n.XwX, data: e }),
					bt = () => ({ type: n.$ch }),
					Lt = () => ({ type: n.q9c }),
					Pt = (e) => ({ type: n.W1J, json: e, receivedAt: Date.now() }),
					Ot = () => ({ type: n._UK, json: {}, receivedAt: Date.now() }),
					wt = () => ({ type: n.iII }),
					Ft = (e) => ({ type: n.pyP, displayName: e }),
					kt = (e) => ({ type: n.ivV, displayName: e }),
					Ut = (e) => ({ type: n.QAG, data: e, receivedAt: Date.now() }),
					Mt = () => ({ type: n.YdH, data: [], receivedAt: Date.now() }),
					Gt = () => ({ type: n.IHw }),
					xt = (e, t) => ({ type: n.fP9, displayName: e, startIndex: t }),
					Bt = () => ({ type: n.uPQ }),
					Ht = (e, t) => ({
						type: n.I8F,
						displayName: t,
						json: e,
						receivedAt: Date.now(),
					}),
					Vt = () => ({ type: n.G2X }),
					Wt = (e) => ({ type: n.BLH, displayName: e }),
					Jt = () => ({ type: n.LP6 }),
					Yt = (e, t) => ({
						type: n.uU5,
						displayName: t,
						json: e,
						receivedAt: Date.now(),
					}),
					$t = () => ({ type: n.BLe }),
					jt = (e, t) => ({ type: n.cjn, displayName: e, limit: t }),
					Kt = () => ({ type: n.BU9 }),
					zt = (e, t, i, a, s) => ({
						type: n.xl1,
						weight: t,
						unit: i,
						date: a,
						callback: s,
					}),
					qt = () => ({ type: n.vY0 }),
					Qt = (e, t, i) => ({ type: n.zbO, date: t, callback: i }),
					Xt = () => ({ type: n.rZK }),
					Zt = (e, t, i, a, s, r) => ({
						type: n.bZH,
						goals: e,
						status: t,
						start: i,
						limit: a,
						sortOrder: s,
						receivedAt: Date.now(),
						replace: r,
					}),
					ei = (e, t, i, a) => ({
						type: n.L9q,
						goals: e,
						start: t,
						limit: i,
						sortOrder: a,
						receivedAt: Date.now(),
					}),
					ti = (e, t, i, a, s) => ({
						type: n.YVf,
						status: e,
						start: t,
						limit: i,
						sortOrder: a,
						replace: s,
					}),
					ii = (e = () => {}) => ({ type: n.cTA, callback: e }),
					ni = (e) => ({ type: n.OK$, goalId: e }),
					ai = (e, t) => ({ type: n.k_1, goalId: e, callback: t }),
					si = (e, t, i) => ({ type: n.wuq, goalId: e, data: t, callback: i }),
					ri = () => ({ type: n.D1L }),
					oi = (e, t) => ({ type: n.pL, data: e, callback: t }),
					li = () => ({ type: n.Csb }),
					ci = (e, t, i) => ({
						type: n.IEj,
						workoutId: e,
						date: t,
						callback: i,
					}),
					di = (e, t, i, a, s) => ({
						type: n.xW6,
						workout: e,
						workoutId: t,
						workoutScheduleId: i,
						date: a,
						callback: s,
					}),
					ui = () => ({ type: n.$Fw }),
					pi = (e, t) => ({ type: n.FNW, workoutScheduleId: e, callback: t }),
					yi = (e) => ({ type: n.ECM, workoutScheduleId: e }),
					hi = (e, t) => ({
						type: n.qzx,
						data: e,
						workoutScheduleId: t,
						receivedAt: Date.now(),
					}),
					gi = (e, t, i) => ({
						type: n.vnz,
						workoutScheduleId: e,
						callback: t,
						includeAudioNotes: i,
					}),
					mi = () => ({ type: n.Ohz }),
					Ai = (e) => ({ type: n.QmB, data: e, receivedAt: Date.now() }),
					_i = (e, t) => ({ type: n.X8p, date: e, callback: t }),
					Ei = (e) => ({ type: n.lhG, selectedTab: e }),
					Ti = ({ open: e, submitting: t, reviewStatus: i }) => ({
						type: n.uI8,
						open: e,
						submitting: t,
						reviewStatus: i,
					}),
					Ci = ({ displayName: e, flagReason: t, note: i }) => ({
						type: n.NJl,
						displayName: e,
						flagReason: t,
						note: i,
					}),
					Si = (e, t) => ({
						type: n.FVI,
						displayName: e,
						upcomingEvents: t,
						receivedAt: Date.now(),
					}),
					Ii = () => ({ type: n.XDw }),
					vi = ({
						displayName: e,
						guid: t,
						startDate: i,
						limit: a = 5,
						callback: s,
					}) => ({
						type: n.IuF,
						displayName: e,
						guid: t,
						startDate: i,
						limit: a,
						callback: s,
					}),
					fi = () => ({ type: n.GXg }),
					Di = (e) => ({
						type: n.gWR,
						upcomingEvents: e,
						receivedAt: Date.now(),
					}),
					Ni = ({
						guid: e,
						startDate: t,
						limit: i = 25,
						numDaysForward: a = 365,
					}) => ({
						type: n.f6T,
						guid: e,
						startDate: t,
						limit: i,
						numDaysForward: a,
					}),
					Ri = (e) => ({ type: n.Fzl, displayName: e }),
					bi = (e, t) => ({
						type: n.H_H,
						displayName: e,
						monthlyReport: t.userMetrics,
						receivedAt: Date.now(),
					}),
					Li = () => ({ type: n.ZgN }),
					Pi = (e) => ({ type: n.eAk, displayName: e }),
					Oi = (e, t) => ({ type: e, displayName: t }),
					wi = (e, t, i) => ({
						type: e,
						displayName: t,
						stepsReport: i.allMetrics,
						receivedAt: Date.now(),
					}),
					Fi = () => ({ type: n.DuF }),
					ki = (e) => ({ type: n.uOE, displayName: e }),
					Ui = (e, t) => ({
						type: n.Q$H,
						displayName: e,
						activities365Report: t,
						receivedAt: Date.now(),
					}),
					Mi = () => ({ type: n.IGR }),
					Gi = (e) => ({ type: n.Jmn, displayName: e }),
					xi = (e) => ({ type: n.cu, displayName: e }),
					Bi = (e) => ({ type: n.Wby, activityId: e }),
					Hi = (e) => ({ type: n.qxB, data: e, receivedAt: Date.now() }),
					Vi = (e) => ({ type: n.kI, data: e, receivedAt: Date.now() }),
					Wi = () => ({ type: n.QrN }),
					Ji = (e, t, i) => ({
						type: n.t6w,
						displayName: e,
						startIndex: t,
						limit: i,
					}),
					Yi = (e) => ({ type: n.VJU, displayName: e }),
					$i = (e, t, i) => ({
						type: n.hNn,
						displayName: e,
						data: t,
						activityId: i,
						receivedAt: Date.now(),
					}),
					ji = () => ({ type: n.z7O }),
					Ki = (e, t) => ({ type: n._nY, displayName: e, activityId: t }),
					zi = (e) => ({ type: n.Afm, displayName: e }),
					qi = (e, t) => ({
						type: n.A9,
						displayName: e,
						gear: t,
						receivedAt: Date.now(),
					}),
					Qi = () => ({ type: n.MIS }),
					Xi = (e) => ({ type: n.JJr, displayName: e }),
					Zi = () => ({ type: n.EiT }),
					en = (e) => ({ type: e, receivedAt: Date.now() }),
					tn = (e, t) => ({ type: e, preference: t, receivedAt: Date.now() }),
					nn = (e) => ({ type: n.pVc, key: e }),
					an = (e, t) => ({ type: n.lfR, key: e, value: t }),
					sn = (e) => ({ type: e, receivedAt: Date.now() }),
					rn = (e, t, i, n) => ({
						type: e,
						activities: t,
						parentActivityType: i,
						favorite: n,
						receivedAt: Date.now(),
					}),
					on = (e, t) => ({ type: e, error: t, receivedAt: Date.now() }),
					ln = ({
						parentActivityType: e,
						favorite: t = !1,
						start: i,
						limit: a,
					}) => ({
						type: n.oni,
						parentActivityType: e,
						favorite: t,
						start: i,
						limit: a,
					}),
					cn = (e, t, i, n) => ({
						type: e,
						parentActivityType: t,
						activityDetails: i,
						favorite: n,
						receivedAt: Date.now(),
					}),
					dn = (e, t, i) => ({
						type: n.bWy,
						parentActivityType: e,
						activityDetails: t,
						favorite: i,
					}),
					un = (e, t, i) => ({
						type: e,
						parentActivityType: t,
						activityDetails: i,
						receivedAt: Date.now(),
					}),
					pn = (e, t) => ({
						type: n.DMH,
						parentActivityType: e,
						activityDetails: t,
					}),
					yn = () => ({ type: n.VGp }),
					hn = (e) => ({ type: n.ik0, selectedDive: e }),
					gn = (e) => ({ type: n.Wsf, pageState: e }),
					mn = (e, t) => ({
						type: n.ywP,
						clubIdsSelected: e,
						areClubIdsSaved: t,
					}),
					An = (e, t) => ({
						type: n.MhH,
						clubIdsSelected: e,
						areClubIdsSaved: t,
					}),
					_n = (e, t) => ({
						type: n.s6R,
						clubIdsSelected: e,
						areClubIdsSaved: t,
					}),
					En = (e) => ({ type: e, receivedAt: Date.now() }),
					Tn = (e, t, i) => ({
						type: e,
						key: t,
						preference: i,
						receivedAt: Date.now(),
					}),
					Cn = (e) => ({ type: n.xTV, key: e });
				function Sn(e) {
					return { type: n.Si5, userId: e };
				}
				function In(e, t, i) {
					return { type: n.l7k, userId: e, deviceId: t, callback: i };
				}
				function vn(e, t, i) {
					return { type: n.uoP, userId: e, deviceId: t, callback: i };
				}
				function fn(e, t) {
					return { type: n._wz, deviceId: e, callback: t };
				}
			},
			549385: (e, t, i) => {
				'use strict';
				i.d(t, {
					BI: () => s,
					PS: () => p,
					Pz: () => r,
					Q: () => d,
					Sh: () => l,
					WG: () => a,
					oG: () => h,
					rU: () => c,
					s1: () => u,
					sC: () => y,
					yX: () => o,
				});
				var n = i(316550);
				function a(e) {
					return { type: n.MRF, payload: e };
				}
				function s(e) {
					return { type: n._w7, payload: e };
				}
				function r(e) {
					return { type: n.qmT, payload: e };
				}
				function o(e) {
					return { type: n.pBn, payload: e };
				}
				function l() {
					return { type: n.BnX };
				}
				function c(e) {
					return { type: n.HPu, payload: e };
				}
				function d(e) {
					return { type: n.L0G, payload: e };
				}
				function u(e) {
					return { type: n.BKr, payload: e };
				}
				function p(e) {
					return { type: n.UI3, payload: e };
				}
				function y(e) {
					return { type: n.Jh6, payload: e };
				}
				const h = (e) => ({ type: n.BCg, payload: e });
			},
			998573: (e, t, i) => {
				'use strict';
				i.d(t, { aJ: () => s, di: () => a, x: () => n });
				const n = 'FETCH_MFP_LINK_STATUS',
					a = 'FETCH_MFP_LINK_STATUS_SUCCESS',
					s = 'FETCH_MFP_LINK_STATUS_FAIL';
			},
			760953: (e, t, i) => {
				'use strict';
				i.d(t, {
					A9: () => L,
					AF: () => r,
					As: () => g,
					Bd: () => s,
					CG: () => m,
					E7: () => A,
					Hd: () => R,
					Ho: () => E,
					Hx: () => C,
					M$: () => _,
					SE: () => c,
					YU: () => p,
					Yk: () => l,
					aM: () => w,
					ch: () => T,
					do: () => O,
					eA: () => u,
					h4: () => y,
					j2: () => P,
					mB: () => o,
					mh: () => D,
					og: () => I,
					qQ: () => N,
					so: () => v,
					ty: () => f,
					u3: () => a,
					x1: () => d,
					x8: () => S,
					xC: () => h,
					xI: () => F,
					zJ: () => b,
				});
				var n = i(316550);
				i(507963);
				function a(e) {
					return { type: n.WXR, payload: e };
				}
				const s = (e) => ({ type: n.ZQw, payload: { legIndex: e } }),
					r = (e) => ({ type: n.lXe, payload: e });
				function o(e) {
					return { type: n.nIQ, payload: e };
				}
				function l(e) {
					return { type: n.vos, payload: e };
				}
				const c = () => ({ type: n.Wyt }),
					d = () => ({ type: n.x1z }),
					u = () => ({ type: n.oli }),
					p = () => ({ type: n.h4o }),
					y = (e) => ({ type: n.IIj, payload: e }),
					h = (e) => ({ type: n.h5N, payload: e }),
					g = () => ({ type: n._wP }),
					m = (e) => ({ type: n.BC, payload: { currentLegIndex: e } }),
					A = (e) => ({ type: n.d3g, payload: e }),
					_ = (e) => ({ type: n.yR9, payload: e }),
					E = () => ({ type: n.sr2 }),
					T = (e) => ({ type: n.fyJ, payload: e }),
					C = 'MERGE_STRATEGY_WITH_PREVIOUS_LEG',
					S = 'MERGE_STRATEGY_WITH_NEXT_LEG',
					I = (e) => ({ type: n.fHE, payload: e }),
					v = (e) => ({ type: n.Mc, payload: e }),
					f = (e) => ({ type: n.KPb, payload: e }),
					D = (e) => ({ type: n._Ni, payload: { snapshotName: e } }),
					N = (e) => ({ type: n.WkO, payload: { snapshotName: e } }),
					R = () => ({ type: n.of5 }),
					b = ({ timestamp: e, eventType: t = 'ON_CHANGING' }) => ({
						type: n.Xoq,
						payload: { timestamp: e, eventType: t },
					}),
					L = ({ timestamp: e, eventType: t = 'ON_CHANGING' }) => ({
						type: n.KZ$,
						payload: { timestamp: e, eventType: t },
					}),
					P = () => ({ type: n.bV0 }),
					O = () => ({ type: n.VH4 }),
					w = () => ({ type: n.rZV }),
					F = (e) => ({ type: n.vVR, payload: e });
			},
			487829: (e, t, i) => {
				'use strict';
				i.d(t, { _B: () => r, cN: () => a, xG: () => s });
				var n = i(316550);
				const a = ({ displayName: e, reset: t }) => ({
						type: n.wwx,
						displayName: e,
						reset: t,
					}),
					s = () => ({ type: n.xnF }),
					r = (e) => ({ type: n.r55, payload: e });
			},
			950575: (e, t, i) => {
				'use strict';
				i.d(t, {
					AQ: () => L,
					FZ: () => h,
					Hf: () => F,
					Hs: () => N,
					I8: () => d,
					J4: () => k,
					KF: () => v,
					KK: () => S,
					RL: () => _,
					Rb: () => y,
					Rc: () => a,
					Rm: () => A,
					SH: () => D,
					Uc: () => E,
					Vi: () => G,
					YD: () => o,
					ZT: () => g,
					_3: () => M,
					_l: () => r,
					cq: () => s,
					dK: () => b,
					eI: () => B,
					kk: () => f,
					lB: () => l,
					l_: () => O,
					mQ: () => m,
					px: () => U,
					qY: () => R,
					qe: () => u,
					r3: () => x,
					r6: () => p,
					rE: () => w,
					ry: () => I,
					we: () => P,
					wn: () => c,
					x6: () => T,
					zN: () => C,
				});
				var n = i(316550);
				function a(e) {
					return { type: n.MFy, payload: e };
				}
				function s(e) {
					return { type: n.E8C, payload: e };
				}
				function r(e) {
					return { type: n.zR8, activityId: e };
				}
				function o({ hasError: e }) {
					return { type: n.QXx, hasError: e };
				}
				function l() {
					return { type: n.QXx, hasError: !0 };
				}
				function c() {
					return { type: n.QXx, hasError: !1 };
				}
				function d(e) {
					return { type: n.J$$, payload: e };
				}
				function u(e) {
					return { type: n.FQ0, payload: e };
				}
				function p(e) {
					return { type: n.ANZ, payload: e };
				}
				function y(e) {
					return { type: n.yi2, payload: e };
				}
				function h(e) {
					return { type: n.Dbt, payload: e };
				}
				function g(e) {
					return { type: n.Tvt, payload: e };
				}
				function m(e) {
					return { type: n.O3t, payload: e };
				}
				function A(e) {
					return { type: n.ZR7, payload: e };
				}
				function _(e) {
					return { type: n.VDP, payload: e };
				}
				function E(e) {
					return { type: n.WhI, payload: e };
				}
				function T(e) {
					return { type: n.NMB, payload: e };
				}
				function C(e) {
					return { type: n.qz6, payload: e };
				}
				function S(e) {
					return { type: n.hGj, payload: e };
				}
				function I(e) {
					return { type: n.wvx, payload: e };
				}
				function v() {
					return { type: n.R_Y };
				}
				function f() {
					return { type: n.qC };
				}
				function D(e) {
					return { type: n.bl, payload: e };
				}
				function N(e) {
					return { type: n.zKB, payload: e };
				}
				function R(e) {
					return { type: n.kRn, payload: e };
				}
				function b(e) {
					return { type: n.E7Z, payload: e };
				}
				function L() {
					return { type: n.MKI };
				}
				function P(e) {
					return { type: n.ta0, payload: e };
				}
				function O({ activityId: e, imageUuid: t }) {
					return { type: n.H$_, activityId: e, imageUuid: t };
				}
				function w() {
					return { type: n.T39 };
				}
				function F({ flagReason: e, note: t }) {
					return { type: n.ocE, flagReason: e, note: t };
				}
				function k({ error: e = !1, reviewStatus: t }) {
					return { type: n.BBw, error: e, reviewStatus: t };
				}
				function U({ activityId: e, imageUuid: t }) {
					return { type: n.eoq, activityId: e, imageUuid: t };
				}
				function M() {
					return { type: n.PFn };
				}
				function G() {
					return { type: n.QI7 };
				}
				function x() {
					return { type: n.QH5 };
				}
				function B() {
					return { type: n.rZg };
				}
			},
			11481: (e, t, i) => {
				'use strict';
				i.d(t, {
					CQ: () => v,
					DF: () => D,
					DK: () => c,
					Ej: () => l,
					FM: () => _,
					Gq: () => p,
					HP: () => E,
					Jo: () => N,
					LD: () => s,
					LY: () => d,
					Lq: () => S,
					MD: () => g,
					SC: () => u,
					Xo: () => r,
					YR: () => n,
					YZ: () => a,
					_G: () => m,
					cd: () => T,
					dG: () => A,
					g7: () => y,
					i0: () => f,
					jK: () => C,
					oR: () => I,
					r9: () => h,
					ri: () => o,
				});
				const n = 'FETCH_PACE_PRO_BANDS',
					a = 'FETCH_PACE_PRO_BANDS_SUCCESS',
					s = 'FETCH_PACE_PRO_BANDS_FAIL',
					r = 'FETCH_PACE_PRO_BANDS_SUMMARY',
					o = 'FETCH_PACE_PRO_BANDS_SUMMARY_SUCCESS',
					l = 'FETCH_PACE_PRO_BANDS_SUMMARY_FAIL',
					c = 'FETCH_PACE_PRO_BAND',
					d = 'FETCH_PACE_PRO_BAND_SUCCESS',
					u = 'FETCH_PACE_PRO_BAND_FAIL',
					p = 'UPDATE_PACE_PRO_BAND',
					y = 'UPDATE_PACE_PRO_BAND_SUCCESS',
					h = 'UPDATE_PACE_PRO_BAND_FAIL',
					g = 'SAVE_PACE_PRO_BAND',
					m = 'SAVE_PACE_PRO_BAND_SUCCESS',
					A = 'SAVE_PACE_PRO_BAND_FAIL',
					_ = 'SEND_PACEPRO_TO_DEVICE',
					E = 'SEND_PACEPRO_TO_DEVICE_SUCCESS',
					T = 'SEND_PACEPRO_TO_DEVICE_ERROR',
					C = 'DELETE_PACEPRO',
					S = 'DELETE_PACEPRO_SUCCESS',
					I = 'DELETE_PACEPRO_FAIL',
					v = 'FETCH_PACE_PRO_ALGORITHM_CONFIG',
					f = 'FETCH_PACE_PRO_ALGORITHM_CONFIG_SUCCESS',
					D = 'FETCH_PACE_PRO_ALGORITHM_CONFIG_FAIL',
					N = 'FETCH_PACE_PRO_BAND_COURSE';
			},
			58195: (e, t, i) => {
				'use strict';
				i.d(t, {
					C4: () => g,
					Fb: () => s,
					IH: () => I,
					JV: () => _,
					Jx: () => h,
					Lv: () => v,
					Mr: () => S,
					PJ: () => r,
					R7: () => T,
					Rg: () => d,
					TQ: () => o,
					Vw: () => u,
					XZ: () => y,
					az: () => a,
					cF: () => p,
					cV: () => C,
					hN: () => A,
					iw: () => l,
					lX: () => m,
					le: () => E,
					qn: () => c,
				});
				var n = i(316550);
				function a() {
					return { type: n.IHW };
				}
				function s(e, t) {
					return { type: n.bfs, courseId: e, overWritePowerGuidance: t };
				}
				function r(e) {
					return { type: n.M63, value: e };
				}
				function o(e) {
					return { type: n.BID, value: e };
				}
				function l(e) {
					return { type: n.quN, value: e };
				}
				function c(e) {
					return { type: n.P_s, powerGuidanceId: e };
				}
				function d(e, t) {
					return { type: n.j7Y, powerGuidanceId: e, powerGuidanceName: t };
				}
				function u(e) {
					return { type: n.B9N, value: e };
				}
				function p(e) {
					return { type: n.LVb, powerGuidancePk: e };
				}
				function y(e, t) {
					return { type: n.d1r, key: e, value: t };
				}
				function h(e) {
					return { type: n.JnV, summary: e };
				}
				function g(e) {
					return { type: n.oHl, splits: e };
				}
				function m(e, t, i) {
					return {
						type: n.zFJ,
						payload: e,
						courseNotOwned: t,
						hasShareableEvent: i,
					};
				}
				function A() {
					return { type: n.QI5 };
				}
				function _(e) {
					return { type: n.XfR, payload: e };
				}
				function E(e) {
					return { type: n.nDq, activity: e };
				}
				function T(e) {
					return { type: n.gV, payload: e };
				}
				function C(e) {
					return { type: n.uBU, payload: e };
				}
				function S() {
					return { type: n.ecG };
				}
				function I() {
					return { type: n.g4t };
				}
				function v(e) {
					return { type: n.qJ9, courseId: e };
				}
			},
			222192: (e, t, i) => {
				'use strict';
				i.d(t, {
					$G: () => C,
					B6: () => M,
					Bt: () => j,
					CG: () => Ne,
					CU: () => _,
					DN: () => d,
					Dt: () => Fe,
					Dv: () => h,
					Dx: () => ve,
					Ef: () => Be,
					FO: () => w,
					G: () => S,
					GC: () => K,
					GZ: () => Se,
					Gp: () => xe,
					H6: () => J,
					HB: () => l,
					HL: () => O,
					I3: () => Ie,
					IC: () => ge,
					IR: () => W,
					K9: () => g,
					KP: () => F,
					Mb: () => n,
					NM: () => Te,
					Nb: () => Oe,
					Ng: () => Ee,
					O7: () => y,
					Ob: () => de,
					Pd: () => Me,
					Q0: () => B,
					QD: () => L,
					QQ: () => oe,
					RA: () => ce,
					RW: () => Ae,
					S3: () => ue,
					SQ: () => b,
					TB: () => Pe,
					Us: () => U,
					V3: () => $,
					V8: () => fe,
					VB: () => o,
					VM: () => s,
					VP: () => we,
					VX: () => Z,
					Vi: () => pe,
					Vx: () => V,
					YI: () => ke,
					YS: () => A,
					ZB: () => He,
					a1: () => Re,
					bs: () => Le,
					cW: () => p,
					cz: () => Y,
					dD: () => ee,
					db: () => r,
					e4: () => u,
					eG: () => ae,
					f6: () => De,
					fM: () => E,
					fP: () => me,
					fU: () => f,
					hE: () => k,
					hw: () => Ue,
					iO: () => G,
					i_: () => D,
					j: () => H,
					jP: () => N,
					kG: () => Ge,
					lG: () => he,
					lR: () => Ve,
					m1: () => _e,
					mg: () => Q,
					o3: () => z,
					oC: () => a,
					or: () => te,
					p6: () => se,
					p7: () => ne,
					pb: () => be,
					pm: () => X,
					px: () => m,
					r7: () => le,
					r9: () => q,
					rv: () => re,
					sF: () => v,
					tq: () => x,
					uP: () => ye,
					vc: () => R,
					vs: () => T,
					vy: () => Ce,
					wQ: () => I,
					xL: () => ie,
					ye: () => P,
					yf: () => c,
				});
				const n = 'UPDATE_STOP_TRACKING_REASON',
					a = 'UPDATE_STOP_TRACKING_END_DATE',
					s = 'UPDATE_STOP_TRACKING_PREGNANCY_NOTES',
					r = 'UPDATE_STOP_TRACKING_CYCLE_TYPE',
					o = 'RESET_STOP_TRACKING',
					l = 'COMPLETE_STOP_TRACKING',
					c = 'COMPLETE_STOP_TRACKING_START',
					d = 'COMPLETE_STOP_TRACKING_SUCCESS',
					u = 'COMPLETE_STOP_TRACKING_ERROR',
					p = 'TAKE_A_BREAK',
					y = 'RESET_TAKE_A_BREAK',
					h = 'TAKE_A_BREAK_START',
					g = 'TAKE_A_BREAK_SUCCESS',
					m = 'TAKE_A_BREAK_ERROR',
					A = 'RESET_SETUP',
					_ = 'UPDATE_SETUP_DUE_DATE',
					E = 'UPDATE_DAILY_HYDRATION_GOAL',
					T = 'UPDATE_WEIGHT_GOAL_USER_INPUTS',
					C = 'UPDATE_INDEX_SCALE_ADVANCED_METRICS',
					S = 'ENABLE_MOVE_ALERTS',
					I = 'ENABLE_TRAINING_STATUS_ALERTS',
					v = 'INITIAL_PREGNANCY_CREATE',
					f = 'INITIAL_PREGNANCY_CREATE_SEND',
					D = 'INITIAL_PREGNANCY_CREATE_SUCCESS',
					N = 'INITIAL_PREGNANCY_CREATE_ERROR',
					R = 'INITIAL_PREGNANCY_HYDRATION_ERROR',
					b = 'INITIAL_PREGNANCY_TRAINING_STATUS_ERROR',
					L = 'INITIAL_PREGNANCY_WEIGHT_GAIN_GOALS_ERROR',
					P = 'INITIAL_PREGNANCY_INDEX_SCALE_ERROR',
					O = 'INITIAL_PREGNANCY_MOVE_ALERT_ERROR',
					w = 'FETCH_PREGNANCY_SNAPSHOTS',
					F = 'FETCH_PREGNANCY_SNAPSHOTS_FETCHING',
					k = 'FETCH_PREGNANCY_SNAPSHOTS_SUCCESS',
					U = 'FETCH_PREGNANCY_SNAPSHOTS_FAIL',
					M = 'UPDATE_PREGNANCY_SNAPSHOT',
					G = 'UPDATE_PREGNANCY_SNAPSHOT_UPDATING',
					x = 'UPDATE_PREGNANCY_SNAPSHOT_SUCCESS',
					B = 'UPDATE_PREGNANCY_SNAPSHOT_FAIL',
					H = 'DELETE_PREGNANCY_SNAPSHOT',
					V = 'FETCH_PREGNANCY_DAYVIEW',
					W = 'FETCH_PREGNANCY_DAYVIEW_FETCHING',
					J = 'FETCH_PREGNANCY_DAYVIEW_SUCCESS',
					Y = 'FETCH_PREGNANCY_DAYVIEW_FAIL',
					$ = 'UPDATE_PREGNANCY_DAILY_LOG',
					j = 'UPDATE_PREGNANCY_DAILY_LOG_SUCCESS',
					K = 'UPDATE_PREGNANCY_DAILY_LOG_FAIL',
					z = 'FETCH_PREGNANCY_GLUCOSE',
					q = 'FETCH_PREGNANCY_GLUCOSE_FETCHING',
					Q = 'FETCH_PREGNANCY_GLUCOSE_SUCCESS',
					X = 'FETCH_PREGNANCY_GLUCOSE_FAIL',
					Z = 'ADD_PREGNANCY_GLUCOSE',
					ee = 'ADD_PREGNANCY_GLUCOSE_SUCCESS',
					te = 'ADD_PREGNANCY_GLUCOSE_FAIL',
					ie = 'UPDATE_PREGNANCY_GLUCOSE',
					ne = 'UPDATE_PREGNANCY_GLUCOSE_SUCCESS',
					ae = 'UPDATE_PREGNANCY_GLUCOSE_FAIL',
					se = 'DELETE_PREGNANCY_GLUCOSE',
					re = 'DELETE_PREGNANCY_GLUCOSE_SUCCESS',
					oe = 'DELETE_PREGNANCY_GLUCOSE_FAIL',
					le = 'FETCH_PREGNANCY_ICON',
					ce = 'FETCH_PREGNANCY_ICON_SUCCESS',
					de = 'FETCH_PREGNANCY_ICON_FAIL',
					ue = 'INITIAL_PREGNANCY_CREATE_CONFLICT_ERROR',
					pe = 'FETCH_PREGNANCY_WEIGHT_GAIN_GOALS',
					ye = 'FETCH_PREGNANCY_WEIGHT_GAIN_GOALS_FETCHING',
					he = 'FETCH_PREGNANCY_WEIGHT_GAIN_GOALS_SUCCESS',
					ge = 'FETCH_PREGNANCY_WEIGHT_GAIN_GOALS_FAIL';
				function me(e) {
					return { type: s, notes: e };
				}
				function Ae(e) {
					return { type: n, reason: e };
				}
				function _e(e) {
					return { type: a, endDate: e };
				}
				function Ee(e) {
					return { type: r, cycleType: e };
				}
				function Te() {
					return { type: o };
				}
				function Ce(e) {
					return { type: l, data: e };
				}
				function Se() {
					return { type: y };
				}
				function Ie(e) {
					return { type: p, data: e };
				}
				function ve() {
					return { type: A };
				}
				function fe(e, t) {
					return { type: _, dueDate: t, title: e };
				}
				function De(e) {
					return { type: E, hydrationGoal: e };
				}
				function Ne(e) {
					return { type: T, weightGoalUserInputs: e };
				}
				function Re(e, t) {
					return {
						type: C,
						advancedMetrics: { deviceId: e, advancedMetrics: t },
					};
				}
				function be(e, t) {
					return { type: S, deviceId: e, enabled: t };
				}
				function Le(e) {
					return { type: I, enableTrainingStatusAlerts: e };
				}
				function Pe(e) {
					return { type: v, setupDetail: e };
				}
				function Oe() {
					return { type: w };
				}
				function we(e, t, i) {
					return {
						type: M,
						pregnancySettings: e,
						originalDueDate: t,
						callback: i,
					};
				}
				function Fe(e, t) {
					return { type: H, originalDueDate: e, callback: t };
				}
				function ke(e, t) {
					return { type: V, date: e, meta: { cacheTime: t ? null : 1e3 } };
				}
				function Ue(e) {
					return { type: $, log: e };
				}
				function Me(e) {
					return { type: z, date: e };
				}
				function Ge(e, t = !1) {
					return { type: Z, message: { log: e, reload: t } };
				}
				function xe(e, t = !1) {
					return { type: ie, message: { log: e, reload: t } };
				}
				function Be(e, t = !1) {
					return { type: se, message: { log: e, reload: t } };
				}
				function He(e) {
					return { type: le, message: { iconKey: e } };
				}
				function Ve(e, t) {
					return { type: pe, date: e, meta: { cacheTime: t ? null : 1e3 } };
				}
			},
			706670: (e, t, i) => {
				'use strict';
				i.d(t, {
					A9: () => c,
					Dx: () => l,
					G9: () => s,
					Gl: () => y,
					L$: () => d,
					Nx: () => p,
					_d: () => n,
					ci: () => u,
					jE: () => a,
					qO: () => o,
					tU: () => g,
					vW: () => h,
					zG: () => r,
				});
				const n = 'FETCH_DAILY_PUSHES_REPORTS',
					a = 'FETCH_DAILY_PUSHES_REPORTS_FETCHING',
					s = 'FETCH_DAILY_PUSHES_REPORTS_SUCCESS',
					r = 'FETCH_DAILY_PUSHES_REPORTS_FAIL',
					o = 'FETCH_WEEKLY_PUSHES_REPORTS',
					l = 'FETCH_WEEKLY_PUSHES_REPORTS_FETCHING',
					c = 'FETCH_WEEKLY_PUSHES_REPORTS_SUCCESS',
					d = 'FETCH_WEEKLY_PUSHES_REPORTS_FAIL',
					u = 'FETCH_MONTHLY_PUSHES_REPORTS',
					p = 'FETCH_MONTHLY_PUSHES_REPORTS_FETCHING',
					y = 'FETCH_MONTHLY_PUSHES_REPORTS_SUCCESS',
					h = 'FETCH_MONTHLY_PUSHES_REPORTS_FAIL',
					g = 'SWITCH_PUSHES_METRIC_PERIOD';
			},
			212861: (e, t, i) => {
				'use strict';
				i.d(t, {
					$S: () => h,
					BY: () => d,
					Bb: () => r,
					Cm: () => M,
					Dv: () => m,
					Dw: () => O,
					OU: () => u,
					Pu: () => w,
					UT: () => F,
					Ub: () => L,
					V3: () => E,
					Yn: () => g,
					ZS: () => l,
					Zb: () => p,
					b: () => f,
					cE: () => G,
					fA: () => o,
					fz: () => c,
					gr: () => b,
					gs: () => _,
					il: () => P,
					mr: () => U,
					o1: () => k,
					oq: () => I,
					qd: () => C,
					rC: () => y,
					sO: () => T,
					sb: () => S,
					v8: () => v,
					vg: () => A,
					wO: () => x,
					wu: () => R,
					y0: () => N,
					y8: () => D,
				});
				var n = i(316550),
					a = i(586816),
					s = i(765722);
				const r = () => ({ type: n.Kp_ }),
					o = (e) => ({ type: n.yjs, segmentTypes: e, receivedAt: Date.now() }),
					l = () => ({ type: n.S4v }),
					c = (e) => ({ type: n.uuz, surfaceTypes: e, receivedAt: Date.now() }),
					d = (e) => ({ type: n.YAw, data: e }),
					u = (e, t, i) => ({
						type: n.QaH,
						filterName: e,
						filterValue: t,
						onlyOneValueSelected: i,
					}),
					p = (e) => ({ type: n.DVA, activityId: e }),
					y = (e, t) => ({
						type: n.fll,
						data: e,
						activityId: t,
						receivedAt: Date.now(),
					}),
					h = (e) => ({ type: n.WJC, error: e }),
					g = (e) => s.tI.get(`/course-service/segment/activity/${e}`),
					m = (e) => (
						(0, a.B)() && (e.coordinateSystem = 'BD09'),
						e.uuid
							? s.tI.put(`/course-service/segment/${e.uuid}`, e)
							: s.tI.post('/course-service/segment/', e)
					),
					A = (e, t) => ({ type: n.TlM, segmentId: e, callback: t }),
					_ = () => ({ type: n.hLx }),
					E = (e, t) => ({
						type: n.pqn,
						data: e,
						segmentId: t,
						receivedAt: Date.now(),
					}),
					T = (e, t) => ({ type: n.cZ4, data: e, isEndlessLoading: t }),
					C = (e, t) => ({
						type: n.SST,
						data: e,
						isEndlessLoading: !!t,
						receivedAt: Date.now(),
					}),
					S = (e) => ({ type: n.ALi, data: e }),
					I = (e) => ({ type: n.XXh, error: e }),
					v = (e, t) => ({
						type: n.Gf2,
						segmentId: e,
						displayName: t,
						meta: { cacheTime: 6e5 },
					}),
					f = (e) => ({ type: n.mQt, selectedTab: e }),
					D = (e = {}, t) => ({ type: n.zF2, filters: e, callback: t }),
					N = (e) => ({
						type: n.dOI,
						data: e.segmentUserDTOList || e.segments,
						receivedAt: Date.now(),
					}),
					R = (e, t) => ({ type: n.QnG, segmentpk: e, favorite: t }),
					b = (e) => ({ type: n.RC3, favorite: e }),
					L = (e) => ({ type: n.hN6, segment: e }),
					P = (e) => ({ type: n.Xrj, segment: e }),
					O = (e, t) => ({ type: n.IDU, response: e, segmentUuid: t }),
					w = (e, t) => ({ type: n.cTn, segmentUuid: e, callback: t }),
					F = (e, t) => ({ type: n.PHf, administeredGroupId: e, segmentPk: t }),
					k = (e) => ({ type: n.dsR, response: e }),
					U = () => ({ type: n.Bjb }),
					M = (e) => ({ type: n.twM, item: e }),
					G = (e) => ({ type: n.$us, item: e }),
					x = () => ({ type: n.y4l });
			},
			128903: (e, t, i) => {
				'use strict';
				i.d(t, {
					Bh: () => l,
					H1: () => g,
					Hw: () => h,
					J0: () => o,
					Mb: () => u,
					ND: () => m,
					c: () => r,
					eU: () => y,
					mj: () => s,
					ri: () => a,
					rp: () => p,
					vi: () => d,
					xT: () => c,
				});
				var n = i(316550);
				function a(e, t, i, a) {
					return {
						type: n.Kj3,
						displayName: e,
						calendarDate: t,
						nonSleepBufferMinutes: i,
						meta: { cacheTime: a ? null : 12e4 },
					};
				}
				function s(e, t, i, a) {
					return {
						type: n.H2Z,
						newSleepDTO: e,
						displayName: t,
						calendarDate: i,
						nonSleepBufferMinutes: a,
					};
				}
				function r(e, t, i) {
					return { type: n.nKE, userNote: e, displayName: t, calendarDate: i };
				}
				function o(e, t, i) {
					return {
						type: n.OvS,
						calendarDate: e,
						nonSleepBufferMinutes: t,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				function l(e, t) {
					return { type: n.xMj, userNote: e, calendarDate: t };
				}
				function c(e, t, i, a) {
					return {
						type: n.ffC,
						newSleepDTO: e,
						displayName: t,
						calendarDate: i,
						nonSleepBufferMinutes: a,
					};
				}
				function d(e, t) {
					return { type: n.wXw, sleepObject: e, calendarDate: t };
				}
				function u() {
					return { type: n.g2Q };
				}
				function p(e) {
					return { type: n.arQ, tab: e };
				}
				function y(e, t, i) {
					return {
						type: n.kEF,
						startDate: e,
						endDate: t,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				function h(e) {
					return { type: n.gTf, napObject: e };
				}
				function g(e, t) {
					return { type: n.mxd, calendarDate: e, startTimeInMilis: t };
				}
				function m(e, t, i, a) {
					return {
						type: n.eq6,
						calendarDate: e,
						startTimeInMilis: t,
						endTimeInMilis: i,
						updatedNapObject: a,
					};
				}
			},
			883716: (e, t, i) => {
				'use strict';
				i.d(t, {
					$m: () => r,
					BT: () => a,
					I0: () => n,
					R0: () => l,
					UQ: () => s,
					Vo: () => d,
					iQ: () => o,
					kF: () => c,
				});
				const n = 'FETCH_DAILY_SLEEP_DATA_REPORTS',
					a = 'FETCH_DAILY_SLEEP_DATA_REPORTS_FETCHING',
					s = 'FETCH_DAILY_SLEEP_DATA_REPORTS_SUCCESS',
					r = 'FETCH_DAILY_SLEEP_DATA_REPORTS_FAIL',
					o = 'FETCH_WEEKLY_SLEEP_DATA_REPORTS',
					l = 'FETCH_WEEKLY_SLEEP_DATA_REPORTS_FETCHING',
					c = 'FETCH_WEEKLY_SLEEP_DATA_REPORTS_SUCCESS',
					d = 'FETCH_WEEKLY_SLEEP_DATA_REPORTS_FAIL';
			},
			250355: (e, t, i) => {
				'use strict';
				i.d(t, { j: () => a });
				var n = i(316550);
				const a = ({ open: e, errorType: t, isGroup: i = !1 }) => ({
					type: n.V7_,
					open: e,
					errorType: t,
					isGroup: i,
				});
			},
			470564: (e, t, i) => {
				'use strict';
				i.d(t, {
					$S: () => n,
					e0: () => s,
					mg: () => r,
					u$: () => o,
					xB: () => a,
				});
				const n = 'FETCH_SOLAR_INTENSITY',
					a = 'FETCH_SOLAR_INTENSITY_SUCCESS',
					s = 'FETCH_SOLAR_INTENSITY_FAIL',
					r = 'FETCH_SOLAR_INTENSITY_FETCHING',
					o = 'SET_SOLAR_DATE';
			},
			270715: (e, t, i) => {
				'use strict';
				i.d(t, {
					A_: () => c,
					DA: () => p,
					Pb: () => n,
					Ql: () => d,
					YX: () => r,
					_D: () => h,
					jl: () => o,
					jw: () => u,
					m1: () => s,
					nJ: () => l,
					sL: () => y,
					vb: () => a,
				});
				const n = 'FETCH_FITNESSSTATS_ACTIVITY',
					a = 'FETCH_FITNESSSTATS_ACTIVITY_SUCCESS',
					s = 'FETCH_FITNESSSTATS_ACTIVITY_FETCHING',
					r = 'FETCH_FITNESSSTATS_ACTIVITY_ERROR',
					o = 'FETCH_RECENT_FITNESSSTATS_ACTIVITY',
					l = 'FETCH_RECENT_FITNESSSTATS_ACTIVITY_SUCCESS',
					c = 'FETCH_RECENT_FITNESSSTATS_ACTIVITY_FETCHING',
					d = 'FETCH_RECENT_FITNESSSTATS_ACTIVITY_ERROR',
					u = 'FETCH_USER_AVERAGE_PACE',
					p = 'FETCH_USER_AVERAGE_PACE_SUCCESS',
					y = 'FETCH_USER_AVERAGE_PACE_FETCHING',
					h = 'FETCH_USER_AVERAGE_PACE_ERROR';
			},
			96211: (e, t, i) => {
				'use strict';
				i.d(t, {
					BJ: () => o,
					Fp: () => c,
					JO: () => s,
					PL: () => n,
					Sb: () => a,
					Ud: () => l,
					Wl: () => r,
					bf: () => y,
					cY: () => p,
					pc: () => u,
					qj: () => h,
					sQ: () => g,
					uC: () => d,
				});
				const n = 'FETCH_DAILY_STEPS_REPORTS',
					a = 'FETCH_DAILY_STEPS_REPORTS_FETCHING',
					s = 'FETCH_DAILY_STEPS_REPORTS_SUCCESS',
					r = 'FETCH_DAILY_STEPS_REPORTS_FAIL',
					o = 'FETCH_WEEKLY_STEPS_REPORTS',
					l = 'FETCH_WEEKLY_STEPS_REPORTS_FETCHING',
					c = 'FETCH_WEEKLY_STEPS_REPORTS_SUCCESS',
					d = 'FETCH_WEEKLY_STEPS_REPORTS_FAIL',
					u = 'FETCH_MONTHLY_STEPS_REPORTS',
					p = 'FETCH_MONTHLY_STEPS_REPORTS_FETCHING',
					y = 'FETCH_MONTHLY_STEPS_REPORTS_SUCCESS',
					h = 'FETCH_MONTHLY_STEPS_REPORTS_FAIL',
					g = 'SWITCH_STEPS_METRIC_PERIOD';
			},
			69330: (e, t, i) => {
				'use strict';
				i.d(t, {
					$c: () => n,
					K3: () => d,
					Rx: () => s,
					_l: () => l,
					g3: () => r,
					nr: () => o,
					qI: () => a,
					vB: () => c,
				});
				const n = 'FETCH_DAILY_STRESS_DATA_REPORTS',
					a = 'FETCH_DAILY_STRESS_DATA_REPORTS_FETCHING',
					s = 'FETCH_DAILY_STRESS_DATA_REPORTS_SUCCESS',
					r = 'FETCH_DAILY_STRESS_DATA_REPORTS_FAIL',
					o = 'FETCH_WEEKLY_STRESS_DATA_REPORTS',
					l = 'FETCH_WEEKLY_STRESS_DATA_REPORTS_FETCHING',
					c = 'FETCH_WEEKLY_STRESS_DATA_REPORTS_SUCCESS',
					d = 'FETCH_WEEKLY_STRESS_DATA_REPORTS_FAIL';
			},
			469612: (e, t, i) => {
				'use strict';
				i.d(t, {
					GT: () => a,
					LN: () => s,
					Oi: () => l,
					Tm: () => o,
					ed: () => r,
					fP: () => n,
					gf: () => d,
					hp: () => c,
				});
				const n = 'FETCH_DAILY_TOTAL_CALORIES_REPORTS',
					a = 'FETCH_DAILY_TOTAL_CALORIES_REPORTS_FETCHING',
					s = 'FETCH_DAILY_TOTAL_CALORIES_REPORTS_SUCCESS',
					r = 'FETCH_DAILY_TOTAL_CALORIES_REPORTS_FAIL',
					o = 'FETCH_WEEKLY_TOTAL_CALORIES_REPORTS',
					l = 'FETCH_WEEKLY_TOTAL_CALORIES_REPORTS_FETCHING',
					c = 'FETCH_WEEKLY_TOTAL_CALORIES_REPORTS_SUCCESS',
					d = 'FETCH_WEEKLY_TOTAL_CALORIES_REPORTS_FAIL';
			},
			760497: (e, t, i) => {
				'use strict';
				i.d(t, { M: () => a });
				var n = i(316550);
				function a(e, t) {
					return {
						type: n.iT7,
						payload: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
			},
			651232: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ai: () => c,
					Cp: () => u,
					D_: () => p,
					Ep: () => s,
					F9: () => a,
					KF: () => d,
					Lj: () => l,
					ZH: () => n,
					py: () => o,
					wx: () => r,
				});
				const n = 'FETCH_SELECTED_FIELDS',
					a = 'FETCH_SELECTED_FIELDS_SUCCESS',
					s = 'SAVE_SELECTED_FIELDS',
					r = 'SAVE_SELECTED_FIELDS_SUCCESS',
					o = 'FETCH_USER_PREFERENCE',
					l = 'FETCH_USER_PREFERENCE_SUCCESS',
					c = 'FETCH_USER_PREFERENCE_FAIL',
					d = 'SAVE_USER_PREFERENCE',
					u = 'SAVE_USER_PREFERENCE_SUCCESS',
					p = 'SAVE_USER_PREFERENCE_FAIL';
			},
			60964: (e, t, i) => {
				'use strict';
				i.d(t, { T3: () => a, mJ: () => s });
				var n = i(316550);
				function a(e) {
					return { type: n.JsE, payload: e };
				}
				function s(e) {
					return { type: n.sKH, payload: e };
				}
			},
			462205: (e, t, i) => {
				'use strict';
				i.d(t, {
					Eq: () => a,
					KJ: () => r,
					Pd: () => n,
					mG: () => o,
					pO: () => s,
				});
				const n = 'FETCH_USER_SUMMARY_AVERAGES',
					a = 'FETCH_USER_SUMMARY_AVERAGES_FETCHING',
					s = 'FETCH_USER_SUMMARY_AVERAGES_SUCCESS',
					r = 'FETCH_USER_SUMMARY_AVERAGES_FAIL';
				function o(e) {
					return { type: n, payload: e };
				}
			},
			748630: (e, t, i) => {
				'use strict';
				i.d(t, {
					Cc: () => O,
					Ce: () => S,
					Ed: () => h,
					FQ: () => z,
					G0: () => G,
					Gz: () => ne,
					H$: () => ee,
					Ih: () => s,
					JA: () => ie,
					L_: () => I,
					Lj: () => a,
					NH: () => w,
					OE: () => X,
					Oq: () => u,
					Os: () => P,
					Ow: () => v,
					PQ: () => W,
					PW: () => L,
					Q1: () => R,
					RJ: () => b,
					R_: () => x,
					Rg: () => g,
					S9: () => f,
					TI: () => D,
					VI: () => y,
					Vb: () => l,
					XV: () => r,
					XX: () => j,
					Xk: () => C,
					Y7: () => N,
					ZE: () => H,
					_D: () => F,
					ak: () => n,
					cy: () => M,
					ey: () => E,
					gc: () => Y,
					iQ: () => A,
					l_: () => p,
					n2: () => _,
					n3: () => V,
					nD: () => Q,
					nX: () => J,
					o4: () => te,
					oY: () => $,
					p_: () => T,
					pl: () => k,
					sf: () => B,
					t8: () => Z,
					to: () => d,
					uQ: () => c,
					ut: () => m,
					v: () => U,
					vU: () => K,
					vh: () => q,
					xV: () => o,
				});
				const n = 'FETCH_DAY_WEIGHTS',
					a = 'FETCH_DAY_WEIGHTS_FETCHING',
					s = 'FETCH_DAY_WEIGHTS_SUCCESS',
					r = 'FETCH_DAY_WEIGHTS_FAIL',
					o = 'FETCH_FIRST_WEIGHT',
					l = 'FETCH_FIRST_WEIGHT_SUCCESS',
					c = 'FETCH_LATEST_WEIGHT',
					d = 'FETCH_LATEST_WEIGHT_FETCHING',
					u = 'FETCH_LATEST_WEIGHT_SUCCESS',
					p = 'FETCH_LATEST_WEIGHT_FAIL',
					y = 'DELETE_USER_WEIGHT_GOAL',
					h = 'DELETING_USER_WEIGHT_GOAL',
					g = 'DELETE_USER_WEIGHT_GOAL_SUCCESS',
					m = 'DELETE_USER_WEIGHT_GOAL_FAIL',
					A = 'UPDATE_USER_GOAL',
					_ = 'UPDATE_USER_GOAL_START',
					E = 'UPDATE_USER_GOAL_SUCCESS',
					T = 'UPDATE_USER_GOAL_FAIL',
					C = 'ADD_USER_WEIGHT',
					S = 'ADD_USER_WEIGHT_START',
					I = 'ADD_USER_WEIGHT_SUCCESS',
					v = 'ADD_USER_WEIGHT_FAIL',
					f = 'SET_CURRENT_WEIGHT_TAB',
					D = 'FETCH_MONTHLY_WEIGHTS',
					N = 'FETCH_MONTHLY_WEIGHTS_FETCHING',
					R = 'FETCH_MONTHLY_WEIGHTS_FAIL',
					b = 'FETCH_MONTHLY_WEIGHTS_SUCCESS',
					L = 'FETCH_52_WEEKS_WEIGHTS',
					P = 'FETCH_52_WEEKS_WEIGHTS_FETCHING',
					O = 'FETCH_52_WEEKS_WEIGHTS_FAIL',
					w = 'FETCH_52_WEEKS_WEIGHTS_SUCCESS',
					F = 'FETCH_52_WEEKS_WEIGHTS_REPORT',
					k = 'FETCH_52_WEEKS_WEIGHTS_REPORT_FETCHING',
					U = 'FETCH_52_WEEKS_WEIGHTS_REPORT_FAIL',
					M = 'FETCH_52_WEEKS_WEIGHTS_REPORT_SUCCESS',
					G = 'FETCH_MULTIPLE_DAYS_WEIGHTS',
					x = 'FETCH_MULTIPLE_DAYS_WEIGHTS_FETCHING',
					B = 'FETCH_MULTIPLE_DAYS_WEIGHTS_SUCCESS',
					H = 'FETCH_MULTIPLE_DAYS_WEIGHTS_FAIL',
					V = 'DELETE_USER_WEIGHT',
					W = 'DELETE_USER_WEIGHT_FETCHING',
					J = 'DELETE_USER_WEIGHT_SUCCESS',
					Y = 'DELETE_USER_WEIGHT_FAIL',
					$ = 'SET_CURRENT_PAGE_DATE',
					j = 'SELECT_DATA_FOR_CHART',
					K = 'CLEAN_UP_WEIGHT_DATA',
					z = 'TOGGLE_WEIGHT_OVERLAY',
					q = 'FETCH_MULTIPLE_DAILY_WEIGHTS',
					Q = 'FETCH_MULTIPLE_DAILY_WEIGHTS_FETCHING',
					X = 'FETCH_MULTIPLE_DAILY_WEIGHTS_SUCCESS',
					Z = 'FETCH_MULTIPLE_DAILY_WEIGHTS_FAIL',
					ee = 'FETCH_WEIGHT_GAIN_GOALS',
					te = 'FETCH_WEIGHT_GAIN_GOALS_FETCHING',
					ie = 'FETCH_WEIGHT_GAIN_GOALS_SUCCESS',
					ne = 'FETCH_WEIGHT_GAIN_GOALS_FAIL';
			},
			233544: (e, t, i) => {
				'use strict';
				i.d(t, { ID: () => r, IN: () => a, X4: () => n, ne: () => s });
				const n = 'FETCH_WELLNESS_GOAL',
					a = 'FETCH_WELLNESS_GOAL_FETCHING',
					s = 'FETCH_WELLNESS_GOAL_SUCCESS',
					r = 'FETCH_WELLNESS_GOAL_FAIL';
			},
			954179: (e, t, i) => {
				'use strict';
				i.d(t, {
					SV: () => d,
					U2: () => a,
					ZC: () => s,
					_O: () => o,
					a: () => u,
					fD: () => c,
					fQ: () => l,
					vA: () => r,
				});
				var n = i(316550);
				function a(e, t, i, a) {
					return {
						type: n.xbj,
						payload: {
							fullLocale: e,
							workoutId: t,
							savedWorkout: i,
							includeAudioNotes: a,
						},
					};
				}
				function s(e, t) {
					return { type: n.$nJ, payload: { locale: e, workoutSourceId: t } };
				}
				function r(e, t) {
					return { type: n.w1Y, payload: e, callback: t };
				}
				function o(e, t) {
					return { type: n.Tpz, workout: e, callback: t };
				}
				function l(e, t, i) {
					return { type: n.qG9, workoutId: e, workoutName: t, callback: i };
				}
				function c(e, t) {
					return { type: n.wMf, workoutId: e, callback: t };
				}
				function d(e, t) {
					return { type: n.ESR, audioBlob: e, callback: t };
				}
				function u(e, t) {
					return { type: n.k9t, audioUuid: e, callback: t };
				}
			},
			701738: (e, t, i) => {
				'use strict';
				i.d(t, { $: () => a, o: () => s });
				var n = i(316550);
				function a() {
					return { type: n.PXI };
				}
				function s() {
					return { type: n.$rI };
				}
			},
			630105: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => u });
				var n = i(638761),
					a = i.n(n),
					s = i(765722),
					r = i(620013),
					o = i(860374),
					l = i.n(o),
					c = i(557369),
					d = i(728407);
				const u = new (class {
					constructor() {
						(this.timeoutDuration = 1e4),
							(this.expiryAdjustment = 6e4),
							(this.axiosInstance = a().create({
								baseURL: '/',
								timeout: this.timeoutDuration,
							})),
							delete this.axiosInstance.defaults.xsrfHeaderName,
							delete this.axiosInstance.defaults.xsrfCookieName,
							this.axiosInstance.interceptors.response.use(
								(e) => e,
								async (e) => {
									if (e.response && 401 === e.response.status) {
										c.A.signOut();
										const e = () => new Promise((e) => setTimeout(e, 1e3));
										await e();
									}
									return Promise.reject(e);
								}
							),
							(this.lock = new (l())());
					}
					async initializeAccountSharing(e) {
						if (
							((this.accountSharingTokenPromise = e),
							this.removeToken(),
							!this.accessToken)
						)
							try {
								await this.getToken();
							} catch (t) {
								throw (r.Cp(t), new Error());
							}
					}
					async initialize(e, t) {
						if (
							((this.viewerIsAuthenticated = e),
							this.token && this.garminGuid !== t && this.removeToken(),
							!this.accessToken)
						)
							try {
								await this.getToken('initialize');
							} catch (i) {
								r.Cp(i);
							}
					}
					async exchangeAccountSharingToken() {
						try {
							let e = (await this.accountSharingTokenPromise()).data;
							return (
								(e.expires =
									Date.now() + 1e3 * e.expires_in - this.expiryAdjustment),
								(e.refresh_token_expires =
									Date.now() +
									1e3 * e.refresh_token_expires_in -
									this.expiryAdjustment),
								(this.token = e),
								this.token.access_token
							);
						} catch (e) {
							throw e;
						}
					}
					async exchangeOAuth1Token() {
						try {
							const t = (
								await this.axiosInstance.post('/modern/di-oauth/exchange')
							).data;
							(t.expires =
								Date.now() + 1e3 * t.expires_in - this.expiryAdjustment),
								(t.refresh_token_expires =
									Date.now() +
									1e3 * t.refresh_token_expires_in -
									this.expiryAdjustment),
								(this.token = t);
							try {
								this.axiosInstance
									.get(`/modern/preference/${d.m8}`)
									.then(function (e) {
										var t;
										null !== e &&
											void 0 !== e &&
											null !== (t = e.data) &&
											void 0 !== t &&
											t.value &&
											'false' !== e.data.value &&
											s.Kq.post(
												'/client-analytics/analytics/garmin/event',
												[
													{
														eventType: 'SESSION',
														timestamp: new Date().getTime(),
													},
												],
												{
													headers: {
														'X-Garmin-Paired-App-Version':
															window.URL_BUST_VALUE,
													},
												}
											);
									});
							} catch (e) {
								console.log(e);
							}
							return t.access_token;
						} catch (t) {
							if (!t.response || 409 !== t.response.status) {
								if (t.config) throw this.addErrorContext(t);
								throw t;
							}
							{
								console.log('Reload to update session'),
									this.removeToken(),
									await this.lock.releaseLock('fetchToken'),
									window.location.reload();
								const e = () => new Promise((e) => setTimeout(e, 5e3));
								await e();
							}
						}
					}
					async fetchPublicToken() {
						try {
							const e = (
								await this.axiosInstance.post('/services/auth/token/public')
							).data;
							return (
								(e.expires =
									Date.now() + 1e3 * e.expires_in - this.expiryAdjustment),
								(this.token = e),
								e.access_token
							);
						} catch (e) {
							if (e.config) throw this.addErrorContext(e);
							throw e;
						}
					}
					async fetchTokenUsingRefresh() {
						try {
							const e = { refresh_token: this.refreshToken },
								t = (
									await this.axiosInstance.post(
										'/services/auth/token/refresh',
										e
									)
								).data;
							return (
								(t.expires =
									Date.now() + 1e3 * t.expires_in - this.expiryAdjustment),
								(t.refresh_token_expires =
									Date.now() +
									1e3 * t.refresh_token_expires_in -
									this.expiryAdjustment),
								(this.token = t),
								t.access_token
							);
						} catch (e) {
							if (e.config) throw this.addErrorContext(e);
							throw e;
						}
					}
					async fetchToken() {
						if (
							!(await this.lock.acquireLock('fetchToken', this.timeoutDuration))
						)
							throw new Error('Timeout acquiring lock');
						try {
							return this.accessToken
								? this.accessToken
								: this.refreshToken
									? await this.fetchTokenUsingRefresh()
									: this.accountSharingTokenPromise
										? await this.exchangeAccountSharingToken()
										: this.viewerIsAuthenticated
											? await this.exchangeOAuth1Token()
											: await this.fetchPublicToken();
						} catch (e) {
							throw e;
						} finally {
							await this.lock.releaseLock('fetchToken');
						}
					}
					redirectToSigninPage() {
						window.location.replace(window.location.origin + '/signin');
					}
					removeToken() {
						localStorage.removeItem('token'), this.removeLocalConfig();
					}
					removeLocalConfig() {
						localStorage.removeItem('viewerSocialProfile'),
							localStorage.removeItem('viewerDashboards'),
							localStorage.removeItem('viewerUserPreferences'),
							localStorage.removeItem('actorProfileImage');
					}
					addErrorContext(e) {
						let t = new Error(`${e.message} - ${e.config.url}`);
						return (
							(t.config = e.config),
							(t.request = e.request),
							(t.response = e.response),
							t
						);
					}
					async getToken() {
						if (this.accessToken) return this.accessToken;
						return ((e) => (
							this.getTokenPromise ||
								(this.getTokenPromise = e().finally(() => {
									this.getTokenPromise = null;
								})),
							this.getTokenPromise
						))(async () => {
							try {
								return await this.fetchToken();
							} catch (e) {
								r.Cp(e), this.redirectToSigninPage();
							}
						});
					}
					get token() {
						const e = localStorage.getItem('token');
						if (e) {
							const t = JSON.parse(e),
								i = Date.now();
							return t.expires < i &&
								(!t.refresh_token || t.refresh_token_expires < i)
								? void this.removeToken()
								: t;
						}
					}
					set token(e) {
						e && localStorage.setItem('token', JSON.stringify(e));
					}
					get accessToken() {
						if (this.token && this.token.expires > Date.now())
							return this.token.access_token;
					}
					get refreshToken() {
						if (this.token && this.token.refresh_token_expires > Date.now())
							return this.token.refresh_token;
					}
					get garminGuid() {
						if (this.token) {
							const e = this.token.access_token.split('.')[1],
								t = atob(e);
							return JSON.parse(t).garmin_guid;
						}
					}
				})();
			},
			805872: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d, e: () => l });
				var n = i(638761),
					a = i.n(n),
					s = i(620013),
					r = i(860374),
					o = i.n(r);
				const l = {
					HERE: 'HereToken',
					JETLAG: 'JetLagToken',
					LIVETRACK: 'LiveTrackToken',
				};
				class c {
					constructor(e) {
						(this.timeoutDuration = 1e4),
							(this.expiryAdjustment = 6e4),
							(this.axiosInstance = a().create({ baseURL: '/' })),
							(this.lock = new (o())()),
							(this.tokenType = e);
					}
					async initialize() {
						if (!this.accessToken)
							try {
								await this.getToken();
							} catch (e) {
								s.Cp(e);
							}
					}
					async fetchHereToken() {
						try {
							const e = { tokenType: this.tokenType },
								t = (
									await this.axiosInstance.post('/services/auth/token/here', e)
								).data;
							return (
								(t.expires =
									Date.now() + 1e3 * t.expires_in - this.expiryAdjustment),
								(this.token = t),
								t.access_token
							);
						} catch (e) {
							if (e.config) throw this.addErrorContext(e);
							throw e;
						}
					}
					async fetchToken() {
						if (
							!(await this.lock.acquireLock(
								`fetch${this.tokenType}`,
								this.timeoutDuration
							))
						)
							throw new Error('Timeout acquiring lock');
						try {
							return this.accessToken
								? this.accessToken
								: await this.fetchHereToken();
						} catch (e) {
							throw e;
						} finally {
							await this.lock.releaseLock(`fetch${this.tokenType}`);
						}
					}
					removeToken() {
						localStorage.removeItem(this.tokenType);
					}
					addErrorContext(e) {
						let t = new Error(`${e.message} - ${e.config.url}`);
						return (
							(t.config = e.config),
							(t.request = e.request),
							(t.response = e.response),
							t
						);
					}
					async getToken() {
						if (this.accessToken) return this.accessToken;
						return ((e) => (
							this.getTokenPromise ||
								(this.getTokenPromise = e().finally(() => {
									this.getTokenPromise = null;
								})),
							this.getTokenPromise
						))(async () => {
							try {
								return await this.fetchToken();
							} catch (e) {
								s.Cp(e);
							}
						});
					}
					get token() {
						const e = localStorage.getItem(this.tokenType);
						if (e) {
							const t = JSON.parse(e),
								i = Date.now();
							return t.expires < i &&
								(!t.refresh_token || t.refresh_token_expires < i)
								? void this.removeToken()
								: t;
						}
					}
					set token(e) {
						e && localStorage.setItem(this.tokenType, JSON.stringify(e));
					}
					get accessToken() {
						if (this.token && this.token.expires > Date.now())
							return this.token.access_token;
					}
				}
				const d = new (class {
					constructor() {
						(this.hereTokenManager = new c(l.HERE)),
							(this.hereJetLagTokenManager = new c(l.JETLAG));
					}
					async initialize() {
						await this.hereTokenManager.initialize(),
							await this.hereJetLagTokenManager.initialize();
					}
					async getJetLagToken() {
						return await this.hereJetLagTokenManager.getToken();
					}
					async getHereToken() {
						return await this.hereTokenManager.getToken();
					}
					async getToken() {
						return await this.getHereToken();
					}
				})();
			},
			334790: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(765722);
				const a = {
					setPrimaryActivityTracker: function (e, t, i, a) {
						n.tI
							.put(
								`/device-service/deviceservice/device-info/${e}/primary-activity-tracker`,
								{ data: t }
							)
							.then(() => {
								i();
							})
							.catch(() => {
								'function' === typeof a && a();
							});
					},
				};
			},
			638893: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => r });
				var n = i(893855),
					a = i.n(n);
				const s = a().Model.extend({ idAttribute: 'unitKey' });
				const r = new (a().Collection.extend({
					model: s,
					backend: 'gcapi',
					url: function () {
						return '/system-service/timezoneUnits';
					},
					initialize: function () {},
					comparator: function (e, t) {
						var i = e.get('gmtOffset'),
							n = t.get('gmtOffset');
						return i > n ? 1 : i < n ? -1 : 0;
					},
					getByKey: function (e) {
						return this.find(function (t) {
							return t.get('unitKey') === e;
						});
					},
				}))([]);
			},
			938915: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => r, b: () => s });
				var n = i(816061),
					a = i(355254);
				const s = 12,
					r = a.A.extend({
						model: n.A,
						backend: 'gcapi',
						baseUrl: function () {
							return '' === this.displayName
								? '/connection-service/connection/connections/pagination'
								: `/connection-service/connection/connections/pagination/${this.displayName}`;
						},
						initialize: function (e, t) {
							if ('undefined' === typeof t.displayName)
								throw 'Invalid profile display name in UserConnection.';
							(this.limit = t.limit || 24),
								(this.verb = t.verb || 'GET'),
								(this.displayName = t.displayName),
								(this.connectionCount = t.connectionCount),
								(this.displayMutedStatus = t.displayMutedStatus || false),
								this.initializePagedCollection({
									verb: this.verb,
									limit: this.limit,
									appendMode: t.appendMode || !1,
									totalLengthUpperBound: this.connectionCount
										? this.connectionCount.value
										: void 0,
								});
						},
						findConnection: function (e) {
							return this.find(function (t) {
								return t.get('displayName') === e;
							});
						},
						parse: function (e) {
							return (this.fullName = e.fullName), e.userConnections;
						},
					});
			},
			599301: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => r });
				var n,
					a = i(938915),
					s = i(960474);
				'undefined' == typeof n &&
					s.A.get('displayName') &&
					(n = new a.A([], { displayName: s.A.get('displayName') }));
				const r = n;
			},
			498002: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => s });
				i(595695), i(893855);
				var n = i(430836),
					a = i(397803);
				const s = i(355254).A.extend({
					model: function (e, t) {
						return (t &&
							t.collection &&
							'VIVOKID_ADHOC_CHALLENGE' === t.collection.resourceType) ||
							'VIVOKID_TEAM_CHALLENGE' === t.collection.resourceType
							? new a.A(e, t)
							: new n.A(e, t);
					},
					comparator: 'createDate',
					url: function () {
						var e = '/conversation-service/conversation/comments/';
						return this.userGroupPk
							? e +
									this.userGroupPk +
									'/' +
									this.resourceType +
									'/' +
									this.resourceId +
									'?start=' +
									this.startIndex +
									'&limit=' +
									this.limit
							: (('VIVOKID_ADHOC_CHALLENGE' !== this.resourceType &&
									'VIVOKID_TEAM_CHALLENGE' !== this.resourceType) ||
									(e = '/vivokidchallenge-service/conversation/comments/'),
								e +
									this.resourceType +
									'/' +
									this.resourceId +
									'?start=' +
									this.startIndex +
									'&limit=' +
									this.limit);
					},
					backend: 'gcapi',
					initialize: function (e, t) {
						(t.verb = 'GET'),
							this.initializePagedCollection(t),
							(this.resourceType = t.resourceType),
							(this.resourceId = t.resourceId),
							(this.userGroupPk = t.userGroupPk);
					},
				});
			},
			134094: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => r });
				var n = i(893855),
					a = i.n(n),
					s = i(41922);
				const r = a().Collection.extend({
					model: s.A,
					url: function () {
						return 'undefined' == typeof this.userGroupPk ||
							null == this.userGroupPk
							? '/conversation-service/conversation/likes/' +
									this.resourceType +
									'/' +
									this.resourceId
							: '/conversation-service/conversation/likes/' +
									this.userGroupPk +
									'/' +
									this.resourceType +
									'/' +
									this.resourceId;
					},
					backend: 'gcapi',
					initialize: function (e, t) {
						(this.resourceType = t.resourceType),
							(this.resourceId = t.resourceId),
							(this.userGroupPk = t.userGroupPk);
					},
				});
			},
			254523: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(595695);
				const l = r().Model.extend({
					initialize: function (e) {
						(this.isDirty = !1),
							this.bind('change', this.onChange, this),
							this.bind('sync', this.onSync, this);
					},
					backup: function () {
						this.backupAttributes = o.clone(this.attributes);
					},
					restore: function () {
						this.backupAttributes &&
							(this.set(this.backupAttributes), (this.isDirty = !1));
					},
					onSync: function () {
						(this.isDirty = !1), this.backup();
					},
					onChange: function () {
						this.isDirty = !0;
					},
				});
				var c = r().Collection.extend({
					model: l,
					url: function () {
						var e = '/device-service/deviceregistration/devices';
						return (
							a().isUndefined(this.displayName) ||
								(e += '/all/' + this.displayName),
							e
						);
					},
					backend: 'gcapi',
					parse: function (e) {
						return null != e && (c.cache = e), c.cache;
					},
					fetch: function (e) {
						var t = !0;
						if (
							(e && 'undefined' != typeof e.useCache && (t = e.useCache),
							void 0 == c.cache || !t)
						)
							return r().Collection.prototype.fetch.call(this, e);
						this.add(c.cache), e.success();
					},
					filter: function (e, t) {
						if ('function' === typeof e) {
							for (var i = [], n = 0; n < this.models.length; n++)
								e(this.models[n]) && i.push(this.models[n]);
							this.reset(i, { silent: t });
						}
					},
					hasDeviceWithCapability: function (e) {
						return (
							void 0 !==
							this.find(function (t) {
								return t.get(e);
							})
						);
					},
					getDevicesWithCapability: function (e) {
						for (var t = [], i = 0, n = this.length; i < n; i++)
							this.models[i].get(e) && t.push(this.models[i]);
						return t;
					},
					getPrimaryWearableDevice: function () {
						let e = this.models.filter((e) =>
							e.get('primaryActivityTrackerIndicator')
						);
						return e && e.length > 0 ? e[0] : null;
					},
					initialize: function (e, t) {
						(this.cache = null),
							t && (this.displayName = t.displayName || null);
					},
				});
				const d = c;
			},
			615055: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => r });
				var n = i(893855),
					a = i.n(n),
					s = i(445935);
				const r = a().Collection.extend({
					model: s.A,
					comparator: function (e, t) {
						return e
							.get('displayName')
							.toLowerCase()
							.localeCompare(t.get('displayName').toLowerCase());
					},
					url: function () {
						return (
							'/device-service/deviceservice/device-info/all/' +
							this.getDisplayName()
						);
					},
					backend: 'gcapi',
					initialize: function (e) {
						(e = e || {}), (this.displayName = e.displayName);
					},
					setDisplayName: function (e) {
						this.displayName = e;
					},
					getDisplayName: function () {
						return this.displayName;
					},
					userOnlyHasWeightScale: function () {
						if (this.length > 0) {
							for (var e = 0, t = this.length; e < t; e += 1)
								if ('indexSmartScale' !== this.models[e].get('applicationKey'))
									return !1;
							return !0;
						}
						return !1;
					},
					getActivityTrackers: function () {
						return this.models.filter(function (e) {
							return (
								!(!e.get('wellness') && !e.get('hybrid')) &&
								!e.isInUseByAnotherUser()
							);
						});
					},
				});
			},
			931251: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => r });
				var n = i(893855),
					a = i.n(n),
					s = i(991365);
				const r = a().Collection.extend({
					model: s.A,
					backend: 'gcapi',
					url: function () {
						return '/device-service/devicemessage/messages';
					},
					parse: function (e) {
						for (var t = {}, i = 0; i < e.messages.length; i++)
							'software-update' === e.messages[i].messageType &&
								(null == t[e.messages[i].deviceId] &&
									(t[e.messages[i].deviceId] = 0),
								t[e.messages[i].deviceId]++);
						for (i = 0; i < e.messages.length; i++)
							'software-update' === e.messages[i].messageType
								? (t[e.messages[i].deviceId] >= 1 &&
										(e.messages[i].metaData.groupName =
											'zzzzz-software-update'),
									(e.messages[i].metaData.priority = 9999),
									(e.messages[i].softwareUpdateCount =
										t[e.messages[i].deviceId]))
								: ((e.messages[i].messageName =
										e.messages[i].metaData.messageName),
									(e.messages[i].messageUrl =
										e.messages[i].metaData.messageUrl)),
								(e.messages[i].groupName =
									'' === e.messages[i].metaData.groupName
										? null
										: e.messages[i].metaData.groupName),
								(e.messages[i].priority = e.messages[i].metaData.priority),
								delete e.messages[i].metaData.deviceName,
								delete e.messages[i].metaData.groupName,
								delete e.messages[i].metaData.priority;
						return e.messages;
					},
					removeGroup: function (e, t, i) {
						var n = this,
							s = {
								url: this.url() + '/' + e + '/' + t,
								success: function () {
									n.fetch({
										success: function () {
											i.hasOwnProperty('success') && i.success();
										},
									});
								},
								error: function (e) {
									i.hasOwnProperty('error') && i.error(e);
								},
							};
						a().sync('delete', this, s);
					},
					sendAll: function (e) {
						var t = this,
							i = {
								url: this.url(),
								contentType: 'application/json; charset=UTF-8',
								data: JSON.stringify(this),
								success: function () {
									t.trigger('sendAll', {
										numberSent: t.length,
										success: !0,
										extra: e,
									});
								},
								error: function (e) {
									t.trigger('sendAll', { numberSent: 0, success: !1, xHR: e });
								},
							};
						a().sync('create', this, i);
					},
					sendEach: function () {
						this.startTime = new Date().getTime();
						for (var e = 1, t = this, i = 0; i < this.length; i++) {
							var n = this.models[i];
							n.save(n.attributes, {
								success: function () {
									t.length > 0 &&
										e >= t.length &&
										(console.log(
											'sendEach - Completed in ' +
												(new Date().getTime() - t.startTime) +
												' ms.'
										),
										t.trigger('sendEach', e)),
										e++;
								},
								error: function () {
									t.length > 0 &&
										e >= t.length &&
										(console.log(
											'sendEach - Completed in ' +
												(new Date().getTime() - t.startTime) +
												' ms.'
										),
										t.trigger('sendEach', e)),
										e++;
								},
							});
						}
					},
					initialize: function () {},
				});
			},
			374607: (e, t, i) => {
				'use strict';
				i.d(t, { Bu: () => l, Or: () => o, Ay: () => d });
				var n = i(893855),
					a = i.n(n);
				const s = a().Model.extend({
					initialize: function (e) {},
					comparator: function (e) {
						return e.get('key');
					},
					urlRoot: '/personalrecord-service/personalrecordtype',
					backend: 'gcapi',
				});
				var r = i(586797);
				const o = {
						RUN_1K: 'pr.label.1k.run',
						RUN_5K: 'pr.label.5k.run',
						RUN_10K: 'pr.label.10k.run',
						RUN_HALF_MARATHON: 'pr.label.half.marathon',
						RUN_MARATHON: 'pr.label.full.marathon',
						RUN_FARTHEST: 'pr.label.farthest.run',
						RUN_1Mile: 'pr.label.1mile.run',
						CYCLE_FARTHEST: 'pr.label.farthest.cycle',
						CYCLE_MAX_ELEV: 'pr.label.max.elev',
						CYCLE_MAX_POWER: 'pr.label.max.power',
						CYCLE_40K: 'pr.label.40k.cycle',
						STEPS_BEST_DAY: 'pr.label.steps.best.day',
						STEPS_BEST_WEEK: 'pr.label.steps.best.week',
						STEPS_BEST_MONTH: 'pr.label.steps.best.month',
						STEPS_LONGEST_STREAK: 'pr.label.steps.longest.streak',
						STEPS_CURRENT_STREAK: 'pr.label.steps.current.streak',
						SWIM_LONGEST: 'pr.label.longest.poolswim',
						SWIM_100M: 'pr.label.100m.poolswim',
						SWIM_400M: 'pr.label.400m.poolswim',
						SWIM_750M: 'pr.label.750m.poolswim',
						SWIM_1000M: 'pr.label.1000m.poolswim',
						SWIM_1500M: 'pr.label.1500m.poolswim',
						SWIM_100YD: 'pr.label.100yd.poolswim',
						SWIM_500YD: 'pr.label.500yd.poolswim',
						SWIM_1000YD: 'pr.label.1000yd.poolswim',
						SWIM_1650YD: 'pr.label.1650yd.poolswim',
						STRENGTH_TRAINING_BARBELL_BENCH_PRESS:
							'pr.label.max.rep.weight.bench_press',
						STRENGTH_TRAINING_BARBELL_OVERHEAD_PRESS:
							'pr.label.max.rep.weight.overhead_press',
						STRENGTH_TRAINING_BARBELL_BACK_SQUAT:
							'pr.label.max.rep.weight.squat',
						STRENGTH_TRAINING_BARBELL_DEADLIFT:
							'pr.label.max.rep.weight.deadlift',
						STRENGTH_TRAINING_BARBELL_ROW: 'pr.label.max.rep.weight.row',
						PUSHES_BEST_DAY: 'pr.label.pushes.best.day',
						PUSHES_BEST_WEEK: 'pr.label.pushes.best.week',
						PUSHES_BEST_MONTH: 'pr.label.pushes.best.month',
						PUSHES_LONGEST_STREAK: 'pr.label.pushes.longest.streak',
						PUSHES_CURRENT_STREAK: 'pr.label.pushes.current.streak',
						WHEELCHAIR_RUN_1K: 'pr.label.1k.wheelchair.run',
						WHEELCHAIR_RUN_5K: 'pr.label.5k.wheelchair.run',
						WHEELCHAIR_RUN_10K: 'pr.label.10k.wheelchair.run',
						WHEELCHAIR_RUN_HALF_MARATHON:
							'pr.label.half.marathon.wheelchair.run',
						WHEELCHAIR_RUN_MARATHON: 'pr.label.full.marathon.wheelchair.run',
						WHEELCHAIR_RUN_FARTHEST: 'pr.label.longest.wheelchair.push',
						WHEELCHAIR_RUN_1Mile: 'pr.label.1mile.wheelchair.run',
					},
					l = function (e) {
						var t = 99;
						switch (e) {
							case o.RUN_1K:
								t = 0;
								break;
							case o.RUN_1Mile:
								t = 1;
								break;
							case o.RUN_5K:
								t = 2;
								break;
							case o.RUN_10K:
								t = 3;
								break;
							case o.RUN_HALF_MARATHON:
								t = 4;
								break;
							case o.RUN_MARATHON:
								t = 5;
								break;
							case o.RUN_FARTHEST:
								t = 6;
								break;
							case o.CYCLE_40K:
								t = 10;
								break;
							case o.CYCLE_MAX_ELEV:
								t = 11;
								break;
							case o.CYCLE_MAX_POWER:
								t = 12;
								break;
							case o.CYCLE_FARTHEST:
								t = 13;
								break;
							case o.STEPS_BEST_DAY:
								t = 14;
								break;
							case o.STEPS_BEST_WEEK:
								t = 15;
								break;
							case o.STEPS_BEST_MONTH:
								t = 16;
								break;
							case o.STEPS_LONGEST_STREAK:
								t = 17;
								break;
							case o.STEPS_CURRENT_STREAK:
								t = 18;
								break;
							case o.SWIM_100M:
								t = 20;
								break;
							case o.SWIM_100YD:
								t = 21;
								break;
							case o.SWIM_400M:
								t = 22;
								break;
							case o.SWIM_500YD:
								t = 23;
								break;
							case o.SWIM_750M:
								t = 24;
								break;
							case o.SWIM_1000M:
								t = 25;
								break;
							case o.SWIM_1000YD:
								t = 26;
								break;
							case o.SWIM_1500M:
								t = 27;
								break;
							case o.SWIM_1650YD:
								t = 28;
								break;
							case o.SWIM_LONGEST:
								t = 29;
								break;
							case o.STRENGTH_TRAINING_BARBELL_BACK_SQUAT:
								t = 30;
								break;
							case o.STRENGTH_TRAINING_BARBELL_BENCH_PRESS:
								t = 31;
								break;
							case o.STRENGTH_TRAINING_BARBELL_DEADLIFT:
								t = 32;
								break;
							case o.STRENGTH_TRAINING_BARBELL_ROW:
								t = 33;
								break;
							case o.STRENGTH_TRAINING_BARBELL_OVERHEAD_PRESS:
								t = 34;
						}
						return t;
					};
				var c = a().Collection.extend({
					model: s,
					url: function () {
						return (
							'/personalrecord-service/personalrecordtype/prtypes/' +
							(this.displayName || '')
						);
					},
					backend: 'gcapi',
					initialize: function (e, t) {
						this.displayName = t.displayName;
					},
					parse: function (e) {
						if (!e) return [];
						return Object.keys(r.G8)
							.map((t) => (0, r.Ow)(t, e))
							.flat();
					},
					comparator: function (e, t) {
						var i = l(e.get('key')),
							n = l(t.get('key'));
						return i < n ? -1 : i > n ? 1 : 0;
					},
					hasWalkingPRTypes: function () {
						return !!this.find((e) => 'WALKING' === e.get('sport'));
					},
				});
				(c.Types = o), (c.GetSortOrder = l);
				const d = c;
			},
			879739: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				var n = i(893855),
					a = i.n(n),
					s = i(109285),
					r = i.n(s),
					o = i(422460),
					l = i(558243);
				const c = l.A.extend({
					backend: 'gcapi',
					parse(e) {
						return (
							e &&
								e.originalDueDate &&
								(this.originalDueDate = e.originalDueDate),
							e
						);
					},
					url() {
						return (
							'/periodichealth-service/menstrualcycle/pregnancysnapshot' +
							(this.originalDueDate ? '/' + this.originalDueDate : '')
						);
					},
					setOriginalDueDate(e) {
						this.originalDueDate = e;
					},
					isNew: () => !1,
					setTitle(e) {
						this.set('title', e);
					},
					getTitle() {
						return this.get('title');
					},
					setDueDate(e) {
						this.set('dueDate', r()(e).format(o.Ay.LINK_FORMAT));
					},
					getDueDate() {
						return this.get('dueDate');
					},
					getPregnancyStart() {
						return this.get('pregnancyCycleStart');
					},
					setDeliveryDate(e) {
						this.set('deliveryDate', r()(e).format(o.Ay.LINK_FORMAT));
					},
					setDeliveryDate() {
						return this.get('deliveryDate');
					},
					setNumberOfBabies(e) {
						this.set('numOfBabies', e);
					},
					getNumberOfBabies() {
						return this.get('numOfBabies');
					},
					setPrePregnancyWeight(e) {
						this.set('prePregnancyWeight', e);
					},
					getPrePregnancyWeight() {
						return this.get('prePregnancyWeight');
					},
					setTerminated(e) {
						this.set('terminated', e);
					},
					getTerminated() {
						return this.get('terminated');
					},
					setEndDate(e) {
						this.set('endDate', r()(e).format(o.Ay.LINK_FORMAT)),
							this.set('terminationReportTimestamp', r()().utc(e).format());
					},
					getEndDate() {
						return this.get('endDate');
					},
					setStopTracking(e) {
						this.set('stopTracking', e),
							this.set('stopTrackingTimestamp', r()().utc(new Date()).format());
					},
					getStopTracking() {
						return this.get('stopTracking');
					},
					setNotes(e) {
						this.set('notes', e);
					},
					getNotes() {
						return this.get('notes');
					},
					setWeightGoalUserInputs(e, t = 0, i = 0) {
						let n = this.get('weightGoalUserInputs');
						'undefined' === typeof n &&
							((n = {}), this.set('weightGoalUserInputs', n)),
							(n.weightGoalRecommendation = e),
							(n.reportTimestamp = o.Ay.formatConnectTimestampUTC(
								r()().toDate()
							)),
							e && ((n.heightInCm = i), (n.weightInGram = t)),
							this.set('weightGoalUserInputs', n);
					},
					getWeightGoalUserInputs() {
						return this.get('weightGoalUserInputs');
					},
					save(e, t) {
						this.set(
							'reportTimestamp',
							o.Ay.formatConnectTimestampUTC(r()().toDate())
						),
							l.A.prototype.save.call(this, e, t);
					},
				});
				const d = a().Collection.extend({
					model: c,
					backend: 'gcapi',
					url: () =>
						'/periodichealth-service/menstrualcycle/pregnancysnapshot/all',
					comparator: (e) => -r()(e.get('dueDate'), o.Ay.LINK_FORMAT).unix(),
					filterPastPregnancies() {
						return new (a().Collection)(
							this.filter(
								(e) =>
									null !== e.get('deliveryDate') || null !== e.get('endDate')
							)
						);
					},
					getActivePregnancy() {
						let e = this.filter(
								(e) =>
									null === e.get('deliveryDate') && null === e.get('endDate')
							),
							t = null;
						return (
							e.length > 0 &&
								((t = e[0]),
								t.setOriginalDueDate(e[0].get('originalDueDate')),
								(t.isReady = !0)),
							t
						);
					},
				});
			},
			355254: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(87786),
					l = { ON_MORE_MEMBERS_FETCHED: 'ON_MORE_MEMBERS_FETCHED' },
					c = r().Collection.extend({
						baseUrl: null,
						url: function () {
							let e = this.getBaseUrl();
							const t = {};
							return (
								'POST' !== this.verb &&
									(this.keyword && (t.keyword = this.keyword),
									'number' === typeof this.startIndex &&
										(t.start = this.startIndex),
									'number' === typeof this.limit && (t.limit = this.limit),
									'boolean' === typeof this.displayMutedStatus &&
										(t.displayMutedStatus = this.displayMutedStatus)),
								`${e}${(0, o.zJ)(t)}`
							);
						},
						getBaseUrl: function () {
							return a().isFunction(this.baseUrl)
								? this.baseUrl()
								: this.baseUrl;
						},
						initializePagedCollection: function (e) {
							(this.varHasMoreMembers = !0),
								(this.sizeBeforeLastFetch = 0),
								(this.totalLength = 0),
								(this.appendMode = !0),
								e &&
									((this.keyword = e.keyword),
									(this.startIndex = e.startIndex),
									(this.limit = e.limit),
									(this.shouldSort = e.sort),
									(this.totalLengthUpperBound = e.totalLengthUpperBound)),
								e.hasOwnProperty('appendMode') &&
									(this.appendMode = e.appendMode),
								'undefined' === typeof this.startIndex && (this.startIndex = 1),
								(this.initialStartIndex = this.startIndex),
								(this.verb = e.verb),
								this.verb || (this.verb = 'POST'),
								a().isBoolean(this.shouldSort) || (this.shouldSort = !0);
						},
						fetchNext: function (e) {
							var t = null;
							if (
								((e = e || {}).success && (t = e.success),
								this.appendMode && ((e.add = !0), (e.remove = !1)),
								(e.type = this.verb),
								(e.sort = this.shouldSort),
								'POST' === this.verb)
							) {
								var i = {};
								(i.start = this.startIndex),
									(i.limit = this.limit),
									(i.keyword = this.keyword),
									(e.data = i),
									(e.contentType =
										'application/x-www-form-urlencoded; charset=UTF-8');
							}
							var n = this;
							(e.success = function (e, i, a) {
								n.onFetchSuccess(e, i, a), t && t.call(n, e, i, a);
							}),
								this.hasMoreMembers() &&
									r().Collection.prototype.fetch.call(this, e);
						},
						fetch: function (e) {
							this.fetchNext(e);
						},
						onFetchSuccess: function (e, t, i) {
							this.appendMode
								? ((this.startIndex = this.length + this.initialStartIndex),
									(this.totalLength = this.length))
								: ((this.startIndex += this.length),
									(this.totalLength += this.length)),
								this.checkIfHasMoreMembers(),
								(this.sizeBeforeLastFetch = this.totalLength),
								this.trigger(l.ON_MORE_MEMBERS_FETCHED);
						},
						checkIfHasMoreMembers: function () {
							(a().isUndefined(this.limit) ||
								('undefined' !== typeof this.totalLengthUpperBound &&
									this.totalLengthUpperBound === this.totalLength) ||
								this.totalLength < this.limit ||
								this.totalLength === this.sizeBeforeLastFetch ||
								this.totalLength % this.limit !== 0) &&
								(this.varHasMoreMembers = !1);
						},
						hasMoreMembers: function () {
							return this.varHasMoreMembers;
						},
					});
				c.Events = l;
				const d = c;
			},
			101101: (e, t, i) => {
				'use strict';
				var n = i(998813),
					a = i.n(n),
					s = i(557369),
					r = i(34581),
					o = i(517023),
					l = i(787006);
				a().ajaxSetup({
					headers: {
						NK: 'NT',
						'X-app-ver': window.URL_BUST_VALUE,
						'X-lang': r.A.getFullLocale(),
					},
				}),
					a()(document).ajaxError(function (e, t, i) {
						401 !== t.status
							? (i.url.startsWith('/userpreference-service') && (0, l.aO)()) ||
								(403 === t.status &&
									(0, l.aO)() &&
									o.A.display({
										ns: 'settings',
										transKey: 'read_only_mode_alert_2',
									}))
							: s.A.signOut();
					});
			},
			952112: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => n });
				const n = {
					ACTIVITY_ADDED: 'ACTIVITY_ADDED',
					ACTIVITY_CHANGED: 'ACTIVITY_CHANGED',
					MYFITNESSPAL_SETUP_COMPLETE: 'MYFITNESSPAL_SETUP_COMPLETE',
					ACTIVE_ACTIVITY_TRACKER_CHANGED: 'ACTIVE_ACTIVITY_TRACKER_CHANGED',
					SLEEP_WINDOW_CHANGED: 'SLEEP_WINDOW_CHANGED',
					SEGMENT_OPTED_IN_CHANGED: 'SEGMENT_OPTED_IN_CHANGED',
					FTP_WEIGHT_CHANGED: 'FTP_WEIGHT_CHANGED',
					PAGE_LOADED: 'PAGE_LOADED',
				};
			},
			951298: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => n });
				const n = {
					googleUrl: '//maps.googleapis.com/maps/api/js?sensor=true',
					baiduUrl:
						'https://sapi.map.baidu.com/api?v=2.0&ak=KQMz9KcIzBwWNUgbHWUHZGSD&s=1&callback=initializeBaidu',
					baiduKey: 'KQMz9KcIzBwWNUgbHWUHZGSD',
				};
			},
			548413: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => l });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s);
				const o = a().clone(r().Events);
				o.Events = { ENABLE: 'ENABLE' };
				const l = o;
			},
			421285: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						url: function () {
							return (
								'/adhocchallenge-service/adHocChallenge/invite/' +
								this.inviteId +
								'/' +
								this.scope
							);
						},
						backend: 'gcapi',
						initialize: function (e, t) {
							(this.inviteId = e.inviteId),
								(this.scope = e.scope),
								(this.options = t);
						},
					});
			},
			321355: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => r });
				var n = i(893855),
					a = i.n(n),
					s = i(787006);
				const r = a().Model.extend({
					idAttribute: 'linkStatus',
					backend: 'gcapi',
					url: function () {
						let e = '/myfitnesspal-service/userAuthorization';
						return (
							(0, s.aO)() && (e = '/myfitnesspal-service/accountInformation'), e
						);
					},
				});
			},
			558243: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s);
				const o = r().Model.extend({
					isReady: !1,
					isChanged: !1,
					constructor: function (e) {
						this.on(
							'sync',
							function () {
								this.isReady = !0;
							}.bind(this)
						),
							r().Model.apply(this, arguments);
					},
					save: function (e, t) {
						if (this.isChanged)
							return (
								(this.isChanged = !1), r().Model.prototype.save.call(this, e, t)
							);
					},
					set: function (e, t) {
						return (
							!this.isReady ||
								a().isEmpty(e) ||
								(t && t.xhr) ||
								(this.isChanged = !0),
							r().Model.prototype.set.call(this, e, t)
						);
					},
					hasChanges() {
						return this.isChanged;
					},
				});
			},
			816061: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({ initialize: function (e) {} });
			},
			430836: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						urlRoot: function () {
							return (
								'/conversation-service/conversation/comment/' +
								this.get('conversationUuid') +
								'/' +
								this.get('conversationCommentUuid')
							);
						},
						backend: 'gcapi',
						idAttribute: 'conversationCommentPk',
					});
			},
			48443: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						urlRoot: function () {
							return (
								'/conversation-service/conversation/comment/like/' +
								this.conversationCommentUuid
							);
						},
						backend: 'gcapi',
						idAttribute: 'conversationCommentLikePk',
						initialize: function (e) {
							this.conversationCommentUuid = e.conversationCommentUuid;
						},
					});
			},
			285282: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						model: void 0,
						defaults: {
							numberOfLikes: 0,
							numberOfComments: 0,
							likedByUser: !1,
						},
						idAttribute: 'conversationUuid',
						backend: 'gcapi',
						url: function () {
							return 'VIVOKID_ADHOC_CHALLENGE' === this.resourceType ||
								'VIVOKID_TEAM_CHALLENGE' === this.resourceType
								? '/vivokidchallenge-service/conversation/' +
										this.resourceType +
										'/' +
										this.resourceId
								: this.userGroupPk
									? '/conversation-service/conversation/' +
										this.userGroupPk +
										'/' +
										this.resourceType +
										'/' +
										this.resourceId
									: '/conversation-service/conversation/' +
										this.resourceType +
										'/' +
										this.resourceId;
						},
						initialize: function (e) {
							(this.resourceType = e.resourceType),
								(this.resourceId = e.resourceId),
								(this.userGroupPk = e.userGroupPk);
						},
					});
			},
			41922: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						urlRoot: function () {
							return (
								'/conversation-service/conversation/like/' +
								this.conversationUuid
							);
						},
						backend: 'gcapi',
						idAttribute: 'conversationLikePk',
						initialize: function (e) {
							this.conversationUuid = e.conversationUuid;
						},
					});
			},
			397803: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => s });
				var n = i(893855),
					a = i.n(n);
				const s = a().Model.extend({
					idAttribute: 'conversationCommentPk',
					backend: 'gcapi',
					url: function () {
						return (
							'/vivokidchallenge-service/conversation/comment/' +
							this.get('conversationUuid') +
							'/' +
							this.get('conversationCommentUuid')
						);
					},
					sync: function (e, t, i) {
						'delete' === e &&
							((i.data = JSON.stringify(this.attributes)),
							(i.contentType = 'application/json')),
							a().sync.call(this, e, t, i);
					},
				});
			},
			53950: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						getLatitude: function () {
							return this.get('latitude');
						},
						getLongitude: function () {
							return this.get('longitude');
						},
						setLatitude: function (e) {
							return this.set('latitude', e), this;
						},
						setLongitude: function (e) {
							return this.set('longitude', e), this;
						},
					});
			},
			445935: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => r });
				var n = i(893855),
					a = i.n(n),
					s = i(235386);
				const r = a().Model.extend({
					backend: 'gcapi',
					urlRoot: '/device-service/deviceservice/device-info/',
					idAttribute: 'deviceId',
					save: function (e, t, i) {
						return (
							this.hasChanged('viewed')
								? (this.urlRoot =
										'/device-service/deviceservice/device-info/device')
								: (this.urlRoot = '/device-service/deviceservice/device-info/'),
							a().Model.prototype.save.call(this, e, t, i)
						);
					},
					isVivoki: function () {
						return 'vivoki' == this.get('applicationKey');
					},
					isInUseByAnotherUser: function () {
						return (
							this.get('otherAssociation') &&
							this.get('activeInd') !== s.A.ACTIVE
						);
					},
					hasExpressConnection() {
						return 'HRMDualAdvanced' !== this.get('applicationKey');
					},
				});
			},
			396993: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => s });
				var n = i(893855),
					a = i.n(n);
				const s = a().Model.extend({
					emulateHTTP: !1,
					idAttribute: 'deviceInviteId',
					backend: 'gcapi',
					url: function () {
						let e = '/invite-service/invite';
						return this.deviceInviteId && (e += '/' + this.deviceInviteId), e;
					},
					initialize: function (e) {
						(this.deviceInviteId = e.deviceInviteId),
							(this.deviceId = e.deviceId),
							(this.inviteDeviceDTO = e.inviteDeviceDTO);
					},
					sync: function (e, t, i) {
						this.inviteDeviceDTO &&
							((i.url = this.url()),
							(i.type = 'POST'),
							(i.data = JSON.stringify(this.inviteDeviceDTO)),
							(i.contentType = 'application/json')),
							null === this.get('inviteeEmail') && this.unset('inviteeEmail'),
							this.get('productPartNumber') &&
								!this.inviteDeviceDTO &&
								this.unset('productPartNumber'),
							a().sync.call(this, e, t, i);
					},
				});
			},
			704995: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => l });
				var n = i(595695),
					a = i.n(n),
					s = (i(318383), i(893855)),
					r = i.n(s),
					o = i(998813);
				const l = r().Model.extend({
					required: null,
					isReady: !1,
					changedProps: null,
					constructor: function (e) {
						this._reset(),
							this.on(
								'sync',
								function () {
									this.isReady = !0;
								}.bind(this)
							),
							r().Model.apply(this, arguments);
					},
					setRequired: function (e) {
						this.required = e;
					},
					set: function (e, t) {
						if (this.isReady)
							if ('object' === typeof e) {
								for (var i in (o.extend(!0, this.changedProps, e), e))
									e.hasOwnProperty(i) &&
										a().isArray(e[i]) &&
										(this.changedProps[i] = e[i]);
								this._mergeChanges(e);
							} else this.changedProps[e] = t;
						return r().Model.prototype.set.call(this, e, t);
					},
					save: function (e, t = {}) {
						if (!this.hasChangedProps()) return !0;
						let i = o.extend(!0, {}, this.changedProps, this.required),
							n = { ...t } || {};
						(n.attributes = i),
							(n.attrs = i),
							(n.emulateHTTP = !1),
							(n.success = (e, i, n) => {
								'function' === typeof t.success && t.success(e, i, n),
									this._updateModel(e),
									this.trigger('sync', this, e),
									this._reset();
							}),
							this.sync('update', this, n);
					},
					hasChangedProps: function () {
						return !a().isEmpty(this.changedProps);
					},
					_reset: function () {
						this.changedProps = {};
					},
					_updateModel: function (e) {
						if (e)
							for (var t in this.changedProps)
								this.changedProps.hasOwnProperty(t) &&
									(this.attributes[t] = e[t]);
					},
					_mergeChanges: function (e) {
						var t = o.extend(!0, {}, this.attributes, e);
						for (var i in e)
							e.hasOwnProperty(i) && !a().isArray(e[i]) && (e[i] = t[i]);
					},
				});
			},
			386799: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						url: '/web-gateway/device-info/primary-training-device',
						backend: 'gcapi',
						getPrimaryTrainingDevice: function () {
							return this.has('PrimaryTrainingDevice')
								? this.get('PrimaryTrainingDevice').deviceId
								: null;
						},
						getPrimaryWearableDevice: function () {
							var e;
							const t =
								null === (e = this.get('WearableDevices')) || void 0 === e
									? void 0
									: e.deviceWeights;
							if ((null === t || void 0 === t ? void 0 : t.length) > 0) {
								const e = t.find((e) =>
									null === e || void 0 === e ? void 0 : e.primaryWearableDevice
								);
								return (
									(null === e || void 0 === e ? void 0 : e.deviceId) || null
								);
							}
							return null;
						},
						getRegisteredDevices: function () {
							return this.get('RegisteredDevices');
						},
						getWearableDevices: function () {
							var e;
							return null === (e = this.get('WearableDevices')) || void 0 === e
								? void 0
								: e.deviceWeights;
						},
						getPrimaryTrainingDevices: function () {
							var e;
							return null === (e = this.get('PrimaryTrainingDevices')) ||
								void 0 === e
								? void 0
								: e.deviceWeights;
						},
						getShowDevicePriority: function () {
							var e, t;
							return (
								(null === (e = this.getPrimaryTrainingDevices()) || void 0 === e
									? void 0
									: e.length) > 1 ||
								(null === (t = this.getWearableDevices()) || void 0 === t
									? void 0
									: t.length) > 1
							);
						},
						getPrimaryTrainingDeviceInfo: function () {
							let e = this.getPrimaryTrainingDevice();
							return (
								this.get('PrimaryTrainingDevices') &&
								this.get('PrimaryTrainingDevices').deviceWeights.find(
									(t) => t.deviceId === e
								)
							);
						},
						getFullDeviceInfo: function (e) {
							if (!e) return null;
							let t = this.get('RegisteredDevices');
							const i = t.length ? t.find((t) => t.deviceId === e) : null;
							return i || null;
						},
						getPrimaryWearableDeviceInfo: function () {
							let e = this.get('RegisteredDevices');
							const t = e.length
								? e.find((e) => e.primaryActivityTrackerIndicator)
								: null;
							return t || null;
						},
					});
			},
			991365: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						backend: 'gcapi',
						urlRoot: '/device-service/devicemessage/message',
						idAttribute: 'messageId',
					});
			},
			150956: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						urlRoot: '/device-service/deviceservice/user-device/',
						backend: 'gcapi',
						idAttribute: 'deviceId',
						isVivoki: function () {
							return 'vivoki' == this.get('applicationKey');
						},
					});
			},
			748984: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						backend: 'gcapi',
						urlRoot: '/wellness-service/wellness/deviceInfo/',
						idAttribute: 'deviceId',
					});
			},
			826906: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => s });
				var n = i(638761),
					a = i.n(n);
				class s {
					constructor(e) {
						(this.url = `/it-proxy/accountProcessServices/customerAccounts/${e.garminGuid}/checkPasswordForToken`),
							(this.httpCall = a().create({
								baseURL: '/modern',
								headers: { 'Content-Type': 'text/plain' },
							}));
					}
					verify(e, t, i, n, a) {
						if (
							'function' !== typeof t ||
							'function' !== typeof i ||
							'function' !== typeof n ||
							'function' !== typeof a
						)
							throw 'Success and fail handlers are required, hmm kay?';
						e.length <= 0
							? i()
							: this.httpCall
									.post(this.url, e)
									.then((i) => {
										e.length <= 50 && i.data ? t(i.data) : n();
									})
									.catch((e) => {
										a();
									});
					}
				}
			},
			673220: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						initialize: function (e) {
							(this.consentTypeId = e.consentTypeId),
								(this.locale = 'ar-AR' === e.locale ? 'ar-AE' : e.locale);
						},
						url: function () {
							return (
								'/consentTextServices/consentText?consentTypeId=' +
								this.consentTypeId +
								'&locale=' +
								this.locale
							);
						},
					});
			},
			514504: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => u });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o =
						(i(318383),
						{
							POPULARITY_ROUTING: 'POPULARITY_ROUTING',
							INSIGHTS: 'INSIGHTS',
							UPLOAD: 'UPLOAD',
							STRAVA: 'STRAVA',
							GARMIN_COACH_ATP: 'ADAPTIVE_TRAINING_PLAN',
							MYFITNESSPAL: 'MY_FITNESS_PAL',
							CONNECT_PRIVACY: 'CONNECT-PRIVACY',
							GOLF_PRIVACY: 'GOLF-PRIVACY',
							PRODUCT_IMPROVEMENT_DATA_USAGE: 'PRODUCT_IMPROVEMENT_DATA_USAGE',
						}),
					l = { OPT_IN: 'opt-in', OPT_OUT: 'opt-out' },
					c = '/gdprconsent-service/feature/',
					d = r().Model.extend({
						url: function () {
							return c + this.feature;
						},
						backend: 'gcapi',
						initialize: function (e) {
							if (((this.feature = e.feature), a().isUndefined(this.feature)))
								throw 'feature is required';
							if (!this.containsFeature(this.feature))
								throw 'Unknown feature ' + this.feature;
						},
						save: function (e, t) {
							var i = t || {},
								n =
									((e = e || this.attributes),
									c +
										(this.get('userOption') === l.OPT_IN
											? 'optin/'
											: 'optout/') +
										this.feature);
							(i.url = n),
								(i.type = 'POST'),
								(i.data = e),
								(i.contentType = 'application/json'),
								this.sync('save', this, i);
						},
						containsFeature: function (e) {
							var t = void 0;
							for (var i in o)
								if (o.hasOwnProperty(i)) {
									t = o[i];
									break;
								}
							return !a().isUndefined(t);
						},
					});
				(d.UserOptions = l), (d.Features = o);
				const u = d;
			},
			283135: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						backend: 'gcapi',
						urlRoot: '/gdprconsent-service/consent/grant',
						initialize: function (e) {
							(this.consentTypeId = e.consentTypeId),
								(this.consentLocale = e.consentLocale),
								(this.consentVersion = e.consentVersion);
						},
					});
			},
			774166: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => s });
				var n = i(893855),
					a = i.n(n);
				const s = a().Model.extend({
					url: function () {
						return `/gdprconsent-service/consent/revoke/${this.consentTypeId}/${this.clientIndicator}`;
					},
					backend: 'gcapi',
					initialize: function (e) {
						(this.consentTypeId = e.consentTypeId),
							(this.clientIndicator = e.clientIndicator),
							(this.consentLocale = e.consentLocale),
							(this.consentVersion = e.consentVersion);
					},
					save: function (e = null, t = {}) {
						let i = t || {};
						return (
							t.passwordChallengeToken &&
								(i.headers = {
									passwordChallengeToken: t.passwordChallengeToken,
								}),
							a().Model.prototype.save.call(this, e, i)
						);
					},
				});
			},
			21790: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						idAttribute: 'uuid',
						initialize: function (e) {},
						url: function () {
							var e =
								'/conversation-service/newspost/' +
								this.get('userGroupPk') +
								'/' +
								this.get('newsPostType');
							return 'undefined' != typeof this.id && (e += '/' + this.id), e;
						},
						backend: 'gcapi',
					});
			},
			619448: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						url: '/web-gateway/snapshot/usageIndicators',
						backend: 'gcapi',
						hasIndicator: function (e, t) {
							if ('device' === e) return this.get('deviceBasedIndicators')[t];
							if ('activity' === e) {
								var i = this.get('performanceBasedIndicators')
									.activityIndicators[t];
								return i && null !== i.lastActivityDate;
							}
							return 'wellness' === e
								? this.get('performanceBasedIndicators').wellnessIndicators[t]
								: 'sleep' === e
									? this.get('sleepBasedIndicators')[e]
									: void 0;
						},
						hasHistoricalIndicator: function (e, t) {
							return (
								'device' === e && this.get('historicalDeviceBasedIndicators')[t]
							);
						},
						hasCurrentOrHistoricalIndicator: function (e, t) {
							return (
								'device' === e &&
								((this.get('deviceBasedIndicators') &&
									this.get('deviceBasedIndicators')[t]) ||
									(this.get('historicalDeviceBasedIndicators') &&
										this.get('historicalDeviceBasedIndicators')[t]))
							);
						},
						checkDeviceIndicator: function (e) {
							var t = this.get('deviceBasedIndicators');
							return t && t[e];
						},
					});
			},
			301147: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(408822),
					l = {
						statute_us: 'STATUTE',
						statute_uk: 'STATUTE',
						metric: 'METRIC',
					},
					c = r().Model.extend({
						backend: 'insights',
						url: function () {
							a().isString(this.age) &&
								-1 !== this.age.indexOf('+') &&
								(this.age = this.age.slice(0, this.age.indexOf('+')));
							var e = o.A.getLocale(),
								t =
									'/gcs-insights/api/demographics/compare?gender=' +
									this.gender +
									'&age=' +
									this.age +
									'&type=' +
									this.activityType +
									'&field=' +
									this.activityField +
									'&year=' +
									this.year +
									'&localeUnit=' +
									this.measurementSystem +
									'&lang=' +
									e;
							return this.month && (t += '&month=' + this.month), t;
						},
						initialize: function (e) {
							(e = e || {}),
								(this.gender = e.gender),
								(this.age = e.age),
								(this.activityType = e.activityType),
								(this.activityField = e.activityField),
								(this.year = e.year),
								(this.month = e.month),
								(this.measurementSystem = l[e.measurementSystem]);
						},
					});
				(c.ACTIVITY_TYPES = {
					STEPS: 'STEPS',
					SLEEP: 'SLEEP',
					FLOORS: 'FLOORS',
					RUNNING: 'RUNNING',
					CYCLING: 'CYCLING',
					LAP_SWIMMING: 'LAP_SWIMMING',
					OPEN_WATER_SWIMMING: 'OPEN_WATER_SWIMMING',
				}),
					(c.ACTIVITY_FIELDS = {
						AVG_SPEED: 'AVG_SPEED',
						VO2_MAX_VALUE: 'VO2_MAX_VALUE',
						AVG_POWER: 'AVG_POWER',
						WEEKLY_AVG_DISTANCE: 'WEEKLY_AVG_DISTANCE',
						WEEKLY_AVG_DURATION: 'WEEKLY_AVG_DURATION',
						STEPS: 'STEPS',
						SLEEP: 'SLEEP',
						FLOORS: 'FLOORS',
						COUNT: 'COUNT',
					}),
					(c.UNITS = {
						MINUTES_PER_MILE: 'MINUTES_PER_MILE',
						MINUTES_PER_KILOMETER: 'MINUTES_PER_KILOMETER',
						MILES_PER_HOUR: 'MILES_PER_HOUR',
						KILOMETERS_PER_HOUR: 'KILOMETERS_PER_HOUR',
						MINUTES_PER_100_METERS: 'MINUTES_PER_100_METERS',
						MINUTES_PER_100_YARDS: 'MINUTES_PER_100_YARDS',
						MILE: 'MILE',
						KILOMETER: 'KILOMETER',
						METER: 'METER',
						YARD: 'YARD',
						HOUR: 'HOUR',
						WATT: 'WATT',
						NONE: 'NONE',
					});
				const d = c;
			},
			3406: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						backend: 'gcapi',
						url: '/userpreference-service/demographicComparisonPreferences',
					});
			},
			963633: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => r });
				var n = i(893855),
					a = i.n(n),
					s = i(960474);
				const r = a().Model.extend({
					url: function () {
						return '/modern/preference/' + this.key;
					},
					initialize: function (e) {
						this.key = e.key;
					},
					featureEnabled: function () {
						return (
							s.A.get('userRoles') &&
							s.A.get('userRoles').indexOf(this.get('value')) >= 0
						);
					},
					getFeatureEnabledForMultipleRoles: function () {
						for (
							var e = s.A.get('userRoles'),
								t = this.get('value').split(','),
								i = !1,
								n = 0;
							n < t.length;
							n++
						)
							i = i || e.indexOf(t[n].trim()) >= 0;
						return i;
					},
				});
			},
			728407: (e, t, i) => {
				'use strict';
				i.d(t, {
					A1: () => y,
					A2: () => d,
					Bs: () => F,
					CE: () => k,
					CX: () => a,
					CZ: () => te,
					Cr: () => T,
					E$: () => G,
					EI: () => J,
					EO: () => w,
					Ec: () => I,
					Eh: () => O,
					Ei: () => R,
					Hd: () => W,
					Il: () => ie,
					JA: () => M,
					Kq: () => A,
					Lw: () => ye,
					Lz: () => de,
					Me: () => v,
					NQ: () => S,
					O$: () => g,
					OB: () => B,
					OG: () => b,
					Ob: () => Y,
					PF: () => x,
					Rx: () => s,
					T3: () => D,
					Tn: () => u,
					UP: () => le,
					V6: () => N,
					VT: () => Q,
					WI: () => E,
					Y5: () => p,
					YA: () => m,
					YN: () => ae,
					Z_: () => se,
					aI: () => n,
					be: () => h,
					em: () => oe,
					et: () => r,
					iB: () => H,
					ip: () => l,
					jF: () => c,
					jH: () => Z,
					ks: () => K,
					lN: () => re,
					m8: () => V,
					ni: () => j,
					o0: () => pe,
					pB: () => _,
					pF: () => U,
					pf: () => P,
					qQ: () => $,
					qy: () => ee,
					rY: () => f,
					sc: () => ne,
					sm: () => C,
					tC: () => X,
					uL: () => ce,
					wH: () => q,
					wU: () => L,
					yd: () => z,
					zC: () => o,
					zH: () => ue,
				});
				const n = '50336155-f3c0-45ca-83a3-ccd946d47b81',
					a = '550f5f4d-0951-49b1-9dd9-e591975623b1',
					s = '314bdeb8-3c35-4b0c-a1e0-6bd70da6bf12',
					r = '23d8f1b9-22f5-4e20-be06-0ec58146e024',
					o = '9f195c4e-960e-479d-aa1a-3a882876caa0',
					l = 'c6101e2b-cbe6-40c3-b5c3-d88eea59ee0b',
					c = '5c8d3401-e6e7-4354-9095-39526016a47c',
					d = 'ae84e94c-ddb2-44a2-90c2-4c18608c1a63',
					u = '70af232a-2cfc-4a63-bd57-3227369a3e35',
					p = '389feec7-cd8f-4bb2-bc3a-812f88f6fd32',
					y = 'e10df63d-93c1-4a22-8f04-73f1acc2c5f5',
					h = '90c09388-2dd1-11ec-8d3d-0242ac130003',
					g = 'ec62de0b-46db-4e73-b125-72baf4dc01a2',
					m = '1bb5be4f-1acc-4e28-a9df-d66330ca6d5d',
					A = '1b1d8d03-3854-4d3e-9376-d6dfef1a6a12',
					_ = '4628b41f-dc66-4c73-9322-fd31a2340a92',
					E = '09a1fe2e-a837-404d-9d89-2caf4acff959',
					T = '70a4a706-b45d-44ff-a08c-551c8e14942f',
					C = 'd8cb8c3b-99cb-4713-9eb1-127200d43135',
					S = '48d5f50a-0353-497f-80a0-2ee270c6b96a',
					I = 'd35ccb08-d802-4193-a87d-84551119371e',
					v = 'b7dd4cd0-a0a8-4bc5-a9e9-077256ac46b4',
					f = 'ce34657d-8a85-4b6e-8bb4-00897590c217',
					D = '0f599864-f22d-475a-b7c2-1c41bdd0be33',
					N = 'd3c94498-8962-4a62-bd3a-0d80a08e3386',
					R = '6791bf68-bf91-4b7e-8305-9865d5ff3487',
					b = '5fb1e69c-4ae9-457f-b3bb-d4d1a78a3758',
					L = 'e47e6fe8-a1dc-49ea-bde5-249922659db1',
					P = '549da782-a919-4d5b-8936-01de59a61c84',
					O = 'a2f945a2-b379-11ed-afa1-0242ac120002',
					w = 'fb95748e-eef7-4527-82d6-77e6ed772312',
					F = '3dbe357e-92c7-4832-a05e-e69c3b1788bb',
					k = '7ae52c9a-1967-46e9-952f-3e40e3770bde',
					U = '7db15e81-fbc2-473e-9b5f-a1c26f246c6d',
					M = 'b77a382d-04e3-4ac9-ab5f-28c471f209d8',
					G = '188cb07c-8e97-404e-b324-f12dc382dde1',
					x = 'a5fc873d-ddfa-43ee-b307-f68bf7fd5d2b',
					B = 'cf0de63f-4e02-44eb-bace-d5bf52870536',
					H = 'f9a1be5c-79f3-47ca-b929-e6e27732c409',
					V = '6a39d144-ba4c-4376-8fa2-06d11536b1ae',
					W = 'd962ec3a-9f1b-4689-b9d6-34116c97e387',
					J = '8eb893d7-d62e-4120-89e2-b241d2112806',
					Y = '69f532f6-7049-479e-bb73-cd81e8967565',
					$ = '47d0bfe9-fbb8-4a4f-b2da-88a127573db0',
					j = '9cd940df-a250-4632-8f7e-2866ff88a96c',
					K = '090d70cc-9c97-4601-a60a-34da90790711',
					z = '0d62e4e1-6141-4beb-a171-1e6cd4740ecd',
					q = 'a0f2d5e4-86df-4bba-abe4-43f9ab8fb3bb',
					Q = '5003595f-2057-4211-b800-bb5ba40247d4',
					X = 'fcc01c82-c905-4e77-99f4-b42c163d391a',
					Z = '607e444e-4d9c-11ee-be56-0242ac120002',
					ee = 'bb8b7d13-0991-40b8-9321-9002e1b59c9b',
					te = 'af37bdfe-6390-11ee-8c99-0242ac120002',
					ie = '7b77b0af-f920-4277-9d5f-94d7e1fbc31c',
					ne = 'bfsd7d13-3241-4438-9111-9043c31b5xb',
					ae = '243a49fa-af10-400a-94de-b559c967cfbd',
					se = '21bab7fb-72d3-43fa-81ef-e378b33f778f',
					re = '4776bed7-07d4-4622-81a5-b45a488d1af8',
					oe = 'ffc72a9b-d943-441d-8395-e694fceaab4d',
					le = 'ecd48b39-6ba9-4f43-8ca0-abbbdff88888',
					ce = 'cb050209-f608-414a-baed-d9c3083e16fc',
					de = 'release-date-4-76',
					ue = 'e97b3ff7-17f0-4314-adc7-b88696f83a66',
					pe = 'b037f73d-9144-4007-9e07-3a781c1a5129',
					ye = '18bdc0b3-ce70-4fae-8e2b-7b8409ba9967';
			},
			993025: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => s });
				var n = i(893855),
					a = i
						.n(n)()
						.Model.extend({
							initialize: function (e) {},
							urlRoot: '/personalrecord-service/personalrecord/',
							backend: 'gcapi',
						});
				a.Sports = {
					Run: 'RUN',
					Cycle: 'CYCLE',
					Steps: 'STEPS',
					Swim: 'SWIM',
					Training: 'TRAINING',
					Walking: 'WALKING',
					Pushes: 'WHEELCHAIR_PUSH_WALK',
					Parasports: 'WHEELCHAIR_PUSH_RUN',
				};
				const s = a;
			},
			428394: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => s });
				var n = i(893855),
					a = i
						.n(n)()
						.Model.extend({
							url: function () {
								return '/userprofile-service/userprofile/optional-feature/strava-segments';
							},
							backend: 'gcapi',
						});
				a.USER_OPTION_TYPES = { OPT_IN: 'OPT_IN', OPT_OUT: 'OPT_OUT' };
				const s = a;
			},
			851840: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						idAttribute: 'value',
						urlRoot: function () {
							return '/modern/system-service/preference/' + this.preferenceKey;
						},
						initialize: function (e) {
							if (!e.preferenceKey)
								throw new Error('preferenceKey is required');
							this.preferenceKey = e.preferenceKey;
						},
						parse: function (e) {
							return e;
						},
					});
			},
			89430: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						backend: 'gcapi',
						url: function () {
							return '/userprofile-service/userprofile/location';
						},
					});
			},
			591476: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						urlRoot: function () {
							return '/userpreference-service/';
						},
						backend: 'gcapi',
						idAttribute: 'key',
						initialize: function (e) {},
						getValue: function () {
							return this.get('value');
						},
						setValue: function (e) {
							return this.set('value', e);
						},
						equalsIgnoreCase: function (e) {
							if (void 0 !== this.get('value'))
								return this.get('value').toLowerCase() === e.toLowerCase();
						},
					});
			},
			992187: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => A });
				var n = i(893855),
					a = i.n(n),
					s = i(29273),
					r = i(408822),
					o = i(422460),
					l = i(352406),
					c = i(109285),
					d = i.n(c),
					u = (i(501705), i(996605)),
					p = i(998813),
					y = { ON_CULTURE_READY: 'ON_CULTURE_READY' },
					h = 'GarminUserPrefs',
					g = 'LAST_DASHBOARD',
					m = a().Model.extend({
						backend: 'gcapi',
						url: function () {
							return (
								'/userprofile-service/userprofile/settings/' +
								(this.get('displayName') || '')
							);
						},
						initialize: function (e) {
							(this.getLocaleFromCookie = e && e.getLocaleFromCookie),
								this.bind('change', this.onFetchSuccess, this),
								this.migrateToNewPreferenceKey();
						},
						getDisplayName: function () {
							return this.get('displayName');
						},
						onFetchSuccess: function () {
							this.updateLocalizerAndPersonalizer();
						},
						save: function (e, t) {
							let i = {},
								n = this.clone();
							n.unset('hydrationMeasurementUnit'),
								n.unset('hydrationContainers'),
								'function' === typeof t &&
									((i.url = '/userprofile-service/userprofile/settings/'),
									(i.type = 'PUT'),
									(i.data = JSON.stringify(n)),
									(i.contentType = 'application/json'),
									(i.complete = function (e) {
										e.status >= 200 && e.status < 300 ? t() : t(!0, e);
									}),
									a().Model.prototype.save.call(this, e, i));
						},
						updateLocalizerAndPersonalizer: function () {
							s.A.setMeasurementSystem(this.getMeasurementSystem()),
								s.A.setNumberSeparator(this.getNumberFormat().toUpperCase()),
								s.A.setDateFormat(this.getDateFormatKey()),
								s.A.setTimeFormat(this.getTimeFormatKey()),
								r.A.setCurrentDateFormatKey(this.getDateFormatKey()),
								o.Ay.setDateFormat(this.getDateFormatKey()),
								o.Ay.setTimeFormat(this.getTimeFormatKey());
						},
						getMeasurementSystem: function () {
							return this.get('measurementSystem');
						},
						getGolfDistanceUnit: function () {
							return this.get('golfDistanceUnit');
						},
						getHeartRateFormatKey: function () {
							return this.get('heartRateFormat').formatKey;
						},
						getPowerDisplayFormatKey: function () {
							return this.get('powerFormat').formatKey;
						},
						getFirstDayOfWeek: function () {
							return this.get('firstDayOfWeek').dayName;
						},
						getLocale: function () {
							var e = this.get('preferredLocale');
							if (this.getLocaleFromCookie) {
								var t = p.cookie(h) || e || 'en';
								return (
									'zh' != t.substr(0, 2) &&
										'pt' != t.substr(0, 2) &&
										(t = t.substr(0, 2)),
									t
								);
							}
							return e;
						},
						getLocaleCountry: function () {
							var e = this.getFullLocale();
							return e ? e.substring(e.indexOf('_') + 1).toLowerCase() : 'us';
						},
						getFullLocale: function () {
							var e = this.getLocale();
							return l.A.getFullLocale(e);
						},
						getDateFormatKey: function () {
							return this.get('dateFormat').formatKey;
						},
						getTimeFormatKey: function () {
							return this.get('timeFormat').formatKey;
						},
						getNumberFormat: function () {
							return this.get('numberFormat');
						},
						onLocaleCultureReady: function () {
							this.trigger(y.ON_CULTURE_READY);
						},
						getLastDashboard: function () {
							var e = this.getLocalStoragePreference(g);
							return e || null;
						},
						setLastDashboard: function (e) {
							this.setLocalStoragePreference(g, e);
						},
						migrateToNewPreferenceKey: function () {
							try {
								var e = this.getOldLocalStoragePreferenceKey(),
									t = localStorage[e];
								if ('undefined' == typeof t || null == t) return;
								var i = this.getLocalStoragePreferenceKey(),
									n = localStorage[i];
								('undefined' != typeof n && null != n) || (localStorage[i] = t);
							} catch (a) {
								console.log(a);
							}
						},
						getOldLocalStoragePreferenceKey: function () {
							var e = this.get('displayName');
							return e ? 'pref-' + e : null;
						},
						setPreferenceKey: function (e) {
							(this.preferenceKey = e), this.migrateToNewPreferenceKey();
						},
						getLocalStoragePreferenceKey: function () {
							return this.preferenceKey ? 'pref-' + this.preferenceKey : null;
						},
						setLocalStoragePreference: function (e, t) {
							if ('undefined' == typeof localStorage) throw 'No Local Storage';
							if (!this.getLocalStoragePreferenceKey())
								throw 'Preference set for unauthenticated user';
							var i = localStorage[this.getLocalStoragePreferenceKey()];
							((i = i ? JSON.parse(i) : {})[e] = t),
								(i = JSON.stringify(i)),
								(localStorage[this.getLocalStoragePreferenceKey()] = i);
						},
						getLocalStoragePreference: function (e) {
							if ('undefined' == typeof localStorage) throw 'No Local Storage';
							if (!this.getLocalStoragePreferenceKey())
								throw 'Preference retrievel for unauthenticated user';
							var t = localStorage[this.getLocalStoragePreferenceKey()];
							return 'undefined' == typeof t || null == t
								? null
								: (t = JSON.parse(t))[e];
						},
						getLaunchGEFromCookies: () =>
							'undefined' !== typeof localStorage && localStorage.getItem(u.Fw)
								? 'true' === localStorage.getItem(u.Fw)
								: !p.cookie(u.Fw) || 'true' === p.cookie(u.Fw),
						setLaunchGECookies(e) {
							'undefined' === typeof localStorage
								? p.cookie(u.Fw, e)
								: localStorage.setItem(u.Fw, e);
						},
						getNewsFeedPeopleFilterFromCookies() {
							return this.getLocalStoragePreference('newsFeedPeopleFilter')
								? this.getLocalStoragePreference('newsFeedPeopleFilter')
								: 'ALL';
						},
						setNewsFeedPeopleFilterCookies(e) {
							this.setLocalStoragePreference('newsFeedPeopleFilter', e);
						},
						getNewsFeedActivityFilterFromCookies() {
							if (this.getLocalStoragePreference('newsFeedActivityFilter'))
								return this.getLocalStoragePreference('newsFeedActivityFilter');
						},
						setNewsFeedActivityFilterCookies(e) {
							this.setLocalStoragePreference('newsFeedActivityFilter', e);
						},
						getNewsFeedLastReadTimeFromCookies() {
							return this.getLocalStoragePreference('newsFeedLastReadTime')
								? this.getLocalStoragePreference('newsFeedLastReadTime')
								: this.getNewsFeedBubbleDateTime(!0);
						},
						setNewsFeedLastReadTimeCookies() {
							this.setLocalStoragePreference(
								'newsFeedLastReadTime',
								this.getNewsFeedBubbleDateTime(!1)
							);
						},
						is24HourFormat: function () {
							return 'time_twenty_four_hr' === this.get('timeFormat').formatKey;
						},
						getNewsFeedBubbleDateTime(e) {
							const t = 'YYYY-MM-DDTHH:mm:ss.S';
							return e
								? d().utc().add('days', -30).format(t)
								: d().utc().format(t);
						},
					});
				(m.writeLegacyLocaleCookie = function (e) {
					e = 'zh' == e.substr(0, 2) ? e.replace('-', '_') : e.substr(0, 2);
					var t = (function () {
						var e = window.location.hostname.split('.');
						return 3 === e.length && e.shift(), e.join('.');
					})();
					p.cookie('PrimaryGarminUserLocalePref', e, { path: '/', domain: t });
				}),
					(m.writeGarminPrefsCookie = function (e) {
						var t = (function () {
							var e = window.location.hostname.split('.');
							return 3 === e.length && e.shift(), e.join('.');
						})();
						p.cookie(h, e, { path: '/', domain: t });
					}),
					(m.updateLegacySessionLocale = function (e) {
						p.ajax({ url: '/user/locale/' + e, type: 'POST' });
					}),
					(m.Events = y);
				const A = m;
			},
			286968: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => u });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(115883),
					l = 0,
					c =
						null != window.VIEWER_SOCIAL_PROFILE
							? window.VIEWER_SOCIAL_PROFILE.displayName
							: null,
					d = r().Model.extend({
						backend: 'gcapi',
						url: function () {
							return '/userprofile-service/socialProfile/' + this.displayName;
						},
						initialize: function (e) {
							'undefined' !== typeof e &&
							null !== e &&
							'undefined' !== typeof e.displayName &&
							null !== e.displayName
								? (this.displayName = e.displayName)
								: ((this.validationEnabled = !1),
									(this.displayName = this.get('displayName')),
									this.displayName === c &&
										++l > 1 &&
										console.log(
											'!!!!Detected extra instance of UserProfile.!!!!'
										),
									this.bind(
										'change',
										function () {
											this.fetched = !0;
										},
										this
									),
									this.bind('sync', this.onSync, this));
						},
						getDisplayName: function () {
							return this.get('displayName');
						},
						onSync: function () {
							this.displayName = this.get('displayName');
						},
						getUserType: function () {
							var e = this.get('userRoles'),
								t = a().contains(e, 'ROLE_FITNESS_USER'),
								i = a().contains(e, 'ROLE_WELLNESS_USER');
							return t && i
								? 'CROSSOVER_USER'
								: t
									? 'TRANSITIONED_USER'
									: 'NEW_USER';
						},
						hasUserExperience: function () {
							return (
								a().contains(this.get('userRoles'), 'ROLE_WELLNESS_USER') ||
								a().contains(this.get('userRoles'), 'ROLE_FITNESS_USER') ||
								a().contains(this.get('userRoles'), 'ROLE_OUTDOOR_USER') ||
								a().contains(this.get('userRoles'), 'ROLE_DIVE_USER') ||
								a().contains(this.get('userRoles'), 'ROLE_MARINE_USER')
							);
						},
						hasStepsEnabled: function () {
							return (
								'undefined' === typeof this.stepsEnabled &&
									(this.stepsEnabled = this.isWellnessUser()),
								this.stepsEnabled
							);
						},
						isAdminUser: function () {
							return a().contains(this.get('userRoles'), 'ROLE_ADMINISTRATOR');
						},
						isCustomerService: function () {
							return a().contains(
								this.get('userRoles'),
								'ROLE_CUSTOMERSERVICE'
							);
						},
						isCustomerServiceAdmin: function () {
							return a().contains(
								this.get('userRoles'),
								'ROLE_CUSTOMER_SERVICE_ADMIN'
							);
						},
						isDeviceAdmin: function () {
							return a().contains(this.get('userRoles'), 'ROLE_DEVICE_ADMIN');
						},
						getProfileImageUrlSmall: function () {
							return this.get('profileImageUrlSmall') || o.Mg;
						},
						getProfileImageUrlMedium: function () {
							return this.get('profileImageUrlMedium') || o.Mg;
						},
						getProfileImageUrlLarge: function () {
							return this.get('profileImageUrlLarge') || o.Mg;
						},
						hasMBTesterRole: function () {
							return (
								!!this.has('userRoles') &&
								-1 !== this.get('userRoles').indexOf('ROLE_MBTESTER')
							);
						},
						isUserLoggedIn: function () {
							return !!this.get('displayName');
						},
						isFitnessUser: function () {
							return this.hasRole('ROLE_FITNESS_USER');
						},
						isWellnessUser: function () {
							return this.hasRole('ROLE_WELLNESS_USER');
						},
						isOutdoorUser: function () {
							return this.hasRole('ROLE_OUTDOOR_USER');
						},
						isDiveUser: function () {
							return this.hasRole('ROLE_DIVE_USER');
						},
						isMarineUser: function () {
							return this.hasRole('ROLE_MARINE_USER');
						},
						isAlphaUser: function () {
							return this.hasRole('ROLE_CONNECTBETAUSER');
						},
						isUserSuspended: function () {
							return this.hasRole('ROLE_PARTIALLY_SUSPENDED');
						},
						isRaceEventProvider: function () {
							return this.hasRole('ROLE_RACE_EVENT_PROVIDER');
						},
						isPremiumExclusiveBadgeUser: function () {
							return this.hasRole('ROLE_SP_FEATURE_4');
						},
						isPremiumBonusBadgePointUser: function () {
							return this.hasRole('ROLE_SP_FEATURE_4');
						},
						hasRole: function (e) {
							if (this.get('userRoles'))
								return a().contains(this.get('userRoles'), e);
						},
					});
				(d.ProfileVisibility = {
					PUBLIC: 'public',
					PRIVATE: 'private',
					FOLLOWING: 'following',
				}),
					(d.SocialActivityType = {
						RUNNING: 'running',
						CYCLING: 'cycling',
						SWIMMING: 'swimming',
						TRIATHLON: 'triathlon',
						DUATHLON: 'duathlon',
						CROSS_TRAINING: 'cross_training',
						WALKING: 'walking',
						HIKING: 'hiking',
						WEIGHT_TRAINING: 'weight_training',
						SNOW_SPORTS: 'snow_sports',
						WATER_SPORTS: 'water_sports',
						OTHER: 'other',
					}),
					(d.Events = { VALIDATION_SUCCEEDED: 'VALIDATION_SUCCEEDED' });
				const u = d;
			},
			746848: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => s });
				i(595695);
				var n = i(422460),
					a = i(702291);
				const s = i(704995).A.extend({
					url: function () {
						return '/userprofile-service/userprofile/user-settings/';
					},
					backend: 'gcapi',
					getGender: function () {
						return this.get('userData').gender;
					},
					setGender: function (e) {
						this.updateUserDataItem('gender', e);
					},
					getWeight: function () {
						return this.get('userData').weight;
					},
					setWeight: function (e) {
						this.updateUserDataItem('weight', e);
					},
					getHeight: function () {
						return this.get('userData').height;
					},
					setHeight: function (e) {
						this.updateUserDataItem('height', e);
					},
					getBirthDate: function () {
						return this.get('userData').birthDate;
					},
					setBirthDate: function (e) {
						null === e
							? this.updateUserDataItem('birthDate', e)
							: this.updateUserDataItem(
									'birthDate',
									n.Ay.formatISODate(a.A.parseISO(e))
								);
					},
					getActivityLevel: function () {
						return this.get('userData').activityLevel;
					},
					setActivityLevel: function (e) {
						this.updateUserDataItem('activityLevel', e);
					},
					getVO2MaxRunning: function () {
						return this.get('userData').vo2MaxRunning;
					},
					setVO2MaxRunning: function (e) {
						this.updateUserDataItem('vo2MaxRunning', e);
					},
					getVO2MaxCycling: function () {
						return this.get('userData').vo2MaxCycling;
					},
					setVO2MaxCycling: function (e) {
						this.updateUserDataItem('vo2MaxCycling', e);
					},
					getMeasurementSystem: function () {
						return this.get('userData').measurementSystem;
					},
					setMeasurementSystem: function (e) {
						this.updateUserDataItem('measurementSystem', e);
					},
					getHandedness: function () {
						return this.get('userData').handedness;
					},
					setHandedness: function (e) {
						return this.updateUserDataItem('handedness', e);
					},
					setTrainingStatusPausedDate: function (e) {
						return this.updateUserDataItem('trainingStatusPausedDate', e);
					},
					getSleepTime: function () {
						var e = this.getUserSleep() ? this.getUserSleep().sleepTime : null;
						return e || 0 === e ? e : 79200;
					},
					setSleepTime: function (e) {
						this.set({ userSleep: { sleepTime: e } });
					},
					getWakeTime: function () {
						return this.getUserSleep() && this.getUserSleep().wakeTime
							? this.getUserSleep().wakeTime
							: (this.setWakeTime(21600), 21600);
					},
					setWakeTime: function (e) {
						this.set({ userSleep: { wakeTime: e } });
					},
					getUserSleep: function () {
						if (this.get('userSleep')) return this.get('userSleep');
						this.userSleep = {};
					},
					hasExternalBottomTime: function () {
						return (
							!(
								!this.get('userData') ||
								'undefined' === typeof this.get('userData').externalBottomTime
							) && null !== this.get('userData').externalBottomTime
						);
					},
					getExternalBottomTime: function () {
						return this.get('userData') &&
							'undefined' !== typeof this.get('userData').externalBottomTime
							? this.get('userData').externalBottomTime
							: 0;
					},
					setExternalBottomTime: function (e) {
						this.updateUserDataItem('externalBottomTime', e);
					},
					getMenstrualCycleTrackingFeatureData: function () {
						return this.get('userMenstrualCycleSettings');
					},
					isPregnancySetup: function () {
						return (
							this.get('userMenstrualCycleSettings') &&
							this.get('userMenstrualCycleSettings').pregnancySetup
						);
					},
					updateMenstrualCycleTrackingSettingsData: function (e, t) {
						var i = {};
						(i[e] = t), this.set({ userMenstrualCycleSettings: i });
					},
					getHydrationUnit: function () {
						return this.get('userData') &&
							'undefined' !==
								typeof this.get('userData').hydrationMeasurementUnit
							? this.get('userData').hydrationMeasurementUnit
							: this.getDefaultHydrationUnit();
					},
					getDefaultHydrationUnit: function () {
						return this.getMeasurementSystem() === MeasurementSystems.METRIC
							? FluidTypes.ml
							: FluidTypes.cup;
					},
					getHydrationContainers: function () {
						return this.get('userData') &&
							'undefined' !== typeof this.get('userData').hydrationContainers
							? this.get('userData').hydrationContainers
							: [];
					},
					getWheelchairModeEnabled: function () {
						return this.get('userData')
							? this.get('userData').wheelchairModeEnabled
							: null;
					},
					setWheelchairModeEnabled: function (e) {
						this.updateUserDataItem('wheelchairModeEnabled', e);
					},
					updateUserDataItem: function (e, t) {
						var i = {};
						(i[e] = t), this.set({ userData: i });
					},
				});
			},
			875403: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o });
				var n = i(893855),
					a = i.n(n);
				i(576797);
				let s = i(637898).FI;
				let r = a().Model.extend({
					urlRoot: '/privacysettings-service/privacy-settings',
					backend: 'gcapi',
					getActivityPrivacySettings: function () {
						return this.get('activityPrivacySettings');
					},
					getProfilePrivacySettings: function () {
						return this.get('profilePrivacySettings');
					},
					getWellnessPrivacySettings: function () {
						return this.get('wellnessPrivacySettings');
					},
					getActivityCategoryDetails: function () {
						return (
							this.get('activityPrivacySettings') &&
							this.get('activityPrivacySettings').categoryDetails
						);
					},
					getActivityCategoryAccessRule: function () {
						return (
							this.get('activityPrivacySettings') &&
							this.get('activityPrivacySettings').categoryDetails &&
							this.get('activityPrivacySettings').categoryDetails
								.categoryAccessRule
						);
					},
					getStepsCategoryAccessRule: function () {
						return (
							this.get('wellnessPrivacySettings') &&
							this.get('wellnessPrivacySettings').categoryDetails &&
							this.get('wellnessPrivacySettings').categoryDetails
								.categoryAccessRule
						);
					},
					getProfileCategoryAccessRule: function () {
						return (
							this.get('profilePrivacySettings') &&
							this.get('profilePrivacySettings').categoryDetails &&
							this.get('profilePrivacySettings').categoryDetails
								.categoryAccessRule
						);
					},
					getActivitySubcategoryPrivacySettings: function () {
						return (
							this.get('activityPrivacySettings') &&
							this.get('activityPrivacySettings').subcategoryPrivacySettings
						);
					},
					setActivityPrivacySettings: function (e) {
						this.set('activityPrivacySettings', e);
					},
					setCategoryAccessRule: function (e, t) {
						if (e && t) {
							let i = this.get(t);
							if ('object' === typeof i) {
								let n = {
									...i,
									categoryDetails: {
										...i.categoryDetails,
										categoryAccessRule: e,
									},
								};
								this.set(t, n);
							}
						}
					},
					setSpecificPrivacyCustomSetting: function (e, t, i) {
						let n = { ...this.get(e) },
							a = n.subcategoryPrivacySettings.findIndex(
								(e, i) => e.privacySubcategoryType === t
							);
						(n.subcategoryPrivacySettings[a] = {
							...n.subcategoryPrivacySettings[a],
							subcategoryDetails: {
								...n.subcategoryPrivacySettings[a].subcategoryDetails,
								accessRule: i,
							},
						}),
							this.set(e, n);
					},
					getActivityPrivacyBasedOnParentActivityType: function (e, t) {
						let i = this.getActivitySubcategoryPrivacySettings(),
							n = null;
						return (
							i &&
								(n = i.find((i) =>
									t
										? i && -1 !== i.associatedParentActivityTypeIds.indexOf(e)
										: i && i.privacySubcategoryType === e
								)),
							n
						);
					},
					url: function () {
						return this.urlRoot;
					},
				});
				(r.Visibility = s),
					(r.isValueDifferentInUserCustomPrivacy = function (e) {
						if (e && e.length)
							return e.find((t, i) => {
								if (t.subcategoryDetails && t.subcategoryDetails.accessRule) {
									let n = i + 1 < e.length ? i + 1 : i,
										a = e[n].subcategoryDetails.accessRule;
									return t.subcategoryDetails.accessRule !== a;
								}
							});
					});
				const o = r;
			},
			159956: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = new (i
					.n(n)()
					.Model.extend({
						capableName: 'pulseOxCapable',
						url: function () {
							return (
								'/userprofile-service/userprofile/capableEnable/' +
								this.capableName
							);
						},
						backend: 'gcapi',
						initialize: function (e, t) {},
					}))();
			},
			960474: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => r });
				i(893855);
				var n = i(286968),
					a = i(787006);
				let s;
				((0, a.aO)() || (0, a.I7)() || (0, a.Yd)()) &&
				!location.pathname.includes('delegation-authorization')
					? (s = new n.A(
							JSON.parse(localStorage.getItem('viewerSocialProfile'))
						))
					: window.VIEWER_SOCIAL_PROFILE
						? ((s = new n.A(window.VIEWER_SOCIAL_PROFILE)),
							delete window.VIEWER_SOCIAL_PROFILE)
						: (s = new n.A());
				const r = s;
			},
			408368: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						url: function () {
							return (
								'/userprofile-service/userprofile/personal-information/' +
								this.getDisplayName()
							);
						},
						backend: 'gcapi',
						initialize: function (e) {
							this.displayName = e.displayName;
						},
						getDisplayName: function () {
							return this.displayName;
						},
						getCountryCode: function () {
							let e = this.get('userInfo');
							if (e && e.countryCode) return e.countryCode;
						},
						getWeightInKg: function () {
							var e = this.get('biometricProfile');
							if (e && e.weight) return Math.round((e.weight / 1e3) * 10) / 10;
						},
						updateWeightInKg: function (e) {
							var t = this.get('biometricProfile') || {};
							(t.weight = 1e3 * e), this.set('biometricProfile', t);
						},
						updateWeightInLbs: function (e) {
							var t = this.get('biometricProfile') || {};
							(t.weight = 453.592 * e), this.set('biometricProfile', t);
						},
						updateWeightInSt: function (e) {
							var t = this.get('biometricProfile') || {};
							(t.weight = 6350.293 * e), this.set('biometricProfile', t);
						},
					});
				var s = i(960474);
				let r;
				s.A && (r = new a({ displayName: s.A.getDisplayName() }));
				const o = r;
			},
			34581: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => r });
				i(893855);
				var n = i(992187),
					a = i(787006);
				let s;
				if (
					((0, a.aO)() || (0, a.I7)() || (0, a.Yd)()) &&
					!location.pathname.includes('delegation-authorization')
				)
					(s = new n.A(
						JSON.parse(localStorage.getItem('viewerUserPreferences'))
					)),
						s.updateLocalizerAndPersonalizer();
				else {
					if (!window.VIEWER_USERPREFERENCES)
						throw `Error: Viewer User Preferences is required.  To troubleshoot see ${window.location.origin}/userprofile-service/userprofile/settings`;
					(s = new n.A(window.VIEWER_USERPREFERENCES)),
						s.updateLocalizerAndPersonalizer(),
						delete window.VIEWER_USERPREFERENCES;
				}
				const r = s;
			},
			152059: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(893855);
				const a = i
					.n(n)()
					.Model.extend({
						url: function () {
							let e =
								'/vivokidchallenge-service/adHocChallenge/invite/' +
								this.inviteId +
								'/' +
								this.scope;
							return (
								this.isVivoKidTeamStepChallenge &&
									(e =
										'/vivokidchallenge-service/teamChallenge/invite/' +
										this.inviteId +
										'/' +
										this.scope),
								e
							);
						},
						backend: 'gcapi',
						initialize: function (e, t) {
							(this.inviteId = e.inviteId),
								(this.isVivoKidTeamStepChallenge =
									e.isVivoKidTeamStepChallenge),
								(this.scope = e.scope),
								(this.options = t);
						},
					});
			},
			7292: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o });
				var n = i(895509),
					a = i(544310),
					s = {
						cycling: 'map_marker_activity_cycling_pin.svg',
						hiking: 'map_marker_activity_hiking_pin.svg',
						other: 'map_marker_activity_other_pin.svg',
						running: 'map_marker_activity_running_pin.svg',
						swimming: 'map_marker_activity_swimming_pin.svg',
						transition: 'map_marker_activity_transition_pin.svg',
						transition_v2: 'map_marker_activity_transition_pin.svg',
						uncategorized: 'map_marker_activity_uncategorized_pin.svg',
						walking: 'map_marker_activity_walking_pin.svg',
						fitness_equipment: 'map_marker_activity_fitness_equipment_pin.svg',
						motorcycling: 'map_marker_activity_other_pin.svg',
						diving: 'map_marker_activity_diving.svg',
						single_gas_diving: 'map_marker_activity_singlegas.svg',
						multi_gas_diving: 'map_marker_activity_multigas.svg',
						gauge_diving: 'map_marker_activity_gauge.svg',
						apnea_diving: 'map_marker_activity_apnea.svg',
						apnea_hunting: 'map_marker_activity_apneahunt.svg',
						ccr_diving: 'map_marker_activity_ccr.svg',
						para_sports: 'map_marker_activity_para_sports_pin.svg',
						racket_sports: 'map_marker_activity_racket_sports_pin.svg',
						team_sports: 'map_marker_activity_team_sports_pin.svg',
						water_sports: 'map_marker_activity_water_sports_pin.svg',
						winter_sports: 'map_marker_activity_winter_sports_pin.svg',
						safety: 'map_marker_safety.svg',
					},
					r = {
						cycling: '#DA3B61',
						hiking: '#C8661F',
						other: '#5A30D7',
						winter_sports: '#15AABF',
						water_sports: '#EA670E',
						running: '#0093C7',
						swimming: '#AE1297',
						transition: '#A7A7A7',
						transition_v2: '#A7A7A7',
						swimToBikeTransition_v2: '#A7A7A7',
						bikeToRunTransition_v2: '#A7A7A7',
						runToBikeTransition_v2: '#A7A7A7',
						uncategorized: '#A7A7A7',
						walking: '#439727',
						fitness_equipment: '#A10023',
						motorcycling: '#A7A7A7',
						diving: '#439727',
						single_gas_diving: '#439727',
						multi_gas_diving: '#439727',
						gauge_diving: '#439727',
						apnea_diving: '#439727',
						apnea_hunting: '#439727',
						ccr_diving: '#439727',
						[n.A.TeamSports]: a.ColorLimeDark1,
						[n.A.RacketSports]: a.ColorLimeDark1,
						safety: '#FF0035',
					};
				const o = {
					mapStartPin: function (e) {
						var t = s[e];
						return t || (t = s.other), t;
					},
					mapPolylineColor: function (e) {
						var t = r[e];
						return t || (t = r.other), t;
					},
				};
			},
			494794: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = function (e, t, i) {
					if (!e) throw 'collection is required';
					this.zones = (function (e, t, i) {
						let n,
							a,
							s,
							r = '',
							o = '',
							l = {};
						if (e)
							for (let c = 0, d = e.length; c < d; c += 1)
								e[c] &&
									((n = null),
									(a = e[c]),
									i
										? ((r = 'zone' + a.get('zoneNumber')),
											(o = a.get('zoneLowBoundary')))
										: ((r = 'zone' + a.zoneNumber), (o = a.zoneLowBoundary)),
									(s = e[c + 1]),
									s &&
										(n = i
											? s.get('zoneLowBoundary') - 1
											: s.zoneLowBoundary - 1),
									(l[r] = {
										name: t[r],
										range: o
											? n
												? '(' + o + ' - ' + n + ')'
												: '( > ' + o + ')'
											: '',
									}));
						return l;
					})(e, t, i);
				};
				(n.prototype.getZones = function () {
					return this.zones;
				}),
					(n.prototype.getZone = function (e) {
						return e ? this.zones['zone' + e] : null;
					}),
					(n.HrZoneNameMapper = {
						zone1: 'heart_zone_name.1',
						zone2: 'heart_zone_name.2',
						zone3: 'heart_zone_name.3',
						zone4: 'heart_zone_name.4',
						zone5: 'heart_zone_name.5',
					}),
					(n.PowerZoneNameMapper = {
						zone1: 'power_zone_name_1',
						zone2: 'power_zone_name_2',
						zone3: 'power_zone_name_3',
						zone4: 'power_zone_name_4',
						zone5: 'power_zone_name_5',
						zone6: 'power_zone_name_6',
						zone7: 'power_zone_name_7',
					}),
					(n.RunningPowerZoneNameMapper = {
						zone1: 'running_power_zone_name_1',
						zone2: 'running_power_zone_name_2',
						zone3: 'running_power_zone_name_3',
						zone4: 'running_power_zone_name_4',
						zone5: 'running_power_zone_name_5',
					});
				const a = n;
			},
			247725: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => y });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = (i(408822), i(598602)),
					l = i(110547),
					c = i.n(l),
					d = i(543448),
					u = i.n(d),
					p = r().View.extend({
						template: a().template(c()),
						initialize: function (e) {
							(this.message = e.message),
								(this.message2 = e.message2 || null),
								(this.htmlFormat = e.htmlFormat),
								(this.showCloseButton = e.showCancelButton);
						},
						render: function () {
							this.$el.html(
								this.template({
									message: this.message,
									message2: this.message2,
									htmlFormat: this.htmlFormat,
								})
							);
						},
					});
				const y = o.A.extend({
					initialize: function (e) {
						if (!e.message) throw 'Message required for ModalConfirmationView';
						(e.view = new p({
							message: e.message,
							message2: e.message2,
							htmlFormat: !!e.htmlFormat,
							showCloseButton: !e.showCancelButton || e.showCancelButton,
						})),
							o.A.prototype.initialize.call(this, e);
					},
					footerTemplate: a().template(u()),
				});
			},
			106235: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => n });
				const n = {
					SportTypes: {
						Running: 'running',
						Cycling: 'cycling',
						Other: 'other',
						Swimming: 'swimming',
						Strength_Training: 'strength_training',
						Cardio: 'cardio_training',
						Yoga: 'yoga',
						Pilates: 'pilates',
						Hiit: 'hiit',
					},
					HiitSubSportTypes: {
						TABATA: 'TABATA',
						EMOM: 'EMOM',
						AMRAP: 'AMRAP',
						GENERIC: 'GENERIC',
					},
					StepTypes: {
						Warm_Up: 'warmup',
						Interval: 'interval',
						Cool_Down: 'cooldown',
						Recovery: 'recovery',
						Rest: 'rest',
						Repeat: 'repeat',
						Other: 'other',
						Main: 'main',
					},
					TargetTypes: {
						No_Target: 'no.target',
						Cadence: 'cadence',
						Heart_Rate_Zone: 'heart.rate.zone',
						Pace_Zone: 'pace.zone',
						CSS_Based_Target_Pace: 'swim.css.offset',
						Power_Zone: 'power.zone',
						Speed_Zone: 'speed.zone',
						Power_Curve: 'power.curve',
						Effort_Based: 'swim.instruction',
					},
					ChildTargetTypes: {
						Select_Heart_Rate_Zone: 'select.heart.rate.zone',
						Select_Power_Zone: 'select.power.zone',
					},
					ConditionTypes: {
						Calories: 'calories',
						Distance: 'distance',
						Heart_Rate: 'heart.rate',
						Lap_Button: 'lap.button',
						Iterations: 'iterations',
						Power: 'power',
						Time: 'time',
						Fixed_Rest: 'fixed.rest',
						Fixed_Repetition: 'fixed.repetition',
						Reps: 'reps',
					},
					IntensityTypes: {
						Active: 'active',
						Rest: 'rest',
						Warm_Up: 'warmup',
						Cool_Down: 'cooldown',
					},
					DurationTypes: {
						No_Duration: 'no.duration',
						Calories: 'calories',
						Distance: 'distance',
						Lap_Button: 'lap.button',
						Time: 'time',
						Heart_Zone: 'heart.rate',
						Power_Zone: 'power',
						Fixed_Rest: 'fixed.rest',
						Fixed_Repetition: 'fixed.repetition',
						Reps: 'reps',
					},
					StrokeTypes: {
						Any: 'any_stroke',
						Backstroke: 'backstroke',
						Breaststroke: 'breaststroke',
						Drill: 'drill',
						Fly: 'fly',
						Free: 'free',
						IM: 'individual_medley',
						Mixed: 'mixed',
					},
					EquipmentTypes: {
						No_Equipment: 'no.equipment',
						Fins: 'fins',
						Kickboard: 'kickboard',
						Paddles: 'paddles',
						Pull_Buoy: 'pull_buoy',
						Snorkel: 'snorkel',
					},
					BenchmarkScalingTypes: {
						Not_Set: 'not_set',
						Manual: 'manual',
						Benchmark_Scaled: 'benchmark_scaled',
					},
					RepeatTypes: { Iterations: 'repeat-iterations', Time: 'repeat-time' },
					WorkoutTypes: {
						TIME_ESTIMATED: 'TIME_ESTIMATED',
						DISTANCE_ESTIMATED: 'DISTANCE_ESTIMATED',
						TIME_AND_DISTANCE_ESTIMATED: 'TIME_AND_DISTANCE_ESTIMATED',
					},
				};
			},
			590695: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => S });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(408822),
					l = i(41922),
					c = i(48443);
				const d = r().Model.extend({
					backend: 'gcapi',
					urlRoot: function () {
						return (
							'/vivokidchallenge-service/conversation/comment/like/' +
							this.conversationUuid +
							'/' +
							this.conversationCommentUuid
						);
					},
					idAttribute: 'conversationCommentLikePk',
					sync: function (e, t, i) {
						'delete' === e &&
							((i.data = JSON.stringify(this.attributes)),
							(i.contentType = 'application/json')),
							r().sync.call(this, e, t, i);
					},
					initialize: function (e, t) {
						(this.conversationUuid = t.conversationUuid),
							(this.conversationCommentUuid = e.conversationCommentUuid);
					},
				});
				var u = i(960474),
					p = i(659990),
					y = i(595695);
				const h = p.A.extend({
					namesToDisplay: 3,
					initialize: function (e) {
						(this.likesFetched = !1),
							p.A.prototype.initialize.apply(this, arguments),
							this.collection.bind('sync', this.onLikesFetched, this);
					},
					show: function () {
						this.likesFetched
							? p.A.prototype.show.apply(this, arguments)
							: this.collection.fetch();
					},
					onLikesFetched: function () {
						(this.content = this.formatLikes(this.collection)),
							this.render(),
							(this.likesFetched = !0),
							this.show();
					},
					createLikeDisplayValue: function (e) {
						var t = e.get('displayName');
						return (
							(t =
								e.get('displayName') == u.A.get('displayName')
									? u.A.get('fullName') || u.A.get('displayName')
									: e.get('fullName') || e.get('displayName')),
							y.escape(t)
						);
					},
					formatLikes: function (e) {
						if (0 === e.length) return '';
						var t = '',
							i = this;
						return (
							y.each(e.models, function (n, a) {
								0 === a
									? (t = i.createLikeDisplayValue(e.at(a)))
									: a < i.namesToDisplay - 1
										? (t += '<br/>' + i.createLikeDisplayValue(e.at(a)))
										: a === i.namesToDisplay - 1 &&
											(e.length === i.namesToDisplay &&
												(t += '<br/>' + i.createLikeDisplayValue(e.at(a))),
											e.length > i.namesToDisplay &&
												(t +=
													'<br/>' +
													o.A.localize(
														'and_x_others',
														e.length - i.namesToDisplay + 1
													)));
							}),
							t
						);
					},
				});
				const g = r().Collection.extend({
					model: function (e, t) {
						return (t &&
							t.collection &&
							'VIVOKID_ADHOC_CHALLENGE' === t.collection.resourceType) ||
							'VIVOKID_TEAM_CHALLENGE' === t.collection.resourceType
							? new d(e, t)
							: new c.A(e, t);
					},
					url: function () {
						return 'VIVOKID_ADHOC_CHALLENGE' === this.resourceType ||
							'VIVOKID_TEAM_CHALLENGE' === this.resourceType
							? '/vivokidchallenge-service/conversation/comment/likes/' +
									this.conversationCommentUuid
							: '/conversation-service/conversation/comment/likes/' +
									this.conversationCommentUuid;
					},
					backend: 'gcapi',
					initialize: function (e, t) {
						(this.conversationUuid = t.conversationUuid),
							(this.conversationCommentUuid = t.conversationCommentUuid),
							(this.resourceType = t.resourceType);
					},
				});
				var m = i(134094),
					A = i(285282),
					_ = i(602629),
					E = i.n(_),
					T = {
						LIKE_CHANGE: 'LIKE_CHANGE',
						ON_ADD_LIKE_FAILED: 'ON_ADD_LIKE_FAILED',
					},
					C = r().View.extend({
						template: a().template(E()),
						events: { 'click .like-link': 'onClick' },
						initialize: function (e) {
							(this.liked = e.liked || !1),
								(this.numberOfLikes = e.numberOfLikes || 0),
								(this.likedList = e.likedList),
								(this.uuid = e.uuid),
								(this.conversationUuid = e.conversationUuid),
								(this.connections = e.connections),
								(this.isComment = e.isComment),
								(this.resourceType = e.resourceType),
								(this.resourceId = e.resourceId),
								(this.userGroupPk = e.userGroupPk),
								(this.tooltipPlacement = e.tooltipPlacement),
								(this.addLikeEventToAnalytics =
									e.addLikeEventToAnalytics || (() => {})),
								(this.addUnlikeEventToAnalytics =
									e.addUnlikeEventToAnalytics || (() => {}));
						},
						render: function () {
							var e = this.template({
								likedByUser: this.liked,
								Localizer: o.A,
								numberOfLikes: this.numberOfLikes,
							});
							return (
								this.$el.html(e),
								this.renderTooltip(),
								this.numberOfLikes > 0
									? this.createTooltipView()
									: (this.$('.js-like-count').css('cursor', 'default'),
										this.$('.js-like-count').attr('disabled', !0)),
								this
							);
						},
						createTooltipView: function () {
							this.likedList ||
								(this.isComment
									? (this.likedList = new g([], {
											conversationUuid: this.uuid,
											conversationCommentUuid: this.conversationUuid,
											resourceType: this.resourceType,
										}))
									: (this.likedList = new m.A([], {
											resourceType: this.resourceType,
											resourceId: this.resourceId,
											userGroupPk: this.userGroupPk,
										}))),
								(this.likeToolTip = new h({
									el: this.$('.js-like-count'),
									collection: this.likedList,
									connections: this.connections,
									placement: this.tooltipPlacement,
								}));
						},
						startConversation: function () {
							delete this.conversation,
								(this.conversation = new A.A({
									resourceType: this.resourceType,
									resourceId: this.resourceId,
									userGroupPk: this.userGroupPk,
								})),
								this.conversation.save([], {
									success: a().bind(this.conversationStarted, this),
								});
						},
						onClick: function (e) {
							e.preventDefault(),
								this.conversationUuid
									? this.likeUnlike()
									: this.startConversation();
						},
						renderTooltip: function () {
							(this.heartTooltip = new p.A({
								el: this.$('.like-icon'),
								content: o.A.localize(this.liked ? 'unlike' : 'like'),
								placement: this.tooltipPlacement,
							})),
								this.heartTooltip.render();
						},
						conversationStarted: function () {
							var e = this.conversation.get('conversationUuid');
							a().isUndefined(e) ||
								((this.conversationUuid = e), this.likeUnlike());
						},
						likeUnlike: function () {
							var e,
								t = this.$('.like-link');
							if (!0 !== t.attr('disabled')) {
								this.isComment
									? ((e =
											'VIVOKID_ADHOC_CHALLENGE' === this.resourceType ||
											'VIVOKID_TEAM_CHALLENGE' === this.resourceType
												? new d(
														{ conversationCommentUuid: this.conversationUuid },
														{ conversationUuid: this.uuid }
													)
												: new c.A({
														conversationUuid: this.uuid,
														conversationCommentUuid: this.conversationUuid,
													})),
										this.liked && e.set('conversationCommentLikePk', 0))
									: ((e = new l.A({ conversationUuid: this.conversationUuid })),
										this.liked && e.set('conversationLikePk', 0));
								var i = this;
								t.attr('disabled', !0),
									this.liked
										? e.destroy({
												success: function () {
													i.numberOfLikes--,
														(i.liked = !i.liked),
														i.trigger(T.LIKE_CHANGE, i.numberOfLikes, i),
														i.render(),
														t.attr('disabled', !1),
														i.addUnlikeEventToAnalytics();
												},
												error: function () {
													t.attr('disabled', !1);
												},
											})
										: e.save([], {
												success: function () {
													i.numberOfLikes++,
														(i.liked = !i.liked),
														i.trigger(T.LIKE_CHANGE, i.numberOfLikes, i),
														i.render(),
														t.attr('disabled', !1),
														i.addLikeEventToAnalytics();
												},
												error: function (e, n) {
													t.attr('disabled', !1),
														429 === n.status &&
															i.trigger(T.ON_ADD_LIKE_FAILED, i);
												},
											});
							}
						},
					});
				C.Events = T;
				const S = C;
			},
			928456: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => s });
				var n = i(28992),
					a = i(462026);
				const s = {
					renderCommentReachedLimitDialog: function (e) {
						n.A.store &&
							'function' === typeof n.A.store.dispatch &&
							n.A.store.dispatch((0, a.j0T)({ open: e, errorType: 'comment' }));
					},
					renderLikeReachedLimitDialog: function (e) {
						n.A.store &&
							'function' === typeof n.A.store.dispatch &&
							n.A.store.dispatch((0, a.j0T)({ open: e, errorType: 'like' }));
					},
				};
			},
			899973: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(408822),
					l = i(805123),
					c = i.n(l);
				const d = r().View.extend({
					initialize: function (e) {
						this.template = a().template(c());
					},
					render: function () {
						this.$el.html(this.template({ Localizer: o.A }));
					},
				});
			},
			991072: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => p });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(408822),
					l = i(29273),
					c = i(866225),
					d = i(486014),
					u = i.n(d);
				const p = r().View.extend({
					initialize: function (e) {
						(this.template = a().template(u())),
							(this.message = e.message),
							(this.preLocalized = e.preLocalized),
							(this.alertType = e.alertType);
					},
					render: function () {
						this.$el.html(
							this.template({
								Localizer: o.A,
								Personalizer: l.A,
								message: this.message,
								preLocalized: this.preLocalized,
								alertType: this.alertType,
							})
						),
							'info' === this.alertType &&
								this.$('.how-to-sync-link').attr('href', c.A.getHowToSyncURL()),
							this.$el.show();
					},
				});
			},
			267122: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => u });
				var n = i(595695),
					a = i.n(n),
					s = i(598602),
					r = i(653960),
					o = i.n(r),
					l = i(281202),
					c = { ON_SET: 'ON_SET' },
					d = s.A.extend({
						events: {
							'click .set-active': 'onSetActiveClicked',
							'click .close': 'close',
						},
						initialize: function (e) {
							(e.learnMoreUrl = (0, l.hg)('e3gcLbODQF0jUrDnB7FGK8')),
								s.A.prototype.initialize.call(this, e);
						},
						footerTemplate: a().template(o()),
						onSetActiveClicked: function () {
							this.trigger(c.ON_SET), this.close();
						},
					});
				d.Events = c;
				const u = d;
			},
			351130: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(729629),
					l = i.n(o),
					c = i(408822);
				const d = r().View.extend({
					template: a().template(l()),
					initialize: function (e) {
						(this.modalTopTitle = e.modalTopTitle),
							(this.modalTitle = e.modalTitle),
							(this.modalBody = e.modalBody),
							(this.saveBtn = e.saveBtn),
							(this.cancelBtn = e.cancelBtn),
							(this.showCloseButton = !0),
							void 0 !== e.showCloseButton &&
								(this.showCloseButton = e.showCloseButton);
					},
					render: function () {
						this.$el.html(
							this.template({
								modalTopTitle: this.modalTopTitle ? this.modalTopTitle : '',
								modalTitle: this.modalTitle ? this.modalTitle : '',
								modalBody: this.modalBody ? this.modalBody : '',
								saveBtn: this.saveBtn ? this.saveBtn : '',
								cancelBtn: this.cancelBtn ? this.cancelBtn : '',
								footerLink: '',
								footerTextLink: '',
								footerPrimaryButtonClasses: '',
								footerSecondaryButtonClasses: '',
								Localizer: c.A,
								showCloseButton: this.showCloseButton,
							})
						);
					},
				});
			},
			256840: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				var n = i(595695),
					a = i.n(n),
					s = i(408822),
					r = i(893855),
					o = i.n(r),
					l = i(153242),
					c = i.n(l);
				const d = o().View.extend({
					template: a().template(c()),
					initialize: function (e) {
						(this.modalTitle = e.modalTitle), (this.modalBody = e.modalBody);
					},
					render: function () {
						this.$el.html(
							this.template({
								Localizer: s.A,
								modalTitle: this.modalTitle,
								modalBody: this.modalBody,
							})
						);
					},
				});
			},
			339390: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => p });
				var n = i(595695),
					a = i.n(n),
					s = i(408822),
					r = i(893855),
					o = i.n(r),
					l = i(404662),
					c = i.n(l),
					d = {
						DONT_SHOW_AGAIN: 'DONT_SHOW_AGAIN',
						CANCEL_MODAL: 'CANCEL_MODAL',
					},
					u = o().View.extend({
						template: a().template(c()),
						events: {
							'click .js-middleBtn': 'onDontShowAgainClicked',
							'click .js-cancel': 'onCancelClicked',
							'click .js-close': 'onCancelClicked',
						},
						initialize: function (e) {
							(this.cancelBtn = e.cancelBtn),
								(this.showMiddleBtn = e.showMiddleBtn),
								(this.middleBtn = e.middleBtn),
								(this.saveBtn = e.saveBtn),
								(this.showFooterLink = e.showFooterLink),
								(this.footerTextLink = e.footerTextLink),
								(this.footerLink = e.footerLink);
						},
						render: function () {
							this.$el.html(
								this.template({
									Localizer: s.A,
									cancelBtn: this.cancelBtn,
									showMiddleBtn: this.middleBtn ? '' : 'hidden',
									middleBtn: this.middleBtn,
									saveBtn: this.saveBtn,
									showFooterLink: this.footerTextLink ? '' : 'hidden',
									footerTextLink: this.footerTextLink,
									footerLink: this.footerLink,
								})
							);
						},
						onDontShowAgainClicked: function () {
							this.trigger(d.DONT_SHOW_AGAIN);
						},
						onCancelClicked: function () {
							this.trigger(d.CANCEL_MODAL);
						},
					});
				u.Events = d;
				const p = u;
			},
			304413: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => g });
				var n = i(595695),
					a = i.n(n),
					s = i(408822),
					r = i(893855),
					o = i.n(r),
					l = i(673220),
					c = i(34581),
					d = i(85057),
					u = i(352406),
					p = i(632246),
					y = i(729629),
					h = i.n(y);
				const g = o().View.extend({
					template: a().template(h()),
					initialize: function (e) {
						(this.modalTopTitle = e.modalTopTitle),
							(this.grantRevoke = e.grantRevoke),
							(this.consentType = e.consentType),
							(this.thirdPartyApp = e.thirdPartyApp),
							(this.thirdPartyUrl = e.thirdPartyUrl),
							(this.customCancelText = e.customCancelText),
							(this.footerSecondaryButtonClasses =
								e.footerSecondaryButtonClasses),
							(this.showCloseButton = !0),
							void 0 !== e.showCloseButton &&
								(this.showCloseButton = e.showCloseButton),
							(this.language = u.A.getFullLocale(c.A.get('preferredLocale'))),
							(this.gdprConsentText = new l.A({
								consentTypeId: this.consentType,
								locale: this.language,
							}));
					},
					render: function () {
						var e = new d.A();
						e.addModel({ model: this.gdprConsentText, required: !0 }),
							e.on(d.A.Events.SYNCHRONIZED, this.getConsentModal, this),
							e.fetchModels();
					},
					getConsentModal: function () {
						var e, t, i, n, a, r, o, l;
						(this.consentText = this.gdprConsentText.attributes[0]),
							'grant' === this.grantRevoke
								? ((e = this.thirdPartyApp
										? this.consentText.headline
												.split('[APP]')
												.join(this.thirdPartyApp)
										: this.consentText.headline),
									(t = p.A.getGdprContentText(
										this.consentText.consentCopyBlocks,
										this.thirdPartyApp
									)),
									(i = this.consentText.grantButton),
									(n = this.consentText.rejectButton),
									(a = this.thirdPartyUrl
										? this.thirdPartyUrl
										: this.consentText.revokeLinks.length > 0
											? this.consentText.revokeLinks[0].url
											: ''),
									(r = this.getFooterTextLink(this.consentText.consentLinks)),
									(o = ''),
									(l = this.footerSecondaryButtonClasses
										? this.footerSecondaryButtonClasses
										: ''))
								: 'revoke' === this.grantRevoke &&
									((e = this.thirdPartyApp
										? this.consentText.revokeHeadline
												.split('[APP]')
												.join(this.thirdPartyApp)
										: this.consentText.revokeHeadline),
									(t = p.A.getGdprContentText(
										this.consentText.revokeCopyBlocks,
										this.thirdPartyApp
									)),
									(i = this.consentText.revokeConsentButton),
									(n = this.consentText.revokeCancelButton),
									(a = this.thirdPartyUrl
										? this.thirdPartyUrl
										: this.consentText.revokeLinks.length > 0
											? this.consentText.revokeLinks[0].url
											: ''),
									(r = this.getFooterTextLink(this.consentText.revokeLinks)),
									(o = 'btn-danger')),
							this.$el.html(
								this.template({
									Localizer: s.A,
									modalTopTitle: this.modalTopTitle,
									modalTitle: e,
									modalBody: t,
									saveBtn: i,
									cancelBtn: this.customCancelText ? this.customCancelText : n,
									footerLink: a,
									footerTextLink: r,
									footerPrimaryButtonClasses: o,
									footerSecondaryButtonClasses: l,
									showCloseButton: this.showCloseButton,
								})
							);
					},
					getFooterTextLink: function (e) {
						return e.length
							? this.thirdPartyApp
								? e[0].text.split('[APP]').join(this.thirdPartyApp)
								: e[0].text
							: '';
					},
					getConsentVersion: function () {
						return this.consentText.version;
					},
				});
			},
			421889: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => K });
				var n = i(595695),
					a = i.n(n),
					s = i(408822),
					r = i(893855),
					o = i.n(r);
				const l = o().View.extend({
					render: function () {
						return this.view.render(), this;
					},
					setView: function (e) {
						(this.view = e), this.view.setElement(this.$el);
					},
				});
				var c = i(304413),
					d = i(205911),
					u = i.n(d),
					p = i(998813);
				const y = o().View.extend({
					template: a().template(u()),
					events: {
						'change #accountDeviceSyncToggle': 'onAccountDeviceSyncToggle',
					},
					initialize: function (e) {
						(this.onDeviceSyncToggle = e.onDeviceSyncToggle),
							(this.accountDeviceSyncPref = e.accountDeviceSyncPref),
							this.accountDeviceSyncPref.on('change', () => {
								this.updateSwitch(
									this.accountDeviceSyncPref.equalsIgnoreCase('true')
								);
							});
					},
					render: function () {
						return (
							this.$el.html(
								this.template({
									Localizer: s.A,
									checked: this.accountDeviceSyncPref.equalsIgnoreCase('true'),
								})
							),
							this
						);
					},
					updateSwitch: function (e) {
						this.$('#accountDeviceSyncToggle').toggleClass('checked', e);
					},
					onAccountDeviceSyncToggle: function (e) {
						let t = !p(e.currentTarget).hasClass('checked');
						this.onDeviceSyncToggle(t);
					},
				});
				var h = i(535911),
					g = i.n(h);
				const m = o().View.extend({
					template: a().template(g()),
					events: { 'click .btn-primary': 'onPrimaryClick' },
					initialize: function (e) {
						this.onAccept = e.onAccept;
					},
					render: function () {
						return this.$el.html(this.template({ Localizer: s.A })), this;
					},
					onPrimaryClick: function (e) {
						e.preventDefault(), this.onAccept && this.onAccept();
					},
				});
				var A = i(99815),
					_ = i.n(A);
				const E = o().View.extend({
					template: a().template(_()),
					initialize: function (e) {},
					render: function () {
						return this.$el.html(this.template({ Localizer: s.A })), this;
					},
				});
				var T = i(283135),
					C = i(774166),
					S = i(826906),
					I = i(598602),
					v = i(632246),
					f = i(757282),
					D = i(673220),
					N = i(34581);
				const R = o().Model.extend({
					url: function () {
						return '/modern/currentuser-service/user/info';
					},
					getCustomerId: function () {
						return this.get('customerId');
					},
					getUsername: function () {
						return this.get('username');
					},
					getEmailAddress: function () {
						return this.get('emailAddress');
					},
					getSocialNetwork: function () {
						return this.get('socialNetwork');
					},
					getSocialIcon: function () {
						return this.get('socialIcon');
					},
				});
				var b = i(407586),
					L = i(991072),
					P = i(85057),
					O = i(352406),
					w = i(503407),
					F = i.n(w);
				const k = o().View.extend({
					template: a().template(F()),
					events: { 'focus #passwordConfirm': 'onPasswordFieldFocus' },
					initialize: function (e) {
						(this.consentType = e.consentType),
							(this.modalTopTitle = e.modalTopTitle),
							(this.customCancelText = e.customCancelText),
							(this.footerPrimaryButtonClasses = e.footerPrimaryButtonClasses),
							(this.footerSecondaryButtonClasses =
								e.footerSecondaryButtonClasses),
							(this.language = O.A.getFullLocale(N.A.get('preferredLocale'))),
							(this.gdprConsentText = new D.A({
								consentTypeId: this.consentType,
								locale: this.language,
							})),
							(this.currentUserInfo = new R());
					},
					render: function () {
						var e = new P.A();
						e.addModel({ model: this.gdprConsentText, required: !0 }),
							e.addModel({
								model: this.currentUserInfo,
								required: !0,
								countError: !0,
							}),
							e.on(P.A.Events.SYNCHRONIZED, this.getDeleteConfirmModal, this),
							e.fetchModels();
					},
					getDeleteConfirmModal: function () {
						var e, t, i, n, a, r, o, l, c;
						(this.consentText = this.gdprConsentText.attributes[0]),
							(e = this.consentText.headline),
							(t = v.A.getGdprContentText(
								this.consentText.consentCopyBlocks,
								null,
								!0
							)),
							(i = this.consentText.grantButton),
							(n = this.consentText.rejectButton),
							(a =
								this.consentText.revokeLinks.length > 0
									? this.consentText.revokeLinks[0].url
									: ''),
							(r = this.getFooterTextLink(this.consentText.consentLinks)),
							(o = this.footerPrimaryButtonClasses
								? this.footerPrimaryButtonClasses
								: ''),
							(l = this.footerSecondaryButtonClasses
								? this.footerSecondaryButtonClasses
								: ''),
							(c = this.currentUserInfo
								? this.currentUserInfo.get('emailAddress')
								: ''),
							this.$el.html(
								this.template({
									Localizer: s.A,
									modalTopTitle: this.modalTopTitle,
									modalTitle: e,
									modalBody: t,
									saveBtn: i,
									cancelBtn: this.customCancelText ? this.customCancelText : n,
									footerLink: a,
									footerTextLink: r,
									footerPrimaryButtonClasses: o,
									footerSecondaryButtonClasses: l,
									userEmail: c,
								})
							);
					},
					getFooterTextLink: function (e) {
						return e.length ? e[0].text : '';
					},
					getConsentVersion: function () {
						return this.consentText.version;
					},
					getPassword: function () {
						return document.getElementById('passwordConfirm').value;
					},
					onPasswordFieldFocus: function () {
						this.errorToolTipView && this.errorToolTipView.hide();
					},
					onPasswordEntryFail: function () {
						this.onPasswordFieldFocus(),
							(this.errorToolTipView = new b.A({
								el: this.$('#passwordConfirm'),
								container: this.$('.modal-body'),
								content: s.A.localize('password_is_required'),
								placement: 'right',
							})),
							this.errorToolTipView.show();
					},
					onPasswordConfirmFail: function () {
						this.onPasswordFieldFocus(),
							(this.errorToolTipView = new b.A({
								el: this.$('#passwordConfirm'),
								container: this.$('.modal-body'),
								content: s.A.localize('enter_valid_password'),
								placement: 'right',
							})),
							this.errorToolTipView.show();
					},
					onPasswordConfirmNetworkFail: function () {
						(this.networkErrorView = new L.A({
							el: this.$('.errorMessagePlaceHolder'),
							message: 'something_went_wrong',
							alertType: 'error',
						})),
							this.networkErrorView.render();
					},
					onAuthorizationFail: function () {
						(this.passwordErrorView = new L.A({
							el: this.$('.errorMessagePlaceHolder'),
							message: 'something_went_wrong_retry_password',
							alertType: 'error',
						})),
							this.passwordErrorView.render();
					},
				});
				var U = i(174497),
					M = i.n(U),
					G = i(998813);
				let x = { TOGGLE_SWITCH: 'TOGGLE_SWITCH' },
					B = o().View.extend({
						events: {
							'change #productEnhancementBtnSwitch':
								'productEnhancementSwitchChange',
						},
						template: a().template(M()),
						initialize: function (e) {
							(this.modalTopTitle = e.modalTopTitle),
								(this.isFeatureAccepted = e.isFeatureAccepted),
								(this.consentType = e.consentType),
								(this.thirdPartyApp = e.thirdPartyApp),
								(this.thirdPartyUrl = e.thirdPartyUrl),
								(this.customCancelText = e.customCancelText),
								(this.language = O.A.getFullLocale(N.A.get('preferredLocale'))),
								(this.gdprConsentText = new D.A({
									consentTypeId: this.consentType,
									locale: this.language,
								}));
						},
						render: function () {
							var e = new P.A();
							e.addModel({ model: this.gdprConsentText, required: !0 }),
								e.on(P.A.Events.SYNCHRONIZED, this.getConsentModal, this),
								e.fetchModels();
						},
						getConsentModal: function () {
							var e, t, i, n, a, r;
							(this.consentText = this.gdprConsentText.attributes[0]),
								(e = this.consentText.displayName);
							(t = v.A.getGdprContentText(
								(() =>
									this.consentText.consentCopyBlocks.filter((e, t) => {
										if (0 !== t) return e;
									}))(),
								this.thirdPartyApp
							)),
								(i = s.A.localize('button_done')),
								(r = this.isSwitchInitiallyChecked()),
								(n = this.thirdPartyUrl
									? this.thirdPartyUrl
									: this.consentText.consentLinks.length > 0
										? this.consentText.consentLinks[0].url
										: ''),
								(a = this.getFooterTextLink(this.consentText.consentLinks)),
								this.$el.html(
									this.template({
										Localizer: s.A,
										modalTopTitle: this.modalTopTitle,
										modalTitle: e,
										modalBody: t,
										saveBtn: i,
										cancelBtn: this.customCancelText
											? this.customCancelText
											: undefined,
										footerLink: n,
										footerTextLink: a,
										footerPrimaryButtonClasses: '',
										switchIsChecked: r,
									})
								);
						},
						isSwitchInitiallyChecked: function () {
							return this.isFeatureAccepted;
						},
						isSwitchChecked: function () {
							return !!this.$('#productEnhancementBtnSwitch').attr('checked');
						},
						productEnhancementSwitchChange: function (e) {
							e.preventDefault(), e.stopPropagation();
							let t = G(e.currentTarget),
								i = t.hasClass('checked');
							t.toggleClass('checked', !i),
								t.attr('checked', !i),
								this.trigger(x.TOGGLE_SWITCH);
						},
						enableSwitch() {
							this.$('#productEnhancementBtnSwitch').attr('disabled', !1);
						},
						disableSwitch() {
							this.$('#productEnhancementBtnSwitch').attr('disabled', !0);
						},
						getFooterTextLink: function (e) {
							return e.length
								? this.thirdPartyApp
									? e[0].text.split('[APP]').join(this.thirdPartyApp)
									: e[0].text
								: '';
						},
						getConsentVersion: function () {
							return this.consentText.version;
						},
					});
				B.Events = x;
				const H = B;
				var V = i(351130),
					W = i(591476),
					J = i(363099),
					Y = i(233452),
					$ = i(756992),
					j = i(998813);
				const K = o().View.extend({
					initialize: function (e) {
						(this.accountDeviceSyncPref = e.accountDeviceSyncPref),
							(this.gdprFeatureUpload = e.gdprFeatureUpload),
							(this.isUserOptIn = e.isUserOptIn),
							(this.activeATPs = e.activeATPs),
							(this.onAccountDeviceSynced = e.onAccountDeviceSynced),
							(this.onUploadRevoked = e.onUploadRevoked),
							(this.onUploadConsented = e.onUploadConsented),
							(this.onCloseButtonClicked = e.onCloseButtonClicked),
							(this.onCancelUploadDataModalView =
								e.onCancelUploadDataModalView),
							(this.onAllowDeviceToUploadData = e.onAllowDeviceToUploadData),
							(this.navigateToPreviousPage = e.navigateToPreviousPage),
							(this.options = e.options || {}),
							(this.language = O.A.getFullLocale(N.A.get('preferredLocale')));
					},
					gdprUpload: function (e) {
						const t = this.gdprFeatureUpload.get('deleteStatus');
						t === v.A.DELETE_STATUS.IN_PROGRESS ||
						t === v.A.DELETE_STATUS.CONFIRMED
							? this.dataDeleteInProgress()
							: this.isGdprFeatureOn(this.gdprFeatureUpload) ||
								  e === v.A.RCD_OPTIONS.DELETE
								? this.startUploadRevokeFlow(
										'revoke',
										s.A.localize('data_and_privacy'),
										v.A.CONSENT_TYPE_UPLOAD,
										this.onUploadRevoked &&
											this.onUploadRevoked.success &&
											this.onUploadRevoked.success.bind(this),
										this.onUploadRevoked &&
											this.onUploadRevoked.error.bind(this)
									)
								: this.openGdprModal(
										'grant',
										s.A.localize('data_and_privacy'),
										v.A.CONSENT_TYPE_UPLOAD,
										(e, t) => {
											'GRANTED' !== t.consentState ||
												(this.accountDeviceSyncPref &&
													a().isFunction(
														this.accountDeviceSyncPref.equalsIgnoreCase
													) &&
													this.accountDeviceSyncPref.equalsIgnoreCase(
														'true'
													)) ||
												this.checkDeviceSyncPreference(),
												'REVOKED' === t.consentState
													? this.onUploadRevoked &&
														this.onUploadRevoked.success &&
														this.onUploadRevoked.success()
													: this.onUploadConsented &&
														this.onUploadConsented.success &&
														this.onUploadConsented.success();
										},
										this.onUploadConsented &&
											this.onUploadConsented.error.bind(this),
										e
									);
					},
					gdprUploadWithoutAccountDeviceSyncPref: function (e, t) {
						this.openGdprModal(
							'grant',
							s.A.localize('data_and_privacy'),
							v.A.CONSENT_TYPE_UPLOAD,
							(i, n) => {
								'GRANTED' === n.consentState
									? e && e()
									: 'REVOKED' === n.consentState && t && t();
							},
							this.onUploadConsented && this.onUploadConsented.error.bind(this)
						);
					},
					checkDeviceSyncPreference: function () {
						const e = new P.A();
						(this.accountDeviceSyncPref = new W.A({
							key: 'account.deviceSync',
						})),
							e.addModel({ model: this.accountDeviceSyncPref, required: !0 }),
							e.on(
								P.A.Events.SYNCHRONIZED,
								() => {
									this.accountDeviceSyncPref &&
										a().isFunction(
											this.accountDeviceSyncPref.equalsIgnoreCase
										) &&
										this.accountDeviceSyncPref.equalsIgnoreCase('false') &&
										this.handleGarminDeviceUpload();
								},
								this
							),
							e.fetchModels();
					},
					handleGarminDeviceUpload: function (e) {
						this.enableFromDeviceUpload
							? this.updateAccountDeviceSync(
									'true',
									() => {
										this.renderGarminDeviceUploadModal();
									},
									e
								)
							: this.renderUploadDataModal({
									onAccept: () => {
										this.updateAccountDeviceSync(
											'true',
											() =>
												this.onAllowDeviceToUploadData &&
												this.onAllowDeviceToUploadData(),
											e
										);
									},
								});
					},
					renderGarminDeviceUploadModal: function () {
						(this.enableFromDeviceUpload = !1),
							(this.garminDeviceUploadModalView =
								this.getGarminDeviceUploadModalView()),
							this.renderDeviceUploadModal(this.garminDeviceUploadModalView);
					},
					getGarminDeviceUploadModalView: function () {
						return new y({
							accountDeviceSyncPref: this.accountDeviceSyncPref,
							onDeviceSyncToggle: (e) => {
								(this.accountDeviceSync = e),
									this.accountDeviceSync
										? this.isGdprFeatureOn(this.gdprFeatureUpload)
											? this.updateAccountDeviceSync('true')
											: this.renderDataStorageConsentModal()
										: this.updateAccountDeviceSync('false');
							},
						});
					},
					renderDataStorageConsentModal: function () {
						(this.dataStorageConsentModal = new m({
							onAccept: () => {
								(this.enableFromDeviceUpload = !0), this.gdprUpload();
							},
						})),
							this.renderDeviceUploadModal(this.dataStorageConsentModal);
					},
					renderDeviceUploadModal: function (e) {
						const t = this.gdprFeatureUpload.get('deleteStatus');
						if (
							t !== v.A.DELETE_STATUS.IN_PROGRESS &&
							t !== v.A.DELETE_STATUS.CONFIRMED
						) {
							if (this.deviceUploadModalViewWrapper)
								return (
									this.deviceUploadModalViewWrapper.setView(e),
									void this.deviceUploadModalViewWrapper.render()
								);
							(this.deviceUploadModalViewWrapper = new l()),
								this.deviceUploadModalViewWrapper.setView(e),
								(this.dataPrivacyModalView = new I.A({
									modalTitle: s.A.localize('data_and_privacy'),
									view: this.deviceUploadModalViewWrapper,
									useCustomBody: !0,
									showFooter: !1,
									closable: !1,
								})),
								this.dataPrivacyModalView.render(),
								this.dataPrivacyModalView.on(
									I.A.Events.ModalPopupClosed,
									() => {
										this.deviceUploadModalViewWrapper &&
											(this.deviceUploadModalViewWrapper.remove(),
											(this.deviceUploadModalViewWrapper = null));
									}
								);
						} else this.dataDeleteInProgress();
					},
					renderUploadDataModal: function (e) {
						(this.uploadDataConsentModal = new E()),
							(this.uploadDataModalView = new I.A({
								modalTitle: s.A.localize('data_and_privacy'),
								view: this.uploadDataConsentModal,
								closable: !1,
								cancelTextKey: 'not_now',
								confirmationTextKey: 'allow',
								onCloseButtonClicked: () => {
									this.onCancelUploadDataModalView &&
										this.onCancelUploadDataModalView();
								},
							})),
							this.uploadDataModalView.on(I.A.Events.CANCEL_CLICKED, () => {
								this.onCancelUploadDataModalView
									? this.onCancelUploadDataModalView()
									: this.uploadDataModalView.close();
							}),
							this.uploadDataModalView.render(),
							this.uploadDataModalView.on(I.A.Events.CONFIRM_CLICKED, () => {
								e && e.onAccept && e.onAccept();
							});
					},
					updateAccountDeviceSync: function (e, t, i) {
						if (this.accountDeviceSyncPref) {
							if (this.accountDeviceSyncPref.getValue() === e) return;
						} else
							this.accountDeviceSyncPref = new W.A({
								key: 'account.deviceSync',
							});
						this.accountDeviceSyncPref.setValue(e),
							this.accountDeviceSyncPref.save(null, {
								success: () => {
									t && t(),
										this.onAccountDeviceSynced &&
											this.onAccountDeviceSynced.success();
								},
								error: () => {
									i && i(),
										this.onAccountDeviceSynced &&
											this.onAccountDeviceSynced.error();
								},
							});
					},
					isGdprFeatureOn: function (e) {
						return e
							? v.A.isFeatureForUserOn(
									e.get('userOption'),
									e.get('consentEnforcementState'),
									e.get('sourceType')
								)
							: !this.isUserOptIn;
					},
					startUploadRevokeFlow: function (e, t, i, n, a) {
						let s = [],
							r = new f.A();
						s.push(
							this.uploadRevokeFirstModal(e, t, i),
							this.uploadRevokeSecondModal(t, i, n, a)
						),
							r.addModals(s),
							r.iterate();
					},
					openGdprConfirmationModal: function (e, t, i) {
						let n = s.A.localize('revoke_consent_description_version_two');
						'index-scale' === this.options.source &&
							(n = s.A.localize('index_scale_revoke_consent_description'));
						let a = new V.A({
								modalTopTitle: s.A.localize('data_and_privacy'),
								modalTitle: s.A.localize('revoke_consent_title'),
								modalBody: n,
								showFooter: !1,
								saveBtn: s.A.localize('button_continue'),
								cancelBtn: s.A.localize('button_cancel'),
							}),
							r = new I.A({
								view: a,
								closable: !1,
								showHeader: !1,
								useCustomBody: !0,
								showFooter: !1,
								onSaveButtonClicked: () => {
									r.close(() => {
										this.revokeConsent(
											e,
											() => {
												this.updateAccountDeviceSync('false'),
													this.navigateToPreviousPage &&
														o().history.history.back();
											},
											i
										);
									});
								},
								onCloseButtonClicked: () => {
									r.close(() => {
										this.onGdprConfirmationModalCancel();
									});
								},
							});
						return (
							r.on(I.A.Events.CANCEL_CLICKED, () => {
								this.onGdprConfirmationModalCancel();
							}),
							r.render()
						);
					},
					onGdprConfirmationModalCancel: function () {
						this.openGdprModal(
							'grant',
							s.A.localize('data_and_privacy'),
							v.A.CONSENT_TYPE_UPLOAD,
							(e, t) => {
								'GRANTED' !== t.consentState ||
									(this.accountDeviceSyncPref &&
										a().isFunction(
											this.accountDeviceSyncPref.equalsIgnoreCase
										) &&
										this.accountDeviceSyncPref.equalsIgnoreCase('true')) ||
									this.handleGarminDeviceUpload(),
									'REVOKED' === t.consentState
										? this.onUploadRevoked &&
											this.onUploadRevoked.success &&
											this.onUploadRevoked.success()
										: this.onUploadConsented &&
											this.onUploadConsented.success &&
											this.onUploadConsented.success();
							},
							this.onUploadConsented && this.onUploadConsented.error
						);
					},
					setReactGdprStoreValue: function (e) {
						(this.gdprEmptyComponent = new J.A()),
							this.gdprEmptyComponent.renderComponent(
								Y.A,
								j('.empty-for-empty-react-component')[0],
								{ actionToTrigger: $.Vb, param: e }
							);
					},
					openGdprModal: function (e, t, i, n, a, s) {
						const r = this.gdprFeatureUpload.get('deleteStatus');
						if (
							r === v.A.DELETE_STATUS.IN_PROGRESS ||
							r === v.A.DELETE_STATUS.CONFIRMED
						)
							return void this.dataDeleteInProgress();
						this.consentModalPopupView = this.setGdprModalView(e, t, i);
						let o = new I.A({
							view: this.consentModalPopupView,
							showHeader: !1,
							useCustomBody: !0,
							showFooter: !1,
							closable: !1,
							onSaveButtonClicked: () => {
								o.close(() => {
									'grant' === e
										? this.grantConsent(i, n, a)
										: 'revoke' === e && this.revokeConsent(i, n, a),
										this.setReactGdprStoreValue('revoke' === e);
								});
							},
							onCloseButtonClicked: () => {
								o.close(() => {
									this.returnToRcdWarningModal()
										? this.showRcdWarningModal()
										: this.onCloseButtonClicked && this.onCloseButtonClicked();
								});
							},
						});
						'grant' === e
							? o.on(I.A.Events.CANCEL_CLICKED, () => {
									i === v.A.CONSENT_TYPE_UPLOAD
										? s && this.gdprRcdCheck()
											? this.showRcdWarningModal()
											: this.openGdprConfirmationModal(i, n, a)
										: this.revokeConsent(i, n, a);
								})
							: 'revoke' === e &&
								o.on(I.A.Events.CANCEL_CLICKED, this.close, this),
							o.render();
					},
					openGdprModalWithSwitch: function (e, t, i, n, a) {
						this.consentModalPopupView = this.setGdprModalWithSwitch(e, t, i);
						let s = new I.A({
							view: this.consentModalPopupView,
							showHeader: !1,
							useCustomBody: !0,
							showFooter: !1,
							closable: !1,
							onSaveButtonClicked: () => {
								s.close(() => {
									this.consentModalPopupView.isSwitchChecked() !==
										this.consentModalPopupView.isSwitchInitiallyChecked() &&
										(this.consentModalPopupView.isSwitchChecked()
											? this.grantConsent(i, n, a)
											: this.revokeConsent(i, n, a));
								});
							},
							onCloseButtonClicked: () => {
								this.onCloseButtonClicked && this.onCloseButtonClicked();
							},
						});
						s.render();
					},
					setGdprModalView: function (e, t, i) {
						return new c.A({
							consentType: i,
							grantRevoke: e,
							modalTopTitle: t,
						});
					},
					setGdprModalWithSwitch: function (e, t, i) {
						return new H({
							consentType: i,
							isFeatureAccepted: e,
							modalTopTitle: t,
						});
					},
					grantConsent: function (e, t, i) {
						let n = this.consentModalPopupView.getConsentVersion(),
							a = new T.A({
								consentTypeId: e,
								consentLocale: this.language,
								consentVersion: n,
							});
						a.bind('sync', t, this), a.bind('error', i, this), a.save();
					},
					revokeConsent: function (e, t, i, n = !1, a = null, s = null) {
						const r = this.consentModalPopupView.getConsentVersion(),
							o = new C.A({
								consentTypeId: e,
								clientIndicator: n,
								consentLocale: this.language,
								consentVersion: r,
							});
						o.bind('sync', t, this),
							o.bind(
								'error',
								(e, t) => {
									406 === t.status
										? n && 'function' === typeof s
											? s()
											: ((this.rcdWarningModalShownDueTo406 = !0),
												this.showRcdWarningModal())
										: 'function' === typeof i
											? i()
											: this.gdprUpload();
								},
								this
							),
							o.save(null, { passwordChallengeToken: a });
					},
					gdprRcdCheck: function () {
						const e = this.gdprFeatureUpload.get('deleteStatus'),
							t = this.gdprFeatureUpload.get('userOption'),
							i = this.gdprFeatureUpload.get('consentEnforcementState'),
							n = this.gdprFeatureUpload.get('sourceType');
						if (
							!v.A.isFeatureForUserOn(t, i, n) &&
							(e === v.A.DELETE_STATUS.NOT_CONFIRMED ||
								e === v.A.DELETE_STATUS.LOCATION_CHANGED ||
								e === v.A.DELETE_STATUS.PASSWORD_CHECK_FAILED)
						)
							return !0;
					},
					returnToRcdWarningModal: function () {
						return this.gdprRcdCheck() || this.rcdWarningModalShownDueTo406;
					},
					uploadRevokeFirstModal: function (e, t, i) {
						this.consentModalPopupView = this.setGdprModalView(e, t, i);
						const n = new I.A({
							view: this.consentModalPopupView,
							showHeader: !1,
							useCustomBody: !0,
							showFooter: !1,
							onSaveButtonClicked: () => !0,
							onCloseButtonClicked: () => {
								n.close(() => {
									this.returnToRcdWarningModal() && this.showRcdWarningModal();
								});
							},
						});
						return (
							n.on(
								I.A.Events.CANCEL_CLICKED,
								function () {
									this.returnToRcdWarningModal() && this.showRcdWarningModal();
								},
								this
							),
							n
						);
					},
					uploadRevokeSecondModal: function (e, t, i, n) {
						const a = this,
							s = new k({
								consentType: v.A.CONSENT_TYPE_DATA_DELETION_CONFIRMATION,
								modalTopTitle: e,
								footerPrimaryButtonClasses: 'btn-danger',
							}),
							r = new I.A({
								view: s,
								useCustomBody: !0,
								showHeader: !1,
								showFooter: !1,
								closable: !1,
								onSaveButtonClicked: function () {
									a.onPasswordInput(
										t,
										i,
										n,
										s.getPassword(),
										function () {
											s.onPasswordEntryFail();
										},
										function () {
											s.onPasswordConfirmFail();
										},
										function () {
											s.onPasswordConfirmNetworkFail();
										},
										function () {
											s.onAuthorizationFail();
										},
										function () {
											r.close();
										}
									);
								},
								onCloseButtonClicked: () => {
									r.close(() => {
										this.returnToRcdWarningModal() &&
											this.showRcdWarningModal();
									});
								},
							});
						return (
							r.on(
								I.A.Events.CANCEL_CLICKED,
								function () {
									this.returnToRcdWarningModal() && this.showRcdWarningModal();
								},
								this
							),
							r
						);
					},
					onPasswordInput: function (e, t, i, n, a, s, r, o, l) {
						new S.A({
							garminGuid: this.gdprFeatureUpload.get('garminGuid'),
						}).verify(
							n,
							function (n) {
								this.passwordVerified(
									e,
									t,
									function () {
										i && i(), r && r();
									},
									l,
									n,
									o
								);
							}.bind(this),
							function () {
								a && a();
							}.bind(this),
							function () {
								s && s();
							}.bind(this),
							function () {
								r && r();
							}.bind(this)
						);
					},
					passwordVerified: function (e, t, i, n, a, s) {
						this.revokeConsent(
							e,
							function () {
								this.updateAccountDeviceSync('false'),
									this.setReactGdprStoreValue(!0),
									this.deleteComplete(t),
									n && n();
							}.bind(this),
							i,
							!0,
							a,
							s
						);
					},
					deleteComplete: function (e) {
						const t = this,
							i = new V.A({
								modalTopTitle: s.A.localize('your_data_is_being_deleted'),
								modalBody: s.A.localize(
									'gdpr_revoke_consent_delete_confirmation_2'
								),
								showFooter: !1,
								saveBtn: s.A.localize('button_ok'),
							}),
							n = new I.A({
								view: i,
								useCustomBody: !0,
								showHeader: !1,
								showFooter: !1,
								onSaveButtonClicked: function () {
									n.close(() => {
										t.navigateToPreviousPage && o().history.history.back();
									}),
										e && e();
								},
								onCloseButtonClicked: () => {
									n.close(() => {
										t.navigateToPreviousPage && o().history.history.back();
									}),
										e && e();
								},
							});
						n.render();
					},
					dataDeleteInProgress: function () {
						const e = this,
							t = new V.A({
								modalTopTitle: s.A.localize('try_again_later'),
								modalBody: s.A.localize('data_deletion_in_progress'),
								showFooter: !1,
								saveBtn: s.A.localize('button_ok'),
							}),
							i = new I.A({
								view: t,
								useCustomBody: !0,
								showHeader: !1,
								showFooter: !1,
								onSaveButtonClicked: function () {
									i.close(() => {
										e.navigateToPreviousPage && o().history.history.back();
									});
								},
								onCloseButtonClicked: () => {
									i.close(() => {
										e.navigateToPreviousPage && o().history.history.back();
									});
								},
							});
						i.render();
					},
					showRcdWarningModal: function () {
						var e = this;
						this.consentModalPopupView = new c.A({
							consentType: v.A.CONSENT_TYPE_DATA_DELETION,
							grantRevoke: 'grant',
							modalTopTitle: s.A.localize('data_and_privacy'),
							footerSecondaryButtonClasses: 'btn-danger',
							showCloseButton: !1,
						});
						var t = new I.A({
							view: this.consentModalPopupView,
							showHeader: !1,
							useCustomBody: !0,
							showFooter: !1,
							closable: !1,
							onSaveButtonClicked: function () {
								e.gdprUpload(v.A.RCD_OPTIONS.KEEP), t.close();
							},
						});
						t.on(
							I.A.Events.CANCEL_CLICKED,
							function () {
								this.gdprUpload(v.A.RCD_OPTIONS.DELETE);
							},
							this
						),
							t.render();
					},
				});
			},
			616799: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => S });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(673220),
					l = i(632246),
					c = i(283135),
					d = i(34581),
					u = i(352406),
					p = i(863939),
					y = i.n(p);
				const h = r().View.extend({
					events: { 'click input.privacy-checkbox': 'onOptionChange' },
					template: a().template(y()),
					tagName: 'div',
					initialize: function (e) {
						(this.privacyText = e.privacyText),
							(this.onGrantChange = e.onGrantChange);
					},
					render: function () {
						var e = this.privacyText.toJSON(),
							t = e && e[0] ? e[0].consentLinks[0] : {},
							i = e && e[0] ? e[0].consentCopyBlocks[0] : {};
						return (
							this.$el.html(
								this.template({ text: t.text, link: t.url, copy: i.copy })
							),
							this
						);
					},
					onOptionChange: function (e) {
						this.onGrantChange(e.currentTarget.checked);
					},
				});
				var g = i(514504),
					m = i(92098),
					A = i(85057),
					_ = i(963633),
					E = i(408822),
					T = i(539583),
					C = i.n(T);
				const S = r().View.extend({
					ALL_GRANTED: 'ALL_GRANTED',
					ENABLE_CONTINUE: 'ENABLE_CONTINUE',
					GRANT_ERROR: 'GRANT_ERROR',
					LOADED: 'LOADED',
					NOT_DISPLAYING: 'NOT_DISPLAYING',
					enableFeatureFlag: !1,
					template: a().template(C()),
					initialize: function (e) {
						this.fetchUserLocation(), (this.saveSuccess = e.saveSuccess);
					},
					fetchUserLocation: function () {
						m.A.getUserLocation(
							function (e) {
								let t = e.countryCode || '';
								'CN' !== t.toUpperCase() && 'KR' !== t.toUpperCase()
									? this.trigger(this.NOT_DISPLAYING)
									: this.fetchFeatures();
							}.bind(this),
							function () {
								this.fetchFeatures();
							}.bind(this)
						);
					},
					fetchFeatures: function () {
						var e = new A.A();
						(this.connectPrivacy = new g.A({
							feature: g.A.Features.CONNECT_PRIVACY,
						})),
							(this.golfPrivacy = new g.A({
								feature: g.A.Features.GOLF_PRIVACY,
							})),
							(this.ccslEnabled = new _.A({ key: 'enable-ccsl-consent' })),
							e.addModel({ model: this.connectPrivacy, required: !0 }),
							e.addModel({ model: this.golfPrivacy, required: !0 }),
							e.addModel({ model: this.ccslEnabled, required: !0 }),
							e.on(
								A.A.Events.SYNCHRONIZED,
								function () {
									this.handleFeatures();
								},
								this
							),
							e.fetchModels();
					},
					handleFeatures: function () {
						(this.featureEnabled = 'true' === this.ccslEnabled.get('value')),
							(this.displayConnectPrivacy =
								this.featureEnabled &&
								l.A.shouldAskConsentFor(this.connectPrivacy.toJSON())),
							(this.consentExpired =
								this.featureEnabled &&
								l.A.shouldShowExpiredText(this.connectPrivacy.toJSON())),
							(this.displayGolfPrivacy =
								this.featureEnabled &&
								l.A.shouldAskConsentFor(this.golfPrivacy.toJSON())),
							(this.connectPrivacyConsented = !this.displayConnectPrivacy),
							(this.golfPrivacyConsented = !this.displayGolfPrivacy),
							(this.consented = {}),
							this.loadTexts();
					},
					loadTexts: function () {
						var e = new A.A();
						'true' === this.ccslEnabled.get('value') &&
						(this.displayConnectPrivacy || this.displayGolfPrivacy)
							? (this.displayConnectPrivacy &&
									((this.connectPrivacyText = new o.A({
										consentTypeId: l.A.CONSENT_TYPE_CONNECT_PRIVACY,
										locale: this.getUserLocale(),
									})),
									e.addModel({ model: this.connectPrivacyText, required: !0 })),
								this.displayGolfPrivacy &&
									((this.golfPrivacyText = new o.A({
										consentTypeId: l.A.CONSENT_TYPE_GOLF_PRIVACY,
										locale: this.getUserLocale(),
									})),
									e.addModel({ model: this.golfPrivacyText, required: !0 })),
								e.on(
									A.A.Events.SYNCHRONIZED,
									function () {
										this.render();
									},
									this
								),
								e.fetchModels())
							: this.trigger(this.NOT_DISPLAYING);
					},
					render: function () {
						(this.connectPrivacy || this.golfPrivacy) &&
							(this.shouldHideOverlay()
								? this.trigger(this.NOT_DISPLAYING)
								: (this.trigger(this.LOADED),
									this.$el.html(this.template({ Localizer: E.A })),
									this.consentExpired
										? this.$('#privacyPolicyHeader').hide()
										: (this.$('#privacyPolicyUpdatedHeader').hide(),
											this.$('#privacyPolicyUpdatedDesc').hide()),
									this.displayConnectPrivacy &&
										this.renderPrivacy(
											this.connectPrivacyText,
											this.changeGrantedConnectPrivacy.bind(this)
										),
									this.displayGolfPrivacy &&
										this.renderPrivacy(
											this.golfPrivacyText,
											this.changeGrantedGolfPrivacy.bind(this)
										)));
					},
					shouldHideOverlay: function () {
						return (
							this.connectPrivacy &&
							!this.displayConnectPrivacy &&
							this.golfPrivacy &&
							!this.displayGolfPrivacy
						);
					},
					renderPrivacy: function (e, t) {
						var i = new h({ privacyText: e, onGrantChange: t });
						this.$('#privacyPolicyItems').append(i.render().el);
					},
					changeGrantedConnectPrivacy: function (e) {
						(this.connectPrivacyConsented = e), this.checkAbleToContinue();
					},
					changeGrantedGolfPrivacy: function (e) {
						(this.golfPrivacyConsented = e), this.checkAbleToContinue();
					},
					checkAbleToContinue: function () {
						this.connectPrivacyConsented && this.golfPrivacyConsented
							? this.trigger(this.ENABLE_CONTINUE, !0)
							: this.trigger(this.ENABLE_CONTINUE, !1);
					},
					getUserLocale: function () {
						return u.A.getFullLocale(d.A.get('preferredLocale'));
					},
					onContinue: function (e) {
						if (
							(e && e.preventDefault(),
							this.$('.continue-button').attr('disabled', 'true'),
							this.displayConnectPrivacy)
						) {
							var t = this.connectPrivacyText.toJSON()[0];
							this.grantPrivacy(
								l.A.CONSENT_TYPE_CONNECT_PRIVACY,
								t.locale,
								t.version
							);
						}
						if (this.displayGolfPrivacy) {
							t = this.golfPrivacyText.toJSON()[0];
							this.grantPrivacy(
								l.A.CONSENT_TYPE_GOLF_PRIVACY,
								t.locale,
								t.version
							);
						} else this.displayConnectPrivacy || this.trigger(this.ALL_GRANTED);
					},
					grantPrivacy: function (e, t, i) {
						var n = new c.A({
							consentTypeId: e,
							consentLocale: t,
							consentVersion: i,
						});
						n.bind('sync', this.consentGranted.bind(this, e), this),
							n.bind('error', this.consentGrantedFailed.bind(this, e), this),
							n.save();
					},
					consentGranted: function (e) {
						(this.consented[e] = !0), this.checkAgreedToAll();
					},
					consentGrantedFailed: function (e) {
						this.trigger(this.GRANT_ERROR, e);
					},
					checkAgreedToAll: function () {
						var e = !0;
						this.displayConnectPrivacy &&
							!this.consented[l.A.CONSENT_TYPE_CONNECT_PRIVACY] &&
							(e = !1),
							this.displayGolfPrivacy &&
								!this.consented[l.A.CONSENT_TYPE_GOLF_PRIVACY] &&
								(e = !1),
							e && this.trigger(this.ALL_GRANTED);
					},
				});
			},
			719383: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => h });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(408822),
					l = (i(21790), i(960474), i(762845)),
					c = i(309037),
					d = i.n(c),
					u = i(998813),
					p = { POST_ADDED: 'POST_ADDED', CLOSE: 'CLOSE' },
					y = r().View.extend({
						template: a().template(d()),
						events: {
							'click .add-group-button': 'onAddPostClicked',
							'click .cancel-post-button': 'onCancelClicked',
						},
						initialize: function (e) {
							(this.addNoteMessage = e.addNoteMessage),
								(this.errorMessage = e.errorMessage),
								(this.saveMessage = e.saveMessage),
								(this.postValue = e.postValue),
								(this.handleSave = e.handleSave),
								(this.objectId = e.objectId),
								(this.objectType = e.objectType),
								(this.postType = e.postType),
								(this.showCancelBtn = e.showCancelBtn),
								(this.cancelMessage = e.cancelMessage),
								(this.allowEmptyText = e.allowEmptyText);
						},
						onAddPostClicked: function () {
							var e = this.$('.add-post-textarea'),
								t = u.trim(e.val());
							if (0 !== t.length || this.allowEmptyText)
								if (this.handleSave) this.handleSave(t, this.objectId);
								else {
									var i = new this.objectType({
										userGroupPk: this.objectId,
										newsPostType: this.postType,
										body: t,
										rulePk: 4,
									});
									i.bind('error', this.onSavePostError, this),
										i.once('change', this.onSavePostSuccess, this),
										i.save();
								}
						},
						onSavePostSuccess: function (e, t) {
							this.$('.alert-error').hide(),
								this.trigger(p.POST_ADDED, e),
								this.trigger(p.CLOSE);
						},
						onSavePostError: function (e, t) {
							this.$('.alert-error').show();
						},
						onCancelClicked: function (e) {
							this.trigger(p.CLOSE);
						},
						render: function () {
							new Date().getMilliseconds();
							this.$el.html(
								this.template({
									Localizer: o.A,
									addNoteMessage: this.addNoteMessage || '',
									errorMessage: this.errorMessage || '',
									saveMessage: this.saveMessage || '',
									postValue: this.postValue || '',
									showCancelBtn: this.showCancelBtn,
									cancelMessage: this.cancelMessage,
								})
							),
								new l.A({
									minLength: 1,
									maxLength: 1e3,
									element: this.$('.add-post-textarea'),
								});
						},
					});
				y.Events = p;
				const h = y;
			},
			523221: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => u });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = (i(408822), i(598602)),
					l = i(110547),
					c = i.n(l),
					d = r().View.extend({
						template: a().template(c()),
						initialize: function (e) {
							(this.message = e.message),
								(this.message2 = e.message2),
								(this.htmlFormat = e.htmlFormat),
								(this.showCloseButton = e.showCancelButton);
						},
						render: function () {
							this.$el.html(
								this.template({
									message: this.message,
									message2: this.message2,
									htmlFormat: this.htmlFormat,
								})
							);
						},
					});
				const u = o.A.extend({
					initialize: function (e) {
						if (!e.message) throw 'Message required for ModalConfirmationView';
						(e.view = new d({
							message: e.message,
							message2: e.message2 || null,
							htmlFormat: !!e.htmlFormat,
							showCloseButton: !e.showCancelButton || e.showCancelButton,
						})),
							o.A.prototype.initialize.call(this, e);
					},
				});
			},
			598602: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => m });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(408822),
					l = i(549848),
					c = i.n(l),
					d = i(410626),
					u = i.n(d),
					p = i(998813),
					y = i(998813),
					h = {
						ModalPopupClosed: 'ModalPopupClosed',
						ON_CUSTOM_HEADER_ACTION_CLICKED: 'ON_CUSTOM_HEADER_ACTION_CLICKED',
						CANCEL_CLICKED: 'CANCEL_CLICKED',
						CONFIRM_CLICKED: 'CONFIRM_CLICKED',
						ON_SCROLL: 'ON_SCROLL',
					},
					g = r().View.extend({
						modalPopupTemplate: a().template(c()),
						showHeader: !0,
						showFooter: !0,
						footerTemplate: a().template(u()),
						events: {},
						baseEvents: {
							'click .js-saveBtn': '_onSaveButtonClicked',
							'click .js-close': '_onCloseButtonClicked',
							'click .cancel': '_onCancelClicked',
							'click .close': 'close',
							'click .js-custom-header-action': 'onCustomHeaderActionClicked',
							click: 'onModalClick',
						},
						initialize: function (e) {
							if (!e.view) throw 'view is required for WidgetSheet';
							if (
								((this.modalTitle = e.modalTitle),
								(this.isHTMLTitle = e.isHTMLTitle || !1),
								(this.modalId = e.modalId),
								(this.view = e.view),
								(this.customClasses = ''),
								(this.customBodyClasses = ''),
								(this.customBackdropClasses = ''),
								(this.options = e.options),
								(this.showCloseButton = !0),
								(this.showCancelButton = !0),
								(this.isDanger = !1),
								(this.cancelTextKey = e.cancelTextKey || 'modal_close'),
								(this.confirmationTextKey =
									e.confirmationTextKey || 'modal_save'),
								(this.footerPrimaryButtonClasses =
									e.footerPrimaryButtonClasses || ''),
								(this.footerAttributes = e.footerAttributes || ''),
								(this.closable = !!a().isUndefined(e.closable) || e.closable),
								(this.customHeaderAction = e.customHeaderAction),
								(this.stopClickPropagationOnModalClick =
									e.stopClickPropagationOnModalClick || !1),
								(this.useCustomBody =
									!a().isUndefined(e.useCustomBody) && e.useCustomBody),
								(this.learnMoreUrl = e.learnMoreUrl),
								'undefined' !== typeof e.showFooter &&
									(this.showFooter = e.showFooter),
								'undefined' !== typeof e.footerLink &&
									(this.footerLink = e.footerLink),
								'undefined' !== typeof e.footerTextLink &&
									(this.footerTextLink = e.footerTextLink),
								'undefined' !== typeof e.showHeader &&
									(this.showHeader = e.showHeader),
								'undefined' !== typeof e.onSaveButtonClicked
									? (this.onSaveButtonClicked = e.onSaveButtonClicked)
									: !a().isUndefined(this.view.onSaveButtonClicked) &&
										a().isFunction(this.view.onSaveButtonClicked) &&
										(this.onSaveButtonClicked = this.view.onSaveButtonClicked),
								!a().isUndefined(e.onCloseButtonClicked) &&
								a().isFunction(e.onCloseButtonClicked)
									? (this.onCloseButtonClicked = e.onCloseButtonClicked)
									: !a().isUndefined(this.view.onCloseButtonClicked) &&
										a().isFunction(this.view.onCloseButtonClicked) &&
										(this.onCloseButtonClicked =
											this.view.onCloseButtonClicked),
								'undefined' !== typeof e.isDanger &&
									(this.isDanger = e.isDanger),
								'undefined' !== typeof e.footerTemplate &&
									(this.footerTemplate = e.footerTemplate),
								'undefined' !== typeof e.customClasses &&
									(this.customClasses = e.customClasses),
								'undefined' !== typeof e.customBodyClasses &&
									(this.customBodyClasses = e.customBodyClasses),
								void 0 !== e.customBackdropClasses &&
									(this.customBackdropClasses = e.customBackdropClasses),
								'undefined' !== typeof e.showCloseButton &&
									(this.showCloseButton = e.showCloseButton),
								'undefined' !== typeof e.showCancelButton &&
									(this.showCancelButton = e.showCancelButton),
								'undefined' !== typeof e.saveText &&
									(this.saveText = e.saveText),
								'undefined' !== typeof e.cancelText &&
									(this.cancelText = e.cancelText),
								'undefined' !== typeof e.showBetaError &&
									(this.showBetaError = e.showBetaError),
								this.baseEvents)
							) {
								var t = {};
								for (var i in this.baseEvents)
									this.baseEvents.hasOwnProperty(i) &&
										(t[i] = this.baseEvents[i]);
								this.delegateEvents(a().extend(t, this.events));
							}
							(this.parentEl = e.parentEl),
								this.listenTo(this.view, 'ON_CLOSE', this.close),
								Window.App.registerModal(this),
								p(document).on(
									'click',
									'.modal-backdrop',
									function (e) {
										this.stopClickPropagationOnModalClick &&
											e.stopPropagation();
									}.bind(this)
								);
						},
						render: function () {
							var e = this.modalPopupTemplate({
								modalTitle: this.modalTitle,
								isHTMLTitle: this.isHTMLTitle,
								customHeaderAction: this.customHeaderAction,
								showHeader: this.showHeader,
								showFooter: this.showFooter,
								showCloseButton: this.showCloseButton,
								showBetaError: this.showBetaError,
								customBodyClasses: this.customBodyClasses,
								Localizer: o.A,
							});
							this.modalId && this.el.setAttribute('id', this.modalId),
								this.$el.addClass('modal hide fade'),
								this.customClasses && this.$el.addClass(this.customClasses),
								this.$el.html(e),
								p(this.parentEl || 'body').append(this.$el),
								this.useCustomBody
									? this.$('.js-modal-body').replaceWith(
											this.view.$el.addClass(this.customBodyClasses)
										)
									: this.$('.js-modal-body').replaceWith(
											this.view.$el
												.addClass('modal-body')
												.addClass(this.customBodyClasses)
										),
								this.renderInnerView(),
								this.showFooter &&
									this.$('.modal-footer').html(
										this.footerTemplate({
											Localizer: o.A,
											showCancelButton: this.showCancelButton,
											isDanger: this.isDanger,
											cancel_text_key: this.cancelTextKey,
											confirmation_text_key: this.confirmationTextKey,
											footerPrimaryButtonClasses:
												this.footerPrimaryButtonClasses,
											footerLink: this.footerLink,
											footerTextLink: this.footerTextLink,
											footerAttributes: this.footerAttributes,
											saveText: this.saveText,
											cancelText: this.cancelText,
											learnMoreUrl: this.learnMoreUrl,
										})
									);
							var t = {
								backdrop: !!this.closable || 'static',
								keyboard: this.closable,
								show: !0,
							};
							(t = a().extend(t, this.options)),
								p('.modal').modal(t),
								p('.modal-body').scroll(
									function (e) {
										this.trigger(h.ON_SCROLL, e);
									}.bind(this)
								),
								this.customBackdropClasses &&
									y('.modal-backdrop').addClass(this.customBackdropClasses);
							var i = this;
							this.$el.attr('tabindex', 0),
								this.$el.focus(),
								this.$el.on('hidden.bs.modal', function () {
									i.removeView();
								});
						},
						renderInnerView: function () {
							this.view.render();
						},
						removeView: function () {
							this.trigger(h.ModalPopupClosed),
								this.cleanUpView(),
								this.remove(),
								this.postRemove();
						},
						postRemove: function () {},
						_onSaveButtonClicked: function (e) {
							if (
								(e.preventDefault(),
								this.trigger(h.CONFIRM_CLICKED),
								!this.$(e.target).hasClass('disabled'))
							)
								if (this.onSaveButtonClicked) {
									var t = this;
									!a().isUndefined(this.view.onSaveButtonClicked) &&
										a().isFunction(this.view.onSaveButtonClicked) &&
										(t = this.view),
										this.onSaveButtonClicked.call(t) && this.close();
								} else this.close();
						},
						_onCloseButtonClicked: function (e) {
							if ((e.preventDefault(), this.onCloseButtonClicked)) {
								var t = this;
								!a().isUndefined(this.view.onCloseButtonClicked) &&
									a().isFunction(this.view.onCloseButtonClicked) &&
									(t = this.view),
									this.onCloseButtonClicked.call(t) && this.close();
							}
							this.cleanUpView();
						},
						_onCancelClicked: function () {
							this.close(() => {
								this.trigger(h.CANCEL_CLICKED);
							});
						},
						onSaveButtonClicked: function () {
							return !0;
						},
						onCustomHeaderActionClicked: function () {
							this.trigger(h.ON_CUSTOM_HEADER_ACTION_CLICKED);
						},
						showCustomHeader: function () {
							this.$('.js-custom-header-action').show(),
								this.$('.js-modal-header-title').hide();
						},
						hideCustomHeader: function () {
							this.$('.js-custom-header-action').hide(),
								this.$('.js-modal-header-title').show();
						},
						close: function (e) {
							this.$el.on('hidden', () => {
								e && 'function' === typeof e && e(),
									this.unbind(),
									this.cleanUpView();
							}),
								this.$el.modal('hide'),
								this.customBackdropClasses &&
									y('.modal-backdrop').hasClass(this.customBackdropClasses) &&
									y('.modal-backdrop').removeClass(this.customBackdropClasses);
						},
						cleanUpView: function () {
							this.view &&
								'function' === typeof this.view.destroy &&
								this.view.destroy(),
								p('.tooltip-error').hide();
						},
						disableConfirmationButton: function () {
							this.$('.js-saveBtn').addClass('disabled');
						},
						enableConfirmationButton: function () {
							var e = this.$('.js-saveBtn');
							e.hasClass('disabled') && e.removeClass('disabled');
						},
						onModalClick: function (e) {
							this.stopClickPropagationOnModalClick && e.stopPropagation();
						},
						updateFooterPrimaryButtonClasses: function (e) {
							this.$('.modal-footer .btn-primary')
								.removeClass(this.footerPrimaryButtonClasses)
								.addClass(e),
								(this.footerPrimaryButtonClasses = e);
						},
						hideHeaderFooter: function () {
							this.$('.modal-header').css('visibility', 'hidden'),
								this.$('.modal-footer').css('visibility', 'hidden');
						},
						hideBetaErrorMessage: function () {
							this.$('#beta-error-message').hide();
						},
						showBetaErrorMessage: function () {
							this.$('#beta-error-message').show();
						},
					});
				g.Events = h;
				const m = g;
			},
			236296: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => u });
				var n = i(893855),
					a = i.n(n),
					s = (i(408822), i(598602)),
					r = i(843502),
					o = i.n(r),
					l = i(595695),
					c = a().View.extend({
						template: l.template(o()),
						initialize: function (e) {
							(this.message = e.message), (this.errorMessage = e.errorMessage);
						},
						render: function () {
							this.$el.html(
								this.template({
									message: this.message,
									errorMessage: this.errorMessage,
								})
							);
						},
					}),
					d = s.A.extend({
						initialize: function (e) {
							if (!e.message) throw 'Message required for ModalWarningView';
							(this.messageView = new c({
								message: e.message,
								errorMessage: e.errorMessage || '',
							})),
								(e.view = this.messageView),
								s.A.prototype.initialize.call(this, e);
						},
						render: function () {
							s.A.prototype.render.call(this),
								this.$('.js-saveBtn').addClass('btn-danger');
						},
						errorOccurred: function () {
							this.messageView.errorMessage &&
								this.messageView.$('.alert-error').show();
						},
					});
				d.Events = s.A.Events;
				const u = d;
			},
			428679: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = (i(408822), i(363099)),
					l = i(542869),
					c = i.n(l);
				const d = r().View.extend({
					template: a().template(c()),
					initialize: function (e) {
						if (
							((this.reactComponent = e.reactComponent), !this.reactComponent)
						)
							throw Error('reactComponent is required!');
						(this.additionalClasses = e.additionalClasses || ''),
							(this.args = e);
					},
					render: function () {
						return (
							this.$el.html(
								this.template({ additionalClasses: this.additionalClasses })
							),
							(this.r = new o.A()),
							this.r.renderComponent(
								this.reactComponent,
								this.$('.react-placeholder')[0],
								this.args.props
							),
							this
						);
					},
					destroy: function () {
						this.r && this.r.removeComponent();
					},
				});
			},
			383790: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => _ });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(952112),
					l = i(782152),
					c = i(99547),
					d = i(37786),
					u = i(991310),
					p = i(318383),
					y = i(998813),
					h = i(998813),
					g = null,
					m = {
						ON_APPLICATION_EVENT_TRIGGERED: 'ON_APPLICATION_EVENT_TRIGGERED',
						HIDE_PAGE_VIEW_SUCCESS_MESSAGE: 'HIDE_PAGE_VIEW_SUCCESS_MESSAGE',
						SHOW_PAGE_VIEW_SUCCESS_MESSAGE: 'SHOW_PAGE_VIEW_SUCCESS_MESSAGE',
						HIDE_PAGE_VIEW_FAILURE_MESSAGE: 'HIDE_PAGE_VIEW_FAILURE_MESSAGE',
						SHOW_PAGE_VIEW_FAILURE_MESSAGE: 'SHOW_PAGE_VIEW_FAILURE_MESSAGE',
						HIDE_PAGE_VIEW_INFO_MESSAGE: 'HIDE_PAGE_VIEW_INFO_MESSAGE',
						SHOW_PAGE_VIEW_INFO_MESSAGE: 'SHOW_PAGE_VIEW_INFO_MESSAGE',
						HIDE_ALL_PAGE_VIEW_MESSAGES: 'HIDE_ALL_PAGE_VIEW_MESSAGES',
						ON_MESSAGE_CLOSED: 'ON_MESSAGE_CLOSED',
					},
					A = r()
						.View.extend(u.A)
						.extend({
							pageClassName: '',
							enableContainerCss: !1,
							enableSystemMessage: !0,
							events: {},
							currentInstanceId: function () {
								return g;
							},
							initialize: function (e) {
								if (
									((this.pageId = new Date().getTime()),
									(g = this.pageId),
									!e.userPreferences)
								)
									throw 'PageView: UserPreferences object required';
								e.pageClassName && (this.pageClassName = e.pageClassName),
									(this._systemMessage = null),
									(this._successMessage = null),
									(this._failureMessage = null),
									(this._infoMessage = null),
									(this.userPreferences = e.userPreferences),
									this.setupSigninUrl(),
									this.initializePage(e),
									this.delegateEvents(
										a().extend(
											{ 'click a': p.default.anchorTagHandler },
											this.events
										)
									);
								var t = this;
								(this.onDependenciesLoaded = a().wrap(
									this.onDependenciesLoaded,
									function (e, i) {
										if (t.currentInstanceId() === t.pageId)
											return e.call(this, i);
										console.log('Discarding data, new page has been loaded');
									}
								)),
									(this.render = a().wrap(this.render, function (e) {
										if (t.currentInstanceId() === t.pageId) {
											var i = e.call(this);
											return t.postRenderSetup(), i;
										}
										console.log('Discarding data, render ignored.');
									}));
							},
							postRenderSetup: function () {
								this.renderTooltips(),
									this.setupSmoothScroll(),
									this.disableScrollToTop ||
										y('.main-body').removeClass('dashboard').scrollTop(0),
									this.raiseApplicationEvent(o.A.PAGE_LOADED);
							},
							setupSmoothScroll: function () {
								this.$('a[data-scroll="smooth"]').click(function (e) {
									e.preventDefault();
									var t = h(this).attr('href'),
										i = h(t).offset().top - 50;
									h('html, body').stop().animate({ scrollTop: i }, 500);
								});
							},
							getBaseUrl: function () {
								return '/modern';
							},
							onPageUnloaded: function () {
								if (
									(this.unbind(null, null, this),
									'function' === typeof this.cleanUpReactComponents &&
										this.cleanUpReactComponents(),
									c.A.removeExpandCollapseHandlers(),
									this.pageClassName)
								) {
									var e = this.pageClassName.trim().split(' ');
									(e = a().map(e, function (e) {
										return 'body-' + e;
									})),
										y('body').removeClass(e.join(' '));
								}
							},
							addPageClass: function (e) {
								this.$el.addClass(e);
							},
							removePageClass: function (e) {
								this.$el.removeClass(e);
							},
							raiseApplicationEvent: function (e) {
								var t = [];
								t.push(this);
								for (var i = 0; i < arguments.length; i++) t.push(arguments[i]);
								this.trigger(m.ON_APPLICATION_EVENT_TRIGGERED, t);
							},
							viewerIsAuthenticated: function () {
								return this.userPreferences.viewerIsAuthenticated;
							},
							getQueryStringValue: function (e) {
								var t = document.URL,
									i = t.indexOf('?'),
									n = null;
								if (-1 !== i) {
									var s = new l.A().parseQueryString(t.substring(i + 1));
									a().has(s, e) && (n = s[e]);
								}
								return n;
							},
							setSystemMessage: function (e) {
								this._systemMessage = e;
							},
							getSystemMessage: function () {
								return this._systemMessage;
							},
							setSuccessMessage: function (e) {
								this._successMessage = e;
							},
							getSuccessMessage: function () {
								return this._successMessage;
							},
							setFailureMessage: function (e) {
								this._failureMessage = e;
							},
							getFailureMessage: function () {
								return this._failureMessage;
							},
							setInfoMessage: function (e) {
								this._infoMessage = e;
							},
							getInfoMessage: function () {
								return this._infoMessage;
							},
							hideSuccessMessage: function (e) {
								this.trigger(m.HIDE_PAGE_VIEW_SUCCESS_MESSAGE, e);
							},
							hideFailureMessage: function (e) {
								this.trigger(m.HIDE_PAGE_VIEW_FAILURE_MESSAGE, e);
							},
							hideInfoMessage: function (e) {
								this.trigger(m.HIDE_PAGE_VIEW_INFO_MESSAGE, e);
							},
							hideAllMessages: function (e) {
								this.trigger(m.HIDE_ALL_PAGE_VIEW_MESSAGES, e);
							},
							showSuccessMessage: function (e) {
								e && this.setSuccessMessage(e),
									this.trigger(
										m.SHOW_PAGE_VIEW_SUCCESS_MESSAGE,
										this.getSuccessMessage()
									);
							},
							showFailureMessage: function (e) {
								e && this.setFailureMessage(e),
									this.trigger(
										m.SHOW_PAGE_VIEW_FAILURE_MESSAGE,
										this.getFailureMessage()
									);
							},
							showInfoMessage: function (e) {
								e && this.setInfoMessage(e),
									this.trigger(
										m.SHOW_PAGE_VIEW_INFO_MESSAGE,
										this.getInfoMessage()
									);
							},
							showWaitCursor: function () {
								this.raiseApplicationEvent('SHOW_WAIT_CURSOR');
							},
							hideWaitCursor: function () {
								this.raiseApplicationEvent('HIDE_WAIT_CURSOR');
							},
							renderTooltips: function () {
								d.A.renderTooltips.call(this);
							},
							onMessageClosed: function () {},
							setupSigninUrl: function () {
								this.viewerIsAuthenticated() ||
									y('.nav-signin-container .nav-signin').attr(
										'href',
										this.getSigninUrl(window.location.href)
									);
							},
							getSigninUrl: function (e) {
								return window.location.origin + '/modern/auth/logout/?url=' + e;
							},
						});
				A.Events = m;
				const _ = A;
			},
			9787: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => _ });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(408822),
					l = i(29273),
					c = i(991310),
					d = i(85057),
					u = i(34581);
				const p = r().Model.extend({
					idAttribute: 'value',
					urlRoot: function () {
						return '/modern/system-service/preference/SystemPreferenceDisplay.systemMessage';
					},
					parse: function (e) {
						return e;
					},
				});
				var y = i(88450),
					h = i.n(y),
					g = i(998813),
					m = { SYSTEM_MESSAGE_RENDERED: 'SYSTEM_MESSAGE_RENDERED' },
					A = r()
						.View.extend(c.A)
						.extend({
							propertyFiles: ['/system-messages/system-messages'],
							initialize: function (e) {
								(this.template = a().template(h())),
									(this.systemMessage = new p()),
									(this.systemMessageText = e.systemMessageText),
									(this.shouldDisplayMessages = e.shouldDisplayMessages),
									(this.viewerUserPreferences = u.A);
							},
							render: function () {
								var e = [],
									t = this.systemMessage.get('value');
								this.shouldDisplayMessages &&
									(g.trim(t).length > 0 && e.push(this.getMessage(t)),
									g.trim(this.systemMessageText).length > 0 &&
										e.push(this.systemMessageText)),
									this.$el.html(
										this.template({
											Localizer: o.A,
											Personalizer: l.A,
											systemMessages: e,
										})
									),
									this.$el.attr('id', 'system-message');
							},
							getMessage: function (e) {
								var t = o.A.localize('translateThis'),
									i = this.viewerUserPreferences.get('preferredLocale');
								'en' == i ||
									(e +=
										' ' +
										('<a href="' +
											('http://translate.google.com/?hl=' +
												i +
												'#en|' +
												i +
												'|' +
												encodeURIComponent(e)) +
											'" target="_blank"><span style="font-size: 10px;">' +
											t +
											'</span></a>') +
										'.');
								return e;
							},
							onDependenciesLoaded: function () {
								var e = this.systemMessage.get('value');
								(g.trim(e).length > 0 ||
									g.trim(this.systemMessageText).length > 0) &&
									this.render(),
									this.trigger(m.SYSTEM_MESSAGE_RENDERED);
							},
							onModelsFailed: function () {
								'undefined' != typeof console &&
									'undefined' != typeof console.log &&
									console.log(arguments);
							},
							provideDependencies: function (e) {
								e.addModel({ model: this.systemMessage, required: !0 }),
									e.bind(
										d.A.Events.SYNCHRONIZED,
										this.onDependenciesLoaded,
										this
									),
									e.bind(
										d.A.Events.SYNCHRONIZE_FAILED,
										this.onModelsFailed,
										this
									);
							},
						});
				A.Events = m;
				const _ = A;
			},
			615567: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => dt });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(408822),
					l = i(29273),
					c = i(991310),
					d = i(85057),
					u = i(318383),
					p = i(576797),
					y = i(278938),
					h = i.n(y),
					g = { CLOSE: 'CLOSE' },
					m = r().View.extend({
						sheetTemplate: a().template(h()),
						events: { 'click .close': 'onSheetClosedClicked' },
						initialize: function (e) {
							if (!e.view) throw 'view is required for WidgetSheet';
							if ('undefined' == typeof e.customClasses)
								throw 'customClasses is required for WidgetSheet';
							(this.sheetTitle = e.sheetTitle),
								(this.customClasses = e.customClasses),
								(this.view = e.view),
								this.view.once('ON_VIEW_CLOSED', this.onUserClosedSheet, this);
							let t = this;
							window.addEventListener('resize', function (e) {
								null !== t.view && t.close();
							});
						},
						render: function () {
							var e = this.sheetTemplate({
								Localizer: o.A,
								sheetTitle: this.sheetTitle,
							});
							this.$el.addClass(this.customClasses),
								this.$el.addClass('widget-sheet'),
								this.$el.html(e),
								this.$('.widget-sheet-content').append(this.view.$el),
								this.view.render(),
								this.$el.slideToggle('500', 'easeOutCubic');
						},
						close: function () {
							if (null !== this.view) {
								this.view.onViewClosed && this.view.onViewClosed();
								var e = this;
								this.$el.slideToggle('500', 'easeOutCubic', function () {
									null !== e.view &&
										(e.view.remove(), (e.view = null), e.remove());
								}),
									e.trigger(g.CLOSE);
							}
						},
						onUserClosedSheet: function () {
							this.close();
						},
						onSheetClosedClicked: function () {
							this.close();
						},
					});
				m.Events = g;
				const A = m;
				var _ = i(680399),
					E = i.n(_),
					T = { CLOSE: 'CLOSE' },
					C = r().View.extend({
						template: a().template(E()),
						className: 'widget-message-sheet',
						events: {
							'click .widget-message-sheet-close': 'onErrorSheetClosedClicked',
						},
						initialize: function (e) {
							(this.message = e.message),
								(this.customClasses = e.customClasses),
								(this.timeout = e.timeout);
						},
						render: function () {
							this.$el.html(this.template({ Localizer: o.A })),
								this.$('.widget-message-sheet-content').append(this.message),
								this.customClasses && this.$el.addClass(this.customClasses),
								this.timeout &&
									setTimeout(
										function () {
											this.close();
										}.bind(this),
										this.timeout
									),
								this.$el.slideToggle(200, 'easeOutCubic');
						},
						close: function () {
							this.$el.slideToggle(
								200,
								'easeOutCubic',
								function () {
									this.remove();
								}.bind(this)
							),
								this.trigger(T.CLOSE);
						},
						onErrorSheetClosedClicked: function () {
							this.close();
						},
					});
				C.Events = T;
				const S = C;
				var I = i(922860),
					v = i.n(I),
					f = { CLOSE: 'CLOSE' },
					D = r().View.extend({
						sheetTemplate: a().template(v()),
						events: { 'click .close': 'onTakeoverClosedClicked' },
						initialize: function (e) {
							if (!e.view) throw 'view is required for WidgetTakeover';
							(this.customClasses = e.customClasses),
								(this.view = e.view),
								this.view.once(
									'ON_VIEW_CLOSED',
									this.onUserClosedTakeover,
									this
								);
						},
						render: function () {
							var e = this.sheetTemplate({
								Localizer: o.A,
								sheetTitle: this.sheetTitle,
							});
							this.$el.addClass('widget-takeover fade in'),
								this.$el.addClass(this.customClasses),
								this.$el.html(e),
								this.$('.widget-takeover-content').append(this.view.$el),
								this.view.render();
						},
						close: function () {
							this.view.onViewClosed && this.view.onViewClosed(),
								this.trigger(f.CLOSE);
						},
						onUserClosedTakeover: function () {
							this.close();
						},
						onTakeoverClosedClicked: function () {
							this.close();
						},
					});
				D.Events = f;
				const N = D;
				var R = i(258108),
					b = i(285282),
					L = i(498002),
					P = i(599301),
					O = i(355254),
					w = i(422460),
					F = i(702291),
					k = i(430836),
					U = i(48443),
					M = i(960474),
					G = i(34581),
					x = i(247725),
					B = i(532163),
					H = i.n(B),
					V = i(778684),
					W = i(363099),
					J = i(590695),
					Y = i(894024),
					$ = i.n(Y),
					j = i(228748),
					K = i(82040),
					z = i(183180),
					q = i(717776);
				const Q = (e) => {
					const {
						onClose: t,
						store: i,
						conversationCommentUuid: n,
						viewerSocialProfile: a,
						numberOfLikes: s,
					} = e;
					return (0, q.jsx)(K.Kq, {
						store: i,
						children: (0, q.jsx)(z.A, {
							isModalOpen: !0,
							onCloseModal: () => t(),
							viewerSocialProfile: a,
							numberOfLikes: s,
							conversationCommentUuid: n,
						}),
					});
				};
				var X = i(895538);
				const Z = { ON_COMMENT_LIKE_FAILED: 'ON_COMMENT_LIKE_FAILED' };
				var ee = r().View.extend({
					events: {
						'click .like-link': 'onLikeOrUnlikeCommentClicked',
						'click .js-like-count': 'onLikeNumberClicked',
					},
					initialize: function (e) {
						if (
							((this.template = a().template($())),
							(this.conversation = e.conversation),
							(this.connection = e.connection),
							(this.isPosting = e.isPosting),
							(this.commentContent = null),
							!this.conversation)
						)
							throw 'Conversation required in WidgetCommentView';
					},
					render: function () {
						var e = this.model.toJSON();
						let t = M.A.get('profileId'),
							i = this.conversation.get('ownerProfilePk');
						(e.nameDisplayValue = e.authorFullName
							? e.authorFullName
							: authorDisplayName),
							this.$el.html(
								this.template({
									comment: e,
									updated: e.updated,
									isPosting: this.isPosting,
									dayDisplay: w.Ay.formatRelativeTime(
										F.A.parseISO(this.model.get('createDate'))
									),
									Localizer: o.A,
									viewerProfilePk: t,
									conversationOwnerPk: i,
								})
							),
							this.isPosting ||
								((this.likeView = new J.A({
									el: this.$('.entry-like'),
									conversationUuid: this.model.get('conversationCommentUuid'),
									liked: e.likedByUser,
									numberOfLikes: e.numberOfLikes,
									connections: this.connections,
									resourceType: 'DAILY_SUMMARY',
									resourceId: this.model.get('uuid'),
									isComment: !0,
								})),
								this.likeView.on(
									J.A.Events.ON_ADD_LIKE_FAILED,
									this.onLikeViewAddLikeFailed,
									this
								),
								this.likeView.render()),
							this.renderCommentContent(e);
					},
					onLikeViewAddLikeFailed: function () {
						this.trigger(Z.ON_COMMENT_LIKE_FAILED);
					},
					onLikeNumberClicked: function (e) {
						e.preventDefault();
						let t = this.model.toJSON();
						(this.NewsFeedCommentLikesModalWrapper = new W.A()),
							this.$('.like-modal-entry').length > 0 &&
								this.NewsFeedCommentLikesModalWrapper.renderComponent(
									Q,
									this.$('.like-modal-entry')[0],
									{
										viewerSocialProfile: {
											fullName: M.A.attributes.fullName,
											displayName: M.A.attributes.displayName,
											profileId: M.A.attributes.profileId,
										},
										numberOfLikes: t.numberOfLikes,
										conversationCommentUuid: this.model.get(
											'conversationCommentUuid'
										),
										onClose: a().bind(function () {
											this.$('.like-modal-entry').remove(),
												this.$('.comment-body').append(
													'<span class="like-modal-entry"></span>'
												);
										}, this),
									}
								);
					},
					onLikeOrUnlikeCommentClicked: function (e) {
						e.preventDefault(),
							this.model.get('likedByUser')
								? this.removeCommentLike()
								: this.addCommentLike(),
							this.render();
					},
					removeCommentLike: function () {
						this.model.set('likedByUser', !1);
						var e = this.model.get('numberOfLikes');
						e--, this.model.set('numberOfLikes', e);
						var t = new U.A({
							conversationCommentUuid: this.model.get(
								'conversationCommentUuid'
							),
						});
						t.once('sync', this.deleteCommentLike, this), t.fetch();
					},
					deleteCommentLike: function (e) {
						e.destroy();
					},
					addCommentLike: function () {
						var e = new U.A({
							conversationCommentUuid: this.model.get(
								'conversationCommentUuid'
							),
							displayName: G.A.get('displayName'),
						});
						e.on('sync', this.onCommentLikeSuccess, this),
							e.on('error', this.onCommentLikeFailed, this),
							e.save();
					},
					onCommentLikeSuccess: function () {
						this.model.set('likedByUser', !0);
						let e = this.model.get('numberOfLikes');
						(e += 1), this.model.set('numberOfLikes', e);
					},
					onCommentLikeFailed: function (e, t) {
						429 === t.status && this.trigger(Z.ON_COMMENT_LIKE_FAILED);
					},
					renderCommentContent: function (e) {
						(this.commentContent = new W.A()),
							this.commentContent.renderComponent(
								X.A,
								this.$('.comment-body-text')[0],
								{ commentBlockList: e.commentBlockList, body: e.body }
							);
					},
				});
				ee.Events = Z;
				const te = ee;
				var ie = i(668712),
					ne = i(547052),
					ae = i(996694),
					se = i(946186),
					re = i.n(se),
					oe = i(882155),
					le = i.n(oe),
					ce = i(127433),
					de = i.n(ce),
					ue = i(188626),
					pe = i.n(ue),
					ye = i(108990),
					he = i.n(ye),
					ge = i(389827),
					me = i.n(ge),
					Ae = i(473487),
					_e = {};
				(_e.styleTagTransform = me()),
					(_e.setAttributes = pe()),
					(_e.insert = de().bind(null, 'head')),
					(_e.domAPI = le()),
					(_e.insertStyleElement = he());
				re()(Ae.A, _e);
				const Ee = Ae.A && Ae.A.locals ? Ae.A.locals : void 0,
					Te = ({
						commentBody: e,
						commentBlockList: t,
						handleChange: i,
						viewerDisplayName: n,
						portalElement: a,
						ignorePortalLayout: s,
					}) =>
						(0, q.jsx)(ae.A, {
							commentBody: e,
							commentBlockList: t,
							viewerDisplayName: n,
							portalElement: a,
							ignorePortalLayout: s,
							handleChange: i,
							widthStyle: Ee.container,
						});
				var Ce = i(890987),
					Se = {};
				(Se.styleTagTransform = me()),
					(Se.setAttributes = pe()),
					(Se.insert = de().bind(null, 'head')),
					(Se.domAPI = le()),
					(Se.insertStyleElement = he());
				re()(Ce.A, Se);
				const Ie = Ce.A && Ce.A.locals ? Ce.A.locals : void 0,
					ve = ({
						viewerDisplayName: e,
						initialComment: t,
						initialCommentBlockList: i,
						updateContentView: n,
						backToContentView: a,
						portalElement: s,
						ignorePortalLayout: r,
					}) => {
						const [o, l] = (0, j.useState)(t),
							[c, d] = (0, j.useState)(i),
							[u, p] = (0, j.useState)(!1);
						return (0, q.jsxs)(q.Fragment, {
							children: [
								(0, q.jsx)(Te, {
									viewerDisplayName: e,
									commentBody: o,
									commentBlockList: c,
									handleChange: (e, t) => {
										p(0 === e.length), l(e), d(t);
									},
									portalElement: s,
									ignorePortalLayout: r,
								}),
								(0, q.jsx)('div', {
									className: Ie.controlArea,
									children: (0, q.jsxs)('div', {
										className: Ie.buttonGroup,
										children: [
											(0, q.jsx)(ie.$n, {
												color: 'primary',
												size: 'small',
												disabled: !1,
												reverse: !0,
												onClick: a,
												children: (0, q.jsx)(ne.A, {
													ns: 'common',
													content: 'button_cancel',
												}),
											}),
											(0, q.jsx)(ie.$n, {
												color: 'primary',
												size: 'small',
												disabled: u,
												reverse: u,
												onClick: () => n(o, c),
												children: (0, q.jsx)(ne.A, {
													ns: 'common',
													content: 'button_save',
												}),
											}),
										],
									}),
								}),
							],
						});
					};
				var fe = i(998813),
					De = {
						COMMENT_DELETED: 'COMMENT_DELETED',
						ON_COMMENT_LIKE_FAILED: 'ON_COMMENT_LIKE_FAILED',
					},
					Ne = r().View.extend({
						events: {
							'click .delete': 'onDeleteCommentClicked',
							'click .profile-link': 'onProfileLinkClicked',
						},
						initialize: function (e) {
							if (
								((this.template = a().template(H())),
								(this.conversation = e.conversation),
								(this.connection = e.connection),
								(this.supportEditComment = e.supportEditComment),
								(this.isPosting = e.isPosting),
								(this.portalElement = e.portalElement),
								!this.conversation)
							)
								throw 'Conversation required in WidgetCommentView';
							this.showEditView = !1;
						},
						getDeleteMenuItem: function (e) {
							return {
								key: `${e}-menu-delete`,
								label: o.A.localize('button_delete'),
								action: () => {
									new x.A({
										modalTitle: o.A.localize('delete_comment'),
										message: o.A.localize('delete_comment_confirmation'),
										confirmationTextKey: 'button_delete',
										cancelTextKey: 'button_cancel',
										onSaveButtonClicked: a().bind(function () {
											this.model.destroy(), this.remove();
											let e = this.conversation.get('numberOfComments');
											return (
												this.conversation.set('numberOfComments', --e || 0), !0
											);
										}, this),
									}).render();
								},
							};
						},
						generateEditCommentView: function (e, t, i) {
							this.$(`.${t}`).append(`<div class='${i}'></div>`);
							const n = this.model.toJSON();
							(this.newsFeedWidgetEditCommentView = new W.A()),
								this.$(`.${i}`).length > 0 &&
									this.newsFeedWidgetEditCommentView.renderComponent(
										ve,
										this.$(`.${i}`)[0],
										{
											viewerDisplayName: M.A.get('displayName'),
											portalElement: this.portalElement,
											initialComment: n.body,
											initialCommentBlockList: n.commentBlockList,
											updateContentView: a().bind(function (n, s) {
												this.model.set('body', n),
													this.model.set('commentBlockList', s),
													this.model.save(null, {
														url: `/conversation-service/conversation/comment/${this.model.get('conversationUuid')}/${this.model.get('conversationCommentUuid')}`,
														backend: 'gcapi',
														type: 'PUT',
														success: a().bind(function () {
															this.$(`.${i}`).remove(),
																this.generateCommentContentView(t, i, !1);
														}, this),
													}),
													this.switchToEditCommentView(!1, e);
											}, this),
											backToContentView: a().bind(function () {
												this.switchToEditCommentView(!1, void 0, !1);
											}, this),
										}
									);
						},
						generateCommentContentView: function (e, t, i = !0) {
							let n = fe('.tooltip');
							'undefined' !== typeof n && null !== n && n.remove(),
								this.$(`.${e}`).append(`<div class='${t}'></div>`),
								(this.widgetCommentContentView = new te({
									el: this.$(`.${t}`),
									model: this.model,
									isPosting: i,
									conversation: this.conversation,
									resourceType: this.resourceType,
									resourceId: this.resourceId,
								})),
								this.widgetCommentContentView.on(
									te.Events.ON_COMMENT_LIKE_FAILED,
									this.onCommentLikeFailed,
									this
								),
								this.widgetCommentContentView.render(),
								this.renderCommentManagementMenu(
									this.model.toJSON().userProfilePk === M.A.get('profileId'),
									this.conversation.get('ownerProfilePk') ===
										M.A.get('profileId')
								);
						},
						switchToEditCommentView: function (e, t, i = !0) {
							let n = 'media-body.comment-body',
								a = 'comment-body-content';
							e
								? (this.widgetCommentContentView.remove(),
									this.generateEditCommentView(t, n, a))
								: (this.$(`.${a}`).remove(),
									this.generateCommentContentView(n, a, i));
						},
						getEditMenuItem: function (e) {
							return {
								key: `${e}-menu-edit`,
								label: o.A.localize('button_edit'),
								action: () => {
									this.switchToEditCommentView(!0, e);
								},
							};
						},
						getCommentEditMenuItems: function (e, t, i) {
							let n = [];
							return (
								t && this.supportEditComment && n.push(this.getEditMenuItem(e)),
								(t || i) && n.push(this.getDeleteMenuItem(e)),
								n
							);
						},
						renderCommentManagementMenu: function (e, t) {
							if (this.isPosting) return;
							this.commentManagementModal = new W.A();
							let i = this.getCommentEditMenuItems(
								this.model.get('uuid'),
								e,
								t
							);
							this.$('.deleteModal').length > 0 &&
								this.commentManagementModal.renderComponent(
									V.A,
									this.$('.deleteModal')[0],
									{ menuItems: i }
								);
						},
						render: function () {
							var e = this.model.toJSON();
							let t = M.A.get('profileId'),
								i = this.conversation.get('ownerProfilePk');
							(e.nameDisplayValue = e.authorFullName
								? e.authorFullName
								: authorDisplayName),
								this.$el.addClass('media comment'),
								this.$el.html(this.template({ comment: e })),
								(this.widgetCommentContentView = new te({
									el: this.$('.comment-body-content'),
									model: this.model,
									conversation: this.conversation,
									resourceType: this.resourceType,
									resourceId: this.resourceId,
									isPosting: this.isPosting,
								})),
								this.widgetCommentContentView.on(
									te.Events.ON_COMMENT_LIKE_FAILED,
									this.onCommentLikeFailed,
									this
								),
								this.widgetCommentContentView.render();
							let n = e.userProfilePk === t,
								a = i === t;
							this.renderCommentManagementMenu(n, a);
						},
						onProfileLinkClicked: function (e) {
							e.preventDefault(),
								r().history.navigate(
									'/profile/' + this.model.get('authorDisplayName'),
									{ trigger: !0 }
								);
						},
						onDeleteCommentClicked: function (e) {
							e.preventDefault();
							var t = this;
							new x.A({
								modalTitle: o.A.localize('delete_comment'),
								message: o.A.localize('delete_comment_confirmation'),
								confirmationTextKey: 'button_delete',
								cancelTextKey: 'button_cancel',
								onSaveButtonClicked: function () {
									t.model.destroy(), t.remove();
									var e = t.conversation.get('numberOfComments');
									return t.conversation.set('numberOfComments', --e || 0), !0;
								},
							}).render();
						},
						onCommentLikeFailed: function () {
							this.trigger(De.ON_COMMENT_LIKE_FAILED);
						},
					});
				Ne.Events = De;
				const Re = Ne;
				var be = i(118956),
					Le = i(80879);
				Le.Ay.loadNamespaces(['news_feed']);
				var Pe = {
						COMMENT_ADDED: 'COMMENT_ADDED',
						POST_NEW_COMMENT_SUCCESS: 'POST_NEW_COMMENT_SUCCESS',
						POST_NEW_COMMENT_FAILED: 'POST_NEW_COMMENT_FAILED',
					},
					Oe = r().View.extend({
						initialize: function (e) {
							(this.resourceType = e.resourceType),
								(this.resourceId = e.resourceId),
								(this.conversation = e.conversation),
								(this.portalElement = e.portalElement),
								(this.rcv = null),
								(this.notificationElement = null),
								(this.newComment = ''),
								(this.newCommentBlockList = null);
						},
						onAddCommentClicked: function (e, t) {
							(this.newComment = e.trim()),
								(this.newCommentBlockList = t),
								this.conversation.isNew()
									? (this.conversation.once('sync', this.addComment, this),
										this.conversation.save())
									: this.addComment();
						},
						addComment: function () {
							if (0 != this.newComment.length) {
								var e = new k.A({
									conversationUuid: this.conversation.get('conversationUuid'),
									conversationCommentUuid: null,
									body: this.newComment,
									commentBlockList: this.newCommentBlockList,
									numberOfLikes: 0,
									authorFullName: M.A.get('fullName'),
									authorDisplayName: M.A.get('displayName'),
									authorImageUrl: M.A.get('profileImageUrlSmall'),
								});
								this.trigger(Pe.COMMENT_ADDED, e),
									e.save(null, {
										success: a().bind(function () {
											const t = this.conversation.get('numberOfComments');
											this.conversation.set('numberOfComments', t + 1),
												(this.submitting = !1),
												this.renderComponent(Date.now()),
												this.trigger(Pe.POST_NEW_COMMENT_SUCCESS, e);
										}, this),
										error: (e, t) => {
											this.onCommentSavedFailed(t.status);
										},
									}),
									(this.newComment = ''),
									(this.submitting = !0),
									this.renderComponent(this.renderKey);
							}
						},
						onCommentSaved: function (e) {
							this.trigger(Pe.COMMENT_ADDED, e);
						},
						onCommentSavedFailed: function (e) {
							if (429 === e)
								return (
									this.trigger(Pe.POST_NEW_COMMENT_FAILED, 429),
									(this.submitting = !1),
									void this.renderComponent(this.renderKey)
								);
							this.reactNotification ||
								(this.notificationElement ||
									(this.notificationElement = this.$el.append(
										'<div class="js-widget-error-notification-placeholder" />'
									)),
								(this.reactNotification = new W.A())),
								this.reactNotification.renderComponent(
									ie.Eg,
									this.$('.js-widget-error-notification-placeholder')[0],
									{
										key: Date.now(),
										open: !0,
										autoClose: !0,
										children: Le.Ay.t('news_feed:label_unable_to_post_comment'),
									}
								),
								this.trigger(Pe.POST_NEW_COMMENT_FAILED),
								(this.submitting = !1),
								this.renderComponent(this.renderKey);
						},
						render: function () {
							this.renderComponent(Date.now());
						},
						renderComponent: function (e) {
							(this.renderKey = e),
								(this.rcv = new W.A()),
								this.rcv.renderComponent(be.A, this.el, {
									key: e,
									portalElement: this.portalElement,
									viewerSocialProfile: M.A.toJSON(),
									onAddComment: this.onAddCommentClicked.bind(this),
									submitting: this.submitting,
								});
						},
					});
				Oe.Events = Pe;
				const we = Oe;
				var Fe = i(790332),
					ke = i.n(Fe),
					Ue = i(928456),
					Me = {
						ON_RENDERED: 'ON_RENDERED',
						ON_NEW_COMMENT: 'ON_NEW_COMMENT',
						ON_DELETE_COMMENT: 'ON_DELETE_COMMENT',
						ON_CLOSE: 'ON_CLOSE',
					},
					Ge = r().View.extend({
						events: {
							'click .show-previous-comments': 'onShowMoreButtonClicked',
						},
						initialize: function (e) {
							if (!e.resourceType)
								throw 'Resource type required for WidgetCommentsView';
							if (!e.resourceId)
								throw 'Resource id required for WidgetCommentsView';
							(this.resourceType = e.resourceType),
								(this.resourceId = e.resourceId),
								(this.conversation = e.conversation),
								(this.viewerConnections = e.viewerConnections),
								(this.supportEditComment = e.supportEditComment),
								(this.$commentContainer = null),
								(this.$commentSet = null),
								(this.template = a().template(ke())),
								(this.portalElement = e.portalElement);
						},
						loadContent: function () {
							this.model.fetchMore();
						},
						render: function () {
							var e = this.template({ Localizer: o.A });
							this.$el.html(e),
								(this.$commentContainer = this.$('.comment-container')),
								(this.$commentSet = this.$('.comment-item')),
								(this.addCommentView = new we({
									conversation: this.conversation,
									resourceType: this.resourceType,
									resourceId: this.resourceId,
									portalElement: this.portalElement,
								})),
								this.addCommentView.bind(
									we.Events.COMMENT_ADDED,
									this.onCommentAdded,
									this
								),
								this.addCommentView.bind(
									we.Events.POST_NEW_COMMENT_SUCCESS,
									this.updateTheLastPost,
									this
								),
								this.addCommentView.bind(
									we.Events.POST_NEW_COMMENT_FAILED,
									this.onCommentAddFailed,
									this
								),
								this.addCommentView.render(),
								this.$el.append(this.addCommentView.$el),
								this.collection.each(function (e) {
									this.createCommentView(e, !1);
								}, this),
								this.collection.length > 0 &&
									this.collection.hasMoreMembers() &&
									this.$('.show-previous-comments').show(),
								this.trigger(Me.ON_RENDERED);
						},
						createCommentView: function (e, t) {
							var i = e.get('authorDisplayName');
							if (this.viewerConnections)
								var n = this.viewerConnections.findConnection(i);
							var a = new Re({
								model: e,
								conversation: this.conversation,
								connection: n,
								supportEditComment: this.supportEditComment,
								isPosting: t,
								portalElement: this.portalElement,
							});
							a.on(
								Re.Events.ON_COMMENT_LIKE_FAILED,
								this.onCommentLikeFailed,
								this
							),
								t || e.once('destroy', this.onCommentDeleted, this),
								a.render(),
								this.$commentSet.append(a.el);
						},
						onCommentAdded: function (e) {
							this.commentAddedByIsPosting(e, !0);
						},
						onCommentAddFailed: function (e) {
							429 === e && Ue.A.renderCommentReachedLimitDialog(!0),
								this.removeTheLastPost();
						},
						onCommentLikeFailed: function () {
							Ue.A.renderLikeReachedLimitDialog(!0);
						},
						updateTheLastPost: function (e) {
							this.removeTheLastPost(), this.commentAddedByIsPosting(e, !1);
						},
						commentAddedByIsPosting: function (e, t) {
							this.collection.add(e),
								this.createCommentView(e, t),
								this.scrollToBottom(),
								t ||
									(this.trigger(Me.ON_NEW_COMMENT, this.conversation, e),
									this.trigger(Me.COMMENT_ADDED, e));
						},
						removeTheLastPost: function () {
							this.$('.comment-item').children().last().remove(),
								this.collection.pop();
						},
						onCommentDeleted: function () {
							this.trigger(Me.ON_DELETE_COMMENT, this.conversation);
						},
						onViewClosed: function () {
							this.trigger(Me.ON_CLOSE, this.model), this.$el.remove();
						},
						onCloseButtonClicked: function () {
							this.$el.remove();
						},
						scrollToBottom: function () {
							this.$commentContainer.scrollTop(this.$commentSet.height());
						},
						onShowMoreButtonClicked: function () {
							this.collection.once(
								O.A.Events.ON_MORE_MEMBERS_FETCHED,
								this.onFetchMoreSuccess,
								this
							),
								this.collection.fetchNext();
						},
						onFetchMoreSuccess: function () {
							this.render();
						},
					});
				Ge.Events = Me;
				const xe = Ge;
				var Be = i(719383),
					He = i(620800),
					Ve = i.n(He),
					We = i(586192),
					Je = i.n(We),
					Ye = i(158978),
					$e = i.n(Ye),
					je = i(154763),
					Ke = i.n(je),
					ze = i(968541),
					qe = i.n(ze),
					Qe = i(91644),
					Xe = i(517023),
					Ze = i(787006),
					et = i(998813),
					tt = i(998813),
					it = r().View.extend(c.A);
				it.prototype.Loadable.Events.ON_WIDGET_STATE_CHANGED =
					'ON_WIDGET_STATE_CHANGED';
				var nt = {
						ON_APPLICATION_EVENT_TRIGGERED: 'ON_APPLICATION_EVENT_TRIGGERED',
						WIDGET_RENDERED: 'WIDGET_RENDERED',
					},
					at = {
						IS_BEING_DRAGGED: 'IS_BEING_DRAGGED',
						STATIONARY: 'STATIONARY',
					},
					st = 'PAGE_PREVIOUS',
					rt = 'PAGE_NEXT',
					ot = 'load-status',
					lt = 'load-error',
					ct = it.extend({
						frameTemplate: a().template(Ve()),
						headerTemplate: a().template(Je()),
						footerTemplate: a().template($e()),
						errorTemplate: a().template(Ke()),
						events: {
							'click .widget-previous': 'onBtnPreviousClicked',
							'click .widget-next': 'onBtnNextClicked',
							'click .menuStateSelection': 'onStateMenuSelected',
							'click .remove-widget': 'onRemoveMenuSelected',
							'click .icon-add': 'onAddButtonClicked',
							'click .btn-comment': 'onCommentIconClicked',
							'click .btn-comment-number': 'onCommentNumberClicked',
							'click a': 'onAnchorTagClicked',
							'click .icon-help': 'onHelpIconClicked',
						},
						navigationDirection: 'left',
						shareUrl: null,
						sharePrivacy: 'private',
						initialize: function (e) {
							if (!e.userPreferences)
								throw 'WidgetView: User Preferences object missing.';
							if (!e.widgetDefinition)
								throw 'WidgetView: WidgetDefinition object missing.';
							if (!e.widgetState)
								throw 'WidgetView: Widget state object missing.';
							if (
								((this.userPreferences = e.userPreferences),
								(this.userProfile = e.userProfile),
								(this.loadStartTime = null),
								(this.elapsedLoadTime = null),
								(this.template = null),
								(this.widgetDefinition = e.widgetDefinition),
								(this.widgetState = e.widgetState),
								(this.pageIndex = 0),
								(this.currentWidgetStateView = null),
								(this.selectedMenuKeys = []),
								(this.instanceMenuGroups = []),
								(this.instanceFooterActionGroups = []),
								(this.dragStatus = at.STATIONARY),
								(this.applicationEventInstances = []),
								(this.isFetchingMore = !1),
								(this.nextButtonEnabled = !0),
								(this.widgetLoaded = !1),
								(this.allEvents = {}),
								this.menuGroups || (this.menuGroups = []),
								this.footerActionGroups || (this.footerActionGroups = []),
								!this.userPreferences)
							)
								throw 'UserPreferences required for widget.';
							this.removeWidgetViewsNotInDatabase(),
								this.convertChildViewsToWidgetWidgetStateViews();
							var t = this.getCurrentWidgetView();
							if (!t)
								throw (
									'View ' +
									o.A.localize(this.widgetDefinition.get('title_key')) +
									'-' +
									o.A.localize(this.widgetState.get('viewName')) +
									' artifact not found.'
								);
							(t.navigationDirection = t.navigationDirection || 'left'),
								this.widgetEvents
									? (this.allEvents = a().extend(
											this.events,
											this.widgetEvents
										))
									: (this.allEvents = this.events),
								this.delegateEvents(this.allEvents),
								this.setupMenuHandling(),
								this.setupFooterActions(),
								this.setupApplicationEvents(),
								'undefined' != typeof this.initializeWidget &&
									this.initializeWidget.call(this, e),
								this.once(
									this.Loadable.Events.ON_DEPENDENCIES_LOADED,
									this.onWidgetViewDependenciesLoaded,
									this
								),
								this.compileTemplate(),
								this.widgetState.once(
									'sync',
									this.updateWidgetStateIdInDom,
									this
								),
								this.applicationEventInstances.push({
									eventName: 'WidgetViewEvent',
									handlerName: 'widgetViewEventHandler',
									context: this,
								}),
								this.applicationEventInstances.push({
									eventName: 'WidgetStateViewEvent',
									handlerName: 'widgetStateViewEventHandler',
									context: this,
								});
						},
						widgetStateViewEventHandler: function (e, t, i, n) {
							if (
								this.currentWidgetStateView &&
								this.currentWidgetStateView.widgetState.attributes.viewName ===
									t
							) {
								Object.assign(this.currentWidgetStateView, n);
								try {
									i && i.bind(this)();
								} catch (a) {
									console.log(a);
								}
							}
						},
						widgetViewEventHandler: function (e, t, i, n) {
							if (
								this.widgetState &&
								this.widgetState.attributes.viewName === t
							) {
								Object.assign(this, n);
								try {
									i && i.bind(this)();
								} catch (a) {
									console.log(a);
								}
							}
						},
						removeWidgetViewsNotInDatabase: function () {
							var e = [];
							a().each(
								this.viewStates,
								function (t) {
									a().each(
										t.views,
										function (e) {
											var i = [];
											this.widgetDefinition.findView(t.name, e.name) ||
												i.push(e),
												a().each(
													i,
													function (e) {
														t.views = a().without(t.views, e);
													},
													this
												);
										},
										this
									),
										0 == t.views.length && e.push(t);
								},
								this
							),
								a().each(
									e,
									function (e) {
										this.viewStates = a().without(this.viewStates, e);
									},
									this
								);
						},
						setupApplicationEvents: function () {
							var e = this.getCurrentWidgetView();
							for (var t in e.applicationEvents)
								if (e.applicationEvents.hasOwnProperty(t)) {
									var i = e.applicationEvents[t];
									this.applicationEventInstances.push({
										eventName: t,
										handlerName: i,
										context: e,
									});
								}
							for (t in this.applicationEvents)
								this.applicationEvents.hasOwnProperty(t) &&
									((i = this.applicationEvents[t]),
									this.applicationEventInstances.push({
										eventName: t,
										handlerName: i,
										context: this,
									}));
						},
						setupMenuHandling: function () {
							var e = this.getCurrentWidgetView();
							a().each(
								this.menuGroups,
								function (e) {
									var t = this.cloneMenuGroup(e);
									this.instanceMenuGroups.push(t),
										a().each(
											t.menuItems,
											function (e) {
												this.allEvents['click .js-' + e.key] = e.handlerName;
											},
											this
										);
								},
								this
							),
								this.delegateEvents(this.allEvents);
							var t = [];
							e.menuGroups &&
								(a().each(
									e.menuGroups,
									function (e) {
										var i = this.cloneMenuGroup(e);
										this.instanceMenuGroups.push(i),
											t.push(i),
											a().each(
												i.menuItems,
												function (e) {
													'undefined' != typeof e.handlerName &&
														et.trim(e.handlerName).length > 0 &&
														(this.allEvents['click .js-' + e.key] =
															'onChildWidgetStateViewHandlerClicked'),
														a().each(
															e.childMenuItems,
															function (e) {
																this.allEvents[
																	'click .js-' + this.escapeKey(e.key)
																] = 'onChildWidgetStateViewHandlerClicked';
															},
															this
														);
												},
												this
											);
									},
									this
								),
								this.delegateEvents(this.allEvents));
						},
						setupFooterActions: function () {
							var e = this.getCurrentWidgetView();
							a().each(
								this.footerActionGroups,
								function (e) {
									this.cloneFooterActionGroup(e);
									this.instanceFooterActionGroups.push(e),
										a().each(
											e.actions,
											function (e) {
												this.allEvents['click .js-' + e.key] = e.handlerName;
											},
											this
										);
								},
								this
							),
								this.delegateEvents(this.allEvents);
							var t = [];
							e.footerActionGroups &&
								(a().each(
									e.footerActionGroups,
									function (e) {
										var i = this.cloneFooterActionGroup(e);
										this.instanceFooterActionGroups.push(i),
											t.push(i),
											a().each(
												i.actions,
												function (e) {
													'undefined' != typeof e.handlerName &&
														et.trim(e.handlerName).length > 0 &&
														(this.allEvents['click .js-' + e.key] =
															'footerActionHandler');
												},
												this
											);
									},
									this
								),
								this.delegateEvents(this.allEvents));
						},
						escapeKey: function (e) {
							return e.indexOf('.') > -1 && (e = e.replace(/\./g, '\\.')), e;
						},
						cloneMenuGroup: function (e) {
							for (
								var t = { groupName: e.groupName, menuItems: [] }, i = 0;
								i < e.menuItems.length;
								i++
							) {
								var n = this.cloneMenuItem(e.menuItems[i]);
								(n.childMenuItems = []),
									t.menuItems.push(n),
									e.menuItems[i].childMenuItems &&
										(a().each(
											e.menuItems[i].childMenuItems,
											function (e) {
												t.menuItems[i].childMenuItems.push(
													this.cloneMenuItem(e)
												);
											},
											this
										),
										(t.menuItems[i].childMenuItems = a().sortBy(
											t.menuItems[i].childMenuItems,
											function (e) {
												return e.index;
											}
										)));
							}
							return (
								(t.menuItems = a().sortBy(t.menuItems, function (e) {
									return e.index;
								})),
								t
							);
						},
						cloneMenuItem: function (e) {
							return {
								key: e.key,
								handlerName: e.handlerName,
								index: e.index,
								icon: e.icon,
								aria: e.aria,
								url: e.url,
							};
						},
						cloneFooterActionGroup: function (e) {
							for (
								var t = { groupName: e.groupName, actions: [] }, i = 0;
								i < e.actions.length;
								i++
							) {
								var n = this.cloneFooterAction(e.actions[i]);
								t.actions.push(n);
							}
							return (
								(t.actions = a().sortBy(t.actions, function (e) {
									return e.index;
								})),
								t
							);
						},
						cloneFooterAction: function (e) {
							return {
								key: e.key,
								handlerName: e.handlerName,
								index: e.index,
								icon: e.icon,
								show: e.show,
								title: e.title,
								link: e.link,
								aria: e.aria,
							};
						},
						onChildWidgetStateViewHandlerClicked: function (e) {
							e.preventDefault();
							var t = this.getCurrentWidgetView(),
								i = et(e.currentTarget),
								n = !1,
								s = null;
							a().each(
								this.instanceMenuGroups,
								function (e) {
									for (var a = 0; a < e.menuItems.length; ++a) {
										var r = e.menuItems[a];
										if (i.is('.js-' + r.key))
											t[r.handlerName]
												? (t[r.handlerName].apply(t, arguments), (n = !0))
												: (s = r.handlerName);
										else {
											var o = r.childMenuItems;
											if (o)
												for (var l = 0; l < o.length; l++) {
													var c = o[l];
													i.is('.js-' + this.escapeKey(c.key)) &&
														(t[c.handlerName]
															? (t[c.handlerName].apply(t, arguments), (n = !0))
															: (s = c.handlerName));
												}
										}
									}
								},
								this
							),
								!n && this[s]
									? this[s].apply(this, arguments)
									: t.subView &&
										'function' === typeof t.subView[s] &&
										t.subView[s].apply(t.subView, arguments);
						},
						footerActionHandler: function (e) {
							e.preventDefault();
							var t = this.getCurrentWidgetView(),
								i = et(e.currentTarget),
								n = !1,
								s = null;
							a().each(
								this.instanceFooterActionGroups,
								function (e) {
									for (var a = 0; a < e.actions.length; ++a) {
										var r = e.actions[a];
										i.is('.js-' + r.key) &&
											(t[r.handlerName]
												? (t[r.handlerName].apply(t, arguments), (n = !0))
												: (s = r.handlerName));
									}
								},
								this
							),
								!n && this[s] && this[s].apply(this, arguments);
						},
						convertChildViewsToWidgetWidgetStateViews: function () {
							var e = this.widgetState.get('stateName'),
								t = this.widgetState.get('viewName');
							a().each(
								this.viewStates,
								function (i) {
									a().each(
										i.views,
										function (n) {
											var a = n.widgetStateView;
											if ('undefined' != typeof a) {
												if (!n.processed) {
													for (var s in n.widgetStateView.prototype) {
														var r = n.widgetStateView.prototype[s];
														'function' != typeof r && (n[s] = r);
													}
													(n.shareUrl = n.widgetStateView.prototype.shareUrl),
														(n.sharePrivacy =
															n.widgetStateView.prototype.sharePrivacy);
												}
												(n.processed = !0),
													i.name == e &&
														n.name == t &&
														(this.currentWidgetStateView = new a({
															widgetState: this.widgetState,
															widgetView: this,
															userPreferences: this.userPreferences,
															userProfile: this.userProfile,
														}));
											}
										},
										this
									);
								},
								this
							);
						},
						getDisplayName: function () {
							return this.userPreferences.get('displayName');
						},
						render: function () {
							var e = this.widgetState.get('stateName'),
								t = this.widgetState.get('viewName'),
								i = this.findState(e),
								n = this.getCurrentWidgetView(),
								s = this.numLoadedPages(e, t),
								r = this.maxPage(e, t);
							this.widgetState.id || this.$el.hide();
							var c = 0 != a().result(n, 'showFooter');
							this.$el.empty(),
								this.$el.append(this.frameTemplate({ showFooter: c })),
								this.$el.addClass('widget'),
								this.$el.data('widgetstateid', this.widgetState.id);
							var d = this.$('.widget-content');
							n.stateClassName && this.$el.addClass(n.stateClassName);
							var p = {
									Localizer: o.A,
									url: u.default.url,
									Personalizer: l.A,
									state: i,
									view: n,
									pageIndex: this.pageIndex,
								},
								y = null;
							if (this.isLoaded()) {
								this.$el.removeClass(ot),
									a().extend(p, this.provideModels(e, t, this.pageIndex));
								try {
									this.$el.removeClass(lt),
										(this.widgetLoaded = !0),
										(y = s > 0 ? this.template(p) : this.noDataTemplate(p));
								} catch (h) {
									return (
										console.log(h.message), void this.renderError(h.message)
									);
								}
							} else this.$el.addClass(ot), (y = this.loadingTemplate);
							d.append(y),
								'undefined' != typeof n.el && n.setElement(d),
								this.closeMessageSheet(),
								this.widgetLoaded && (this.renderHeader(), this.renderFooter()),
								'undefined' != typeof this.postRender &&
									this.postRender.call(this, e, t, this.pageIndex),
								this.trigger(nt.WIDGET_RENDERED, this),
								s > 0 &&
									this.pageIndex >= s - 2 &&
									this.pageIndex < r &&
									s - 1 < r &&
									!this.isFetchingMore &&
									((this.isFetchingMore = !0),
									this.fetchMore(),
									(this.fetchMoreTimer = setTimeout(
										a().bind(this.onFetchMoreTimeout, this),
										5e3
									))),
								this.isLoaded() &&
									'small-state' === e &&
									this.setSmallStateLinkClickEvent();
						},
						setSmallStateLinkClickEvent: function () {
							this.$el.find('.widget-content a').on('click', function () {
								p.A.push({
									event: 'track_event',
									category: 'Navigation Event',
									action: 'Navigate From Small Widget',
								});
							});
						},
						renderHeader: function () {
							var e = this.widgetState.get('stateName'),
								t = (this.widgetState.get('viewName'), this.findState(e)),
								i = this.getCurrentWidgetView(),
								n = this.getHeaderUrl();
							for (var a in (this.$('.widget-header').html(
								this.headerTemplate({
									Localizer: o.A,
									header_title_key: i.titleKeyName,
									hoverText: this.getHoverText ? this.getHoverText() : '',
									headerUrl: n,
									view: i,
									state: t,
									viewStates: this.viewStates,
									widgetState: this.widgetState.toJSON(),
									showHeaderTitle: 0 != i.showHeaderTitle,
									widgetIsLoaded: this.widgetLoaded,
									menuGroups: this.instanceMenuGroups,
									showStateMenu:
										this.viewStates[0].views.length > 1 ||
										1 !== this.viewStates.length,
									openInNewTab: n && !this.isRelativeURL(n),
								})
							),
							this.selectedMenuKeys))
								this.selectedMenuKeys.hasOwnProperty(a) &&
									this.setMenuSelected(a, this.selectedMenuKeys[a]);
						},
						renderFooter: function () {
							var e = this.widgetState.get('stateName'),
								t = this.widgetState.get('viewName'),
								i = this.numLoadedPages(e, t),
								n = this.getCurrentWidgetView(),
								s = i > 0 || this.instanceFooterActionGroups.length > 0;
							if (s) {
								var r = '',
									l = 'private';
								'function' == typeof n.shareUrl
									? this.currentWidgetStateView
										? ((r = n.shareUrl.call(this.currentWidgetStateView)),
											(l = n.sharePrivacy.call(this.currentWidgetStateView)))
										: ((r = n.shareUrl.call(this)),
											(l = n.sharePrivacy.call(this)))
									: ((r = n.shareUrl), (l = n.sharePrivacy));
								var c = n.enableConversation && this.conversation,
									d = {};
								c && (d = this.conversation.toJSON()),
									(this.nextButtonEnabled = this.pageIndex < i - 1),
									s &&
										(('undefined' != typeof n.showFooter &&
											1 != a().result(n, 'showFooter')) ||
											this.$('.widget-footer').html(
												this.footerTemplate({
													Localizer: o.A,
													showPrevious: this.pageIndex > 0,
													showNext: this.nextButtonEnabled,
													showLikesAndComments: c,
													conversation: d,
													navigationDirection: n.navigationDirection,
													footerMarkup: this.formatFooter(e, t, this.pageIndex),
													shareUrl: r,
													showHelpIcon: n.showHelpIcon,
													showHelpIconCss: n.showHelpIconCss,
													footerActionGroups: this.instanceFooterActionGroups,
													view: n,
												})
											),
										c &&
											((this.newsFeedLikeWidgetWrapper = new W.A()),
											this.newsFeedLikeWidgetWrapper.renderComponent(
												Qe.A,
												this.$('.entry-like-widget')[0],
												{
													activityId: this.getConversationResourceId(
														e,
														t,
														this.pageIndex
													),
													resourceType: 'ACTIVITY',
													viewerSocialProfile: {
														fullName: M.A.attributes.fullName,
														displayName: M.A.attributes.displayName,
														profileId: M.A.attributes.profileId,
													},
													userGroupPk: null,
													isGroupLikes: !1,
												}
											)),
										r &&
											((r =
												window.location.protocol +
												'//' +
												window.location.host +
												'/modern' +
												r),
											this.currentWidgetStateView
												? (this.sharingView = n.createShareView.call(
														this.currentWidgetStateView,
														l,
														r
													))
												: (this.sharingView = this.createShareView.call(
														this,
														l,
														r
													)),
											this.sharingView.setElement(this.$('.share-placeholder')),
											this.sharingView.render()));
							}
						},
						getHeaderUrl: function () {
							var e = '',
								t = this.getCurrentWidgetView();
							return (
								(e =
									'function' == typeof t.headerUrl
										? this.currentWidgetStateView
											? t.headerUrl.call(this.currentWidgetStateView)
											: t.headerUrl.call(this)
										: t.headerUrl) &&
									this.isRelativeURL(e) &&
									(e = u.default.url(e)),
								e
							);
						},
						isRelativeURL: function (e) {
							return (
								-1 === e.indexOf('http://') && -1 === e.indexOf('https://')
							);
						},
						renderError: function (e) {
							var t = this.getCurrentWidgetView();
							this.$el.empty(),
								this.$el.append(
									this.errorTemplate({
										errorMessage: o.A.localize('feature_failed_to_load'),
										isSmallState:
											'small-state' === this.widgetState.get('stateName'),
									})
								),
								this.$el.addClass('widget ' + lt),
								this.$el.data('widgetstateid', this.widgetState.id),
								this.renderHeader(),
								t.stateClassName && this.$el.addClass(t.stateClassName);
						},
						onWidgetViewDependenciesLoaded: function () {
							this.loadPageConversation();
						},
						loadPageConversation: function () {
							var e = this.widgetState.get('stateName'),
								t = this.widgetState.get('viewName'),
								i = this.getCurrentWidgetView(),
								n = this.getConversationResourceId(e, t, this.pageIndex);
							if (i.enableConversation && n) {
								this.conversation = new b.A({
									resourceType: i.conversationResourceType,
									resourceId: this.getConversationResourceId(
										e,
										t,
										this.pageIndex
									),
									ownerProfilePk: this.getConversationResourceIdOwner(
										e,
										t,
										this.pageIndex
									),
									userGroupPk: this.getConversationResourceGroupId(
										e,
										t,
										this.pageIndex
									),
									numberOfLikes: 0,
									numberOfComments: 0,
								});
								var a = new d.A();
								a.addModel({ model: this.conversation, required: !0 }),
									a.bind(
										d.A.Events.SYNCHRONIZED,
										this.onPageConversationLoaded,
										this
									),
									a.fetchModels();
							}
						},
						onPageConversationLoaded: function () {
							this.renderFooter();
						},
						onCommentsClicked: function (e) {
							e.preventDefault();
							var t = this.getCurrentWidgetView(),
								i = et(e.currentTarget),
								n = i.data('conversationresourcetype'),
								a = i.data('conversationresourceid'),
								s = i.data('conversationgroupid');
							n
								? this.loadConversation(n, a, s, this.displayComments)
								: t.enableConversation &&
									this.displayComments(this.conversation);
						},
						onWidgetCommentsViewRendered: function () {
							if (
								this.commentNumberClicked &&
								this.$('.comment-container') &&
								this.$('.comment-container')[0]
							) {
								const e = this.$('.comment-container')[0].scrollHeight;
								this.$('.comment-container').scrollTop(e),
									0 !== e && (this.commentNumberClicked = !1);
							}
							this.commentIconClicked &&
								this.$('.add-comment-textarea-newsfeed-widget') &&
								!this.$('.add-comment-textarea-newsfeed-widget').is(':focus') &&
								(this.$('.add-comment-textarea-newsfeed-widget').focus(),
								this.$('.add-comment-textarea-newsfeed-widget').is(':focus') &&
									(this.commentIconClicked = !1));
						},
						onCommentIconClicked: function (e) {
							(this.commentIconClicked = !0), this.onCommentsClicked(e);
						},
						onCommentNumberClicked: function (e) {
							(this.commentNumberClicked = !0), this.onCommentsClicked(e);
						},
						onHelpIconClicked: function () {
							var e = this.getCurrentWidgetView();
							e &&
								'function' === typeof e.onHelpIconClicked &&
								e.onHelpIconClicked();
						},
						onAddPostClicked: function (e) {
							e.preventDefault(), this.displayAddPostView();
						},
						loadConversation: function (e, t, i, n) {
							(this.conversation = new b.A({
								resourceType: e,
								resourceId: t,
								userGroupPk: i,
							})),
								this.conversation.once('sync', n, this),
								this.conversation.fetch();
						},
						displayComments: function (e) {
							var t = new L.A([], {
								resourceType: e.resourceType,
								resourceId: e.resourceId,
								userGroupPk: e.userGroupPk,
								conversation: e,
								startRowNum: 0,
								limit: 10,
							});
							let i =
								this.$('.suggestions-portal') &&
								this.$('.suggestions-portal')[0];
							var n = new xe({
								portalElement: i,
								resourceType: e.resourceType,
								resourceId: e.resourceId,
								conversation: e,
								collection: t,
								viewerConnections: P.A,
								supportEditComment: this.supportEditComment,
							});
							n.bind(xe.Events.ON_NEW_COMMENT, this.onNewComment, this),
								n.bind(xe.Events.ON_DELETE_COMMENT, this.onDeleteComment, this),
								n.bind(xe.Events.ON_CLOSE, this.renderFooter, this),
								n.bind(
									xe.Events.ON_RENDERED,
									this.onWidgetCommentsViewRendered,
									this
								),
								this.displaySheet(
									n,
									null,
									'widget-sheet-bottom widget-sheet-comments'
								);
							var a = new d.A();
							a.addModel({ model: t, required: !0 }),
								a.bind(
									d.A.Events.SYNCHRONIZED,
									function () {
										n.render();
									},
									this
								),
								a.fetchModels();
						},
						displayAddPostView: function () {
							var e = this.getCurrentWidgetView().groupId,
								t = new Be.A({ userGroupId: e });
							t.bind(Be.A.Events.POST_ADDED, this.onNewPost, this),
								t.bind(Be.A.Events.CLOSE, this.onWidgetSheetClosed, this),
								this.displaySheet(
									t,
									null,
									'widget-sheet widget-sheet-bottom widget-sheet-posts'
								);
						},
						reload: function () {
							this.trigger(this.Loadable.Events.ON_WIDGET_STATE_CHANGED, this);
						},
						setMenuSelected: function (e, t) {
							this.clearSelectedMenus(e),
								this.$('.js-' + e + '.js-' + t).addClass('active'),
								(this.selectedMenuKeys[e] = t);
						},
						clearSelectedMenus: function (e) {
							this.$('.js-' + e).removeClass('active'),
								delete this.selectedMenuKeys[e];
						},
						moveToPage: function (e, t) {
							(this.pageIndex = e),
								(this.conversation = null),
								this.loadPageConversation();
							var i = this.getCurrentWidgetView();
							'undefined' != typeof i.processNavigationDirection &&
								i.processNavigationDirection(e, t),
								this.render();
						},
						displaySheet: function (e, t, i, n = () => {}) {
							this.currentSheetView ||
								((this.currentSheetView = new A({
									sheetTitle: t,
									customClasses: i,
									view: e,
								})),
								this.currentSheetView.on(
									A.Events.CLOSE,
									() => {
										this.onWidgetSheetClosed(), n();
									},
									this
								),
								this.$el.append(this.currentSheetView.$el),
								this.currentSheetView.render());
						},
						displayMessageSheet: function (e, t) {
							this.currentMessageSheetView ||
								(t || (t = {}),
								(this.currentMessageSheetView = new S({
									message: e,
									customClasses: t.customClasses,
									timeout: t.timeout,
								})),
								this.listenTo(
									this.currentMessageSheetView,
									S.Events.CLOSE,
									this.onMessageSheetClosed
								),
								this.$el.append(this.currentMessageSheetView.$el),
								this.currentMessageSheetView.render());
						},
						displayTakeover: function (e, t) {
							this.currentTakeoverView ||
								((this.currentTakeoverView = new N({
									customClasses: t,
									view: e,
								})),
								this.currentTakeoverView.on(
									N.Events.CLOSE,
									this.onWidgetTakeoverClosed,
									this
								),
								this.$el.append(this.currentTakeoverView.$el),
								this.currentTakeoverView.render());
						},
						closeWidgetSheet: function () {
							this.currentSheetView && this.currentSheetView.close();
						},
						closeMessageSheet: function () {
							this.currentMessageSheetView &&
								this.currentMessageSheetView.close();
						},
						closeWidgetTakeover: function () {
							this.currentTakeoverView && this.currentTakeoverView.close();
						},
						onWidgetSheetClosed: function () {
							this.currentSheetView.off(), (this.currentSheetView = null);
							var e = this.getCurrentWidgetView();
							e.onWidgetSheetClosed && e.onWidgetSheetClosed();
						},
						onMessageSheetClosed: function () {
							this.currentMessageSheetView.off(),
								(this.currentMessageSheetView = null);
							var e = this.getCurrentWidgetView();
							e.onMessageSheetClosed && e.onMessageSheetClosed();
						},
						onWidgetTakeoverClosed: function () {
							this.currentTakeoverView.off(),
								this.currentTakeoverView.remove(),
								(this.currentTakeoverView = null);
							var e = this.getCurrentWidgetView();
							e.onWidgetTakeoverClosed && e.onWidgetTakeoverClosed();
						},
						compileTemplate: function () {
							var e = this.getCurrentWidgetView();
							(this.template = a().template(e.templateHtml)),
								(this.noDataTemplate = a().template(e.noDataTemplateHtml)),
								(this.loadingTemplate = a().template(qe())({
									loadingMessage: o.A.localize('loading'),
								}));
						},
						findState: function (e) {
							return a().find(this.viewStates, function (t) {
								return t.name == e;
							});
						},
						findView: function (e, t) {
							var i = this.findState(e);
							return i
								? a().find(
										i.views,
										function (e) {
											return e.name == t;
										},
										this
									)
								: null;
						},
						getCurrentWidgetView: function () {
							if (this.currentWidgetStateView)
								return this.currentWidgetStateView;
							var e = this.widgetState.get('stateName'),
								t = this.widgetState.get('viewName');
							return this.findView(e, t);
						},
						onPropertyFileLoaded: function (e) {
							this.trigger(e);
						},
						setApplicationCss: function (e) {
							tt("<style type='text/css'>" + e + '</style>').appendTo('head');
						},
						onBtnPreviousClicked: function (e) {
							e.preventDefault();
							var t = this.getCurrentWidgetView();
							(this.pageIndex > 0 || 'both' == t.navigationDirection) &&
								(this.pageIndex--, this.moveToPage(this.pageIndex, st));
						},
						onBtnNextClicked: function (e) {
							if ((e.preventDefault(), this.nextButtonEnabled)) {
								var t = this.getCurrentWidgetView(),
									i = this.widgetState.get('stateName'),
									n = this.widgetState.get('viewName'),
									a = this.maxPage(i, n);
								(this.pageIndex < a || 'both' == t.navigationDirection) &&
									(this.pageIndex++, this.moveToPage(this.pageIndex, rt));
							}
						},
						onStateMenuSelected: function (e) {
							e.preventDefault();
							var t = e.currentTarget.className.split(/\s+/)[0].split('*'),
								i = this.widgetState.clone();
							this.widgetState.set('stateName', t[0]),
								this.widgetState.set('viewName', t[1]),
								this.widgetState.save(),
								this.trigger(
									this.Loadable.Events.ON_WIDGET_STATE_CHANGED,
									this,
									i
								);
						},
						onRemoveMenuSelected: function (e) {
							e.preventDefault(),
								(0, Ze.aO)()
									? Xe.A.display({
											ns: 'settings',
											transKey: 'read_only_mode_alert_2',
										})
									: (this.widgetState.destroy({ wait: !0 }), this.remove());
						},
						updateWidgetStateIdInDom: function () {
							this.$el.data('widgetstateid', this.widgetState.id);
						},
						raiseApplicationEvent: function (e) {
							var t = [];
							t.push(this);
							for (var i = 0; i < arguments.length; i++) t.push(arguments[i]);
							this.trigger(nt.ON_APPLICATION_EVENT_TRIGGERED, t);
						},
						delegateToWidgetStateView: function (e, t, i) {
							var n = this.getCurrentWidgetView();
							if (n && n[e]) return n[e].apply(n, i);
							if (t) throw e + ' not implemented';
						},
						maxPage: function (e, t) {
							return this.delegateToWidgetStateView('maxPage', !0);
						},
						numLoadedPages: function (e, t) {
							return this.delegateToWidgetStateView('numLoadedPages', !0);
						},
						fetchMore: function () {
							return this.delegateToWidgetStateView('fetchMore', !0);
						},
						fetchMoreComplete: function () {
							(this.isFetchingMore = !1),
								this.fetchMoreTimer && clearInterval(this.fetchMoreTimer),
								(this.fetchMoreTimer = null),
								this.renderFooter();
						},
						onFetchMoreTimeout: function () {
							var e = this.widgetState.get('stateName'),
								t = this.widgetState.get('viewName');
							console.log(
								'Widget ' +
									e +
									'-' +
									t +
									' failed to execute fetchMoreComplete() within allotted time!!!'
							),
								this.fetchMoreComplete();
						},
						provideDependencies: function (e, t) {
							return this.delegateToWidgetStateView(
								'provideDependencies',
								!1,
								arguments
							);
						},
						provideModels: function (e, t, i) {
							var n = [];
							return (
								n.push(i),
								this.delegateToWidgetStateView('provideModels', !0, n)
							);
						},
						loadDependencies: function (e) {
							return this.delegateToWidgetStateView(
								'loadDependencies',
								!1,
								arguments
							);
						},
						onDependenciesLoaded: function (e) {
							return this.delegateToWidgetStateView(
								'onDependenciesLoaded',
								!1,
								arguments
							);
						},
						onDependenciesLoadFailed: function (e) {
							this.renderError(e);
						},
						postRender: function (e, t, i) {
							var n = [i];
							return this.delegateToWidgetStateView('postRender', !1, n);
						},
						formatFooter: function (e, t, i) {
							var n = [i];
							return this.delegateToWidgetStateView('formatFooter', !1, n);
						},
						getConversationResourceId: function (e, t, i) {
							var n = [i];
							return this.delegateToWidgetStateView(
								'getConversationResourceId',
								!1,
								n
							);
						},
						getConversationResourceIdOwner: function (e, t, i) {
							var n = [i];
							return this.delegateToWidgetStateView(
								'getConversationResourceIdOwner',
								!1,
								n
							);
						},
						getConversationResourceGroupId: function (e, t, i) {
							var n = [i];
							return this.delegateToWidgetStateView(
								'getConversationResourceGroupId',
								!1,
								n
							);
						},
						removeMenuItem: function (e, t) {
							var i = a().find(this.instanceMenuGroups, function (t) {
								return t.groupName == e;
							});
							if (i) {
								var n,
									s = [];
								for (n = 0; n < i.menuItems.length; n++)
									i.menuItems[n].key === t
										? this.allEvents['click .js-' + t] &&
											((this.allEvents = a().omit(
												this.allEvents,
												'click .js-' + t
											)),
											this.undelegate('click', '.js-' + t))
										: s.push(i.menuItems[n]);
								(i.menuItems = s),
									this.$('.widget-header').empty().off(),
									this.renderHeader();
							}
						},
						removeWidgetMenuItemViewForAState: function (e, t) {
							this.findView(e, t) &&
								this.viewStates.forEach((e) =>
									e.views.forEach((i, n) => {
										i.name === t && e.views.splice(n, 1);
									})
								);
						},
						addCustomMenuItem: function (e, t, i) {
							var n = a().find(this.instanceMenuGroups, function (t) {
								return t.groupName == e;
							});
							(n || i) &&
								(!n &&
									i &&
									((n = { groupName: e, menuItems: [] }),
									this.instanceMenuGroups.push(n)),
								n.menuItems.push(t),
								(n.menuItems = a().sortBy(n.menuItems, function (e) {
									return e.index;
								})),
								this.currentWidgetStateView
									? (this.allEvents['click .js-' + t.key] =
											'onChildWidgetStateViewHandlerClicked')
									: (this.allEvents['click .js-' + t.key] = t.handlerName),
								this.delegateEvents(this.allEvents),
								this.$('.widget-header').empty().off(),
								this.renderHeader());
						},
						addCustomChildMenuItem: function (e, t) {
							let i = a().find(this.instanceMenuGroups, function (t) {
								return t.groupName == e;
							});
							i &&
								i.menuItems &&
								i.menuItems[0].childMenuItems &&
								(i.menuItems[0].childMenuItems.push(t),
								(i.menuItems[0].childMenuItems = a().sortBy(
									i.menuItems[0].childMenuItems,
									function (e) {
										return e.index;
									}
								)),
								this.currentWidgetStateView
									? (this.allEvents['click .js-' + this.escapeKey(t.key)] =
											'onChildWidgetStateViewHandlerClicked')
									: (this.allEvents['click .js-' + this.escapeKey(t.key)] =
											t.handlerName),
								this.delegateEvents(this.allEvents),
								this.$('.widget-header').empty().off(),
								this.renderHeader());
						},
						createShareView: function (e, t) {
							return new R.A({
								privacy: e,
								url: t,
								locale: this.userPreferences.get('preferredLocale'),
								customClasses: 'widget-dropdown widget-footer-action',
								slideDirection: R.A.SlideDirection.Up,
							});
						},
						onNewPost: function (e) {
							this.delegateToWidgetStateView('onNewPost', !1, arguments);
						},
						onNewComment: function (e, t) {
							this.delegateToWidgetStateView('onNewComment', !1, arguments);
						},
						onDeleteComment: function (e) {
							this.delegateToWidgetStateView('onDeleteComment', !1, arguments);
						},
						setDragStatus: function (e) {
							this.dragStatus = e;
						},
						onAnchorTagClicked: function (e) {
							u.default.anchorTagHandler(e);
						},
						updateTemplate: function (e, t) {
							this[e] = a().template(t);
						},
						remove: function () {
							return (
								this.currentWidgetStateView &&
									this.currentWidgetStateView.remove(),
								this.$el.remove(),
								this.stopListening(),
								this
							);
						},
					});
				(ct.Events = nt), (ct.DragStatus = at);
				const dt = ct;
			},
			363099: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => l });
				var n = i(28992),
					a = i(228748),
					s = i(36842),
					r = i(998813),
					o = function () {
						this.element = null;
					};
				(o.prototype.renderComponent = function (e, t, i) {
					var o = a.createElement(
						e,
						r.extend(!0, {}, n.A, i, { rootElement: t })
					);
					(this.element = t), (this.root = (0, s.H)(t)), this.root.render(o);
				}),
					(o.prototype.removeComponent = function () {
						this.root.unmount(this.element);
					});
				const l = o;
			},
			28992: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => n });
				const n = { store: (0, i(156337).default)() };
			},
			133499: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(7292),
					a = i(318383),
					s = i(690896),
					r = i.n(s),
					o = i(29273),
					l = i(586816);
				const c = {
					getSmallStartMarkerOptions: function (e) {
						var t = a.default.url('/images/map/large/map_marker_start.svg');
						return (
							e &&
								(t = a.default.url('/images/map/large/' + n.A.mapStartPin(e))),
							{
								iconURL: t,
								iconAnchor: { x: Math.ceil(8.25), y: 22.5 },
								iconSize: { width: 16.5, height: 25 },
								cursor: 'default',
								zIndex: 91,
							}
						);
					},
					getStartMarkerOptions: function (e) {
						var t = a.default.url('/images/map/large/map_marker_start.svg');
						return (
							e &&
								(t = a.default.url('/images/map/large/' + n.A.mapStartPin(e))),
							{
								iconURL: t,
								iconAnchor: { x: Math.ceil(16.5), y: 45 },
								iconSize: { width: 33, height: 50 },
								cursor: 'default',
								zIndex: 91,
							}
						);
					},
					getEndMarkerOptions: function () {
						return {
							iconURL: a.default.url('/images/map/large/map_marker_end.svg'),
							iconAnchor: { x: Math.ceil(16.5), y: 45 },
							iconSize: { width: 33, height: 50 },
							cursor: 'default',
							zIndex: 90,
						};
					},
					getPlayerPositionMarkerOptions: function () {
						return {
							iconURL: a.default.url('/images/map/map_marker_player.svg'),
							iconAnchor: { x: Math.ceil(8), y: Math.ceil(16) - 8 },
							iconSize: { height: 16, width: 16 },
							cursor: 'pointer',
							zIndex: 90,
						};
					},
					getLapMarkerOptions: function (e) {
						return {
							iconUTL: e,
							iconAnchor: { x: Math.ceil(16.5), y: Math.ceil(50) },
							iconSize: { height: 50, width: 33 },
							cursor: 'pointer',
							zIndex: 91,
							visible: !0,
						};
					},
					getSegmentStartMarkerOptions: function () {
						return {
							iconURL: a.default.url('/images/map/map_marker_start_small.svg'),
							iconAnchor: { x: Math.ceil(5.5) - 0, y: Math.ceil(5.5) - 0 },
							iconSize: { height: 11, width: 11 },
							zIndex: 89,
						};
					},
					getSegmentEndMarkerOptions: function () {
						return {
							iconURL: a.default.url('/images/map/map_marker_end_small.svg'),
							iconAnchor: { x: Math.ceil(5.5) - 0, y: Math.ceil(5.5) - 0 },
							iconSize: { height: 11, width: 11 },
							zIndex: 89,
						};
					},
					getActivityMarkerOptions: function (e) {
						if (!e) throw 'activity type required';
						return {
							iconURL: a.default.url('/images/map/large/' + n.A.mapStartPin(e)),
							iconAnchor: { x: Math.ceil(13), y: 0 },
							iconSize: { width: 26, height: 26 },
							cursor: 'default',
							zIndex: 91,
						};
					},
					getJumpMarkerOptions: function () {
						return {
							iconURL: a.default.url('/images/feature/mtb/jump.svg'),
							iconAnchor: { x: Math.ceil(12), y: 18 },
							iconSize: { width: 24, height: 24 },
							cursor: 'default',
							zIndex: 91,
						};
					},
					getClimbMapIcon: function () {
						return {
							iconURL: a.default.url(
								'/images/feature/climb-pro/climb_marker.svg'
							),
							iconAnchor: { x: Math.ceil(12), y: 18 },
							iconSize: { width: 24, height: 24 },
							zIndex: 89,
						};
					},
					getTransitionTypedSplitsMarkerOptions: function () {
						return {
							iconURL: a.default.url(
								'/images/feature/transition/transition.svg'
							),
							iconAnchor: { x: Math.ceil(10), y: 14 },
							iconSize: { width: 20, height: 20 },
							cursor: 'default',
							zIndex: -1e3,
						};
					},
					getTypedSplitsMarkerOptions: function (e) {
						return {
							iconURL: a.default.url(e),
							iconAnchor: { x: Math.ceil(10), y: 14 },
							iconSize: { width: 20, height: 20 },
							cursor: 'default',
							zIndex: -1e3,
						};
					},
					userInChina: function () {
						return (0, l.B)();
					},
					isMapProviderValid: function (e) {
						return !(!this.isBaiduEnabled() && 'BAIDU_V_1_4' === e);
					},
					isBaiduEnabled: function () {
						var e = r().cultureSelector.replace('-', '_');
						return (
							-1 != window.location.href.indexOf('garmin.cn') ||
							'zh_TW' == e ||
							'zh_CN' == e
						);
					},
					getStandardizedPoint: function (e) {
						var t = {};
						if (e && e.hasOwnProperty('lat')) {
							if (((t.lat = e.lat), e.hasOwnProperty('lng'))) t.lon = e.lng;
							else {
								if (!e.hasOwnProperty('lon')) return;
								t.lon = e.lon;
							}
							return t;
						}
					},
					getBigSegmentStartMarkerOptions: function () {
						return {
							iconUrl: '/modern/images/map/map-marker-start.svg',
							shadowUrl: '',
							iconSize: [30, 45],
							iconAnchor: [16, 40],
							className: 'active has-tooltip',
							html: '<span class="course-pt course-pt-start active has-tooltip" title=""></span>',
						};
					},
					getBigSegmentEndMarkerOptions: function () {
						return {
							iconUrl: '/modern/images/map/map-marker-end.svg',
							shadowUrl: '',
							iconSize: [30, 45],
							iconAnchor: [16, 40],
							className: 'active has-tooltip',
							html: '<span class="course-pt course-pt-finish active has-tooltip" title=""></span>',
						};
					},
					getSpeedPaceLayer: function (e) {
						let t = 'SPEED';
						switch (o.A.getSpeedTypeFromActivityType(e)) {
							case o.A.SpeedTypes.Flying:
							case o.A.SpeedTypes.Speed:
							case o.A.SpeedTypes.RowingSpeed:
							case o.A.SpeedTypes.NauticalSpeed:
							case o.A.SpeedTypes.ResortSkiSpeed:
								t = 'SPEED';
								break;
							case o.A.SpeedTypes.Pace:
							case o.A.SpeedTypes.RowingPace:
								t = 'PACE';
								break;
							case o.A.SpeedTypes.SwimSpeed:
								t = 'SPEED';
								break;
							case o.A.SpeedTypes.SwimPace:
								t = 'PACE';
								break;
							default:
								t = 'SPEED';
						}
						return t;
					},
					getTypedSplitMarkerWidthHeight: function () {
						return { width: 20, height: 20 };
					},
				};
			},
			645935: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				var n = i(595695),
					a = i.n(n),
					s = (i(893855), i(408822), i(598602)),
					r = i(956867),
					o = i.n(r),
					l = { ON_SAVE: 'ON_SAVE' },
					c = s.A.extend({
						events: {
							'click .confirm': 'onSaveClicked',
							'click .cancel': 'onCloseClicked',
						},
						footerTemplate: a().template(o()),
						onSaveClicked: function () {
							this.trigger(l.ON_SAVE), this.close();
						},
						onCloseClicked: function () {
							this.close();
						},
					});
				c.Events = l;
				const d = c;
			},
			960654: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => N });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(408822),
					l =
						(i(991310),
						r().Model.extend({
							backend: 'gcapi',
							urlRoot: '/userprofile-service/socialProfile/privacy/',
							idAttribute: 'displayName',
							defaults: {
								activityVisibility: 'private',
								profileVisibility: 'private',
								badgeVisibility: 'private',
							},
							url: function () {
								return this.urlRoot + this.get(this.idAttribute);
							},
						}));
				l.Visibility = {
					PUBLIC: 'public',
					PRIVATE: 'private',
					FOLLOWING: 'following',
					GROUPS: 'groups',
				};
				const c = l;
				var d = i(960474),
					u = i(85057),
					p = i(659990),
					y = i(959628),
					h = i.n(y),
					g = i(956867),
					m = i.n(g),
					A = i(963633),
					_ = i(728407),
					E = i(875403),
					T = i(155190),
					C = i(428679),
					S = i(598602),
					I = i(429833),
					v = i(998813),
					f = { Closed: 'CLOSED', Ready: 'READY' },
					D = r().View.extend({
						footerTemplate: a().template(m()),
						events: {
							'change select': 'onValueChanged',
							'click .btn-save-privacy': 'onSaveClicked',
							'click #editCustomPrivacyLevels': 'openCustomPrivacyModal',
						},
						propertyFiles: [
							'/privacy_alert/privacy_alert',
							'/settings/settings',
						],
						initialize: function (e) {
							(this.userPreferences = e.userPreferences),
								(this.requestType = e.requestType),
								(this.changesMadeToProfileVisibility = !1),
								(this.changesMadeToActivityVisibility = !1),
								(this.profilePrivacyChanged = !1),
								(this.activityPrivacyChanged = !1);
							var t = new u.A();
							(this.socialProfilePrivacy = new c({
								displayName: d.A.get('displayName'),
							})),
								t.addModel({ model: this.socialProfilePrivacy, required: !0 }),
								(this.privacyUpdatesRole = new A.A({ key: _.et })),
								t.addModel({ model: this.privacyUpdatesRole, required: !0 }),
								(this.usersPrivacySettings = new E.A()),
								t.addModel({
									model: this.usersPrivacySettings,
									required: !0,
									countError: !0,
								}),
								t.addEvent({
									model: t,
									event: u.A.Events.ON_DOCUMENT_READY,
									required: !0,
								}),
								t.bind(u.A.Events.SYNCHRONIZED, this.onModelsFetched, this),
								t.fetchModels(),
								(this.template = a().template(h())),
								a().each(
									this.propertyFiles,
									function (e) {
										o.A.loadPropertyFile(
											e,
											() => {
												t.synchronized() && this.render();
											},
											this
										);
									},
									this
								);
						},
						onModelsFetched: function () {
							if (
								this.privacyUpdatesRole.featureEnabled() &&
								this.usersPrivacySettings
							) {
								var e =
									this.usersPrivacySettings.getActivityCategoryAccessRule();
								this.displayModal =
									this.isProfilePrivate() ||
									('group' === this.requestType &&
										(e === E.A.Visibility.PRIVATE ||
											e === E.A.Visibility.CONNECTIONS)) ||
									('connection' === this.requestType &&
										e === E.A.Visibility.PRIVATE);
							} else {
								var t = this.socialProfilePrivacy.get('profileVisibility'),
									i = this.socialProfilePrivacy.get('activityVisibility');
								t == c.Visibility.PRIVATE ||
								('group' == this.requestType &&
									(i == c.Visibility.PRIVATE || i == c.Visibility.FOLLOWING)) ||
								('connection' == this.requestType && i == c.Visibility.PRIVATE)
									? (this.displayModal = !0)
									: (this.displayModal = !1);
							}
							this.trigger(f.Ready);
						},
						renderOldFunctionality: function () {
							if (
								this.socialProfilePrivacy.get('profileVisibility') ==
								c.Visibility.PRIVATE
							) {
								this.$('.control-profile-privacy').show();
								new p.A({
									el: this.$('.icon-help.profile-privacy-tip'),
									content: o.A.localize('profile.privacy.description'),
									container: '#change-privacy-alert',
									placement: 'right',
								});
							} else this.$('.control-profile-privacy').hide();
							var e = this.socialProfilePrivacy.get('activityVisibility'),
								t = e == c.Visibility.PRIVATE,
								i = e == c.Visibility.FOLLOWING;
							if (
								('group' == this.requestType && (t || i)) ||
								('connection' == this.requestType && t)
							) {
								this.$('#activity-privacy-options').val(e),
									this.$('.control-activity-privacy').show();
								new p.A({
									el: this.$('.icon-help.activity-privacy-tip'),
									content: o.A.localize('activity.privacy.description'),
									container: '#change-privacy-alert',
									placement: 'right',
								});
							} else this.$('.control-activity-privacy').hide();
						},
						isProfilePrivate: function () {
							return (
								this.usersPrivacySettings.getProfileCategoryAccessRule() ===
								E.A.Visibility.PRIVATE
							);
						},
						renderPrivacyFunctionality: function () {
							let e = this.usersPrivacySettings.getActivityCategoryAccessRule();
							if (
								this.isProfilePrivate() ||
								this.changesMadeToProfileVisibility
							) {
								this.$('.control-profile-privacy').show();
								new p.A({
									el: this.$('.icon-help.profile-privacy-tip'),
									content: o.A.localize('profile.privacy.description'),
									container: '#change-privacy-alert',
									placement: 'right',
								});
							} else this.$('.control-profile-privacy').hide();
							let t = e === E.A.Visibility.PRIVATE,
								i = e === E.A.Visibility.CONNECTIONS;
							if (
								('group' === this.requestType && (t || i)) ||
								('connection' === this.requestType && t) ||
								this.changesMadeToActivityVisibility
							) {
								this.$('#activity-privacy-options').val(e),
									this.$('.control-activity-privacy').show();
								new p.A({
									el: this.$('.icon-help.activity-privacy-tip'),
									content: o.A.localize('activity.privacy.description'),
									container: '#change-privacy-alert',
									placement: 'right',
								});
							} else this.$('.control-activity-privacy').hide();
						},
						render: function () {
							let e = this.usersPrivacySettings.getProfileCategoryAccessRule(),
								t = this.usersPrivacySettings.getActivityCategoryAccessRule();
							this.$el.html(
								this.template({
									Localizer: o.A,
									userHasPrivacyUpdatesRole:
										this.privacyUpdatesRole.featureEnabled(),
									privacySettingsVisibility: E.A.Visibility,
									preSelectedProfileVisibility: e,
									preSelectedActivityVisibility: t,
								})
							),
								this.privacyUpdatesRole.featureEnabled() &&
								this.usersPrivacySettings
									? this.renderPrivacyFunctionality()
									: this.renderOldFunctionality();
						},
						setCustomFieldVisibility: function (e) {
							(this.changedCustomOptions = null),
								e
									? (this.disableSaveOption(!0),
										this.$('#editCustomPrivacyLevels').removeClass('hidden'))
									: (this.disableSaveOption(!1),
										this.$('#editCustomPrivacyLevels').addClass('hidden'));
						},
						openCustomPrivacyModal: function (e) {
							e.preventDefault(),
								e.stopPropagation(),
								this.trigger(f.Closed),
								this.customPrivacuModalView &&
									this.customPrivacuModalView.destroy(),
								(this.customPrivacuModalView = new C.A({
									reactComponent: I.A,
									props: {
										activitySubcategoryPrivacySettings:
											this.usersPrivacySettings.getActivitySubcategoryPrivacySettings(),
										changeOptionValue: this.changeCustomOptionValue.bind(this),
									},
								})),
								(this.customPrivacyPopup = new S.A({
									view: this.customPrivacuModalView,
									onSaveButtonClicked: function () {
										return this.onSaveCustomPrivacyChanges(), !0;
									}.bind(this),
									customClasses: '',
									cancelTextKey: 'button_cancel',
									modalTitle: o.A.localize('privacy_custom_levels'),
								})),
								(this.customPrivacyPopup.postRemove = () => {
									if (
										(this.trigger(f.Ready),
										this.delegateEvents(),
										this.usersPrivacySettings.getActivityCategoryAccessRule() ===
											E.A.Visibility.CUSTOM)
									) {
										let e =
												this.usersPrivacySettings.getActivitySubcategoryPrivacySettings(),
											t = E.A.isValueDifferentInUserCustomPrivacy(e);
										this.disableSaveOption(!t);
									}
								}),
								setTimeout(() => {
									this.customPrivacyPopup.render(),
										this.customPrivacyPopup.disableConfirmationButton();
								}, 1e3);
						},
						changeCustomOptionValue: function (e, t) {
							(this.changedCustomOptions = e),
								E.A.isValueDifferentInUserCustomPrivacy(t)
									? this.changedCustomOptions &&
										this.changedCustomOptions.length &&
										this.customPrivacyPopup.enableConfirmationButton()
									: this.customPrivacyPopup.disableConfirmationButton();
						},
						onSaveCustomPrivacyChanges: function () {
							this.setupActivityCustomPrivacyChange(this.changedCustomOptions);
						},
						getDisplayModal: function () {
							return this.displayModal;
						},
						onValueChanged: function (e) {
							var t = e.currentTarget,
								i = t.value,
								n = t.name;
							'activityVisibility' === n
								? (this.privacyUpdatesRole.featureEnabled() &&
									this.usersPrivacySettings
										? (this.setupActivityVisibilityChange(i),
											i === E.A.Visibility.CUSTOM
												? this.setCustomFieldVisibility(!0)
												: this.setCustomFieldVisibility())
										: this.socialProfilePrivacy.set('activityVisibility', i),
									(this.activityPrivacyChanged = !0))
								: 'profileVisibility' === n &&
									(this.privacyUpdatesRole.featureEnabled() &&
									this.usersPrivacySettings
										? this.setupProfileVisibilityChange(i)
										: this.socialProfilePrivacy.set('profileVisibility', i),
									(this.profilePrivacyChanged = !0));
						},
						setupProfileVisibilityChange: function (e) {
							e &&
								((this.changesMadeToProfileVisibility = !0),
								this.usersPrivacySettings.setCategoryAccessRule(
									e,
									'profilePrivacySettings'
								),
								this.usersPrivacySettings.setSpecificPrivacyCustomSetting(
									'profilePrivacySettings',
									'user_profile',
									e
								),
								this.enableSaveIfActivityPrivacyIsProperlySet());
						},
						enableSaveIfActivityPrivacyIsProperlySet: function () {
							if (
								this.usersPrivacySettings.getActivityCategoryAccessRule() ===
								E.A.Visibility.CUSTOM
							) {
								let e =
										this.usersPrivacySettings.getActivitySubcategoryPrivacySettings(),
									t = E.A.isValueDifferentInUserCustomPrivacy(e);
								this.disableSaveOption(!t);
							} else this.disableSaveOption();
						},
						setupActivityVisibilityChange: function (e) {
							if (e) {
								if (
									((this.changesMadeToActivityVisibility = !0),
									e !== E.A.Visibility.CUSTOM)
								) {
									this.usersPrivacySettings
										.getActivitySubcategoryPrivacySettings()
										.forEach((t) => {
											this.usersPrivacySettings.setSpecificPrivacyCustomSetting(
												'activityPrivacySettings',
												t.privacySubcategoryType,
												e
											);
										});
								}
								this.usersPrivacySettings.setCategoryAccessRule(
									e,
									'activityPrivacySettings'
								);
							}
						},
						setupActivityCustomPrivacyChange: function (e) {
							e &&
								e.length &&
								(this.disableSaveOption(!1),
								(this.changesMadeToActivityVisibility = !0),
								e.forEach((e) => {
									let t = Object.keys(e)[0],
										i = e[t];
									this.usersPrivacySettings.setSpecificPrivacyCustomSetting(
										'activityPrivacySettings',
										t,
										i
									);
								}),
								this.usersPrivacySettings.setCategoryAccessRule(
									E.A.Visibility.CUSTOM,
									'activityPrivacySettings'
								));
						},
						disableSaveOption: function (e) {
							let t = this.$el.parent().find('.btn.confirm');
							e
								? t.addClass('disabled').attr('disabled', !0)
								: t.removeClass('disabled').attr('disabled', !1);
						},
						onSaveClicked: function () {
							if (this.profilePrivacyChanged || this.activityPrivacyChanged)
								if (
									this.privacyUpdatesRole.featureEnabled() &&
									this.usersPrivacySettings
								) {
									if (
										(this.usersPrivacySettings.save(null, {
											type: 'PUT',
											patch: !0,
										}),
										this.profilePrivacyChanged)
									) {
										let e =
											this.usersPrivacySettings.getProfileCategoryAccessRule();
										(0, T.cr)(
											T.Cr.USER_PROFILE_PRIVACY_SETTINGS_CHANGED,
											`From Privacy Modal used in Connect to user or Groups Changed to: ${e}`
										);
									}
									if (this.activityPrivacyChanged) {
										let e =
											this.usersPrivacySettings.getActivityCategoryAccessRule();
										(0, T.cr)(
											T.Cr.ACTIVITY_PRIVACY_SETTINGS_CHANGED,
											`From Privacy Modal used in Connect to user or Groups Changed to: ${e}`
										);
									}
								} else this.socialProfilePrivacy.save();
						},
						updateUserProfile: function (e) {
							v.ajax({
								url: '/updateprofile/',
								type: 'POST',
								data: { defaultActivityPrivacy: e },
								success: function (e) {},
							});
						},
					});
				D.Events = f;
				const N = D;
			},
			258108: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => T });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(408822),
					l = i(576797),
					c = i(649538),
					d = i.n(c),
					u = i(133499),
					p = i(568574),
					y = { SOCIAL_SHARE_CLICKED: 'SOCIAL_SHARE_CLICKED' },
					h = { Up: 'up', Down: 'down' },
					g = { Right: 'right', Left: 'left' },
					m = 'facebook',
					A = 'weibo',
					_ = 'twitter',
					E = r().View.extend({
						events: {
							'click #shareToFacebook': 'onFacebookShareButtonClicked',
							'click #shareToTwitter': 'onTwitterShareButtonClicked',
							'click #shareToWeibo': 'onSinaWeiboShareButtonClicked',
						},
						initialize: function (e) {
							(this.privacy = e.privacy),
								(this.url = e.url),
								(this.locale = e.locale),
								(this.customClasses = e.customClasses),
								(this.sharingLabel = e.sharingLabel || ''),
								(this.sharingText = e.sharingText || ''),
								(this.analyticsKey = e.analyticsKey || ''),
								this.customClasses || (this.customClasses = ''),
								(this.slideDirection = e.slideDirection || h.Down),
								(this.pullDirection = e.pullDirection || g.Right),
								(this.socialPlatform = null),
								(this.template = a().template(d()));
						},
						render: function () {
							var e = this.template({
								Localizer: o.A,
								privacy: this.privacy,
								url: this.url,
								locale: this.locale,
								customClasses: this.customClasses,
								directionClass: this.slideDirection == h.Up ? 'bottom-up' : '',
								pullClass:
									this.pullDirection == g.Left ? 'pull-left' : 'pull-right',
								showIcon: this.slideDirection != h.Up,
								sharingLabel: this.sharingLabel,
								userInChina: u.A.userInChina(),
							});
							this.$el.html(e),
								this.$el.addClass('dropdown share'),
								this.$el.addClass(this.customClasses);
							var t = this.$('.dropdown-trigger');
							t.attr('disabled', 'disabled'),
								t.addClass('disabled'),
								this.setPrivacy(this.privacy);
						},
						setPrivacy: function (e) {
							this.privacy = e;
							var t = this.$('.dropdown-trigger');
							'public' == e
								? (t.removeAttr('disabled'), t.removeClass('disabled'))
								: (t.attr('disabled', 'disabled'), t.addClass('disabled'));
						},
						setUrl: function (e) {
							this.url = e;
						},
						onShareButtonClicked: function (e) {
							this.trigger(
								y.SOCIAL_SHARE_CLICKED,
								e.target.dataset.socialPlatform
							);
						},
						onFacebookShareButtonClicked: function () {
							(this.socialPlatform = m),
								this.openPopupShareWindow(),
								this.pushShareAnalyticsEvents(),
								this.redirectPopupShareWindow();
						},
						onTwitterShareButtonClicked: function () {
							(this.socialPlatform = _),
								this.openPopupShareWindow(),
								this.pushShareAnalyticsEvents(),
								this.redirectPopupShareWindow();
						},
						onSinaWeiboShareButtonClicked: function () {
							(this.socialPlatform = A),
								this.openPopupShareWindow(),
								this.pushShareAnalyticsEvents(),
								this.redirectPopupShareWindow();
						},
						pushShareAnalyticsEvents: function () {
							this.analyticsKey === p.d3.group
								? (0, p.yi)(`Share Group on ${this.socialPlatform}`)
								: l.A.push({
										event: 'track_event',
										category: this.analyticsKey,
										action: 'Share on ' + this.socialPlatform,
									});
						},
						openPopupShareWindow: function () {
							(this.popupShareWindow = window.open(
								'',
								'',
								'width=600, height=300'
							)),
								this.popupShareWindow.document.write(
									'<br /><br /><p style="text-align:center; font-size:18px;"><img src="//static.garmincdn.com/shared/global/media/images/ajax-loader.gif" alt="" /><br />Processing, please wait...</p>'
								);
						},
						redirectPopupShareWindow: function () {
							var e = null;
							this.socialPlatform == m
								? (e =
										'https://www.facebook.com/sharer/sharer.php?u=' +
										encodeURIComponent(this.url) +
										'&p[title]=Garmin%20Connect&display=popup')
								: this.socialPlatform == _
									? (e =
											'http://twitter.com/share?text=' +
											encodeURIComponent(this.sharingText.trim()) +
											'&url=' +
											encodeURIComponent(this.url))
									: this.socialPlatform == A &&
										(e =
											'http://service.weibo.com/share/share.php?url=' +
											encodeURIComponent(this.url) +
											'&title=' +
											encodeURIComponent(this.sharingText.trim())),
								this.popupShareWindow.location.replace(e);
						},
					});
				(E.SlideDirection = h), (E.PullDirection = g), (E.Events = y);
				const T = E;
			},
			549420: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => h });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(408822),
					l = (i(29273), i(155688)),
					c = i(526504),
					d = (i(407586), i(694146)),
					u = i.n(d),
					p = { CHANGE: 'CHANGE' },
					y = r().View.extend({
						initialize: function (e) {
							if (!e.idPrefix)
								throw 'A DOM ID Prefix is required for ElapsedTimeView.';
							if (!e.maxExceededErrorKey)
								throw 'An error key is required for ElapsedTimeView.';
							(this.scrollableElement = e.scrollableElement),
								(this.tooltipContainer = e.tooltipContainer),
								(this.hideSeconds = e.hideSeconds || !1),
								(this.hideHours = e.hideHours || !1),
								(this.hideMilliseconds =
									!!a().isUndefined(e.hideMilliseconds) || e.hideMilliseconds),
								(this.idPrefix = e.idPrefix),
								(this.maxExceededErrorKey = e.maxExceededErrorKey),
								(this.underMinimumTimeErrorKey = e.underMinimumTimeErrorKey
									? e.underMinimumTimeErrorKey
									: 'time_under_minimum_allowed'),
								e.value
									? this.setHoursMinutesSeconds(e.value)
									: ((this.hours = 0),
										(this.minutes = 0),
										(this.seconds = 0),
										(this.milliseconds = 0)),
								(this.maxTime = e.maxTime
									? e.maxTime
									: this.getDefaultMaxTime()),
								(this.minTime = e.minTime ? e.minTime : 0),
								(this.hourInputMaxLength = e.hourInputMaxLength
									? e.hourInputMaxLength
									: 3);
						},
						getDefaultMaxTime() {
							return this.hideHours ? 3599 : 18e5;
						},
						setHoursMinutesSeconds: function (e) {
							var t = Math.floor(e / 3600),
								i = Math.floor(e / 60 - 60 * t),
								n = e - 3600 * t - 60 * i,
								a = Math.floor(n),
								s = Math.round(1e4 * (n - a)) / 1e4,
								r = Math.round(1e3 * s),
								o = s > 0 && e < 599.95;
							((o && s >= 0.95) || (!o && s >= 0.5)) &&
								this.hideMilliseconds &&
								(a++, (s = 0)),
								a > 59 && ((a = 0), ++i > 59 && ((i = 0), t++)),
								o && this.hideMilliseconds && (a = Math.round(a + s)),
								(this.hours = t),
								(this.minutes = i),
								(this.seconds = a),
								(this.milliseconds = r);
						},
						hourField: function () {
							return this.$('#' + this.idPrefix + '-time-hour');
						},
						minuteField: function () {
							return this.$('#' + this.idPrefix + '-time-minute');
						},
						secondField: function () {
							return this.$('#' + this.idPrefix + '-time-second');
						},
						millisecondField: function () {
							return this.$('#' + this.idPrefix + '-time-millisecond');
						},
						render: function () {
							var e = a().template(u()),
								t = {
									idPrefix: this.idPrefix,
									maxExceededErrorKey: this.maxExceededErrorKey,
									timeHours: this.hours,
									timeMinutes: this.minutes,
									timeSeconds: this.seconds,
									timeMilliseconds: this.milliseconds,
								};
							(this.html = e({
								model: t,
								Localizer: o.A,
								hideHours: this.hideHours,
								hideSeconds: this.hideSeconds,
								hideMilliseconds: this.hideMilliseconds,
								hourInputMaxLength: this.hourInputMaxLength,
							})),
								this.$el.html(this.html + this.$el.html());
							var i = this;
							return (
								(this.validator = new l.A({
									maxTime: this.maxTime,
									minTime: this.minTime,
									elements: [
										this.hourField(),
										this.minuteField(),
										this.secondField(),
										this.millisecondField(),
									],
									reporter: new c.A({
										message: function (e, t) {
											return t === l.A.ValidationErrors.UnderMinTime
												? 'function' === typeof i.underMinimumTimeErrorKey
													? i.underMinimumTimeErrorKey()
													: o.A.localize(i.underMinimumTimeErrorKey, e)
												: 'function' === typeof i.maxExceededErrorKey
													? i.maxExceededErrorKey()
													: o.A.localize(i.maxExceededErrorKey, e);
										},
										scrollableElement: this.scrollableElement,
										position: 'top',
										element: this.hourField()[0] || this.minuteField()[0],
										container: this.tooltipContainer || null,
									}),
								})),
								this.validator.on(
									l.A.Events.ValidationSuccess,
									this.onDurationInputValidationSucceeded,
									this
								),
								this.el
							);
						},
						onDurationInputValidationSucceeded: function (e) {
							const t = this.calculateTime();
							e.parsedValue !== t &&
								(this.setHoursMinutesSeconds(e.parsedValue),
								this.trigger(p.CHANGE, this.calculateTime()));
						},
						calculateTime: function () {
							var e = this.hours,
								t = this.minutes,
								i = this.seconds;
							return this.milliseconds / 1e3 + 1 * i + 60 * t + 3600 * e;
						},
					});
				y.Events = p;
				const h = y;
			},
			407586: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => l });
				var n = i(893855),
					a = i.n(n),
					s = i(998813),
					r = i.n(s),
					o = a().View.extend({
						events: { 'click body': 'onBodyClicked' },
						initialize: function (e) {
							(this.content = e.content),
								(this.placement = e.placement),
								(this.hideOnBodyClick = !!e.hideOnBodyClick),
								(this.container = e.container || '.main-body');
						},
						show: function () {
							this.rendered || this.render();
							var e = '';
							this.hideOnBodyClick && (e = 'hide-on-body-click'),
								this.$el.addClass('error'),
								this.$el.addClass('error-tooltip-active'),
								this.$el.data('title', this.content),
								this.$el
									.tooltip({
										placement: this.placement,
										template:
											'<div class="tooltip tooltip-error ' +
											e +
											'"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
										trigger: 'manual',
										container: this.container,
									})
									.tooltip('show'),
								this.$el.on('hidden.bs.modal', function (e) {
									e.stopPropagation();
								}),
								this.$el.on('hide.bs.modal', function (e) {
									e.stopPropagation();
								}),
								this.$el.on('hide', function (e) {
									e.stopPropagation();
								});
						},
						hide: function () {
							this.$el
								.removeClass('error')
								.removeClass('error-tooltip-active')
								.tooltip('destroy');
						},
						render: function () {
							(this.rendered = !0), this.onBodyClicked();
						},
						onBodyClicked: function () {
							if (this.hideOnBodyClick) {
								var e = this;
								r()('body').one('click', function () {
									r()('.hide-on-body-click').fadeOut(100), e.hide();
								});
							}
						},
					});
				o.hideAll = function () {
					r()('.error-tooltip-active')
						.tooltip('hide')
						.removeClass('tooltip-active');
				};
				const l = o;
			},
			866225: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => n });
				i(352406), i(34581), i(501705);
				const n = {
					getHowToSyncURL: function () {
						return '/modern/activity-sync';
					},
				};
			},
			543175: (e, t, i) => {
				'use strict';
				i.r(t), i.d(t, { default: () => _ });
				i(595695);
				var n = i(850564),
					a = i(523501),
					s = i(998813),
					r = i.n(s),
					o = i(29273),
					l = i(951298),
					c = i(793685),
					d = { CYCLING: 'riding', PEDESTRIAN: 'walking' },
					u =
						(n.A.ErrorCodes.ROUTE_TO_LONG,
						n.A.ErrorCodes.ROUTE_TO_FAR_FROM_ROADS,
						function (e) {
							return c.A.call(this, e), this;
						});
				((u.prototype = Object.create(c.A.prototype)).constructor = u),
					(u.prototype.fetch = function (e, t) {
						var i = this.transitMode;
						d[this.transitMode] && (i = d[this.transitMode]);
						var a = ['https://api.map.baidu.com/direction/v1?'];
						a.push('mode=' + i),
							a.push('&coord_type=bd09ll'),
							a.push('&ret_coordtype=bd09ll'),
							a.push('&origin=' + e.start[0] + ',' + e.start[1]),
							a.push('&destination=' + e.end[0] + ',' + e.end[1]),
							a.push('&origin_region='),
							a.push('&destination_region='),
							a.push('&ak=' + l.A.baiduKey),
							a.push('&output=json'),
							a.push('&callback=?'),
							r()
								.getJSON(a.join(''), function (i) {
									if (i.result) {
										if (!i.result.routes) return void s(e, i);
										var n = i.result.routes[0],
											a = e.isMetric
												? (n.distance / 1e3) * o.A.ConversionFactors.KmToMeters
												: (n.distance / 1e3) *
													o.A.ConversionFactors.MilesToMeters,
											l = [];
										r().each(n.steps, function (e, t) {
											var i = t.path.split(';');
											r().each(i, function (e, t) {
												var i = t.split(',');
												l.push([Number(i[1]), Number(i[0]), 0, 0]);
											});
										}),
											e.success.call(t, { points: l, meters: a });
									} else s(e, i);
								})
								.fail(function (i, n, a) {
									e.error.call(t, n, a);
								});
						let s = function (e, i) {
							let a;
							(a =
								2 === i.status || 2002 === i.status
									? n.A.ErrorCodes.ROUTE_TO_LONG
									: n.A.ErrorCodes.GENERIC),
								e.error.call(t, a, i.status, a);
						};
					});
				const p = u;
				var y = i(60575),
					h = function (e) {
						return y.A.apply(this, e), this;
					};
				((h.prototype = Object.create(y.A.prototype)).constructor = h),
					(h.prototype.fetch = function (e, t) {
						var i = ['https://api.map.baidu.com/geocoder/v2/?'];
						i.push('ret_coordtype=bd09ll'),
							i.push('&address=' + encodeURIComponent(e.address)),
							i.push('&ak=' + l.A.baiduKey),
							i.push('&output=json'),
							i.push('&callback=?'),
							r()
								.getJSON(i.join(''), function (i) {
									if (i.result) {
										var n = i.result.location;
										e.success.call(t, {
											address: e.address,
											location: [n.lat, n.lng],
										});
									} else e.error.call(t, i, 'Unexpected data returned.');
								})
								.fail(function (i, n, a) {
									e.error.call(t, n, a);
								});
					});
				const g = h;
				var m = { ROAD: 'ROAD.Map', SATELLITE: 'SATELLITE.Map' },
					A = function (e) {
						a.A.apply(this, e),
							(this.directionService = new p({ transitMode: e.transitMode })),
							(this.locationService = new g({})),
							(this.name = n.A.MapProviders.BAIDU);
					};
				((A.prototype = Object.create(a.A.prototype)).constructor = A),
					(A.prototype.getTileLayer = function (e) {
						return (e = e && m[e] ? m[e] : m.ROAD);
					});
				const _ = A;
			},
			6933: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				i(595695);
				var n = i(850564),
					a = i(523501),
					s = i(855909),
					r = i(667505),
					o = { ROAD: 'mapbox.streets', SATELLITE: 'mapbox.satellite' },
					l = {
						url: 'https://connectcache20.azureedge.net/',
						options: {
							minZoom: 3,
							maxZoom: 17,
							attribution:
								'&copy; <a href="https://openstreetmap.org/copyright" target="_blank" rel="noopener">OpenStreetMaps</a> contributors &copy; Garmin Ltd. or its Affiliates',
						},
					},
					c = function (e) {
						a.A.apply(this, arguments),
							e.layerType && o[e.layerType]
								? (l.options.id = o[e.layerType])
								: (l.options.id = o.ROAD),
							(this.directionService = new s.A({ transitMode: e.transitMode })),
							(this.locationService = new r.A({})),
							(this.name = n.A.MapProviders.OSM);
					};
				((c.prototype = Object.create(a.A.prototype)).constructor = c),
					(c.prototype.getTileLayer = function (e) {
						return e && o[e] && (l.options.id = o[e]), l;
					}),
					(c.prototype.getSupportedMaxZoom = function () {
						return l.options.maxZoom;
					}),
					(c.TileLayer = l);
				const d = c;
			},
			28351: (e, t, i) => {
				'use strict';
				i.r(t), i.d(t, { default: () => m });
				i(595695);
				var n = i(850564),
					a = i(523501),
					s = i(998813),
					r = i.n(s),
					o = i(793685),
					l = { CYCLING: 'BICYCLING', PEDESTRIAN: 'WALKING' },
					c = function (e) {
						return (
							o.A.call(this, e),
							(this.directionService = new google.maps.DirectionsService()),
							(this.retryCount = 0),
							this
						);
					};
				((c.prototype = Object.create(o.A.prototype)).constructor = c),
					(c.prototype.retryCountSet = function () {
						this.retryCount = 0;
					}),
					(c.prototype.fetch = function (e, t) {
						var i = google.maps.TravelMode.WALKING,
							a = this,
							s = new google.maps.LatLng(e.start[0], e.start[1]),
							o = new google.maps.LatLng(e.end[0], e.end[1]);
						l[this.transitMode] && (i = l[this.transitMode]);
						var c = {
							origin: s,
							destination: o,
							travelMode: i,
							provideRouteAlternatives: !1,
							avoidHighways: !0,
							avoidTolls: !0,
						};
						e.isMetric
							? (c.unitSystem = google.maps.UnitSystem.METRIC)
							: (c.unitSystem = google.maps.UnitSystem.IMPERIAL),
							this.directionService.route(c, function (s, o) {
								if (o === google.maps.DirectionsStatus.OK) {
									for (
										var c = s.routes[0], d = 0, u = 0;
										u < c.legs.length;
										u++
									)
										d += c.legs[u].distance.value;
									var p = [];
									r().each(c.overview_path, function (e, t) {
										p.push([t.lat(), t.lng(), 0, 0]);
									}),
										(a.errorCount = 0),
										e.success.call(t, { points: p, meters: d });
								} else
									i === l.CYCLING && 0 == a.retryCount
										? ((a.transitMode = n.A.TRANSIT_MODE.PEDESTRIAN),
											a.retryCount++,
											a.fetch(e, t))
										: e.error.call(t, o, o, n.A.ErrorCodes.GENERIC);
							});
					});
				const d = c;
				var u = i(60575),
					p = function (e) {
						return (
							u.A.apply(this, e),
							(this.geocoder = new google.maps.Geocoder()),
							this
						);
					};
				((p.prototype = Object.create(u.A.prototype)).constructor = p),
					(p.prototype.fetch = function (e, t) {
						this.geocoder.geocode({ address: e.address }, function (i, n) {
							n === google.maps.GeocoderStatus.OK && i.length > 0
								? e.success.call(t, {
										address: e.address,
										location: [
											i[0].geometry.location.lat(),
											i[0].geometry.location.lng(),
										],
									})
								: e.error.call(t, 'Error finding address', n);
						});
					});
				const y = p;
				i(825123);
				var h = {
						ROAD: 'ROADMAP',
						SATELLITE: 'SATELLITE',
						TERRAIN: 'TERRAIN',
						HYBRID: 'HYBRID',
					},
					g = function (e, t) {
						a.A.apply(this, arguments),
							(this.name = n.A.MapProviders.GOOGLE),
							new L.gridLayer.googleMutant({
								onAfterLoad: () => {
									(this.directionService = new d({
										transitMode: e && e.transitMode ? e.transitMode : null,
									})),
										(this.locationService = new y({})),
										t && t();
								},
							});
					};
				((g.prototype = Object.create(a.A.prototype)).constructor = g),
					(g.prototype.getTileLayer = function (e) {
						return (e = e && h[e] ? h[e] : h.ROAD);
					});
				const m = g;
			},
			965204: (e, t, i) => {
				'use strict';
				i.r(t), i.d(t, { default: () => u });
				i(595695);
				var n = i(951298),
					a = i(54009),
					s = i.n(a),
					r = i(850564),
					o = i(523501),
					l = i(855909),
					c = i(667505),
					d =
						(i(722246),
						function (e) {
							o.A.apply(this, e),
								(this.directionService = new l.A({
									transitMode: e.transitMode,
								})),
								(this.locationService = new c.A({})),
								(this.name = r.A.MapProviders.HERE);
						});
				((d.prototype = Object.create(o.A.prototype)).constructor = d),
					(d.prototype.getTileLayer = function (e) {
						return (
							(e = e || 'road'),
							new (s().tileLayer.here)({
								appId: n.A.HereAppId,
								apiKey: n.A.HereApiKey,
								style: r.A.HereMapTileTypeMapping[e.toLowerCase()],
							})
						);
					});
				const u = d;
			},
			523501: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => C });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s);
				i(318383);
				const o = r().Model.extend({
					defaults: {
						latitude: null,
						longitude: null,
						elevation: null,
						distance: null,
					},
					getLatitude: function () {
						return this.get('latitude');
					},
					getLongitude: function () {
						return this.get('longitude');
					},
					getElevation: function () {
						return this.get('elevation');
					},
					getDistance: function () {
						return this.get('distance');
					},
					setLatitude: function (e) {
						return this.set('latitude', e), this;
					},
					setLongitude: function (e) {
						return this.set('longitude', e), this;
					},
					setElevation: function (e) {
						return this.set('elevation', e), this;
					},
					setDistance: function (e) {
						return this.set('distance', e), this;
					},
				});
				var l = i(133499),
					c = i(850564);
				const d = r().Collection.extend({
					model: o,
					initialize: function (e) {
						(this.isFromImport = !1),
							e.isFromImport && (this.isFromImport = e.isFromImport);
					},
					backend: 'gcapi',
					url: function () {
						if (l.A.userInChina()) {
							let e = c.A.CoordinateSystem.BD09;
							return (
								this.isFromImport && (e = c.A.CoordinateSystem.WGS84),
								'/course-service/course/elevation/from/' + e + '/CN'
							);
						}
						return '/course-service/course/elevation';
					},
					fetch: function (e) {
						var t = e || {};
						return (
							(t.url = this.url()),
							(t.contentType = 'application/json'),
							(t.type = 'POST'),
							(t.data = this.getFormatedData()),
							r().Collection.prototype.fetch.call(this, t)
						);
					},
					getFormatedData: function () {
						var e = [];
						return (
							a().each(this.models, function (t) {
								null !== t.getLatitude() &&
									null !== t.getLongitude() &&
									e.push([t.getLatitude(), t.getLongitude(), null]);
							}),
							JSON.stringify(e)
						);
					},
					getElevationByLatLng: function (e, t) {
						var i = this.findWhere({ latitude: e, longitude: t });
						return i ? i.getElevation() : null;
					},
					parse: function (e) {
						if (e) {
							var t = [];
							return (
								a().each(e, function (e) {
									t.push(
										new o({ latitude: e[0], longitude: e[1], elevation: e[2] })
									);
								}),
								t
							);
						}
					},
				});
				var u = function (e) {};
				u.prototype.fetch = function (e, t) {
					var i = new d({ isFromImport: e.isFromImport }),
						n = null;
					a().each(e.geoPoints, function (e) {
						a().each(e.points, function (e) {
							(e.elevation = null),
								e.lat &&
									e.lng &&
									((n = new o({ latitude: e.lat, longitude: e.lng })),
									i.add(n));
						});
					}),
						i.fetch({
							success: function () {
								e.success &&
									(a().each(e.geoPoints, function (e) {
										a().each(e.points, function (e) {
											e.elevation = i.getElevationByLatLng(e.lat, e.lng);
										});
									}),
									e.success.call(t, e.geoPoints));
							},
							error: function (i, n, a) {
								e.error && e.error.call(t, a, n);
							},
						});
				};
				const p = u;
				var y = i(53950);
				const h = r().Collection.extend({
					model: y.A,
					urlRoot: '/course-service/course/popularRoutes',
					backend: 'gcapi',
					url: function () {
						return l.A.userInChina()
							? this.urlRoot +
									'?sourceCoordinateSystem=' +
									c.A.CoordinateSystem.BD09 +
									'&targetCoordinateSystem=' +
									c.A.CoordinateSystem.BD09 +
									'&startLat=' +
									this.startLat +
									'&startLon=' +
									this.startLon +
									'&endLat=' +
									this.endLat +
									'&endLon=' +
									this.endLon +
									(this.courseType ? '&courseType=' + this.courseType : '')
							: this.urlRoot +
									'?startLat=' +
									this.startLat +
									'&startLon=' +
									this.startLon +
									'&endLat=' +
									this.endLat +
									'&endLon=' +
									this.endLon +
									(this.courseType ? '&courseType=' + this.courseType : '');
					},
					initialize: function (e) {
						if (!e.startLat) throw 'startLat is required';
						if (!e.startLon) throw 'startLon is required';
						if (!e.endLat) throw 'endLat is required';
						if (!e.endLon) throw 'endLon is required';
						(this.courseType = e.courseType),
							(this.startLat = e.startLat),
							(this.startLon = e.startLon),
							(this.endLat = e.endLat),
							(this.endLon = e.endLon);
					},
					parse: function (e) {
						if (e) {
							var t = [];
							return (
								a().each(e, function (e) {
									a().each(e, function (e) {
										t.push({ latitude: e[0], longitude: e[1] });
									});
								}),
								t
							);
						}
					},
				});
				var g = i(856492),
					m = function () {};
				m.prototype.fetch = function (e, t) {
					var i,
						n,
						a,
						s =
							(e.courseType &&
								c.A.PopularityRouteTypes[e.courseType.toUpperCase()]) ||
							c.A.PopularityRouteTypes.ROAD_CYCLING,
						r = new h({
							startLat: e.start[0],
							startLon: e.start[1],
							endLat: e.end[0],
							endLon: e.end[1],
							courseType: s,
						}),
						o = [],
						l = 0;
					r.fetch({
						success: function (s, r, d) {
							if (e.success)
								if (200 === d.xhr.status && s) {
									for (
										s.each(function (e) {
											o.push([e.getLatitude(), e.getLongitude(), 0, 0]);
										}),
											i = 0;
										i < s.models.length - 1;
										i++
									)
										(n = s.models[i]),
											(a = s.models[i + 1]),
											(l += g.A.calculateDistanceBetweenPointsInMeters(
												n.getLatitude(),
												n.getLongitude(),
												a.getLatitude(),
												a.getLongitude()
											));
									e.success.call(t, { points: o, meters: l });
								} else
									204 === d.xhr.status
										? e.error.call(
												t,
												d.xhr.statusText,
												d.xhr.status,
												c.A.ErrorCodes.PR_NO_ROUTING_DATA
											)
										: e.error.call(
												t,
												d.xhr.statusText,
												d.xhr.status,
												c.A.ErrorCodes.PR_GENERIC
											);
						},
						error: function (i, n) {
							e.error &&
								e.error.call(
									t,
									n.statusText,
									n.status,
									c.A.ErrorCodes.PR_GENERIC
								);
						},
					});
				};
				const A = m;
				var _ = function () {
					return this;
				};
				_.prototype.fetch = function () {};
				const E = _;
				var T = function () {
					return (
						(this.name = null),
						(this.directionService = null),
						(this.locationService = null),
						(this.elevationService = new p()),
						(this.popularityRoutingService = new A()),
						(this.convertService = new E()),
						this
					);
				};
				(T.prototype.getDirectionService = function () {
					return this.directionService;
				}),
					(T.prototype.getLocationService = function () {
						return this.locationService;
					}),
					(T.prototype.getElevationService = function () {
						return this.elevationService;
					}),
					(T.prototype.getPopularityRoutingService = function () {
						return this.popularityRoutingService;
					}),
					(T.prototype.getConvertService = function () {
						return this.convertService;
					}),
					(T.prototype.updateTransitionMode = function (e) {
						this.directionService &&
							'function' ===
								typeof this.directionService.updateTransitionMode &&
							this.directionService.updateTransitionMode(e);
					}),
					(T.prototype.getName = function () {
						return this.name;
					}),
					(T.prototype.getSupportedMaxZoom = function () {
						return 18;
					}),
					(T.prototype.getSupportedMinZoom = function () {
						return 3;
					});
				const C = T;
			},
			793685: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => s });
				var n = i(850564),
					a = function (e) {
						return (
							(this.transitMode = null),
							this.updateTransitionMode(e.transitMode || null),
							this
						);
					};
				(a.prototype.fetch = function () {}),
					(a.prototype.updateTransitionMode = function (e) {
						e && e.parent
							? (this.transitMode =
									'cycling' === e.parent
										? n.A.TRANSIT_MODE.CYCLING
										: n.A.TRANSIT_MODE.PEDESTRIAN)
							: (this.transitMode = n.A.TRANSIT_MODE.PEDESTRIAN);
					});
				const s = a;
			},
			855909: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => y });
				var n = i(595695),
					a = i.n(n),
					s = i(893855),
					r = i.n(s),
					o = i(53950);
				const l = r().Collection.extend({
					model: o.A,
					url: function () {
						return (
							'/course-service/course/routes?startLat=' +
							this.startLat +
							'&startLon=' +
							this.startLon +
							'&endLat=' +
							this.endLat +
							'&endLon=' +
							this.endLon +
							'&courseType=' +
							this.courseType
						);
					},
					backend: 'gcapi',
					initialize: function (e) {
						if (!e.startLat) throw 'startLat is required';
						if (!e.startLon) throw 'startLon is required';
						if (!e.endLat) throw 'endLat is required';
						if (!e.endLon) throw 'endLon is required';
						if (!e.courseType) throw 'courseType is required';
						(this.startLat = e.startLat),
							(this.startLon = e.startLon),
							(this.endLat = e.endLat),
							(this.endLon = e.endLon),
							(this.courseType = e.courseType);
					},
					parse: function (e) {
						if (e) {
							var t = [];
							return (
								a().each(e, function (e) {
									a().each(e, function (e) {
										t.push({ latitude: e[0], longitude: e[1] });
									});
								}),
								t
							);
						}
					},
				});
				var c = i(850564),
					d = i(856492),
					u = i(793685),
					p = function (e) {
						return u.A.call(this, e), this;
					};
				((p.prototype = Object.create(u.A.prototype)).constructor = p),
					(p.prototype.updateTransitionMode = function (e) {
						e.parent
							? 'cycling' === e.parent && e.value
								? (this.transitMode =
										c.A.PopularityRouteTypes[e.value.toUpperCase()] ||
										c.A.PopularityRouteTypes.ROAD_CYCLING)
								: 'running' === e.parent &&
									e.value &&
									(this.transitMode =
										c.A.PopularityRouteTypes[e.value.toUpperCase()] ||
										c.A.PopularityRouteTypes.RUNNING)
							: (this.transitMode = c.A.PopularityRouteTypes.RUNNING);
					}),
					(p.prototype.fetch = function (e, t) {
						var i,
							n,
							a,
							s = new l({
								startLat: e.start[0],
								startLon: e.start[1],
								endLat: e.end[0],
								endLon: e.end[1],
								courseType: this.transitMode,
							}),
							r = [],
							o = 0;
						return s.fetch({
							success: function (s, l, u) {
								if (e.success)
									if (200 === u.xhr.status && s) {
										for (
											s.each(function (e) {
												r.push([e.getLatitude(), e.getLongitude(), 0, 0]);
											}),
												i = 0;
											i < s.models.length - 1;
											i++
										)
											(n = s.models[i]),
												(a = s.models[i + 1]),
												(o += d.A.calculateDistanceBetweenPointsInMeters(
													n.getLatitude(),
													n.getLongitude(),
													a.getLatitude(),
													a.getLongitude()
												));
										e.success.call(t, { points: r, meters: o });
									} else
										u.xhr.status,
											e.error.call(
												t,
												u.xhr.statusText,
												u.xhr.status,
												c.A.ErrorCodes.GENERIC
											);
							},
							error: function (i, n) {
								e.error &&
									e.error.call(
										t,
										n.statusText,
										n.status,
										c.A.ErrorCodes.GENERIC
									);
							},
						});
					});
				const y = p;
			},
			667505: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => l });
				var n = i(951298),
					a = i(60575),
					s = i(411755),
					r = i.n(s),
					o = function (e) {
						return a.A.apply(this, e), this;
					};
				((o.prototype = Object.create(a.A.prototype)).constructor = o),
					(o.prototype.fetch = function (e, t) {
						r()('//js.api.here.com/v3/3.1/mapsjs-core.js', () => {
							r()(
								[
									'//js.api.here.com/v3/3.1/mapsjs-core-legacy.js',
									'//js.api.here.com/v3/3.1/mapsjs-service.js',
								],
								() => {
									r()(
										'//js.api.here.com/v3/3.1/mapsjs-service-legacy.js',
										() => {
											(() => {
												var i = new H.service.Platform({
														apiKey: n.A.HereApiKey,
														useHTTPS: !0,
													}).getSearchService(),
													a = { q: e.address };
												i.geocode(
													a,
													function (i) {
														if (i.items && i.items.length > 0) {
															var n = i.itemst[0].position;
															e.success.call(t, {
																address: e.address,
																location: [n.lat, n.lng],
															});
														} else
															e.error.call(t, i, 'Unexpected data returned.');
													},
													function (i) {
														e.error.call(t, i, 'Unexpected data returned.');
													}
												);
											})();
										}
									);
								}
							);
						});
					});
				const l = o;
			},
			60575: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = function () {
					return this;
				};
				n.prototype.fetch = function () {};
				const a = n;
			},
			856492: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => l });
				var n = i(54009),
					a = i.n(n),
					s = i(181990),
					r = (i(214039), i(720436), i(966243), i(820224)),
					o = () => {};
				(o.MaxDistance = 999),
					(o.Radius = { KILOMETERS: 6371, MILES: 3959 }),
					(o.ZoomLevel = { MAX: 9, FAR: 10, MEDIUM: 12, CLOSE: 13 }),
					(o.LowestHeatmapZoomLevel = 9),
					(o.Layers = {
						LAYER_DISTANCE_CLOSE: 'distanceLayerClose',
						LAYER_DISTANCE_MEDIUM: 'distanceLayerMedium',
						LAYER_DISTANCE_FAR: 'distanceLayerFar',
						LAYER_DISTANCE_MAX: 'distanceLayerMax',
						LAYER_MARKERS: 'markerLayer',
						LAYER_POSITION: 'positionLayer',
						POPULAR_AREAS: 'POPULAR_AREAS',
						LAYER_ELEVATION_SELECTION: 'elevationLayer',
						CUSTOM_POINT_LAYER: 'CUSTOM_POINT_LAYER',
						LAYER_POLYLINE_OVERLAY: 'polylineOverlayLayer',
						LAYER_TOOLTIP: 'layerTooltip',
					}),
					(o.calculateBoundingBoxAreaInKM = function (e, t, i, n) {
						return (
							this.calculateDistanceBetweenPointsInKM(e, n, t, n) *
							this.calculateDistanceBetweenPointsInKM(e, n, e, i)
						);
					}),
					(o.calculateDistanceBetweenPointsInKM = function (e, t, i, n) {
						var a = new r.A(e, t),
							o = new r.A(i, n);
						return a.distanceTo(o) * s.A.MetersToKm;
					}),
					(o.calculateDistanceBetweenPointsInMeters = function (e, t, i, n) {
						var a = new r.A(e, t),
							s = new r.A(i, n);
						return a.distanceTo(s);
					}),
					(o.calculateDistanceFromCollectionOfLatLngs = function (e) {
						var t = 0;
						if (e)
							for (var i = 0, n = e.length; i < n; i += 1) {
								var a = e[i],
									s = e[i + 1];
								a &&
									s &&
									(t += this.calculateDistanceBetweenPointsInMeters(
										a.lat,
										a.lng,
										s.lat,
										s.lng
									));
							}
						return t;
					}),
					(o.calculateDestinationPoint = function (e, t, i) {
						var n = (e = new r.A(e.lat, e.lng)).destinationPoint(t, i);
						return { lat: n.lat, lng: n.lon };
					}),
					(o.calculateBearingOfPoints = function (e, t) {
						var i = new r.A(e.lat, e.lng),
							n = new r.A(t.lat, t.lng);
						return i.finalBearingTo(n);
					}),
					(o.decodeLine = function (e) {
						var t = 0,
							i = [],
							n = 0,
							a = 0;
						if (e && void 0 != e)
							for (var s = e.length; t < s; ) {
								var r,
									o = 0,
									l = 0;
								do {
									(l |= (31 & (r = e.charCodeAt(t++) - 63)) << o), (o += 5);
								} while (r >= 32);
								(n += 1 & l ? ~(l >> 1) : l >> 1), (o = 0), (l = 0);
								do {
									(l |= (31 & (r = e.charCodeAt(t++) - 63)) << o), (o += 5);
								} while (r >= 32);
								(a += 1 & l ? ~(l >> 1) : l >> 1), i.push([1e-5 * n, 1e-5 * a]);
							}
						return i;
					}),
					(o.indexOfClosestPoint = function (e, t, i, n) {
						let s,
							r = -1,
							o = this.truncateLatLng(t, i);
						if (e && e.length >= 2) {
							for (s = 0; s < e.length - 1; s++)
								if (e[s] && e[s + 1]) {
									let t = this.truncateLatLng(e[s], i),
										n = this.truncateLatLng(e[s + 1], i);
									if (
										this.isPointsEqual(t, o, i) ||
										this.isPointsEqual(n, o, i) ||
										a().polyline([t, n]).getBounds().contains(o)
									) {
										r = s + 1;
										break;
									}
								}
							-1 !== r ||
								n ||
								(r =
									i > 2 ? this.indexOfClosestPoint(e, t, i - 1) : e.length - 1);
						}
						return r;
					}),
					(o.findPointOnPolyline = function (e, t, i, n, a) {
						var s,
							r,
							o,
							l,
							c,
							d,
							u,
							p = e[i - 1],
							y = e[i];
						return (
							p.equals(t)
								? (r = p)
								: y.equals(t)
									? (r = y)
									: p.equals(y)
										? (r = p)
										: ((o = n.latLngToPoint(p, a).x),
											(l = n.latLngToPoint(p, a).y),
											(c = n.latLngToPoint(y, a).x),
											(d = n.latLngToPoint(y, a).y),
											(u =
												((n.latLngToPoint(t, a).x - o) * (c - o) +
													(n.latLngToPoint(t, a).y - l) * (d - l)) /
												(Math.pow(c - o, 2) + Math.pow(d - l, 2))) > 1
												? (r = y)
												: u < 0
													? (r = p)
													: ((s = { x: o + u * (c - o), y: l + u * (d - l) }),
														(r = n.pointToLatLng(s, a)))),
							r.wrap()
						);
					}),
					(o.isPointsEqual = function (e, t, i) {
						return (
							this.roundPointToSpecified(e.lat, i) ===
								this.roundPointToSpecified(t.lat, i) &&
							this.roundPointToSpecified(e.lng, i) ===
								this.roundPointToSpecified(t.lng, i)
						);
					}),
					(o.truncateLatLng = function (e, t) {
						return a().latLng(
							this.roundPointToSpecified(e.lat, t),
							this.roundPointToSpecified(e.lng, t)
						);
					}),
					(o.roundPointToSpecified = function (e, t) {
						return Math.round(Math.pow(10, t) * e) / Math.pow(10, t);
					});
				const l = o;
			},
			850564: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => g });
				var n = i(595695),
					a = i.n(n),
					s = i(408822),
					r = i(893855),
					o = i.n(r),
					l = i(166343),
					c = i.n(l),
					d = { Small: 'relative bottom', Long: '' },
					u = {
						Success: 'alert-success',
						Error: 'alert-error',
						Info: 'alert-info',
						Warning: 'alert-warning',
					},
					p = o().View.extend({
						template: a().template(c()),
						className: 'alert',
						events: {
							'click #alert': 'onDismissLinkClicked',
							'click a[data-action]': 'onLinkClicked',
						},
						initialize: function (e) {
							if (!e.message) throw 'a message is required for the alert.';
							return (
								(this.message = e.message),
								(this.size = e.size || d.Long),
								(this.alertType = e.alertType || u.Success),
								(this.showAlert = e.showAlert || !1),
								(this.callback = e.callback),
								(this.localizeArgs = e.localizeArgs),
								this
							);
						},
						render: function () {
							return (
								this.$el.html(
									this.template({
										Localizer: s.A,
										message: this.message,
										args: this.localizeArgs,
									})
								),
								this.updateSizeInUI(),
								this.updateAlertTypeInUI(),
								this.showAlert ? this.displayAlert() : this.hideAlert(),
								this
							);
						},
						setMessage: function (e) {
							return e ? ((this.message = e), !0) : !!this.message;
						},
						setSize: function (e) {
							if (e) {
								if ('small' === e) return (this.size = d.Small), !0;
								if ('long' === e) return (this.size = d.Long), !0;
								if (e === d.Long || e === d.Small) return (this.size = e), !0;
							}
							return !!this.size;
						},
						setAlertType: function (e) {
							if (e) {
								if ('success' === e) return (this.alertType = u.Success), !0;
								if ('error' === e) return (this.alertType = u.Error), !0;
								if ('info' === e) return (this.alertType = u.Info), !0;
								if ('warning' === e) return (this.alertType = u.Warning), !0;
								if (
									e === u.Success ||
									e === u.Error ||
									e === u.Info ||
									u.Warning
								)
									return (this.alertType = e), !0;
							}
							return !!this.alertType;
						},
						updateSizeInUI: function () {
							this.size === d.Small
								? this.$el.addClass(d.Small)
								: this.size === d.Long && this.$el.removeClass(d.Small);
						},
						updateAlertTypeInUI: function () {
							this.alertType === u.Success
								? (this.$el.addClass(u.Success),
									this.$el.removeClass(u.Error),
									this.$el.removeClass(u.Info))
								: this.alertType === u.Error
									? (this.$el.addClass(u.Error),
										this.$el.removeClass(u.Success),
										this.$el.removeClass(u.Info))
									: this.alertType === u.Info
										? (this.$el.addClass(u.Info),
											this.$el.removeClass(u.Error),
											this.$el.removeClass(u.Success))
										: this.alertType === u.Warning &&
											(this.$el.addClass(u.Warning),
											this.$el.removeClass(u.Error),
											this.$el.removeClass(u.Success),
											this.$el.removeClass(u.Info));
						},
						setAndRenderAlert: function (e, t, i, n, a) {
							var s = this.setMessage(e),
								r = this.setSize(t),
								o = this.setAlertType(i);
							(this.localizeArgs = a),
								s &&
									r &&
									o &&
									((this.showAlert = !0), (this.callback = n), this.render());
						},
						displayAlert: function () {
							this.$el.show();
						},
						hideAlert: function () {
							this.$el.hide();
						},
						onDismissLinkClicked: function (e) {
							e.preventDefault(), this.hideAlert();
						},
						onLinkClicked: function (e) {
							e.preventDefault(),
								this.callback && this.callback(),
								this.hideAlert();
						},
					});
				(p.Size = d), (p.AlertType = u);
				const y = p;
				var h = function () {
					return this;
				};
				(h.PopularityRouteTypes = {
					ROAD_BIKING: 'ROAD_CYCLING',
					ROAD_CYCLING: 'ROAD_CYCLING',
					MOUNTAIN_BIKING: 'MOUNTAIN_BIKING',
					GRAVEL_BIKING: 'GRAVEL_BIKING',
					GRAVEL_CYCLING: 'GRAVEL_BIKING',
					MIXED_SURFACE: 'MIXED_SURFACE',
					RUNNING: 'RUNNING',
					TRAIL_RUNNING: 'TRAIL_RUNNING',
					HIKING: 'HIKING',
				}),
					(h.RoundTripRouteTypes = {
						ROAD_BIKING: 'ROAD_CYCLING',
						ROAD_CYCLING: 'ROAD_CYCLING',
						MOUNTAIN_BIKING: 'MOUNTAIN_BIKING',
						GRAVEL_BIKING: 'GRAVEL_BIKING',
						GRAVEL_CYCLING: 'GRAVEL_BIKING',
						MIXED_SURFACE: 'MIXED_SURFACE',
						RUNNING: 'RUNNING',
						TRAIL_RUNNING: 'TRAIL_RUNNING',
						HIKING: 'HIKING',
						OTHER: 'MIXED_SURFACE',
					}),
					(h.SupportedPopularityTypes = {
						ROAD_BIKING: 'ROAD_CYCLING',
						ROAD_CYCLING: 'ROAD_CYCLING',
						MOUNTAIN_BIKING: 'MOUNTAIN_BIKING',
						GRAVEL_BIKING: 'GRAVEL_BIKING',
						GRAVEL_CYCLING: 'GRAVEL_BIKING',
						RUNNING: 'RUNNING',
						TRAIL_RUNNING: 'TRAIL_RUNNING',
						HIKING: 'HIKING',
					}),
					(h.allowRoutingForRunning = !1),
					(h.isRunningSupportedPopularityTypes = function (e) {
						return e.indexOf('RUNNING') > -1;
					}),
					(h.isPopularityRoutingSupported = function (e) {
						return (
							!(!e || !this.SupportedPopularityTypes[e.toUpperCase()]) &&
							!(
								this.isRunningSupportedPopularityTypes(e.toUpperCase()) &&
								!this.allowRoutingForRunning
							)
						);
					}),
					(h.ErrorCodes = {
						GENERIC: 'GENERIC',
						ROUTE_TO_LONG: 'ROUTE_TO_LONG',
						ROUTE_TO_FAR_FROM_ROADS: 'ROUTE_TO_FAR_FROM_ROADS',
						NO_ROUTING_DATA: 'NO_ROUTING_DATA',
						PR_GENERIC: 'PR_GENERIC',
						PR_NO_ROUTING_DATA: 'PR_NO_ROUTING_DATA',
					}),
					(h.MAP_LAYER_TYPES = {
						ROAD: 'ROAD',
						SATELLITE: 'SATELLITE',
						TERRAIN: 'TERRAIN',
						HYBRID: 'HYBRID',
					}),
					(h.TRANSIT_MODE = { CYCLING: 'CYCLING', PEDESTRIAN: 'PEDESTRIAN' }),
					(h.MapProviders = {
						GOOGLE: 'google',
						OSM: 'osm',
						HERE: 'here',
						BING: 'bing',
						BAIDU: 'baidu',
					}),
					(h.HereMapTileTypeMapping = {
						road: 'explore.day',
						satellite: 'satellite.day',
						terrain: 'terrain.day',
						hybrid: 'explore.satellite.day',
					}),
					(h.DirectionServices = {
						GOOGLE: 'GOOGLE',
						OSM: 'OSM',
						GARMIN: 'GARMIN',
						BAIDU: 'BAIDU',
					}),
					(h.HeatMapServices = { GARMIN: 'GARMIN' }),
					(h.TaskTypes = {
						START: 'START',
						END: 'END',
						SPLIT: 'SPLIT',
						CUSTOM: 'CUSTOM',
					}),
					(h.ProviderToNameMapping = {
						google: 'Google',
						here: 'here',
						osm: 'OpenStreetMap',
						baidu: 'Baidu',
					}),
					(h.RoutingErrorMapping = {
						GENERIC: {
							key: 'course_map_alert_error_retrieving_route',
							alertType: y.AlertType.Warning,
						},
						ROUTE_TO_LONG: {
							key: 'course_route_to_long',
							alertType: y.AlertType.Info,
						},
						ROUTE_TO_FAR_FROM_ROADS: {
							key: 'course_route_to_far_from_roads',
							alertType: y.AlertType.Info,
						},
						NO_ROUTING_DATA: {
							key: 'course_map_alert_error_retrieving_route',
							alertType: y.AlertType.Warning,
						},
						PR_GENERIC: {
							key: 'course_pr_service_error',
							alertType: y.AlertType.Warning,
						},
						PR_NO_ROUTING_DATA: {
							key: 'course_pr_no_routing_data',
							alertType: y.AlertType.Warning,
						},
					}),
					(h.DrawingMethods = {
						SNAP_TO_ROAD: 'snap',
						POPULAR_ROUTES: 'popular',
						FREEHAND: 'free',
					}),
					(h.CoordinateSystem = {
						WGS84: 'WGS84',
						GCJ02: 'GCJ02',
						BD09: 'BD09',
					}),
					(h.LeafletDefaults = { POLYLINE: { COLOR: null, WEIGHT: 4 } }),
					(h.extend = function (e, t) {
						for (var i in t) i && t.hasOwnProperty(i) && (e[i] = t[i]);
					});
				const g = h;
			},
			659990: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				var n = i(893855),
					a = i.n(n),
					s = i(998813),
					r = i.n(s),
					o = { ON_TOOLTIP_OPENED: 'ON_TOOLTIP_OPENED' };
				const l = () => r()('body').hasClass('mobile');
				l() ||
					r()(document.body).click(function (e) {
						var t = e || window.event;
						r()(t.target).is('.tooltip-active') ||
							r()('.tooltip-active')
								.tooltip('hide')
								.removeClass('tooltip-active');
					});
				var c = a().View.extend({
					events: {
						click: 'onElementClicked',
						mouseenter: 'onElementMouseEnter',
						mouseleave: 'onElementMouseLeave',
					},
					initialize: function (e) {
						(this.content = e.content || this.$el.attr('title')),
							(this.placement = e.placement || this.$el.data('placement')),
							(this.container = e.container ? e.container : '.main-body'),
							(this.allowHtml = !('allowHtml' in e) || e.allowHtml),
							(this.allowClickThrough =
								'allowClickThrough' in e && e.allowClickThrough),
							l() && (this.allowClickThrough = !0),
							(this.isSetup = !1),
							(this.isHovering = !1),
							this.render();
					},
					onElementClicked: function (e) {
						this.allowClickThrough || e.preventDefault(), this.show();
					},
					onElementMouseEnter: function (e) {
						(this.isHovering = !0), this.show();
					},
					onElementMouseLeave: function () {
						(this.isHovering = !1), this.hide();
					},
					show: function () {
						this.content &&
							(this.isSetup ||
								(this.$el.tooltip({
									trigger: 'manual',
									container: this.container,
								}),
								(this.isSetup = !0)),
							this.isHovering && this.$el.tooltip('show'),
							this.$el.hasClass('tooltip-active') ||
								(this.$el.addClass('tooltip-active'),
								this.trigger(o.ON_TOOLTIP_OPENED)),
							this.$el.on('hidden.bs.modal', function (e) {
								e.stopPropagation();
							}),
							this.$el.on('hide.bs.modal', function (e) {
								e.stopPropagation();
							}),
							this.$el.on('hide', function (e) {
								e.stopPropagation();
							}));
					},
					hide: function () {
						this.isSetup && this.$el.tooltip('hide'),
							this.$el.removeClass('tooltip-active');
					},
					render: function () {
						this.$el.attr('data-rel', 'tooltip'),
							this.$el.attr('data-html', this.allowHtml),
							this.$el.attr('data-original-title', this.content),
							this.$el.attr('aria-label', this.content),
							this.placement && this.$el.attr('data-placement', this.placement);
					},
					setContent: function (e) {
						this.content = e;
					},
					renderContent: function () {
						this.$el.attr('data-original-title', this.content),
							this.isHovering && this.onElementMouseEnter();
					},
				});
				(c.Events = o),
					(c.hideAll = function () {
						r()('.tooltip-active')
							.tooltip('hide')
							.removeClass('tooltip-active');
					});
				const d = c;
			},
			996694: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => I });
				var n = i(228748),
					a = i(999205),
					s = i(959546),
					r = i(946186),
					o = i.n(r),
					l = i(882155),
					c = i.n(l),
					d = i(127433),
					u = i.n(d),
					p = i(188626),
					y = i.n(p),
					h = i(108990),
					g = i.n(h),
					m = i(389827),
					A = i.n(m),
					_ = i(9471),
					E = {};
				(E.styleTagTransform = A()),
					(E.setAttributes = y()),
					(E.insert = u().bind(null, 'head')),
					(E.domAPI = c()),
					(E.insertStyleElement = g());
				o()(_.A, E);
				const T = _.A && _.A.locals ? _.A.locals : void 0;
				var C = i(717776);
				const S = ({
					inputRef: e,
					commentBody: t,
					commentBlockList: i,
					handleChange: r,
					widthStyle: o,
					enableMention: l,
					viewerDisplayName: c,
					portalElement: d,
					ignorePortalLayout: u,
					unLimitedHeight: p,
					placeholder: y,
				}) => {
					const [h] = (0, n.useState)(() => (i ? (0, s.Jd)(i) : (0, s.kg)(t))),
						g = (0, n.useCallback)((e) => {
							if (r) {
								const t = (0, s.mn)(e),
									i = (0, s.td)(e);
								r(t, i);
							}
						}, []);
					return (0, C.jsx)(a.A, {
						inputRef: e,
						enableMention: l,
						viewerDisplayName: c,
						containerClassName: o,
						textFieldClassName: `${T.textArea} ${p ? T.unLimitedHeight : ''}`,
						defaultValue: h,
						onChange: g,
						portalElement: d,
						ignorePortalLayout: u,
						customizedPlaceholder: y,
					});
				};
				S.defaultProps = { unLimitedHeight: !1 };
				const I = S;
			},
			970751: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => S });
				i(228748);
				var n = i(161605),
					a = i(668712),
					s = i(946186),
					r = i.n(s),
					o = i(882155),
					l = i.n(o),
					c = i(127433),
					d = i.n(c),
					u = i(188626),
					p = i.n(u),
					y = i(108990),
					h = i.n(y),
					g = i(389827),
					m = i.n(g),
					A = i(47205),
					_ = {};
				(_.styleTagTransform = m()),
					(_.setAttributes = p()),
					(_.insert = d().bind(null, 'head')),
					(_.domAPI = l()),
					(_.insertStyleElement = h());
				r()(A.A, _);
				const E = A.A && A.A.locals ? A.A.locals : void 0;
				var T = i(717776);
				const C = ({
					viewerDisplayName: e,
					modalOpen: t,
					onClose: i,
					title: s,
					connectionList: r,
					emptyState: o,
					isFetching: l,
					shouldAnimate: c,
					resetShouldAnimate: d,
					actionIndex: u,
					showSpinner: p,
					forceCloseOnNavigation: y,
					hasMore: h,
					fetchNext: g,
					disableMutualConnection: m,
				}) =>
					(0, T.jsx)(T.Fragment, {
						children: (0, T.jsxs)(a.lG, {
							open: t,
							closeBtn: !0,
							onClose: i,
							children: [
								(0, T.jsx)(a.L3, { children: s }),
								(0, T.jsxs)(a.Cf, {
									className: E.dialogBodyContainer,
									children: [
										(0, T.jsx)('div', {
											className: E.contentWrapper,
											children: (0, T.jsx)(n.A, {
												viewerDisplayName: e,
												connectionList: r,
												shouldAnimate: c,
												resetShouldAnimate: d,
												actionIndex: u,
												closeModal: i,
												forceCloseOnNavigation: y,
												showSpinner: p,
												hasMore: h,
												fetchNext: g,
												disableMutualConnection: m,
											}),
										}),
										!l && 0 === r.length && o,
									],
								}),
							],
						}),
					});
				C.defaultProps = {
					viewerDisplayName: '',
					emptyState: null,
					shouldAnimate: !1,
					resetShouldAnimate: () => {},
					actionIndex: -1,
					forceCloseOnNavigation: !1,
					hasMore: !1,
				};
				const S = C;
			},
			276052: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => S });
				var n = i(228748),
					a = i(668712),
					s = i(547052),
					r = i(946186),
					o = i.n(r),
					l = i(882155),
					c = i.n(l),
					d = i(127433),
					u = i.n(d),
					p = i(188626),
					y = i.n(p),
					h = i(108990),
					g = i.n(h),
					m = i(389827),
					A = i.n(m),
					_ = i(460930),
					E = {};
				(E.styleTagTransform = A()),
					(E.setAttributes = y()),
					(E.insert = u().bind(null, 'head')),
					(E.domAPI = c()),
					(E.insertStyleElement = g());
				o()(_.A, E);
				const T = _.A && _.A.locals ? _.A.locals : void 0;
				var C = i(717776);
				const S = ({
					isUserConnectionsOverLimitation: e,
					nameToDisplay: t,
					shouldModalOpen: i,
					onCloseModal: r,
				}) => {
					const [o, l] = (0, n.useState)(i),
						c = e
							? (0, C.jsx)(s.A, {
									ns: 'connections',
									content: 'max_connection_error_modal_content',
								})
							: (0, C.jsx)(s.A, {
									ns: 'connections',
									content: 'max_connection_error_modal_content_2',
									params: { 0: t, 1: 1e3 },
								});
					return (0, C.jsx)('div', {
						className: T.maxConnectonsModalContainer,
						children: (0, C.jsxs)(a.lG, {
							open: o,
							closeBtn: !0,
							onClose: () => {
								l(!1), r();
							},
							children: [
								(0, C.jsx)(a.L3, {
									children: (0, C.jsx)(s.A, {
										ns: 'connections',
										content: 'max_connection_error_modal_title',
									}),
								}),
								(0, C.jsx)(a.Cf, { children: c }),
								(0, C.jsx)(a.ii, {
									children: (0, C.jsx)(a.$n, {
										onClick: () => {
											l(!1), r();
										},
										children: (0, C.jsx)(s.A, { ns: 'common', content: 'ok' }),
									}),
								}),
							],
						}),
					});
				};
			},
			161605: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => k });
				var n = i(228748),
					a = i(82040),
					s = i(487829),
					r = i(583473),
					o = i(12883),
					l = i(668712),
					c = i(318383),
					d = i(115883),
					u = i(895292),
					p = i(547052),
					y = i(155641),
					h = i(307356),
					g = i(568574),
					m = i(946186),
					A = i.n(m),
					_ = i(882155),
					E = i.n(_),
					T = i(127433),
					C = i.n(T),
					S = i(188626),
					I = i.n(S),
					v = i(108990),
					f = i.n(v),
					D = i(389827),
					N = i.n(D),
					R = i(785073),
					b = {};
				(b.styleTagTransform = N()),
					(b.setAttributes = I()),
					(b.insert = C().bind(null, 'head')),
					(b.domAPI = E()),
					(b.insertStyleElement = f());
				A()(R.A, b);
				const L = R.A && R.A.locals ? R.A.locals : void 0;
				var P = i(636788),
					O = i(717776);
				const w = { showMutualConnectionsModal: s._B },
					F = ({
						viewerDisplayName: e,
						connectionList: t,
						shouldAnimate: i,
						resetShouldAnimate: a,
						actionIndex: s,
						closeModal: m,
						forceCloseOnNavigation: A,
						wrapItemInCard: _,
						showSpinner: E,
						hasMore: T,
						fetchNext: C,
						showFriendOnGarmin: S,
						showMutualConnectionsModal: I,
						disableMutualConnection: v,
					}) => {
						const f = (0, n.useRef)(null),
							D = (0, h.A)();
						(0, n.useEffect)(() => {
							if (T && f.current) {
								const e = new IntersectionObserver(N, {
									root: null,
									rootMargin: '0px',
									threshold: 0.5,
								});
								return (
									e.observe(f.current),
									() => {
										e.disconnect();
									}
								);
							}
						}, [T]);
						const N = (e) => {
								e[0].isIntersecting && C();
							},
							R = ({
								showMutualConnection: e,
								mutualConnectionsCount: t,
								hasLocation: i,
								location: n,
								connectionStatus: a,
							}) =>
								e
									? t > 1
										? (0, O.jsx)(p.A, {
												ns: 'connections',
												content: 'multiple_mutual_connections',
												params: { 0: t },
											})
										: (0, O.jsx)(p.A, {
												ns: 'connections',
												content: 'one_mutual_connection',
												params: { 0: 1 },
											})
									: i
										? n
										: S && (0, y.gP)(a)
											? (0, O.jsx)(p.A, {
													ns: 'connections',
													content: 'friend_on_garmin',
												})
											: null,
							b = ({
								nameToDisplay: t,
								displayName: i,
								mutualConnectionsCount: n,
								location: a,
								userPro: s,
								nameInFullWidth: r,
								connectionStatus: l,
								groupRole: d,
								action: y,
							}) => {
								const h = !v && !(e === i) && 'number' === typeof n && n > 0,
									_ = 'string' === typeof a && 0 !== a.length,
									E = d === g.Bw.OWNER,
									T = d === g.Bw.ADMIN,
									C = h ? (e) => w(e, i, n) : () => {};
								return (0, O.jsxs)('div', {
									className: L.userInfoContainer,
									children: [
										(0, O.jsxs)('div', {
											className: `${L.nameWrapper} ${r || D ? L.fullWidth : ''}`,
											children: [
												s &&
													(0, O.jsx)(o.A, {
														customizedStyle: L.labelProWrapper,
													}),
												D && y
													? (0, O.jsx)('a', {
															className: L.userName,
															href: c.default.url(`/profile/${i}`),
															onClick: (e) => {
																(0, u.Q)('Post Details', 'User Profile'),
																	c.default.anchorTagHandler(e),
																	A && m();
															},
															children: t,
														})
													: (0, O.jsx)('div', {
															className: L.userName,
															children: t,
														}),
												E &&
													(0, O.jsx)('div', {
														className: L.groupRoleLabel,
														children: (0, O.jsx)(p.A, {
															ns: 'group',
															content: 'owner',
														}),
													}),
												T &&
													(0, O.jsx)('div', {
														className: L.groupRoleLabel,
														children: (0, O.jsx)(p.A, {
															ns: 'group',
															content: 'admin',
														}),
													}),
											],
										}),
										(0, O.jsx)('div', {
											className: `${L.textConnectionDescription} ${h ? L.clickable : ''} ${r ? L.fullWidth : ''}`,
											onClick: C,
											children: R({
												showMutualConnection: h,
												mutualConnectionsCount: n,
												hasLocation: _,
												location: a,
												connectionStatus: l,
											}),
										}),
										D &&
											y &&
											(0, O.jsx)('div', {
												className: L.actionWrapper,
												children: y,
											}),
									],
								});
							},
							w = (e, t, i) => {
								e.preventDefault(),
									e.stopPropagation(),
									I({ displayName: t, show: !0, count: i });
							},
							F = ({
								fullName: e,
								displayName: t,
								profileImage: i,
								profileImageUrlSmall: n,
								profileImageSmall: a,
								mutualConnectionsCount: s,
								action: o,
								isDismissing: l,
								userLevel: p,
								userPro: y,
								location: h,
								connectionStatus: g,
								disableNavigation: _,
								groupRole: E,
							}) => {
								const T = e || t;
								return _
									? (0, O.jsxs)('div', {
											className: `${L.userWrapper} ${l ? L.hide : L.show}`,
											children: [
												(0, O.jsxs)('div', {
													className: L.avatarWrapper,
													children: [
														(0, O.jsx)('img', {
															className: L.avatar,
															src: i || n || a || d.Mg,
															role: 'presentation',
														}),
														'number' === typeof p &&
															(0, O.jsx)(r.A, { level: p, small: !0 }),
													],
												}),
												b({
													nameToDisplay: T,
													displayName: t,
													mutualConnectionsCount: s,
													location: h,
													userPro: y,
													nameInFullWidth: !o,
													connectionStatus: g,
													groupRole: E,
													action: o,
												}),
											],
										})
									: D && o
										? (0, O.jsxs)('div', {
												className: `${L.userWrapper} ${l ? L.hide : L.show}`,
												children: [
													(0, O.jsxs)('a', {
														className: L.avatarWrapper,
														href: c.default.url(`/profile/${t}`),
														onClick: (e) => {
															(0, u.Q)('Post Details', 'User Profile'),
																c.default.anchorTagHandler(e),
																A && m();
														},
														children: [
															(0, O.jsx)('img', {
																className: L.avatar,
																src: i || n || a || d.Mg,
																role: 'presentation',
															}),
															'number' === typeof p &&
																(0, O.jsx)(r.A, { level: p, small: !0 }),
														],
													}),
													b({
														nameToDisplay: T,
														displayName: t,
														mutualConnectionsCount: s,
														location: h,
														userPro: y,
														nameInFullWidth: !o,
														connectionStatus: g,
														groupRole: E,
														action: o,
													}),
												],
											})
										: (0, O.jsxs)('a', {
												className: `${L.userWrapper} ${l ? L.hide : L.show}`,
												href: c.default.url(`/profile/${t}`),
												onClick: (e) => {
													(0, u.Q)('Post Details', 'User Profile'),
														c.default.anchorTagHandler(e),
														A && m();
												},
												children: [
													(0, O.jsxs)('div', {
														className: L.avatarWrapper,
														children: [
															(0, O.jsx)('img', {
																className: L.avatar,
																src: i || n || a || d.Mg,
																role: 'presentation',
															}),
															'number' === typeof p &&
																(0, O.jsx)(r.A, { level: p, small: !0 }),
														],
													}),
													b({
														nameToDisplay: T,
														displayName: t,
														mutualConnectionsCount: s,
														location: h,
														userPro: y,
														nameInFullWidth: !o,
														connectionStatus: g,
														groupRole: E,
														action: o,
													}),
												],
											});
							};
						return (0, O.jsxs)(O.Fragment, {
							children: [
								E
									? (0, O.jsx)('div', {
											className: L.spinner,
											children: (0, O.jsx)(l.y$, {}),
										})
									: t.map((e, t) => {
											const {
												displayName: n,
												action: r,
												dismissingState: o,
												isDismissing: l,
											} = e;
											return (0, O.jsxs)(
												'div',
												{
													className: `${L.itemContainer} ${_ ? L.card : ''} ${l ? L.dismissing : ''}${i && -1 !== s && t >= s ? L.animated : ''}`,
													onAnimationEnd: () => a(),
													children: [
														F(e),
														!D &&
															r &&
															(0, O.jsx)('div', {
																className: `${L.actionWrapper} ${l ? L.hide : L.show}`,
																children: r,
															}),
														(0, O.jsx)('div', {
															className: `${L.dismissingOverlay} ${l ? L.show : L.hide}`,
															children: o,
														}),
													],
												},
												`connection-${n}`
											);
										}),
								T &&
									(() => {
										let e = (0, O.jsxs)('div', {
											ref: f,
											className: L.loaderContainer,
											children: [
												(0, O.jsx)('div', {
													className: `skeleton-object ${P.A.skeletonAvatar} ${L.avatar}`,
												}),
												(0, O.jsxs)('div', {
													className: `${P.A.skeletonBarWrapper} ${L.barWrapper}`,
													children: [
														(0, O.jsx)('div', {
															className: `skeleton-object ${P.A.skeletonBarOne}`,
														}),
														(0, O.jsx)('div', {
															className: `skeleton-object ${P.A.skeletonBarTwo}`,
														}),
													],
												}),
											],
										});
										return _ && (e = (0, O.jsx)(l.Zp, { children: e })), e;
									})(),
							],
						});
					};
				F.defaultProps = {
					viewerDisplayName: '',
					shouldAnimate: !1,
					resetShouldAnimate: () => {},
					actionIndex: -1,
					wrapItemInCard: !1,
					closeModal: () => {},
					forceCloseOnNavigation: !1,
					hasMore: !1,
					fetchNext: () => {},
					showFriendOnGarmin: !1,
					disableMutualConnection: !1,
				};
				const k = (0, a.Ng)(null, w)(F);
			},
			280185: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => S });
				i(228748);
				var n = i(668712),
					a = i(547052),
					s = i(318383),
					r = i(946186),
					o = i.n(r),
					l = i(882155),
					c = i.n(l),
					d = i(127433),
					u = i.n(d),
					p = i(188626),
					y = i.n(p),
					h = i(108990),
					g = i.n(h),
					m = i(389827),
					A = i.n(m),
					_ = i(995643),
					E = {};
				(E.styleTagTransform = A()),
					(E.setAttributes = y()),
					(E.insert = u().bind(null, 'head')),
					(E.domAPI = c()),
					(E.insertStyleElement = g());
				o()(_.A, E);
				const T = _.A && _.A.locals ? _.A.locals : void 0;
				var C = i(717776);
				const S = ({
					isModalOpen: e,
					onCloseModal: t,
					onDoNotShowAgainClick: i,
					handleOkClicked: r,
					btnDisabled: o,
				}) =>
					(0, C.jsxs)(n.lG, {
						closeBtn: !0,
						width: 'medium',
						open: e,
						onClose: t,
						children: [
							(0, C.jsx)(n.L3, {
								children: (0, C.jsx)(a.A, {
									ns: 'connections',
									content: 'data_and_privacy',
								}),
							}),
							(0, C.jsx)(n.Cf, {
								children: (0, C.jsxs)('div', {
									children: [
										(0, C.jsx)(a.A, {
											tag: 'h5',
											ns: 'connections',
											content: 'gdpr_connections_modal_title',
										}),
										(0, C.jsx)(a.A, {
											tag: 'p',
											ns: 'connections',
											content: 'gdpr_connections_text',
										}),
									],
								}),
							}),
							(0, C.jsx)(n.ii, {
								children: (0, C.jsxs)('div', {
									className: T.flexWrapper,
									children: [
										(0, C.jsx)('a', {
											href: s.default.url('/settings/privacySettings'),
											target: '_blank',
											className: 'colored',
											children: (0, C.jsx)(a.A, {
												ns: 'connections',
												content: 'gdpr_connections_modal_privacy2',
											}),
										}),
										(0, C.jsxs)('div', {
											className: T.buttonContainer,
											children: [
												(0, C.jsx)(n.$n, {
													color: 'secondary',
													size: 'medium',
													onClick: t,
													disabled: o,
													children: (0, C.jsx)(a.A, {
														ns: 'common',
														content: 'button_cancel',
													}),
												}),
												(0, C.jsx)('div', {
													className: T.buttonMargin,
													children: (0, C.jsx)(n.$n, {
														color: 'primary',
														size: 'medium',
														onClick: i,
														disabled: o,
														children: (0, C.jsx)(a.A, {
															ns: 'connections',
															content: 'gdpr_connections_modal_btn',
														}),
													}),
												}),
												(0, C.jsx)('div', {
													className: T.buttonMargin,
													children: (0, C.jsx)(n.$n, {
														color: 'primary',
														size: 'medium',
														onClick: r,
														disabled: o,
														children: (0, C.jsx)(a.A, {
															ns: 'common',
															content: 'button_ok',
														}),
													}),
												}),
											],
										}),
									],
								}),
							}),
						],
					});
			},
			778684: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => C });
				i(228748);
				var n = i(698164),
					a = i(668712),
					s = i(946186),
					r = i.n(s),
					o = i(882155),
					l = i.n(o),
					c = i(127433),
					d = i.n(c),
					u = i(188626),
					p = i.n(u),
					y = i(108990),
					h = i.n(y),
					g = i(389827),
					m = i.n(g),
					A = i(190801),
					_ = {};
				(_.styleTagTransform = m()),
					(_.setAttributes = p()),
					(_.insert = d().bind(null, 'head')),
					(_.domAPI = l()),
					(_.insertStyleElement = h());
				r()(A.A, _);
				const E = A.A && A.A.locals ? A.A.locals : void 0;
				var T = i(717776);
				const C = (0, n.CI)('news_feed')(
					({ menuItems: e, t: t, position: i = 'top' }) => {
						const n = (0, T.jsx)(a.m_, {
							position: i,
							title: t('news_feed:tooltip_more'),
							children: (0, T.jsx)('div', {
								className: E.iconWrapper,
								children: (0, T.jsx)('i', {
									className: `icon-ellipsis-vertical ${E.largerFont}`,
								}),
							}),
						});
						return (0, T.jsx)(a.W1, {
							trigger: n,
							ariaLabel: t('news_feed:tooltip_more'),
							children: e.map((e) =>
								(0, T.jsx)(
									a.Dr,
									{
										onClick: e.action,
										fitContent: !1,
										children: (0, T.jsx)('div', {
											className: E.itemLabel,
											children: e.label,
										}),
									},
									e.key
								)
							),
						});
					}
				);
			},
			12883: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				i(228748);
				var n = i(717776);
				const a = ({ customizedStyle: e }) =>
					(0, n.jsxs)('span', {
						className: `label-pro ${e || ''}`,
						children: [(0, n.jsx)('i', { className: 'icon-checkmark' }), 'Pro'],
					});
			},
			935378: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => S });
				i(228748);
				var n = i(668712),
					a = i(80879),
					s = i(698164),
					r = i(946186),
					o = i.n(r),
					l = i(882155),
					c = i.n(l),
					d = i(127433),
					u = i.n(d),
					p = i(188626),
					y = i.n(p),
					h = i(108990),
					g = i.n(h),
					m = i(389827),
					A = i.n(m),
					_ = i(835371),
					E = {};
				(E.styleTagTransform = A()),
					(E.setAttributes = y()),
					(E.insert = u().bind(null, 'head')),
					(E.domAPI = c()),
					(E.insertStyleElement = g());
				o()(_.A, E);
				const T = _.A && _.A.locals ? _.A.locals : void 0;
				var C = i(717776);
				const S = (0, s.CI)(['common'])(
					({
						data: e,
						onLikeClicked: t,
						tooltipText: i,
						hideNumber: s,
						onNumberClicked: r,
						tooltipDirection: o,
						shouldUseAdaptiveTooltip: l = !1,
					}) => {
						const { numberOfLikes: c, likedByUser: d } = e;
						let u =
							'function' === typeof r && c > 0 ? { cursor: 'pointer' } : null;
						const p = c > 0 ? r : null;
						return (0, C.jsxs)('span', {
							className: l ? `like ${T.likeContainer}` : 'like',
							children: [
								(0, C.jsx)('button', {
									className: 'like-link',
									'aria-label': a.Ay.t(d ? 'common:unlike' : 'common:like'),
									onClick: t,
									children: l
										? (0, C.jsx)(n.Kh, {
												position: o || 'top',
												title: a.Ay.t(d ? 'common:unlike' : 'common:like'),
												children: (0, C.jsx)('div', {
													className:
														'like-icon animated ' + (d ? 'tada' : 'fadeIn'),
													children: (0, C.jsx)('i', {
														className: d ? 'icon-heart' : 'icon-heart-inverted',
														'data-rel': 'tooltip',
														'data-original-title': a.Ay.t(
															d ? 'common:unlike' : 'common:like'
														),
													}),
												}),
											})
										: (0, C.jsx)(n.m_, {
												position: o || 'top',
												title: a.Ay.t(d ? 'common:unlike' : 'common:like'),
												children: (0, C.jsx)('div', {
													className:
														'like-icon animated ' + (d ? 'tada' : 'fadeIn'),
													children: (0, C.jsx)('i', {
														className: d ? 'icon-heart' : 'icon-heart-inverted',
														'data-rel': 'tooltip',
														'data-original-title': a.Ay.t(
															d ? 'common:unlike' : 'common:like'
														),
													}),
												}),
											}),
								}),
								s
									? null
									: (0, C.jsx)(C.Fragment, {
											children: l
												? (0, C.jsx)(n.Kh, {
														position: o || 'top',
														title: i,
														visible: '' !== i && void 0,
														children: (0, C.jsxs)('span', {
															className: 'like socialFeature',
															style: u,
															'data-html': 'true',
															'data-rel': 'tooltip',
															onClick: p,
															children: ['\xa0', c],
														}),
													})
												: (0, C.jsx)(n.m_, {
														position: o || 'top',
														title: i,
														visible: '' !== i && void 0,
														children: (0, C.jsxs)('span', {
															className: 'like socialFeature',
															style: u,
															'data-html': 'true',
															'data-rel': 'tooltip',
															onClick: p,
															children: ['\xa0', c],
														}),
													}),
										}),
							],
						});
					}
				);
			},
			315205: (e, t, i) => {
				'use strict';
				i.d(t, { z: () => C });
				i(228748);
				var n = i(547052),
					a = i(267264),
					s = i(946186),
					r = i.n(s),
					o = i(882155),
					l = i.n(o),
					c = i(127433),
					d = i.n(c),
					u = i(188626),
					p = i.n(u),
					y = i(108990),
					h = i.n(y),
					g = i(389827),
					m = i.n(g),
					A = i(787606),
					_ = {};
				(_.styleTagTransform = m()),
					(_.setAttributes = p()),
					(_.insert = d().bind(null, 'head')),
					(_.domAPI = l()),
					(_.insertStyleElement = h());
				r()(A.A, _);
				const E = A.A && A.A.locals ? A.A.locals : void 0;
				var T = i(717776);
				const C = (e, t, i = 0) => {
					if (!e || 0 === e.length) return '';
					const s = (e) => {
							let i = e.displayName;
							return (
								(i =
									e.displayName === t.displayName
										? t.fullName || t.displayName
										: e.fullName || e.displayName),
								(0, a.i)(i)
							);
						},
						r = i > 0 ? i : e.length;
					let o = r > 3,
						l = [];
					return (
						e.forEach((e, t) => {
							t < 2
								? l.push(
										(0, T.jsx)(
											'div',
											{ className: E.contentWrapper, children: s(e) },
											t
										)
									)
								: 2 === t &&
									l.push(
										(0, T.jsx)(
											'div',
											{
												className: E.contentWrapper,
												children: o
													? (0, T.jsx)(n.A, {
															ns: 'common',
															content: 'and_x_others',
															params: { 0: r - 2 },
														})
													: s(e),
											},
											t
										)
									);
						}),
						l
					);
				};
			},
			509728: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				var n = i(228748),
					a = i(82040),
					s = i(487829),
					r = i(970751),
					o = i(547052),
					l = i(717776);
				const c = ({
					displayName: e,
					isModalOpen: t,
					onCloseModal: i,
					mutualConnectionsCount: c,
					forceCloseOnNavigation: d,
				}) => {
					const u = (0, a.wA)(),
						{ connectionList: p, isFetching: y } = (0, a.d4)(
							(e) => e.mutualConnections
						);
					(0, n.useEffect)(
						() => () => {
							u((0, s.xG)());
						},
						[]
					),
						(0, n.useEffect)(() => {
							t && m(!0);
						}, [t]);
					const h = p.length > 0 && p.length < c,
						g = y && 0 === p.length,
						m = (0, n.useCallback)(
							(t) => u((0, s.cN)({ displayName: e, reset: t })),
							[e]
						);
					return (
						t &&
						(0, l.jsx)(r.A, {
							modalOpen: t,
							onClose: i,
							title: (0, l.jsx)(o.A, {
								ns: 'connections',
								content: 'mutual_connections',
							}),
							connectionList: p,
							isFetching: y,
							showSpinner: g,
							forceCloseOnNavigation: d,
							hasMore: h,
							fetchNext: () => m(!1),
							disableMutualConnection: !0,
						})
					);
				};
				c.defaultProps = { forceCloseOnNavigation: !1 };
				const d = c;
			},
			303642: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => s });
				var n = i(228748),
					a = i(717776);
				const s = ({
					componentRef: e,
					typeFormat: t = 'integer',
					children: i,
				}) => {
					const s = (0, n.useRef)([
							'ArrowUp',
							'ArrowDown',
							'ArrowLeft',
							'ArrowRight',
							'Tab',
							'Backspace',
							'Delete',
							'End',
							'Home',
						]),
						r = (0, n.useRef)([]);
					(0, n.useEffect)(
						() => (
							e.current.addEventListener('keydown', o),
							'integer' === t
								? (r.current = [8, 9, 37, 38, 39, 40, 46, 35, 36])
								: ((r.current = [
										8, 9, 37, 38, 39, 40, 46, 110, 188, 190, 35, 36,
									]),
									s.current.push(','),
									s.current.push('.')),
							() => {
								var t;
								return null === e ||
									void 0 === e ||
									null === (t = e.current) ||
									void 0 === t
									? void 0
									: t.removeEventListener('keydown', o);
							}
						)
					);
					const o = (e) => {
							let t = 'number' === typeof e.which ? e.which : e.keyCode,
								i = !1;
							if (
								(e.key && 'string' === typeof e.key
									? (i = c(e.key))
									: (e.key && 'string' === typeof e.key) || !l(t) || (i = !0),
								r.current.indexOf(t) > -1 && (i = !0),
								!i)
							)
								return e.preventDefault(), !1;
						},
						l = (e) => !d(e),
						c = (e) => /\d/.test(e) || s.current.indexOf(e) > -1,
						d = (e) => e < 48 || (e > 57 && e < 96) || e > 105;
					return (0, a.jsx)(a.Fragment, { children: i });
				};
			},
			128652: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => n });
				const n = {
					SECS_IN_ONE_HOUR: 3600,
					SECS_IN_ONE_DAY: 86400,
					MS_IN_ONE_HOUR: 36e5,
					MS_IN_ONE_DAY: 864e5,
					MAX_REST: 25,
					SECS_IN_ONE_MIN: 60,
					MS_IN_ONE_MIN: 6e4,
				};
			},
			547052: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => r });
				var n = i(228748),
					a = i(698164),
					s = i(717776);
				const r = (0, a.CI)()(
					({
						ns: e,
						content: t,
						params: i,
						tag: a,
						className: r,
						attr: o,
						prepend: l,
						children: c,
						t: d,
						i18n: u,
					}) => {
						const p = (0, n.useRef)(!1),
							[y, h] = (0, n.useState)(''),
							[g, m] = (0, n.useState)([]),
							[A, _] = (0, n.useState)(!1),
							E = (0, n.useCallback)(() => {
								let i = c || t;
								if (!i) throw Error('children or content must be provided');
								u.loadNamespaces(e, () => {
									let t = d(`${e}:${i}`, { skipInterpolation: !0 }),
										n = t.split(/({\w+?}|{\/\w+?})/g);
									p.current && (h(t), m(n));
								});
							}, [c, t, u, e, d]);
						return (
							(0, n.useEffect)(
								() => (
									(p.current = !0),
									() => {
										p.current = !1;
									}
								),
								[]
							),
							(0, n.useEffect)(() => {
								'function' === typeof c
									? u.loadNamespaces(e, (e) => {
											e && console.log(e[0]), _(!0);
										})
									: E();
							}, [u, e, c, E]),
							'function' === typeof c
								? c((t) =>
										A
											? Array.isArray(e)
												? d(`${t}`, i)
												: d(`${e}:${t}`, i)
											: ''
									)
								: (() => {
										if (!y) return '';
										let e;
										return (
											(e =
												'undefined' === typeof i
													? y
													: g.reduce((e, t, a) => {
															if (
																t.startsWith('{/') ||
																(g[a + 1] && g[a + 1].startsWith('{/'))
															)
																return e;
															if (!t.startsWith('{')) return e.push(t), e;
															let r = t.substring(1, t.length - 1);
															if ('undefined' === typeof i[r])
																return e.push(t), e;
															if ('object' === typeof i[r]) {
																let t = `${r}_${Math.random()}`;
																if (g[a + 2] && g[a + 2].startsWith('{/')) {
																	let s = n.cloneElement(i[r], {
																		key: t,
																		children: [i[r].props.children, g[a + 1]],
																	});
																	e.push(s);
																} else
																	e.push(
																		(0, s.jsx)(
																			n.Fragment,
																			{ children: i[r] },
																			t
																		)
																	);
																return e;
															}
															return e.push(i[r]), e;
														}, [])),
											a
												? (e instanceof Array && (e = e.join('')),
													l && (e = l + e),
													n.createElement(a, {
														...o,
														className: r,
														dangerouslySetInnerHTML: { __html: e },
													}))
												: (l && (e = l + e), e)
										);
									})()
						);
					}
				);
			},
			233452: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => l });
				var n = i(228748),
					a = i(82040),
					s = i(483796),
					r = i(717776);
				class o extends n.Component {
					componentDidMount() {
						const { actionToTrigger: e, param: t, dispatch: i } = this.props;
						i(e(t));
					}
					componentDidUpdate(e) {
						const { param: t, actionToTrigger: i, dispatch: n } = this.props;
						t !== e.param && n(i(t));
					}
					render() {
						return (0, r.jsx)(s.A, { ...this.props });
					}
				}
				const l = (0, a.Ng)()(o);
			},
			956362: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => u });
				i(228748);
				var n = i(673118),
					a = i(103832),
					s = i(379148),
					r = i(135988),
					o = i(115883),
					l = i(698164),
					c = i(717776);
				const d = (e, t, i) => {
						e.preventDefault();
						const { showModal: n, displayViewer: a } = t;
						let s = (0, c.jsx)(r.A, { ...t });
						a || (s = (0, c.jsx)(r.A, { ...t, displayName: null })),
							i && (s = (0, c.jsx)(r.A, { ...t, displayName: i })),
							n({ view: s, title: 'badges:badge_detail' });
					},
					u = (0, l.CI)(['badges'])((e) => {
						const {
							badge: t,
							viewer: i,
							viewerBadgeEarnedNumber: r,
							connection: l,
							connectionBadgeEarnedNumber: u,
							displayViewer: p,
							displayConnection: y,
						} = e;
						return (0, c.jsxs)('div', {
							className:
								'media ' + (e.available ? 'badge-available' : 'badge-earned'),
							children: [
								(0, c.jsx)('div', {
									className: 'pull-left',
									children: (0, c.jsxs)('a', {
										className: 'badge-thumbnail',
										href: '',
										onClick: (t) => d(t, e),
										children: [
											(0, c.jsx)(n.A, { badge: t, size: 'sml' }),
											p || y || !t.badgeProgressValue
												? null
												: (0, c.jsx)(s.A, {
														badgeProgressValue: t.badgeProgressValue,
														badgeTargetValue: t.badgeTargetValue,
														badgeUnitId: t.badgeUnitId,
													}),
										],
									}),
								}),
								(0, c.jsxs)('div', {
									className: 'media-body',
									children: [
										(0, c.jsx)('a', {
											className: 'badge-summary',
											href: '',
											onClick: (t) => d(t, e),
											children: (0, c.jsx)(a.A, { ...e, listStyle: !0 }),
										}),
										p || y
											? (0, c.jsxs)('div', {
													className: 'badge-compare',
													children: [
														p
															? (0, c.jsx)('div', {
																	className: 'badge-compare-user',
																	children: (0, c.jsxs)('a', {
																		href: '',
																		onClick: (t) => d(t, e),
																		children: [
																			(0, c.jsx)('img', {
																				className: 'avatar avatar-xsmall',
																				alt: i.fullName || i.displayName,
																				src: i.profileImageUrlMedium || o.Mg,
																			}),
																			r > 1
																				? (0, c.jsx)('span', {
																						className: 'badge-repeatable',
																						children: r,
																					})
																				: null,
																		],
																	}),
																})
															: null,
														y
															? (0, c.jsx)('div', {
																	className: 'badge-compare-connection',
																	children: (0, c.jsxs)('a', {
																		href: '',
																		onClick: (t) => d(t, e, l.displayName),
																		children: [
																			(0, c.jsx)('img', {
																				className: 'avatar avatar-xsmall',
																				alt: l.fullName || l.displayName,
																				src: l.profileImageUrlMedium || o.Mg,
																			}),
																			u > 1
																				? (0, c.jsx)('span', {
																						className: 'badge-repeatable',
																						children: u,
																					})
																				: null,
																		],
																	}),
																})
															: null,
													],
												})
											: null,
									],
								}),
							],
						});
					});
			},
			135988: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => U });
				var n = i(228748),
					a = i(82040),
					s = i(547052),
					r = i(211794),
					o = i(462026),
					l = i(668712),
					c = i(673118),
					d = i(379148),
					u = i(702291),
					p = i(422460),
					y = i(318383),
					h = i(435687),
					g = i(798718),
					m = i(717776);
				class A extends n.Component {
					constructor() {
						super(), (this.state = { open: !1, earnedDetails: null });
					}
					render() {
						const { badge: e, isConnection: t } = this.props;
						return null === e.displayName
							? t
								? null
								: (0, m.jsx)('div', {
										className: 'badge-earned-msg',
										children: (0, m.jsx)(s.A, {
											ns: 'common',
											content: 'badge_not_earned_status',
										}),
									})
							: (0, h.V)(e) && e.badgeEarnedNumber > 1
								? this.renderRepeatableMessage()
								: (0, m.jsx)('div', {
										className: 'badge-earned-msg',
										children: this.renderSingularMessage(),
									});
					}
					renderSingularMessage() {
						const { badge: e } = this.props,
							t = p.Ay.formatLongMonthDayYear(
								u.A.parseISOUTC(e.badgeEarnedDate)
							);
						let i,
							n,
							a = this.getBadgeAssocTypeKey(e.badgeAssocTypeId);
						if (
							a === g.S1.NO_LINK ||
							!e.badgeAssocDataId ||
							a === g.S1.BADGE_CHALLENGE
						)
							return this.renderEarnedString(t);
						switch (a) {
							case g.S1.ACTIVITY:
								(i =
									e.badgeAssocDataName ||
									(0, m.jsx)(s.A, { ns: 'activity-api', content: 'untitled' })),
									(n = `/activity/${e.badgeAssocDataId}`);
								break;
							case g.S1.GROUP_CHALLENGE:
								(i = e.badgeAssocDataName),
									(n = `/challenge/${e.badgeAssocDataId}`);
								break;
							case g.S1.ADHOC_CHALLENGE:
								(i = e.badgeAssocDataName),
									(n = `/adhoc-challenge/${e.badgeAssocDataId}`);
								break;
							case g.S1.VIVOFITJR_CHALLENGE:
								(i = e.badgeAssocDataName),
									(n = `/vivofitjr-challenge/${e.badgeAssocDataId}`);
								break;
							case g.S1.VIVOFITJR_TEAM_CHALLENGE:
								(i = e.badgeAssocDataName),
									(n = `/vivofitjr-teamchallenge/${e.badgeAssocDataId}`);
								break;
							case g.S1.DAY:
								(i = p.Ay.formatLongMonthDayYear(
									u.A.parseISO(e.badgeAssocDataId)
								)),
									(n = `/daily-summary/${e.badgeAssocDataId}`);
						}
						if (i && n) {
							let e = this.getAnchorForTranslation(i, n);
							return this.renderEarnedString(t, e);
						}
						return null;
					}
					renderEarnedString(e, t) {
						const { isConnection: i, badge: n } = this.props,
							a = n.fullName || n.displayName;
						return i
							? t
								? (0, m.jsx)(s.A, {
										ns: 'common',
										content: 'badge_earned_connection_name',
										params: { 0: e, 1: t, 2: a },
									})
								: (0, m.jsx)(s.A, {
										ns: 'common',
										content: 'badge_earned_connection_date',
										params: { 0: e, 1: a },
									})
							: t
								? (0, m.jsx)(s.A, {
										ns: 'common',
										content: 'badge_earned_name',
										params: { 0: e, 1: t },
									})
								: (0, m.jsx)(s.A, {
										ns: 'common',
										content: 'badge_earned_date',
										params: { 0: e },
									});
					}
					getAnchorForTranslation(e, t) {
						return (0, m.jsx)('a', {
							href: y.default.url(t),
							onClick: (e) => y.default.anchorTagHandler(e),
							children: e,
						});
					}
					getBadgeAssocTypeKey(e) {
						const { badgesAttributes: t } = this.props;
						return t.badgeAssocTypes.find((t) => t.badgeAssocTypeId === e)
							.badgeAssocTypeKey;
					}
					renderRepeatableMessage() {
						const { badge: e, isConnection: t } = this.props,
							i = (0, h.JU)(e);
						return (0, m.jsxs)('div', {
							className: 'badge-earned-msg',
							children: [
								t
									? (0, m.jsx)(s.A, {
											ns: 'common',
											content: 'badge_earned_connection_amount',
											params: {
												0: e.badgeEarnedNumber,
												1: e.fullName || e.displayName,
											},
										})
									: (0, m.jsx)(s.A, {
											ns: 'common',
											content: 'badge_earned_amount',
											params: { 0: e.badgeEarnedNumber },
										}),
								'\xa0',
								e.badgeLimitCount &&
									e.badgeLimitCount > 1 &&
									!i &&
									(0, m.jsx)(s.A, {
										ns: 'common',
										content: 'badge_earned_limit',
										params: { 0: e.badgeLimitCount },
									}),
								(0, m.jsx)('br', {}),
								(0, m.jsx)('a', {
									onClick: (e) => this.setState({ open: !this.state.open }),
									children: this.state.open
										? (0, m.jsx)('span', {
												id: 'hide-link',
												children: (0, m.jsx)(s.A, {
													ns: 'training_plans',
													content: 'training_plans_hide_details',
												}),
											})
										: (0, m.jsx)('span', {
												id: 'view-link',
												children: (0, m.jsx)(s.A, {
													ns: 'workout',
													content: 'view_details',
												}),
											}),
								}),
								this.state.open
									? (0, m.jsx)('ul', {
											className: 'badge-earned-msg-list collapse in',
											children: this.renderRepeatableMessageDetails(),
										})
									: null,
							],
						});
					}
					renderRepeatableMessageDetails() {
						const { displayName: e, badge: t } = this.props;
						return this.state.earnedDetails
							? this.state.earnedDetails.map((e, t) => {
									const i = p.Ay.formatMonthDayYear(
										u.A.parseISOUTC(e.badgeEarnedDate)
									);
									let n,
										a,
										r = !1;
									switch (this.getBadgeAssocTypeKey(e.badgeAssocTypeId)) {
										case g.S1.ACTIVITY:
											e.badgeAssocDataId &&
												((n = `/activity/${e.badgeAssocDataId}`),
												(a =
													e.badgeAssocDataName ||
													(0, m.jsx)(s.A, {
														ns: 'activity-api',
														content: 'untitled',
													})));
											break;
										case g.S1.GROUP_CHALLENGE:
											e.badgeAssocDataId &&
												((n = `/challenge/${e.badgeAssocDataId}`),
												(a = e.badgeAssocDataName));
											break;
										case g.S1.ADHOC_CHALLENGE:
											e.badgeAssocDataId &&
												((n = `/adhoc-challenge/${e.badgeAssocDataId}`),
												(a = e.badgeAssocDataName));
											break;
										case g.S1.VIVOFITJR_CHALLENGE:
											e.badgeAssocDataId &&
												((n = `/vivofitjr-challenge/${e.badgeAssocDataId}`),
												(a = e.badgeAssocDataName));
											break;
										case g.S1.VIVOFITJR_TEAM_CHALLENGE:
											e.badgeAssocDataId &&
												((n = `/vivofitjr-teamchallenge/${e.badgeAssocDataId}`),
												(a =
													e.badgeAssocDataName ||
													(0, m.jsx)(s.A, {
														ns: 'activity-api',
														content: 'untitled',
													})));
											break;
										case g.S1.DAY:
											if (e.badgeAssocDataId) {
												(n = `/daily-summary/${p.Ay.formatISODate(u.A.parseISOUTC(e.badgeEarnedDate))}`),
													(r = !0);
											}
									}
									return (0, m.jsxs)(
										'li',
										{
											children: [
												(0, m.jsx)('div', {
													className: 'badge-date',
													children: r
														? (0, m.jsx)('a', {
																href: y.default.url(n),
																onClick: (e) => y.default.anchorTagHandler(e),
																children: i,
															})
														: i,
												}),
												(0, m.jsx)('div', {
													className: 'badge-event truncate',
													children: a
														? (0, m.jsx)('a', {
																href: y.default.url(n),
																onClick: (e) => y.default.anchorTagHandler(e),
																children: a,
															})
														: null,
												}),
											],
										},
										t
									);
								})
							: ((0, r.TG)(e, t.badgeId, 1, 1e3).then((e) => {
									this.setState({ earnedDetails: e });
								}),
								(0, m.jsx)('div', {
									className: 'textCenter',
									children: (0, m.jsx)(l.y$, {}),
								}));
					}
				}
				const _ = A;
				var E = i(103832),
					T = i(956362);
				const C = (e) => {
						const { badge: t } = e;
						return t.relatedBadges.map((t, i) =>
							(0, n.createElement)(T.A, {
								...e,
								key: i,
								badge: t,
								available: !t.earnedByMe,
								displayName: t.earnedByMe
									? e.viewerSocialProfile.displayName
									: null,
								viewer: null,
								connection: null,
								displayViewer: !1,
								displayConnection: !1,
							})
						);
					},
					S = (e) => {
						const { badge: t } = e;
						return 0 === t.relatedBadges.length
							? null
							: (0, m.jsxs)('div', {
									className: 'related-badges-list',
									children: [
										(0, m.jsx)('h4', {
											className: 'h5',
											children: (0, m.jsx)(s.A, {
												ns: 'badges',
												content: 'related_badges',
											}),
										}),
										C(e),
									],
								});
					};
				var I = i(583473),
					v = i(115883),
					f = i(838626);
				class D extends n.Component {
					constructor(e) {
						super(e),
							(this.state = { connections: e.badge.connections }),
							(this.fetching = !1);
					}
					render() {
						const { badge: e } = this.props;
						if (0 === e.connectionNumber)
							return (0, m.jsxs)('div', {
								className: 'connections-with-badge',
								children: [
									(0, m.jsx)('h4', {
										className: 'h5',
										children: (0, m.jsx)(s.A, {
											ns: 'badges',
											content: 'connections_badge',
										}),
									}),
									(0, m.jsx)('div', {
										className: 'badge-connections-msg',
										children: (0, m.jsx)(s.A, {
											ns: 'badges',
											content: 'no_connections_earned_badge',
										}),
									}),
								],
							});
						const t = e.connectionNumber - this.state.connections.length;
						return (0, m.jsxs)('div', {
							className: 'connections-with-badge',
							children: [
								(0, m.jsx)('h4', {
									className: 'h5',
									children: (0, m.jsx)(s.A, {
										ns: 'badges',
										content: 'connections_badge',
									}),
								}),
								this.renderConnections(),
								t > 0
									? (0, m.jsxs)('a', {
											className: 'additional-connections',
											href: '',
											onClick: (e) => this.loadMoreConnections(e),
											children: ['+', t],
										})
									: null,
							],
						});
					}
					renderConnections() {
						return this.state.connections.map((e, t) => {
							const i = e.fullName || e.displayName;
							return (0, m.jsxs)(
								'a',
								{
									href: y.default.url('/profile/' + e.displayName),
									title: i,
									className: 'has-tooltip',
									onClick: (e) => this.onConnectionClicked(e),
									children: [
										(0, m.jsx)('img', {
											src: e.profileImageUrlMedium || v.Mg,
											className: 'avatar avatar-small',
											alt: i,
										}),
										(0, m.jsx)(I.A, { level: e.userLevel, small: !0 }),
									],
								},
								t
							);
						});
					}
					onConnectionClicked(e) {
						y.default.anchorTagHandler(e);
					}
					loadMoreConnections(e) {
						if ((e.preventDefault(), this.fetching)) return;
						this.fetching = !0;
						const { badge: t } = this.props;
						let i = 20;
						t.connectionNumber - this.state.connections.length - i < 2 &&
							(i += 1),
							(0, r.iZ)(t.badgeId, this.state.connections.length + 1, i)
								.then((e) => {
									(this.fetching = !1),
										this.setState({
											connections: [...this.state.connections, ...e],
										});
								})
								.catch(() => {
									this.fetching = !1;
								});
					}
					componentDidUpdate() {
						(0, f.F)();
					}
					componentDidMount() {
						(0, f.F)();
					}
				}
				const N = D,
					R = (e, t) => {
						const { dispatch: i } = t;
						i((0, o.ASY)()), y.default.anchorTagHandler(e);
					},
					b = (e) =>
						e
							? (0, m.jsx)(s.A, {
									ns: 'common',
									content: 'badge_earned_status',
								})
							: (0, m.jsx)(s.A, {
									ns: 'common',
									content: 'badge_not_earned_status',
								}),
					L = (e) => {
						const { badge: t, connection: i } = e;
						return i
							? (0, m.jsx)('a', {
									href: y.default.url('/badges/' + i),
									className: 'badge-status-msg',
									onClick: (t) => R(t, e),
									children: b(t.earnedByMe),
								})
							: (0, m.jsx)('div', {
									className: 'badge-status-msg',
									children: b(t.earnedByMe),
								});
					};
				var P = i(15351),
					O = i(617592);
				const w = (e) => {
						const { badge: t } = e;
						if (!(0, h.FD)(t) || !(0, h.nl)(t)) {
							const e = Date.now(),
								i = u.A.parseISO(t.badgeStartDate),
								n = u.A.parseISO(t.badgeEndDate);
							if (!t.badgeEndDate || n.getTime() > e)
								return (0, m.jsx)('p', {
									className: 'badge-available-date',
									children: (0, m.jsx)(s.A, {
										ns: 'badges',
										content: 'available_since',
										params: { 0: p.Ay.formatMonthDayYear(i) },
									}),
								});
							const a = p.Ay.formatDateRange(i, n);
							return (0, m.jsx)('p', {
								className: 'badge-available-date',
								children: (0, m.jsx)(s.A, {
									ns: 'badges',
									content: 'available_from',
									params: { 0: a },
								}),
							});
						}
						return null;
					},
					F = {
						fetchSystemPreference: o.h$7,
						updateViewedBadges: r.i_,
						receiveEarnedBadges: r.fj,
						receiveLatestEarnedBadges: r.cG,
						showModal: o.toY,
					};
				class k extends n.Component {
					constructor(e) {
						super(e),
							(this.state = { view: null, badge: null, error: !1 }),
							(this.displayName = null);
					}
					componentDidMount() {
						this.getBadgeData();
					}
					componentDidUpdate(e) {
						e.badge.badgeId !== this.props.badge.badgeId && this.getBadgeData();
					}
					getBadgeData() {
						const {
							badge: e,
							viewerSocialProfile: t,
							displayName: i,
						} = this.props;
						let n = null,
							a = null;
						null !== this.state.badge && this.setState({ badge: null }),
							(this.displayName = void 0 !== i ? i : e.displayName),
							null !== this.displayName && this.displayName !== t.displayName
								? ((n = O.g.CONNECTION), (a = this.displayName))
								: ((n = null === this.displayName ? O.g.AVAILABLE : O.g.EARNED),
									this.markNewBadgeAsSeen()),
							this.setState({ view: n }),
							(0, r.iu)(e.badgeId, a)
								.then((e) => {
									this.setState({ badge: e });
								})
								.catch(() => {
									this.setState({ error: !0 });
								});
					}
					render() {
						const { badge: e, view: t, error: i } = this.state;
						if (i)
							return (0, m.jsx)(l.Fc, {
								type: 'error',
								children: (0, m.jsx)(s.A, {
									ns: 'notification',
									content: 'request.error.msg',
								}),
							});
						if (!e)
							return (0, m.jsx)('div', {
								className: 'textCenter marBottomXS',
								children: (0, m.jsx)(l.y$, {}),
							});
						switch (t) {
							case O.g.EARNED:
							case O.g.AVAILABLE:
								return this.renderUserView();
							case O.g.CONNECTION:
								return this.renderConnectionView();
							default:
								return null;
						}
					}
					renderUserView() {
						const { badge: e } = this.state;
						return (0, m.jsxs)(n.Fragment, {
							children: [
								(0, m.jsxs)('div', {
									className:
										'badge-detail ' +
										(e.earnedByMe ? 'badge-earned' : 'badge-available'),
									children: [
										(0, m.jsx)(c.A, { ...this.props, badge: e }),
										e.badgeProgressValue
											? (0, m.jsx)(d.A, {
													...this.props,
													showValues: !0,
													badgeProgressValue: e.badgeProgressValue,
													badgeTargetValue: e.badgeTargetValue,
													badgeUnitId: e.badgeUnitId,
												})
											: null,
										(0, m.jsx)('div', {
											className: 'badge-summary',
											children: (0, m.jsx)(E.A, { ...this.props, badge: e }),
										}),
										(0, m.jsx)(_, {
											...this.props,
											badge: e,
											displayName: this.displayName,
										}),
									],
								}),
								(0, m.jsx)(S, { ...this.props, badge: e }),
								(0, m.jsx)(N, { ...this.props, badge: e }),
								(0, m.jsx)(w, { ...this.props, badge: e }),
							],
						});
					}
					renderConnectionView() {
						const { badge: e } = this.state,
							{ noStatusLinkOnConnectionView: t, viewerSocialProfile: i } =
								this.props;
						return (0, m.jsxs)('div', {
							className: 'badge-detail badge-earned',
							children: [
								(0, m.jsx)(c.A, { ...this.props, badge: e }),
								(0, m.jsx)('div', {
									className: 'badge-summary',
									children: (0, m.jsx)(E.A, { ...this.props, badge: e }),
								}),
								(0, m.jsx)(_, {
									...this.props,
									badge: e,
									displayName: this.displayName,
									isConnection: !0,
								}),
								i.displayName
									? (0, m.jsx)(L, {
											...this.props,
											badge: e,
											connection: t ? null : this.displayName,
										})
									: null,
							],
						});
					}
					markNewBadgeAsSeen() {
						const { badge: e, badges: t } = this.props;
						if (e && !1 === e.badgeIsViewed && e.earnedByMe) {
							this.props.updateViewedBadges([e.badgeId]);
							const i = t.earned.data ? [...t.earned.data] : [],
								n = t.latestEarned.data ? [...t.latestEarned.data] : [],
								a = i.find((t) => t.badgeId === e.badgeId),
								s = n.find((t) => t.badgeId === e.badgeId);
							a && ((a.badgeIsViewed = !0), this.props.receiveEarnedBadges(i)),
								s &&
									((s.badgeIsViewed = !0),
									this.props.receiveLatestEarnedBadges(n));
						}
					}
				}
				const U = (0, a.Ng)((e) => ({ badges: (0, P.b)(e) }), F)(k);
			},
			673118: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(228748),
					a = i(80879),
					s = i(698164),
					r = i(435687),
					o = i(717776);
				class l extends n.Component {
					constructor() {
						super(), (this.state = { imageError: !1 });
					}
					render() {
						const { badge: e, size: t } = this.props;
						let i;
						if (!t || 'lrg' === t) {
							i = {
								backgroundImage: `url(${(0, r.Wg)(e.badgeId, 'sml', e.badgeUuid)})`,
								backgroundPosition: 'center',
								backgroundSize: '100%',
								backgroundRepeat: 'no-repeat',
							};
						}
						return (0, o.jsx)('img', {
							src: this.state.imageError
								? (0, r.RG)()
								: (0, r.Wg)(e.badgeId, t, e.badgeUuid),
							alt: (0, r.M5)(e.badgeKey, a.Ay),
							className: 'badge-img',
							onError: () => this.handleImageError(),
							style: i,
						});
					}
					handleImageError() {
						this.setState({ imageError: !0 });
					}
				}
				const c = (0, s.CI)(['badges-list'])(l);
			},
			379148: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => l });
				i(228748);
				var n = i(82040),
					a = i(15351),
					s = i(697054),
					r = i(698164),
					o = i(717776);
				const l = (0, n.Ng)((e) => ({
					badgesAttributes: (0, a.b)(e).attributes.data,
				}))(
					(0, r.CI)(['challengewidget', 'units'])((e) => {
						const {
								badgeProgressValue: t,
								badgeTargetValue: i,
								showValues: n,
								t: a,
								tReady: r,
							} = e,
							l = (100 * t) / i;
						return (0, o.jsxs)('div', {
							className: 'badge-progress',
							children: [
								(0, o.jsx)('div', {
									className: 'progress-bar',
									children: (0, o.jsx)('div', {
										className: 'bar-complete-wrapper',
										children: (0, o.jsx)('div', {
											className: 'bar-complete',
											style: { width: l + '%' },
										}),
									}),
								}),
								n && r
									? (0, o.jsx)('div', {
											className: 'badge-progress-label',
											children: (0, s.ax)(a, e, !0),
										})
									: null,
							],
						});
					})
				);
			},
			103832: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => b });
				i(228748);
				var n = i(80879),
					a = i(698164),
					s = i(435687),
					r = i(547052),
					o = i(946186),
					l = i.n(o),
					c = i(882155),
					d = i.n(c),
					u = i(127433),
					p = i.n(u),
					y = i(188626),
					h = i.n(y),
					g = i(108990),
					m = i.n(g),
					A = i(389827),
					_ = i.n(A),
					E = i(780660),
					T = {};
				(T.styleTagTransform = _()),
					(T.setAttributes = h()),
					(T.insert = p().bind(null, 'head')),
					(T.domAPI = d()),
					(T.insertStyleElement = m());
				l()(E.A, T);
				const C = E.A && E.A.locals ? E.A.locals : void 0;
				var S = i(717776);
				const I = (0, a.CI)(['badges', 'challengewidget'])((e) => {
					const { badge: t } = e,
						i = (0, s.FD)(t),
						n = (0, s.V)(t),
						a = (0, s.UL)(t),
						o = (0, s.JU)(t),
						l = (!n && i) || (n && o);
					return !a && !n && !i
						? null
						: (0, S.jsxs)('div', {
								className: C.badgeTags,
								children: [
									l &&
										(0, S.jsx)('span', {
											className: C.badgeTag,
											children: (0, S.jsx)(r.A, {
												ns: 'badges',
												content: 'limited_time',
											}),
										}),
									n &&
										(0, S.jsx)('span', {
											className: C.badgeTag,
											children: (0, S.jsx)(r.A, {
												ns: 'badges',
												content: 'repeatable',
											}),
										}),
									a &&
										(0, S.jsx)('span', {
											className: C.badgeTag,
											children: (0, S.jsx)(r.A, {
												ns: 'challengewidget',
												content: 'challenge',
											}),
										}),
								],
							});
				});
				var v = i(126645),
					f = {};
				(f.styleTagTransform = _()),
					(f.setAttributes = h()),
					(f.insert = p().bind(null, 'head')),
					(f.domAPI = d()),
					(f.insertStyleElement = m());
				l()(v.A, f);
				const D = v.A && v.A.locals ? v.A.locals : void 0,
					N = ({ badge: e }) =>
						(0, S.jsx)('span', { children: (0, s.M5)(e.badgeKey, n.Ay) }),
					R = (e, t, i) => {
						if (t) {
							let n = t.badgeDifficulties.find(
								(t) => e.badgeDifficultyId === t.badgeDifficultyId
							);
							return i.t(
								1 !== n.badgePoints
									? 'common:points_abbrev'
									: 'common:point_abbrev',
								{ 0: n.badgePoints }
							);
						}
						return '';
					},
					b = (0, a.CI)(['badges', 'badges-list', 'common'])((e) => {
						const { badge: t, badgesAttributes: i, listStyle: a } = e;
						return (0, S.jsxs)(S.Fragment, {
							children: [
								(0, S.jsx)(
									'div',
									{
										className: 'badge-name',
										children: (0, S.jsx)(N, { badge: t }),
									},
									'name'
								),
								(0, S.jsx)(
									'span',
									{ className: 'badge-points', children: R(t, i, n.Ay) },
									'points'
								),
								(0, S.jsx)(
									'span',
									{
										className: 'badge-criteria',
										children: (0, s.SK)(t.badgeKey, n.Ay),
									},
									'criteria'
								),
								(0, S.jsx)('div', {
									className: D.badgeTagsWrapper,
									'data-liststyle': a,
									children: (0, S.jsx)(I, { badge: t }),
								}),
							],
						});
					});
			},
			583473: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				i(228748);
				var n = i(717776);
				const a = (e) =>
					(0, n.jsx)('div', {
						className: `badge-level level-${e.level} level-${e.small ? 'sm' : 'md'} ${e.className || ''}`,
						children: (0, n.jsx)('span', { children: e.level }),
					});
			},
			765722: (e, t, i) => {
				'use strict';
				i.d(t, {
					$j: () => g,
					Ay: () => u,
					Kq: () => _,
					SM: () => C,
					Z2: () => E,
					b0: () => m,
					eE: () => T,
					q8: () => A,
					tI: () => h,
				});
				var n = i(638761),
					a = i.n(n),
					s = i(557369),
					r = i(145134),
					o = i(630105),
					l = i(517023),
					c = i(787006);
				const d = [
						function (e) {
							return e;
						},
						function (e) {
							if (
								(e.response &&
									403 === e.response.status &&
									(0, c.aO)() &&
									(e.response.url.startsWith('/userpreference-service') ||
										l.A.display({
											ns: 'settings',
											transKey: 'read_only_mode_alert_2',
										})),
								!e.response || 401 !== e.response.status)
							)
								return Promise.reject(e);
							s.A.signOut();
						},
					],
					u = () => {
						(a().defaults.baseURL = '/modern/proxy'),
							(a().defaults.timeout = 15e3),
							(a().defaults.headers.common = {
								...a().defaults.headers.common,
								NK: 'NT',
								'X-app-ver': window.URL_BUST_VALUE,
								...(window.VIEWER_USERPREFERENCES &&
								window.VIEWER_USERPREFERENCES.preferredLocale
									? {
											'X-lang': (0, r.MH)(
												window.VIEWER_USERPREFERENCES.preferredLocale
											),
										}
									: {}),
							}),
							a().interceptors.response.use(...d),
							delete a().defaults.xsrfHeaderName,
							delete a().defaults.xsrfCookieName;
					},
					p = async (e) => {
						const t = await o.A.getToken();
						return t && (e.headers.Authorization = `Bearer ${t}`), e;
					},
					y = (e) => Promise.reject(e),
					h = a().create({
						baseURL: '/',
						headers: {
							...a().defaults.headers,
							'DI-Backend': window.DI_BACKENDS && window.DI_BACKENDS.gcapi,
						},
					});
				h.interceptors.request.use(p, y), h.interceptors.response.use(...d);
				const g = a().create({
					baseURL: `https://${window.DI_BACKENDS && window.DI_BACKENDS.ghs}/`,
					headers: {
						...a().defaults.headers,
						'DI-Backend': window.DI_BACKENDS && window.DI_BACKENDS.ghs,
					},
					withCredentials: !0,
				});
				g.interceptors.request.use(p, y);
				const m = a().create({
					baseURL: '/',
					headers: {
						...a().defaults.headers,
						'DI-Backend': window.DI_BACKENDS && window.DI_BACKENDS.golf,
					},
				});
				m.interceptors.request.use(p, y);
				const A = a().create({
					baseURL: '/',
					headers: {
						...a().defaults.headers,
						'DI-Backend': window.DI_BACKENDS && window.DI_BACKENDS.atp,
					},
				});
				A.interceptors.request.use(p, y);
				const _ = a().create({
					baseURL: '/',
					headers: {
						...a().defaults.headers,
						'DI-Backend': window.DI_BACKENDS && window.DI_BACKENDS.gcs,
					},
				});
				_.interceptors.request.use(p, y);
				a()
					.create({
						baseURL: '/',
						headers: {
							...a().defaults.headers,
							'DI-Backend': window.DI_BACKENDS && window.DI_BACKENDS.gcsalt,
						},
					})
					.interceptors.request.use(p, y);
				const E = a().create({
					baseURL: '/',
					headers: {
						...a().defaults.headers,
						'DI-Backend': window.DI_BACKENDS && window.DI_BACKENDS.omt,
					},
				});
				E.interceptors.request.use(p, y);
				const T = a().create({
					baseURL: '/',
					headers: {
						...a().defaults.headers,
						'DI-Backend': window.DI_BACKENDS && window.DI_BACKENDS.insights,
					},
				});
				T.interceptors.request.use(p, y);
				const C = a().create({
					baseURL: '/',
					headers: {
						...a().defaults.headers,
						'DI-Backend': window.DI_BACKENDS && window.DI_BACKENDS.didt,
					},
				});
				C.interceptors.request.use(p, y);
			},
			698431: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => _ });
				var n = i(80879),
					a = i(501386),
					s = i(698164),
					r = i(33772),
					o = i.n(r),
					l = i(995065),
					c = i(960474),
					d = i(34581),
					u = i(129582);
				const p = c.A.get('userRoles'),
					y = window.PREFERENCES || {},
					h = d.A.getLocale(),
					g = window.URL_BUST_VALUE,
					m = c.A.get('displayName') ? h : '',
					A = m ? '' : 'cookie';
				n.Ay.use(a.A)
					.use(s.r9)
					.use(l.A)
					.init({
						lng: m,
						supportedLngs: [
							'ar',
							'bg',
							'cs',
							'da',
							'de',
							'en',
							'es',
							'et',
							'fr',
							'hr',
							'it',
							'iw',
							'lv',
							'lt',
							'hu',
							'nl',
							'no',
							'pl',
							'pt_BR',
							'pt',
							'ru',
							'ro',
							'sk',
							'sl',
							'fi',
							'sv',
							'vi',
							'tr',
							'el',
							'ja',
							'ko',
							'th',
							'in',
							'ms',
							'zh_TW',
							'zh_CN',
							'uk',
						],
						ns: ['common'],
						defaultNS: 'common',
						fallbackLng: 'en',
						keySeparator: !1,
						interpolation: { prefix: '{', suffix: '}' },
						missingInterpolationHandler: ({ match: e }) => e,
						backend: {
							loadPath: (e, t) =>
								(function (e, t, i, n) {
									const a = u.a['/' + t + '/' + t];
									if (a) {
										const e = n[a];
										(!e || !i || i.indexOf(e) < 0) && (t = 'common');
									}
									const s = e[0].replace('-', '_');
									let r = '/web-translations/' + t + '/' + t;
									return (
										'en' === s
											? (r += '.properties')
											: (r = r + '_' + s + '.properties'),
										r
									);
								})(e, t, p, y),
							parse: function (e) {
								return o().parse(e);
							},
							queryStringParams: { bust: g },
						},
						react: { useSuspense: !1, wait: !0 },
						detection: {
							caches: [A],
							lookupCookie: 'GarminUserPrefs',
							convertDetectedLanguage: (e) => e.replace('-', '_'),
						},
						initImmediate: !1,
					});
				const _ = n.Ay;
			},
			156337: (e, t, i) => {
				e.exports = i(891150);
			},
			891150: (e, t, i) => {
				'use strict';
				i.d(t, { default: () => $c });
				var n = i(352405),
					a = i(591264),
					s = i(831716),
					r = i(758516),
					o = i(175149),
					l = i(663456),
					c = i(777658),
					d = i(448286),
					u = i(952612),
					p = i(786337),
					y = i(532383),
					h = i(118256),
					g = i(444200),
					m = i(901343),
					A = i(668696),
					_ = i(399460),
					E = i(15351),
					T = i(610593),
					C = i(534707),
					S = i(149867),
					I = i(252652),
					v = i(439890),
					f = i(371865),
					D = i(275660),
					N = i(913671),
					R = i(396680),
					b = i(581172),
					L = i(549580),
					P = i(894792),
					O = i(306463),
					w = i(942640),
					F = i(626607),
					k = i(315704),
					U = i(808643),
					M = i(961673),
					G = i(944510),
					x = i(363605),
					B = i(738339),
					H = i(583476),
					V = i(309103),
					W = i(873715),
					J = i(7823),
					Y = i(807151),
					$ = i(815656),
					j = i(704993),
					K = i(284733),
					z = i(659321),
					q = i(728245),
					Q = i(501943),
					X = i(874317),
					Z = i(390460),
					ee = i(316550);
				const te = { isFetching: !1, entities: [] },
					ie = {
						[ee.GXg]: (e) => ({ ...e, isFetching: !0 }),
						[ee.gWR]: (e, t) => ({
							...e,
							entities: [...t.upcomingEvents],
							isFetching: !1,
							lastUpdated: t.receivedAt,
						}),
						[ee.kBW]: () => te,
					};
				var ne = i(502714),
					ae = i(12936),
					se = i(395741),
					re = i(682184),
					oe = i(996002),
					le = i(695484),
					ce = i(762708),
					de = i(878566),
					ue = i(784648),
					pe = i(950264),
					ye = i(333474),
					he = i(950170),
					ge = i(906519),
					me = i(630325),
					Ae = i(242216),
					_e = i(817644),
					Ee = i(377088);
				const Te = {
					[ee.iJg]: (e, t) => ({ ...e, byAll: t.activitySummary }),
					[ee.ddf]: (e, t) => ({ ...e, byActivity: t.activitySummary }),
					[ee.k69]: (e, t) => ({ ...e, byActivityStats: t.summaryStats }),
					[ee.zfY]: (e, t) => ({ ...e, byEventStats: t.summaryStats }),
				};
				const Ce = {
						[ee.gDl]: (e, t) => ({ ...e, byDate: t.activitySummaryWeekly }),
						[ee.V09]: (e, t) => ({ ...e, byActivity: t.activitySummaryWeekly }),
					},
					Se = { byDate: null, byActivity: null };
				const Ie = {
						[ee.GG$]: (e, t) => ({ ...e, byAll: t.activitySummaryMonthly }),
						[ee.lm5]: (e, t) => ({
							...e,
							byActivity: t.activitySummaryMonthly,
						}),
					},
					ve = { byAll: null, byActivity: null };
				const fe = {
						[ee.tmu]: (e, t) => ({ ...e, byAll: t.activitySummaryYearly }),
						[ee.Cgc]: (e, t) => ({ ...e, byActivity: t.activitySummaryYearly }),
					},
					De = { byAll: null, byActivity: null };
				var Ne = i(414256),
					Re = i(790081),
					be = i(533622),
					Le = i(782722),
					Pe = i(808884),
					Oe = i(391681),
					we = i(556551),
					Fe = i(505769),
					ke = i(381590),
					Ue = i(721143),
					Me = i(706349),
					Ge = i(659461),
					xe = i(691828),
					Be = i(493399),
					He = i(995319),
					Ve = i(792412),
					We = i(919594),
					Je = i(847398),
					Ye = i(558005),
					$e = i(527099),
					je = i(642073),
					Ke = i(167042),
					ze = i(981384),
					qe = i(417336),
					Qe = i(79886),
					Xe = i(749058),
					Ze = i(837774),
					et = i(323947),
					tt = i(349236),
					it = i(828052),
					nt = i(83984),
					at = i(176895),
					st = i(535684),
					rt = i(144918),
					ot = i(756992),
					lt = i(841094),
					ct = i(593096);
				const dt = {
						isFetchingWidgetInstances: !1,
						widgetInstances: [],
						widgetDefinitions: [],
					},
					ut = {
						[ee.P4y]: (e, t) => ({
							...e,
							isFetchingWidgetInstances: !1,
							widgetInstances: t.widgetInstances,
						}),
						[ee.mx$]: (e) => ({ ...e, isFetchingWidgetInstances: !0 }),
						[ee.HTe]: (e, t) => ({
							...e,
							widgetDefinitions: t.widgetDefinitions,
						}),
					};
				var pt = i(270690),
					yt = i(50196),
					ht = i(25737),
					gt = i(415427),
					mt = i(874640),
					At = i(617366),
					_t = i(360023),
					Et = i(606155),
					Tt = i(402574),
					Ct = i(155615),
					St = i(751010),
					It = i(61674),
					vt = i(591631),
					ft = i(679232),
					Dt = i(284286),
					Nt = i(47610),
					Rt = i(933178),
					bt = i(181104),
					Lt = i(692583),
					Pt = i(439014),
					Ot = i(105948),
					wt = i(741236),
					Ft = i(809906),
					kt = i(718012),
					Ut = i(410754),
					Mt = i(558784);
				const Gt = {
						data: [],
						insightsListFetching: !1,
						insightsListFetchFail: !1,
					},
					xt = {
						[ee.bim]: (e, t) => ({
							data: e.data,
							insightsListFetching: !0,
							insightsListFetchFail: !1,
						}),
						[ee.Ohs]: (e, t) => ({
							data: t.data,
							insightsListFetching: !1,
							insightsListFetchFail: !1,
						}),
						[ee.j6K]: (e, t) => ({
							data: e.data,
							insightsListFetching: !1,
							insightsListFetchFail: !0,
						}),
					};
				var Bt = i(404472),
					Ht = i(275704),
					Vt = i(436654),
					Wt = i(787906),
					Jt = i(229546),
					Yt = i(631375),
					$t = i(705899),
					jt = i(223715),
					Kt = i(411088),
					zt = i(672750),
					qt = i(546772),
					Qt = i(470831),
					Xt = i(533763),
					Zt = i(349368),
					ei = i(172840),
					ti = i(407769),
					ii = i(783250),
					ni = i(386601),
					ai = i(510026),
					si = i(904828),
					ri = i(20380),
					oi = i(531461),
					li = i(657623),
					ci = i(94904),
					di = i(997130),
					ui = i(197897),
					pi = i(111141),
					yi = i(2238),
					hi = i(360471),
					gi = i(180258),
					mi = i(531768),
					Ai = i(236473),
					_i = i(509482),
					Ei = i(982075),
					Ti = i(187595),
					Ci = i(208040),
					Si = i(477065),
					Ii = i(638704),
					vi = i(681684),
					fi = i(684770),
					Di = i(619588),
					Ni = i(844013),
					Ri = i(543548),
					bi = i(73304),
					Li = i(693241),
					Pi = i(690920),
					Oi = i(403282),
					wi = i(954712),
					Fi = i(775828),
					ki = i(50467),
					Ui = i(400843),
					Mi = i(382158),
					Gi = i(176600),
					xi = i(995264),
					Bi = i(806823),
					Hi = i(956661),
					Vi = i(971376),
					Wi = i(6062),
					Ji = i(560187);
				const Yi = { init: {}, status: {} },
					$i = {
						[ee.CLN]: () => ({ init: {}, status: {} }),
						[ee.pt_]: (e, t) => {
							let i = e;
							return (i.init = t.exportReport), i;
						},
						[ee.kPp]: (e, t) => {
							let i = e;
							return (i.status = t.reportStatus), i;
						},
						[ee.OYM]: (e, t) => {
							let i = e;
							return (i.status = 'ERROR_RETRY'), i;
						},
					};
				var ji = i(609658),
					Ki = i(949950),
					zi = i(330026);
				const qi = {
					[ee.s2w]: (e, { benchmarks: t }) =>
						Array.isArray(t)
							? ((e) =>
									e.reduce((e, t) => {
										const { gender: i, category: n } = t,
											a = i.toLowerCase();
										return e[a] || (e[a] = {}), (e[a][n] = t), e;
									}, {}))(t)
							: e,
				};
				var Qi = i(889093),
					Xi = i(445886),
					Zi = i(383746),
					en = i(923527),
					tn = i(335300),
					nn = i(698848),
					an = i(992353),
					sn = i(70069),
					rn = i(869595),
					on = i(371552),
					ln = i(791638),
					cn = i(754355),
					dn = i(687024),
					un = i(315808),
					pn = i(510548),
					yn = i(311942),
					hn = i(536020),
					gn = i(632120),
					mn = i(234014),
					An = i(879212),
					_n = i(250031),
					En = i(960963),
					Tn = i(353685),
					Cn = i(494935);
				const Sn = {
						data: {},
						insightDataFetching: {},
						insightDataFetchFail: {},
						insightStatusUpdating: {},
						insightStatusUpdateFail: {},
					},
					In = {
						[ee.uHc]: (e, t) => ({
							...e,
							data: { ...e.data, [t.createdDateUTC]: {} },
							insightDataFetching: {
								...e.insightDataFetching,
								[t.createdDateUTC]: !0,
							},
							insightDataFetchFail: {
								...e.insightDataFetchFail,
								[t.createdDateUTC]: !1,
							},
						}),
						[ee.fre]: (e, t) => ({
							...e,
							data: { ...e.data, [t.createdDateUTC]: t.data },
							insightDataFetching: {
								...e.insightDataFetching,
								[t.createdDateUTC]: !1,
							},
							insightDataFetchFail: {
								...e.insightDataFetchFail,
								[t.createdDateUTC]: !1,
							},
						}),
						[ee.IK_]: (e, t) => ({
							...e,
							data: { ...e.data, [t.createdDateUTC]: null },
							insightDataFetching: {
								...e.insightDataFetching,
								[t.createdDateUTC]: !1,
							},
							insightDataFetchFail: {
								...e.insightDataFetchFail,
								[t.createdDateUTC]: !0,
							},
						}),
						[ee.VQP]: (e, t) => ({
							...e,
							insightStatusUpdating: {
								...e.insightStatusUpdating,
								[t.createdDateUTC]: { ...e[t.createdDateUTC], [t.flagId]: !0 },
							},
							insightStatusUpdateFail: {
								...e.insightStatusUpdateFail,
								[t.createdDateUTC]: { ...e[t.createdDateUTC], [t.flagId]: !1 },
							},
						}),
						[ee.ks0]: (e, t) => ({
							...e,
							insightStatusUpdating: {
								...e.insightStatusUpdating,
								[t.createdDateUTC]: { ...e[t.createdDateUTC], [t.flagId]: !1 },
							},
							insightStatusUpdateFail: {
								...e.insightStatusUpdateFail,
								[t.createdDateUTC]: { ...e[t.createdDateUTC], [t.flagId]: !1 },
							},
						}),
						[ee.Z1_]: (e, t) => ({
							...e,
							insightStatusUpdating: {
								...e.insightStatusUpdating,
								[t.createdDateUTC]: { ...e[t.createdDateUTC], [t.flagId]: !1 },
							},
							insightStatusUpdateFail: {
								...e.insightStatusUpdateFail,
								[t.createdDateUTC]: { ...e[t.createdDateUTC], [t.flagId]: !0 },
							},
						}),
					};
				var vn = i(707293),
					fn = i(923764),
					Dn = i(514757);
				const Nn = {
						originLocation: '',
						originDate: null,
						originTime: '',
						destinationLocation: '',
						destinationDate: null,
						destinationTime: '',
					},
					Rn = {
						trip: {
							flights: [{ ...Nn }, { ...Nn, isReturnFlight: !0 }],
							isOneWay: !1,
						},
					},
					bn = {
						[ee.MRF]: (e, t) => {
							const { stepNumber: i } = t.payload,
								n = { ...e.trip },
								a = i || n.flights.length - 1;
							return n.flights.splice(a, 0, { ...Nn }), { ...e, trip: n };
						},
						[ee._w7]: (e, t) => {
							const { flightState: i, stepNumber: n } = t.payload,
								a = { ...e.trip.flights[n - 1], ...i },
								s = [...e.trip.flights];
							return (
								s.splice(n - 1, 1, a),
								{
									...e,
									trip: {
										...e.trip,
										flights: s,
										isOneWay: !a.isReturnFlight && e.trip.isOneWay,
									},
								}
							);
						},
						[ee.qmT]: (e, t) => {
							const { stepNumber: i } = t.payload,
								n = [...e.trip.flights];
							let a = !1;
							return (
								n[i - 1].isReturnFlight
									? ((n[i - 1] = { ...Nn, isReturnFlight: !0 }), (a = !0))
									: n.splice(i - 1, 1),
								{ ...e, trip: { ...e.trip, flights: n, isOneWay: a } }
							);
						},
						[ee.BnX]: (e) => ({ ...Rn }),
						[ee.UI3]: (e, t) => {
							const { flights: i } = t.payload,
								n = [...i];
							return (
								1 === i.length && n.push({ ...Nn, isReturnFlight: !0 }),
								{ ...e, trip: { ...e.trip, flights: n } }
							);
						},
					};
				var Ln = i(324026),
					Pn = i(488529),
					On = i(453492),
					wn = i(259540),
					Fn = i(315210),
					kn = i(932480),
					Un = i(96293),
					Mn = i(280560),
					Gn = i(454800),
					xn = i(773295),
					Bn = i(780294),
					Hn = i(129273),
					Vn = i(888939),
					Wn = i(459770),
					Jn = i(449182),
					Yn = i(164039),
					$n = i(524969),
					jn = i(743168),
					Kn = i(245489),
					zn = i(797460),
					qn = i(935124),
					Qn = i(599363),
					Xn = i(289236),
					Zn = i(505874),
					ea = i(303327),
					ta = i(826352),
					ia = i(554688),
					na = i(746602),
					aa = i(785221),
					sa = i(295021),
					ra = i(726009),
					oa = i(86429),
					la = i(688501);
				const ca = {
						betaEnrollmentType: null,
						betaTestingEnrollmentFetching: !1,
						betaTestingEnrollmentFetchFail: !1,
						betaTestingEnrollmentUpdating: !1,
						betaTestingEnrollmentUpdateFail: !1,
					},
					da = {
						[ee.$mY]: (e) => ({
							...e,
							betaTestingEnrollmentFetching: !0,
							betaTestingEnrollmentFetchFail: !1,
						}),
						[ee.QoZ]: (e, t) => ({
							...e,
							betaEnrollmentType: t.data.betaEnrollment,
							betaTestingEnrollmentFetching: !1,
							betaTestingEnrollmentFetchFail: !1,
						}),
						[ee.F3w]: (e, t) => ({
							...e,
							betaEnrollmentType: t.data.betaEnrollment,
							betaTestingEnrollmentFetching: !1,
							betaTestingEnrollmentFetchFail: !0,
						}),
						[ee.mQG]: (e) => ({
							...e,
							betaTestingEnrollmentUpdating: !0,
							betaTestingEnrollmentUpdateFail: !1,
						}),
						[ee.trH]: (e, t) => ({
							...e,
							betaTestingEnrollmentUpdating: !1,
							betaTestingEnrollmentUpdateFail: !1,
						}),
						[ee.qYd]: (e) => ({
							...e,
							betaTestingEnrollmentUpdating: !1,
							betaTestingEnrollmentUpdateFail: !0,
						}),
					};
				var ua = i(293038),
					pa = i(590015),
					ya = i(202821),
					ha = i(774435),
					ga = i(947943),
					ma = i(759202),
					Aa = i(503484),
					_a = i(361168);
				const Ea = {
					component: a.A,
					systemMessage: s.Ay,
					pageMessages: r.A,
					registeredDevices: o.Ay,
					publicUserProfile: l.Ay,
					userSocialProfile: c.Ay,
					userPrivacy: d.Ay,
					customUserPrivacy: u.Ay,
					comments: p.Ay,
					conversations: y.A,
					dailySummary: h.A,
					personalRecords: g.Ay,
					personalRecordCandidates: m.Ay,
					personalRecordTypes: A.Ay,
					personalRecordByActivityId: _.Ay,
					matSupportPage: f.Ay,
					connectionProfileStatus: D.A,
					pendingConnections: N.A,
					connectionsLeaderboard: R.Ay,
					badges: E.A,
					modalState: b.A,
					userDailySteps: P.A,
					validateDailySummary: T.A,
					validateDeviceEpoch: C.A,
					validateDeviceEpochSummary: S.Ay,
					validateDeviceHeartRate: I.A,
					validateDeviceHeartRateSummary: v.Ay,
					userPersonalInfo: L.Ay,
					userStatistics: O.A,
					favoriteActivities: w.A,
					calendarPage: F.Ay,
					trainingPlansForDate: k.Ay,
					activityTypes: U.Ay,
					activityHrTimeInZones: M.Ay,
					activityPowerTimeInZones: G.Ay,
					surfaceTypes: x.A,
					segmentTypes: B.A,
					groups: Be.Ay,
					groupPage: He.Ay,
					groupPageLeaderboard: Ve.Ay,
					groupPageInvite: We.Ay,
					groupPageCourse: Je.Ay,
					groupPageReportPhotoDialog: Ye.Ay,
					activities: H.Ay,
					goals: V.Ay,
					courses: W.Ay,
					trails: J.Ay,
					workouts: Y.Ay,
					workoutById: $.Ay,
					workoutSteps: j.A,
					workoutSchedule: K.Ay,
					workoutsExport: z.A,
					workoutsFilter: q.A,
					workoutTypes: Q.Ay,
					exerciseData: X.A,
					upcomingEvents: Z.Ay,
					upcomingCalEvents: function (e = te, t = {}) {
						const i = ie[t.type];
						return i ? i(e, t) : e;
					},
					profilePage: ne.Ay,
					monthlyReport: ae.Ay,
					stepsReports: se.Ay,
					pushesReports: re.Ay,
					activities365Report: oe.Ay,
					activityList: le.A,
					activityPolyline: ce.Ay,
					activityMapDetailsReducer: de.Ay,
					gear: ue.A,
					commentLikes: pe.A,
					conversationLikes: ye.Ay,
					groupConversations: he.A,
					groupConversationLikes: ge.Ay,
					userPreference: me.Ay,
					activitySearch: _e.A,
					selectedDive: Ee.Ay,
					activitySummary: function (e = {}, t = {}) {
						const i = Te[t.type];
						return i ? i(e, t) : e;
					},
					activitySummaryWeekly: function (e = Se, t = {}) {
						const i = Ce[t.type];
						return i ? i(e, t) : e;
					},
					activitySummaryMonthly: function (e = ve, t = {}) {
						const i = Ie[t.type];
						return i ? i(e, t) : e;
					},
					activitySummaryYearly: function (e = De, t = {}) {
						const i = fe[t.type];
						return i ? i(e, t) : e;
					},
					segments: $e.Ay,
					segmentPage: Le.Ay,
					segment: xe.Ay,
					systemPreference: Ne.Ay,
					HERELocation: Re.A,
					usageIndicators: be.Ay,
					playerGolfStats: Pe.Ay,
					golfStatsPageState: Ue.Ay,
					driveGolfStats: Oe.Ay,
					approachGolfStats: we.Ay,
					chipGolfStats: Fe.Ay,
					puttGolfStats: ke.Ay,
					golfClubs: Me.Ay,
					golfClubTypes: Ge.Ay,
					badgesPage: je.A,
					atpPlan: Ke.Ay,
					atpNextWorkout: ze.Ay,
					atpCalendar: qe.Ay,
					atpRescheduleDays: Qe.Ay,
					atpFeed: Xe.Ay,
					adaptiveTrainingPlanArticle: Ze.Ay,
					atpContentFulVideoItem: tt.Ay,
					atpFeedPartialContent: et.Ay,
					atpActivityFeedback: it.A,
					gdprFeature: nt.Ay,
					gdprConsentText: at.Ay,
					gdprRevokeConsent: rt.Ay,
					gdprGrantConsent: st.Ay,
					gdprDisplayLimitedFeatureAlert: ot.Ay,
					atpCoachInfo: lt.Ay,
					preference: Ae.Ay,
					fitnessStats: ct.Ay,
					dashboard: function (e = dt, t = {}) {
						const i = ut[t.type];
						return i ? i(e, t) : e;
					},
					pulseOxAcclimation: pt.Ay,
					activitiesForDailySummary: yt.Ay,
					activitiesListForTimeframe: ht.Ay,
					mergedSummary: gt.Ay,
					mergedSummaryCount: mt.Ay,
					lastSyncTimestamp: At.Ay,
					dailySleepData: _t.Ay,
					autoDetectedEvents: Et.Ay,
					dailyStressData: Tt.Ay,
					dailyMovement: Ct.Ay,
					dailyHeartRate: St.Ay,
					heartRateZones: It.Ay,
					powerZones: vt.Ay,
					moveIQEvents: ft.Ay,
					deviceList: Dt.Ay,
					registeredDeviceList: Nt.Ay,
					deviceInfo: Rt.Ay,
					primaryTrainingDevice: bt.Ay,
					deviceInfoByPartNumber: Lt.Ay,
					deviceByHealthDeviceId: Pt.Ay,
					hydration: Ot.Ay,
					viewerUserPreferences: wt.Ay,
					userSettings: Ft.Ay,
					userStats: kt.Ay,
					userSummaryAverages: Ut.Ay,
					strava: Mt.Ay,
					insightsList: function (e = Gt, t = {}) {
						const i = xt[t.type];
						return i ? i(e, t) : e;
					},
					stepsLifetimeTotals: Bt.Ay,
					paceProCreate: Ht.Ay,
					wellnessGoals: Wt.Ay,
					consolidatedStepsGoal: Jt.Ay,
					consolidatedPushesGoal: Yt.Ay,
					dailySteps: $t.Ay,
					dailyPushes: Zn.Ay,
					mfpLinkStatus: Vt.Ay,
					paceProBand: jt.Ay,
					menstrualCycleTrackingSummary: Kt.Ay,
					menstrualCycle: zt.Ay,
					menstrualCycleTrackingCalendar: qt.Ay,
					menstrualCycleTrackingReports: Qt.Ay,
					menstrualCycleTrackingInitialSetup: Xt.Ay,
					workoutExecutionMetrics: Zt.A,
					userCapable: ei.Ay,
					bodyBatteryToday: ti.Ay,
					weightList: ii.Ay,
					dailyCalories: ai.Ay,
					mfp: si.Ay,
					dailySummaryActions: ni.Ay,
					dailyPulseOxData: ri.Ay,
					dailyRespirationData: oi.Ay,
					dayWeightList: di.Ay,
					weightPage: ui.Ay,
					wellnessGoal: yi.Ay,
					latestWeight: pi.Ay,
					paceProAlgorithmConfig: li.Ay,
					golfCourse: hi.Ay,
					golfCourses: gi.Ay,
					golfCourseLayout: Ai.Ay,
					golfCourseStats: mi.Ay,
					golfCourseScorecards: _i.Ay,
					solarIntensity: Ei.Ay,
					trainingStatusDaily: Ti.Ay,
					pregnancyTracking: ci.Ay,
					phasedTrainingPlan: Si.Ay,
					powerGuidance: Ii.Ay,
					indoorClimbDifficulty: vi.Ay,
					intensityMinutes: fi.Ay,
					activityDetails: Di.Ay,
					challenge: Ri.Ay,
					epochDataReload: bi.Ay,
					userSummaryMonthly: Li.Ay,
					bloodPressure: Pi.Ay,
					latestBP: Oi.Ay,
					fitnessAge: wi.Ay,
					ftp: Fi.Ay,
					ftpRange: ki.Ay,
					typedSplits: Ui.Ay,
					timeZones: Hi.Ay,
					shareableEvent: Vi.Ay,
					benchmarkExercises: Mi.Ay,
					exerciseTypes: Gi.Ay,
					exerciseEquipments: xi.Ay,
					muscleMappingModel: Wi.Ay,
					golfProfile: Bi.Ay,
					golfScorecardSummary: Ji.Ay,
					exportReport: (e = Yi, t = {}) => {
						const i = $i[t.type];
						return i ? i(e, t) : e;
					},
					healthSnapshotList: ji.Ay,
					healthSnapshotDetails: Ki.Ay,
					healthSnapshotsForDailySummary: zi.Ay,
					powerBenchmarks: function (e = {}, t = {}) {
						const i = qi[t.type];
						return i ? i(e, t) : e;
					},
					newsFeedActivities: Qi.Ay,
					newsFeedComments: Xi.Ay,
					newsFeedLikes: Zi.Ay,
					newsFeedConnections: en.Ay,
					notification: nn.Ay,
					multiSportActivitySummary: an.Ay,
					floorsData: un.Ay,
					floorsReportData: pn.Ay,
					totalCaloriesReports: yn.Ay,
					ecgRecordingList: sn.Ay,
					ecgRecordingDetails: rn.Ay,
					ecgRecordingDailySummary: on.Ay,
					ecgRecordings: ln.Ay,
					trainingReadiness: hn.Ay,
					eventBasedGoals: cn.Ay,
					blockUser: dn.Ay,
					hrvStatus: tn.Ay,
					mutualConnections: gn.A,
					stressDataReports: An.Ay,
					hydrationDataReports: mn.Ay,
					gcsWeather: _n.Ay,
					weatherStationDTO: Ni.Ay,
					demographicSelections: En.Ay,
					heartRateReport: fn.Ay,
					demographicCompare: Tn.Ay,
					demographicComparePreferences: Cn.Ay,
					sleepDataReports: Dn.Ay,
					insightData: function (e = Sn, t = {}) {
						const i = In[t.type];
						return i ? i(e, t) : e;
					},
					connections: vn.Ay,
					jetLagSetupTrip: function (e = Rn, t = {}) {
						const i = bn[t.type];
						return i ? i(e, t) : e;
					},
					jetLagTrips: Ln.Ay,
					jetLagDailyStatus: Pn.Ay,
					cssReports: On.Ay,
					challengePage: wn.Ay,
					systemReducer: Fn.Ay,
					gears: kn.Ay,
					golfClubsFlexTypes: Un.Ay,
					bodyBattery: Mn.Ay,
					inboxPage: Gn.Ay,
					latestLactateThreshold: Wn.Ay,
					lactateThresholdRangeHR: Jn.Ay,
					lactateThresholdRangeSpeed: Yn.Ay,
					deviceBackups: xn.Ay,
					sleepReport: Bn.Ay,
					dailySleepEpochs: Hn.Ay,
					emailNotification: Vn.Ay,
					currentUserInfo: $n.Ay,
					thirdPartyApps: jn.Ay,
					hillScoreDataReports: Kn.Ay,
					optionalFeature: zn.Ay,
					vo2MaxMetrics: qn.Ay,
					enduranceScoreDataReports: Qn.Ay,
					reportsToggledItems: Xn.Ay,
					createChallengePage: ea.Ay,
					golfScorecard: ha.Ay,
					dashboardConfig: ta.Ay,
					[na.Ay.reducerPath]: na.Ay.reducer,
					[aa.Ay.reducerPath]: aa.Ay.reducer,
					[aa.Cq.reducerPath]: aa.Cq.reducer,
					[sa.Ay.reducerPath]: sa.Ay.reducer,
					[ra.Ay.reducerPath]: ra.Ay.reducer,
					[oa.Ay.reducerPath]: oa.Ay.reducer,
					[la.Ay.reducerPath]: la.Ay.reducer,
					[_a.Ay.reducerPath]: _a.Ay.reducer,
					betaTestingEnrollment: function (e = ca, t = {}) {
						const i = da[t.type];
						return i ? i(e, t) : e;
					},
					userFocus: ia.Ay,
					socialReducer: ua.Ay,
					golfLeaderboard: ga.Ay,
					[pa.Ay.reducerPath]: pa.Ay.reducer,
					deviceBetaSoftwareInfo: ya.Ay,
					historicalDeviceList: ma.Ay,
					trainingStatusReport: Ci.Ay,
					userProfileBase: Aa.Ay,
				};
				var Ta = i(513058),
					Ca = i(627066),
					Sa = i(87786),
					Ia = i(593177),
					va = i(462026),
					fa = i(447349),
					Da = i(881152),
					Na = i(765722),
					Ra = i(162557),
					ba = i(29641),
					La = i.n(ba),
					Pa = i(207124);
				function* Oa(e, t, i) {
					i.data.gPolyline.convertedPoints = [];
					let n = [],
						a = null,
						s = La().Map.Utils.decodeLine(i.data.gPolyline.encodedSamples);
					for (let c = 0; c < s.length; c++) {
						let e = s[c];
						n.push({ latitude: e[0], longitude: e[1] });
					}
					for (let c = 0; c < n.length; c++)
						if (Pa.A.isOutOfChina(n[c].latitude, n[c].longitude)) {
							a = !0;
							break;
						}
					if (a) return void (yield (0, Ca.yJ)((0, va.DCJ)(e, i.data, t)));
					const r = new Ra.A(),
						o = yield r.fetchGenerator(n);
					for (var l = 0; l < o.length; l++)
						i.data.gPolyline.convertedPoints.push({
							lat: Number(o[l].lat),
							lon: Number(o[l].lon),
						});
					(i.data.gPolyline.startLat = i.data.gPolyline.convertedPoints[0].lat),
						(i.data.gPolyline.startLon =
							i.data.gPolyline.convertedPoints[0].lon),
						(i.data.gPolyline.endLat =
							i.data.gPolyline.convertedPoints[o.length - 1].lat),
						(i.data.gPolyline.endLon =
							i.data.gPolyline.convertedPoints[o.length - 1].lon),
						yield (0, Ca.yJ)((0, va.DCJ)(e, i.data, t));
				}
				const wa = [
					(0, Ca.jP)(ee.c0x, function* (e) {
						try {
							const { fromDate: t, toDate: i, groupByActivity: n } = e.payload,
								a = Sa.zJ({ fromDate: t, untilDate: i, grpActType: n }),
								s = yield (0, Ca.T1)(
									Na.tI.get,
									`/userstats-service/activities/summaryStats${a}`
								);
							n
								? yield (0, Ca.yJ)({ type: ee.ddf, activitySummary: s.data })
								: yield (0, Ca.yJ)({ type: ee.iJg, activitySummary: s.data });
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.mSH, function* (e) {
						const {
								displayName: t,
								fromDate: i,
								toDate: n,
								groupByActivity: a,
							} = e.payload,
							s = Sa.zJ({
								fromWeekStartDate: i,
								untilWeekStartDate: n,
								grpActType: a,
							}),
							r = yield (0, Ca.T1)(
								Na.tI.get,
								`/userstats-service/activities/weekly/${t}${s}`
							);
						a
							? yield (0, Ca.yJ)({
									type: ee.V09,
									activitySummaryWeekly: r.data,
								})
							: yield (0, Ca.yJ)({
									type: ee.gDl,
									activitySummaryWeekly: r.data,
								});
					}),
					(0, Ca.jP)(ee.cXU, function* (e) {
						const {
								displayName: t,
								fromDate: i,
								toDate: n,
								groupByActivity: a,
							} = e.payload,
							s = Sa.zJ({
								fromMonthStartDate: i,
								untilMonthStartDate: n,
								grpActType: a,
							}),
							r = yield (0, Ca.T1)(
								Na.tI.get,
								`/userstats-service/activities/monthly/${t}${s}`
							);
						a
							? yield (0, Ca.yJ)({
									type: ee.lm5,
									activitySummaryMonthly: r.data,
								})
							: yield (0, Ca.yJ)({
									type: ee.GG$,
									activitySummaryMonthly: r.data,
								});
					}),
					(0, Ca.jP)(ee.Fih, function* (e) {
						const {
								displayName: t,
								fromDate: i,
								toDate: n,
								groupByActivity: a,
							} = e.payload,
							s = Sa.zJ({ fromYear: i, untilYear: n, grpActType: a }),
							r = yield (0, Ca.T1)(
								Na.tI.get,
								`/userstats-service/activities/yearly/${t}${s}`
							);
						a
							? yield (0, Ca.yJ)({
									type: ee.Cgc,
									activitySummaryYearly: r.data,
								})
							: yield (0, Ca.yJ)({
									type: ee.tmu,
									activitySummaryYearly: r.data,
								});
					}),
					(0, Ca.jP)(ee.I8z, function* (e) {
						const {
								fromDate: t,
								toDate: i,
								groupByActivity: n,
								groupByEvent: a,
							} = e.payload,
							s = Sa.zJ({
								fromDate: t,
								untilDate: i,
								grpActType: n,
								grpEventType: a,
							}),
							r = yield (0, Ca.T1)(
								Na.tI.get,
								`/userstats-service/activities/summaryStats${s}`
							);
						n
							? yield (0, Ca.yJ)({ type: ee.k69, summaryStats: r.data })
							: a && (yield (0, Ca.yJ)({ type: ee.zfY, summaryStats: r.data }));
					}),
					(0, Ca.jP)(ee.h3e, function* (e) {
						try {
							const { feedBack: t, activityId: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.put,
									`/activity-service/activity/${i}`,
									{ activityId: i, summaryDTO: { perceivedWorkoutEffort: t } }
								);
							yield (0, Ca.yJ)({
								type: ee.jA$,
								activityFeedback: n.data,
								receivedAt: Date.now(),
							});
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.s1i, function* () {
						try {
							let e = yield Na.tI.get(
								'/activity-service/activity/activityTypes'
							);
							(e.data = e.data.filter((e) => 'motorcycling' !== e.typeKey)),
								yield (0, Ca.yJ)({
									type: ee.QPy,
									activityTypes: e.data,
									receivedAt: Date.now(),
								});
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.xDv, receivedAt: Date.now() });
						}
					}),
					(0, Ca.jP)(ee.Wby, function* ({ activityId: e }) {
						try {
							const t = yield Na.tI.get(
								`/activity-service/activity/${e}/hrTimeInZones`
							);
							yield (0, Ca.yJ)((0, Ia.o_)(t.data, e));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.z3k, function* ({ activityId: e }) {
						try {
							const t = yield Na.tI.get(
								`/activity-service/activity/${e}/powerTimeInZones`
							);
							yield (0, Ca.yJ)((0, Ia.Nm)(t.data, e));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.T1Q, function* ({ activityId: e, callback: t }) {
						try {
							yield (0, Ca.yJ)((0, Ia.bc)(e));
							const i = yield Na.tI.get(`/activity-service/activity/${e}`);
							yield (0, Ca.yJ)((0, Ia.PU)(i.data, e)),
								yield (0, Ca.T1)(fa.G, t, i);
						} catch (i) {
							yield (0, Ca.yJ)((0, va.yPt)(i.response.status)),
								yield (0, Ca.T1)(fa.j, t, i);
						}
					}),
					(0, Ca.jP)(ee.EI$, function* () {
						try {
							const e = yield Na.tI.get(
								'/web-data/activity-charts-order/activity-charts-order-master.json',
								{ baseURL: '/' }
							);
							yield (0, Ca.yJ)((0, Ia.Mg)(e.data));
						} catch (e) {}
					}),
					(0, Ca.jP)(ee.cjn, function* ({ displayName: e, limit: t }) {
						try {
							yield (0, Ca.yJ)((0, va.CVV)());
							const i = yield Na.tI.get(
								`/activitylist-service/activities/favorite/${e}?limit=${t || 5}`
							);
							yield (0, Ca.yJ)((0, va.f24)(i.data, e));
						} catch (i) {}
					}),
					(0, Ca.jP)(
						ee.t6w,
						function* ({ displayName: e, startIndex: t, limit: i }) {
							try {
								yield (0, Ca.yJ)((0, va.hL0)(e));
								const n = yield Na.tI.get(
									`/activitylist-service/activities/${e}?start=${t || 1}&limit=${i || 10}`
								);
								yield (0, Ca.yJ)((0, va.zIT)(n.data));
							} catch (n) {}
						}
					),
					(0, Ca.jP)(ee.rNV, function* ({ activityId: e }) {
						try {
							yield (0, Ca.yJ)((0, va.RK2)(e));
							const t = yield Na.tI.get(
								`/activitylist-service/activity/${e}/hrTimeInZones`
							);
							yield (0, Ca.yJ)((0, va.j$m)(t.data));
						} catch (t) {}
					}),
					(0, Ca.jP)(
						ee.oni,
						function* ({
							parentActivityType: e,
							favorite: t,
							start: i,
							limit: n,
						}) {
							try {
								yield (0, Ca.yJ)((0, va.IAh)(ee.VB$));
								const a = t ? '&favorite=1' : '',
									s = 'number' === typeof i ? `&start=${i}` : '',
									r = n ? `&limit=${n}` : '',
									o = yield Na.tI.get(
										'/activitylist-service/activities/search/activities?activityType=' +
											e +
											a +
											s +
											r
									);
								yield (0, Ca.yJ)((0, va.Eyz)(ee.zeH, o.data, e, t));
							} catch (a) {
								yield (0, Ca.yJ)((0, va.aEM)(ee.U4D, a));
							}
						}
					),
					(0, Ca.jP)(
						ee.bWy,
						function* ({
							parentActivityType: e,
							activityDetails: t,
							favorite: i,
						}) {
							try {
								yield Na.tI.put('/activity-service/activity/' + t.activityId, {
									activityId: t.activityId,
									metadataDTO: { favorite: i },
								});
								yield (0, Ca.yJ)((0, va.Jjc)(ee.Rop, e, t, i));
							} catch (n) {}
						}
					),
					(0, Ca.jP)(
						ee.DMH,
						function* ({ parentActivityType: e, activityDetails: t }) {
							try {
								yield Na.tI.delete(
									'/activity-service/activity/' + t.activityId
								);
								yield (0, Ca.yJ)((0, va.bXL)(ee.$3c, e, t));
							} catch (i) {}
						}
					),
					(0, Ca.jP)(ee._nY, function* ({ displayName: e, activityId: t }) {
						try {
							yield (0, Ca.yJ)((0, va.PIg)(e));
							const i = yield Na.tI.get(
								`/activity-service/activity/polyline/${t}`
							);
							yield (0, Ca.yJ)((0, va.DCJ)(e, i.data, t));
						} catch (i) {}
					}),
					(0, Ca.jP)(ee._tM, function* (e) {
						const { displayName: t, activityId: i } = e;
						try {
							var n;
							yield (0, Ca.yJ)((0, va.PIg)(t));
							const e = yield Na.tI.get(
								`/activity-service/activity/polyline/${i}`
							);
							if (null === (n = e.data) || void 0 === n || !n.gPolyline)
								return void (yield (0, Ca.yJ)((0, va.DCJ)(t, e.data, i)));
							yield (0, Ca.Zy)(Oa, t, i, e);
						} catch (a) {}
					}),
					(0, Ca.jP)(ee.Kgm, function* ({ activitiesIds: e }) {
						yield (0, Ca.yJ)((0, Ia.vU)(e));
						try {
							const t = yield (0, Ca.Q7)(
								e.map((e) => Na.tI.get(`/activity-service/activity/${e}`))
							);
							let i = [],
								n = [],
								a = [],
								s = [],
								r = [];
							t.forEach((e) => {
								(Da.A.isRepCounting(e.data.activityTypeDTO.typeKey) ||
									Da.A.isHiitActivity(e.data.activityTypeDTO.typeKey)) &&
									n.push(
										Na.tI.get(
											`/activity-service/activity/${e.data.activityId}/exerciseSets`
										)
									),
									i.push(
										Na.tI.get(
											`/activity-service/activity/${e.data.activityId}/splits`
										)
									),
									a.push(
										Na.tI.get(
											`/activity-service/activity/polyline/${e.data.activityId}`
										)
									),
									s.push(
										Na.tI.get(
											`/activity-service/activity/${e.data.activityId}/details?maxChartSize=2000&maxPolylineSize=4000`
										)
									),
									r.push(
										Na.tI.get(
											`/activity-service/activity/${e.data.activityId}/weather`,
											{ activityId: e.data.activityId }
										)
									);
							});
							const o = yield (0, Ca.Q7)(
								[...i, ...n, ...a, ...s, ...r].map((e) => e.catch((e) => {}))
							);
							let l = {};
							o.forEach((e) => {
								if (!e) return !1;
								const t = e.data.activityId || e.config.activityId;
								(e.data.activityId = t),
									l[t] ? Object.assign(l[t], e.data) : (l[t] = e.data),
									e.data.gPolyline &&
										(l[e.data.gPolyline.activityId]
											? Object.assign(l[e.data.gPolyline.activityId], e.data)
											: (l[e.data.gPolyline.activityId] = e.data));
							}),
								yield (0, Ca.yJ)(
									(0, Ia.JH)(
										t.map((e) =>
											l[e.data.activityId]
												? Object.assign(e.data, l[e.data.activityId])
												: e.data
										)
									)
								);
						} catch (t) {}
					}),
				];
				var Fa = i(752734);
				const ka = [
					(0, Ca.jP)(ee.pGz, function* (e) {
						try {
							const { athletePlanId: t, lang: i } = e.payload;
							yield (0, Ca.yJ)({ type: ee.BfN });
							const n = yield (0, Ca.T1)(
								Na.q8.get,
								`/atp/athlete/feed?athletePlanId=${t}&lang=${i}`
							);
							yield (0, Ca.yJ)({ type: ee.h_v, atpFeed: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.SY$ });
						}
					}),
				];
				var Ua = i(638761),
					Ma = i.n(Ua);
				const Ga = [
					(0, Ca.jP)(ee.s9A, function* (e) {
						try {
							const { contentID: t, locale: i } = e.payload;
							yield (0, Ca.yJ)({ type: ee.kwR });
							const n = yield (0, Ca.T1)(
								Ma().post,
								'/gateway/graph-atp/graphql',
								{
									operationName: 'articles',
									query: `query articles{Articles(articleTitle:"${t}", locale:"${i}"){articleItems{fields{dateField,title,deck,imageUrl,paragraph,articleDuration}}}}`,
								},
								{ baseURL: '/' }
							);
							n.data.errors
								? yield (0, Ca.yJ)({
										type: ee.a28,
										error: n.data.errors[0].message,
										action: e.payload,
									})
								: yield (0, Ca.yJ)({
										type: ee.am,
										adaptiveTrainingPlanArticle: n.data.data.Articles,
										action: e.payload,
									});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.a28, error: t, action: e.payload });
						}
					}),
					(0, Ca.jP)(ee.qNB, function* (e) {
						try {
							const { contentID: t, locale: i } = e.payload;
							yield (0, Ca.yJ)({ type: ee.HFH });
							const n = yield (0, Ca.T1)(
								Ma().post,
								'/gateway/graph-atp/graphql',
								{
									operationName: 'articles',
									query: `query articles{Articles(articleTitle:"${t}", locale:"${i}"){articleItems{fields{dateField,title,deck,imageUrl,articleDuration}}}}`,
								},
								{ baseURL: '/' }
							);
							n.data.errors
								? yield (0, Ca.yJ)({
										type: ee.CT3,
										error: n.data.errors[0].message,
										action: e.payload,
									})
								: yield (0, Ca.yJ)({
										type: ee.q$b,
										atpFeedPartialContent: n.data.data.Articles,
										action: e.payload,
									});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.CT3, error: t, action: e.payload });
						}
					}),
					(0, Ca.jP)(ee.N5l, function* (e) {
						try {
							const { contentID: t, locale: i } = e.payload,
								n = yield (0, Ca.T1)(
									Ma().post,
									'/gateway/graph-atp/graphql',
									{
										query: `{Coaches(coachKey: "${t}", locale: "${i}") { fields{ firstName, lastName, tagLine, xxxhdpiUrl, coachKey}}}`,
									},
									{ baseURL: '/' }
								);
							n.data.errors
								? yield (0, Ca.yJ)({
										type: ee.Z6Z,
										error: n.data.errors[0].message,
									})
								: yield (0, Ca.yJ)({
										type: ee.jyr,
										atpCoachInfo: n.data.data.Coaches.fields,
									});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.Z6Z, error: t, action: e.payload });
						}
					}),
					(0, Ca.jP)(
						ee.wRI,
						function* ({ contentfulContentId: e, fields: t, lang: i }) {
							try {
								const n = yield (0, Ca.T1)(
									Ma().post,
									'/gateway/graph-atp/graphql',
									{
										query: `{Coaches(coachKey: "${e}", locale: "${i}") { fields{ ${t.join(',')} }}}`,
									},
									{ baseURL: '/' }
								);
								n.data.errors
									? yield (0, Ca.yJ)({
											type: ee.TX6,
											error: n.data.errors[0].message,
										})
									: yield (0, Ca.yJ)({
											type: ee.u6Q,
											data: {
												contentfulContentId: e,
												atpCoachInfo: n.data.data.Coaches.fields,
											},
										});
							} catch (n) {
								yield (0, Ca.yJ)({ type: ee.TX6, error: n, action: e });
							}
						}
					),
					(0, Ca.jP)(ee.e14, function* ({ coachKey: e, videoKey: t, lang: i }) {
						try {
							const n = yield (0, Ca.T1)(
								Ma().post,
								'/gateway/graph-atp/graphql',
								{
									query: `{Videos(videoKey: "${t}", locale: "${i}") {fields {videoUrl, videoTitle, videoThumbnailUrl, subtitleUrl }} Coaches(coachKey: "${e}", locale: "${i}") {fields{firstName, lastName, xxxhdpiUrl, tagLine}}}`,
								},
								{ baseURL: '/' }
							);
							n.data.errors
								? yield (0, Ca.yJ)({
										type: ee.RLf,
										error: n.data.errors[0].message,
									})
								: yield (0, Ca.yJ)({
										type: ee.O$d,
										data: {
											contentfulContentId: e,
											coachInfo: n.data.data.Coaches.fields,
											videoData: n.data.data.Videos.fields,
										},
									});
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.RLf, error: n, action: e });
						}
					}),
				];
				const xa = [
					(0, Ca.jP)(ee.eQq, function* (e) {
						try {
							const { contentID: t, locale: i } = e.payload;
							yield (0, Ca.yJ)({ type: ee.ccf });
							const n = yield (0, Ca.T1)(
								Ma().post,
								'/gateway/graph-atp/graphql',
								{
									query: `{Videos(videoKey:"${t}", locale:"${i}"){fields{videoUrl,videoTitle,videoThumbnailUrl,subtitleUrl}}}`,
								},
								{ baseURL: '/' }
							);
							n.data.errors
								? yield (0, Ca.yJ)({
										type: ee.mSg,
										error: n.data.errors[0].message,
										action: e.payload,
									})
								: yield (0, Ca.yJ)({
										type: ee.eEA,
										atpContentFulVideoItem: n.data.data.Videos,
										action: e.payload,
									});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.mSg, error: t, action: e.payload });
						}
					}),
				];
				const Ba = [
					(0, Ca.jP)(ee.bH3, function* (e) {
						try {
							const { preferenceKey: t, nextActions: i, truthTestFunc: n } = e,
								a = yield (0, Ca.T1)(Ma().get, `/preference/${t}`, {
									baseURL: '/modern',
								});
							yield (0, Ca.yJ)({
								type: ee.Sft,
								key: t,
								preference: a.data,
								receivedAt: Date.now(),
							}),
								i &&
									n &&
									n(a.data.value) &&
									(yield (0, Ca.Q7)(i.map((e) => (0, Ca.T1)(e.type, e))));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.$FJ, function* () {
						try {
							const e = yield (0, Ca.T1)(
								Ma().get,
								'/system-service/preference/SystemPreferenceDisplay.systemMessage',
								{
									baseURL: '/modern',
									timeout: Ma().defaults.timeout,
									headers: Ma().defaults.headers.common,
								}
							);
							yield (0, Ca.yJ)((0, va.qXx)(e.data));
						} catch (e) {}
					}),
					(0, Ca.jP)(ee.xTV, function* ({ key: e }) {
						try {
							yield (0, Ca.yJ)((0, va._Pz)(ee.ISL));
							const t = yield Ma().get(`/preference/${e}`, {
								baseURL: '/modern',
							});
							yield (0, Ca.yJ)((0, va.OZC)(ee.Sft, e, t.data));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.K_Z, function* () {
						try {
							const e = yield (0, Ca.T1)(
								Ma().get,
								'/mobile-status/garmin-connect-status.json',
								{
									baseURL: '/',
									timeout: Ma().defaults.timeout,
									headers: Ma().defaults.headers.common,
								}
							);
							yield (0, Ca.yJ)((0, va.Rs8)(e.data));
						} catch (e) {}
					}),
				];
				var Ha = i(570088);
				const Va = [
					(0, Ca.jP)(ee.RIx, function* (e) {
						try {
							const {
								workoutScheduleId: t,
								calendarDate: i,
								workoutScheduleDTO: n,
							} = e.payload;
							if (!n && t && i) {
								const e = yield (0, Ca.T1)(
									Na.tI.get,
									`/workout-service/schedule/${t}`
								);
								e &&
									((e.data.calendarDate = i),
									yield (0, Ca.T1)(
										Na.tI.put,
										`/workout-service/schedule/${t}`,
										e.data
									)),
									yield (0, Ca.yJ)({
										type: ee.VgC,
										workoutSchedule: e.data,
										receivedAt: Date.now(),
									}),
									yield (0, Ca.yJ)({ type: ee.KO4, show: !0 });
							} else
								i && (n.calendarDate = i),
									yield (0, Ca.T1)(
										Na.tI.put,
										`/workout-service/schedule/${t}`,
										{ workoutScheduleDTO: n }
									),
									yield (0, Ca.yJ)({
										type: ee.VgC,
										workoutSchedule: n,
										receivedAt: Date.now(),
									}),
									yield (0, Ca.yJ)({ type: ee.KO4, show: !0 });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.lnI });
						}
					}),
					(0, Ca.jP)(ee.xbj, function* e(t) {
						const {
							fullLocale: i,
							workoutId: n,
							savedWorkout: a,
							includeAudioNotes: s,
						} = t.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.y8l });
							let e =
								'true' === a
									? `/workout-service/workout/${n}`
									: `/web-data/workouts/${i}/${n}.json`;
							s && (e += '?includeAudioNotes=true');
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								e,
								'true' === a ? {} : { baseURL: '/' }
							);
							yield (0, Ca.yJ)({
								type: ee.wox,
								workoutById: t.data,
								receivedAt: Date.now(),
							});
						} catch (r) {
							'true' !== a &&
								'en-US' !== i &&
								(yield (0, Ca.T1)(e, {
									payload: {
										fullLocale: 'en-US',
										workoutId: n,
										savedWorkout: a,
										includeAudioNotes: s,
									},
								}));
						}
					}),
					(0, Ca.jP)(ee.$nJ, function* (e) {
						const { locale: t, workoutSourceId: i } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.EeR });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/web-data/workouts/${t}/${i}.json`
							);
							e.data &&
								e.data.heroImage &&
								(e.data.heroImage = e.data.heroImage.replace(
									'/images/heroImage',
									'/images/wide/heroImage'
								)),
								yield (0, Ca.yJ)({ type: ee.HXR, providerWorkout: e.data });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.M8R });
						}
					}),
					(0, Ca.jP)(
						ee.IEj,
						function* ({ workoutId: e, date: t, callback: i }) {
							try {
								yield (0, Ca.yJ)((0, va.gDg)());
								const n = yield Na.tI.post(`/workout-service/schedule/${e}`, {
									date: t,
								});
								yield (0, Ca.yJ)((0, Ha.ah)(!0)), yield (0, Ca.T1)(fa.G, i, n);
							} catch (n) {
								yield (0, Ca.T1)(fa.j, i, n);
							}
						}
					),
					(0, Ca.jP)(ee.FNW, function* ({ workoutScheduleId: e, callback: t }) {
						try {
							yield (0, Ca.yJ)((0, va.m3q)());
							const i = yield Na.tI.delete(`/workout-service/schedule/${e}`);
							yield (0, Ca.yJ)((0, Ha.ah)(!0)), yield (0, Ca.T1)(fa.G, t, i);
						} catch (i) {
							yield (0, Ca.T1)(fa.j, t, i);
						}
					}),
					(0, Ca.jP)(
						ee.vnz,
						function* ({
							workoutScheduleId: e,
							callback: t,
							includeAudioNotes: i,
						}) {
							try {
								yield (0, Ca.yJ)((0, va.EN7)());
								const n = yield Na.tI.get(
									`/workout-service/schedule/${e}${i ? '?includeAudioNotes=true' : ''}`
								);
								let a = n;
								if (null !== n.data.workout.workoutProvider) {
									const s = yield Na.tI.get(
										`/workout-service/workout/${n.data.workout.workoutId}${i ? '?includeAudioNotes=true' : ''}`
									);
									(a.data.workout = s.data),
										yield (0, Ca.yJ)((0, va.y4V)(a.data, e)),
										yield (0, Ca.T1)(fa.G, t, a);
								} else
									yield (0, Ca.yJ)((0, va.y4V)(n.data, e)),
										yield (0, Ca.T1)(fa.G, t, n);
							} catch (n) {
								yield (0, Ca.T1)(fa.j, t, n);
							}
						}
					),
					(0, Ca.jP)(ee.X8p, function* ({ date: e, callback: t }) {
						try {
							yield (0, Ca.yJ)((0, va.wrU)());
							const i = yield Na.tI.get(
								`/workout-service/schedule/export/JSON?startDate=${e}`
							);
							yield (0, Ca.yJ)((0, va.Ad4)(i.data)),
								yield (0, Ca.T1)(fa.G, t, i);
						} catch (i) {
							yield (0, Ca.T1)(fa.j, t, i);
						}
					}),
					(0, Ca.jP)(
						ee.xW6,
						function* ({
							workout: e,
							workoutId: t,
							workoutScheduleId: i,
							date: n,
							callback: a,
						}) {
							try {
								yield (0, Ca.yJ)((0, va.gDg)());
								const s = yield Na.tI.put(`/workout-service/schedule/${i}`, {
									...e,
									calendarDate: n,
									workout: { workoutId: t },
								});
								yield (0, Ca.yJ)((0, Ha.ah)(!0)), yield (0, Ca.T1)(fa.G, a, s);
							} catch (s) {
								yield (0, Ca.T1)(fa.j, a, s);
							}
						}
					),
					(0, Ca.jP)(ee.w1Y, function* (e) {
						const { payload: t, callback: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.fUw });
							const e = yield Na.tI.put(
								`/workout-service/workout/${t.workoutId}`,
								t
							);
							yield (0, Ca.yJ)({ type: ee.Axc, workout: t }),
								yield (0, Ca.T1)(fa.G, i, e);
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.xIW }), yield (0, Ca.T1)(fa.j, i, n);
						}
					}),
					(0, Ca.jP)(ee.Tpz, function* ({ workout: e, callback: t }) {
						try {
							const i = yield (0, Ca.T1)(
								Na.tI.post,
								'/workout-service/workout',
								e
							);
							yield (0, Ca.yJ)({ type: ee.Axc, workout: i.data }),
								yield (0, Ca.T1)(fa.G, t, i);
						} catch (i) {
							yield (0, Ca.T1)(fa.j, t, i);
						}
					}),
					(0, Ca.jP)(
						ee.qG9,
						function* ({ workoutId: e, workoutName: t, callback: i }) {
							try {
								const n = yield (0, Ca.T1)(
									Na.tI.post,
									`/workout-service/workout/copy/${e}`,
									t,
									{ headers: { 'Content-Type': 'text/plain' } }
								);
								yield (0, Ca.T1)(fa.G, i, n);
							} catch (n) {
								yield (0, Ca.T1)(fa.j, i, n);
							}
						}
					),
					(0, Ca.jP)(ee.wMf, function* ({ workoutId: e, callback: t }) {
						try {
							const i = yield (0, Ca.T1)(
								Na.tI.delete,
								`/workout-service/workout/${e}`
							);
							yield (0, Ca.T1)(fa.G, t, i);
						} catch (i) {
							yield (0, Ca.T1)(fa.j, t, i);
						}
					}),
					(0, Ca.jP)(ee.ESR, function* ({ audioBlob: e, callback: t }) {
						try {
							const i = new FormData();
							i.append('file', e, 'audio.mp3');
							const n = yield (0, Ca.T1)(
								Na.tI.post,
								'/workout-service/workout/audionote/upload',
								i
							);
							yield (0, Ca.T1)(fa.G, t, n);
						} catch (i) {
							yield (0, Ca.T1)(fa.j, t, i);
						}
					}),
					(0, Ca.jP)(ee.k9t, function* ({ audioUuid: e, callback: t }) {
						try {
							const i = yield (0, Ca.T1)(
								Na.tI.delete,
								`/workout-service/workout/audionote?audiouuid=${e}`
							);
							yield (0, Ca.T1)(fa.G, t, i);
						} catch (i) {
							yield (0, Ca.T1)(fa.j, t, i);
						}
					}),
				];
				const Wa = [
					(0, Ca.jP)(ee.mj7, function* (e) {
						try {
							const e = yield (0, Ca.T1)(
								Na.b0.get,
								'/gcs-golfcommunity/api/v2/player/stats'
							);
							yield (0, Ca.yJ)({ type: ee.IyG, playerGolfStats: e.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.FXf, playerGolfStats: {} });
						}
					}),
					(0, Ca.jP)(ee.rJc, function* (e) {
						try {
							const e = yield (0, Ca.T1)(
								Na.b0.get,
								'/gcs-golfcommunity/api/v2/shot/stats/drive'
							);
							yield (0, Ca.yJ)({ type: ee.pCG, driveGolfStats: e.data });
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.vzy, function* (e) {
						try {
							let t = '/gcs-golfcommunity/api/v2/shot/stats/drive';
							if (e.clubIds && e.clubIds.length > 0) {
								t += '?club-ids=' + e.clubIds[0];
								for (let i = 1; i < e.clubIds.length; i++)
									t += '-' + e.clubIds[i];
							}
							const i = yield (0, Ca.T1)(Na.b0.get, t);
							yield (0, Ca.yJ)({ type: ee.zXJ, driveGolfStats: i.data });
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.LZf, function* (e) {
						try {
							const e = yield (0, Ca.T1)(
								Na.b0.get,
								'/gcs-golfcommunity/api/v2/shot/stats/approach'
							);
							yield (0, Ca.yJ)({ type: ee.$vs, approachGolfStats: e.data });
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.pWW, function* (e) {
						try {
							let t = '/gcs-golfcommunity/api/v2/shot/stats/approach';
							if (e.clubIds && e.clubIds.length > 0) {
								t += '?club-ids=' + e.clubIds[0];
								for (let i = 1; i < e.clubIds.length; i++)
									t += '-' + e.clubIds[i];
							}
							const i = yield (0, Ca.T1)(Na.b0.get, t);
							let n = !1;
							(null === i.data.percentHitGreen10 &&
								null === i.data.percentHitGreen20 &&
								null === i.data.percentHitGreen20Plus) ||
								(n = !0),
								(i.data.usingClubtrack = n),
								yield (0, Ca.yJ)({ type: ee.zJe, approachGolfStats: i.data });
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.N$y, function* (e) {
						try {
							const e = yield (0, Ca.T1)(
								Na.b0.get,
								'/gcs-golfcommunity/api/v2/shot/stats/chip'
							);
							yield (0, Ca.yJ)({ type: ee.fiT, chipGolfStats: e.data });
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.lff, function* (e) {
						try {
							let t = '/gcs-golfcommunity/api/v2/shot/stats/chip';
							if (e.clubIds && e.clubIds.length > 0) {
								t += '?club-ids=' + e.clubIds[0];
								for (let i = 1; i < e.clubIds.length; i++)
									t += '-' + e.clubIds[i];
							}
							const i = yield (0, Ca.T1)(Na.b0.get, t);
							yield (0, Ca.yJ)({ type: ee.jgz, chipGolfStats: i.data });
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.uSs, function* (e) {
						try {
							const e = yield (0, Ca.T1)(
								Na.b0.get,
								'/gcs-golfcommunity/api/v2/shot/stats/putt'
							);
							yield (0, Ca.yJ)({ type: ee.U13, puttGolfStats: e.data });
						} catch (t) {}
					}),
				];
				var Ja = i(782152),
					Ya = i(287752);
				const $a = [
					(0, Ca.jP)(ee.cC4, function* (e) {
						const t = new Ja.A().convertObjectToQueryString({
							'per-page': 1e3,
							'include-stats': e.includeStats,
							maxClubTypeId: Ya.SK,
						});
						try {
							const e = yield (0, Ca.T1)(
								Na.b0.get,
								'/gcs-golfcommunity/api/v2/club/player' + t
							);
							yield (0, Ca.yJ)({ type: ee.Q4_, golfClubs: e.data });
						} catch (i) {}
					}),
					(0, Ca.jP)(ee.FV0, function* (e) {
						const t = new Ja.A().convertObjectToQueryString({
							maxClubTypeId: Ya.SK,
						});
						try {
							const e = yield (0, Ca.T1)(
								Na.b0.get,
								'/gcs-golfcommunity/api/v2/club/types' + t
							);
							yield (0, Ca.yJ)({ type: ee.V1e, golfClubTypes: e.data });
						} catch (i) {}
					}),
					(0, Ca.jP)(ee.Vr3, function* (e) {
						try {
							const e = yield (0, Ca.T1)(
								Na.b0.get,
								'/gcs-golfcommunity/api/v2/club/flex-types'
							);
							yield (0, Ca.yJ)({ type: ee.BzT, golfClubsFlexTypes: e.data });
						} catch (t) {}
					}),
				];
				const ja = [
					(0, Ca.jP)(ee.otu, function* (e) {
						try {
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/gdprconsent-service/feature/${e.key}`
							);
							yield (0, Ca.yJ)({ type: ee.KMI, key: e.key, feature: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.JQc });
						}
					}),
					(0, Ca.jP)(ee.u9q, function* (e) {
						try {
							const { key: t, locale: i } = e,
								n = yield (0, Ca.T1)(
									Ma().get,
									`/consentTextServices/consentText?consentTypeId=${t}&locale=${i}`,
									{ baseURL: '/' }
								);
							yield (0, Ca.yJ)({ type: ee.mPY, key: t, consentText: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.Det });
						}
					}),
					(0, Ca.jP)(ee.jpz, function* (e) {
						try {
							const {
								key: t,
								locale: i,
								consentVersion: n,
								clientIndicator: a,
								passwordChallengeToken: s,
							} = e;
							let r = null;
							(r = yield (0, Ca.T1)(
								Na.tI.post,
								`/gdprconsent-service/consent/revoke/${t}/${a}`,
								{
									consentTypeId: t,
									clientIndicator: a,
									consentLocale: i,
									consentVersion: n,
								},
								{ headers: { ...(s && { passwordChallengeToken: s }) } }
							)),
								yield (0, Ca.yJ)({
									type: ee.ZMG,
									key: t,
									locale: i,
									consentVersion: n,
									revokeConsent: r.data,
								});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.oaP });
						}
					}),
					(0, Ca.jP)(ee.ta5, function* (e) {
						try {
							const { key: t, locale: i, consentVersion: n, featureKey: a } = e,
								s = yield (0, Ca.T1)(
									Na.tI.post,
									'/gdprconsent-service/consent/grant',
									{ consentTypeId: t, consentLocale: i, consentVersion: n }
								);
							yield (0, Ca.yJ)({
								type: ee.JoU,
								key: t,
								locale: i,
								consentVersion: n,
								grantConsent: s.data,
							}),
								a &&
									(yield (0, Ca.yJ)({ type: ee.otu, key: a, feature: s.data }));
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.KFJ });
						}
					}),
					(0, Ca.jP)(ee.MxI, function* (e) {
						try {
							const t = yield (0, Ca.T1)(
								Na.tI.post,
								`/gdprconsent-service/feature/optin/${e.key}`
							);
							yield (0, Ca.yJ)({ type: ee.KMI, key: e.key, feature: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.JQc });
						}
					}),
					(0, Ca.jP)(ee.z5Y, function* (e) {
						try {
							const t = yield (0, Ca.T1)(
								Na.tI.post,
								`/gdprconsent-service/feature/optout/${e.key}`
							);
							yield (0, Ca.yJ)({ type: ee.KMI, key: e.key, feature: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.JQc });
						}
					}),
				];
				var Ka = i(651232);
				const za = [
					(0, Ca.jP)(Ka.ZH, function* (e) {
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/userpreference-service/progressSummary/selectedFields'
							);
							yield (0, Ca.yJ)({ type: Ka.F9, selectedFields: e.data });
						} catch (t) {}
					}),
					(0, Ca.jP)(Ka.Ep, function* (e) {
						try {
							const t = yield (0, Ca.T1)(
								Na.tI.put,
								'/userpreference-service/progressSummary/selectedFields',
								e.payload.selectedFields
							);
							yield (0, Ca.yJ)({ type: Ka.wx, selectedFields: t.data });
						} catch (t) {}
					}),
					(0, Ca.jP)(Ka.KF, function* (e) {
						try {
							let t = { key: e.preferenceKey, value: e.userPreference };
							const i = yield (0, Ca.T1)(
								Na.tI.put,
								`/userpreference-service/${e.preferenceKey}`,
								t
							);
							yield (0, Ca.T1)(fa.G, e.callback, i),
								yield (0, Ca.yJ)({
									type: Ka.Cp,
									value: i.data.value,
									preferenceKey: i.data.key,
								});
						} catch (t) {
							yield (0, Ca.T1)(fa.j, e.callback, t),
								yield (0, Ca.yJ)({
									type: Ka.D_,
									value: null,
									preferenceKey: e.preferenceKey,
								});
						}
					}),
					(0, Ca.jP)(Ka.py, function* (e) {
						try {
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/userpreference-service/${e.key}`
							);
							yield (0, Ca.yJ)({
								type: Ka.Lj,
								value: t.data.value,
								preferenceKey: t.data.key,
							}),
								e.callback && (yield (0, Ca.T1)(fa.G, e.callback, t));
						} catch (t) {
							yield (0, Ca.yJ)({
								type: Ka.Ai,
								value: null,
								preferenceKey: e.key,
							}),
								e.callback && (yield (0, Ca.T1)(fa.j, e.callback, t));
						}
					}),
					(0, Ca.jP)(ee.pVc, function* ({ key: e }) {
						try {
							yield (0, Ca.yJ)((0, va.YJo)(ee.gZE));
							const t = yield Na.tI.get('/userpreference-service/' + e);
							yield (0, Ca.yJ)((0, va.cty)(ee.sP1, t.data));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.lfR, function* ({ key: e, value: t }) {
						try {
							const i = yield Na.tI.put(`/userpreference-service/${e}`, {
								key: e,
								value: t,
							});
							yield (0, Ca.yJ)((0, va.cty)(ee.sP1, i.data));
						} catch (i) {}
					}),
				];
				var qa = i(270715);
				const Qa = [
					(0, Ca.jP)(qa.Pb, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: qa.m1, ...e.payload });
							const {
									aggregation: t,
									groupBy: i,
									userFirstDay: n,
									startDate: a,
									endDate: s,
									metrics: r,
									activityType: o,
									standardizedUnits: l,
								} = e.payload,
								c = Sa.zJ({
									aggregation: t,
									groupByParentActivityType: 'ACTIVITY' === i,
									groupByEventType: 'EVENT' === i,
									activityType: o,
									userFirstDay: n,
									startDate: a,
									endDate: s,
									metric: r,
									standardizedUnits: l,
								}),
								d = yield (0, Ca.T1)(
									Na.tI.get,
									`/fitnessstats-service/activity${c}`
								);
							yield (0, Ca.yJ)({ type: qa.vb, ...e.payload, stats: d.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: qa.YX, data: [] });
						}
					}),
					(0, Ca.jP)(qa.jl, function* (e) {
						yield (0, Ca.yJ)({ type: qa.A_, ...e.payload });
						try {
							const { activityType: t, metric: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`/fitnessstats-service/activity/training/recent/${t}?metric=${i}`
								);
							yield (0, Ca.yJ)({ type: qa.nJ, metric: i, stats: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: qa.Ql, data: [] });
						}
					}),
					(0, Ca.jP)(qa.jw, function* (e) {
						yield (0, Ca.yJ)({ type: qa.sL });
						try {
							const { activityType: t } = e.payload,
								i = yield (0, Ca.T1)(
									Na.tI.get,
									`/fitnessstats-service/activity/userAvgSpeed?activityType=${t}`
								);
							yield (0, Ca.yJ)({
								type: qa.DA,
								userAveragePace: i.data,
								activityType: t,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: qa._D });
						}
					}),
				];
				const Xa = [
					(0, Ca.jP)(ee.Fvt, function* (e) {
						try {
							const { lastDashboardId: t } = e.payload;
							yield (0, Ca.yJ)({ type: ee.mx$ });
							const i = yield (0, Ca.T1)(
								Na.tI.get,
								`/dashboard-service/dashboard/widgetInstances/${t}`
							);
							i &&
								(yield (0, Ca.yJ)({
									type: ee.P4y,
									widgetInstances: i.data,
									receivedAt: Date.now(),
								}));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.Lzh, function* (e) {
						try {
							const { displayName: t } = e.payload,
								i = yield (0, Ca.T1)(
									Na.tI.get,
									`/dashboard-service/widgetDefinitions/${t}`
								);
							i &&
								(yield (0, Ca.yJ)({
									type: ee.HTe,
									widgetDefinitions: i.data,
									receivedAt: Date.now(),
								}));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.H2o, function* (e) {
						try {
							const { payload: t } = e;
							(yield (0, Ca.T1)(
								Na.tI.post,
								'/dashboard-service/widgetInstance',
								t
							)) &&
								(yield (0, Ca.yJ)({ type: ee.h3Z, receivedAt: Date.now() }));
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.VuJ });
						}
					}),
				];
				const Za = [
					(0, Ca.jP)(ee.OQj, function* (e) {
						const { userProfileId: t, date: i } = e;
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/wellness-service/wellness/daily/spo2acclimation/${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.Ytm,
								pulseOxAcclimation: e.data,
								calendarDate: i,
								userProfileId: t,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.ReH,
								pulseOxAcclimation: {},
								calendarDate: i,
								userProfileId: t,
							});
						}
					}),
				];
				var es = i(275659);
				function* ts(e) {
					const { calendarDate: t } = e.payload;
					try {
						yield (0, Ca.yJ)({ type: ee.Jel });
						const e = yield (0, Ca.T1)(
							Na.tI.get,
							`/wellness-service/wellness/daily/im/${t}`
						);
						yield (0, Ca.yJ)({ type: ee.QJU, intensityMinutesData: e.data });
					} catch (i) {
						yield (0, Ca.yJ)({ type: ee.lWh, intensityMinutesData: null });
					}
				}
				const is = [
					(0, Ca.jP)(ee.mqM, ts),
					(0, Ca.jP)(ee.ejV, function* (e) {
						const { fromDate: t, untilDate: i } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.TQl });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`usersummary-service/stats/im/daily/${t}/${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.qVj,
								intensityMinutesDailyData: e.data,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.jg$,
								intensityMinutesDailyData: null,
							});
						}
					}),
					(0, Ca.jP)(ee.S_P, function* (e) {
						const { fromDate: t, untilDate: i } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.RYt });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`usersummary-service/stats/im/weekly/${t}/${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.yW_,
								intensityMinutesWeeklyData: e.data,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.ZAp,
								intensityMinutesWeeklyData: null,
							});
						}
					}),
					(0, Ca.jP)(ee.wyZ, function* (e) {
						const { endDate: t, numDays: i } = e;
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/wellness-service/stats/hourly/im/${t}/${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.Pq9,
								error: !1,
								intensityMinutesHourlyData: e.data,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.Pq9,
								error: !0,
								intensityMinutesHourlyData: null,
							});
						}
					}),
				];
				var ns = i(702291),
					as = i(422460),
					ss = i(808171);
				function* rs(e) {
					yield (0, Ca.yJ)({ type: ee.cTw });
					const { displayName: t, calendarDate: i } = e,
						n = Sa.zJ({ calendarDate: i });
					if (t)
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/usersummary-service/usersummary/daily/${t}${n}`
							);
							yield (0, Ca.yJ)({
								type: ee.ncT,
								mergedSummary: e.data,
								displayName: t,
								calendarDate: i,
							});
						} catch (a) {
							yield (0, Ca.yJ)({
								type: ee.ktn,
								mergedSummary: {},
								displayName: t,
								calendarDate: i,
							});
						}
					else
						yield (0, Ca.yJ)({
							type: ee.ktn,
							mergedSummary: {},
							displayName: t,
							calendarDate: i,
						});
				}
				const os = [
					(0, Ca.jP)(ee.rAn, rs),
					(0, Ca.jP)(ee.Nr, function* (e) {
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/usersummary-service/usersummary/dailySummariesCount'
							);
							yield (0, Ca.yJ)({ type: ee.voy, mergedSummaryCount: e.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.YFP, mergedSummaryCount: {} });
						}
					}),
					(0, Ca.jP)(ee.I$b, function* (e) {
						const { displayName: t, calendarDate: i } = e,
							n = Sa.zJ({ calendarDate: i });
						try {
							yield (0, Ca.yJ)({ type: ee.zJP });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/activitylist-service/activities/fordailysummary/${t}${n}`
							);
							yield (0, Ca.yJ)({
								type: ee._eC,
								activitiesForDailySummary: e.data,
								calendarDate: i,
								displayName: t,
							});
						} catch (a) {
							yield (0, Ca.yJ)({
								type: ee.PtW,
								activitiesForDailySummary: [],
								calendarDate: i,
								displayName: t,
							});
						}
					}),
					(0, Ca.jP)(ee.YIJ, function* (e) {
						const {
							displayName: t,
							startTimestampLocal: i,
							endTimestampLocal: n,
							activityTypeId: a,
							limit: s,
						} = e;
						yield (0, Ca.yJ)({ type: ee.Xw2 });
						const r = { startTimestampLocal: i, endTimestampLocal: n };
						a && (r.activityTypeId = a), s && (r.limit = s);
						const o = Sa.zJ(r);
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/activitylist-service/activities/list/${t}${o}`
							);
							yield (0, Ca.yJ)({
								type: ee.qz9,
								activitiesListForTimeframe: e.data,
								startTimestampLocal: i,
								endTimestampLocal: n,
								displayName: t,
							});
						} catch (l) {
							yield (0, Ca.yJ)({
								type: ee.nEc,
								activitiesListForTimeframe: [],
								startTimestampLocal: i,
								endTimestampLocal: n,
								displayName: t,
							});
						}
					}),
					(0, Ca.jP)(ee.EOf, function* (e) {
						const { displayName: t, calendarDate: i } = e,
							n = Sa.zJ({ calendarDate: i });
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/wellness-service/wellness/dailyEvents/${t}${n}`
							);
							yield (0, Ca.yJ)({
								type: ee.kkP,
								autoDetectedEvents: e.data,
								displayName: t,
								calendarDate: i,
							});
						} catch (a) {
							yield (0, Ca.yJ)({
								type: ee.v6H,
								autoDetectedEvents: {},
								displayName: t,
								calendarDate: i,
							});
						}
					}),
					(0, Ca.jP)(ee.FB5, function* (e) {
						const { displayName: t, calendarDate: i } = e;
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/wellness-service/wellness/dailyStress/${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.p5M,
								dailyStressData: e.data,
								displayName: t,
								calendarDate: i,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee._ku,
								dailyStressData: {},
								displayName: t,
								calendarDate: i,
							});
						}
					}),
					(0, Ca.jP)(ee.nK3, function* (e) {
						const { displayName: t, calendarDate: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.iqT });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/wellness-service/wellness/dailyMovement?calendarDate=${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.JD2,
								dailyMovement: e.data,
								displayName: t,
								calendarDate: i,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.AVH,
								dailyMovement: {},
								displayName: t,
								calendarDate: i,
							});
						}
					}),
					(0, Ca.jP)(ee.nVG, function* (e) {
						const { displayName: t, calendarDate: i } = e;
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/wellness-service/wellness/dailyHeartRate?date=${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.JOV,
								dailyHeartRate: e.data,
								displayName: t,
								calendarDate: i,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.eTM,
								dailyHeartRate: {},
								displayName: t,
								calendarDate: i,
							});
						}
					}),
					(0, Ca.jP)(ee.DjC, function* (e) {
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/wellness-service/wellness/syncTimestamp'
							);
							yield (0, Ca.yJ)({ type: ee.hWm, lastSyncTimestamp: e.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.cQ1, lastSyncTimestamp: null });
						}
					}),
					(0, Ca.jP)(ee.q0$, function* (e) {
						const { calendarDate: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.lMF });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/goal-service/goal/user/effective/${t}`
							);
							yield (0, Ca.yJ)({ type: ee.KYd, calendarDate: t, data: e.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.FKM, calendarDate: t, data: null });
						}
					}),
					(0, Ca.jP)(ee.wHs, function* (e) {
						const { displayName: t, calendarDate: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.l4D });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/wellness-service/wellness/wellness-goals/consolidated/steps/${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.AR1,
								displayName: t,
								calendarDate: i,
								data: e.data,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.vHg,
								displayName: t,
								calendarDate: i,
								data: null,
							});
						}
					}),
					(0, Ca.jP)(ee.EqB, function* (e) {
						const { calendarDate: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.Ly1 });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/wellness-service/wellness/wellness-goals/consolidated/pushes/${t}`
							);
							yield (0, Ca.yJ)({ type: ee.s2Z, calendarDate: t, data: e.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.JDs, calendarDate: t, data: null });
						}
					}),
					(0, Ca.jP)(ee.Jcb, function* (e) {
						const { displayName: t, calendarDate: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.iZm });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/wellness-service/wellness/dailySummaryChart/?date=${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.$Pn,
								displayName: t,
								calendarDate: i,
								data: e.data,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.ocK,
								displayName: t,
								calendarDate: i,
								data: null,
							});
						}
					}),
					(0, Ca.jP)(ee.i_L, function* (e) {
						const { displayName: t, calendarDate: i } = e;
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/wellness-service/wellness/bodyBattery/messagingToday'
							);
							yield (0, Ca.yJ)({
								type: ee.c3z,
								displayName: t,
								calendarDate: i,
								bodyBatteryToday: e.data,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.rFZ,
								displayName: t,
								calendarDate: i,
								bodyBatteryToday: null,
							});
						}
					}),
					(0, Ca.jP)(ee.q$n, function* (e) {
						try {
							const t = e.payload,
								i = yield (0, Ca.T1)(
									Na.tI.put,
									'/usersummary-service/usersummary/daily/',
									t
								);
							yield (0, Ca.yJ)({ type: ee.Odt, mergedSummary: i.data });
						} catch (t) {}
					}),
					(0, Ca.jP)(ss.Su, function* (e) {
						const { calendarDate: t } = e;
						yield (0, Ca.yJ)({ type: ss.ZO, calendarDate: t });
						try {
							yield (0, Ca.T1)(
								Na.tI.head,
								`/download-service/files/wellness/${t}`
							);
							yield (0, Ca.yJ)({
								type: ss.qM,
								calendarDate: t,
								isExportable: !0,
							});
						} catch (i) {
							yield (0, Ca.yJ)({
								type: ss.X7,
								calendarDate: t,
								isExportable: !1,
							});
						}
					}),
					(0, Ca.jP)(ss.$C, function* (e) {
						const { calendarDate: t } = e;
						try {
							204 ===
								(yield (0, Ca.T1)(
									Na.tI.delete,
									`/wellness-service/wellness/dailySummary/${t}`
								)).status &&
								(yield (0, Ca.yJ)({ type: ss.F$, calendarDate: t }),
								yield (0, Ca.yJ)({
									type: ee.rAn,
									calendarDate: t,
									displayName: e.displayName,
								}));
						} catch (i) {
							yield (0, Ca.yJ)({ type: ss.wz, calendarDate: t });
						}
					}),
					(0, Ca.jP)(ee.Pbl, function* (e) {
						const { displayName: t, calendarDate: i, newGoal: n } = e;
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.put,
								`/wellness-service/wellness/wellness-goals/consolidated/steps/${i}`,
								n
							);
							return (
								yield (0, Ca.yJ)({
									type: ee.WmQ,
									data: e.data,
									calendarDate: i,
								}),
								e
							);
						} catch (a) {
							yield (0, Ca.yJ)({ type: ee.IC$ });
						}
					}),
					(0, Ca.jP)(ee.Rfe, function* (e) {
						const { calendarDate: t, newGoal: i } = e;
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.put,
								`/wellness-service/wellness/wellness-goals/consolidated/${t}`,
								i
							);
							return yield (0, Ca.yJ)({ type: ee.ZN, data: e.data }), e;
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.wJK });
						}
					}),
					(0, Ca.jP)(ee.j7R, function* (e) {
						const { calendarDate: t, newGoal: i } = e,
							n = es.kO[i.goalType],
							a = n && n.urlFriendly ? n.urlFriendly : n.key.toLowerCase();
						try {
							yield (0, Ca.yJ)({ type: ee.aMx });
							const e = yield (0, Ca.T1)(
								Na.tI.put,
								`/goal-service/goal/user/effective/${a}/${t}`,
								i
							);
							return (
								yield (0, Ca.yJ)({
									type: ee.TJW,
									calendarDate: t,
									data: e.data,
								}),
								i.goalType === es.kO.INTENSITY_MINUTES.key &&
									(yield (0, Ca.T1)(ts, { payload: { calendarDate: t } })),
								e
							);
						} catch (s) {
							yield (0, Ca.yJ)({ type: ee._ZD });
						}
					}),
					(0, Ca.jP)(ee.zgE, function* (e) {
						const { eventTimestamp: t } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.OAh });
							const i = ns.A.parseISOUTC(t),
								n = as.Ay.formatConnectTimestampUTC(i);
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/wellness-service/wellness/abnormalHeartRate/${n}`
							);
							yield (0, Ca.yJ)({ type: ee.lDt, payload: e.payload });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.Uv6 });
						}
					}),
					(0, Ca.jP)(ee.MC3, function* (e) {
						const { calendarDate: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.P6B });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/usersummary-service/stats/pushes/weekly/${t}/1`
							);
							yield (0, Ca.yJ)({
								type: ee.CFX,
								calendarDate: t,
								data: e.data[0].values.averagePushes,
							});
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.v6A, calendarDate: t });
						}
					}),
				];
				const ls = [
					(0, Ca.jP)(ee.PkB, function* (e) {
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/biometric-service/heartRateZones/'
							);
							yield (0, Ca.yJ)({ type: ee.fQZ, heartRateZones: e.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.GgE, heartRateZones: {} });
						}
					}),
				];
				const cs = [
					(0, Ca.jP)(ee.a8A, function* (e) {
						try {
							let t;
							(t = e.doNotGenerateDefaults
								? yield (0, Ca.T1)(
										Na.tI.get,
										'/biometric-service/powerZones/sports/all?generateDefaults=false'
									)
								: yield (0, Ca.T1)(
										Na.tI.get,
										'/biometric-service/powerZones/sports/all'
									)),
								yield (0, Ca.yJ)({ type: ee.Abp, powerZones: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.fRn, powerZones: {} });
						}
					}),
				];
				const ds = [
					(0, Ca.jP)(ee.c2b, function* (e) {
						const { displayName: t, calendarDate: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.NjK });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/wellness-service/wellness/dailyEvents/${t}?calendarDate=${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.u3h,
								moveIQEvents: e.data,
								displayName: t,
								calendarDate: i,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.dPY,
								moveIQEvents: [],
								displayName: t,
								calendarDate: i,
							});
						}
					}),
					(0, Ca.jP)(ee.wSg, function* (e) {
						const { event: t, calendarDate: i } = e;
						try {
							204 ===
							(yield (0, Ca.T1)(
								Na.tI.delete,
								'/wellness-service/wellness/dailyEvent/',
								{ data: t }
							)).status
								? yield (0, Ca.yJ)({
										type: ee.Mir,
										event: t,
										calendarDate: i,
										displayName: e.displayName,
									})
								: yield (0, Ca.yJ)({
										type: ee.x$f,
										event: t,
										calendarDate: i,
										displayName: e.displayName,
									});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.x$f,
								event: t,
								calendarDate: i,
								displayName: e.displayName,
							});
						}
					}),
				];
				const us = [
					(0, Ca.jP)(ee.zez, function* (e) {
						const { displayName: t } = e;
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/device-service/deviceservice/device-info/all/${t}`
							);
							yield (0, Ca.yJ)({
								type: ee.Zt0,
								deviceList: e.data,
								displayName: t,
							});
						} catch (i) {
							yield (0, Ca.yJ)({
								type: ee.w32,
								deviceList: [],
								displayName: t,
							});
						}
					}),
					(0, Ca.jP)(ee.Upd, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.loZ });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/device-service/deviceregistration/devices'
							);
							yield (0, Ca.yJ)({ type: ee.Inc, registeredDeviceList: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.T3P, registeredDeviceList: [] });
						}
					}),
					(0, Ca.jP)(ee.Fr_, function* (e) {
						const { deviceId: t } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.igT });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/device-service/deviceservice/app-info/device/${t}`
							);
							yield (0, Ca.yJ)({ type: ee.pdt, data: e.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.KOQ, data: null });
						}
					}),
					(0, Ca.jP)(ee.TYz, function* (e) {
						const { deviceId: t } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.uUY });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/device-service/deviceservice/user-device/${t}`
							);
							yield (0, Ca.yJ)({ type: ee.IuD, data: e.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.yq2, data: null });
						}
					}),
					(0, Ca.jP)(ee.e8J, function* ({ displayName: e }) {
						try {
							yield (0, Ca.yJ)((0, va.Lli)(e));
							const t = yield Na.tI.get(
								`/device-service/deviceregistration/devices/all/${e}`
							);
							yield (0, Ca.yJ)((0, va.JwS)(e, t.data));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.JJr, function* ({ displayName: e }) {
						try {
							yield (0, Ca.yJ)((0, va.PTS)(e));
							const t = yield Na.tI.get(
								`/device-service/deviceservice/userlastused/${e}`
							);
							yield (0, Ca.yJ)((0, va.XzV)(e, t.data));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.bV2, function* (e) {
						const { partNumber: t } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.SZj });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/device-service/devicelist/devices?partNumber=${t}`
							);
							yield (0, Ca.yJ)({ type: ee.rfH, data: e.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.GzH, data: null });
						}
					}),
					(0, Ca.jP)(ee.W8n, function* (e) {
						const { healthDeviceId: t } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.Le9 });
							const e = yield (0, Ca.T1)(
								Na.$j.get,
								`/ghs/account/v1/device/${t}/all`
							);
							yield (0, Ca.yJ)({ type: ee.K6S, data: e.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.dgr, data: null });
						}
					}),
					(0, Ca.jP)(ee.Si5, function* ({ userId: e }) {
						try {
							yield (0, Ca.yJ)({ type: ee.dr7, userId: e });
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								'/web-gateway/device-info/primary-training-device'
							);
							yield (0, Ca.yJ)({
								type: ee.U1b,
								userId: e,
								data: t.data,
								receivedAt: Date.now(),
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.bxW, data: null });
						}
					}),
					(0, Ca.jP)(
						ee.QP6,
						function* ({
							deviceId: e,
							partNumber: t,
							currentFirmwareVersionMajor: i,
							currentFirmwareVersionMinor: n,
						}) {
							try {
								yield (0, Ca.yJ)({ type: ee.n3x });
								const a = yield (0, Ca.T1)(
									Na.tI.get,
									`/web-gateway/pbs-gateway/pbs-info/device-id/${e}/part-number/${t}/major-version/${i}/minor-version/${n}`
								);
								yield (0, Ca.yJ)({ type: ee.AL, deviceId: e, data: a.data });
							} catch (a) {
								yield (0, Ca.yJ)({ type: ee.x8Y, deviceId: e, data: {} });
							}
						}
					),
					(0, Ca.jP)(
						ee.l7k,
						function* ({ userId: e, deviceId: t, callback: i }) {
							try {
								yield (0, Ca.yJ)({ type: ee.Oku, userId: e, deviceId: t });
								const n = yield (0, Ca.T1)(
									Na.tI.put,
									'/userprofile-service/userprofile/user-settings/primary-training-device',
									{ deviceId: t }
								);
								yield (0, Ca.T1)(fa.G, i, n),
									yield (0, Ca.yJ)({
										type: ee.FpF,
										deviceId: t,
										data: n.data,
										receivedAt: Date.now(),
									});
							} catch (n) {
								yield (0, Ca.T1)(fa.j, i, n),
									yield (0, Ca.yJ)({ type: ee.S4_, data: null });
							}
						}
					),
					(0, Ca.jP)(
						ee.uoP,
						function* ({ userId: e, deviceId: t, callback: i }) {
							try {
								yield (0, Ca.yJ)({ type: ee.hzL, userId: e, deviceId: t });
								const n = yield (0, Ca.T1)(
									Na.tI.put,
									`device-service/deviceservice/device-info/${t}/primary-activity-tracker`
								);
								yield (0, Ca.T1)(fa.G, i, n),
									yield (0, Ca.yJ)({
										type: ee.od5,
										deviceId: t,
										data: n.data,
										receivedAt: Date.now(),
									});
							} catch (n) {
								yield (0, Ca.T1)(fa.j, i, n),
									yield (0, Ca.yJ)({ type: ee.twg, data: null });
							}
						}
					),
					(0, Ca.jP)(ee._wz, function* ({ deviceId: e, callback: t }) {
						try {
							yield (0, Ca.yJ)({ type: ee.hHv, deviceId: e });
							const i = yield (0, Ca.T1)(
								Na.tI.delete,
								`device-service/deviceregistration/device/${e}`
							);
							yield (0, Ca.yJ)({
								type: ee.yS6,
								deviceId: e,
								data: i.data,
								receivedAt: Date.now(),
							}),
								yield (0, Ca.T1)(fa.G, t, i);
						} catch (i) {
							yield (0, Ca.T1)(fa.j, t, i),
								yield (0, Ca.yJ)({ type: ee.NWp, data: null });
						}
					}),
					(0, Ca.jP)(ee.gr9, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.HV1 });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/device-service/deviceregistration/devices/historical'
							);
							yield (0, Ca.yJ)({ type: ee.myF, historicalDeviceList: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.xMh, historicalDeviceList: null });
						}
					}),
				];
				var ps = i(586816),
					ys = i(212861);
				function hs(e, t) {
					e && e.onSuccess && e.onSuccess(t.data);
				}
				const gs = [
					(0, Ca.jP)(ee.Gf2, function* (e) {
						const { segmentId: t, displayName: i } = e;
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/segment-service/leaderboard/segment/${t}/rank/${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.CJj,
								data: { ...e.data, uuid: t },
								receivedAt: Date.now(),
							});
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.UOc, data: {} });
						}
					}),
					(0, Ca.jP)(ee.DVA, function* ({ activityId: e }) {
						try {
							const t = yield Na.tI.get(
								`/course-service/segment/activity/${e}`
							);
							yield (0, Ca.yJ)((0, ys.rC)(t.data, e));
						} catch (t) {
							yield (0, Ca.yJ)((0, ys.$S)(t.response));
						}
					}),
					(0, Ca.jP)(ee.cZ4, function* ({ data: e, isEndlessLoading: t }) {
						try {
							const i = yield Na.tI.post(
								'/segment-service/leaderboard/search/',
								e
							);
							yield (0, Ca.yJ)((0, ys.qd)(i.data, t));
						} catch (i) {}
					}),
					(0, Ca.jP)(
						ee.cTn,
						function* ({ segmentUuid: e, callback: { onSuccess: t } }) {
							try {
								const i = yield Na.tI.delete(`course-service/segment/${e}`);
								yield (0, Ca.yJ)((0, ys.Dw)(i, e)),
									t && (yield (0, Ca.T1)(t(i.data)));
							} catch (i) {}
						}
					),
					(0, Ca.jP)(
						ee.PHf,
						function* ({ administeredGroupId: e, segmentPk: t }) {
							try {
								const i = yield Na.tI.get(
									`course-service/segment/group/${e}/segment/${t}`
								);
								yield (0, Ca.yJ)((0, ys.o1)(i.data));
							} catch (i) {}
						}
					),
					(0, Ca.jP)(ee.twM, function* ({ item: e }) {
						try {
							const t = yield Na.tI.delete(
								`course-service/segment/group/${e.groupPk}/segment/${e.segmentPk}`
							);
							yield (0, Ca.yJ)((0, ys.o1)(t.data));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.$us, function* ({ item: e }) {
						try {
							const t = yield Na.tI.put(
								`course-service/segment/group/${e.groupPk}/segment/${e.segmentPk}`,
								e
							);
							yield (0, Ca.yJ)((0, ys.o1)(t.data));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.TlM, function* ({ segmentId: e, callback: t }) {
						let i = { targetCoordinateSystem: (0, ps.B)() ? 'BD09' : null };
						try {
							const n = yield Na.tI.get(`/course-service/segment/${e}`, {
								params: i,
							});
							yield (0, Ca.yJ)((0, ys.V3)(n.data, e)),
								yield (0, Ca.T1)(hs, t, n);
						} catch (n) {
							yield (0, Ca.yJ)((0, ys.oq)(n));
						}
					}),
					(0, Ca.jP)(ee.zF2, function* ({ filters: e = {}, callback: t }) {
						(e.limit = e.limit || 200),
							(e.showFavorites = !0),
							(0, ps.B)() && (e.coordinateSystem = 'BD09');
						try {
							const i = yield Na.tI.post(
								'course-service/segment/filterSegments',
								e
							);
							yield (0, Ca.yJ)((0, ys.y0)(i.data)), yield (0, Ca.T1)(hs, t, i);
						} catch (i) {
							yield (0, Ca.yJ)((0, ys.oq)(i));
						}
					}),
					(0, Ca.jP)(ee.hN6, function* ({ segment: e }) {
						try {
							const t = yield Na.tI.put(
								`/course-service/segment/user/${e.segmentPk}`
							);
							yield (0, Ca.yJ)((0, ys.wu)(e.segmentPk, t.data.favorite)),
								yield (0, Ca.yJ)((0, ys.gr)(t.data.favorite));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.Xrj, function* ({ segment: e }) {
						try {
							const t = yield Na.tI.delete(
								`/course-service/segment/user/${e.segmentPk}`
							);
							yield (0, Ca.yJ)((0, ys.wu)(e.segmentPk, t.data.favorite)),
								yield (0, Ca.yJ)((0, ys.gr)(t.data.favorite));
						} catch (t) {}
					}),
				];
				const ms = [
					(0, Ca.jP)(ee.cDy, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.Jh_ });
							const {
									userId: t,
									timestamp: i,
									value: n,
									calendarDate: a,
								} = e.payload,
								s = yield (0, Ca.T1)(
									Na.tI.put,
									'/usersummary-service/usersummary/hydration/log',
									{
										userProfileId: t,
										timestampLocal: i,
										valueInML: n,
										calendarDate: a,
									}
								);
							yield (0, Ca.yJ)({ type: ee.gR$, response: s });
						} catch (t) {
							const i = yield (0, Ca.T1)(
								Na.tI.get,
								`/usersummary-service/usersummary/hydration/daily/${e.payload.calendarDate}`
							);
							yield (0, Ca.yJ)({ type: ee.vPC, response: i });
						}
					}),
					(0, Ca.jP)(ee.Wj1, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.VoB });
							const { calendarDate: t } = e.payload;
							delete e.payload.calendarDate;
							const i = yield (0, Ca.T1)(
								Na.tI.put,
								`/usersummary-service/usersummary/hydration/allData/${t}`,
								e.payload
							);
							yield (0, Ca.T1)(fa.G, e.callback, i),
								yield (0, Ca.yJ)({ type: ee.sIe, response: i }),
								yield (0, Ca.yJ)({
									type: ee.loq,
									data: {
										...(!!i.data.hydrationMeasurementUnit && {
											hydrationMeasurementUnit:
												e.payload.hydrationMeasurementUnit,
										}),
										...(!!i.data.hydrationContainers && {
											hydrationContainers: e.payload.hydrationContainers,
										}),
									},
								});
						} catch (t) {
							yield (0, Ca.T1)(fa.j, e.callback, t),
								yield (0, Ca.yJ)({ type: ee.faM, e: t });
						}
					}),
					(0, Ca.jP)(ee.NDt, function* (e) {
						const { calendarDate: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.A1r });
							const { calendarDate: t } = e.payload,
								i = yield (0, Ca.T1)(
									Na.tI.get,
									`/usersummary-service/usersummary/hydration/allData/${t}`
								);
							yield (0, Ca.yJ)({
								type: ee.Bzi,
								dailyHydrationData: i.data,
								calendarDate: t,
							});
						} catch (i) {
							yield (0, Ca.yJ)({
								type: ee.meH,
								dailyHydrationData: {},
								calendarDate: t,
							});
						}
					}),
				];
				const As = [
					(0, Ca.jP)(ee.p4q, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee._5U });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/userprofile-service/userprofile/settings'
							);
							yield (0, Ca.yJ)({ type: ee.xUt, viewerUserPreferences: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.OJ0 });
						}
					}),
					(0, Ca.jP)(ee.skB, function* (e = {}) {
						const { newViewerUserPreferences: t, callback: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.$z2 });
							const e = yield (0, Ca.T1)(
								Na.tI.put,
								'/userprofile-service/userprofile/settings',
								t
							);
							yield (0, Ca.T1)(fa.G, i, e),
								yield (0, Ca.yJ)({
									type: ee.OD1,
									viewerUserPreferences: e.data,
								});
						} catch (n) {
							yield (0, Ca.T1)(fa.j, i, n), yield (0, Ca.yJ)({ type: ee.rWJ });
						}
					}),
				];
				const _s = [
					(0, Ca.jP)(ee.JsE, function* (e) {
						const { callback: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.seO });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/userprofile-service/userprofile/user-settings/'
							);
							yield (0, Ca.yJ)({ type: ee.DD8, userSettings: e.data }),
								yield (0, Ca.T1)(fa.G, t, e);
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.KH1, userSettings: {} });
						}
					}),
					(0, Ca.jP)(ee.sKH, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.bnb }),
								yield (0, Ca.T1)(
									Na.tI.put,
									'/userprofile-service/userprofile/user-settings/',
									{ userData: e.payload }
								),
								yield (0, Ca.yJ)({ type: ee.UYL, userSettings: e.payload });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.bis, userSettings: null });
						}
					}),
					(0, Ca.jP)(ee.PLH, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.bnb }),
								yield (0, Ca.T1)(
									Na.tI.put,
									'/userprofile-service/userprofile/user-settings/',
									{ userMenstrualCycleSettings: e.payload }
								),
								yield (0, Ca.yJ)({
									type: ee.pMx,
									userMenstrualCycleSettings: e.payload,
								});
						} catch (t) {
							yield (0, Ca.yJ)({
								type: ee.q4r,
								userMenstrualCycleSettings: null,
							});
						}
					}),
				];
				const Es = [
					(0, Ca.jP)(ee.F2f, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.Em2 });
							const {
									displayName: t,
									fromLabel: i,
									startDate: n,
									untilLabel: a,
									endDate: s,
									metricIds: r,
									grpParentActType: o,
								} = e.payload,
								l = Sa.zJ({ [i]: n, [a]: s, grpParentActType: o, metricId: r }),
								c = yield (0, Ca.T1)(
									Na.tI.get,
									`/userstats-service/wellness/daily/${t}${l}`
								);
							yield (0, Ca.yJ)({
								type: ee.ZoO,
								userStatsWellnessDaily: c.data,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.I6M, userStatsWellnessDaily: null });
						}
					}),
					(0, Ca.jP)(ee.bO2, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.I$h });
							const {
									displayName: t,
									fromLabel: i,
									startDate: n,
									untilLabel: a,
									endDate: s,
									metricIds: r,
									grpParentActType: o,
								} = e.payload,
								l = Sa.zJ({ [i]: n, [a]: s, grpParentActType: o, metricId: r }),
								c = yield (0, Ca.T1)(
									Na.tI.get,
									`/userstats-service/wellness/weekly/${t}${l}`
								);
							yield (0, Ca.yJ)({
								type: ee.xDI,
								userStatsWellnessWeekly: c.data,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.Q5r, userStatsWellnessWeekly: null });
						}
					}),
					(0, Ca.jP)(ee.Fm1, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.Szd });
							const {
									displayName: t,
									fromLabel: i,
									startDate: n,
									untilLabel: a,
									endDate: s,
									metricIds: r,
									grpParentActType: o,
								} = e.payload,
								l = Sa.zJ({ [i]: n, [a]: s, grpParentActType: o, metricId: r }),
								c = yield (0, Ca.T1)(
									Na.tI.get,
									`/userstats-service/wellness/monthly/${t}${l}`
								);
							yield (0, Ca.yJ)({
								type: ee.Tbi,
								userStatsWellnessMonthly: c.data,
							});
						} catch (t) {
							yield (0, Ca.yJ)({
								type: ee.Szy,
								userStatsWellnessMonthly: null,
							});
						}
					}),
					(0, Ca.jP)(ee.BLH, function* ({ displayName: e }) {
						try {
							yield (0, Ca.yJ)((0, va.wCo)());
							const t = yield Na.tI.get(`/userstats-service/statistics/${e}`);
							yield (0, Ca.yJ)((0, va.UqE)(t.data, e));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.eAk, function* ({ displayName: e }) {
						try {
							yield (0, Ca.yJ)((0, va.PnB)(e));
							const t = yield Na.tI.get(
								`/userstats-service/statistics/monthly/${e}?ByParentType=true`
							);
							yield (0, Ca.yJ)((0, va.Xzh)(e, t.data));
						} catch (t) {}
					}),
					(0, Ca.jP)(
						ee.GLJ,
						function* ({
							period: e,
							displayName: t,
							startDate: i,
							endDate: n,
							lifetimeSteps: a,
						}) {
							try {
								let s, r;
								'daily' !== e || a
									? 'daily' === e && a
										? (yield (0, Ca.yJ)((0, va.jkl)(ee.H8w, t)),
											(s = 'fromDate'),
											(r = 'untilDate'))
										: (yield (0, Ca.yJ)((0, va.jkl)(ee.hlJ, t)),
											(s = 'fromMonthStartDate'),
											(r = 'untilMonthStartDate'))
									: (yield (0, Ca.yJ)((0, va.jkl)(ee.H8s, t)),
										(s = 'fromDate'),
										(r = 'untilDate'));
								const o = `/userstats-service/wellness/${e}/${t}?${s}=${i}&${r}=${n}&grpParentActType=false`,
									l = yield Na.tI.get(o);
								'daily' !== e || a
									? 'daily' === e && a
										? yield (0, Ca.yJ)((0, va.zkW)(ee.dHr, t, l.data))
										: yield (0, Ca.yJ)((0, va.zkW)(ee.fM2, t, l.data))
									: yield (0, Ca.yJ)((0, va.zkW)(ee.Fhd, t, l.data));
							} catch (s) {}
						}
					),
					(0, Ca.jP)(ee.Jmn, function* ({ displayName: e }) {
						try {
							yield (0, Ca.yJ)((0, va.v8r)(e));
							const t = yield Na.tI.get(
								`/userstats-service/statistics/previousDays/${e}`
							);
							yield (0, Ca.yJ)((0, va.VnE)(e, t.data));
						} catch (t) {}
					}),
				];
				var Ts = i(462205);
				const Cs = [
					(0, Ca.jP)(Ts.Pd, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Ts.Eq });
							const { startDate: t, endDate: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`/usersummary-service/stats/averages/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: Ts.pO, userSummaryAverages: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Ts.KJ, userSummaryAverages: null });
						}
					}),
					(0, Ca.jP)(ee.ePi, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.DIR });
							const { displayName: t, startDate: i, endDate: n } = e,
								a = yield (0, Ca.T1)(
									Na.tI.get,
									`/usersummary-service/stats/monthly/${t}?startDate=${i}&endDate=${n}`
								);
							yield (0, Ca.yJ)({ type: ee.ebH, data: a.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.P2N, data: null });
						}
					}),
					(0, Ca.jP)(ee.QYo, function* ({ userId: e, date: t }) {
						try {
							yield (0, Ca.yJ)((0, va.x6s)(e, t));
							const i = yield Na.tI.get(
								`/usersummary-service/validate/summary/${e}/${t}`
							);
							yield (0, Ca.yJ)((0, va.vLN)(e, i.data));
						} catch (i) {}
					}),
				];
				const Ss = [
					(0, Ca.jP)(ee.Usb, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.fU2 });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/partner-service/strava/user'
							);
							yield (0, Ca.yJ)({ type: ee.Snr, stravaAccessInfo: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.dxq, stravaAccessInfo: {} });
						}
					}),
					(0, Ca.jP)(ee.LVN, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.YK7 });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/partner-service/partner/consumer/STRAVA'
							);
							yield (0, Ca.yJ)({ type: ee.zZW, stravaConsumerData: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.C92, stravaConsumerData: {} });
						}
					}),
					(0, Ca.jP)(ee.zbv, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.GVD });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/partner-service/strava/device/status'
							);
							yield (0, Ca.yJ)({ type: ee.No2, stravaDeviceStatus: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.IK7, stravaDeviceStatus: {} });
						}
					}),
					(0, Ca.jP)(ee.pU8, function* (e = {}) {
						const { payload: t, callback: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.uKb });
							const e = yield (0, Ca.T1)(
								Na.tI.post,
								'/partner-service/strava/user',
								t
							);
							yield (0, Ca.T1)(fa.G, i, e),
								yield (0, Ca.yJ)({ type: ee.tER, stravaAccessInfo: t });
						} catch (n) {
							yield (0, Ca.T1)(fa.j, i, n), yield (0, Ca.yJ)({ type: ee.cks });
						}
					}),
				];
				const Is = [
					(0, Ca.jP)(ee.u12, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.bim });
							const e = yield (0, Ca.T1)(
								Na.eE.get,
								'/gcs-insights/api/feature/history'
							);
							yield (0, Ca.yJ)({ type: ee.Ohs, data: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.j6K, data: [] });
						}
					}),
					(0, Ca.jP)(ee.f$O, function* (e) {
						const { featureId: t, createdDateUTC: i, lang: n } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.uHc, createdDateUTC: i, data: {} });
							const e = yield (0, Ca.T1)(
								Na.eE.get,
								`/gcs-insights/api/feature/details/?featureId=${t}&date=${i}&lang=${n}`,
								{ headers: { CHART_VER: 4 } }
							);
							yield (0, Ca.yJ)({
								type: ee.fre,
								createdDateUTC: i,
								data: e.data,
							});
						} catch (a) {
							yield (0, Ca.yJ)({ type: ee.IK_, createdDateUTC: i, data: {} });
						}
					}),
					(0, Ca.jP)(ee.kEh, function* (e) {
						const {
							newStatus: t,
							createdDateUTC: i,
							featureId: n,
							flagId: a,
						} = e;
						try {
							yield (0, Ca.yJ)({ type: ee.VQP, createdDateUTC: i, flagId: a }),
								yield (0, Ca.T1)(
									Na.eE.post,
									`/gcs-insights/api/feature/status/${t}`,
									{ date: i, featureId: n }
								),
								yield (0, Ca.yJ)({
									type: ee.ks0,
									createdDateUTC: i,
									flagId: a,
								});
						} catch (s) {
							yield (0, Ca.yJ)({ type: ee.Z1_, createdDateUTC: i, flagId: a });
						}
					}),
				];
				const vs = [
					(0, Ca.jP)(ee.Jxe, function* (e) {
						const { displayName: t } = e;
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/usersummary-service/stats/connectLifetimeTotals/${t}`
							);
							yield (0, Ca.yJ)({
								type: ee.bS4,
								stepsLifetimeTotals: e.data,
								displayName: t,
							});
						} catch (i) {
							yield (0, Ca.yJ)({
								type: ee.ioR,
								stepsLifetimeTotals: {},
								displayName: t,
							});
						}
					}),
				];
				var fs = i(133499),
					Ds = i(109241),
					Ns = i(850564),
					Rs = i(58195);
				const bs = [
					(0, Ca.jP)(ee.zVl, function* (e) {
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/course-service/course/favorites'
							);
							yield (0, Ca.yJ)({ type: ee.RA2, courses: e.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.yzx, courses: [] });
						}
					}),
					(0, Ca.jP)(ee.YR4, function* (e) {
						try {
							let t = e.courseId;
							yield (0, Ca.T1)(Na.tI.post, '/course-service/course/favorites', {
								courseId: t,
							}),
								yield (0, Ca.yJ)({ type: ee.sJD, courseId: t });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.Fw9 });
						}
					}),
					(0, Ca.jP)(ee.zNS, function* (e) {
						try {
							let t = e.courseId;
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/course-service/course/favorites/course/${t}`
							),
								yield (0, Ca.yJ)({ type: ee.dE9, courseId: t });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.GLC });
						}
					}),
					(0, Ca.jP)(ee.Z9t, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.Jx$ });
							const t = {};
							(0, ps.B)() &&
								(t.targetCoordinateSystem = Ns.A.CoordinateSystem.BD09);
							const i = yield (0, Ca.T1)(
								Na.tI.get,
								`/course-service/course/${e.courseId}`,
								{ params: t }
							);
							yield (0, Ca.yJ)({ type: ee.f43, course: i.data }),
								e.shouldFetchCourseSegments &&
									i.data &&
									i.data.courseId &&
									(yield (0, Ca.yJ)((0, va.AQH)(i.data.courseId))),
								(0, ps.B)() &&
									i.data &&
									Array.isArray(i.data.geoPoints) &&
									(yield (0, Ca.yJ)(
										(0, va.Ftx)(
											i.data.geoPoints.map((e) => [
												e.latitude,
												e.longitude,
												null,
											])
										)
									));
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.S28, course: {} });
						}
					}),
					(0, Ca.jP)(ee.FUg, function* (e) {
						try {
							const t = {};
							(0, ps.B)() &&
								(t.targetCoordinateSystem = Ns.A.CoordinateSystem.BD09);
							const i = yield (0, Ca.T1)(
								Na.tI.get,
								`/course-service/course/${e.courseId}/lines`,
								{ params: t }
							);
							yield (0, Ca.yJ)({ type: ee.h4F, courseLines: i.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.y6o, courseLines: [] });
						}
					}),
					(0, Ca.jP)(ee.x0h, function* (e) {
						try {
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/course-service/course/${e.courseId}`
							),
								yield (0, Ca.yJ)({ type: ee.mhG, courseId: e.courseId });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.ZpI, course: {} });
						}
					}),
					(0, Ca.jP)(ee.Xui, function* ({ displayName: e }) {
						try {
							const t = yield Na.tI.get(`/course-service/course/owner/${e}`);
							yield (0, Ca.yJ)((0, va.G67)(t.data));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.Bpi, function* ({ displayName: e }) {
						try {
							let e = yield Na.tI.get('/web-gateway/course/owner/');
							yield (0, Ca.yJ)((0, va.eiw)(e.data));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.zSV, function* ({ displayName: e }) {
						try {
							let t = yield Na.tI.get(
								'/course-service/course/to/' +
									Ns.A.CoordinateSystem.BD09 +
									'/CN/owner/' +
									e
							);
							yield (0, Ca.yJ)((0, va.wGY)({ coursesForUser: t.data }));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.hjG, function* ({ groupId: e }) {
						try {
							const t = yield Na.tI.get(`/course-service/course/group/${e}`);
							yield (0, Ca.yJ)((0, va.xY3)(t.data));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.Kp_, function* () {
						try {
							const e = yield Na.tI.get(
								'/course-service/segment/classifications'
							);
							yield (0, Ca.yJ)((0, va.fA1)(e.data));
						} catch (e) {
							yield (0, Ca.yJ)((0, va.fA1)(null));
						}
					}),
					(0, Ca.jP)(ee.S4v, function* () {
						try {
							const e = yield Na.tI.get('/course-service/segment/surfaceTypes');
							yield (0, Ca.yJ)((0, va.fzO)(e.data));
						} catch (e) {
							yield (0, Ca.yJ)((0, va.fzO)(null));
						}
					}),
					(0, Ca.jP)(ee.uk7, function* ({ payload: e }) {
						try {
							let t = yield Na.tI.post('/course-service/course', e);
							yield (0, Ca.yJ)({ type: ee.knh, newCourseData: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.HVJ });
						}
					}),
					(0, Ca.jP)(
						ee.z7x,
						function* ({
							payload: e,
							powerGuideIds: t = [],
							paceProIds: i = [],
						}) {
							try {
								let n = yield Na.tI.put(
									`/course-service/course/${e.courseId}`,
									e
								);
								if (
									(yield (0, Ca.yJ)({ type: ee.ZYz, newCourseData: n.data }),
									t.length)
								) {
									const e = t.map((e) => (0, Ca.yJ)((0, Rs.qn)(e)));
									yield (0, Ca.Q7)(e);
								}
								if (i.length) {
									const e = i.map((e) => (0, Ca.yJ)((0, jt.ay)(e)));
									yield (0, Ca.Q7)(e);
								}
							} catch (n) {
								yield (0, Ca.yJ)({ type: ee.s3C });
							}
						}
					),
					(0, Ca.jP)(ee.rGC, function* ({ payload: e, courseId: t }) {
						try {
							yield Na.tI.put(`/course-service/course/${t}/privacy`, e),
								yield (0, Ca.yJ)({ type: ee.Vjl, courseId: t, privacyRule: e });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.EG });
						}
					}),
					(0, Ca.jP)(ee.KTH, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.XzT });
							const t = new Ja.A().convertObjectToQueryString(e.params),
								i = yield Na.tI.get(
									`/course-service/course/roundTripRoutes${t}`
								);
							yield (0, Ca.yJ)({ type: ee.PAq, geoPoints: i.data });
							let n = (0, Ds.p_)(i && i.data);
							n && n.length && (yield (0, Ca.yJ)((0, va.Ftx)(n)));
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.uHn });
						}
					}),
					(0, Ca.jP)(ee.EE0, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.lOB });
							const t = new Ja.A().convertObjectToQueryString(e.params),
								i = yield Na.tI.get(`/course-service/course/popularRoutes${t}`);
							yield (0, Ca.yJ)({
								type: ee.S56,
								addToExistingPoints: !0,
								geoPoints: i.data,
							});
							let n = (0, Ds.p_)(i && i.data);
							n && n.length && (yield (0, Ca.yJ)((0, va.Ftx)(n)));
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.tPY });
						}
					}),
					(0, Ca.jP)(ee.w41, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.Bkw });
							let t = e.coursePointsArray,
								i = '/course-service/course/elevation';
							fs.A.userInChina() &&
								(i = `/course-service/course/elevation/from/${Ns.A.CoordinateSystem.BD09}/CN`);
							const n = yield Na.tI.post(i, t);
							yield (0, Ca.yJ)({
								type: ee.mdq,
								geoPointsWithElevation: n.data,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.xnI });
						}
					}),
					(0, Ca.jP)(ee.JEj, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.ONS });
							const e = yield Na.tI.get(
								'/web-data/course-points/coursePointsData.json'
							);
							yield (0, Ca.yJ)({ type: ee.B00, availableCoursePoints: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.MNn });
						}
					}),
					(0, Ca.jP)(ee.Fic, function* ({ payload: e }) {
						try {
							let t = yield Na.tI.post(
								'/course-service/course/routeSegments',
								e
							);
							yield (0, Ca.yJ)({ type: ee.lyq, courseRouteSegment: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.sPE });
						}
					}),
					(0, Ca.jP)(ee.Lvr, function* (e) {
						try {
							let t;
							const i = new Ja.A();
							let n = {
								north: e.bounds.north,
								south: e.bounds.south,
								east: e.bounds.east,
								west: e.bounds.west,
								size: e.size,
							};
							e.fromCourseIndex &&
								parseInt(e.fromCourseIndex) &&
								(n.start = e.fromCourseIndex),
								e.sort && (n.sort = e.sort),
								e.filter &&
									'object' === typeof e.filter &&
									(e.filter.minDistanceInMeters &&
										(n.minDistance = 100 * e.filter.minDistanceInMeters),
									e.filter.maxDistanceInMeters &&
										(n.maxDistance = 100 * e.filter.maxDistanceInMeters),
									e.filter.minAscentInMeters &&
										(n.minAscent = 100 * e.filter.minAscentInMeters),
									e.filter.maxAscentInMeters &&
										(n.maxAscent = 100 * e.filter.maxAscentInMeters),
									e.filter.courseName &&
										e.filter.courseName.length &&
										(n.courseNameFilter = e.filter.courseName));
							let a = i.convertObjectToQueryString(n);
							if (
								e.filter &&
								'object' === typeof e.filter &&
								e.filter.courseTypes &&
								e.filter.courseTypes.length
							) {
								const t = e.filter.courseTypes.map((e) => e.toUpperCase());
								let n = i.convertArrayToQueryString('courseType', t);
								a.length ? (a += `&${n}`) : (a += `?${n}`);
							}
							fs.A.userInChina()
								? ((a +=
										'&sourceCoordinateSystem=' +
										Ns.A.CoordinateSystem.BD09 +
										'&targetCoordinateSystem=' +
										Ns.A.CoordinateSystem.BD09),
									(t = yield (0, Ca.T1)(
										Na.tI.get,
										`/course-service/course/search${a}`
									)))
								: (t = yield (0, Ca.T1)(
										Na.tI.get,
										`/course-service/course/search${a}`
									)),
								yield (0, Ca.yJ)({
									type: ee.Eig,
									fromCourseIndex: e.fromCourseIndex,
									nearbyCourses: t.data,
								});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.XgF, nearbyCourses: [] });
						}
					}),
					(0, Ca.jP)(ee.KuJ, function* (e) {
						try {
							const t = yield Na.tI.get(
								`/consumer-service/consumer/thirdparty/info/${e.consumer}`
							);
							yield (0, Ca.yJ)({
								type: ee.v1v,
								consumer: e.consumer,
								courseId: e.courseId,
								consumerInfo: t.data,
							});
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.$kO, function* (e) {
						try {
							if (e.coursesList && e.coursesList.length) {
								const t = new Ja.A().convertArrayToQueryString(
										'courseId',
										e.coursesList
									),
									i = (0, Ds.AL)(null);
								yield (0, Ca.yJ)({ type: ee.YDX, courseIds: e.coursesList });
								const n = yield Na.tI.get(
									`/course-service/course/minimaps?coordinateSystem=${i}&${t}`
								);
								yield (0, Ca.yJ)({
									type: ee.TC0,
									coursesListGeoPoints: n.data.miniMaps,
								});
							}
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.qLZ });
						}
					}),
					(0, Ca.jP)(ee.UIC, function* (e) {
						try {
							if (e.courseId) {
								yield (0, Ca.yJ)({ type: ee.F_I });
								const t = {};
								(0, ps.B)() &&
									(t.coordinateSystem = Ns.A.CoordinateSystem.BD09);
								const i = yield Na.tI.get(
									`/course-service/course/${e.courseId}/sanitized`,
									{ params: t }
								);
								yield (0, Ca.yJ)({
									type: ee.a$d,
									duplicatedCourseData: i.data,
								});
							}
						} catch (t) {
							yield (0, Ca.yJ)((0, va.yPt)(t.response.status)),
								yield (0, Ca.yJ)({ type: ee.$IY });
						}
					}),
					(0, Ca.jP)(ee.a5T, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.lOB });
							const t = e.climb.map((e) => [[e.latitude, e.longitude]]);
							let i;
							if (e.addClimbOnly)
								yield (0, Ca.yJ)({
									type: ee.IIK,
									addToExistingPoints: !0,
									geoPoints: t,
									climb: e.climb,
									addClimbOnly: e.addClimbOnly,
								}),
									(i = [...t]);
							else {
								const n = new Ja.A().convertObjectToQueryString(e.params),
									a = yield Na.tI.get(
										`/course-service/course/popularRoutes${n}`
									);
								yield (0, Ca.yJ)({
									type: ee.IIK,
									addToExistingPoints: !0,
									geoPoints: a.data,
									climb: e.climb,
								}),
									(i = [...a.data, ...t]);
							}
							let n = (0, Ds.p_)(i);
							n && n.length && (yield (0, Ca.yJ)((0, va.Ftx)(n)));
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.$GL });
						}
					}),
					(0, Ca.p8)(ee.TTW, function* (e) {
						const { courseId: t } = e;
						try {
							yield (0, Ca.T1)(
								Na.tI.put,
								`/course-service/course/${t}/coordinateSystem/translate`,
								{ courseId: t }
							),
								yield (0, Ca.yJ)({ type: ee.kUB }),
								yield (0, Ca.yJ)({ type: ee.Z9t, courseId: t });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.kUB, error: !0 });
						}
					}),
				];
				var Ls = i(787006),
					Ps = i(998573);
				const Os = [
					(0, Ca.jP)(Ps.x, function* () {
						let e = '/myfitnesspal-service/userAuthorization';
						(0, Ls.aO)() && (e = '/myfitnesspal-service/accountInformation');
						try {
							const t = yield (0, Ca.T1)(Na.tI.get, e);
							yield (0, Ca.yJ)({ type: Ps.di, mfpLinkStatus: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Ps.aJ, mfpLinkStatus: {} });
						}
					}),
					(0, Ca.jP)(ee.OVC, function* (e) {
						try {
							const t = yield (0, Ca.T1)(
								Na.tI.post,
								'/myfitnesspal-service/userAuthorization/',
								{ authorizationCode: e.authorizationCode }
							);
							yield (0, Ca.yJ)({ type: ee.eLm, data: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.PI0, data: {} });
						}
					}),
					(0, Ca.jP)(ee.nB, function* () {
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/partner-service/partner/consumer/MY_FITNESS_PAL'
							);
							yield (0, Ca.yJ)({ type: ee.pk4, data: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.gwB, data: {} });
						}
					}),
					(0, Ca.jP)(ee.o6n, function* () {
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/myfitnesspal-service/fetchUserInfo'
							);
							yield (0, Ca.yJ)({ type: ee.Kb5, data: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.lJZ, data: {} });
						}
					}),
					(0, Ca.jP)(ee.utT, function* (e) {
						try {
							const t = yield (0, Ca.T1)(
								Na.tI.delete,
								'/myfitnesspal-service/userAuthorization',
								e.mfpAuthorization
							);
							yield (0, Ca.yJ)({ type: ee.pk4, data: t.data }),
								yield (0, Ca.yJ)({ type: ee.pk4, data: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.gwB, data: {} });
						}
					}),
					(0, Ca.jP)(ee.sff, function* () {
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/myfitnesspal-service/lastSync'
							);
							yield (0, Ca.yJ)({ type: ee.Scr, data: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.PPd, data: {} });
						}
					}),
					(0, Ca.jP)(ee.xHB, function* (e) {
						try {
							const t = yield (0, Ca.T1)(
								Na.tI.post,
								`/myfitnesspal-service/syncData/${e.calendarDate}`,
								{ calendarDate: e.calendarDate }
							);
							yield (0, Ca.yJ)({ type: ee.rCd, data: t.data }),
								yield (0, Ca.yJ)({
									type: ee.rAn,
									displayName: e.displayName,
									calendarDate: e.calendarDate,
									meta: { cacheTime: null },
								});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.oTr, data: {} }),
								yield (0, Ca.yJ)({
									type: ee.rnI,
									state: ai.aL.UNABLE_TO_CONNECT,
								});
						}
					}),
				];
				var ws = i(276812),
					Fs = i(11481);
				function ks(e) {
					let t = JSON.parse(JSON.stringify(e));
					return (
						t.paceBandSplits.forEach((e, i) => {
							let n = Number(e.cumulativeTimeFromStart).toFixed(3);
							t.paceBandSplits[i].cumulativeTimeFromStart = parseFloat(n);
						}),
						t
					);
				}
				const Us = [
					(0, Ca.jP)(Fs.YR, function* (e) {
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/course-service/pacebands'
							);
							yield (0, Ca.yJ)({ type: Fs.YZ, paceProBands: e.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Fs.LD, paceProBands: [] });
						}
					}),
					(0, Ca.jP)(Fs.DK, function* (e) {
						try {
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/course-service/pacebands/${e.paceBandId}`
							);
							yield (0, Ca.yJ)({ type: Fs.LY, paceProBand: t.data });
							const i = t.data.paceBandSummary.totalDistance;
							let n = {
								course: t.data.paceBandSummary.courseId,
								customDistance: t.data.paceBandSummary.totalDistance,
								goalTime: t.data.paceBandSummary.goalTime,
								splits: t.data.paceBandSummary.splitType,
								pacingStrategy: t.data.paceBandSummary.pacingStrategy,
								hillEffort: t.data.paceBandSummary.uphillEffort,
								elevationSegmentMinLength:
									t.data.paceBandSummary.elevationSegmentMinLength,
								id: t.data.paceBandSummary.paceBandPk,
								name: t.data.paceBandSummary.name,
								distance: (0, ws.k1)(i, t.data.paceBandSummary.courseId),
								manualPaceEdit: t.data.paceBandSummary.manualPaceEdit,
								saveState: Ht.z_.SAVED,
								paceIntervals: t.data.paceBandSplits,
								customDistanceUnit: t.data.paceBandSummary.distanceUnit,
							};
							if (t.data.paceBandSummary.courseId) {
								let e = '';
								(0, ps.B)() &&
									(e = (0, Sa.zJ)({ targetCoordinateSystem: 'BD09' }));
								const i = yield (0, Ca.T1)(
									Na.tI.get,
									`/course-service/course/${t.data.paceBandSummary.courseId}${e}`
								);
								yield (0, Ca.yJ)({ type: ee.f43, course: i.data }),
									(n.customDistance = i.data.distanceMeter);
							}
							yield (0, Ca.yJ)({ type: ee.l3Z, paceProCreate: n });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Fs.SC, paceProBand: {} });
						}
					}),
					(0, Ca.jP)(Fs.MD, function* (e) {
						try {
							let t = ks(e.paceProBand);
							if (e.courseNotOwned && !e.hasShareableEvent) {
								const i = yield (0, Ca.T1)(
									Na.tI.get,
									`/course-service/course/copyExistingCourse/${e.paceProBand.paceBandSummary.courseId}`
								);
								t.paceBandSummary.courseId = i.data.courseId;
							}
							const i = yield (0, Ca.T1)(
								Na.tI.post,
								'/course-service/pacebands',
								t
							);
							yield (0, Ca.yJ)({ type: Fs._G, paceProBand: i.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Fs.dG });
						}
					}),
					(0, Ca.jP)(Fs.Gq, function* (e) {
						try {
							let t = ks(e.paceProBand);
							const i = yield (0, Ca.T1)(
								Na.tI.put,
								`/course-service/pacebands/${e.paceBandId}`,
								t
							);
							yield (0, Ca.yJ)({ type: Fs.g7, paceProBand: i.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Fs.r9 });
						}
					}),
					(0, Ca.jP)(Fs.Xo, function* (e) {
						try {
							const t = (0, Sa.zJ)({ courseId: e.courseId }),
								i = yield (0, Ca.T1)(
									Na.tI.get,
									`/course-service/pacebands/summaries${t}`
								);
							yield (0, Ca.yJ)({ type: Fs.ri, paceProBandSummaries: i.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Fs.Ej, paceProBandSummaries: [] });
						}
					}),
					(0, Ca.jP)(Fs.FM, function* (e) {
						const { deviceId: t, paceBandId: i } = e.payload;
						try {
							const n = yield (0, Ca.T1)(
								Na.tI.post,
								`/course-service/pacebands/${i}/device/${t}`,
								{ ...e.payload }
							);
							yield (0, Ca.yJ)({ type: Fs.HP, response: n });
						} catch (n) {
							yield (0, Ca.yJ)({ type: Fs.cd });
						}
					}),
					(0, Ca.jP)(Fs.jK, function* (e) {
						const { paceBandId: t } = e;
						try {
							204 ===
								(yield (0, Ca.T1)(
									Na.tI.delete,
									`/course-service/pacebands/${t}`
								)).status && (yield (0, Ca.yJ)({ type: Fs.Lq, paceBandId: t }));
						} catch (i) {
							yield (0, Ca.yJ)({ type: Fs.oR, paceBandId: t });
						}
					}),
					(0, Ca.jP)(Fs.Jo, function* (e) {
						try {
							let t = '';
							(0, ps.B)() &&
								(t = (0, Sa.zJ)({ targetCoordinateSystem: 'BD09' }));
							const i = yield (0, Ca.T1)(
								Na.tI.get,
								`/course-service/course/${e.courseId}${t}`
							);
							yield (0, Ca.yJ)({ type: ee.f43, course: i.data }),
								yield (0, Ca.yJ)({
									type: ee.l3Z,
									paceProCreate: { customDistance: i.data.distanceMeter },
								});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.S28, course: {} });
						}
					}),
				];
				var Ms = i(109285),
					Gs = i.n(Ms),
					xs = i(993980);
				function* Bs(e) {
					try {
						yield (0, Ca.yJ)({ type: ee.Nuf });
						const { date: t } = e.payload,
							i = new (Gs())().format(xs.DX),
							n = yield (0, Ca.T1)(
								Na.tI.get,
								`/periodichealth-service/menstrualcycle/dayview/${t}?todayDate=${i}`
							);
						yield (0, Ca.yJ)({
							type: ee.svi,
							menstrualCycleDayView: n.data,
							menstrualCycleDayViewStatus: n.status,
						}),
							yield (0, Ca.yJ)({ type: ee.SvL });
					} catch (t) {
						yield (0, Ca.yJ)({ type: ee.vRY, menstrualCycleDayView: null }),
							yield (0, Ca.yJ)({ type: ee.J3N });
					}
				}
				const Hs = [
					(0, Ca.jP)(ee.MlU, Bs),
					(0, Ca.jP)(ee.WLw, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.qQD });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/web-data/menstrual-cycle-tracking/animated-icons.json'
							);
							yield (0, Ca.yJ)({ type: ee.Frk, response: e });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.KxQ });
						}
					}),
					(0, Ca.jP)(ee.qA6, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.DYz });
							const t = !!e.payload.ovulationDayChanged;
							delete e.payload.ovulationDayChanged;
							const i = yield (0, Ca.T1)(
								Na.tI.post,
								`/periodichealth-service/menstrualcycle/dailylog/${e.payload.calendarDate}`,
								{ ...e.payload }
							);
							yield (0, Ca.yJ)({ type: ee.SaA, response: i }),
								t &&
									(yield (0, Ca.T1)(Bs, {
										payload: { date: e.payload.calendarDate },
									}));
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.hKg });
						}
					}),
					(0, Ca.jP)(ee.Yvr, function* (e) {
						const { date: t } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.Tpf });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/periodichealth-service/menstrualcycle/summary/${t}`
							);
							yield (0, Ca.yJ)({
								type: ee.s5n,
								mctSummary: e.data,
								mctStatus: e.status,
							});
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.DBO, mctSummary: {} });
						}
					}),
					(0, Ca.jP)(ee.ahI, function* (e) {
						const {
							startDate: t,
							endDate: i,
							isForDeleteAllDatesCheck: n = !1,
							callback: a = {},
						} = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.tPc });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/periodichealth-service/menstrualcycle/calendar/${t}/${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.QG7,
								menstrualCycleTrackingCalendar: e.data,
								startDate: t,
								endDate: i,
								isForDeleteAllDatesCheck: n,
							}),
								yield (0, Ca.T1)(fa.G, a, e);
						} catch (s) {
							yield (0, Ca.yJ)({
								type: ee.Tii,
								menstrualCycleTrackingCalendar: {},
							}),
								yield (0, Ca.T1)(fa.j, a, s);
						}
					}),
					(0, Ca.jP)(ee.v_S, function* (e) {
						const {
								numberOfCycles: t,
								date: i,
								next: n = !1,
								reportType: a = 'CYCLE',
							} = e.payload,
							s = new (Gs())().format(xs.DX);
						try {
							yield (0, Ca.yJ)({ type: ee.a_z });
							const r = yield (0, Ca.T1)(
								Na.tI.get,
								`/periodichealth-service/reports/menstrualcycle/${t}/${i}`,
								{ params: { next: n, reportType: a, todayCalendarDate: s } }
							);
							yield (0, Ca.yJ)({
								type: ee.bAb,
								response: r,
								payloadData: e.payload,
							});
						} catch (r) {
							yield (0, Ca.yJ)({ type: ee.Uh2 });
						}
					}),
					(0, Ca.jP)(ee.Z76, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.ETz });
							const t = yield (0, Ca.T1)(
								Na.tI.post,
								'/periodichealth-service/menstrualcycle/calendarupdates',
								{ ...e.payload }
							);
							yield (0, Ca.yJ)({ type: ee.Dwq, response: t });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.m0_ });
						}
					}),
					(0, Ca.jP)(ee.zyI, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.ETz }),
								yield (0, Ca.yJ)({ type: ee.PzS });
							const t = yield (0, Ca.T1)(
								Na.tI.post,
								'/periodichealth-service/menstrualcycle/calendarupdates',
								{ ...e.payload }
							);
							yield (0, Ca.Q7)([
								(0, Ca.yJ)({
									type: ee.MlU,
									payload: { date: e.fetchDayViewDate },
								}),
								(0, Ca.yJ)({ type: ee.US8 }),
								(0, Ca.yJ)({
									type: ee.ahI,
									payload: {
										startDate: Gs()(e.payload.todayCalendarDate)
											.startOf('month')
											.format(xs.DX),
										endDate: Gs()(e.payload.todayCalendarDate)
											.endOf('month')
											.format(xs.DX),
									},
								}),
								(0, Ca.yJ)({
									type: ee.ahI,
									payload: {
										startDate: Gs()(e.payload.todayCalendarDate)
											.add(1, 'M')
											.startOf('month')
											.format(xs.DX),
										endDate: Gs()(e.payload.todayCalendarDate)
											.add(1, 'M')
											.endOf('month')
											.format(xs.DX),
									},
								}),
							]),
								yield (0, Ca.Q7)([
									(0, Ca.yJ)({
										type: ee.ahI,
										payload: {
											startDate: Gs()()
												.add(-2, 'month')
												.startOf('month')
												.format(xs.DX),
											endDate: Gs()().endOf('month').format(xs.DX),
											isForDeleteAllDatesCheck: !0,
										},
									}),
									(0, Ca.yJ)({
										type: ee.ahI,
										payload: {
											startDate: Gs()()
												.add(-5, 'month')
												.startOf('month')
												.format(xs.DX),
											endDate: Gs()()
												.add(-3, 'month')
												.endOf('month')
												.format(xs.DX),
											isForDeleteAllDatesCheck: !0,
										},
									}),
								]),
								yield (0, Ca.yJ)({ type: ee.Dwq, response: t });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.m0_ });
						}
					}),
					(0, Ca.jP)(ee.Q3W, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee._A0 });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/web-data/menstrual-cycle-tracking/educational-content.json',
								{ baseURL: '/' }
							);
							yield (0, Ca.yJ)({ type: ee.l9v, response: e });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.EwQ });
						}
					}),
					(0, Ca.jP)(ee.QtE, function* (e) {
						const t = new (Gs())().format(xs.DX),
							{ payload: i } = e;
						try {
							if ((yield (0, Ca.yJ)({ type: ee.fgM }), i.userSettings))
								try {
									yield (0, Ca.yJ)({ type: ee.bnb }),
										yield (0, Ca.T1)(
											Na.tI.put,
											'userprofile-service/userprofile/user-settings/',
											{
												id: i.userSettings.id,
												userMenstrualCycleSettings:
													i.userSettings.userMenstrualCycleSettings,
											}
										),
										yield (0, Ca.yJ)({ type: ee.UYL, userSettings: e.payload });
								} catch (n) {
									yield (0, Ca.yJ)({ type: ee.bis, userSettings: null });
								}
							i.initCycleSetup &&
								(yield (0, Ca.T1)(
									Na.tI.post,
									'/periodichealth-service/menstrualcycle/initCycleSetup',
									{ ...e.payload.initCycleSetup }
								)),
								yield (0, Ca.yJ)({ type: ee.JsE }),
								yield (0, Ca.yJ)({ type: ee.MlU, payload: { date: t } }),
								yield (0, Ca.yJ)({ type: ee.yEH }),
								yield (0, Ca.yJ)({ type: ee.yUV }),
								yield (0, Ca.yJ)({ type: ee.sOV }),
								yield (0, Ca.yJ)({ type: ee.an4 });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.n9N });
						}
					}),
					(0, Ca.jP)(ee.Dvb, function* (e) {
						const { payload: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.YQC });
							const e = yield (0, Ca.T1)(
								Na.tI.post,
								`/periodichealth-service/menstrualcycle/${t.periodStartDate}`,
								{ ...t }
							);
							yield (0, Ca.yJ)({ type: ee.T4V, response: e });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.UKW });
						}
					}),
				];
				const Vs = [
					(0, Ca.jP)(ee.ykr, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.iOn });
							const e = yield (0, Ca.T1)(
								Ma().get,
								'/web-data/self-evaluation/self-evaluation-icons.json',
								{ baseURL: '/' }
							);
							yield (0, Ca.yJ)({ type: ee.ptg, response: e });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.c0n });
						}
					}),
				];
				const Ws = [
					(0, Ca.jP)(ee.PXI, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.ytU });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/workout-service/workout/types/sport'
							);
							yield (0, Ca.yJ)({ type: ee.$bN, data: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.CLe });
						}
					}),
					(0, Ca.jP)(ee.$rI, function* () {
						try {
							var e, t;
							yield (0, Ca.yJ)({ type: ee.oOV });
							const i = yield (0, Ca.T1)(
								Na.tI.get,
								'/workout-service/workout/types'
							);
							null !== i &&
								void 0 !== i &&
								null !== (e = i.data) &&
								void 0 !== e &&
								e.workoutEquipmentTypes &&
								Array.isArray(
									null === i ||
										void 0 === i ||
										null === (t = i.data) ||
										void 0 === t
										? void 0
										: t.workoutEquipmentTypes
								) &&
								(i.data.workoutEquipmentTypes = [
									...i.data.workoutEquipmentTypes,
									{
										equipmentTypeId: null,
										equipmentTypeKey: null,
										displayOrder: null,
									},
								]),
								yield (0, Ca.yJ)({ type: ee.n7Z, data: i.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.SxR });
						}
					}),
				];
				const Js = [
					(0, Ca.jP)(ee.au5, function* (e) {
						const { capableName: t } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.T7H });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/userprofile-service/userprofile/capableEnable/${t}`
							);
							yield (0, Ca.yJ)({
								type: ee.Qrg,
								userCapable: e.data,
								capableName: t,
							});
						} catch (i) {
							yield (0, Ca.yJ)({
								type: ee.LZp,
								userCapable: {},
								capableName: t,
							});
						}
					}),
				];
				var Ys = i(233544),
					$s = i(748630),
					js = i(115883);
				const Ks = [
					(0, Ca.jP)(ee.jTh, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.Mcb });
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/weight-service/weight/daterangesnapshot?startDate=${e.startDate}&endDate=${e.endDate}`
							);
							yield (0, Ca.yJ)({ type: ee.$fs, weightList: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.yho, weightList: {} });
						}
					}),
					(0, Ca.jP)($s.ak, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: $s.Lj });
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/weight-service/weight/dayview/${e.date}`
							);
							yield (0, Ca.yJ)({ type: $s.Ih, date: e.date, data: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: $s.XV, data: {} });
						}
					}),
					(0, Ca.jP)($s.xV, function* () {
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/weight-service/weight/first'
							);
							yield (0, Ca.yJ)({ type: $s.Vb, data: e.data });
						} catch (e) {}
					}),
					(0, Ca.jP)($s.uQ, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: $s.to });
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/weight-service/weight/latest?date=${e.date}&ignorePriority=true`
							);
							yield (0, Ca.yJ)({ type: $s.Oq, date: e.date, data: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: $s.l_, data: {} });
						}
					}),
					(0, Ca.jP)($s.VI, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: $s.Ed });
							let t = `/goal-service/goal/user/${e.goalId}`;
							yield (0, Ca.T1)(Na.tI.delete, t);
							yield (0, Ca.yJ)({
								type: Ys.X4,
								trackingPeriodType: js.p8.daily,
								userGoalType: js.dY.weight,
							}),
								yield (0, Ca.yJ)({ type: $s.Rg });
						} catch (t) {
							yield (0, Ca.yJ)({ type: $s.ut });
						}
					}),
					(0, Ca.jP)($s.iQ, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: $s.n2 });
							let t = `/goal-service/goal/user/effective/WEIGHT_GRAMS/${e.payload.startDate}`;
							const i = yield (0, Ca.T1)(Na.tI.put, t, {
								goalValue: e.payload.goalValue,
								goalType: 'WEIGHT_GRAMS',
							});
							yield (0, Ca.yJ)({
								type: Ys.X4,
								trackingPeriodType: e.payload.trackingPeriodType,
								userGoalType: e.payload.userGoalType,
							}),
								yield (0, Ca.yJ)({ type: $s.ey, response: i });
						} catch (t) {
							yield (0, Ca.yJ)({ type: $s.p_, data: {} });
						}
					}),
					(0, Ca.jP)($s.Xk, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: $s.Ce });
							let t = '/weight-service/user-weight';
							const i = yield (0, Ca.T1)(Na.tI.post, t, { ...e.payload });
							e.actionToDispatch &&
								e.actionToDispatch.type &&
								(yield (0, Ca.yJ)(e.actionToDispatch)),
								yield (0, Ca.yJ)({
									type: $s.L_,
									response: i,
									reloadPage: e.reloadPage,
								});
						} catch (t) {
							yield (0, Ca.yJ)({ type: $s.Ow, data: {} });
						}
					}),
					(0, Ca.jP)($s.TI, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: $s.Y7 });
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/weight-service/weight/monthRange/${e.dates.startDate}/${e.dates.endDate}`
							);
							yield (0, Ca.yJ)({
								type: $s.RJ,
								endDate: e.dates.endDate,
								data: t.data,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: $s.Q1, data: {} });
						}
					}),
					(0, Ca.jP)($s.PW, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: $s.Os });
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/weight-service/weight/weeklyRange/${e.dates.startDate}/${e.dates.endDate}`
							);
							yield (0, Ca.yJ)({
								type: $s.NH,
								endDate: e.dates.endDate,
								data: t.data,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: $s.Cc, data: {} });
						}
					}),
					(0, Ca.jP)($s._D, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: $s.pl });
							const t = Sa.zJ({ includeAll: !0 }),
								i = yield (0, Ca.T1)(
									Na.tI.get,
									`/weight-service/weight/range/${e.dates.startDate}/${e.dates.endDate}${t}`
								);
							yield (0, Ca.yJ)({
								type: $s.cy,
								endDate: e.dates.endDate,
								data: i.data,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: $s.v, data: {} });
						}
					}),
					(0, Ca.jP)($s.G0, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: $s.R_, dateRange: e.dateRange });
							const t = Sa.zJ({ includeAll: !0 }),
								i = yield (0, Ca.T1)(
									Na.tI.get,
									`/weight-service/weight/range/${e.dates.startDate}/${e.dates.endDate}${t}`
								);
							yield (0, Ca.yJ)({
								type: $s.sf,
								endDate: e.dates.endDate,
								data: i.data,
								dateRange: e.dateRange,
							});
						} catch (t) {
							yield (0, Ca.yJ)({
								type: $s.ZE,
								data: {},
								dateRange: e.dateRange,
							});
						}
					}),
					(0, Ca.jP)($s.n3, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: $s.PQ });
							let t = `weight-service/weight/${e.date}/byversion/${e.weightId}`;
							const i = yield (0, Ca.T1)(Na.tI.delete, t);
							e.actionToDispatch &&
								e.actionToDispatch.type &&
								(yield (0, Ca.yJ)(e.actionToDispatch)),
								yield (0, Ca.yJ)({
									type: $s.nX,
									weightId: e.weightId,
									response: i,
									reloadPage: e.reloadPage,
								});
						} catch (t) {
							yield (0, Ca.yJ)({ type: $s.gc });
						}
					}),
					(0, Ca.jP)($s.vh, function* (e) {
						const t = e.callback ? e.callback : null;
						try {
							yield (0, Ca.yJ)({ type: $s.nD });
							const i = yield (0, Ca.T1)(
								Na.tI.get,
								`/weight-service/weight/daily/last?startDate=${e.dates.startDate}&endDate=${e.dates.endDate}`
							);
							yield (0, Ca.yJ)({ type: $s.OE, data: i.data }),
								yield (0, Ca.T1)(fa.G, t, i);
						} catch (i) {
							yield (0, Ca.yJ)({ type: $s.t8, data: null });
						}
					}),
					(0, Ca.jP)($s.H$, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: $s.o4 });
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/goal-service/goal/user/effective/weightgoal/${e.dates.startDate}/${e.dates.endDate}`
							);
							yield (0, Ca.yJ)({ type: $s.JA, data: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: $s.Gz, data: null });
						}
					}),
					(0, Ca.jP)(
						ee.xl1,
						function* ({ weight: e, unit: t, date: i, callback: n }) {
							try {
								yield (0, Ca.yJ)((0, va.pT5)());
								const a = yield Na.tI.post('/weight-service/user-weight', {
									date: i,
									dateTimestamp: as.Ay.formatConnectTimestamp(ns.A.parseISO(i)),
									gmtTimestamp: as.Ay.formatConnectTimestampUTC(
										ns.A.parseISO(i)
									),
									unitKey: t,
									value: e,
								});
								yield (0, Ca.T1)(fa.G, n, a);
							} catch (a) {
								yield (0, Ca.T1)(fa.j, n, a);
							}
						}
					),
					(0, Ca.jP)(ee.zbO, function* ({ date: e, callback: t }) {
						try {
							yield (0, Ca.yJ)((0, va.NfD)());
							const i = yield Na.tI.delete(`/biometric-service/biometric/${e}`);
							yield (0, Ca.T1)(fa.G, t, i);
						} catch (i) {
							yield (0, Ca.T1)(fa.j, t, i);
						}
					}),
				];
				const zs = [
					(0, Ca.jP)(ee.Uft, function* (e) {
						const { displayName: t, calendarDate: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.Tnq });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/wellness-service/wellness/daily/spo2acclimation/${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.eu,
								calendarDate: i,
								displayName: t,
								dailyPulseOxData: e.data,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.FQZ,
								calendarDate: i,
								displayName: t,
								dailyPulseOxData: null,
							});
						}
					}),
				];
				const qs = [
					(0, Ca.jP)(ee.Ngh, function* (e) {
						const { displayName: t, calendarDate: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.wSQ });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/wellness-service/wellness/daily/respiration/${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.$Vz,
								calendarDate: i,
								displayName: t,
								dailyRespirationData: e.data,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.sEL,
								calendarDate: i,
								displayName: t,
								dailyRespirationData: null,
							});
						}
					}),
				];
				const Qs = [
					(0, Ca.jP)(Fs.CQ, function* (e) {
						try {
							const e = yield (0, Ca.T1)(
								Ma().get,
								'/web-data/pacepro/algorithm-config.json',
								{ baseURL: '/' }
							);
							yield (0, Ca.yJ)({ type: Fs.i0, config: e.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Fs.DF });
						}
					}),
				];
				function* Xs(e) {
					const { displayName: t } = e;
					try {
						yield (0, Ca.yJ)({ type: ee.kgH });
						const e = yield (0, Ca.T1)(
							Na.tI.get,
							`/personalrecord-service/personalrecord/prs/${t}`
						);
						yield (0, Ca.yJ)({ type: ee.hST, displayName: t, data: e.data });
					} catch (i) {
						yield (0, Ca.yJ)({ type: ee.I_F, displayName: t, data: null });
					}
				}
				function* Zs(e) {
					const { displayName: t } = e;
					try {
						yield (0, Ca.yJ)({ type: ee.G2h });
						const e = yield (0, Ca.T1)(
							Na.tI.get,
							`/personalrecord-service/personalrecordcandidate/${t}`
						);
						yield (0, Ca.yJ)({ type: ee.xrQ, displayName: t, data: e.data });
					} catch (i) {
						yield (0, Ca.yJ)({ type: ee.cbv, displayName: t, data: null });
					}
				}
				function* er(e) {
					const { displayName: t } = e;
					try {
						yield (0, Ca.yJ)({ type: ee.zwW });
						const e = yield (0, Ca.T1)(
							Na.tI.get,
							`/personalrecord-service/personalrecordtype/prtypes/${t}`
						);
						yield (0, Ca.yJ)({ type: ee.y5R, displayName: t, data: e.data });
					} catch (i) {
						yield (0, Ca.yJ)({ type: ee.VF_, displayName: t, data: null });
					}
				}
				const tr = [
					(0, Ca.jP)(ee.zdJ, Xs),
					(0, Ca.jP)(ee.jOm, Zs),
					(0, Ca.jP)(ee.coK, er),
					(0, Ca.jP)(ee.Abj, function* (e) {
						const { activityId: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.V0o });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/personalrecord-service/personalrecord/prByActivityId/${t}`
							);
							yield (0, Ca.yJ)({ type: ee.GSt, activityId: t, data: e.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.d6P, activityId: t, data: null });
						}
					}),
					(0, Ca.jP)(ee.Ar6, function* (e) {
						const { recordType: t, displayName: i } = e;
						try {
							yield (0, Ca.T1)(
								Na.tI.put,
								`/personalrecord-service/personalrecordtype/${t.id}`,
								t
							);
							yield (0, Ca.T1)(er, { displayName: i });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.ZIC });
						}
					}),
					(0, Ca.jP)(ee.Var, function* (e) {
						const { personalRecord: t, displayName: i } = e;
						try {
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/personalrecord-service/personalrecord/${t.id}`
							);
							yield (0, Ca.T1)(Xs, { displayName: i }),
								yield (0, Ca.yJ)({ type: ee.Vso });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.osn });
						}
					}),
					(0, Ca.jP)(ee.dx0, function* (e) {
						const { personalRecordCandidate: t, displayName: i } = e;
						try {
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/personalrecord-service/personalrecordcandidate/${t.id}`
							);
							yield (0, Ca.T1)(Zs, { displayName: i }),
								yield (0, Ca.yJ)({ type: ee.b8x });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.umx });
						}
					}),
					(0, Ca.jP)(ee.fOQ, function* (e) {
						const { personalRecord: t, displayName: i } = e;
						try {
							yield (0, Ca.T1)(
								Na.tI.put,
								'/personalrecord-service/personalrecord/',
								t
							),
								yield (0, Ca.Q7)([
									(0, Ca.T1)(Xs, { displayName: i }),
									(0, Ca.T1)(Zs, { displayName: i }),
								]),
								yield (0, Ca.yJ)({ type: ee.VZ });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.KiN });
						}
					}),
					(0, Ca.jP)(ee.T8n, function* (e) {
						const { personalRecord: t } = e;
						try {
							yield (0, Ca.T1)(
								Na.tI.put,
								`/personalrecord-service/personalrecord/${t.id}`,
								t
							);
							yield (0, Ca.yJ)({ type: ee.LIf });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.CeJ });
						}
					}),
				];
				var ir = i(188932),
					nr = i(289456),
					ar = i(960474),
					sr = i(222192);
				const rr = [
					{ screenId: 'APP_NATIVE_ID_BMI', screenIndex: 2, enabled: !1 },
					{ screenId: 'APP_NATIVE_ID_BODY_FAT', screenIndex: 3, enabled: !1 },
					{
						screenId: 'APP_NATIVE_ID_MUSCLE_MASS',
						screenIndex: 4,
						enabled: !1,
					},
					{ screenId: 'APP_NATIVE_ID_BONE_MASS', screenIndex: 5, enabled: !1 },
					{ screenId: 'APP_NATIVE_ID_BODY_WATER', screenIndex: 6, enabled: !1 },
				];
				const or = [
					(0, Ca.jP)(sr.HB, function* (e) {
						try {
							let t = null,
								i = as.Ay.formatConnectTimestampUTC(Gs()().toDate()),
								n = Gs()().format(as.Ay.LINK_FORMAT),
								a = e.data.endDate
									? Gs()(e.data.endDate).format(as.Ay.LINK_FORMAT)
									: null,
								s = e.data.dueDate,
								r = e.data.title,
								o = e.data.originalDueDate;
							yield (0, Ca.yJ)({ type: sr.yf }),
								s ||
									((t = yield (0, Ca.T1)(
										Na.tI.get,
										'/periodichealth-service/menstrualcycle/pregnancysnapshot/'
									)),
									(s = t.data.dueDate),
									(o = t.data.originalDueDate),
									(r = t.data.title)),
								e.data.stopTrackingType === nr.tA.Had.id
									? (t = yield (0, Ca.T1)(
											Na.tI.put,
											`/periodichealth-service/menstrualcycle/pregnancysnapshot/${o}`,
											{
												dueDate: s,
												experiencedLoss: !1,
												stopTracking: !1,
												notes:
													e.data.pregnancyNotes &&
													e.data.pregnancyNotes.trim().length > 0
														? e.data.pregnancyNotes
														: null,
												deliveryDate: a,
												reportTimestamp: i,
												title: r,
											}
										))
									: e.data.stopTrackingType === nr.tA.Loss.id
										? (t = yield (0, Ca.T1)(
												Na.tI.put,
												`/periodichealth-service/menstrualcycle/pregnancysnapshot/${o}`,
												{
													dueDate: s,
													experiencedLoss: !0,
													deliveryDate: null,
													stopTracking: !1,
													notes:
														e.data.pregnancyNotes &&
														e.data.pregnancyNotes.trim().length > 0
															? e.data.pregnancyNotes
															: null,
													endDate: a,
													lossReportTimestamp: i,
													reportTimestamp: i,
													title: r,
												}
											))
										: e.data.stopTrackingType === nr.tA.NotSay.id
											? (t = yield (0, Ca.T1)(
													Na.tI.put,
													`/periodichealth-service/menstrualcycle/pregnancysnapshot/${o}`,
													{
														dueDate: s,
														experiencedLoss: !1,
														stopTracking: !0,
														deliveryDate: null,
														endDate: n,
														stopTrackingTimestamp: i,
														reportTimestamp: i,
														title: r,
													}
												))
											: yield (0, Ca.yJ)({ type: sr.e4 }),
								null !== t && (yield (0, Ca.yJ)({ type: sr.DN, response: t }));
						} catch (t) {
							yield (0, Ca.yJ)({ type: sr.e4 });
						}
					}),
					(0, Ca.jP)(sr.cW, function* (e) {
						try {
							let t = null,
								i = as.Ay.formatConnectTimestampUTC(Gs()().toDate()),
								n =
									(e.data.endDate &&
										Gs()(e.data.endDate).format(as.Ay.LINK_FORMAT),
									e.data.dueDate),
								a = e.data.title,
								s = e.data.originalDueDate;
							yield (0, Ca.yJ)({ type: sr.Dv }),
								n ||
									((t = yield (0, Ca.T1)(
										Na.tI.get,
										'/periodichealth-service/menstrualcycle/pregnancysnapshot/'
									)),
									(n = t.data.dueDate),
									(s = t.data.originalDueDate),
									(a = t.data.title)),
								(t = yield (0, Ca.T1)(
									Na.tI.put,
									`/periodichealth-service/menstrualcycle/pregnancysnapshot/${s}`,
									{ dueDate: n, stopTracking: !0, reportTimestamp: i, title: a }
								)),
								null !== t && (yield (0, Ca.yJ)({ type: sr.K9, response: t }));
						} catch (t) {
							yield (0, Ca.yJ)({ type: sr.px });
						}
					}),
					(0, Ca.jP)(sr.sF, function* (e) {
						let t = null,
							i = as.Ay.formatConnectTimestampUTC(Gs()().toDate()),
							n = Gs()().format(as.Ay.LINK_FORMAT),
							a = e.setupDetail,
							s = e.setupDetail.userSettings,
							r = Gs()(a.dueDate).format(as.Ay.LINK_FORMAT),
							o = !1,
							l = sr.i_;
						yield (0, Ca.yJ)({ type: sr.fU });
						try {
							let e = {
								userMenstrualCycleSettings: {
									menstrualCycleType: xs.ou,
									pregnancySetup: !0,
								},
							};
							(s &&
								s.userMenstrualCycleSettings &&
								'undefined' !==
									typeof s.userMenstrualCycleSettings.babyMovementTracking &&
								'undefined' !==
									typeof s.userMenstrualCycleSettings.glucoseTracking) ||
								((e.userMenstrualCycleSettings.babyMovementTracking = !0),
								(e.userMenstrualCycleSettings.glucoseTracking = !0)),
								(t = yield (0, Ca.T1)(
									Na.tI.put,
									'/userprofile-service/userprofile/user-settings',
									e
								));
							let d = {
								weightGoalRecommendation:
									a.weightGoalUserInputs.weightGoalRecommendation,
							};
							a.weightGoalUserInputs.weightGoalRecommendation &&
								((d.heightInCm = a.weightGoalUserInputs.heightInCm),
								(d.weightInGram = a.weightGoalUserInputs.weightInGram));
							let u = {
								userProfilePk: ar.A.get('profileId'),
								title: a.title,
								dueDate: r,
								weightGoalUserInputs: d,
								reportTimestamp: i,
							};
							if (
								(a.hydrationGoal &&
									(u.pregnancyHealthGoals = [
										{
											userGoalType: 'HYDRATION',
											userGoalValue: a.hydrationGoal,
										},
									]),
								(t = yield (0, Ca.T1)(
									Na.tI.post,
									`/periodichealth-service/menstrualcycle/initpregnancysetup/${n}`,
									u,
									{
										validateStatus: (e) =>
											('' + e).startsWith('409') || 200 === e,
									}
								)),
								409 === t.status)
							) {
								if (t.data.message && t.data.message.startsWith('Pregnancy'))
									yield (0, Ca.yJ)({
										type: sr.S3,
										conflictType: xs.ou,
										periodStartDate: null,
									});
								else {
									let e = yield (0, Ca.T1)(
										Na.tI.get,
										`/periodichealth-service/menstrualcycle/lastconfirmed/${n}`
									);
									e && e.data
										? yield (0, Ca.yJ)({
												type: sr.S3,
												conflictType: e.data.cycleType,
												periodStartDate: e.data.periodStartDate,
											})
										: yield (0, Ca.yJ)({
												type: sr.S3,
												conflictType: xs.ou,
												periodStartDate: null,
											});
								}
								return;
							}
							if (
								(t.data &&
									t.data.setupStepErrorResponseMap &&
									(t.data.setupStepErrorResponseMap.UPDATE_HYDRATION_GOAL
										? ((o = !0), (l = sr.vc))
										: t.data.setupStepErrorResponseMap.UPDATE_WEIGHT_GOAL &&
											((o = !0), (l = sr.QD))),
								!o && a.moveAlerts.deviceId)
							)
								try {
									t = yield (0, Ca.T1)(
										Na.tI.put,
										`/device-service/deviceservice/device-info/settings/${a.moveAlerts.deviceId}`,
										{
											activityTracking: {
												moveAlertEnabled: a.moveAlerts.enabled,
											},
										}
									);
								} catch (c) {
									l = sr.HL;
								}
							if (!o && a.advancedMetrics.deviceId) {
								let e = [...rr],
									i = 0;
								a.advancedMetrics.advancedMetrics.forEach((t) => {
									let n = e.find((e) => e.screenId === t);
									n && ((n.enabled = !0), i++);
								});
								try {
									t = yield (0, Ca.T1)(
										Na.tI.put,
										`/device-service/deviceservice/device-info/settings/${a.advancedMetrics.deviceId}`,
										{
											weightOnlyModeEnabled: 0 === i,
											screenLists: [
												{
													screenListId: 'DEFAULT',
													defaultToLast: !0,
													screens: e,
												},
											],
										}
									);
								} catch (c) {
									l = sr.ye;
								}
							}
							if (!o && null !== a.trainingStatusEnabled) {
								let e = null;
								a.trainingStatusEnabled && (e = Gs()().format('YYYY-MM-DD'));
								try {
									t = yield (0, Ca.T1)(
										Na.tI.put,
										'/userprofile-service/userprofile/user-settings',
										{ userData: { trainingStatusPausedDate: e } }
									);
								} catch (c) {
									l = sr.SQ;
								}
							}
							yield (0, Ca.yJ)({ type: l });
						} catch (c) {
							yield (0, Ca.yJ)({ type: sr.jP });
						}
					}),
					(0, Ca.jP)(sr.FO, function* () {
						yield (0, Ca.yJ)({ type: sr.KP });
						try {
							let e = yield (0, Ca.T1)(
								Na.tI.get,
								'/periodichealth-service/menstrualcycle/pregnancysnapshot/all'
							);
							yield (0, Ca.yJ)({ type: sr.hE, data: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: sr.Us });
						}
					}),
					(0, Ca.jP)(sr.B6, function* (e) {
						const { pregnancySettings: t, originalDueDate: i, callback: n } = e;
						let a = {
							...t,
							reportTimestamp: as.Ay.formatConnectTimestampUTC(Gs()().toDate()),
						};
						try {
							yield (0, Ca.yJ)({ type: sr.iO });
							const e = yield (0, Ca.T1)(
								Na.tI.put,
								`/periodichealth-service/menstrualcycle/pregnancysnapshot/${i}`,
								a
							);
							yield (0, Ca.yJ)({ type: sr.tq, pregnancySnapshot: e.data }),
								yield (0, Ca.T1)(fa.G, n, e);
						} catch (s) {
							yield (0, Ca.yJ)({ type: sr.Q0 }), yield (0, Ca.T1)(fa.j, n, s);
						}
					}),
					(0, Ca.jP)(sr.j, function* (e) {
						const { originalDueDate: t, callback: i } = e;
						try {
							let e = yield (0, Ca.T1)(
								Na.tI.delete,
								`/periodichealth-service/menstrualcycle/pregnancysnapshot/${t}`
							);
							yield (0, Ca.T1)(fa.G, i, e);
						} catch (n) {
							yield (0, Ca.T1)(fa.j, i, n);
						}
					}),
					(0, Ca.jP)(sr.Vx, function* (e) {
						let t = e.date;
						const i = new (Gs())().format(as.Ay.LINK_FORMAT);
						yield (0, Ca.yJ)({ type: sr.IR });
						try {
							let e = yield (0, Ca.T1)(
								Na.tI.get,
								`/periodichealth-service/menstrualcycle/dayview/${t}?todayDate=${i}`,
								{ validateStatus: (e) => ('' + e).startsWith('20') }
							);
							e.data || (e.data = { dayLog: null }),
								null === e.data.dayLog
									? (e.data.dayLog = {
											calendarDate: t,
											symptoms: null,
											moods: null,
											flow: null,
											discharge: null,
											sexDrive: null,
											sexualActivity: null,
											notes: null,
											reportTimestamp: null,
											ovulationDay: !1,
											babyMovements: null,
											hasGlucoseLog: !1,
										})
									: e.data.dayLog.babyMovements &&
										(e.data.dayLog.babyMovements = (0, nr.h6)(
											e.data.dayLog.babyMovements
										)),
								(e.data.dayLog.status = e.status),
								yield (0, Ca.yJ)({ type: sr.H6, data: e.data });
						} catch (n) {
							yield (0, Ca.yJ)({ type: sr.cz });
						}
					}),
					(0, Ca.jP)(sr.V3, function* (e) {
						let t = e.log,
							i = null,
							n = as.Ay.formatConnectTimestampUTC(Gs()().toDate());
						t.userProfilePk || (t.userProfilePk = ar.A.get('profileId')),
							(t.reportTimestamp = n),
							t.status && delete t.status,
							(t = (0, ir.FC)(t));
						try {
							(i = yield (0, Ca.T1)(
								Na.tI.post,
								`/periodichealth-service/menstrualcycle/dailylog/${t.calendarDate}`,
								t
							)),
								i &&
									i.data &&
									i.data.babyMovements &&
									(i.data.babyMovements = (0, nr.h6)(i.data.babyMovements)),
								yield (0, Ca.yJ)({ type: sr.Bt, data: i.data });
						} catch (a) {
							yield (0, Ca.yJ)({ type: sr.GC, data: t });
						}
					}),
					(0, Ca.jP)(sr.o3, function* (e) {
						let t = e.date;
						yield (0, Ca.yJ)({ type: sr.r9 });
						try {
							let e = yield (0, Ca.T1)(
								Na.tI.get,
								`/biometric-service/biometric/glucose/${t}`
							);
							e.data &&
								e.data.glucoseList &&
								((e.data.glucoseList = (0, nr.CJ)(e.data.glucoseList)),
								e.data.glucoseList.forEach((e) => {
									e.originalUserMeasurementTimestamp ||
										(e.originalUserMeasurementTimestamp =
											e.userMeasurementTimestamp);
								})),
								yield (0, Ca.yJ)({ type: sr.mg, data: e.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: sr.pm });
						}
					}),
					(0, Ca.jP)(sr.VX, function* (e) {
						let t = as.Ay.formatConnectTimestampUTC(Gs()().toDate()),
							i = e.message.log,
							n = e.message.reload;
						delete i.gmtOffset,
							delete i.calendarDate,
							delete i.originalUserMeasurementTimestamp,
							(i.reportTimestamp = t),
							(i.requestOrigin = 'PREGNANCY');
						try {
							yield (0, Ca.T1)(
								Na.tI.post,
								'/biometric-service/biometric/glucose',
								i
							);
							if ((yield (0, Ca.yJ)({ type: sr.dD }), n))
								try {
									let t = Gs()(i.userMeasurementTimestamp).format(
										as.Ay.LINK_FORMAT
									);
									yield (0, Ca.yJ)({ ...e, type: sr.o3, date: t });
								} catch (a) {}
						} catch (a) {
							yield (0, Ca.yJ)({ type: sr.or });
						}
					}),
					(0, Ca.jP)(sr.xL, function* (e) {
						let t = e.message.log,
							i = e.message.reload;
						try {
							delete t.gmtMeasurementTimestamp;
							yield (0, Ca.T1)(
								Na.tI.put,
								'/biometric-service/biometric/glucose',
								t
							);
							if ((yield (0, Ca.yJ)({ type: sr.p7 }), i))
								try {
									let i = Gs()(t.userMeasurementTimestamp).format(
										as.Ay.LINK_FORMAT
									);
									yield (0, Ca.yJ)({ ...e, type: sr.o3, date: i });
								} catch (n) {}
						} catch (n) {
							yield (0, Ca.yJ)({ type: sr.eG });
						}
					}),
					(0, Ca.jP)(sr.p6, function* (e) {
						let t = e.message.log,
							i = e.message.reload;
						try {
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/biometric-service/biometric/glucose/${t.userMeasurementTimestamp}`
							);
							if ((yield (0, Ca.yJ)({ type: sr.rv }), i))
								try {
									let i = Gs()(t.userMeasurementTimestamp).format(
										as.Ay.LINK_FORMAT
									);
									yield (0, Ca.yJ)({ ...e, type: sr.o3, date: i });
								} catch (n) {}
						} catch (n) {
							yield (0, Ca.yJ)({ type: sr.QQ });
						}
					}),
					(0, Ca.jP)(sr.r7, function* (e) {
						let t = e.message.iconKey,
							i = nr.AQ[t].url;
						try {
							let e = yield (0, Ca.T1)(Na.tI.get, i, { baseURL: '/' });
							yield (0, Ca.yJ)({
								type: sr.RA,
								data: { iconKey: t, iconData: e.data },
							});
						} catch (n) {
							yield (0, Ca.yJ)({ type: sr.Ob });
						}
					}),
					(0, Ca.jP)(sr.Vi, function* (e) {
						const { startDate: t, endDate: i } = e.date;
						yield (0, Ca.yJ)({ type: sr.uP });
						try {
							let e = yield (0, Ca.T1)(
								Na.tI.get,
								`/periodichealth-service/menstrualcycle/pregnancy/weightgoals/${t}/${i}`
							);
							yield (0, Ca.yJ)({ type: sr.lG, data: e.data });
						} catch (n) {
							yield (0, Ca.yJ)({ type: sr.IC });
						}
					}),
				];
				var lr = i(803190),
					cr = i(883557);
				const dr = [
					(0, Ca.jP)(cr.Oc, function* (e) {
						try {
							const t = `/gcs-golfcommunity/api/v2/course-snapshot${(0, Sa.zJ)({ 'course-snapshot-ids': e.courseSnapshotId, 'user-locale': e.userLocale })}`,
								i = yield (0, Ca.T1)(Na.b0.get, t);
							yield (0, Ca.yJ)({
								type: cr.Ub,
								golfCourse: i.data && i.data.length ? i.data[0] : {},
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: cr.pM, golfCourse: {} });
						}
					}),
				];
				const ur = [
					(0, Ca.jP)(cr.tE, function* (e) {
						try {
							const t = `/gcs-golfcommunity/api/v2/course-snapshot/player${(0, Sa.zJ)({ 'per-page': 1e4, 'user-locale': e.userLocale })}`,
								i = yield (0, Ca.T1)(Na.b0.get, t);
							yield (0, Ca.yJ)({
								type: cr.ZO,
								golfCourses: i.data.courseSnapshots || [],
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: cr.uD, golfCourses: [] });
						}
					}),
				];
				const pr = [
					(0, Ca.jP)(cr.am, function* (e) {
						try {
							const t = e.backNineCourseGlobalId || !e.courseGlobalId,
								i = (0, Sa.zJ)({
									...(t && { 'course-snapshot-id': e.courseSnapshotId }),
									...(!t && { 'course-global-id': e.courseGlobalId }),
									...(!t && { 'from-date': e.fromDate }),
									'image-size': 'IMG_730X730',
									'user-locale': e.userLocale,
								}),
								n = yield (0, Ca.T1)(
									Na.b0.get,
									`/gcs-golfcommunity/api/v2/course-snapshot/stats${i}`
								);
							yield (0, Ca.yJ)({
								type: cr.sD,
								golfCourseStats: n.data || {},
								...(e.fromDate && { fromDate: e.fromDate }),
								...(e.courseSnapshotId && {
									courseSnapshotId: e.courseSnapshotId,
								}),
								...(e.courseGlobalId && { courseGlobalId: e.courseGlobalId }),
							});
						} catch (t) {
							yield (0, Ca.yJ)({
								type: cr.Vm,
								golfCourseStats: {},
								...(e.fromDate && { fromDate: e.fromDate }),
								...(e.courseSnapshotId && {
									courseSnapshotId: e.courseSnapshotId,
								}),
								...(e.courseGlobalId && { courseGlobalId: e.courseGlobalId }),
							});
						}
					}),
				];
				const yr = [
					(0, Ca.jP)(cr.wh, function* (e) {
						try {
							const t = `/gcs-golfcommunity/api/v2/course-layout/${e.courseGlobalId}`,
								i = yield (0, Ca.T1)(Na.b0.get, t);
							yield (0, Ca.yJ)({
								type: cr.kD,
								layouts: i.data,
								courseGlobalId: e.courseGlobalId,
							});
						} catch (t) {
							yield (0, Ca.yJ)({
								type: cr.bT,
								layouts: [],
								courseGlobalId: e.courseGlobalId,
							});
						}
					}),
				];
				function* hr(e) {
					const {
							displayName: t,
							calendarDate: i,
							nonSleepBufferMinutes: n,
						} = e,
						a = { date: i };
					n && (a.nonSleepBufferMinutes = n);
					const s = Sa.zJ(a);
					try {
						yield (0, Ca.yJ)({ type: ee.$Uc, displayName: t, calendarDate: i });
						const e = yield (0, Ca.T1)(
							Na.tI.get,
							`/wellness-service/wellness/dailySleepData/${t}${s}`
						);
						yield (0, Ca.yJ)({
							type: ee.cKe,
							dailySleepData: e.data,
							displayName: t,
							calendarDate: i,
						});
					} catch (r) {
						yield (0, Ca.yJ)({
							type: ee.Tar,
							dailySleepData: {},
							displayName: t,
							calendarDate: i,
						});
					}
				}
				function* gr(e) {
					try {
						const t = e.newSleepDTO,
							i = yield (0, Ca.T1)(
								Na.tI.put,
								`/wellness-service/wellness/dailySleep/${t.id}`,
								t
							);
						return yield (0, Ca.yJ)({ type: ee.wit, sleepDTO: i.data }), i;
					} catch (t) {
						yield (0, Ca.yJ)({ type: ee.nwT });
					}
				}
				const mr = [
					(0, Ca.jP)(ee.Kj3, hr),
					(0, Ca.jP)(ee.skU, gr),
					(0, Ca.jP)(ee.H2Z, function* (e) {
						try {
							const t = e.newSleepDTO;
							if (200 === (yield (0, Ca.T1)(gr, { newSleepDTO: t })).status) {
								const {
									displayName: t,
									calendarDate: i,
									nonSleepBufferMinutes: n,
								} = e;
								yield (0, Ca.Q7)([
									(0, Ca.T1)(hr, {
										displayName: t,
										calendarDate: i,
										nonSleepBufferMinutes: n,
									}),
									(0, Ca.T1)(rs, { displayName: t, calendarDate: i }),
								]);
							} else yield (0, Ca.yJ)({ type: ee.Woz });
							yield (0, Ca.yJ)({ type: ee.pRx });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.Woz });
						}
					}),
					(0, Ca.jP)(ee.nKE, function* (e) {
						const { userNote: t, displayName: i, calendarDate: n } = e;
						try {
							yield (0, Ca.yJ)({
								type: ee.ETp,
								userNote: t,
								displayName: i,
								calendarDate: n,
							});
							const e = yield (0, Ca.T1)(
								Na.tI.put,
								`wellness-service/wellness/dailySleep/${n}/note`,
								{ userNote: t }
							);
							yield (0, Ca.yJ)({ type: ee.RrC, userNote: e.data });
						} catch (a) {
							yield (0, Ca.yJ)({
								type: ee.WEB,
								displayName: i,
								calendarDate: n,
							});
						}
					}),
				];
				const Ar = [
					(0, Ca.jP)(cr.GO, function* (e) {
						try {
							const t = !e.courseGlobalId,
								i = `/gcs-golfcommunity/api/v2/scorecard/summary/course${(0, Sa.zJ)({ ...(!t && { 'course-global-id': e.courseGlobalId }), ...(t && { 'course-snapshot-id': e.courseSnapshotId }), 'user-locale': e.userLocale, 'per-page': 9999, 'round-type': e.roundType, 'back-nine-course-global-id': e.backNineCourseGlobalId })}`,
								n = yield (0, Ca.T1)(Na.b0.get, i);
							yield (0, Ca.yJ)({
								type: cr.wR,
								courseSnapshotId: e.courseSnapshotId,
								roundType: e.roundType,
								scorecards: n.data.scorecardSummaries || [],
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: cr.JQ, scorecards: [] });
						}
					}),
				];
				var _r = i(470564);
				const Er = [
					(0, Ca.jP)(_r.$S, function* (e) {
						let t = e.payload.startDate,
							i = e.payload.endDate,
							n = e.payload.previousStartDate,
							a = e.payload.previousEndDate,
							s = e.payload.deviceId;
						const r =
								t === i
									? `/web-gateway/solar/${s}/${t}/${i}?singleDayView=true`
									: `/device-service/devicemonitoring/solargain/${s}/${t}/${i}`,
							o =
								t === i
									? `/web-gateway/solar/${s}/${t}/${i}?singleDayView=true`
									: `/device-service/devicemonitoring/solargain/${s}/${n}/${a}`;
						try {
							let e, l;
							yield (0, Ca.yJ)({ type: _r.mg }),
								t === i
									? (e = yield (0, Ca.T1)(Na.tI.get, r))
									: ([e, l] = yield (0, Ca.Q7)([
											(0, Ca.T1)(Na.tI.get, r),
											(0, Ca.T1)(Na.tI.get, o),
										])),
								yield (0, Ca.yJ)({
									type: _r.xB,
									solarTimeLine: e.data.deviceSolarInput || [],
									solarCharge: e.data.solarGainDailyDetailDTOList || [],
									previousSolarCharge:
										(l && l.data.solarGainDailyDetailDTOList) || [],
									previousRangeSolarCharge:
										(l && l.data.solarGainDailyDetailDTOList) || [],
									calendarDate: t,
									calendarRange: t + '-' + i,
									previousCalendarRange: n + '-' + a,
									deviceId: s,
									activitySummary: { activitiesList: e.data.activitySummary },
								});
						} catch (l) {
							yield (0, Ca.yJ)({
								type: _r.e0,
								solarTimeLine: [],
								solarCharge: [],
								solarGainDailyDetailDTOList: [],
								calendarDate: t,
								deviceId: s,
							});
						}
					}),
				];
				const Tr = [
					(0, Ca.jP)(ee.CUS, function* (e) {
						const { userProfileId: t, calendarDate: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.n3F });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/metrics-service/metrics/trainingstatus/aggregated/${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.y4,
								calendarDate: i,
								userProfileId: t,
								trainingStatusDaily: e.data,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.bn2,
								calendarDate: i,
								userProfileId: t,
								trainingStatusDaily: null,
							});
						}
					}),
					(0, Ca.jP)(ee.gOy, function* (e) {
						const { userProfileId: t, calendarDate: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.Nrv });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/metrics-service/metrics/trainingstatus/daily/${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.Ycf,
								calendarDate: i,
								userProfileId: t,
								trainingStatusDaily: e.data,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.Pyg,
								calendarDate: i,
								userProfileId: t,
								trainingStatusDaily: null,
							});
						}
					}),
					(0, Ca.jP)(ee.mDq, function* (e) {
						const { displayName: t, startDate: i, endDate: n } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.ziN });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/metrics-service/metrics/trainingstatus/weekly/${t}?fromCalendarDate=${i}&toCalendarDate=${n}`
							);
							yield (0, Ca.yJ)({ type: ee._5I, data: e.data });
						} catch (a) {
							yield (0, Ca.yJ)({ type: ee.Zxz, data: null });
						}
					}),
				];
				const Cr = [
					(0, Ca.jP)(ee.QVT, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.iZ2 });
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/trainingplan-service/trainingplan/phased/${e.trainingPlanId}`
							);
							yield (0, Ca.yJ)({
								type: ee.AGY,
								trainingPlan: t && t.data ? t.data : {},
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.FB });
						}
					}),
					(0, Ca.jP)(ee.dq_, function* (e) {
						try {
							const { startDate: t, endDate: i } = e;
							yield (0, Ca.yJ)({ type: ee.buo });
							let n = yield (0, Ca.T1)(
								Na.tI.get,
								`/workout-service/schedule/workoutScheduleByPeriod?startDate=${t}&endDate=${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.fCB,
								workoutScheduleByPeriod: n && n.data ? n.data : {},
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.CF$ });
						}
					}),
					(0, Ca.jP)(ee.po$, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.E_A }),
								yield (0, Ca.T1)(
									Na.tI.delete,
									`/trainingplan-service/trainingplan/trainingplan/${e.trainingPlanId}`
								),
								yield (0, Ca.yJ)({ type: ee.PTi });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.I6l });
						}
					}),
					(0, Ca.jP)(ee.mPR, function* (e) {
						const { locale: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.i6j });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/web-data/training-plans/phased-training-plans/${t}.json`,
								{ baseURL: '/' }
							);
							yield (0, Ca.yJ)({
								type: ee.ojr,
								trainingPlan: e && e.data ? e.data : {},
							});
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.tgI });
						}
					}),
					(0, Ca.jP)(ee.hEL, function* (e) {
						try {
							const { payload: t } = e,
								i = (0, Sa.zJ)({ ...t });
							yield (0, Ca.yJ)({ type: ee.nKx });
							const n = yield (0, Ca.T1)(
								Na.tI.get,
								`/fitnessstats-service/activity${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.dcY,
								userTrainingData: n && n.data ? n.data : {},
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.k7 });
						}
					}),
					(0, Ca.jP)(ee.oN$, function* (e) {
						try {
							const { payload: t } = e;
							yield (0, Ca.yJ)({ type: ee.Vut });
							yield (0, Ca.T1)(
								Na.tI.post,
								'/trainingplan-service/trainingplan/phased/cycling/trainingplan',
								t
							);
							yield (0, Ca.yJ)({ type: ee.Ier });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.FM3, error: t.response });
						}
					}),
				];
				const Sr = [
					(0, Ca.jP)(ee.IHW, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.jlu });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/v1/powerguidances/summaries'
							);
							yield (0, Ca.yJ)({
								type: ee.XXo,
								data: e && e.data ? e.data : {},
							});
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.dXp });
						}
					}),
					(0, Ca.jP)(ee.qJ9, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.Hi4 });
							let t = e.courseId;
							const i = yield (0, Ca.T1)(
								Na.tI.get,
								`/v1/powerguidances/summaries?courseId=${t}`
							);
							yield (0, Ca.yJ)({
								type: ee.pVu,
								data: i && i.data ? i.data : {},
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.Ag$ });
						}
					}),
					(0, Ca.jP)(ee.P_s, function* (e) {
						try {
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/v1/powerguidances/${e.powerGuidanceId}`
							);
							yield (0, Ca.yJ)({ type: ee.HCb });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.WBI });
						}
					}),
					(0, Ca.jP)(ee.B9N, function* (e) {
						try {
							const { powerGuidanceId: t, deviceId: i } = e.value;
							yield (0, Ca.T1)(
								Na.tI.post,
								`/v1/powerguidances/${t}/device/${i}`
							);
							yield (0, Ca.yJ)({ type: ee.hPY });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.IgG, data: {} });
						}
					}),
					(0, Ca.jP)(ee.j7Y, function* (e) {
						try {
							const t = yield (0, Ca.T1)(
									Na.tI.get,
									`/v1/powerguidances/${e.powerGuidanceId}`
								),
								{ powerGuidanceSummary: i, powerGuidanceSplits: n } = t.data;
							let a = { powerGuidancePk: null },
								s = n.map((e) => ((e.powerGuidancePk = null), e));
							(a.powerGuidanceSummary = {
								...i,
								powerGuidancePk: null,
								powerGuidanceName: e.powerGuidanceName,
							}),
								(a.powerGuidanceSplits = [...s]),
								yield (0, Ca.yJ)({ type: ee.zFJ, payload: a });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.KBe, data: {} });
						}
					}),
					(0, Ca.jP)(ee.bfs, function* (e) {
						try {
							let t = '';
							(0, ps.B)() &&
								(t = (0, Sa.zJ)({ targetCoordinateSystem: 'BD09' }));
							const i = yield (0, Ca.T1)(
								Na.tI.get,
								`/course-service/course/${e.courseId}${t}`
							);
							yield (0, Ca.yJ)({
								type: ee.hEq,
								course: i.data,
								overWritePowerGuidance: e.overWritePowerGuidance,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.Usl, course: {} });
						}
					}),
					(0, Ca.jP)(ee.zFJ, function* (e) {
						let t = e.payload;
						try {
							if (e.courseNotOwned && !e.hasShareableEvent) {
								const i = yield (0, Ca.T1)(
									Na.tI.get,
									`/course-service/course/copyExistingCourse/${e.payload.powerGuidanceSummary.coursePk}`
								);
								t.powerGuidanceSummary.coursePk = i.data.courseId;
							}
							const i = yield (0, Ca.T1)(Na.tI.post, '/v1/powerguidances', t);
							yield (0, Ca.yJ)({ type: ee.F8p, data: i.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee._FU, data: {} });
						}
					}),
					(0, Ca.jP)(ee.XfR, function* (e) {
						let t = e.payload,
							i = e.payload.powerGuidancePk;
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.put,
								`/v1/powerguidances/${i}`,
								t
							);
							yield (0, Ca.yJ)({ type: ee.FY1, data: e.data });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.yRW, data: {} });
						}
					}),
					(0, Ca.jP)(ee.LVb, function* (e) {
						try {
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/v1/powerguidances/${e.powerGuidancePk}`
							);
							yield (0, Ca.yJ)({ type: ee.psu, data: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.UsA, data: {} });
						}
					}),
					(0, Ca.jP)(ee.Cso, function* (e) {
						yield (0, Ca.yJ)({ type: ee.pDX });
						try {
							const {
									aggregation: t,
									groupBy: i,
									startDate: n,
									endDate: a,
									metrics: s,
									activityType: r,
								} = e.payload,
								o = Sa.zJ({
									aggregation: t,
									groupByParentActivityType: 'ACTIVITY' === i,
									groupByEventType: 'EVENT' === i,
									activityType: r,
									startDate: n,
									endDate: a,
									metric: s,
								}),
								l = yield (0, Ca.T1)(
									Na.tI.get,
									`/fitnessstats-service/activity${o}`
								);
							let c = l.data && l.data[0] ? l.data[0].stats : {};
							yield (0, Ca.yJ)({ type: ee.GOn, data: c });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.nb });
						}
					}),
					(0, Ca.jP)(ee.uBU, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.DhK });
							yield (0, Ca.T1)(Na.tI.put, '/biometric-service/powerZones/all', [
								e.payload,
							]);
							yield (0, Ca.yJ)({ type: ee.SJ4 });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.DKG });
						}
					}),
					(0, Ca.jP)(ee.nDq, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.qDz });
							let t = e && e.activity ? '/' + e.activity : '';
							const i = yield (0, Ca.T1)(
								Na.tI.get,
								`/biometric-service/biometric/latestFunctionalThresholdPower${t}`
							);
							yield (0, Ca.yJ)({ type: ee.fxo, data: i.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.ABb });
						}
					}),
					(0, Ca.jP)(ee.gV, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.bwc });
							const t = yield (0, Ca.T1)(
								Na.tI.post,
								'/biometric-service/powerZones/athleteInfo',
								e.payload
							);
							yield (0, Ca.yJ)({ type: ee.EVx, response: t });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.PdC });
						}
					}),
				];
				const Ir = [
					(0, Ca.jP)(ee.sjL, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.vm1 });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/privacysettings-service/privacy-settings'
							);
							yield (0, Ca.yJ)({
								type: ee.qOu,
								data: e && e.data ? e.data : {},
							});
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.xAn });
						}
					}),
					(0, Ca.jP)(ee.D9o, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.BJc }),
								e &&
									e.data &&
									(yield (0, Ca.T1)(
										Na.tI.put,
										'/privacysettings-service/privacy-settings',
										{ ...e.data }
									),
									(0, fa.G)(e.callback, {}),
									yield (0, Ca.yJ)({ type: ee.mES, data: e.data }));
						} catch (t) {
							(0, fa.j)(e.callback, t), yield (0, Ca.yJ)({ type: ee.$nT });
						}
					}),
					(0, Ca.jP)(ee.fSr, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.ojM });
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								'/activity-service/activity/privacy/bulk'
							);
							(0, fa.G)(e.callback, t),
								yield (0, Ca.yJ)({
									type: ee.Z5J,
									data: t && t.data ? t.data : {},
								});
						} catch (t) {
							(0, fa.j)(e.callback, t), yield (0, Ca.yJ)({ type: ee.kCo });
						}
					}),
					(0, Ca.jP)(ee.C1p, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.sZM }),
								e &&
									e.data &&
									(yield (0, Ca.T1)(
										Na.tI.post,
										'/activity-service/activity/privacy/bulk',
										{ ...e.data }
									),
									yield (0, Ca.yJ)({ type: ee.f_Y, data: e }));
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.unu });
						}
					}),
				];
				const vr = [
					(0, Ca.jP)(ss.p1, function* (e) {
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/web-data/climb-difficulty/climb-difficulty-master.json'
							);
							yield (0, Ca.yJ)({ type: ss.ph, indoorClimbDifficulty: e.data });
						} catch (t) {}
					}),
				];
				const fr = [
					(0, Ca.jP)(ee._kh, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.faG });
							const t =
									'number' === typeof e.maxChartSize ? e.maxChartSize : 250,
								i =
									'number' === typeof e.maxPolylineSize
										? e.maxPolylineSize
										: 250,
								n =
									'number' === typeof e.maxHeatMapSize
										? e.maxHeatMapSize
										: null,
								a = e.splitTypeFilter
									? `&splitType=${e.splitTypeFilter.join('&splitType=')}`
									: '',
								s = { maxChartSize: t, maxPolylineSize: i };
							e.maxHeatMapSize && (s.maxHeatMapSize = n);
							const r = yield (0, Ca.T1)(
								Na.tI.get,
								`/activity-service/activity/${e.activityId}/details?${a}`,
								{ params: s }
							);
							yield (0, Ca.yJ)({ type: ee.Iz1, activityDetails: r.data }),
								yield (0, Ca.T1)(fa.G, e.callback, r);
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.hu3, activityDetails: [] }),
								yield (0, Ca.T1)(fa.G, e.callback, t);
						}
					}),
					(0, Ca.jP)(ee._mE, function* (e) {
						try {
							var t, i, n;
							yield (0, Ca.yJ)({ type: ee.faG });
							const a =
									'number' === typeof e.maxChartSize ? e.maxChartSize : 250,
								s =
									'number' === typeof e.maxPolylineSize
										? e.maxPolylineSize
										: 250,
								r = e.maxHeatMapSize,
								o = yield (0, Ca.T1)(
									Na.tI.get,
									`/activity-service/activity/${e.activityId}/details`,
									{
										params: {
											maxChartSize: a,
											maxPolylineSize: s,
											maxHeatMapSize: r,
										},
									}
								);
							let l =
								(null === (t = o.data) || void 0 === t
									? void 0
									: t.activityHeatMapDTO) || null;
							const c =
								(null === (i = o.data) ||
								void 0 === i ||
								null === (n = i.geoPolylineDTO) ||
								void 0 === n
									? void 0
									: n.polyline) || null;
							let d = new Ra.A();
							if (l) {
								let e = [
									{
										latitude: l.lowerLeftLat || 0,
										longitude: l.lowerLeftLon || 0,
									},
									{
										latitude: l.upperRightLat || 0,
										longitude: l.upperRightLon || 0,
									},
								];
								const t = o.data.activityHeatMapDTO.points || [];
								e = e.concat(t);
								const i = yield d.fetchGenerator(e),
									n = i.slice(0, 2),
									a = i.slice(2);
								(o.data.activityHeatMapDTO.lowerLeftLat = n[0].lat),
									(o.data.activityHeatMapDTO.lowerLeftLon = n[0].lon),
									(o.data.activityHeatMapDTO.upperRightLat = n[1].lat),
									(o.data.activityHeatMapDTO.upperRightLon = n[1].lon),
									a.forEach((e, i) => {
										(t[i].lat = e.lat), (t[i].lon = e.lon);
									});
							} else if (c) {
								e.fetchForCourse && (o.data.geoPolylineDTO.sourcePolyline = c);
								let t = [];
								(yield d.fetchGenerator(c)).forEach((e, i) => {
									t.push({ lat: e.lat, lon: e.lon, time: c[i].time });
								}),
									(o.data.geoPolylineDTO.polyline = t);
							}
							yield (0, Ca.yJ)({ type: ee.Iz1, activityDetails: o.data }),
								yield (0, Ca.T1)(fa.G, e.callback, o);
						} catch (a) {
							yield (0, Ca.yJ)({ type: ee.hu3, activityDetails: [] }),
								yield (0, Ca.T1)(fa.G, e.callback, a);
						}
					}),
					(0, Ca.jP)(ee._tV, function* (e) {
						try {
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/activity-service/activity/${e.activityId}/weather`
							);
							yield (0, Ca.yJ)({ type: ee.yzC, weather: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.jOq, weather: [] });
						}
					}),
					(0, Ca.jP)(ee.WLQ, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.faG });
							const t = e.maxChartSize || 250,
								i = yield (0, Ca.T1)(
									Na.tI.get,
									`/activity-service/activity/${e.activityId}/details`,
									{ params: { maxChartSize: t, maxPolylineSize: 0 } }
								);
							yield (0, Ca.yJ)({ type: ee.wqD, activityDetails: i.data }),
								yield (0, Ca.T1)(fa.G, e.callback, i);
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.hu3, activityDetails: [] });
						}
					}),
					(0, Ca.jP)(ee.aBo, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.faG });
							const t = e.maxChartSize || 250,
								i = yield (0, Ca.T1)(
									Na.tI.get,
									`/activity-service/activity/${e.activityId}/details`,
									{ params: { maxChartSize: t, maxPolylineSize: 0 } }
								);
							yield (0, Ca.yJ)({ type: ee.wqD, activityDetails: i.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.hu3, activityDetails: [] });
						}
					}),
				];
				function* Dr(e) {
					const {
							activityId: t,
							maxPolylineSize: i,
							maxHeatMapSize: n,
							splitTypes: a,
						} = e,
						s = { maxPolylineSize: i, maxHeatMapSize: n };
					let r = '';
					Array.isArray(a) && (r = a.map((e) => `splitType=${e}`).join('&'));
					const o = yield (0, Ca.T1)(
							Na.tI.get,
							`/activity-service/activity/${t}/mapdetails?${r}`,
							{ params: s }
						),
						{ activityHeatMapDTO: l = null, gPolyline: c = null } =
							o.data || {},
						d = (function (e) {
							if (!e) return null;
							const t = La()
									.Map.Utils.decodeLine(e.encodedSamples)
									.map((e) => {
										const t = new (La().Map.Point)(e[0], e[1]);
										return { lat: t.lat, lon: t.lon };
									}),
								i = {
									minLat: e.minLat,
									maxLat: e.maxLat,
									minLon: e.minLon,
									maxLon: e.maxLon,
									startPoint: null,
									endPoint: null,
									polyline: t,
								};
							if (Array.isArray(t) && t.length > 0) {
								const e = t[0],
									n = t[t.length - 1];
								(i.startPoint = { lat: e.lat, lon: e.lon }),
									(i.endPoint = { lat: n.lat, lon: n.lon });
							}
							return i;
						})(c);
					return { activityHeatMapDTO: l, geoPolylineDTO: d };
				}
				const Nr = [
					(0, Ca.jP)(ee.VM4, function* (e) {
						const { activityId: t } = e;
						try {
							const { activityHeatMapDTO: i, geoPolylineDTO: n } = yield (0,
							Ca.T1)(Dr, e);
							yield (0, Ca.yJ)(
								(0, de.Wf)(t, {
									error: !1,
									data: { activityHeatMapDTO: i, geoPolylineDTO: n },
								})
							);
						} catch (i) {
							yield (0, Ca.yJ)((0, de.Wf)(t, { error: !0, data: null }));
						}
					}),
					(0, Ca.jP)(ee.RaI, function* (e) {
						const { activityId: t } = e;
						try {
							const { activityHeatMapDTO: i, geoPolylineDTO: n } = yield (0,
								Ca.T1)(Dr, e),
								a = null === n || void 0 === n ? void 0 : n.polyline;
							let s = new Ra.A();
							if (i) {
								let e = [
									{
										latitude: i.lowerLeftLat || 0,
										longitude: i.lowerLeftLon || 0,
									},
									{
										latitude: i.upperRightLat || 0,
										longitude: i.upperRightLon || 0,
									},
								];
								const t = i.points || [];
								e = e.concat(t);
								const n = yield s.fetchGenerator(e),
									a = n.slice(0, 2),
									r = n.slice(2);
								(i.lowerLeftLat = a[0].lat),
									(i.lowerLeftLon = a[0].lon),
									(i.upperRightLat = a[1].lat),
									(i.upperRightLon = a[1].lon),
									r.forEach((e, i) => {
										(t[i].lat = e.lat), (t[i].lon = e.lon);
									});
							} else if (a) {
								(yield s.fetchGenerator(a)).forEach((e, t) => {
									(a[t].lat = e.lat), (a[t].lon = e.lon);
								});
							}
							yield (0, Ca.yJ)(
								(0, de.Wf)(t, {
									error: !1,
									data: { activityHeatMapDTO: i, geoPolylineDTO: n },
								})
							);
						} catch (i) {
							yield (0, Ca.yJ)((0, de.Wf)(t, { error: !0, data: null }));
						}
					}),
				];
				const Rr = [
					(0, Ca.jP)(ee.NmK, function* (e) {
						try {
							let t = `/badgechallenge-service/badgeChallenge/${e.challengeId}`;
							const i = yield (0, Ca.T1)(Na.tI.get, t);
							yield (0, Ca.yJ)({ type: ee.fHo, challenge: i.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.yZz, challenge: {} });
						}
					}),
					(0, Ca.jP)(ee.JPR, function* (e) {
						try {
							const t = Gs()().format(as.Ay.LINK_FORMAT);
							let i = `/badgechallenge-service/badgeChallenge/${e.challengeId}/optIn/${t}`;
							yield (0, Ca.T1)(Na.tI.post, i, {
								headers: { 'Content-Type': 'text/html' },
							});
							yield (0, Ca.yJ)({ type: ee.L0r }),
								yield (0, Ca.yJ)({ type: ee.NmK, challengeId: e.challengeId });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.K2W, error: t.response.data });
						}
					}),
					(0, Ca.jP)(ee.oMs, function* (e) {
						try {
							let t = `/badgechallenge-service/badgeChallenge/${e.challengeId}/optOut`;
							yield (0, Ca.T1)(Na.tI.post, t, {
								headers: { 'Content-Type': 'text/html' },
							});
							yield (0, Ca.yJ)({ type: ee.IiA });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.T8H });
						}
					}),
				];
				const br = [
					(0, Ca.jP)(ee.Ujl, function* (e) {
						const { calendarDate: t, deviceId: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.jph });
							let e = `/wellness-service/wellness/epoch/request/${t}`;
							i && (e += `/${i}`);
							const n = yield (0, Ca.T1)(Na.tI.post, e);
							yield (0, Ca.yJ)({ type: ee.g9h, calendarDate: t, data: n.data });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.ZqM, calendarDate: t, data: null });
						}
					}),
				];
				var Lr = i(22903);
				const Pr = [
					(0, Ca.jP)(Lr.hw, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Lr.sY });
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/bloodpressure-service/bloodpressure/dayview/${e.date}`
							);
							yield (0, Ca.yJ)({ type: Lr.lE, data: t.data, date: e.date });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Lr.G5, data: {} });
						}
					}),
					(0, Ca.jP)(Lr.$p, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Lr.Kr, dateRange: e.dateRange });
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/bloodpressure-service/bloodpressure/range/${e.dates.startDate}/${e.dates.endDate}?includeAll=true`
							);
							yield (0, Ca.yJ)({
								type: Lr.dS,
								data: t.data,
								date: e.dates.endDate,
								dateRange: e.dateRange,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: Lr.aF, data: {} });
						}
					}),
					(0, Ca.jP)(Lr.UN, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Lr.Tt });
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/bloodpressure-service/bloodpressure/weeklyRange/${e.dates.startDate}/${e.dates.endDate}`
							);
							yield (0, Ca.yJ)({
								type: Lr.MV,
								data: t.data,
								date: e.dates.endDate,
							});
						} catch (t) {
							yield (0, Ca.yJ)({
								type: Lr.Fu,
								data: {},
								date: e.dates.endDate,
							});
						}
					}),
					(0, Ca.jP)(Lr.ev, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Lr.vK });
							const t = e.bloodPressure,
								i = Gs()(t.measurementTimestampLocal).format(as.Ay.LINK_FORMAT),
								n = yield (0, Ca.T1)(
									Na.tI.delete,
									`bloodpressure-service/bloodpressure/${i}/${t.version}`
								);
							yield (0, Ca.yJ)({ type: Lr.wP, data: n.data }),
								e.fetchLatestData &&
									e.fetchLatestData.type &&
									(yield (0, Ca.yJ)(e.fetchLatestData));
						} catch (t) {
							yield (0, Ca.yJ)({ type: Lr.vj, data: {} });
						}
					}),
					(0, Ca.jP)(Lr.OL, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Lr.zL });
							let t = '/bloodpressure-service/bloodpressure';
							const i = yield (0, Ca.T1)(Na.tI.post, t, { ...e.payload });
							e.actionToDispatch &&
								e.actionToDispatch.type &&
								(yield (0, Ca.yJ)(e.actionToDispatch)),
								yield (0, Ca.yJ)({ type: Lr.S7, response: i }),
								e.saveBPM && e.saveBPM(),
								e.fetchData && e.fetchData(),
								e.fetchLatestData &&
									e.fetchLatestData.type &&
									(yield (0, Ca.yJ)(e.fetchLatestData));
						} catch (t) {
							yield (0, Ca.yJ)({ type: Lr.fU, data: {} });
						}
					}),
					(0, Ca.jP)(Lr.O1, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Lr.JN });
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/bloodpressure-service/bloodpressure/daily/last/${e.date.startDate}/${e.date.endDate}`
							);
							yield (0, Ca.yJ)({
								type: Lr.CJ,
								endDate: e.date.endDate,
								data: t.data,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: Lr.be, data: {} });
						}
					}),
					(0, Ca.jP)(Lr.$i, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Lr.cx });
							const t = yield (0, Ca.T1)(
								Na.tI.put,
								'/bloodpressure-service/bloodpressure',
								{ ...e.payload }
							);
							yield (0, Ca.yJ)({ type: Lr.FJ, response: t }),
								e.fetchBPData &&
									e.fetchBPData.type &&
									(yield (0, Ca.yJ)(e.fetchBPData));
						} catch (t) {
							yield (0, Ca.yJ)({ type: Lr.eG, data: {} });
						}
					}),
				];
				const Or = [
					(0, Ca.jP)(ee.r9R, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.ej7 });
							const { calendarDate: t } = e.payload,
								i = yield (0, Ca.T1)(
									Na.tI.get,
									`/fitnessage-service/fitnessage/${t}`
								);
							yield (0, Ca.yJ)({ type: ee.RyL, fitnessAgeData: i.data || {} });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.Sv9 });
						}
					}),
				];
				const wr = [
					(0, Ca.jP)(ee.U3t, function* (e) {
						try {
							const {
								payload: { calendarDate: t, sport: i },
							} = e;
							let n = `/biometric-service/biometric/powerToWeight/latest/${t}`;
							(n += i ? `?sport=${i}` : ''), yield (0, Ca.yJ)({ type: ee.zbY });
							const a = yield (0, Ca.T1)(Na.tI.get, n);
							yield (0, Ca.yJ)({ type: ee.s9q, powerToWeight: a.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.JE });
						}
					}),
				];
				const Fr = [
					(0, Ca.jP)(ee.YMu, function* (e) {
						try {
							const {
								payload: { startDate: t, endDate: i, aggregation: n, sport: a },
							} = e;
							yield (0, Ca.yJ)({ type: ee.BJj });
							const s = yield (0, Ca.T1)(
								Na.tI.get,
								`/biometric-service/stats/functionalThresholdPower/range/${t}/${i}`,
								{ params: { aggregation: n, ...('all' !== a && { sport: a }) } }
							);
							yield (0, Ca.yJ)({ type: ee.wSH, data: s.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.Zz5 });
						}
					}),
					(0, Ca.jP)(ee.Su6, function* (e) {
						try {
							const {
								payload: { startDate: t, endDate: i, aggregation: n, sport: a },
							} = e;
							yield (0, Ca.yJ)({ type: ee.fDb });
							const s = yield (0, Ca.T1)(
								Na.tI.get,
								`/biometric-service/stats/powerToWeight/range/${t}/${i}`,
								{ params: { aggregation: n, ...('all' !== a && { sport: a }) } }
							);
							yield (0, Ca.yJ)({ type: ee.QVw, data: s.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.D5I });
						}
					}),
				];
				const kr = [
					(0, Ca.jP)(ee.whv, function* (e) {
						try {
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/activity-service/activity/${e.activityId}/typedsplits`
							);
							yield (0, Ca.yJ)({ type: ee.o3$, typedSplits: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.JQO, typedSplits: [] });
						}
					}),
				];
				function* Ur() {
					try {
						yield (0, Ca.yJ)({ type: ee.nx4 });
						const e = yield (0, Ca.T1)(
							Na.tI.get,
							'/workout-service/benchmarks'
						);
						yield (0, Ca.yJ)({ type: ee.a8y, benchmarkExercisesData: e.data });
					} catch (e) {
						yield (0, Ca.yJ)({ type: ee.Fqw, benchmarkExercisesData: [] });
					}
				}
				const Mr = [
					(0, Ca.jP)(ee.gF2, Ur),
					(0, Ca.jP)(ee.gh$, function* (e) {
						const t = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.QKo }),
								yield (0, Ca.T1)(Na.tI.post, '/workout-service/benchmarks', t),
								yield (0, Ca.yJ)({ type: ee.yqw }),
								yield (0, Ca.T1)(Ur);
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.XnB });
						}
					}),
					(0, Ca.jP)(ee.IpZ, function* (e) {
						const t = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.jq6 }),
								yield (0, Ca.T1)(
									Na.tI.put,
									`/workout-service/benchmarks/${t.id}`,
									t
								),
								yield (0, Ca.yJ)({ type: ee.mqO }),
								yield (0, Ca.T1)(Ur);
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.hgz });
						}
					}),
					(0, Ca.jP)(ee.W30, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.dDV }),
								yield (0, Ca.T1)(
									Na.tI.delete,
									`/workout-service/benchmarks/${e.payload}`
								),
								yield (0, Ca.yJ)({ type: ee.Y8Y }),
								yield (0, Ca.T1)(Ur);
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.D4e });
						}
					}),
				];
				var Gr = i(44222);
				const xr = [
					(0, Ca.jP)(ee.AnI, function* (e) {
						try {
							let t;
							switch ((yield (0, Ca.yJ)({ type: ee.zj9 }), e.sportType)) {
								case Gr.yT.Pilates:
									t = 'Pilates';
									break;
								case Gr.yT.Yoga:
									t = 'Yoga';
									break;
								case Gr.yT.Strength_Training:
								case Gr.yT.Cardio:
								case Gr.yT.Hiit:
								default:
									t = 'Exercises';
							}
							const i = `/web-data/exercises/${t}.json`,
								n = yield (0, Ca.T1)(Ma().get, i, { baseURL: '/' });
							yield (0, Ca.yJ)({
								type: ee.GG2,
								exerciseTypesData: n.data,
								fullLocale: e.fullLocale,
								sportType: e.sportType,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.LdV, exerciseTypesData: {} });
						}
					}),
				];
				const Br = [
					(0, Ca.jP)(ee.QEz, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.H_v });
							const e = '/web-data/exercises/exerciseToEquipments.json',
								t = yield (0, Ca.T1)(Ma().get, e, { baseURL: '/' });
							yield (0, Ca.yJ)({ type: ee.oC0, exerciseEquimentsData: t.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.DwB, exerciseEquimentsData: {} });
						}
					}),
				];
				const Hr = [
					(0, Ca.jP)(ee.JD0, function* e(t) {
						const { locale: i, categoryKey: n, exerciseKey: a } = t.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.SOJ });
							const e = `/web-data/exercises/${i}/${n}/${a}.json`,
								t = yield (0, Ca.T1)(Ma().get, e, { baseURL: '/' }),
								s = {
									...t.data,
									categoryKey: t.data.exerciseCategory,
									exerciseKey: t.data.exerciseName,
								};
							delete s.exerciseCategory,
								delete s.exerciseName,
								yield (0, Ca.yJ)({
									type: ee.gSB,
									exerciseData: s,
									receivedAt: Date.now(),
								});
						} catch (s) {
							'en-US' !== i &&
								(yield (0, Ca.T1)(e, {
									payload: { locale: 'en-US', categoryKey: n, exerciseKey: a },
								}));
						}
					}),
				];
				var Vr = i(42821);
				const Wr = [
					(0, Ca.jP)(Vr.s2, function* (e) {
						try {
							const t = `/gcs-golfcommunity/api/v2/player/profile${(0, Sa.zJ)({ displayName: e.displayName })}`,
								i = yield (0, Ca.T1)(Na.b0.get, t);
							yield (0, Ca.yJ)({
								type: Vr.k_,
								golfProfile: i.data,
								displayName: e.displayName,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: Vr.Py, golfProfile: {} });
						}
					}),
				];
				const Jr = [
						(0, Ca.jP)(ee.kpd, function* () {
							try {
								yield (0, Ca.yJ)({ type: ee.Lvd });
								const e = yield (0, Ca.T1)(
									Na.tI.get,
									'/system-service/timezoneUnits'
								);
								yield (0, Ca.yJ)({ type: ee.UX4, timezones: e.data });
							} catch (e) {
								yield (0, Ca.yJ)({ type: ee.RS8, timezones: null });
							}
						}),
					],
					Yr = new Ja.A();
				const $r = [
					(0, Ca.jP)(ee.e0q, function* (e) {
						const { shareableEventUuid: t, callback: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.pkM });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/calendar-service/event/${t}/shareable`
							);
							yield (0, Ca.yJ)({ type: ee.e0n, event: e.data }),
								i && (yield (0, Ca.T1)(fa.G, i, e));
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.bNV, event: null }),
								i && (yield (0, Ca.T1)(fa.j, i, n));
						}
					}),
					(0, Ca.jP)(ee.yU1, function* (e) {
						const {
							startDate: t,
							endDate: i,
							eventType: n,
							pageIndex: a,
							limit: s,
							sort: r,
							callback: o,
						} = e;
						let l = {
							startDate: t,
							endDate: i,
							eventType: n,
							pageIndex: a,
							limit: s,
							sortOrder: r,
						};
						try {
							yield (0, Ca.yJ)({ type: ee.ztF });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/calendar-service/events${Yr.convertObjectToQueryString(l)}`
							);
							yield (0, Ca.yJ)({ type: ee.I$f, events: e.data }),
								yield (0, Ca.T1)(fa.G, o, e);
						} catch (c) {
							yield (0, Ca.yJ)({ type: ee.b9T, events: null }),
								yield (0, Ca.T1)(fa.j, o, c);
						}
					}),
					(0, Ca.jP)(ee.pld, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.Y$2 });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/calendar-service/race-events/providers'
							);
							yield (0, Ca.yJ)({ type: ee.fGZ, providers: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.MNr, providers: [] });
						}
					}),
				];
				const jr = [
					(0, Ca.jP)(ee.mKP, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.LnP });
							const e = yield (0, Ca.T1)(
								Ma().get,
								'/web-data/exercises/muscle_mapping.json',
								{ baseURL: '/' }
							);
							yield (0, Ca.yJ)({ type: ee.M1f, muscleMappingModel: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.f9c, muscleMappingModel: {} });
						}
					}),
				];
				const Kr = [
					(0, Ca.jP)(ee.MBc, function* (e) {
						const {
							start: t,
							limit: i,
							myWorkoutsOnly: n,
							sharedWorkoutsOnly: a,
							workoutProvider: s,
						} = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.JQj });
							let e = `/workout-service/workouts?start=${t}&limit=${i}&myWorkoutsOnly=${n}&sharedWorkoutsOnly=${a}`;
							s && (e += `&workoutProvider=${s}`);
							const r = yield (0, Ca.T1)(Na.tI.get, e);
							yield (0, Ca.yJ)({
								type: ee.vol,
								workouts: r.data,
								receivedAt: Date.now(),
							});
						} catch (r) {}
					}),
					(0, Ca.jP)(ee.Qu, function* e(t) {
						const { locale: i } = t.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.fYC });
							const e = `/web-data/workouts/${i}/index.json`,
								t = yield (0, Ca.T1)(Ma().get, e, { baseURL: '/' });
							yield (0, Ca.yJ)({
								type: ee.lEv,
								workouts: t.data.workouts,
								bodyParts: t.data.bodyParts,
								primaryMuscles: t.data.primaryMuscles,
								goals: t.data.goals,
								difficultyMapper: t.data.difficulty,
								equipment: t.data.equipment,
								receivedAt: Date.now(),
							});
						} catch (n) {
							'en-US' !== i &&
								(yield (0, Ca.T1)(e, { payload: { locale: 'en-US' } }));
						}
					}),
				];
				var zr = i(379334);
				const qr = [
					(0, Ca.jP)(zr.JX, function* (e) {
						try {
							const t = `/gcs-golfcommunity/api/v2/scorecard/summary${(0, Sa.zJ)({ ...(e.connectionDisplayName && { connectionDisplayName: e.connectionDisplayName }), 'user-locale': e.userLocale, 'per-page': 1e4 })}`,
								i = yield (0, Ca.T1)(Na.b0.get, t);
							yield (0, Ca.yJ)({
								type: zr.BR,
								connectionDisplayName: e.connectionDisplayName,
								displayName: e.displayName,
								scorecardSummaries: i.data.scorecardSummaries || [],
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: zr.k1, scorecardSummaries: [] });
						}
					}),
					(0, Ca.jP)(zr.tg, function* (e) {
						try {
							var t, i;
							yield (0, Ca.yJ)({ type: zr.wc });
							const n = `/gcs-golfcommunity/api/v2/scorecard/detail${(0, Sa.zJ)({ 'scorecard-ids': e.scorecardId, 'include-next-previous-ids': !0, 'user-locale': e.locale, 'include-longest-shot-distance': !0 })}`,
								a = yield (0, Ca.T1)(Na.b0.get, n);
							yield (0, Ca.yJ)({
								type: zr.XZ,
								scorecardId: e.scorecardId,
								scorecardDetail:
									null !== (t = a.data.scorecardDetails) &&
									void 0 !== t &&
									t.length
										? a.data.scorecardDetails[0]
										: {},
							}),
								null !== (i = a.data.courseSnapshots) &&
									void 0 !== i &&
									i.length &&
									(yield (0, Ca.yJ)({
										type: cr.Ub,
										golfCourse: a.data.courseSnapshots[0],
									}));
						} catch (n) {
							yield (0, Ca.yJ)({ type: zr.sy });
						}
					}),
					(0, Ca.jP)(zr.bi, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: zr.oD });
							const t = `/gcs-golfcommunity/api/v2/scorecard/${e.scorecardId}`,
								i = yield (0, Ca.T1)(Na.b0.get, t);
							yield (0, Ca.yJ)({ type: zr.fO, scorecard: i.data });
						} catch (i) {
							var t;
							yield (0, Ca.yJ)({
								type: zr.Yn,
								status:
									null === (t = i.response) || void 0 === t ? void 0 : t.status,
							});
						}
					}),
					(0, Ca.jP)(zr.wi, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: zr.Z });
							const t = `/gcs-golfcommunity/api/v2/scorecard/${e.scorecardId}`,
								i = e.patches,
								n = {
									headers: {
										'json-response-body': !1,
										'Content-Type': 'application/json-patch+json',
									},
								};
							yield (0, Ca.T1)(Na.b0.patch, t, i, n);
							yield (0, Ca.yJ)({ type: zr.KV });
						} catch (t) {
							yield (0, Ca.yJ)({ type: zr.RD });
						}
					}),
					(0, Ca.jP)(zr.Kk, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: zr.d6 });
							const t = `/gcs-golfcommunity/api/v2/scorecard/${e.scorecardId}`;
							yield (0, Ca.T1)(Na.b0.delete, t);
							yield (0, Ca.yJ)({ type: zr.eU, scorecardId: e.scorecardId });
						} catch (t) {
							yield (0, Ca.yJ)({ type: zr.b1 });
						}
					}),
				];
				const Qr = [
					(0, Ca.jP)(ee.jY4, function* (e) {
						const {
							reportCategory: t,
							fromDate: i,
							toDate: n,
							locale: a,
							dateFormat: s,
						} = e;
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.post,
								`/reportexport-service/export/init/${t}/${i}/${n}?locale=${a}`,
								{
									reportSubCategory: 'string',
									reportFormat: 'PDF',
									contentToSkip: ['string'],
									requestedDateFormatKey: s,
								}
							);
							yield (0, Ca.yJ)({ type: ee.pt_, exportReport: e.data });
						} catch (r) {
							yield (0, Ca.yJ)({ type: ee.OYM, exportReport: null });
						}
					}),
					(0, Ca.jP)(ee.amc, function* (e) {
						const { reportId: t } = e;
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/reportexport-service/export/reportStatus/${t}`
							);
							yield (0, Ca.yJ)({ type: ee.kPp, reportStatus: e.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.J_v, reportStatus: null });
						}
					}),
				];
				function* Xr(e) {
					try {
						yield (0, Ca.yJ)({ type: ee.Bl6 });
						const { startTimestamp: t, activityUuid: i } = e.payload,
							n = yield (0, Ca.T1)(
								Na.tI.get,
								`/wellnessactivity-service/activity/relative/${t}`
							);
						yield (0, Ca.yJ)({
							type: ee.MpV,
							data: n.data || [],
							payload: { activityUuid: i },
						});
					} catch (t) {
						yield (0, Ca.yJ)({ type: ee.bru });
					}
				}
				const Zr = [
					(0, Ca.jP)(ee.QDy, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.Tqm });
							const { startIndex: t, count: i } = e.payload,
								n = as.Ay.formatISODate(new Date()),
								a = yield (0, Ca.T1)(
									Na.tI.get,
									`/wellnessactivity-service/activity/summary/list?limit=${i}&start=${t}&until=${n}`
								);
							yield (0, Ca.yJ)({
								type: ee.UZq,
								data: a.data || [],
								startIndex: t,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.Rs7 });
						}
					}),
					(0, Ca.jP)(ee.f_j, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.GmR });
							const { fromDate: t, untilDate: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`/wellnessactivity-service/activity/summary/range/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: ee.F1P, data: n.data || [] });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.uM$ });
						}
					}),
					(0, Ca.jP)(ee.xQJ, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.mNn });
							const t = e.payload,
								i = yield (0, Ca.T1)(
									Na.tI.get,
									`/wellnessactivity-service/activity/summary/${t}`
								);
							yield (0, Ca.yJ)({
								type: ee.ZgL,
								data: i.data || [],
								calendarDate: t,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.SdF });
						}
					}),
					(0, Ca.jP)(ee.yqQ, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.NHy });
							const { calendarDate: t, snapshotId: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`/wellnessactivity-service/activity/summary/${t}/${i}`
								);
							if (
								(yield (0, Ca.yJ)({ type: ee.QXg, data: n.data || {} }), n.data)
							) {
								const { startTimestampLocal: e, activityUuid: t } = n.data;
								yield (0, Ca.T1)(Xr, {
									payload: { startTimestamp: e, activityUuid: t.uuid },
								});
							}
						} catch (t) {
							yield (0, Ca.yJ)({
								type: ee.DF3,
								data: t.response && t.response.data,
							});
						}
					}),
					(0, Ca.jP)(ee.il0, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.z3L });
							const { snapshotId: t } = e.payload,
								i = yield (0, Ca.T1)(
									Na.tI.get,
									`/wellnessactivity-service/activity/epoch/${t}`
								);
							yield (0, Ca.yJ)({ type: ee.ezn, data: i.data || {} });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.NXi });
						}
					}),
					(0, Ca.jP)(ee.mk7, Xr),
					(0, Ca.jP)(ee.$rY, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.OPe, payload: e.payload });
							const {
								activityUuid: t,
								activityName: i,
								calendarDate: n,
							} = e.payload;
							yield (0, Ca.T1)(
								Na.tI.patch,
								`/wellnessactivity-service/activity/${n}/${t}/name`,
								{ name: i }
							);
							yield (0, Ca.yJ)({
								type: ee.Tl$,
								payload: { activityUuid: t, activityName: i },
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.Gjn });
						}
					}),
					(0, Ca.jP)(ee.LoB, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.SAF, payload: e.payload });
							const { activityUuid: t, calendarDate: i } = e.payload;
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/wellnessactivity-service/activity/${i}/${t}`
							);
							yield (0, Ca.yJ)({ type: ee.Xkv, payload: t });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.s5P });
						}
					}),
					(0, Ca.jP)(ee.TAt, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.SIi, payload: e.payload });
							const {
								activityUuid: t,
								activityNote: i,
								calendarDate: n,
							} = e.payload;
							yield (0, Ca.T1)(
								Na.tI.patch,
								`/wellnessactivity-service/activity/${n}/${t}/notes`,
								{ notes: i }
							);
							yield (0, Ca.yJ)({
								type: ee.hHs,
								payload: { activityUuid: t, activityNote: i },
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.gd6 });
						}
					}),
				];
				const eo = [
					(0, Ca.jP)(ee.Sle, function* () {
						try {
							const e = yield (0, Ca.T1)(
								Ma().get,
								'/web-data/userprofile/biometric/bioRanges/ftpBioRanges.json',
								{ baseURL: '/' }
							);
							yield (0, Ca.yJ)({ type: ee.s2w, benchmarks: e.data });
						} catch (e) {}
					}),
				];
				var to = i(998317),
					io = i(919734);
				const no = [
					(0, Ca.jP)(ee.Erh, function* (e) {
						const {
							resourceType: t,
							resourceId: i,
							start: n,
							limit: a,
							connectionStatusIncluded: s,
						} = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.hY0 });
							let e = `conversation-service/conversation/likes/${t}/${i}`;
							'undefined' != typeof n &&
								'undefined' != typeof a &&
								'undefined' != typeof s &&
								(e += `?start=${n}&limit=${a}&connectionStatusIncluded=${s}`);
							const r = yield (0, Ca.T1)(Na.tI.get, e);
							yield (0, Ca.yJ)({
								type: ee.Hwy,
								data: r.data,
								receivedAt: Date.now(),
								resourceId: i,
							});
						} catch (r) {
							console.log(r);
						}
					}),
					(0, Ca.jP)(
						ee._DY,
						function* ({
							resourceType: e,
							resourceId: t,
							start: i = 1,
							limit: n = 10,
						}) {
							try {
								yield (0, Ca.yJ)((0, va.EL7)(t));
								const a = yield Na.tI.get(
									`/conversation-service/conversation/comments/${e}/${t}?start=${i}&limit=${n}`
								);
								yield (0, Ca.yJ)((0, va.sF3)(a.data, t));
							} catch (a) {
								yield (0, Ca.yJ)((0, va.ogM)(t));
							}
						}
					),
					(0, Ca.jP)(ee.rK5, function* ({ resourceType: e, resourceId: t }) {
						try {
							yield (0, Ca.yJ)((0, va.NAm)());
							const i = yield Na.tI.get(
								`/conversation-service/conversation/${e}/${t}`
							);
							i.data.conversationUuid
								? yield (0, Ca.yJ)((0, va.Fok)(i.data, t))
								: yield (0, Ca.yJ)((0, va.Kgd)(e, t, i.data));
						} catch (i) {}
					}),
					(0, Ca.jP)(
						ee.Vfm,
						function* ({ resourceType: e, resourceId: t, data: i }) {
							try {
								const n = yield Na.tI.post(
									`/conversation-service/conversation/${e}/${t}`,
									i
								);
								yield (0, Ca.yJ)((0, va.Fok)(n.data, t));
							} catch (n) {}
						}
					),
					(0, Ca.jP)(ee.Wlf, function* ({ conversationCommentUuid: e }) {
						try {
							yield (0, Ca.yJ)((0, va.bju)());
							const t = yield Na.tI.get(
								`/conversation-service/conversation/comment/likes/${e}`
							);
							yield (0, Ca.yJ)((0, va.NiV)(t.data, e));
						} catch (t) {}
					}),
					(0, Ca.jP)(
						ee.z_l,
						function* ({
							resourceId: e,
							resourceType: t,
							data: i,
							shouldFetchComments: n,
						}) {
							try {
								const a = yield Na.tI.post(
									`/conversation-service/conversation/comment/${i.conversationUuid}/${i.conversationCommentUuid}`,
									i
								);
								n || (yield (0, Ca.yJ)((0, va.wzx)(a.data, e))),
									yield (0, Ca.yJ)((0, va.opp)(e, !0)),
									n && (yield (0, Ca.yJ)((0, va.p4c)(t, e))),
									yield (0, Ca.yJ)((0, va.ike)(t, e)),
									yield (0, Ca.yJ)((0, va.b5Q)(e, t, i));
							} catch (a) {
								a.response && 429 === a.response.status
									? (yield (0, Ca.yJ)((0, va.b5Q)(e, t, i, 'limit')),
										yield (0, Ca.yJ)(
											(0, va.j0T)({ open: !0, errorType: 'comment' })
										),
										yield (0, Ca.yJ)((0, va.EIu)(!1)))
									: (yield (0, Ca.yJ)((0, va.b5Q)(e, t, i, !0)),
										yield (0, Ca.yJ)((0, va.EIu)(!0)));
							}
						}
					),
					(0, Ca.jP)(
						ee.LK3,
						function* ({ userGroupPk: e, resourceType: t, resourceId: i }) {
							try {
								yield (0, Ca.yJ)((0, va.kuu)());
								const n = yield Na.tI.get(
									`/conversation-service/conversation/${e}/${t}/${i}`
								);
								n.data.conversationUuid
									? yield (0, Ca.yJ)((0, va.Ugl)(n.data, i))
									: yield (0, Ca.yJ)((0, va.RwZ)(e, t, i, n.data));
							} catch (n) {}
						}
					),
					(0, Ca.jP)(
						ee.PmV,
						function* ({
							userGroupPk: e,
							resourceType: t,
							resourceId: i,
							data: n,
						}) {
							try {
								const a = yield Na.tI.post(
									`/conversation-service/conversation/${e}/${t}/${i}`,
									n
								);
								yield (0, Ca.yJ)((0, va.Ugl)(a.data, i));
							} catch (a) {}
						}
					),
					(0, Ca.jP)(
						ee.umi,
						function* ({ resourceType: e, resourceId: t, data: i }) {
							try {
								yield Na.tI.post(
									`/conversation-service/conversation/comment/like/${i.conversationCommentUuid}`,
									i
								);
								yield (0, Ca.yJ)((0, va.tWn)(t, i.conversationCommentUuid, !0)),
									yield (0, Ca.yJ)((0, va.Sul)(i.conversationCommentUuid));
							} catch (n) {
								n.response &&
									429 === n.response.status &&
									(yield (0, Ca.yJ)(
										(0, va.j0T)({ open: !0, errorType: 'like' })
									));
							}
						}
					),
					(0, Ca.jP)(
						ee.FvB,
						function* ({
							resourceType: e,
							resourceId: t,
							conversationCommentUuid: i,
						}) {
							try {
								yield Na.tI.delete(
									`/conversation-service/conversation/comment/like/${i}/0`
								);
								yield (0, Ca.yJ)((0, va.tWn)(t, i, !1)),
									yield (0, Ca.yJ)((0, va.Sul)(i));
							} catch (n) {}
						}
					),
					(0, Ca.jP)(
						ee.eG0,
						function* ({
							resourceType: e,
							resourceId: t,
							conversationUuid: i,
						}) {
							try {
								yield Na.tI.post(
									`/conversation-service/conversation/like/${i}`,
									{ conversationUuid: t }
								);
								yield (0, Ca.yJ)((0, va.ike)(e, t)),
									yield (0, Ca.yJ)((0, to.i)(t, e));
							} catch (n) {
								n.response &&
									429 === n.response.status &&
									(yield (0, Ca.yJ)(
										(0, va.j0T)({ open: !0, errorType: 'like' })
									));
							}
						}
					),
					(0, Ca.jP)(
						ee.$ts,
						function* ({
							resourceType: e,
							resourceId: t,
							conversationUuid: i,
						}) {
							try {
								yield Na.tI.delete(
									`/conversation-service/conversation/like/${i}/0`
								);
								yield (0, Ca.yJ)((0, va.ike)(e, t)),
									yield (0, Ca.yJ)((0, to.i)(t, e));
							} catch (n) {}
						}
					),
					(0, Ca.jP)(
						ee.amQ,
						function* ({
							userGroupPk: e,
							resourceType: t,
							resourceId: i,
							conversationUuid: n,
						}) {
							try {
								yield Na.tI.post(
									`/conversation-service/conversation/like/${n}`,
									{ conversationUuid: i }
								);
								yield (0, Ca.yJ)((0, va.Z0H)(e, t, i)),
									yield (0, Ca.yJ)((0, io.j)(e, i, t));
							} catch (a) {
								a.response &&
									429 === a.response.status &&
									(yield (0, Ca.yJ)(
										(0, va.j0T)({ open: !0, errorType: 'like', isGroup: !0 })
									));
							}
						}
					),
					(0, Ca.jP)(
						ee.n5m,
						function* ({
							userGroupPk: e,
							resourceType: t,
							resourceId: i,
							conversationUuid: n,
						}) {
							try {
								yield Na.tI.delete(
									`/conversation-service/conversation/like/${n}/0`
								);
								yield (0, Ca.yJ)((0, va.Z0H)(e, t, i)),
									yield (0, Ca.yJ)((0, io.j)(e, i, t));
							} catch (a) {}
						}
					),
					(0, Ca.p8)(
						ee.i4R,
						function* ({ resourceType: e, resourceId: t, data: i }) {
							try {
								yield Na.tI.delete(
									`/conversation-service/conversation/comment/${i.conversationUuid}/${i.conversationCommentUuid}/${i.conversationCommentPk}`
								);
								yield (0, Ca.yJ)((0, va.BVh)(i, t)),
									yield (0, Ca.yJ)((0, va.opp)(t, !1)),
									yield (0, Ca.yJ)((0, va.ike)(e, t));
							} catch (n) {}
						}
					),
					(0, Ca.p8)(ee.WcL, function* ({ comment: e, resourceId: t }) {
						try {
							const i = yield Na.tI.put(
								`/conversation-service/conversation/comment/${e.conversationUuid}/${e.conversationCommentUuid}`,
								e
							);
							yield (0, Ca.yJ)((0, va.oWb)(i.data, t));
						} catch (i) {
							yield (0, Ca.yJ)((0, va.aQI)(e, t, i));
						}
					}),
				];
				const ao = [
					(0, Ca.jP)(ee.kHX, function* (e) {
						const {
							userGroupPk: t,
							resourceId: i,
							resourceType: n,
							start: a,
							limit: s,
							connectionStatusIncluded: r,
						} = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.Ll5 });
							let e = `conversation-service/conversation/likes/${t}/${n}/${i}`;
							'undefined' != typeof a &&
								'undefined' != typeof s &&
								'undefined' != typeof r &&
								(e += `?start=${a}&limit=${s}&connectionStatusIncluded=${r}`);
							const o = yield (0, Ca.T1)(Na.tI.get, e);
							yield (0, Ca.yJ)({
								type: ee.Jvz,
								data: o.data,
								receivedAt: Date.now(),
								resourceId: i,
							});
						} catch (o) {
							console.log(o);
						}
					}),
				];
				var so = i(950575),
					ro = i(250355),
					oo = i(895292);
				const lo = [
					'FLAGGED_FOR_REVIEW_BY_HUMAN',
					'FLAGGED_FOR_SECOND_REVIEW_BY_HUMAN',
				];
				const co = [
					(0, Ca.jP)(ee.MFy, function* (e) {
						const t = yield (0, Ca.Lt)((e) => e.newsFeedActivities.nextCursor);
						if (
							!(yield (0, Ca.Lt)(
								(e) => e.newsFeedActivities.activitiesFetching
							))
						)
							try {
								yield (0, Ca.yJ)({ type: ee.tlM }),
									yield (0, Ca.yJ)({ type: ee.QXx, hasError: !1 });
								const {
									reset: i,
									peopleFilter: n,
									activityTypeIdList: a,
								} = e.payload;
								let s = '/web-gateway/newsfeed?limit=10';
								!i && t && (s += `&cursor=${t}`),
									(s += `&ownerType=${n || 'ALL'}`),
									Array.isArray(a) &&
										a.forEach((e) => (s += `&parentActivityTypeId=${e}`));
								const r = yield (0, Ca.T1)(Na.tI.get, s);
								yield (0, Ca.yJ)({ type: ee.usX, data: r.data }),
									yield (0, Ca.yJ)({ type: ee.Kwd, data: r.data || [] });
							} catch (i) {
								yield (0, Ca.yJ)({ type: ee.p4H }),
									yield (0, Ca.yJ)({ type: ee.QXx, hasError: !0 });
							}
					}),
					(0, Ca.jP)(ee.E8C, function* (e) {
						const { accessControlRuleDTO: t, activityId: i } = e.payload;
						yield (0, Ca.yJ)({ type: ee.$J4, activityId: i }),
							yield (0, Ca.yJ)({ type: ee.QXx, hasError: !1 });
						try {
							yield (0, Ca.T1)(
								Na.tI.put,
								`/activity-service/activity/${i}`,
								e.payload
							),
								yield (0, Ca.yJ)({
									type: ee.sA8,
									accessControlRuleDTO: t,
									activityId: i,
								});
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.bSH }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !0 });
						}
					}),
					(0, Ca.jP)(ee.zR8, function* ({ activityId: e }) {
						try {
							(0, so.wn)();
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/web-gateway/newsfeed/${e}`
							);
							yield (0, Ca.yJ)({ type: ee.oge, data: t.data });
						} catch (t) {
							(0, so.lB)();
						}
					}),
					(0, Ca.jP)(ee.J$$, function* (e) {
						const { activityId: t } = e.payload;
						try {
							const e = 10,
								i =
									(yield (0, Ca.Lt)(
										(e) => e.newsFeedComments.comments[t] || []
									)).length + 1;
							yield (0, Ca.yJ)({ type: ee.kFk, activityId: t }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !1 });
							const n = yield (0, Ca.T1)(
								Na.tI.get,
								`/conversation-service/conversation/comments/ACTIVITY/${t}?start=${i}&limit=${e}`
							);
							yield (0, Ca.yJ)({ type: ee.HuV, data: n.data, activityId: t });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee._09, activityId: t }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !0 });
						}
					}),
					(0, Ca.jP)(ee.FQ0, function* (e) {
						const { data: t, activityId: i } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.QUe, activityId: i }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !1 });
							const e = yield (0, Ca.T1)(
								Na.tI.post,
								`/conversation-service/conversation/comment/ACTIVITY/${i}/null`,
								t
							);
							yield (0, Ca.yJ)({
								type: ee.HgN,
								payload: { addCount: !0, activityId: i },
							}),
								yield (0, Ca.yJ)({ type: ee.HvM, data: e.data, activityId: i });
						} catch (n) {
							const e = n.response && 429 === n.response.status;
							e &&
								(yield (0, Ca.yJ)(
									(0, ro.j)({ open: !0, errorType: 'comment' })
								)),
								yield (0, Ca.yJ)({
									type: ee.aHb,
									activityId: i,
									errorReachLimit: e,
								}),
								e || (yield (0, Ca.yJ)({ type: ee.QXx, hasError: !0 }));
						}
					}),
					(0, Ca.jP)(ee.ANZ, function* (e) {
						const {
							data: t,
							activityId: i,
							conversationUuid: n,
							conversationCommentUuid: a,
						} = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.PeN, conversationCommentUuid: a }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !1 });
							const e = yield (0, Ca.T1)(
								Na.tI.put,
								`/conversation-service/conversation/comment/${n}/${a}`,
								t
							);
							yield (0, Ca.yJ)({
								type: ee.uyD,
								data: e.data,
								activityId: i,
								conversationCommentUuid: a,
							});
						} catch (s) {
							yield (0, Ca.yJ)({ type: ee.bl$, conversationCommentUuid: a }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !0 });
						}
					}),
					(0, Ca.jP)(ee.yi2, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.RJp }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !1 });
							const {
								conversationUuid: t,
								conversationCommentUuid: i,
								conversationCommentPk: n,
								activityId: a,
							} = e.payload;
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/conversation-service/conversation/comment/${t}/${i}/${n}`
							),
								yield (0, Ca.yJ)({
									type: ee.HgN,
									payload: { addCount: !1, activityId: a },
								}),
								yield (0, Ca.yJ)({
									type: ee.yeF,
									activityId: a,
									conversationCommentUuid: i,
								});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.T$R }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !0 });
						}
					}),
					(0, Ca.jP)(ee.ZR7, function* (e) {
						const { conversationCommentUuid: t, activityId: i } = e.payload;
						try {
							const e = yield (0, Ca.T1)(
									Na.tI.get,
									`/conversation-service/conversation/comment/likes/v2/${t}?start=1&limit=10&connectionStatusIncluded=true`
								),
								{ commentLikeList: n, numberOfLikes: a } = e.data;
							yield (0, Ca.yJ)({
								type: ee.r4R,
								activityId: i,
								commentUuid: t,
								likers: n.map((e) => ({
									fullName: e.fullName,
									displayName: e.displayName,
								})),
								numberOfLikes: a,
							});
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.WUz });
						}
					}),
					(0, Ca.jP)(ee.NMB, function* (e) {
						const {
							resourceId: t,
							start: i,
							limit: n,
							connectionStatusIncluded: a,
						} = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.kwX, reset: 1 === i }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !1 });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/conversation-service/conversation/likes/ACTIVITY/${t}?start=${i}&limit=${n}&connectionStatusIncluded=${a}`
							);
							yield (0, Ca.yJ)({ type: ee.TBF, data: e.data || [] });
						} catch (s) {
							yield (0, Ca.yJ)({ type: ee.aPE }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !0 });
						}
					}),
					(0, Ca.jP)(ee.Dbt, function* (e) {
						const {
							conversationCommentUuid: t,
							activityId: i,
							start: n,
							limit: a,
							connectionStatusIncluded: s,
							resourceType: r,
						} = e.payload;
						try {
							const e =
								'VIVOKID_ADHOC_CHALLENGE' === r ||
								'VIVOKID_TEAM_CHALLENGE' === r;
							let o;
							yield (0, Ca.yJ)({ type: ee.AYP, reset: 1 === n }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !1 }),
								(o = e
									? `/vivokidchallenge-service/conversation/comment/likes/${t}?start=${n}&limit=${a}`
									: `/conversation-service/conversation/comment/likes/v2/${t}?start=${n}&limit=${a}&connectionStatusIncluded=${s}`);
							const l = yield (0, Ca.T1)(Na.tI.get, o);
							let c;
							if (e) c = l.data;
							else {
								const { commentLikeList: e, numberOfLikes: n } = l.data;
								(c = e),
									i &&
										(yield (0, Ca.yJ)({
											type: ee.IO1,
											activityId: i,
											commentUuid: t,
											likers: e.map((e) => ({
												fullName: e.fullName,
												displayName: e.displayName,
											})),
											numberOfLikes: n,
										}));
							}
							yield (0, Ca.yJ)({ type: ee.dEu, data: c || [] });
						} catch (o) {
							yield (0, Ca.yJ)({ type: ee.OzG }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !0 });
						}
					}),
					(0, Ca.jP)(ee.Tvt, function* (e) {
						try {
							const { conversationCommentUuid: t, activityId: i } = e.payload;
							yield (0, Ca.yJ)({ type: ee.OXG, commentUuid: t }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !1 });
							const n = yield (0, Ca.T1)(
								Na.tI.post,
								`/conversation-service/conversation/comment/like/${t}`
							);
							(0, oo.Q)('Post Details', 'Like a comment'),
								yield (0, Ca.yJ)({ type: ee.RM7, commentUuid: t });
							const { fullName: a, displayName: s } = n.data;
							yield (0, Ca.yJ)({
								type: ee.DX5,
								payload: {
									activityId: i,
									conversationCommentUuid: t,
									likedByUser: !0,
									fullName: a,
									displayName: s,
								},
							});
						} catch (t) {
							const i = t.response && 429 === t.response.status;
							i &&
								(yield (0, Ca.yJ)((0, ro.j)({ open: !0, errorType: 'like' })));
							const { conversationCommentUuid: n } = e.payload;
							yield (0, Ca.yJ)({
								type: ee.iLS,
								commentUuid: n,
								errorReachLimit: i,
							}),
								i || (yield (0, Ca.yJ)({ type: ee.QXx, hasError: !0 }));
						}
					}),
					(0, Ca.jP)(ee.O3t, function* (e) {
						try {
							const {
								conversationCommentUuid: t,
								activityId: i,
								fullName: n,
								displayName: a,
							} = e.payload;
							yield (0, Ca.yJ)({ type: ee.FYX, commentUuid: t }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !1 }),
								yield (0, Ca.T1)(
									Na.tI.delete,
									`/conversation-service/conversation/comment/like/${t}/0`
								),
								(0, oo.Q)('Post Details', 'Unlike a comment'),
								yield (0, Ca.yJ)({ type: ee.SHX, commentUuid: t }),
								yield (0, Ca.yJ)({
									type: ee.DX5,
									payload: {
										activityId: i,
										conversationCommentUuid: t,
										likedByUser: !1,
										fullName: n,
										displayName: a,
									},
								});
						} catch (t) {
							const { conversationCommentUuid: i } = e.payload;
							yield (0, Ca.yJ)({ type: ee.vid, commentUuid: i }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !0 });
						}
					}),
					(0, Ca.jP)(ee.VDP, function* (e) {
						const { activityId: t, likerInfo: i } = e.payload;
						if (
							!(yield (0, Ca.Lt)(
								(e) => e.newsFeedActivities.conversationLikeUpdating
							))[t]
						)
							try {
								yield (0, Ca.yJ)({ type: ee.SS$, activityId: t }),
									yield (0, Ca.yJ)((0, so.wn)()),
									yield (0, Ca.T1)(
										Na.tI.post,
										`/conversation-service/conversation/like/ACTIVITY/${t}`
									),
									(0, oo.Q)('Post Details', 'Like a post'),
									yield (0, Ca.yJ)({
										type: ee.VFA,
										activityId: t,
										likerInfo: i,
									});
							} catch (n) {
								const e = n.response && 429 === n.response.status;
								e &&
									(yield (0, Ca.yJ)(
										(0, ro.j)({ open: !0, errorType: 'like' })
									)),
									yield (0, Ca.yJ)({ type: ee.mGT, activityId: t }),
									e || (yield (0, Ca.yJ)((0, so.lB)()));
							}
					}),
					(0, Ca.jP)(ee.WhI, function* (e) {
						const {
							activityId: t,
							conversationUuid: i,
							likerInfo: n,
						} = e.payload;
						if (
							!(yield (0, Ca.Lt)(
								(e) => e.newsFeedActivities.conversationLikeUpdating
							))[t]
						)
							try {
								yield (0, Ca.yJ)({ type: ee.bdI, activityId: t }),
									yield (0, Ca.yJ)((0, so.wn)()),
									yield (0, Ca.T1)(
										Na.tI.delete,
										`/conversation-service/conversation/like/${i}/0`
									),
									(0, oo.Q)('Post Details', 'Unlike a post'),
									yield (0, Ca.yJ)({
										type: ee.m1p,
										activityId: t,
										likerInfo: n,
									});
							} catch (a) {
								yield (0, Ca.yJ)({ type: ee.jMC, activityId: t }),
									yield (0, Ca.yJ)((0, so.lB)());
							}
					}),
					(0, Ca.jP)(ee.qz6, function* (e) {
						const { displayName: t } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.T34 }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !1 });
							const e = yield (0, Ca.T1)(
									Na.tI.get,
									`/userprofile-service/connection/profileStatus/${t}`
								),
								{ connectionRequestId: i } = e.data;
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/userprofile-service/connection/connectionRequest/${i}`
							),
								yield (0, Ca.yJ)({ type: ee.IZT, displayName: t }),
								yield (0, Ca.yJ)({ type: ee.SlF });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.FNg }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !0 });
						}
					}),
					(0, Ca.jP)(ee.hGj, function* (e) {
						const { displayName: t } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.iF0 }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !1 }),
								yield (0, Ca.T1)(
									Na.tI.post,
									`/connection-service/muteuser/${t}`
								),
								yield (0, Ca.yJ)({ type: ee.IZT, displayName: t }),
								yield (0, Ca.yJ)({ type: ee.r7y });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.Ii6 }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !0 });
						}
					}),
					(0, Ca.jP)(ee.wvx, function* (e) {
						const { displayName: t } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.DoA }),
								yield (0, Ca.T1)(
									Na.tI.delete,
									`/connection-service/muteuser/${t}`
								),
								yield (0, Ca.yJ)({ type: ee.OYy });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.zV0 });
						}
					}),
					(0, Ca.jP)(ee.R_Y, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.ahV });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/connection-service/muteuser'
							);
							yield (0, Ca.yJ)({
								type: ee.VAI,
								mutedConnectionList: e.data.mutedUserList,
							});
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.apb });
						}
					}),
					(0, Ca.jP)(ee.qC, function* () {
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/connection-service/connection/connections/count'
							);
							yield (0, Ca.yJ)({ type: ee.QXx, hasError: !1 }),
								yield (0, Ca.yJ)({ type: ee.kHG, connectionCount: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.jDP }),
								yield (0, Ca.yJ)({ type: ee.QXx, hasError: !0 });
						}
					}),
					(0, Ca.jP)(ee.bl, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.U0h });
							let t = '/usersearch-service/connection/suggestions';
							const i = yield (0, Ca.T1)(Na.tI.post, t, e.payload);
							yield (0, Ca.yJ)({ type: ee.pS7, data: i.data || [] });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.QgJ });
						}
					}),
					(0, Ca.jP)(ee.zKB, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.ArK });
							let t = '/usersearch-service/connection/suggestions/pagination';
							const i = yield (0, Ca.T1)(Na.tI.post, t, e.payload);
							yield (0, Ca.yJ)({ type: ee.NLO, data: i.data || [] });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.SgA });
						}
					}),
					(0, Ca.jP)(ee.ta0, function* (e) {
						try {
							let t = '/usersearch-service/connection/suggestions';
							const i = yield (0, Ca.T1)(Na.tI.post, t, e.payload);
							yield (0, Ca.yJ)({
								type: ee.TV$,
								count: i.data.profileList.length || 0,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.yrg });
						}
					}),
					(0, Ca.p8)(ee.ocE, function* (e) {
						const { flagReason: t, note: i } = e,
							n = yield (0, Ca.Lt)(Qi.EI),
							{ activityId: a, imageUuid: s } = n;
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.post,
								`/activity-service/activity/${a}/image/${s}/flag`,
								{ flagReason: t, referrerContext: 'GCWeb Activity', note: i }
							);
							yield (0, Ca.yJ)(
								(0, so.J4)({ reviewStatus: e.data.reviewStatus })
							),
								lo.includes(e.data.reviewStatus) &&
									(yield (0, Ca.yJ)((0, va.ASY)()),
									yield (0, Ca.yJ)(
										(0, so.px)({ activityId: a, imageUuid: s })
									));
						} catch (r) {
							r.response && 429 === r.response.status
								? yield (0, Ca.yJ)((0, so.J4)({ reviewStatus: 'REPORTED' }))
								: yield (0, Ca.yJ)(
										(0, so.J4)({ error: !0, reviewStatus: null })
									);
						}
					}),
				];
				const uo = [
					(0, Ca.jP)(ee.jJ0, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.WnG });
							const {
								metricId: t,
								startDate: i,
								endDate: n,
								userType: a,
								start: s,
								limit: r,
								actTypeId: o,
							} = e.payload;
							let l = `/userstats-service/leaderboard/${a}/connection?metricId=${t}&startDate=${i}&endDate=${n}&start=${s}&limit=${r}`;
							o && (l = l + '&actTypeId=' + o);
							const c = yield (0, Ca.T1)(Na.tI.get, l);
							yield (0, Ca.yJ)({ type: ee.nRW, data: c.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.c2A });
						}
					}),
				];
				const po = [
					(0, Ca.jP)(ee.pJP, function* (e) {
						const { notificationId: t, dismiss: i } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.UZ9, notificationId: t }),
								yield (0, Ca.T1)(
									Na.tI.put,
									`/notification-service/notification/${t}/dismiss/${i}`,
									e.payload
								),
								yield (0, Ca.yJ)({ type: ee.DKw, notificationId: t });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.uk0, notificationId: t });
						}
					}),
				];
				var yo = i(876802),
					ho = i(619123),
					go = i(394188),
					mo = i(129582),
					Ao = i(728407);
				const _o = (e) => {
					const t = {};
					e.symptoms && e.symptoms.length > 0 && (t.symptom = e.symptoms),
						e.resultTypes &&
							e.resultTypes.length > 0 &&
							(t.result = (0, go.Mb)(e.resultTypes));
					const { fromDate: i, toDate: n } = e.dates;
					return (
						(t.firstDay = i ? as.Ay.formatISODate(i) : ho.NM.startTimeOfEcg),
						(t.lastDay = n
							? as.Ay.formatISODate(n)
							: as.Ay.formatISODate(new Date())),
						(t.pageSize = ho.NM.pageSize),
						e.page && (t.page = e.page),
						(0, Sa.zJ)(t)
					);
				};
				function* Eo(e) {
					try {
						yield (0, Ca.yJ)({
							type: ee.HHK,
							loadingType: e.loadingType || ho.NM.loadingTypes.fetchInitial,
						});
						const {
								activeFilters: t,
								filterType: i,
								filterValue: n,
							} = e && e.payload ? e.payload : {},
							a = (0, go.fb)(t, i, n),
							s = _o(a),
							r = yield (0, Ca.T1)(Na.$j.get, `/ghs/ecg/v1/ecg/list${s}`);
						yield (0, Ca.yJ)({ type: ee.oao, data: r.data || [] });
					} catch (t) {
						yield (0, Ca.yJ)({
							type: ee.PWE,
							data: t.response && t.response.data,
						});
					}
				}
				function* To(e) {
					try {
						yield (0, Ca.yJ)({ type: ee.EbZ });
						const { startTime: t, detailId: i } = e.payload,
							n = yield (0, Ca.T1)(Na.$j.get, `ghs/ecg/v1/ecg/relative/${t}`),
							{ data: a } = n;
						yield (0, Ca.yJ)({
							type: ee.Fhv,
							data: { relativeRecordings: a || {}, detailId: i },
						});
					} catch (t) {
						yield (0, Ca.yJ)({ type: ee.YN3 });
					}
				}
				const Co = [
					(0, Ca.jP)(ee.Qkm, Eo),
					(0, Ca.jP)(ee.pPb, Eo),
					(0, Ca.jP)(ee.l1d, Eo),
					(0, Ca.jP)(ee._4C, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.JvZ });
							const { ecgId: t } = e.payload,
								i = yield (0, Ca.T1)(Na.$j.get, `ghs/ecg/v1/ecg/${t}`);
							yield (0, Ca.yJ)({ type: ee.eiq, data: i.data || {} }),
								i.data &&
									i.data.summary &&
									i.data.summary.detailId &&
									i.data.summary.startTime &&
									(yield (0, Ca.T1)(To, {
										payload: {
											detailId: i.data.summary.detailId,
											startTime: i.data.summary.startTime,
										},
									}));
						} catch (t) {
							yield (0, Ca.yJ)({
								type: ee.zVA,
								data: t.response && t.response.data,
							});
						}
					}),
					(0, Ca.jP)(ee.N5Q, To),
					(0, Ca.jP)(ee.SUq, function* (e) {
						try {
							yield (0, Ca.yJ)({
								type: ee.HHK,
								loadingType: e.payload.loadingType
									? e.payload.loadingType
									: ho.NM.loadingTypes.fetchMore,
							});
							const { activeFilters: t, nextToken: i } =
									e && e.payload ? e.payload : {},
								n = { ...t, page: i },
								a = _o(n),
								s = yield (0, Ca.T1)(
									Na.$j.get,
									`/ghs/ecg/v1/ecg/list/next${a}`
								);
							yield (0, Ca.yJ)({ type: ee.W8j, data: s.data || [] });
						} catch (t) {
							yield (0, Ca.yJ)({
								type: ee.PWE,
								data: t.response && t.response.data,
							});
						}
					}),
					(0, Ca.jP)(ee.mqt, function* (e) {
						try {
							const { ecgId: t } = e.payload;
							yield (0, Ca.yJ)({ type: ee.tH, payload: t }),
								yield (0, Ca.T1)(Na.$j.delete, `/ghs/ecg/v1/ecg/${t}`),
								yield (0, Ca.yJ)({ type: ee.A79, payload: t });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.hwF });
						}
					}),
					(0, Ca.jP)(ee.b5F, function* (e) {
						try {
							if ((0, mo.b)(Ao.jF, ar.A.get('userRoles'))) return;
							const { firstDay: t, lastDay: i, periodType: n } = e.payload;
							yield (0, Ca.yJ)({ type: ee.mzN, periodType: n });
							const a = yield (0, Ca.T1)(
								Na.$j.get,
								`/ghs/ecg/v1/ecg/daily?firstDay=${t}&lastDay=${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.xIf,
								data: a.data && a.data.content ? a.data.content : [],
								periodType: n,
							});
						} catch (t) {
							const { periodType: i } = e.payload;
							yield (0, Ca.yJ)({ type: ee.YqN, periodType: i });
						}
					}),
					(0, Ca.jP)(ee.zEi, function* (e) {
						try {
							if ((0, mo.b)(Ao.jF, ar.A.get('userRoles'))) return;
							if (
								'true' !==
								(yield (0, Ca.T1)(
									Na.tI.get,
									`/userpreference-service/${ho.Sh}`
								)).data.value
							)
								return;
							yield (0, Ca.yJ)({ type: ee.wTF });
							const t = e.payload,
								{ firstDay: i, lastDay: n } = e.payload,
								a = i || t,
								s = n || t,
								r = yield (0, Ca.T1)(
									Na.$j.get,
									`/ghs/ecg/v1/ecg/daily?firstDay=${a}&lastDay=${s}`
								);
							yield (0, Ca.yJ)({
								type: ee.p$4,
								data: r.data || [],
								calendarDate: t,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee._06 });
						}
					}),
					(0, Ca.jP)(ee.WOH, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.d7M });
							const { skuNumber: t } = e.payload,
								i = yield (0, Ca.T1)(
									Ma().post,
									'/asset-service/download-manifest/',
									{ skuNumber: t, appType: 'GCM', resolution: 720 }
								);
							yield (0, Ca.yJ)({ type: ee.M7I, data: i.data || {} });
						} catch (t) {
							yield (0, Ca.yJ)({
								type: ee.VW1,
								data: t.response && t.response.data,
							});
						}
					}),
				];
				var So = i(410682),
					Io = i(868622),
					vo = i(515321),
					fo = i(29273);
				const Do = new Ja.A(),
					No = (e) => {
						(e.includeInPerson = !1),
							(e.startDistance = null),
							(e.endDistance = null),
							(e.poiLat = null),
							(e.poiLon = null),
							(e.withinMeters = null);
					},
					Ro = (e) => {
						e.includeVirtual = !1;
					};
				const bo = [
					(0, Ca.jP)(So.CK, function* (e) {
						const t = new Io.A({ numberSeparator: fo.A.getNumberSeparator() });
						let { query: i, callback: n } = e;
						yield (0, Ca.yJ)({ type: So.H7 });
						try {
							'all' === i.eventType && (i.eventType = null);
							let e = {
								eventType: i.eventType,
								searchPhrase: i.searchPhrase,
								poiLat: i.poiLat,
								poiLon: i.poiLon,
								withinMeters: i.filterRadius,
								fromDate: i.fromDate,
								toDate: i.toDate,
								includeInPerson: i.includeInPerson,
								includeVirtual: i.includeVirtual,
								verifiedStatuses: i.verifiedStatuses,
								limit: 200,
							};
							i.eventsProviders && (e.eventsProviders = i.eventsProviders),
								i.startDistance
									? ((e.completionTargetMinValue = Math.floor(
											vo.A.convertDistance(
												t.parse('' + i.startDistance),
												i.unit,
												'meter'
											)
										)),
										(e.completionTargetMaxValue = Math.ceil(
											vo.A.convertDistance(
												t.parse('' + i.endDistance),
												i.unit,
												'meter'
											)
										)),
										(e.completionTargetDurationType = 'distance'))
									: i.startDurationInSeconds &&
										((e.completionTargetMinValue = i.startDurationInSeconds),
										(e.completionTargetMaxValue =
											i.endDurationInSeconds || 172800),
										(e.completionTargetDurationType = 'time')),
								('worldwide' !== i.filterRadius &&
									i.filterRadius &&
									i.poiLat &&
									i.poiLon) ||
									((e.poiLat = null),
									(e.poiLon = null),
									(e.withinMeters = null));
							let a = [e];
							if (e.includeVirtual && e.includeInPerson) {
								let t = { ...e };
								Ro(e), No(t), a.push(t);
							} else e.includeVirtual ? No(e) : e.includeInPerson && Ro(e);
							let s = yield (0, Ca.Q7)(
									a.map((e) =>
										(0, Ca.T1)(
											Na.tI.get,
											`/race-search/events${Do.convertObjectToQueryString(e)}`
										)
									)
								),
								r = [];
							s.forEach((e) => {
								e.data.forEach((e) => {
									e.completionTargets.length > 1
										? e.completionTargets.forEach((t) => {
												let i = { ...e };
												(i.completionTargets = [t]), r.push(i);
											})
										: 0 === e.completionTargets.length || r.push(e);
								});
							}),
								r.sort((e, t) => new Date(e.eventDate) - new Date(t.eventDate)),
								yield (0, Ca.yJ)({ type: So.AV, data: r }),
								yield (0, Ca.T1)(fa.G, n, { data: r });
						} catch (a) {
							yield (0, Ca.yJ)({ type: So.Be }), yield (0, Ca.T1)(fa.j, n, a);
						}
					}),
				];
				var Lo = i(96211);
				const Po = [
					(0, Ca.jP)(Lo.PL, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Lo.Sb });
							const { startDate: t, endDate: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`/usersummary-service/stats/steps/daily/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: Lo.JO, dailySteps: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Lo.Wl, dailySteps: null });
						}
					}),
					(0, Ca.jP)(Lo.BJ, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Lo.Ud });
							const { endDate: t, numWeeks: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`/usersummary-service/stats/steps/weekly/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: Lo.Fp, weeklySteps: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Lo.uC, weeklySteps: null });
						}
					}),
					(0, Ca.jP)(Lo.pc, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Lo.cY });
							const { endDate: t, numMonths: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`/usersummary-service/stats/steps/monthly/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: Lo.bf, monthlySteps: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Lo.qj, monthlySteps: null });
						}
					}),
				];
				var Oo = i(706670);
				const wo = [
					(0, Ca.jP)(Oo._d, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Oo.jE });
							const { startDate: t, endDate: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`/usersummary-service/stats/pushes/daily/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: Oo.G9, dailyPushes: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Oo.zG, dailyPushes: null });
						}
					}),
					(0, Ca.jP)(Oo.qO, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Oo.Dx });
							const { endDate: t, numWeeks: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`/usersummary-service/stats/pushes/weekly/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: Oo.A9, weeklyPushes: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Oo.L$, weeklyPushes: null });
						}
					}),
					(0, Ca.jP)(Oo.ci, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Oo.Nx });
							const { endDate: t, numMonths: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`/usersummary-service/stats/pushes/monthly/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: Oo.Gl, monthlyPushes: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Oo.vW, monthlyPushes: null });
						}
					}),
				];
				var Fo = i(617592),
					ko = i(211794);
				let Uo = [];
				Uo.push(
					(0, Ca.jP)(ee.CzN, function* () {
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/badge-service/badge/attributes'
							);
							yield (0, Ca.yJ)((0, ko.Y1)(e.data));
						} catch (e) {
							yield (0, Ca.yJ)((0, ko.mx)());
						}
					})
				),
					Uo.push(
						(0, Ca.jP)(ee.F1d, function* ({ displayName: e }) {
							try {
								const t = yield (0, Ca.T1)(
									Na.tI.get,
									`/badge-service/badge/earned/latest/${e}`
								);
								yield (0, Ca.yJ)((0, ko.cG)(t.data));
							} catch (t) {
								yield (0, Ca.yJ)((0, ko.sj)());
							}
						})
					),
					Uo.push(
						(0, Ca.jP)(ee.yKI, function* ({ start: e, limit: t }) {
							try {
								const i = yield (0, Ca.T1)(
									Na.tI.get,
									'/badge-service/badge/leaderboard',
									{ params: { start: e, limit: t || Fo.U } }
								);
								yield (0, Ca.yJ)((0, ko.$P)(i.data, !!e));
							} catch (i) {
								yield (0, Ca.yJ)((0, ko.lj)());
							}
						})
					),
					Uo.push(
						(0, Ca.jP)(
							ee.ToW,
							function* ({
								categoryId: e,
								difficultyId: t,
								start: i,
								limit: n,
							}) {
								try {
									const a = yield (0, Ca.T1)(
										Na.tI.get,
										'/badge-service/badge/available',
										{
											params: {
												categoryId: e,
												difficultyId: t,
												start: i,
												limit: n,
											},
										}
									);
									yield (0, Ca.yJ)((0, ko.L3)(a.data));
								} catch (a) {
									yield (0, Ca.yJ)((0, ko.zM)());
								}
							}
						)
					),
					Uo.push(
						(0, Ca.jP)(
							ee.fIj,
							function* ({
								displayName: e,
								categoryId: t,
								difficultyId: i,
								start: n,
								limit: a,
							}) {
								try {
									const s = yield (0, Ca.T1)(
										Na.tI.get,
										`/badge-service/badge/compare/${e}`,
										{
											params: {
												categoryId: t,
												difficultyId: i,
												start: n,
												limit: a,
											},
										}
									);
									yield (0, Ca.yJ)((0, ko.Zj)(s.data));
								} catch (s) {
									yield (0, Ca.yJ)((0, ko.LT)());
								}
							}
						)
					),
					Uo.push(
						(0, Ca.jP)(ee.Gv3, function* ({ badgeIds: e }) {
							try {
								const t = yield (0, Ca.T1)(
									Na.tI.put,
									'/badge-service/badge/badgesviewed',
									e
								);
								yield (0, Ca.yJ)((0, ko.WK)(t.data));
							} catch (t) {}
						})
					),
					Uo.push(
						(0, Ca.jP)(ee.Ft_, function* ({ displayName: e, activityId: t }) {
							try {
								const i = yield (0, Ca.T1)(
									Na.tI.get,
									`/badge-service/badge/${e}/earned/activity/${t}`
								);
								yield (0, Ca.yJ)((0, ko.L4)(i.data));
							} catch (i) {
								yield (0, Ca.yJ)((0, ko.b5)());
							}
						})
					),
					Uo.push(
						(0, Ca.jP)(
							ee.xst,
							function* ({
								categoryId: e,
								difficultyId: t,
								start: i,
								limit: n,
							}) {
								try {
									const a = yield (0, Ca.T1)(
										Na.tI.get,
										'/badge-service/badge/earned',
										{
											params: {
												categoryId: e,
												difficultyId: t,
												start: i,
												limit: n,
											},
										}
									);
									yield (0, Ca.yJ)((0, ko.fj)(a.data));
								} catch (a) {
									yield (0, Ca.yJ)((0, ko.b6)());
								}
							}
						)
					),
					Uo.push(
						(0, Ca.jP)(ee.dWh, function* ({ displayName: e, calendarDate: t }) {
							try {
								const i = yield (0, Ca.T1)(
									Na.tI.get,
									`/badge-service/badge/${e}/earned/dailysummary/${t}`
								);
								yield (0, Ca.yJ)((0, ko.pq)(i.data));
							} catch (i) {
								yield (0, Ca.yJ)((0, ko.n2)());
							}
						})
					);
				const Mo = [
					'FLAGGED_FOR_REVIEW_BY_HUMAN',
					'FLAGGED_FOR_SECOND_REVIEW_BY_HUMAN',
				];
				const Go = [
					(0, Ca.jP)(ee.Du5, function* ({ displayName: e }) {
						try {
							yield (0, Ca.yJ)((0, va.tos)(e));
							const t = yield Na.tI.get(
								`/userprofile-service/socialProfile/public/${e}`
							);
							yield (0, Ca.yJ)((0, va.HXB)(e, t.data));
						} catch (t) {
							yield (0, Ca.yJ)((0, va.$Cf)(e));
						}
					}),
					(0, Ca.jP)(ee.EcZ, function* ({ displayName: e }) {
						try {
							yield (0, Ca.yJ)((0, va.lx7)(e));
							const t = yield Na.tI.get(
								`/userprofile-service/socialProfile/privacy/${e}`
							);
							yield (0, Ca.yJ)((0, va.HoD)(e, t.data));
						} catch (t) {
							yield (0, Ca.yJ)((0, va.rdW)(e));
						}
					}),
					(0, Ca.jP)(
						ee.T_f,
						function* ({ displayName: e, data: t, privacy: i }) {
							try {
								let n = { ...t, ...i };
								yield (0, Ca.yJ)((0, va.oDl)(e, n));
								const a = yield Na.tI.put(
									`/userprofile-service/socialProfile/privacy/${e}`,
									n
								);
								yield (0, Ca.yJ)((0, va.HoD)(e, a.data));
							} catch (n) {
								yield (0, Ca.yJ)((0, va.rdW)(e));
							}
						}
					),
					(0, Ca.jP)(ee.hAT, function* ({ displayName: e }) {
						try {
							yield (0, Ca.yJ)((0, va.rbQ)(e));
							const t = yield Na.tI.get(
								`/userprofile-service/connection/profileStatus/${e}?displayMutedStatus=true`
							);
							yield (0, Ca.yJ)((0, va.jLs)(e, t.data));
						} catch (t) {
							yield (0, Ca.yJ)((0, va.za0)(e));
						}
					}),
					(0, Ca.jP)(
						ee.mxT,
						function* ({ displayName: e, fetchStatus: t, callback: i }) {
							try {
								const n = yield Na.tI.put(
									`/connection-service/connection/request/${e}`
								);
								t && (yield (0, Ca.yJ)((0, va.wse)(e))),
									yield (0, Ca.T1)(fa.G, i, n);
							} catch (n) {
								yield (0, Ca.T1)(fa.j, i, n);
							}
						}
					),
					(0, Ca.jP)(ee.fMB, function* () {
						try {
							yield (0, Ca.yJ)((0, va.axx)());
							const e = yield Na.tI.get(
								'/userprofile-service/connection/pending'
							);
							yield (0, Ca.yJ)((0, va.EsO)(e.data));
						} catch (e) {}
					}),
					(0, Ca.jP)(
						ee.WI1,
						function* ({
							connectionRequestId: e,
							displayName: t,
							fetchStatus: i,
							callback: n,
						}) {
							try {
								const a = yield Na.tI.put(
									`/connection-service/connection/accept/${e}`
								);
								i && (yield (0, Ca.yJ)((0, va.wse)(t))),
									yield (0, Ca.T1)(fa.G, n, a);
							} catch (a) {
								yield (0, Ca.T1)(fa.j, n, a);
							}
						}
					),
					(0, Ca.jP)(
						ee.K8y,
						function* ({
							connectionRequestId: e,
							displayName: t,
							callback: i,
						}) {
							try {
								const n = yield Na.tI.put(
									`/userprofile-service/connection/decline/${e}`
								);
								yield (0, Ca.yJ)((0, va.wse)(t)), yield (0, Ca.T1)(fa.G, i, n);
							} catch (n) {}
						}
					),
					(0, Ca.jP)(
						ee.uWG,
						function* ({ connectionRequestId: e, displayName: t }) {
							try {
								yield Na.tI.put(`/userprofile-service/connection/end/${e}`);
								yield (0, Ca.yJ)((0, va.wse)(t));
							} catch (i) {}
						}
					),
					(0, Ca.jP)(ee.fvB, function* ({ displayName: e }) {
						try {
							yield Na.tI.put(`/userprofile-service/connection/follow/${e}`);
							yield (0, Ca.yJ)((0, va.wse)(e));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.Q50, function* ({ displayName: e }) {
						try {
							yield Na.tI.put(`/userprofile-service/connection/unfollow/${e}`);
							yield (0, Ca.yJ)((0, va.wse)(e));
						} catch (t) {}
					}),
					(0, Ca.jP)(
						ee.ka5,
						function* ({ connectionRequestId: e, displayName: t }) {
							try {
								yield Na.tI.delete(
									`/userprofile-service/connection/connectionRequest/${e}`
								);
								yield (0, Ca.yJ)((0, va.wse)(t));
							} catch (i) {}
						}
					),
					(0, Ca.jP)(ee.Ohr, function* ({ displayName: e }) {
						try {
							yield Na.tI.post(`/userblock-service/blockuser/${e}`);
							yield (0, Ca.yJ)((0, va.wse)(e));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.HP9, function* ({ displayName: e }) {
						try {
							yield Na.tI.delete(`/userblock-service/blockuser/${e}`);
							yield (0, Ca.yJ)((0, va.wse)(e));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.pyP, function* ({ displayName: e }) {
						try {
							yield (0, Ca.yJ)((0, va.dw2)());
							const t = yield Na.tI.get(
								`/userprofile-service/userprofile/personal-information/${e}`
							);
							yield (0, Ca.yJ)((0, va.vte)(t.data));
						} catch (t) {
							yield (0, Ca.yJ)((0, va.jOk)());
						}
					}),
					(0, Ca.jP)(ee.fP9, function* ({ displayName: e, startIndex: t }) {
						try {
							yield (0, Ca.yJ)((0, va.lss)(e));
							const i = yield Na.tI.get(
								`/usersummary-service/usersummary/dailySummaryViews/${e}?start=${t || 1}&limit=10`
							);
							yield (0, Ca.yJ)((0, va.dM1)(i.data));
						} catch (i) {
							yield (0, Ca.yJ)((0, va.bgo)());
						}
					}),
					(0, Ca.p8)(ee.NJl, function* (e) {
						const { displayName: t, flagReason: i, note: n } = e,
							a = yield (0, Ca.Lt)(ne.GW);
						yield (0, Ca.yJ)((0, va.fvW)({ ...a, submitting: !0 }));
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.post,
								`/userprofile-service/socialProfile/${t}/image/flag`,
								{
									flagReason: i,
									referrerContext: 'GCWeb User Profile',
									note: n,
								}
							);
							if (
								(yield (0, Ca.yJ)(
									(0, va.fvW)({
										...a,
										reviewStatus: e.data.reviewStatus,
										submitting: !1,
									})
								),
								Mo.includes(e.data.reviewStatus))
							) {
								const e = yield (0, Ca.Lt)(l.CL, t),
									i = yield (0, Ca.Lt)(c.Kg, t);
								yield (0, Ca.yJ)(
									(0, va.HXB)(t, {
										...e,
										profileImageUrlLarge: null,
										profileImageUrlMedium: null,
										profileImageUrlSmall: null,
										profileImageUuid: null,
									})
								),
									yield (0, Ca.yJ)({
										type: ee.FWo,
										profile: {
											...i,
											profileImageUrlLarge: null,
											profileImageUrlMedium: null,
											profileImageUrlSmall: null,
											profileImageUuid: null,
										},
										displayName: t,
									}),
									yield (0, Ca.yJ)({ type: ee.DV8, displayName: t }),
									yield (0, Ca.yJ)({ type: ee.BLT, displayName: t });
							}
						} catch (s) {
							s.response && 429 === s.response.status
								? yield (0, Ca.yJ)(
										(0, va.fvW)({
											...a,
											reviewStatus: 'REPORTED',
											submitting: !1,
										})
									)
								: yield (0, Ca.yJ)((0, va.fvW)({ ...a, submitting: !1 }));
						}
					}),
					(0, Ca.jP)(ee.EiT, function* ({}) {
						try {
							yield (0, Ca.yJ)((0, Ia.bX)()),
								yield (0, Ca.yJ)((0, va.tWq)()),
								yield (0, Ca.yJ)((0, va.Th$)()),
								yield (0, Ca.yJ)((0, va.TxS)()),
								yield (0, Ca.yJ)((0, va.gyK)()),
								yield (0, Ca.yJ)((0, va.dRW)()),
								yield (0, Ca.yJ)((0, va.J3B)()),
								yield (0, Ca.yJ)((0, va.vNZ)()),
								yield (0, Ca.yJ)((0, va.lv)()),
								yield (0, Ca.yJ)((0, va.ASY)()),
								yield (0, Ca.yJ)((0, va.v1g)()),
								yield (0, Ca.yJ)((0, va.f2H)()),
								yield (0, Ca.yJ)((0, va.$d4)()),
								yield (0, Ca.yJ)((0, va.nCm)()),
								yield (0, Ca.yJ)((0, va.crS)()),
								yield (0, Ca.yJ)((0, va.lDf)()),
								yield (0, Ca.yJ)((0, va.Nbq)()),
								yield (0, Ca.yJ)((0, va.bKE)()),
								yield (0, Ca.yJ)((0, va.pjo)()),
								yield (0, Ca.yJ)((0, va.Any)()),
								yield (0, Ca.yJ)({ type: ee.cvz });
						} catch (e) {}
					}),
				];
				const xo = [
					(0, Ca.jP)(ee.nwg, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.MFJ });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/userblock-service/blockuser'
							);
							yield (0, Ca.yJ)({ type: ee.d7w, blockedUserList: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.QzT });
						}
					}),
					(0, Ca.jP)(ee.BvN, function* (e) {
						const { displayName: t } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.IrP }),
								yield (0, Ca.T1)(
									Na.tI.delete,
									`/userblock-service/blockuser/${t}`
								),
								yield (0, Ca.yJ)({ type: ee.LuW });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.YrR });
						}
					}),
				];
				const Bo = [
					(0, Ca.jP)(ee.Goe, function* (e) {
						const { displayName: t, calendarDate: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.ZaM });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`wellness-service/wellness/floorsChartData/daily/${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.Gg7,
								data: e.data,
								calendarDate: i,
								displayName: t,
							});
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.dyk,
								displayName: t,
								calendarDate: i,
								data: [],
							});
						}
					}),
				];
				const Ho = [
					(0, Ca.jP)(ee.Iuq, function* (e) {
						const { startDate: t, endDate: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.beK });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`usersummary-service/stats/floors/daily/${t}/${i}`
							);
							yield (0, Ca.yJ)({ type: ee.Ai6, data: e.data });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.VLF, data: [] });
						}
					}),
					(0, Ca.jP)(ee.Jce, function* (e) {
						const { endDate: t, numWeeks: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.ggo });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`usersummary-service/stats/floors/weekly/${t}/${i}`
							);
							yield (0, Ca.yJ)({ type: ee.F6R, data: e.data });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.KXX });
						}
					}),
				];
				var Vo = i(469612);
				const Wo = [
					(0, Ca.jP)(Vo.fP, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Vo.GT });
							const { startDate: t, endDate: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`/usersummary-service/stats/calories/daily/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: Vo.LN, dailyTotalCalories: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Vo.ed, dailyTotalCalories: null });
						}
					}),
					(0, Ca.jP)(Vo.Tm, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Vo.Oi });
							const { endDate: t, numWeeks: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`/usersummary-service/stats/calories/weekly/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: Vo.hp, weeklyTotalCalories: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Vo.gf, weeklyTotalCalories: null });
						}
					}),
				];
				const Jo = [
					(0, Ca.jP)(ee.dU2, function* (e) {
						const { calendarDate: t, context: i, key: n } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.wYd });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/metrics-service/metrics/trainingreadiness/${t}`
							);
							yield (0, Ca.yJ)({ type: ee.BuB, data: e.data, date: t, key: n });
						} catch (a) {
							yield (0, Ca.yJ)({
								type: ee.CPF,
								data: { errorMessage: a },
								date: t,
								key: n,
							});
						}
					}),
				];
				const Yo = [
					(0, Ca.jP)(ee.Uab, function* (e) {
						const { calendarDate: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.lgd });
							const { date: i } = e.payload,
								n = yield (0, Ca.T1)(Na.tI.get, `/hrv-service/hrv/${i}`);
							yield (0, Ca.yJ)({ type: ee.Iwi, data: n.data, calendarDate: t });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.D_$, data: {}, calendarDate: t });
						}
					}),
					(0, Ca.jP)(ee.BUZ, function* (e) {
						return null;
					}),
				];
				var $o = i(80879);
				function* jo({ calendarPreferences: e }) {
					yield (0, Ca.yJ)((0, Ha.EM)(e)),
						e.atpPlans &&
							e.atpPlans.length > 0 &&
							(yield (0, Ca.yJ)(
								(0, va.$76)(
									'AdaptiveTrainingPlan.Calendar.Preference',
									JSON.stringify(e.atpPlans)
								)
							));
					let t = Object.assign({}, e);
					'atpPlans' in t && delete t.atpPlans,
						yield (0, Ca.T1)(Ko, { calendarPreferences: e });
					try {
						yield Na.tI.put('/calendar-service/preferences', t);
					} catch (i) {}
				}
				function* Ko({ calendarPreferences: e }) {
					const t = yield (0, Ca.Lt)(F.Aj);
					((e.showWorkout || 'workout' !== t.content) &&
						(e.showGoal || 'goal' !== t.content)) ||
						(yield (0, Ca.yJ)((0, va.sjq)()));
				}
				const zo = [
					(0, Ca.jP)(ee.QdA, function* () {
						try {
							const e = yield Na.tI.get('/calendar-service/preferences');
							yield (0, Ca.yJ)((0, Ha.EM)(e.data));
						} catch (e) {}
					}),
					(0, Ca.jP)(ee.MoJ, jo),
					(0, Ca.jP)(
						ee.rkL,
						function* ({ content: e, date: t, editMode: i, data: n }) {
							const a = yield (0, Ca.Lt)(F.LR);
							a.showWorkout || 'workout' !== e
								? a.showGoal ||
									'goal' !== e ||
									(yield (0, Ca.yJ)(
										(0, Ha.oE)($o.Ay.t('calendar:calendar_filter_update_goals'))
									),
									yield (0, Ca.T1)(jo, {
										calendarPreferences: { ...a, showGoal: !0 },
									}))
								: (yield (0, Ca.yJ)(
										(0, Ha.oE)(
											$o.Ay.t('calendar:calendar_filter_update_workouts')
										)
									),
									yield (0, Ca.T1)(jo, {
										calendarPreferences: { ...a, showWorkout: !0 },
									}));
						}
					),
					(0, Ca.jP)(
						ee.AcC,
						function* ({
							year: e,
							month: t,
							day: i,
							firstDayOfWeek: n,
							groupId: a,
							append: s = !1,
						}) {
							try {
								let r = `/calendar-service/year/${e}/month/${t}/day/${i}/start/${n}`;
								a &&
									(r = `/calendar-service/group/${a}/year/${e}/month/${t}/day/${i}/start/${n}`);
								const o = yield Na.tI.get(r);
								yield (0, Ca.yJ)((0, Ha.uo)(o.data, s));
							} catch (r) {
								yield (0, Ca.yJ)((0, Ha.uo)(null, s));
							}
						}
					),
					(0, Ca.jP)(
						ee.y4K,
						function* ({ year: e, month: t, groupId: i, append: n = !1 }) {
							try {
								let a = `/calendar-service/year/${e}/month/${t}`;
								i && (a = `/calendar-service/group/${i}/year/${e}/month/${t}`);
								const s = yield Na.tI.get(a);
								yield (0, Ca.yJ)((0, Ha.eh)(s.data, n));
							} catch (a) {
								yield (0, Ca.yJ)((0, Ha.eh)(null, n));
							}
						}
					),
					(0, Ca.jP)(ee.skk, function* ({ noteId: e }) {
						try {
							const t = yield Na.tI.get(`/calendar-service/note/${e}`);
							yield (0, Ca.yJ)((0, Ha.kX)(t.data, e));
						} catch (t) {
							yield (0, Ca.yJ)((0, Ha.kX)(null, e));
						}
					}),
					(0, Ca.jP)(ee.miu, function* ({ noteId: e }) {
						try {
							const t = yield Na.tI.get(
								`/trainingplan-service/trainingplan/scheduled/notes/${e}`
							);
							yield (0, Ca.yJ)((0, Ha.kX)(t.data, e));
						} catch (t) {
							yield (0, Ca.yJ)((0, Ha.kX)(null, e));
						}
					}),
					(0, Ca.jP)(ee.JVA, function* ({ date: e }) {
						try {
							const t = yield Na.tI.get(
								`/trainingplan-service/trainingplan/active-plans?startDate=${e}`
							);
							yield (0, Ca.yJ)((0, Ha.Nl)(t.data, e));
						} catch (t) {
							yield (0, Ca.yJ)((0, Ha.Nl)(null, e));
						}
					}),
					(0, Ca.jP)(ee.Y3L, function* (e) {
						try {
							const e = yield Na.tI.get('/calendar-service/export');
							yield (0, Ca.yJ)((0, Ha.QA)(e.data));
						} catch (t) {
							yield (0, Ca.yJ)((0, Ha.QA)(null)), yield (0, Ca.T1)(fa.j, e, t);
						}
					}),
					(0, Ca.jP)(ee.gYR, function* ({ data: e, callback: t }) {
						try {
							const t = yield Na.tI.post('/calendar-service/export', e);
							yield (0, Ca.yJ)((0, Ha.QA)(t.data));
						} catch (i) {
							yield (0, Ca.yJ)((0, Ha.QA)(null)), yield (0, Ca.T1)(fa.j, t, i);
						}
					}),
					(0, Ca.jP)(ee.jE0, function* ({ id: e, callback: t }) {
						try {
							yield Na.tI.delete(`/calendar-service/export/${e}`);
							yield (0, Ca.yJ)((0, Ha.ar)());
						} catch (i) {
							yield (0, Ca.T1)(fa.j, t, i);
						}
					}),
					(0, Ca.jP)(ee.n6s, function* ({ year: e, groupId: t }) {
						try {
							let i = `/calendar-service/year/${e}`;
							t && (i = `/calendar-service/group/${t}/year/${e}`);
							const n = yield Na.tI.get(i);
							yield (0, Ca.yJ)((0, Ha.RE)(n.data));
						} catch (i) {}
					}),
					(0, Ca.jP)(ee.QLz, function* () {
						try {
							const e = yield Na.tI.get('/calendar-service/event/primary', {
								validateStatus: (e) => 404 === e || 200 === e || 204 === e,
							});
							let t = {};
							e && e.data && !e.data.error && (t = e.data),
								yield (0, Ca.yJ)((0, Ha.LX)(t));
						} catch (e) {
							yield (0, Ca.yJ)((0, Ha.LX)({}));
						}
					}),
					(0, Ca.jP)(
						ee.cN1,
						function* ({ numDaysForward: e, limit: t, callback: i }) {
							try {
								const n = yield (0, Ha.Re)({ numDaysForward: e, limit: t });
								yield (0, Ca.yJ)((0, Ha.FC)(n.data)),
									yield (0, Ca.T1)(fa.G, i, n);
							} catch (n) {}
						}
					),
					(0, Ca.jP)(ee.SK8, function* ({ courseId: e }) {
						try {
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/calendar-service/events/?courseId=${e}`
							);
							yield (0, Ca.yJ)({ type: ee.uqG, response: t });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.P1U });
						}
					}),
					(0, Ca.jP)(ee.cf7, function* ({ tpId: e, callback: t }) {
						try {
							yield (0, Ca.yJ)((0, Ha.by)());
							const i = yield Na.tI.get(
								`/trainingplan-service/trainingplan/${e}`
							);
							yield (0, Ca.yJ)((0, Ha.fk)(i.data)),
								yield (0, Ca.T1)(fa.G, t, i);
						} catch (i) {
							yield (0, Ca.yJ)((0, Ha.fk)(null)), yield (0, Ca.T1)(fa.j, t, i);
						}
					}),
					(0, Ca.jP)(
						ee.xi7,
						function* ({ eventId: e, groupId: t, shareable: i, callback: n }) {
							try {
								yield (0, Ca.yJ)((0, Ha.AN)());
								let a = '/calendar-service/';
								t && (a += `group/${t}/`),
									(a += `event/${e}`),
									i && (a += '/shareable');
								const s = yield Na.tI.get(a);
								yield (0, Ca.yJ)((0, Ha.YR)(s.data, e)),
									yield (0, Ca.T1)(fa.G, n, s);
							} catch (a) {
								yield (0, Ca.yJ)((0, Ha.YR)({}, e)),
									yield (0, Ca.T1)(fa.j, n, a);
							}
						}
					),
					(0, Ca.jP)(ee.sOw, function* () {
						try {
							yield Na.tI.put('/workout-service/schedule/sendtodevices');
							yield (0, Ca.yJ)((0, Ha.ER)());
						} catch (e) {
							yield (0, Ca.yJ)((0, Ha.aZ)());
						}
					}),
					(0, Ca.jP)(
						ee.IuF,
						function* ({
							displayName: e,
							guid: t,
							startDate: i,
							limit: n,
							callback: a,
						}) {
							try {
								yield (0, Ca.yJ)((0, Ha.T$)(e));
								let s = `calendar-service/events/upcoming?calendarOwnerGuid=${t}&startDate=${i}&limit=${n}&numDaysForward=365`;
								const r = yield Na.tI.get(s);
								yield (0, Ca.yJ)((0, va.FCz)(e, r.data)),
									yield (0, Ca.T1)(fa.G, a, r);
							} catch (s) {
								yield (0, Ca.T1)(fa.j, a, s);
							}
						}
					),
					(0, Ca.jP)(
						ee.f6T,
						function* ({ guid: e, startDate: t, limit: i, numDaysForward: n }) {
							try {
								yield (0, Ca.yJ)((0, va.VU5)());
								let a = `calendar-service/events/upcoming?startDate=${t}&limit=${i}&numDaysForward=${n}`;
								e && (a += `&calendarOwnerGuid=${e}`);
								const s = yield Na.tI.get(a);
								yield (0, Ca.yJ)((0, va.pM0)(s.data));
							} catch (a) {}
						}
					),
				];
				const qo = [
					(0, Ca.jP)(ee.wwx, function* ({ displayName: e, reset: t }) {
						try {
							yield (0, Ca.yJ)({ type: ee.XSI, reset: t });
							const i = yield (0, Ca.Lt)((e) => e.mutualConnections.start),
								n = `/usersearch-service/search/mutualConnection/${e}`,
								a = yield (0, Ca.T1)(Na.tI.get, n, {
									params: { start: i, limit: 10 },
								});
							yield (0, Ca.yJ)({ type: ee.okM, data: a.data, start: i + 10 });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.FT8 });
						}
					}),
				];
				var Qo = i(771173);
				const Xo = [
					(0, Ca.jP)(Qo.xE, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Qo.SB });
							const { startDate: t, endDate: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`/usersummary-service/stats/hydration/daily/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: Qo.Xv, dailyHydrationData: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Qo.ul, dailyHydrationData: null });
						}
					}),
					(0, Ca.jP)(Qo.Nv, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Qo.u2 });
							const { endDate: t, numWeeks: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`/usersummary-service/stats/hydration/weekly/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: Qo.pt, weeklyHydrationData: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Qo.WM, weeklyHydrationData: null });
						}
					}),
				];
				var Zo = i(69330);
				const el = [
					(0, Ca.jP)(Zo.$c, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Zo.qI });
							const { startDate: t, endDate: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`usersummary-service/stats/stress/daily/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: Zo.Rx, dailyStressData: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Zo.g3, dailyStressData: null });
						}
					}),
					(0, Ca.jP)(Zo.nr, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Zo._l });
							const { endDate: t, numWeeks: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`usersummary-service/stats/stress/weekly/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: Zo.vB, weeklyStressData: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Zo.K3, weeklyStressData: null });
						}
					}),
				];
				var tl = i(490781);
				const il = [
					(0, Ca.jP)(tl.GS, function* (e) {
						let t = (0, Sa.zJ)(e.params),
							i = e.callback;
						yield (0, Ca.yJ)({ type: tl.b1 });
						try {
							let e = yield (0, Ca.T1)(
								Ma().get,
								`/it-proxy/gcs/weather/v2/raceday/forecast${t}`,
								{ baseURL: '/modern' }
							);
							yield (0, Ca.yJ)({ type: tl.ot, data: e.data }),
								yield (0, Ca.T1)(fa.G, i, e);
						} catch (n) {
							yield (0, Ca.yJ)({ type: tl.zn }), yield (0, Ca.T1)(fa.j, i, n);
						}
					}),
				];
				const nl = [
					(0, Ca.jP)(ee.DRT, function* (e) {
						const { lang: t, measurementSystem: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.q3K });
							const e = yield (0, Ca.T1)(
								Na.eE.get,
								`/gcs-insights/api/demographics/selections?lang=${t}&localeUnit=${i}`
							);
							yield (0, Ca.yJ)({ type: ee.HxA, data: e.data });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.Cnj, data: {} });
						}
					}),
				];
				const al = [
					(0, Ca.jP)(Ia.O9, function* (e) {
						const t = new Ja.A().convertObjectToQueryStringWithoutEncoding(
							e.queryParams
						);
						yield (0, Ca.yJ)({ type: Ia.nq });
						try {
							let e = yield (0, Ca.T1)(
								Na.tI.get,
								`/activitylist-service/activities/search/activities${t}`
							);
							yield (0, Ca.yJ)({ type: Ia.mZ, data: e.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: Ia.nA });
						}
					}),
				];
				var sl = i(711370),
					rl = i(499435);
				const ol = [
					(0, Ca.jP)(sl.iC, function* ({ searchText: e, hereToken: t }) {
						try {
							const i = yield (0, Ca.T1)(() =>
								fetch(`https://geocode.search.hereapi.com/v1/geocode?q=${e}`, {
									credentials: 'same-origin',
									headers: { Authorization: `Bearer ${t}` },
								})
									.then((e) => (e.ok ? e.json() : Promise.reject()))
									.then((e) => e)
							);
							yield (0, Ca.yJ)((0, rl.H0)(sl.xo, i));
						} catch (i) {}
					}),
				];
				var ll = i(568574);
				const cl = [
					(0, Ca.jP)(ee.O6s, function* ({ displayName: e }) {
						try {
							yield (0, Ca.yJ)({ type: ee.Lsd });
							const t = yield Na.tI.get(
								`/group-service/groups/${e}?includeMembership=true`
							);
							yield (0, Ca.yJ)({ type: ee.kFJ, data: t.data });
							const i = t.data.filter((e) => 'MEMBER' !== e.membershipStatus);
							yield (0, Ca.yJ)({ type: ee.K8A, data: i });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.TH4 });
						}
					}),
					(0, Ca.jP)(ee.UTk, function* ({ displayName: e }) {
						try {
							yield (0, Ca.yJ)({ type: ee.JPE });
							const t = (yield Na.tI.get(
								`group-service/groups/${e}?includeMembership=true`
							)).data.filter((e) => 'MEMBER' !== e.membershipStatus);
							yield (0, Ca.yJ)({ type: ee.K8A, data: t });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.dCO });
						}
					}),
					(0, Ca.jP)(ee.e5r, function* ({ displayName: e }) {
						try {
							yield (0, Ca.yJ)({ type: ee.bt5 });
							const t = yield Na.tI.get(
								`/group-service/private/group/request/user/${e}`
							);
							yield (0, Ca.yJ)({ type: ee.qF, data: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.ZhA });
						}
					}),
					(0, Ca.jP)(ee.Uuk, function* ({ displayName: e }) {
						try {
							const t = yield Na.tI.get(
								`/group-service/requestNotHandled/${e}`
							);
							yield (0, Ca.yJ)({ type: ee._hI, data: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.dPV });
						}
					}),
					(0, Ca.jP)(ee.KCs, function* ({ groupId: e, profileId: t }) {
						try {
							yield (0, Ca.yJ)({ type: ee.dP4 }),
								yield (0, Ca.T1)(
									Na.tI.delete,
									`/group-service/group/${e}/member/${t}`
								),
								yield (0, Ca.yJ)({ type: ee.ARp, groupId: e });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.XxG });
						}
					}),
					(0, Ca.jP)(ee.K1i, function* ({ groupId: e }) {
						try {
							yield (0, Ca.yJ)({ type: ee.pY1 }),
								yield (0, Ca.T1)(Na.tI.delete, `/group-service/group/${e}`),
								yield (0, Ca.yJ)({ type: ee.gY7, groupId: e });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.p53 });
						}
					}),
					(0, Ca.jP)(
						ee.fxz,
						function* ({ encodedKeyword: e, reset: t, forceSearch: i }) {
							const n = decodeURIComponent(e);
							try {
								if ((yield (0, Ca.Lt)(Be.FB)) === n && !i) return;
								yield (0, Ca.yJ)({ type: ee.AaN, reset: t });
								const e = yield (0, Ca.Lt)(Be.wH),
									a = new URLSearchParams();
								a.append('keyword', n),
									a.append('start', `${e}`),
									a.append('limit', `${ll.Tx + 1}`);
								const s = yield (0, Na.tI)({
									method: 'post',
									url: '/group-service/keyword',
									headers: {
										'Content-Type':
											'application/x-www-form-urlencoded; charset=UTF-8',
									},
									data: a,
								});
								yield (0, Ca.yJ)({
									type: ee.lGK,
									data: s.data,
									keyword: n,
									reset: t,
								});
							} catch (a) {
								yield (0, Ca.yJ)({ type: ee.UQ4, keyword: n });
							}
						}
					),
					(0, Ca.jP)(
						ee.Xnf,
						function* ({ groupId: e, userProfileId: t, joinType: i }) {
							try {
								const n = yield (0, Ca.Lt)(Be.Wu);
								let a;
								switch ((yield (0, Ca.yJ)({ type: ee.ub9 }), i)) {
									case ll.oY.requestJoin:
										a = yield (0, Ca.T1)(
											Na.tI.post,
											`/group-service/private/group/${e}`,
											{ userGroupId: e, requestorId: t }
										);
										break;
									case ll.oY.acceptInvitation:
										const { groupInviteId: i } = n.find((t) => t.groupId === e);
										a = yield (0, Ca.T1)(
											Na.tI.put,
											`/group-service/invite/group/${e}`,
											{ userGroupId: e, groupInviteId: i }
										);
										break;
									case ll.oY.joinInstantly:
									default:
										a = yield (0, Ca.T1)(
											Na.tI.post,
											`/group-service/group/${e}/member/${t}`,
											{ groupId: e, userProfileId: t }
										);
								}
								yield (0, Ca.yJ)({
									type: ee.zdU,
									groupId: e,
									joinType: i,
									groupRequest: i !== ll.oY.acceptInvitation ? a.data : null,
								});
							} catch (n) {
								yield (0, Ca.yJ)({ type: ee.u56 });
							}
						}
					),
					(0, Ca.jP)(
						ee.McN,
						function* ({ groupId: e, groupMemberRequestId: t }) {
							try {
								yield (0, Ca.T1)(
									Na.tI.delete,
									`/group-service/private/group/${e}`,
									{ data: { userGroupId: e, groupMemberRequestId: t } }
								),
									yield (0, Ca.yJ)({ type: ee.qZ8, groupId: e });
							} catch (i) {
								yield (0, Ca.yJ)({ type: ee.xnf });
							}
						}
					),
					(0, Ca.jP)(ee.Eq3, function* ({ groupId: e, userProfileId: t }) {
						try {
							yield (0, Ca.yJ)({ type: ee.pDV });
							const i = yield Na.tI.get(`group-service/group/${e}/member/${t}`);
							yield (0, Ca.yJ)({ type: ee.oit, data: i.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.Hsv });
						}
					}),
				];
				var dl = i(318383),
					ul = i(359983),
					pl = i(212266);
				function* yl({ groupId: e, displayName: t }) {
					try {
						return yield (0, Ca.T1)(
							Na.tI.get,
							`/group-service/group/${e}/request/displayName/${t}`
						);
					} catch (i) {
						return null;
					}
				}
				function* hl() {
					const e = yield (0, Ca.Lt)(He.eS);
					try {
						yield (0, Ca.T1)(Na.tI.delete, `/group-service/group/${e.id}`),
							(window.location.href = dl.default.url('/groups'));
					} catch (t) {}
				}
				const gl = [
					(0, Ca.p8)(
						ee.rMO,
						function* ({ groupId: e, viewerSocialProfile: t }) {
							try {
								let i = [
									(0, Ca.T1)(
										Na.tI.get,
										`/group-service/group/${e}?includeMembership=true`
									),
									(0, Ca.T1)(
										Na.tI.get,
										`/group-service/group/${e}/members?supportOwner=true`
									),
								];
								if (t && t.profileId && t.displayName) {
									const n = t.profileId,
										a = t.displayName;
									i = i.concat([
										(0, Ca.T1)(
											Na.tI.get,
											`/group-service/group/${e}/member/${n}/connections?supportOwner=true`
										),
										(0, Ca.T1)(yl, { groupId: e, displayName: a }),
										(0, Ca.T1)(
											Na.tI.get,
											`/group-service/requestNotHandled/${a}`
										),
									]);
								}
								const [n, a, s, r, o] = yield (0, Ca.Q7)(i),
									l = (n.data && n.data.membershipStatus) || '',
									c = [ll.Bw.OWNER, ll.Bw.ADMIN, ll.Bw.MEMBER].includes(l);
								let d;
								c &&
									(d = yield (0, Ca.T1)(
										Na.tI.get,
										`/group-service/group/${e}/announcement`
									));
								let u = { group: n.data, groupMembers: a.data };
								if (
									(d && (u.groupAnnouncement = d.data),
									s && (u.groupUserConnections = s.data),
									r &&
										r.data &&
										'object' === typeof r.data &&
										(u.groupMemberRequest = r.data),
									o &&
										o.data &&
										Array.isArray(o.data) &&
										(u.groupInvitation = o.data.find(
											(t) => t.groupId === parseInt(e)
										)),
									yield (0, Ca.yJ)((0, pl.ZU)(u)),
									yield (0, Ca.yJ)((0, pl.bW)()),
									c)
								) {
									n.data.featureTypes.includes('COURSES') &&
										(yield (0, Ca.yJ)((0, pl.XL)())),
										yield (0, Ca.yJ)((0, vi.DF)());
									const e = yield (0, Ca.Lt)(U.TO);
									(e && 0 !== e.length) || (yield (0, Ca.yJ)((0, va.h3h)()));
								}
							} catch (i) {
								let e = !1,
									t = !1;
								i.response && 403 === i.response.status
									? (e = !0)
									: i.response && 404 === i.response.status
										? (t = !0)
										: yield (0, Ca.yJ)((0, va.yPt)(i.response.status)),
									yield (0, Ca.yJ)(
										(0, pl.uV)({ isGroupPrivate: e, isGroupDeleted: t })
									);
							}
						}
					),
					(0, Ca.p8)(
						ee.gu,
						function* ({
							groupId: e,
							activityId: t,
							postUuid: i,
							commentUuid: n,
							viewerSocialProfile: a,
						}) {
							try {
								const s = yield (0, Ca.T1)(
									Na.tI.get,
									`/group-service/group/${e}?includeMembership=true`
								);
								yield (0, Ca.yJ)({
									type: ee.Umf,
									group: s.data,
									viewerSocialProfile: a,
									focusCommentUuid: n,
								}),
									t
										? yield (0, Ca.yJ)(
												(0, pl.LU)({ groupId: e, activityId: t })
											)
										: i &&
											(yield (0, Ca.yJ)(
												(0, pl.SC)({ groupId: e, postUuid: i })
											));
							} catch (s) {
								yield (0, Ca.yJ)({ type: ee.eVc });
							}
						}
					),
					(0, Ca.p8)(ee.DjL, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.KRD });
							let e = `/web-gateway/group/${yield (0, Ca.Lt)(He.N2)}/groupFeed`;
							const t = yield (0, Ca.Lt)(He.Gv);
							t && (e += `?cursor=${t}`);
							const i = yield (0, Ca.T1)(Na.tI.get, e),
								{ groupFeed: n, nextCursor: a, daysLimit: s } = i.data;
							yield (0, Ca.yJ)({
								type: ee.fdE,
								list: n,
								hasMore: null !== a,
								cursor: a,
								daysLimit: s,
							});
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.J9e });
						}
					}),
					(0, Ca.p8)(ee.l78, function* () {
						try {
							let e = `/web-gateway/group/${yield (0, Ca.Lt)(He.N2)}/activityFeed?limit=10`;
							const t = yield (0, Ca.Lt)(He.U5);
							t && (e += `&cursor=${t}`);
							const i = yield (0, Ca.T1)(Na.tI.get, e);
							let { activityList: n, filter: a, daysLimit: s } = i.data;
							yield (0, Ca.yJ)(
								(0, pl.VN)({
									list: n,
									hasMore: null !== a.nextCursor,
									cursor: a.nextCursor,
									daysLimit: s,
								})
							);
						} catch (e) {
							yield (0, Ca.yJ)((0, pl.zj)());
						}
					}),
					(0, Ca.p8)(ee._DV, function* ({ groupId: e, activityId: t }) {
						try {
							yield (0, Ca.yJ)({ type: ee.h_3 });
							const i = yield (0, Ca.T1)(
								Na.tI.get,
								`/web-gateway/group/${e}/activityFeed/${t}`
							);
							yield (0, Ca.yJ)({ type: ee.oMJ, activity: i.data });
						} catch (i) {
							yield (0, Ca.yJ)({
								type: ee.yVf,
								errorStatus: i && i.response && i.response.status,
							});
						}
					}),
					(0, Ca.p8)(ee.OZA, function* ({ text: e }) {
						const t = yield (0, Ca.Lt)(He.eS);
						try {
							const i = {
									groupId: t.id,
									message: e,
									title: '',
									announcementDate: new Date().toISOString(),
								},
								n = yield (0, Ca.T1)(
									Na.tI.post,
									`/group-service/group/${t.id}/announcement`,
									i
								);
							(0, ll.yi)('Add Announcement'),
								yield (0, Ca.yJ)((0, pl.pB)({ groupAnnouncement: n.data }));
						} catch (i) {
							yield (0, Ca.yJ)((0, pl.fd)());
						}
					}),
					(0, Ca.p8)(ee.gBU, function* () {
						const e = yield (0, Ca.Lt)(He.eS),
							t = yield (0, Ca.Lt)(He.LY);
						try {
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/group-service/group/${e.id}/announcement/${t.announcementId}`
							),
								yield (0, Ca.yJ)((0, pl.fO)()),
								(0, ll.yi)('Delete Announcement'),
								yield (0, Ca.yJ)((0, pl.X1)());
						} catch (i) {
							yield (0, Ca.yJ)((0, pl.rK)());
						}
					}),
					(0, Ca.p8)(ee.d16, function* ({ text: e }) {
						const t = yield (0, Ca.Lt)(He.N2);
						yield (0, Ca.T1)(function* () {
							const e = (yield (0, Ca.Lt)(
								(e) => e.groupPage.groupPostImages
							)).filter((e) => e.error);
							for (let t = 0; t < e.length; t++) {
								const i = e[t];
								i.error &&
									(yield (0, Ca.yJ)((0, pl.n2)({ retryIndex: i.index })),
									yield (0, Ca.s)([ee.LVS, ee.nsX]));
							}
						});
						const i = (yield (0, Ca.Lt)(
							(e) => e.groupPage.groupPostImages
						)).map((e) => e.postImage);
						try {
							const n = { userGroupPk: t, newsPostType: 'GROUP', rulePk: 4 };
							e.length > 0 && (n.body = e), i.length > 0 && (n.postImages = i);
							const a = yield (0, Ca.T1)(
								Na.tI.post,
								`/conversation-service/newspost/${t}/GROUP`,
								n
							);
							(0, ll.yi)('Add a Post'),
								yield (0, Ca.yJ)((0, pl.Wm)({ newPost: a.data }));
						} catch (n) {
							yield (0, Ca.yJ)((0, pl.k$)());
						}
					}),
					(0, Ca.p8)(ee.pC0, function* ({ postUuid: e }) {
						const t = yield (0, Ca.Lt)(He.N2);
						try {
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/conversation-service/newspost/${t}/GROUP/${e}`
							),
								yield (0, Ca.yJ)((0, pl.fO)()),
								(0, ll.yi)('Delete a Post'),
								yield (0, Ca.yJ)((0, pl.Kt)({ postUuid: e }));
						} catch (i) {
							yield (0, Ca.yJ)((0, pl.Ct)({ postUuid: e }));
						}
					}),
					(0, Ca.p8)(ee.Xev, function* () {
						const e = yield (0, Ca.Lt)(He.N2),
							t = yield (0, Ca.Lt)(He.fF),
							i = { limit: 10 };
						t && (i.cursor = t);
						try {
							const t = yield (0, Ca.T1)(
									Na.tI.get,
									`/conversation-service/newspost/${e}/GROUP/feed`,
									{ params: i }
								),
								{ newsPosts: n, nextCursor: a } = t.data;
							yield (0, Ca.yJ)(
								(0, pl.SA)({ posts: n || [], hasMore: !!a, cursor: a })
							);
						} catch (n) {
							yield (0, Ca.yJ)((0, pl.IZ)());
						}
					}),
					(0, Ca.p8)(ee.oCH, function* ({ groupId: e, postUuid: t }) {
						try {
							yield (0, Ca.yJ)({ type: ee.hqh });
							const i = yield (0, Ca.T1)(
								Na.tI.get,
								`/conversation-service/newspost/${e}/GROUP/feed/${t}`
							);
							yield (0, Ca.yJ)({ type: ee.ir9, post: i.data });
						} catch (i) {
							yield (0, Ca.yJ)({
								type: ee.sE7,
								errorStatus: i && i.response && i.response.status,
							});
						}
					}),
					(0, Ca.p8)(ee.iP4, function* ({ resourceType: e, resourceId: t }) {
						const i = yield (0, Ca.Lt)(He.N2);
						let n = yield (0, Ca.Lt)(He.H$, { resourceType: e, resourceId: t });
						try {
							const a = yield (0, Ca.T1)(
									Na.tI.get,
									`/conversation-service/conversation/comments/${i}/${e}/${t}`,
									{ params: { start: n, limit: 11 } }
								),
								s = a.data.slice(-10);
							yield (0, Ca.yJ)(
								(0, pl.Lq)({
									resourceType: e,
									resourceId: t,
									comments: s,
									hasMore: a.data.length > 10,
								})
							);
						} catch (a) {
							yield (0, Ca.yJ)((0, pl.pg)({ resourceType: e, resourceId: t }));
						}
					}),
					(0, Ca.p8)(
						ee.oav,
						function* ({ resourceType: e, resourceId: t, text: i }) {
							try {
								const n = yield (0, Ca.Lt)(He.N2),
									a = {
										conversationUuid: null,
										conversationCommentUuid: null,
										body: i,
									},
									s = (yield (0, Ca.T1)(
										Na.tI.post,
										`/conversation-service/conversation/comment/${n}/${e}/${t}/null`,
										a
									)).data;
								e === ll.kq.activity
									? (0, ll.yi)('Add an Activity Comment')
									: e === ll.kq.post && (0, ll.yi)('Add a Post Comment'),
									yield (0, Ca.yJ)(
										(0, pl.dZ)({
											resourceType: e,
											resourceId: t,
											newComment: s,
										})
									);
							} catch (n) {
								const i = n.response && 429 === n.response.status;
								yield (0, Ca.yJ)(
									(0, pl.hY)({
										resourceType: e,
										resourceId: t,
										errorReachLimit: i,
									})
								),
									i &&
										(yield (0, Ca.yJ)(
											(0, ro.j)({ open: !0, errorType: 'comment', isGroup: !0 })
										));
							}
						}
					),
					(0, Ca.p8)(
						ee.qUx,
						function* ({ resourceType: e, resourceId: t, comment: i }) {
							try {
								const {
									conversationUuid: n,
									conversationCommentUuid: a,
									conversationCommentPk: s,
								} = i;
								yield (0, Ca.T1)(
									Na.tI.delete,
									`/conversation-service/conversation/comment/${n}/${a}/${s}`
								),
									e === ll.kq.activity
										? (0, ll.yi)('Delete an Activity Comment')
										: e === ll.kq.post && (0, ll.yi)('Delete a Post Comment'),
									yield (0, Ca.yJ)(
										(0, pl.NI)({ resourceType: e, resourceId: t, comment: i })
									);
							} catch (n) {
								yield (0, Ca.yJ)(
									(0, pl.FX)({ resourceType: e, resourceId: t, comment: i })
								);
							}
						}
					),
					(0, Ca.p8)(
						ee.j0q,
						function* ({
							resourceType: e,
							resourceId: t,
							data: i,
							conversationUuid: n,
							conversationCommentUuid: a,
						}) {
							try {
								yield (0, Ca.yJ)({
									type: ee.SUC,
									resourceType: e,
									resourceId: t,
									conversationCommentUuid: a,
								});
								const s = yield (0, Ca.T1)(
									Na.tI.put,
									`/conversation-service/conversation/comment/${n}/${a}`,
									i
								);
								yield (0, Ca.yJ)({
									type: ee.Hgi,
									resourceType: e,
									resourceId: t,
									newComment: s.data,
									conversationCommentUuid: a,
								});
							} catch (s) {
								yield (0, Ca.yJ)({
									type: ee.dy6,
									resourceType: e,
									resourceId: t,
									conversationCommentUuid: a,
								});
							}
						}
					),
					(0, Ca.jP)(
						ee.JeB,
						function* ({ file: e, imageB64: t, retryIndex: i, callback: n }) {
							const a = 'number' === typeof i;
							let s;
							if (a) s = i;
							else {
								const e = yield (0, Ca.Lt)(
									(e) => e.groupPage.groupPostImageLastIndex
								);
								s = Number.isInteger(e) ? e + 1 : 0;
							}
							try {
								if (
									(n(s, 0),
									yield (0, Ca.yJ)({
										type: ee.KN8,
										index: s,
										file: e,
										imageB64: t,
										isRetry: a,
									}),
									a)
								) {
									const t = yield (0, Ca.Lt)(
										(e) => e.groupPage.groupPostImages
									);
									e = t.filter((e) => e.index === s).pop().file;
								}
								const i = new FormData();
								i.append('file', e);
								const r = yield (0, Ca.T1)(
									Na.tI.post,
									'/conversation-service/newspost/image',
									i,
									{
										onUploadProgress: (e) => {
											const { loaded: t, total: i } = e;
											n(s, (t / i) * 90);
										},
										onDownloadProgress: (e) => {
											const { loaded: t, total: i } = e;
											n(s, 90 + (t / i) * 10);
										},
									}
								);
								yield (0, Ca.yJ)({ type: ee.LVS, postImage: r.data, index: s });
							} catch (r) {
								yield (0, Ca.yJ)({ type: ee.nsX, index: s });
							}
						}
					),
					(0, Ca.jP)(
						ee.DiT,
						function* ({ newsPostUuid: e, newsPostHasImageId: t }) {
							try {
								const i = yield (0, Ca.Lt)((t) =>
									(0, He.y7)(t, { postUuid: e })
								);
								yield (0, Ca.T1)(
									Na.tI.delete,
									`/conversation-service/newspost/${e}/image?imageId=${t}`
								);
								const { body: n, postImages: a } = i,
									s = !n && Array.isArray(a) && 1 === a.length;
								s && (yield (0, Ca.yJ)((0, pl.xX)({ postUuid: e }))),
									yield (0, Ca.yJ)({
										type: ee.dbk,
										newsPostUuid: e,
										newsPostHasImageId: t,
										deletePost: s,
									}),
									yield (0, Ca.yJ)((0, va.ASY)());
							} catch (i) {
								yield (0, Ca.yJ)({ type: ee.JIv }),
									yield (0, Ca.yJ)((0, va.ASY)());
							}
						}
					),
					(0, Ca.jP)(ee.mos, function* ({ resourceType: e, resourceId: t }) {
						const i = yield (0, Ca.Lt)(He.N2);
						try {
							const n = yield (0, Ca.T1)(
								Na.tI.get,
								`/conversation-service/conversation/likes/${i}/${e}/${t}`,
								{ params: { connectionStatusIncluded: !0 } }
							);
							yield (0, Ca.yJ)(
								(0, pl.D3)({
									resourceType: e,
									resourceId: t,
									likers: n.data,
									error: !1,
								})
							);
						} catch (n) {
							yield (0, Ca.yJ)(
								(0, pl.D3)({ resourceType: e, resourceId: t, error: !0 })
							);
						}
					}),
					(0, Ca.jP)(
						ee.Ycw,
						function* ({
							resourceType: e,
							resourceId: t,
							conversationCommentUuid: i,
						}) {
							try {
								const n = yield (0, Ca.T1)(
									Na.tI.get,
									`/conversation-service/conversation/comment/likes/${i}`
								);
								yield (0, Ca.yJ)(
									(0, pl.$C)({
										resourceType: e,
										resourceId: t,
										conversationCommentUuid: i,
										likers: n.data,
										error: !1,
									})
								);
							} catch (n) {
								yield (0, Ca.yJ)(
									(0, pl.$C)({
										resourceType: e,
										resourceId: t,
										conversationCommentUuid: i,
										error: !0,
									})
								);
							}
						}
					),
					(0, Ca.jP)(
						ee.AL1,
						function* ({
							resourceType: e,
							resourceId: t,
							like: i,
							conversationUuid: n,
							likerInfo: a,
						}) {
							if (
								!(yield (0, Ca.Lt)((i) =>
									(0, He.wG)(i, { resourceType: e, resourceId: t })
								))
							)
								try {
									yield (0, Ca.yJ)(
										(0, pl.jt)({ resourceType: e, resourceId: t })
									);
									const s = yield (0, Ca.Lt)(He.N2);
									let r;
									i
										? (r = yield (0, Ca.T1)(
												Na.tI.post,
												`/conversation-service/conversation/like/${s}/${e}/${t}`
											))
										: yield (0, Ca.T1)(
												Na.tI.delete,
												`/conversation-service/conversation/like/${n}/0`
											),
										i
											? e === ll.kq.activity
												? (0, ll.yi)('Like an Activity')
												: e === ll.kq.post && (0, ll.yi)('Like a Post')
											: e === ll.kq.activity
												? (0, ll.yi)('Unlike an Activity')
												: e === ll.kq.post && (0, ll.yi)('Unlike a Post'),
										i && !n
											? yield (0, Ca.yJ)(
													(0, pl.l$)({
														resourceType: e,
														resourceId: t,
														like: i,
														likerInfo: a,
														conversationUuid: r.data.conversationUuid,
													})
												)
											: yield (0, Ca.yJ)(
													(0, pl.l$)({
														resourceType: e,
														resourceId: t,
														like: i,
														likerInfo: a,
													})
												);
								} catch (s) {
									const n = s.response && 429 === s.response.status;
									yield (0, Ca.yJ)(
										(0, pl.l$)({
											resourceType: e,
											resourceId: t,
											like: i,
											error: !0,
											errorReachLimit: n,
										})
									),
										n &&
											(yield (0, Ca.yJ)(
												(0, ro.j)({ open: !0, errorType: 'like', isGroup: !0 })
											));
								}
						}
					),
					(0, Ca.jP)(
						ee.uIu,
						function* ({
							resourceType: e,
							resourceId: t,
							conversationCommentUuid: i,
							like: n,
						}) {
							if (
								!(yield (0, Ca.Lt)((n) =>
									(0, He.g7)(n, {
										resourceType: e,
										resourceId: t,
										conversationCommentUuid: i,
									})
								))
							)
								try {
									let a;
									yield (0, Ca.yJ)(
										(0, pl.Aj)({
											resourceType: e,
											resourceId: t,
											conversationCommentUuid: i,
										})
									),
										n
											? ((a = yield (0, Ca.T1)(
													Na.tI.post,
													`/conversation-service/conversation/comment/like/${i}`
												)),
												e === ll.kq.activity
													? (0, ll.yi)('Like an Activity Comment')
													: e === ll.kq.post &&
														(0, ll.yi)('Like a Post Comment'))
											: (yield (0, Ca.T1)(
													Na.tI.delete,
													`/conversation-service/conversation/comment/like/${i}/0`
												),
												e === ll.kq.activity
													? (0, ll.yi)('Unlike an Activity Comment')
													: e === ll.kq.post &&
														(0, ll.yi)('Unlike a Post Comment')),
										yield (0, Ca.yJ)(
											(0, pl.BR)({
												resourceType: e,
												resourceId: t,
												conversationCommentUuid: i,
												like: n,
												likeDto: (a && a.data) || null,
											})
										);
								} catch (a) {
									const s = a.response && 429 === a.response.status;
									yield (0, Ca.yJ)(
										(0, pl.BR)({
											resourceType: e,
											resourceId: t,
											conversationCommentUuid: i,
											like: n,
											error: !0,
											errorReachLimit: s,
										})
									),
										s &&
											(yield (0, Ca.yJ)(
												(0, ro.j)({ open: !0, errorType: 'like', isGroup: !0 })
											));
								}
						}
					),
					(0, Ca.p8)(ee.JcD, function* () {
						const e = yield (0, Ca.Lt)(He.jI);
						switch (e.deleteType) {
							case 'post':
								yield (0, Ca.yJ)((0, pl.xX)({ postUuid: e.postUuid }));
								break;
							case 'announcement':
								yield (0, Ca.yJ)((0, pl.ou)());
								break;
							case 'course':
								yield (0, Ca.yJ)((0, pl.Sg)(e.course.courseId));
								break;
							case 'group':
								yield (0, Ca.Zy)(hl);
								break;
							case 'leave-group':
								yield (0, Ca.yJ)((0, pl.hW)());
								break;
							case 'postImage':
								yield (0, Ca.yJ)((0, pl.l)(e.postImage));
						}
						yield (0, Ca.yJ)((0, pl.OC)());
					}),
					(0, Ca.p8)(ee.JrO, function* () {
						const e = yield (0, Ca.Lt)(He.N2),
							t = yield (0, Ca.Lt)(He.VO),
							{ profileId: i } = t;
						try {
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/group-service/group/${e}/member/${i}`
							),
								dl.default.navigate('/groups/groupLeft');
						} catch (n) {}
					}),
					(0, Ca.p8)(ee.XCX, function* () {
						const e = yield (0, Ca.Lt)(He.eS),
							t = yield (0, Ca.Lt)(He.N2),
							i = yield (0, Ca.Lt)(He.VO),
							n = yield (0, Ca.Lt)(He.wQ),
							a = i.profileId;
						try {
							const s = yield (0, Ca.T1)(
									Na.tI.post,
									`/group-service/group/${t}/member/${a}`,
									{ groupId: t, userProfileId: a }
								),
								r = yield (0, Ca.T1)(
									Na.tI.get,
									`/group-service/group/${t}/announcement`
								);
							yield (0, Ca.yJ)({
								type: ee.Z30,
								member: s.data,
								groupAnnouncement: r.data,
							}),
								yield (0, Ca.yJ)((0, pl.bW)()),
								e.featureTypes.includes('COURSES') &&
									(yield (0, Ca.yJ)((0, pl.XL)())),
								yield (0, Ca.yJ)((0, vi.DF)());
							const o = yield (0, Ca.Lt)(U.TO);
							(o && 0 !== o.length) || (yield (0, Ca.yJ)((0, va.h3h)())),
								yield (0, Ca.yJ)((0, pl.wJ)(ll.rH.FEED)),
								ul.A.renderPrivacyAlert(i, n, 'group');
						} catch (s) {
							yield (0, Ca.yJ)((0, pl.f3)({ showAlert: !0 }));
						}
					}),
					(0, Ca.p8)(ee.TFF, function* () {
						const e = yield (0, Ca.Lt)(He.eS),
							t = yield (0, Ca.Lt)(He.VO),
							i = yield (0, Ca.Lt)(He.wQ),
							n = t.profileId;
						try {
							const a = yield (0, Ca.T1)(
								Na.tI.post,
								`/group-service/private/group/${e.id}`,
								{ userGroupId: e.id, requestorId: n }
							);
							yield (0, Ca.yJ)((0, pl.MW)(a.data)),
								ul.A.renderPrivacyAlert(t, i, 'group');
						} catch (a) {
							yield (0, Ca.yJ)((0, pl.f3)({ showAlert: !0 }));
						}
					}),
					(0, Ca.p8)(ee.s3g, function* () {
						const e = yield (0, Ca.Lt)(He.N2),
							t = yield (0, Ca.Lt)(He.Dw);
						try {
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/group-service/private/group/${e}`,
								{
									data: {
										userGroupId: e,
										groupMemberRequestId: t.groupMemberRequestId,
									},
								}
							),
								yield (0, Ca.yJ)((0, pl.MW)(null));
						} catch (i) {
							yield (0, Ca.yJ)((0, pl.f3)({ showAlert: !0 }));
						}
					}),
					(0, Ca.p8)(ee.HiC, function* () {
						const e = yield (0, Ca.Lt)(He.eS),
							t = yield (0, Ca.Lt)(He.N2),
							i = yield (0, Ca.Lt)(He.PK),
							n = yield (0, Ca.Lt)(He.VO),
							a = yield (0, Ca.Lt)(He.wQ),
							s = n.profileId;
						try {
							const { groupInviteId: r } = i;
							yield (0, Ca.T1)(Na.tI.put, `/group-service/invite/group/${t}`, {
								userGroupId: t,
								groupInviteId: r,
							});
							const o = yield (0, Ca.T1)(
									Na.tI.get,
									`/group-service/group/${t}/members?supportOwner=true`
								),
								l = yield (0, Ca.T1)(
									Na.tI.get,
									`/group-service/group/${t}/announcement`
								),
								c = {
									connectionRequestId: null,
									connectionRequestorId: null,
									connectionStatus: 0,
									userProfileId: s,
									groupRole: ll.Bw.MEMBER,
								};
							yield (0, Ca.yJ)({
								type: ee.BhG,
								members: o.data,
								groupAnnouncement: l.data,
								userConnection: c,
							}),
								yield (0, Ca.yJ)((0, pl.bW)()),
								e.featureTypes.includes('COURSES') &&
									(yield (0, Ca.yJ)((0, pl.XL)())),
								yield (0, Ca.yJ)((0, vi.DF)());
							const d = yield (0, Ca.Lt)(U.TO);
							(d && 0 !== d.length) || (yield (0, Ca.yJ)((0, va.h3h)())),
								yield (0, Ca.yJ)((0, pl.wJ)(ll.rH.FEED)),
								ul.A.renderPrivacyAlert(n, a, 'group');
						} catch (r) {
							yield (0, Ca.yJ)((0, pl.f3)({ showAlert: !0 }));
						}
					}),
					(0, Ca.p8)(ee.MvU, function* (e) {
						const { userProfileId: t } = e,
							i = yield (0, Ca.Lt)(He.N2);
						try {
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/group-service/group/${i}/member/${t}`
							),
								yield (0, Ca.yJ)({ type: ee.mer, userProfileId: t });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.ewP });
						}
					}),
					(0, Ca.p8)(ee.m8A, function* (e) {
						const { userProfileId: t, groupRole: i } = e,
							n = yield (0, Ca.Lt)(He.N2),
							a = (yield (0, Ca.Lt)(He.$u)).find((e) => e.userProfileId === t);
						a.groupRole = i;
						try {
							yield (0, Ca.T1)(
								Na.tI.put,
								`/group-service/group/${n}/member/${t}`,
								a
							),
								yield (0, Ca.yJ)({ type: ee.SeH, updatedMember: a }),
								yield (0, Ca.yJ)((0, pl.bW)());
						} catch (s) {
							yield (0, Ca.yJ)({ type: ee.K2i });
						}
					}),
					(0, Ca.p8)(ee.Ckh, function* (e) {
						const { userProfileId: t } = e;
						try {
							const e = yield (0, Ca.Lt)(He.eS),
								i = { ...e, ownerId: t, membershipStatus: ll.Bw.ADMIN },
								n = yield (0, Ca.T1)(
									Na.tI.put,
									`/group-service/group/${e.id}`,
									i
								);
							yield (0, Ca.yJ)({ type: ee.YfN, newGroup: n.data }),
								yield (0, Ca.yJ)((0, pl.bW)());
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.IVz });
						}
					}),
					(0, Ca.p8)(ee.mXb, function* (e) {
						try {
							const e = yield (0, Ca.Lt)(He.N2);
							yield (0, Ca.yJ)({ type: ee.vbd });
							const [t, i] = yield (0, Ca.Q7)([
								(0, Ca.T1)(
									Na.tI.get,
									`/groupchallenge-service/group/${e}/groupchallenge/nonCompleted`
								),
								(0, Ca.T1)(
									Na.tI.get,
									`/groupchallenge-service/group/${e}/groupchallenge/userJoined`
								),
							]);
							yield (0, Ca.yJ)({
								type: ee.siJ,
								nonCompleted: t.data,
								userJoined: i.data,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.YqF });
						}
					}),
					(0, Ca.p8)(ee.osH, function* ({ challenge: e }) {
						try {
							const t = yield (0, Ca.Lt)(He.N2);
							yield (0, Ca.yJ)({ type: ee.NYb }),
								yield (0, Ca.T1)(
									Na.tI.put,
									`/groupchallenge-service/group/${t}/groupchallenge/${e.uuid}/`,
									e
								),
								yield (0, Ca.yJ)({ type: ee.wUi, newChallenge: e });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.CfB });
						}
					}),
					(0, Ca.p8)(ee.QRd, function* ({ uuid: e }) {
						try {
							const t = yield (0, Ca.Lt)(He.N2);
							yield (0, Ca.yJ)({ type: ee.DQW }),
								yield (0, Ca.T1)(
									Na.tI.delete,
									`/groupchallenge-service/group/${t}/groupchallenge/${e}/`
								),
								yield (0, Ca.yJ)({ type: ee.mi$, uuid: e });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.KsP });
						}
					}),
					(0, Ca.jP)(ee.rYD, function* ({ groupUserConnection: e }) {
						yield (0, Ca.yJ)({ type: ee.Y17, groupUserConnection: e }),
							yield (0, Ca.yJ)((0, pl.bW)());
					}),
					(0, Ca.jP)(ee.qAt, function* ({ feedTab: e }) {
						yield (0, Ca.yJ)({ type: ee.Vh, feedTab: e }),
							yield (0, Ca.yJ)((0, pl.fO)());
					}),
				];
				var ml = i(408822),
					Al = i(105172);
				const _l = {
						WELLNESS_TOTAL_STEPS: 'TOTAL_STEPS',
						walking: 'WALKING_DISTANCE',
						running: 'RUNNING_DISTANCE',
						cycling: 'CYCLING_DISTANCE',
						swimming: 'SWIMMING_DISTANCE',
						total: 'TOTAL_DISTANCE',
						calories: 'ACTIVE_CALORIES_BURNED',
						para_sports: 'PUSHING_DISTANCE',
					},
					El = {
						TOTAL_STEPS: 'WELLNESS_TOTAL_STEPS',
						WALKING_DISTANCE: 'walking',
						RUNNING_DISTANCE: 'running',
						CYCLING_DISTANCE: 'cycling',
						SWIMMING_DISTANCE: 'swimming',
						TOTAL_DISTANCE: 'total',
						ACTIVE_CALORIES_BURNED: 'calories',
						TOTAL_PUSHES: 'WELLNESS_TOTAL_PUSHES',
						PUSHING_DISTANCE: 'para_sports',
					},
					Tl = {
						TOTAL_STEPS: {
							metricId: 29,
							userType: 'wellness',
							metricKey: 'WELLNESS_TOTAL_STEPS',
						},
						WALKING_DISTANCE: {
							activityTypeKey: 'walking',
							metricId: 17,
							userType: 'activity',
							metricKey: 'ACTIVITY_TOTAL_DISTANCE',
						},
						RUNNING_DISTANCE: {
							activityTypeKey: 'running',
							metricId: 17,
							userType: 'activity',
							metricKey: 'ACTIVITY_TOTAL_DISTANCE',
						},
						CYCLING_DISTANCE: {
							activityTypeKey: 'cycling',
							metricId: 17,
							userType: 'activity',
							metricKey: 'ACTIVITY_TOTAL_DISTANCE',
						},
						SWIMMING_DISTANCE: {
							activityTypeKey: 'swimming',
							metricId: 17,
							userType: 'activity',
							metricKey: 'ACTIVITY_TOTAL_DISTANCE',
						},
						TOTAL_DISTANCE: {
							metricId: 17,
							userType: 'activity',
							metricKey: 'ACTIVITY_TOTAL_DISTANCE',
						},
						ACTIVE_CALORIES_BURNED: {
							metricId: 22,
							userType: 'wellness',
							metricKey: 'WELLNESS_ACTIVE_CALORIES',
						},
						TOTAL_PUSHES: {
							metricId: 87,
							userType: 'wellness',
							metricKey: 'WELLNESS_TOTAL_PUSHES',
						},
						PUSHING_DISTANCE: {
							activityTypeKey: 'para_sports',
							metricId: 17,
							userType: 'activity',
							metricKey: 'ACTIVITY_TOTAL_DISTANCE',
						},
					};
				function Cl(e) {
					return fo.A.personalizeSteps(e);
				}
				function Sl(e) {
					return (
						fo.A.personalizeDistance(e) +
						' ' +
						ml.A.localize(fo.A.getDistanceUnitKey())
					);
				}
				function Il(e) {
					return (
						fo.A.personalizeSwimDistance(e) +
						' ' +
						ml.A.localize(fo.A.getSwimDistanceUnitKey())
					);
				}
				function vl(e) {
					return (
						fo.A.personalizeCaloriesNotConvert(e) +
						' ' +
						ml.A.localize('label_calories_abbr')
					);
				}
				function fl(e) {
					return fo.A.formatWholeNumber(e);
				}
				const Dl = [
					(0, Ca.p8)(ee.b2C, function* () {
						const e = yield (0, Ca.Lt)(Ae.Tj, 'group.page.leaderboard.filter'),
							t = yield (0, Ca.Lt)(He.eS),
							i = yield (0, Ca.Lt)(Ve.ZP);
						if (i && t.leaderboardTypes.includes(i)) return;
						let n = _l[e];
						t.leaderboardTypes.includes(n) || (n = t.leaderboardTypes[0]);
						const a = yield (0, Ca.Lt)(U.TO);
						if (!a || 0 === a.length) {
							let e = yield (0, Ca.Lt)(U.FG);
							do {
								yield (0, Ca.s)([ee.QPy, ee.xDv]), (e = yield (0, Ca.Lt)(U.FG));
							} while (e);
						}
						yield (0, Ca.yJ)((0, pl.xe)({ leaderboardType: n }));
					}),
					(0, Ca.p8)(ee.fyP, function* () {
						const e = yield (0, Ca.Lt)(Ae.Tj, 'group.page.leaderboard.filter'),
							t = yield (0, Ca.Lt)(He.eS),
							i = yield (0, Ca.Lt)(Ve.ZP),
							n = yield (0, Ca.Lt)(Ve.DA),
							a = yield (0, Ca.Lt)(He.VO),
							s = yield (0, Ca.Lt)(U.TO),
							r = El[i];
						r !== e &&
							(yield (0, Ca.yJ)(
								(0, Ae._X)('group.page.leaderboard.filter', r)
							));
						const o = Tl[i],
							l = Gs()().format('YYYY-MM-DD');
						let c = Gs()().startOf('isoWeek'),
							d = Gs()().endOf('isoWeek');
						n && ((c = c.subtract(7, 'day')), (d = d.subtract(7, 'day')));
						const u = {
								start: 1,
								limit: 2e3,
								todayDate: l,
								startDate: c.format('YYYY-MM-DD'),
								endDate: d.format('YYYY-MM-DD'),
								metricId: o.metricId,
							},
							p = s.find((e) => e.typeKey === o.activityTypeKey);
						p && (u.actTypeId = p.typeId);
						try {
							let e =
								(yield (0, Ca.T1)(
									Na.tI.get,
									`/groupchallenge-service/leaderboard/${o.userType}/group/${t.id}`,
									{ params: u }
								)).data.allMetrics.metricsMap[o.metricKey] || [];
							const n = a && a.displayName;
							let s,
								r = 0,
								l = Number.MAX_VALUE;
							switch (i) {
								case 'TOTAL_STEPS':
									s = Cl;
									break;
								case 'WALKING_DISTANCE':
								case 'RUNNING_DISTANCE':
								case 'CYCLING_DISTANCE':
								case 'TOTAL_DISTANCE':
								case 'PUSHING_DISTANCE':
									s = Sl;
									break;
								case 'SWIMMING_DISTANCE':
									s = Il;
									break;
								case 'ACTIVE_CALORIES_BURNED':
									s = vl;
									break;
								case 'WELLNESS_PUSHES_COUNT':
									s = fl;
									break;
								default:
									s = (e) => `${e}`;
							}
							(e = e.filter(
								(e) =>
									e.value > 0 ||
									(0 === e.value && e.hasPrivate) ||
									e.userInfo.displayname === n
							)),
								(e = e.map((e, t) => {
									l > e.value && ((r = t + 1), (l = e.value));
									const i = s(e.value || 0),
										a = s(e.todayValue || 0),
										o = e.userInfo.displayname === n;
									let c = '--';
									if (e.lastSyncTime) {
										const t = new Date(e.lastSyncTime);
										c = as.Ay.formatRelativeTimeLastSync(t);
									}
									return {
										...e,
										value: i,
										todayValue: a,
										lastSyncTime: c,
										rank: r,
										highlight: o,
									};
								})),
								yield (0, Ca.yJ)((0, pl.Mt)({ list: e }));
						} catch (y) {
							yield (0, Ca.yJ)((0, pl._i)());
						}
					}),
					(0, Ca.p8)([ee.wN3, ee.hDe], function* () {
						yield (0, Ca.yJ)((0, pl.RQ)());
					}),
					(0, Ca.p8)(ee.brq, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.UE1 });
							const e = yield (0, Ca.Lt)(He.Ch),
								{ uuid: t, groupChallengeActivityTypeId: i } = e,
								n = yield (0, Ca.Lt)(He.VO),
								a = n && n.displayName,
								s = new Date(),
								r = {
									start: 1,
									limit: 100,
									todayDate: `${s.getFullYear()}-${s.getMonth() + 1}-${s.getDate()}`,
								},
								o = (yield (0, Ca.T1)(
									Na.tI.get,
									`/groupchallenge-service/groupchallenge/${t}/players`,
									{ params: r }
								)).data.map(
									({
										displayName: e,
										fullName: t,
										profileImageMedium: n,
										profileImageSmall: s,
										isProUser: r,
										userProfileId: o,
										isPartialResultSet: l,
										lastSyncTime: c,
										ranking: d,
										todayNumber: u,
										totalNumber: p,
									}) => {
										let y = '--';
										if (c) {
											const e = ns.A.parseISOUTC(c);
											y = as.Ay.formatTimeAgo(e);
										}
										return {
											userInfo: {
												displayname: e,
												fullname: t,
												profileImageUrlMedium: n,
												profileImageUrlSmall: s,
												userPro: r,
												userProfilePk: o,
											},
											hasPrivate: l,
											lastSyncTime: y,
											todayValue: (0, Al.jK)(i, u),
											value: (0, Al.jK)(i, p),
											rank: d,
											highlight: e === a,
										};
									}
								);
							yield (0, Ca.yJ)({ type: ee.tWs, data: o });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.d7H });
						}
					}),
				];
				function Nl({ keyword: e, start: t }) {
					const i = new URLSearchParams();
					return (
						i.append('keyword', e),
						i.append('start', `${t + 1}`),
						i.append('limit', '16'),
						(0, Na.tI)({
							method: 'post',
							headers: {
								'Content-Type':
									'application/x-www-form-urlencoded; charset=UTF-8',
							},
							url: '/usersearch-service/search?displayMutedStatus=true',
							data: i,
						})
					);
				}
				const Rl = [
					(0, Ca.p8)(ee.y9K, function* ({ reset: e }) {
						const t = yield (0, Ca.Lt)(He.eS),
							i = yield (0, Ca.Lt)(He.VO),
							n = yield (0, Ca.Lt)(We.RK);
						if (n.length < ll.w4) return;
						let a = yield (0, Ca.Lt)(We.TB);
						e && (a = 0);
						try {
							let s = [
								(0, Ca.T1)(
									Na.tI.get,
									`/group-service/group/${t.id}/members?supportOwner=true`
								),
								(0, Ca.T1)(Na.tI.get, `/group-service/group/${t.id}/invites`),
								(0, Ca.T1)(
									Na.tI.get,
									`/group-service/group/${t.id}/member/${i.profileId}/connections?supportOwner=true`
								),
								(0, Ca.T1)(
									Na.tI.get,
									`/group-service/group/${t.id}/invites/rejected`
								),
							];
							const [r, o, l, c] = yield (0, Ca.Q7)(s);
							yield (0, Ca.Q7)([
								(0, Ca.yJ)((0, pl.o8)(r.data)),
								(0, Ca.yJ)((0, pl.Xm)(o.data, c.data || [])),
								(0, Ca.yJ)((0, pl.zP)(l.data)),
								(0, Ca.yJ)((0, pl.bW)()),
							]);
							const d = yield (0, Ca.T1)(Nl, { keyword: n, start: a }),
								u = d.data.profileList.slice(0, 15);
							yield (0, Ca.yJ)(
								(0, pl.uX)({
									reset: e,
									list: u,
									hasMore: d.data.profileList.length > 15,
									nextCursor: a + 15,
									error: !1,
								})
							);
						} catch (s) {
							yield (0, Ca.yJ)((0, pl.uX)({ reset: e, error: !0 }));
						}
					}),
					(0, Ca.jP)(ee.dMC, function* ({ connection: e }) {
						try {
							yield Na.tI.delete(
								`/userblock-service/blockuser/${e.displayName}`
							);
						} catch (i) {}
						const t = yield Na.tI.get(
							`/connection-service/connection/status/${e.displayName}`
						);
						yield (0, Ca.yJ)((0, pl.nx)(t.data[0])),
							yield (0, Ca.yJ)((0, pl.yQ)({ connection: e }));
					}),
					(0, Ca.jP)(ee.jcG, function* ({ connection: e }) {
						const t = yield (0, Ca.Lt)(He.eS),
							i = (yield (0, Ca.Lt)(He.ge)).find(
								(t) => t.inviteeId === e.userId
							);
						if (!i)
							return void (yield (0, Ca.yJ)((0, pl.XT)({ connection: e })));
						const { userGroupId: n, groupInviteId: a } = i;
						try {
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/group-service/invite/group/${t.id}`,
								{ data: { userGroupId: n, groupInviteId: a } }
							),
								yield (0, Ca.yJ)((0, pl.XT)({ connection: e }));
						} catch (s) {
							yield (0, Ca.yJ)((0, pl.XT)({ connection: e, error: !0 }));
						}
					}),
					(0, Ca.jP)(ee.MTJ, function* ({ connection: e }) {
						const t = yield (0, Ca.Lt)(He.eS);
						try {
							const i = yield (0, Ca.T1)(
								Na.tI.post,
								`/group-service/invite/group/${t.id}`,
								{ userGroupId: t.id, inviteeId: e.userId }
							);
							yield (0, Ca.yJ)(
								(0, pl.d3)({ connection: e, error: !1, newInvite: i.data })
							);
						} catch (i) {
							i.response &&
								429 === i.response.status &&
								(yield (0, Ca.yJ)(
									(0, pl.Lt)({ open: !0, errorType: 'limit' })
								)),
								yield (0, Ca.yJ)((0, pl.d3)({ connection: e, error: !0 }));
						}
					}),
				];
				const bl = [
						(0, Ca.p8)(ee.LKb, function* () {
							const e = yield (0, Ca.Lt)(He.eS),
								t = yield (0, Ca.Lt)(He.VO);
							try {
								const i = (0, ps.B)();
								let n = '/web-gateway/course/owner';
								i &&
									(n = `/course-service/course/to/${Ns.A.CoordinateSystem.BD09}/CN/owner/${t.displayName}`);
								const [a, s] = yield (0, Ca.Q7)([
										(0, Ca.T1)(Na.tI.get, n),
										(0, Ca.T1)(
											Na.tI.get,
											`/course-service/course/group/${e.id}`
										),
									]),
									r = i ? a.data : a.data.coursesForUser,
									o = s.data || [];
								yield (0, Ca.yJ)(
									(0, pl.B8)({ error: !1, userCourses: r, groupCourses: o })
								);
								const l = [];
								o.forEach((e) => {
									l.push((0, Ca.yJ)((0, pl.QK)({ groupCourseId: e.courseId })));
								}),
									yield (0, Ca.Q7)(l);
							} catch (i) {
								yield (0, Ca.yJ)(
									(0, pl.B8)({ error: !0, userCourses: [], groupCourses: [] })
								);
							}
						}),
						(0, Ca.jP)(ee.ujQ, function* ({ userCourseId: e }) {
							const t = yield (0, Ca.Lt)(He.eS);
							if ((yield (0, Ca.Lt)(Je.c0)).find((t) => t.courseId === e))
								try {
									const i = yield (0, Ca.T1)(
										Na.tI.get,
										`/course-service/course/copycourse/${e}/group/${t.id}`
									);
									yield (0, Ca.yJ)((0, pl.KN)(i.data)),
										i.data &&
											i.data.courseId &&
											(yield (0, Ca.yJ)(
												(0, pl.QK)({ groupCourseId: i.data.courseId })
											));
								} catch (i) {}
						}),
						(0, Ca.jP)(ee.jh5, function* ({ groupCourseId: e }) {
							const t = {};
							(0, ps.B)() &&
								(t.params = {
									targetCoordinateSystem: Ns.A.CoordinateSystem.BD09,
								});
							try {
								const i = yield (0, Ca.T1)(
									Na.tI.get,
									`/course-service/course/${e}`,
									t
								);
								yield (0, Ca.yJ)(
									(0, pl.yZ)({ groupCourseId: e, groupCourseDetail: i.data })
								);
							} catch (i) {
								yield (0, Ca.yJ)(
									(0, pl.yZ)({
										error: !0,
										groupCourseId: e,
										groupCourseDetail: null,
									})
								);
							}
						}),
						(0, Ca.jP)(ee.mEv, function* ({ groupCourseId: e }) {
							if ((yield (0, Ca.Lt)(Je.a0)).find((t) => t.courseId === e))
								try {
									yield (0, Ca.T1)(Na.tI.delete, `/course-service/course/${e}`),
										yield (0, Ca.yJ)((0, pl.aG)({ groupCourseId: e }));
								} catch (t) {
									yield (0, Ca.yJ)((0, pl.aG)({ error: !0, groupCourseId: e }));
								}
							else yield (0, Ca.yJ)((0, pl.aG)({ groupCourseId: e }));
						}),
					],
					Ll = [
						'FLAGGED_FOR_REVIEW_BY_HUMAN',
						'FLAGGED_FOR_SECOND_REVIEW_BY_HUMAN',
					];
				function* Pl(e) {
					const { flagReason: t, note: i } = e,
						n = yield (0, Ca.Lt)(Ye.jl),
						a = yield (0, Ca.Lt)(Ye.ZE);
					try {
						const e = yield (0, Ca.T1)(
							Na.tI.post,
							`/activity-service/activity/${n}/image/${a}/flag`,
							{ flagReason: t, referrerContext: 'GCWeb Activity', note: i }
						);
						yield (0, Ca.yJ)((0, pl.IM)({ reviewStatus: e.data.reviewStatus })),
							Ll.includes(e.data.reviewStatus) &&
								(yield (0, Ca.yJ)((0, va.ASY)()),
								yield (0, Ca.yJ)((0, pl._S)({ activityId: n, imageUuid: a })));
					} catch (s) {
						s.response && 429 === s.response.status
							? yield (0, Ca.yJ)((0, pl.IM)({ reviewStatus: 'REPORTED' }))
							: yield (0, Ca.yJ)((0, pl.IM)({ error: !0, reviewStatus: null }));
					}
				}
				function* Ol(e) {
					const { flagReason: t, note: i } = e,
						n = yield (0, Ca.Lt)(Ye.P),
						a = yield (0, Ca.Lt)(Ye.ZE);
					try {
						const e = yield (0, Ca.T1)(
							Na.tI.post,
							`/conversation-service/newspost/${n}/image/${a}/flag`,
							{ flagReason: t, referrerContext: 'GCWeb Group Post', note: i }
						);
						yield (0, Ca.yJ)((0, pl.IM)({ reviewStatus: e.data.reviewStatus })),
							Ll.includes(e.data.reviewStatus) &&
								(yield (0, Ca.yJ)((0, va.ASY)()),
								yield (0, Ca.yJ)((0, pl.X)({ postUuid: n, imageUuid: a })));
					} catch (s) {
						s.response && 429 === s.response.status
							? yield (0, Ca.yJ)((0, pl.IM)({ reviewStatus: 'REPORTED' }))
							: yield (0, Ca.yJ)((0, pl.IM)({ error: !0, reviewStatus: null }));
					}
				}
				function* wl(e) {
					const { flagReason: t, note: i } = e,
						n = yield (0, Ca.Lt)(He.eS);
					try {
						const e = yield (0, Ca.T1)(
							Na.tI.post,
							`/group-service/group/${n.id}/image/flag`,
							{ flagReason: t, referrerContext: 'GCWeb Group Profile', note: i }
						);
						yield (0, Ca.yJ)((0, pl.IM)({ reviewStatus: e.data.reviewStatus }));
					} catch (a) {
						a.response && 429 === a.response.status
							? yield (0, Ca.yJ)((0, pl.IM)({ reviewStatus: 'REPORTED' }))
							: yield (0, Ca.yJ)((0, pl.IM)({ error: !0, reviewStatus: null }));
					}
				}
				const Fl = [
					(0, Ca.p8)(ee.nVg, function* (e) {
						const t = yield (0, Ca.Lt)(Ye.jl),
							i = yield (0, Ca.Lt)(Ye.P);
						t
							? yield (0, Ca.Zy)(Pl, e)
							: i
								? yield (0, Ca.Zy)(Ol, e)
								: yield (0, Ca.Zy)(wl, e);
					}),
					(0, Ca.p8)(ee.nmy, function* (e) {
						const { postUuid: t, imageUuid: i } = e;
						yield (0, Ca.yJ)((0, pl.vX)({ postUuid: t, imageUuid: i })),
							yield (0, Ca.yJ)((0, pl.gJ)({ postUuid: t }));
					}),
					(0, Ca.p8)(ee.H50, function* (e) {
						const { postUuid: t } = e,
							i = (yield (0, Ca.Lt)(He.N9)).list.find((e) => e.uuid === t);
						i &&
							!i.body &&
							0 === (i.postImages || []).length &&
							(yield (0, Ca.yJ)((0, pl.Kt)({ postUuid: t })));
						const n = (yield (0, Ca.Lt)(He.iC)).find(
								(e) => e.groupFeedType === ll.Ob.post && e.data.uuid === t
							),
							a = n && n.data;
						a &&
							!a.body &&
							0 === (a.postImages || []).length &&
							(yield (0, Ca.yJ)((0, pl.Kt)({ postUuid: t })));
					}),
					(0, Ca.p8)(ee.GMr, function* (e) {
						const { isGroupProfile: t, reviewStatus: i } = e;
						t && Ll.includes(i) && (yield (0, Ca.yJ)({ type: ee.x4Q }));
					}),
				];
				const kl = [
					(0, Ca.jP)(ee.T9v, function* (e) {
						const {
							gender: t,
							age: i,
							activityType: n,
							field: a,
							lang: s,
							measurementSystem: r,
							year: o,
							month: l,
						} = e;
						let c = i;
						try {
							yield (0, Ca.yJ)({ type: ee.Q_t, activityType: n, data: {} }),
								i.includes('+') && (c = i.replace('+', ''));
							const e = yield (0, Ca.T1)(
								Na.eE.get,
								`/gcs-insights/api/demographics/compare?gender=${t}&age=${c}&type=${n}&field=${a}&lang=${s}&localeUnit=${r}&year=${o}${l ? `&month=${l}` : ''}`
							);
							yield (0, Ca.yJ)({ type: ee.Jkn, activityType: n, data: e.data });
						} catch (d) {
							yield (0, Ca.yJ)({ type: ee.y1W, activityType: n, data: {} });
						}
					}),
				];
				const Ul = [
					(0, Ca.jP)(ee.UZo, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.Hj });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/userpreference-service/demographicComparisonPreferences'
							);
							yield (0, Ca.yJ)({ type: ee.sH9, data: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.Dtf, data: {} });
						}
					}),
					(0, Ca.jP)(ee.lji, function* (e) {
						const { newPreferences: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.Oht });
							const e = yield (0, Ca.T1)(
								Na.tI.put,
								'/userpreference-service/demographicComparisonPreferences',
								t
							);
							yield (0, Ca.yJ)({ type: ee.TmI, data: e.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.mw$, data: {} });
						}
					}),
				];
				const Ml = [
					(0, Ca.jP)(ee.tsG, function* (e) {
						const { displayName: t, start: i, limit: n } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.UcT });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`connection-service/connection/connections/pagination/${t}?start=${i}&limit=${n || 12}&displayMutedStatus=true`
							);
							yield (0, Ca.yJ)({
								type: ee.vbC,
								data: e.data.userConnections,
								connectionFullName: e.data.fullName,
								hasMoreToLoad: e.data.userConnections.length === (n || 12),
								replace: 1 === i,
							});
						} catch (a) {
							yield (0, Ca.yJ)({ type: ee.AOU });
						}
					}),
					(0, Ca.jP)(ee.BKO, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.YEL });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'connection-service/connection/pending?mutualConnectionCountIncluded=true'
							);
							yield (0, Ca.yJ)({ type: ee.D3v, data: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.Ice });
						}
					}),
					(0, Ca.jP)(ee.z01, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.Wqr });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'userprofile-service/socialProfile/followers'
							);
							yield (0, Ca.yJ)({ type: ee.BNs, data: e.data.userConnections });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.Y9f });
						}
					}),
				];
				const Gl = [
					(0, Ca.jP)(ee.mCc, function* (e) {
						const { startDate: t, endDate: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.DbE });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`usersummary-service/stats/heartRate/daily/${t}/${i}`
							);
							yield (0, Ca.yJ)({ type: ee.i6F, data: e.data });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.RQz, data: [] });
						}
					}),
					(0, Ca.jP)(ee.Jbr, function* (e) {
						const { endDate: t, numWeeks: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.wff });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`usersummary-service/stats/heartRate/weekly/${t}/${i}`
							);
							yield (0, Ca.yJ)({ type: ee.FvP, data: e.data });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.IwY });
						}
					}),
				];
				var xl = i(883716);
				const Bl = [
					(0, Ca.jP)(xl.I0, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: xl.BT });
							const { startDate: t, endDate: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`wellness-service/stats/sleep/daily/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: xl.UQ, dailySleepData: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: xl.$m, dailySleepData: null });
						}
					}),
					(0, Ca.jP)(xl.iQ, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: xl.R0 });
							const { endDate: t, numWeeks: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`wellness-service/stats/sleep/weekly/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: xl.kF, weeklySleepData: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: xl.Vo, weeklySleepData: null });
						}
					}),
				];
				const Hl = [
					(0, Ca.jP)(ee.bFD, function* (e = {}) {
						const { displayName: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.GD });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/userprofile-service/socialProfile/${t}`
							);
							yield (0, Ca.yJ)({
								type: ee.FWo,
								profile: e.data,
								displayName: t,
							});
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.AI7 });
						}
					}),
					(0, Ca.jP)(ee.M8r, function* (e = {}) {
						const { displayName: t, newUserSocialProfile: i, callback: n } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.LbT });
							const e = yield (0, Ca.T1)(
								Na.tI.put,
								`/userprofile-service/socialProfile/${t}`,
								i
							);
							yield (0, Ca.T1)(fa.G, n, e),
								yield (0, Ca.yJ)({
									type: ee.SNx,
									profile: e.data,
									displayName: t,
								});
						} catch (a) {
							yield (0, Ca.T1)(fa.j, n, a), yield (0, Ca.yJ)({ type: ee.VJ9 });
						}
					}),
				];
				const Vl = [
					(0, Ca.jP)(ee.iT7, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.Ptp });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/web-gateway/snapshot/usageIndicators'
							);
							yield (0, Ca.yJ)({
								type: ee.HNW,
								data: e.data || {},
								receivedAt: Date.now(),
							});
						} catch (t) {
							yield (0, Ca.yJ)({
								type: ee._Sr,
								error: t,
								receivedAt: Date.now(),
							});
						}
					}),
				];
				var Wl = i(549385);
				const Jl = [
					(0, Ca.jP)(ee.pBn, function* (e) {
						try {
							const {
									flights: t,
									userId: i,
									startDate: n,
									endDate: a,
								} = e.payload,
								s = { userId: i, startDate: n, endDate: a, flights: t },
								r = yield (0, Ca.T1)(
									Na.tI.post,
									'/jetlag-service/jetlag/trip',
									s
								);
							yield (0, Ca.yJ)({ type: ee.JtR, payload: r.data || {} });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.C27 });
						}
					}),
					(0, Ca.jP)(ee.L0G, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.mw6 });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/jetlag-service/jetlag/trip/all'
							);
							yield (0, Ca.yJ)({ type: ee.re9, payload: e.data || {} });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.cxb });
						}
					}),
					(0, Ca.jP)(ee.HPu, function* (e) {
						try {
							const { calendarDate: t } = e.payload;
							yield (0, Ca.yJ)({ type: ee.oMA });
							const i = yield (0, Ca.T1)(
								Na.tI.get,
								`/jetlag-service/jetlag/status/daily/${t}`
							);
							yield (0, Ca.yJ)(
								(0, Wl.oG)({
									calendarDate: t,
									data: i.data || {},
									status: i.status,
								})
							);
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.ogs });
						}
					}),
					(0, Ca.jP)(ee.BKr, function* (e) {
						try {
							const { tripId: t } = e.payload;
							yield (0, Ca.yJ)({ type: ee.WXU });
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/jetlag-service/jetlag/trip/${t}`
							);
							yield (0, Ca.yJ)({ type: ee.Nyv, payload: t });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.afS });
						}
					}),
					(0, Ca.jP)(ee.Jh6, function* (e) {
						try {
							const {
									trip: t,
									flights: i,
									startDate: n,
									endDate: a,
								} = e.payload,
								s = { ...t, flights: i, startDate: n, endDate: a };
							yield (0, Ca.T1)(Na.tI.put, '/jetlag-service/jetlag/trip', s);
							yield (0, Ca.yJ)({ type: ee.DsC, payload: s });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.OUw });
						}
					}),
				];
				var Yl = i(168718);
				const $l = [
					(0, Ca.jP)(Yl.Hg, function* (e) {
						try {
							const {
								payload: { startDate: t },
							} = e;
							yield (0, Ca.yJ)({ type: Yl.gd });
							const i = yield (0, Ca.T1)(
								Na.tI.get,
								`/biometric-service/criticalSwimSpeed/latest/${t}`
							);
							yield (0, Ca.yJ)({ type: Yl.ZL, latestCSS: i.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Yl.yI, latestCSS: null });
						}
					}),
					(0, Ca.jP)(Yl.Cp, function* (e) {
						const { startDate: t, endDate: i, aggregation: n } = e;
						try {
							yield (0, Ca.yJ)({ type: Yl.Lm });
							let e = `biometric-service/criticalSwimSpeed/range/${t}/${i}`;
							n && (e += '/?aggregation=' + n);
							const a = yield (0, Ca.T1)(Na.tI.get, e);
							yield (0, Ca.yJ)({ type: Yl._x, data: a.data });
						} catch (a) {
							yield (0, Ca.yJ)({ type: Yl.fi, data: [] });
						}
					}),
					(0, Ca.jP)(Yl.cN, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Yl.$g });
							let t = '/biometric-service/criticalSwimSpeed';
							const i = yield (0, Ca.T1)(Na.tI.post, t, { ...e.payload });
							e.actionToDispatch &&
								e.actionToDispatch.type &&
								(yield (0, Ca.yJ)(e.actionToDispatch)),
								yield (0, Ca.yJ)({ type: Yl.kB, response: i });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Yl.lO, data: {} });
						}
					}),
					(0, Ca.jP)(Yl.i9, function* ({ cssValue: e, callback: t }) {
						try {
							yield (0, Ca.yJ)({ type: Yl.DB });
							const i = e.measurementTimestampLocal,
								n = e.version,
								a = yield (0, Ca.T1)(
									Na.tI.delete,
									`biometric-service/criticalSwimSpeed/${i}/${n}`
								);
							t && t.type && (yield (0, Ca.yJ)(t)),
								yield (0, Ca.yJ)({ type: Yl.XV, data: a.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: Yl.Ym, data: {} });
						}
					}),
				];
				const jl = [
					(0, Ca.jP)(ee.OIx, function* (e) {
						yield (0, Ca.yJ)({ type: ee.noR });
						try {
							let t = `/gear-service/gear/filterGear?userProfilePk=${e.userProfilePk}`;
							const i = yield (0, Ca.T1)(Na.tI.get, t);
							yield (0, Ca.yJ)({
								type: ee.k3K,
								gearsData: i.data,
								receivedAt: Date.now(),
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.nzh, gear: {} });
						}
					}),
				];
				var Kl = i(348900);
				const zl = {
					1: 'RUNNING',
					2: 'CYCLING',
					3: 'SWIMMING',
					4: 'WELLNESS_STEPS_COUNT',
					5: 'WALKING',
					6: 'YOGA',
					8: 'HIKING',
					12: 'VIRTUAL_HIKE',
					13: 'VIRTUAL_CLIMB',
				};
				function* ql() {
					try {
						const e = yield (0, Ca.T1)(
							Na.tI.get,
							'/challenge-service/challenge/active'
						);
						yield (0, Ca.yJ)((0, Kl.rH)({ autoChallenge: e.data }));
					} catch (e) {
						yield (0, Ca.yJ)((0, Kl.rH)({ error: !0 }));
					}
				}
				const Ql = [
					(0, Ca.p8)(ee.zy2, function* () {
						yield (0, Ca.yJ)((0, ko.a4)());
					}),
					(0, Ca.p8)(ee.etd, function* (e) {
						try {
							const t = { start: 1, limit: 1e4 };
							e.limit > 0 && (t.limit = e.limit + 1);
							let i = '';
							e.categoryTypeIds.length > 0 &&
								((i = e.categoryTypeIds
									.map((e) => `challengeCategory=${zl[e]}`)
									.join('&')),
								(i = `?${i}`));
							const n = yield (0, Ca.T1)(
									Na.tI.get,
									`/badgechallenge-service/badgeChallenge/available${i}`,
									{ params: t }
								),
								a = { list: n.data, hasMore: !1 };
							e.limit > 0 && (a.hasMore = n.data.length > e.limit),
								yield (0, Ca.yJ)((0, Kl.xH)(a));
						} catch (t) {
							yield (0, Ca.yJ)((0, Kl.xH)({ error: !0 }));
						}
					}),
					(0, Ca.p8)(ee.Jbg, function* (e) {
						const { challenge: t } = e,
							i = as.Ay.formatISODate(new Date()),
							n = `/badgechallenge-service/badgeChallenge/${t.uuid}/optIn/${i}`;
						try {
							yield (0, Ca.T1)(Na.tI.post, n, {}),
								yield (0, Ca.yJ)((0, Kl.DW)({ ...t, userJoined: !0 })),
								yield (0, Ca.yJ)((0, Kl.Vs)({ error: !1, challenge: t }));
						} catch (a) {
							yield (0, Ca.yJ)((0, Kl.Vs)({ error: !0, challenge: t }));
						}
					}),
					(0, Ca.p8)(ee.eD5, function* (e) {
						try {
							const t = { start: 1, limit: 1e4 };
							e.limit > 0 && (t.limit = e.limit + 1);
							let i = '';
							e.categoryTypeIds.length > 0 &&
								((i = e.categoryTypeIds
									.map((e) => `challengeCategory=${zl[e]}`)
									.join('&')),
								(i = `?${i}`));
							const n = yield (0, Ca.T1)(
									Na.tI.get,
									`/badgechallenge-service/virtualChallenge/available${i}`,
									{ params: t }
								),
								a = { list: n.data, hasMore: !1 };
							e.limit > 0 && (a.hasMore = n.data.length > e.limit),
								yield (0, Ca.yJ)((0, Kl.Mb)(a));
						} catch (t) {
							yield (0, Ca.yJ)((0, Kl.Mb)({ error: !0 }));
						}
					}),
					(0, Ca.p8)(ee.nVB, function* (e) {
						yield (0, Ca.yJ)((0, ko.a4)());
						try {
							const { challengeUuid: t } = e,
								i = yield (0, Ca.T1)(
									Na.tI.get,
									`/badgechallenge-service/badgeChallenge/${t}`
								);
							yield (0, Ca.yJ)((0, Kl.sy)({ challenge: i.data }));
						} catch (t) {
							yield (0, Ca.yJ)((0, Kl.sy)({ error: !0 }));
						}
					}),
					(0, Ca.p8)(ee.ZaY, function* () {
						const { challenge: e } = yield (0, Ca.Lt)(wn.J8);
						try {
							yield (0, Ca.yJ)((0, Kl.bc)({ error: !0, badge: null }));
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/badge-service/badge/detail/v2/${e.badgeId}`
							);
							yield (0, Ca.yJ)((0, Kl.bc)({ badge: t.data }));
						} catch (t) {
							yield (0, Ca.yJ)((0, Kl.bc)({ error: !0, badge: null }));
						}
					}),
					(0, Ca.p8)(ee.aZV, function* () {
						const { challenge: e } = yield (0, Ca.Lt)(wn.J8),
							t = as.Ay.formatISODate(new Date()),
							i = `/badgechallenge-service/badgeChallenge/${e.uuid}/optIn/${t}`;
						try {
							yield (0, Ca.T1)(Na.tI.post, i, {}),
								yield (0, Ca.yJ)((0, Kl.Ri)({}));
						} catch (n) {
							if (n.response && 400 === n.response.status)
								return void (yield (0, Ca.yJ)(
									(0, Kl.Ri)({ error: !0, tooMany: !0 })
								));
							yield (0, Ca.yJ)((0, Kl.Ri)({ error: !0 }));
						}
					}),
					(0, Ca.p8)(ee.xhR, function* () {
						const { challenge: e } = yield (0, Ca.Lt)(wn.J8),
							t = `/badgechallenge-service/badgeChallenge/${e.uuid}/optOut`;
						try {
							yield (0, Ca.T1)(Na.tI.post, t, {}),
								yield (0, Ca.yJ)((0, Kl.m1)()),
								yield (0, Ca.yJ)((0, Kl.iu)({ route: '' })),
								dl.default.navigate('/challenge');
						} catch (i) {
							yield (0, Ca.yJ)((0, Kl.m1)(!0));
						}
					}),
					(0, Ca.p8)(ee.uMM, function* (e) {
						try {
							const t = {};
							e.limit > 0 && ((t.start = 1), (t.limit = e.limit + 1));
							const [i, n, a, s, r, o, l] = yield (0, Ca.Q7)([
								(0, Ca.T1)(Na.tI.get, '/challenge-service/challenge/active'),
								(0, Ca.T1)(
									Na.tI.get,
									'/groupchallenge-service/groupchallenge/nonCompleted',
									{ params: t }
								),
								(0, Ca.T1)(
									Na.tI.get,
									'/adhocchallenge-service/adHocChallenge/nonCompleted',
									{ params: t }
								),
								(0, Ca.T1)(
									Na.tI.get,
									'/vivokidchallenge-service/adHocChallenge/nonCompleted',
									{ params: t }
								),
								(0, Ca.T1)(
									Na.tI.get,
									'/vivokidchallenge-service/teamChallenge/nonCompleted',
									{ params: t }
								),
								(0, Ca.T1)(
									Na.tI.get,
									'/badgechallenge-service/badgeChallenge/non-completed',
									{ params: { desc: !0, start: 1, ...t, limit: 1e4 } }
								),
								(0, Ca.T1)(
									Na.tI.get,
									'/badgechallenge-service/virtualChallenge/inProgress',
									{ params: { desc: !0, start: 1, ...t, limit: 1e4 } }
								),
							]);
							yield (0, Ca.yJ)(
								(0, Kl.MO)({
									autoChallenge: i.data,
									groupChallenges: n.data,
									adHocChallenges: a.data,
									vivokidChallenges: s.data,
									teamStepsVivokidChallenges: r.data,
									badgeChallenges: o.data,
									virtualChallenges: l.data,
								})
							);
						} catch (t) {
							yield (0, Ca.yJ)((0, Kl.MO)({ error: !0 }));
						}
					}),
					(0, Ca.p8)(ee.FP_, function* () {
						try {
							yield (0, Ca.T1)(
								Na.tI.post,
								'/userprofile-service/userprofile/optional-feature/wellness-autoleaderboard/opt-out',
								{}
							),
								yield (0, Ca.yJ)((0, Kl.MT)({ open: !1, submitting: !1 })),
								yield (0, Ca.Zy)(ql);
						} catch (e) {
							yield (0, Ca.yJ)((0, Kl.MT)({ open: !0, submitting: !1 })),
								yield (0, Ca.yJ)({
									type: 'SHOW_SNACKBAR_MESSAGE',
									show: !0,
									content: { ns: 'settings', transKey: 'something_went_wrong' },
								});
						}
					}),
					(0, Ca.p8)(ee.D8k, function* (e) {
						try {
							const t = {};
							e.limit > 0 && ((t.start = 1), (t.limit = e.limit + 1));
							const [i, n, a, s, r, o, l] = yield (0, Ca.Q7)([
								(0, Ca.T1)(Na.tI.get, '/challenge-service/challenge/previous'),
								(0, Ca.T1)(
									Na.tI.get,
									'/groupchallenge-service/groupchallenge/history/userJoined',
									{ params: t }
								),
								(0, Ca.T1)(
									Na.tI.get,
									'/adhocchallenge-service/adHocChallenge/historical',
									{ params: t }
								),
								(0, Ca.T1)(
									Na.tI.get,
									'/vivokidchallenge-service/adHocChallenge/historical',
									{ params: t }
								),
								(0, Ca.T1)(
									Na.tI.get,
									'/vivokidchallenge-service/teamChallenge/historical',
									{ params: t }
								),
								(0, Ca.T1)(
									Na.tI.get,
									'/badgechallenge-service/badgeChallenge/completed',
									{ params: { desc: !0, start: 1, limit: 1e4, ...t } }
								),
								(0, Ca.T1)(
									Na.tI.get,
									'/badgechallenge-service/virtualChallenge/completed',
									{ params: { desc: !0, start: 1, limit: 1e4, ...t } }
								),
							]);
							yield (0, Ca.yJ)(
								(0, Kl.BU)({
									autoChallenge: i.data,
									groupChallenges: n.data,
									adHocChallenges: a.data,
									vivokidChallenges: s.data,
									teamStepsVivokidChallenges: r.data,
									badgeChallenges: o.data,
									virtualChallenges: l.data,
								})
							);
						} catch (t) {
							yield (0, Ca.yJ)((0, Kl.BU)({ error: !0 }));
						}
					}),
					(0, Ca.p8)(ee.Glc, function* () {
						const e = (yield (0, Ca.Lt)(wn.WL)).lastJoined;
						if (!e) return;
						const t = `/badgechallenge-service/badgeChallenge/${e.uuid}/optOut`;
						try {
							yield (0, Ca.T1)(Na.tI.post, t, {}),
								yield (0, Ca.yJ)((0, Kl.DW)({ ...e, userJoined: !1 }));
						} catch (i) {}
					}),
				];
				const Xl = [
					(0, Ca.jP)(ee.feX, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.w_q });
							const { startDate: t, endDate: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`usersummary-service/stats/bodybattery/daily/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: ee.Hxb, data: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.yZU, data: null });
						}
					}),
					(0, Ca.jP)(ee.G3l, function* (e) {
						try {
							if ((0, mo.b)(Ao.rY, ar.A.get('userRoles'))) return;
							yield (0, Ca.yJ)({ type: ee.v2W });
							const { calendarDate: t } = e.payload,
								i = yield (0, Ca.T1)(
									Na.tI.get,
									`wellness-service/wellness/bodyBattery/events/${t}`
								);
							yield (0, Ca.yJ)({ type: ee.urR, data: i.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.lRj, data: null });
						}
					}),
				];
				var Zl = i(548413),
					ec = i(614683),
					tc = i(820284);
				const ic = [
						tc.iR.CONNECTION_REQUEST,
						tc.iR.GROUP_JOIN_REQUEST,
						tc.iR.GROUP_INVITE,
						tc.iR.ADHOC_INVITE,
						tc.iR.KIDADHOC_INVITE,
						tc.iR.KIDTEAM_INVITE,
						tc.iR.DEVICE_INVITE,
					]
						.map((e) => `req=${e}`)
						.join('&'),
					nc = 'ChallengePrivacy.Dismissed';
				function* ac(e) {
					const t = yield (0, Ca.Lt)(Gn.VO),
						i = yield (0, Ca.Lt)(Gn.wQ),
						{ uniqueKey: n, request: a } = e;
					try {
						yield (0, Ca.T1)(
							Na.tI.put,
							`/connection-service/connection/accept/${a.connectionRequestId}`
						),
							yield (0, Ca.yJ)(
								(0, ec.fM)({ uniqueKey: n, status: tc.BS.ACCEPTED })
							),
							ul.A.renderPrivacyAlert(t, i, 'connection');
					} catch (s) {
						yield (0, Ca.yJ)(
							(0, ec.fM)({ uniqueKey: n, status: tc.BS.UNDECIDED })
						);
					}
				}
				function* sc(e) {
					const t = yield (0, Ca.Lt)(Gn.Ik),
						{ doNotShowAgain: i, uniqueKey: n } = e,
						a = e.request;
					if (!t && i) {
						const e = yield (0, Ca.Lt)(me.cC, nc);
						let t = e ? JSON.parse(e) : [];
						t.includes(a.challengeTypeId) || t.push(a.challengeTypeId),
							yield (0, Ca.yJ)((0, va.$76)(nc, JSON.stringify(t)));
					}
					try {
						let e;
						switch (a.challengeTypeId) {
							case tc.Vl.VIVOKID:
								e = `/vivokidchallenge-service/adHocChallenge/invite/${a.challengeInviteId}/accept`;
								break;
							case tc.Vl.VIVOKID_TEAMS:
								e = `/vivokidchallenge-service/teamChallenge/invite/${a.challengeInviteId}/accept`;
								break;
							default:
								e = `/adhocchallenge-service/adHocChallenge/invite/${a.challengeInviteId}/accept`;
						}
						yield (0, Ca.T1)(Na.tI.put, e),
							yield (0, Ca.yJ)(
								(0, ec.fM)({ uniqueKey: n, status: tc.BS.ACCEPTED })
							);
					} catch (s) {
						yield (0, Ca.yJ)(
							(0, ec.fM)({ uniqueKey: n, status: tc.BS.UNDECIDED })
						);
					}
				}
				function* rc(e) {
					const { uniqueKey: t } = e,
						i = e.request;
					try {
						let e;
						switch (i.challengeTypeId) {
							case tc.Vl.VIVOKID:
								e = `/vivokidchallenge-service/adHocChallenge/invite/${i.challengeInviteId}/decline`;
								break;
							case tc.Vl.VIVOKID_TEAMS:
								e = `/vivokidchallenge-service/teamChallenge/invite/${i.challengeInviteId}/decline`;
								break;
							default:
								e = `/adhocchallenge-service/adHocChallenge/invite/${i.challengeInviteId}/decline`;
						}
						yield (0, Ca.T1)(Na.tI.put, e),
							yield (0, Ca.yJ)(
								(0, ec.fM)({ uniqueKey: t, status: tc.BS.DECLINED })
							);
					} catch (n) {
						yield (0, Ca.yJ)(
							(0, ec.fM)({ uniqueKey: t, status: tc.BS.UNDECIDED })
						);
					}
				}
				function* oc(e) {
					const { confirm: t } = e,
						{ uniqueKey: i, request: n } = yield (0, Ca.Lt)(Gn.zQ);
					if ((yield (0, Ca.yJ)((0, ec.l3)({ open: !1 })), t))
						try {
							n.groupInviteId
								? yield (0, Ca.T1)(
										Na.tI.delete,
										`/group-service/invite/group/${n.groupId}`,
										{
											data: {
												userGroupId: n.groupId,
												groupInviteId: n.groupInviteId,
											},
										}
									)
								: n.groupMemberRequestId &&
									(yield (0, Ca.T1)(
										Na.tI.delete,
										`/group-service/private/group/${n.groupId}`,
										{
											data: {
												userGroupId: n.groupId,
												groupMemberRequestId: n.groupMemberRequestId,
											},
										}
									)),
								yield (0, Ca.yJ)(
									(0, ec.fM)({ uniqueKey: i, status: tc.BS.DECLINED })
								);
						} catch (a) {
							400 === a.response.status ||
							403 === a.response.status ||
							404 === a.response.status
								? yield (0, Ca.yJ)(
										(0, ec.fM)({ uniqueKey: i, status: tc.BS.DECLINED })
									)
								: yield (0, Ca.yJ)(
										(0, ec.fM)({ uniqueKey: i, status: tc.BS.UNDECIDED })
									);
						}
					else
						yield (0, Ca.yJ)(
							(0, ec.fM)({ uniqueKey: i, status: tc.BS.UNDECIDED })
						);
				}
				const lc = [
					(0, Ca.p8)(ee.EWk, function* () {
						if (
							(yield (0, Ca.yJ)((0, va.h$7)(Ao.Z_)),
							(yield (0, Ca.Lt)(
								me.Es,
								'GDPR.ProfileActivityVisibility.Dismissed'
							)) ||
								(yield (0, Ca.yJ)(
									(0, va.xOb)('GDPR.ProfileActivityVisibility.Dismissed')
								)),
							!(yield (0, Ca.Lt)(Gn.Ik)))
						) {
							(yield (0, Ca.Lt)(me.Es, nc)) ||
								(yield (0, Ca.yJ)((0, va.xOb)(nc)));
						}
					}),
					(0, Ca.p8)(ee.ZLD, function* (e) {
						const { cursor: t, limit: i } = e;
						try {
							const e = { limit: i };
							t && (e.cursor = t);
							const n = yield (0, Ca.T1)(
								Na.tI.get,
								`/web-gateway/inbox/requests?${ic}`,
								{ params: e }
							);
							yield (0, Ca.yJ)(
								(0, ec.OV)({
									requests: n.data.requests,
									nextCursor: n.data.nextCursor,
								})
							);
						} catch (n) {
							yield (0, Ca.yJ)((0, ec.OV)({ error: !0 }));
						}
						Zl.A.trigger(Zl.A.Events.ENABLE);
					}),
					(0, Ca.p8)(ee.eX0, function* (e) {
						const t = yield (0, Ca.Lt)(
								me.cC,
								'GDPR.ProfileActivityVisibility.Dismissed'
							),
							{ uniqueKey: i, accept: n } = e,
							a = e.request;
						if (
							(yield (0, Ca.yJ)(
								(0, ec.fM)({ uniqueKey: i, status: tc.BS.PROCESSING })
							),
							n)
						)
							'true' === t
								? yield (0, Ca.Zy)(ac, e)
								: yield (0, Ca.yJ)(
										(0, ec.Et)({ open: !0, uniqueKey: i, request: a })
									);
						else
							try {
								yield (0, Ca.T1)(
									Na.tI.put,
									`/userprofile-service/connection/decline/${a.connectionRequestId}`
								),
									yield (0, Ca.yJ)(
										(0, ec.fM)({ uniqueKey: i, status: tc.BS.DECLINED })
									);
							} catch (s) {
								yield (0, Ca.yJ)(
									(0, ec.fM)({ uniqueKey: i, status: tc.BS.UNDECIDED })
								);
							}
					}),
					(0, Ca.p8)(ee.haw, function* (e) {
						const { uniqueKey: t, accept: i } = e,
							n = e.request;
						if (
							(yield (0, Ca.yJ)(
								(0, ec.fM)({ uniqueKey: t, status: tc.BS.PROCESSING })
							),
							!i)
						)
							return void (yield (0, Ca.yJ)(
								(0, ec.T5)({
									open: !0,
									dialogType: tc.wR.CANCEL_CONFIRM,
									uniqueKey: t,
									request: n,
								})
							));
						if (yield (0, Ca.Lt)(Gn.Ik))
							return void (yield (0, Ca.Zy)(sc, { uniqueKey: t, request: n }));
						let a = [];
						try {
							const e = yield (0, Ca.Lt)(me.cC, nc);
							'string' === typeof e && (a = JSON.parse(e));
						} catch (s) {}
						a.includes(n.challengeTypeId)
							? yield (0, Ca.Zy)(sc, { uniqueKey: t, request: n })
							: yield (0, Ca.yJ)(
									(0, ec.T5)({
										open: !0,
										dialogType: tc.wR.PRIVACY_CONFIRM,
										uniqueKey: t,
										request: n,
									})
								);
					}),
					(0, Ca.p8)(ee.H0O, function* (e) {
						const { uniqueKey: t, accept: i } = e,
							n = e.request;
						yield (0, Ca.yJ)(
							(0, ec.fM)({ uniqueKey: t, status: tc.BS.PROCESSING })
						),
							i
								? yield (0, Ca.yJ)(
										(0, ec.To)({ open: !0, uniqueKey: t, request: n })
									)
								: 'HIDDEN' !== n.groupVisibility
									? (yield (0, Ca.yJ)(
											(0, ec.l3)({ open: !1, uniqueKey: t, request: n })
										),
										yield (0, Ca.Zy)(oc, { confirm: !0 }))
									: yield (0, Ca.yJ)(
											(0, ec.l3)({ open: !0, uniqueKey: t, request: n })
										);
					}),
					(0, Ca.p8)(ee.y63, function* (e) {
						const { uniqueKey: t, newStatus: i } = e,
							n = yield (0, Ca.Lt)(Gn.IV, t),
							a = e.request,
							s = 'DECLINED' === i ? tc.BS.DECLINED : tc.BS.UNDECIDED;
						yield (0, Ca.yJ)(
							(0, ec.fM)({
								uniqueKey: t,
								status: 'DECLINED' === i ? tc.BS.PROCESSING : tc.BS.UNDOING,
							})
						);
						try {
							let e = { ...a, deviceInviteStatus: i };
							null === e.inviteeEmail && (e.inviteeEmail = void 0),
								e.productPartNumber && (e.productPartNumber = void 0),
								yield (0, Ca.T1)(
									Na.tI.put,
									`/invite-service/invite/${a.deviceInviteId}`,
									e
								),
								yield (0, Ca.yJ)((0, ec.fM)({ uniqueKey: t, status: s }));
						} catch (r) {
							yield (0, Ca.yJ)((0, ec.fM)({ uniqueKey: t, status: n }));
						}
					}),
					(0, Ca.p8)(ee.X90, function* (e) {
						const { confirm: t } = e,
							{ uniqueKey: i, request: n } = yield (0, Ca.Lt)(Gn.D0);
						if ((yield (0, Ca.yJ)((0, ec.To)({ open: !1 })), t))
							try {
								let e;
								n.groupInviteId
									? (e = yield (0, Ca.T1)(
											Na.tI.put,
											`/group-service/invite/group/${n.groupId}`,
											{ userGroupId: n.groupId, groupInviteId: n.groupInviteId }
										))
									: n.groupMemberRequestId &&
										(e = yield (0, Ca.T1)(
											Na.tI.put,
											`/group-service/private/group/${n.groupId}`,
											{
												userGroupId: n.groupId,
												groupMemberRequestId: n.groupMemberRequestId,
											}
										)),
									e.data
										? yield (0, Ca.yJ)(
												(0, ec.fM)({ uniqueKey: i, status: tc.BS.ACCEPTED })
											)
										: (yield (0, Ca.yJ)(
												(0, ec.fM)({ uniqueKey: i, status: tc.BS.UNDECIDED })
											),
											yield (0, Ca.yJ)(
												(0, ec.P0)({
													open: !0,
													errorType: n.groupInviteId
														? ll.QC.invitationCancelled
														: ll.QC.requestCancelled,
												})
											));
							} catch (a) {
								if (
									(yield (0, Ca.yJ)(
										(0, ec.fM)({ uniqueKey: i, status: tc.BS.UNDECIDED })
									),
									a.response &&
										(403 === a.response.status || 404 === a.response.status))
								) {
									const e =
										403 === a.response.status
											? ll.QC.acceptRequestNoPermission
											: ll.QC.groupDeleted;
									yield (0, Ca.yJ)((0, ec.P0)({ open: !0, errorType: e }));
								}
							}
						else
							yield (0, Ca.yJ)(
								(0, ec.fM)({ uniqueKey: i, status: tc.BS.UNDECIDED })
							);
					}),
					(0, Ca.p8)(ee.Xo0, function* (e) {
						const { actionType: t } = e,
							{ uniqueKey: i, request: n } = yield (0, Ca.Lt)(Gn.wT);
						yield (0, Ca.yJ)((0, ec.Et)({ open: !1 })),
							t !== tc.No.CANCEL
								? (t === tc.No.DO_NOT_SHOW_AGAIN &&
										(yield (0, Ca.yJ)(
											(0, va.$76)(
												'GDPR.ProfileActivityVisibility.Dismissed',
												'true'
											)
										)),
									yield (0, Ca.Zy)(ac, { uniqueKey: i, request: n }))
								: yield (0, Ca.yJ)(
										(0, ec.fM)({ uniqueKey: i, status: tc.BS.UNDECIDED })
									);
					}),
					(0, Ca.p8)(ee.LpY, function* (e) {
						const { ok: t, doNotShowAgain: i } = e,
							n = yield (0, Ca.Lt)(Gn.zC),
							{ uniqueKey: a, dialogType: s } = n,
							r = n.request;
						yield (0, Ca.yJ)((0, ec.T5)({ open: !1 })),
							t
								? s !== tc.wR.CANCEL_CONFIRM
									? yield (0, Ca.Zy)(sc, {
											uniqueKey: a,
											request: r,
											doNotShowAgain: i,
										})
									: yield (0, Ca.Zy)(rc, { uniqueKey: a, request: r })
								: yield (0, Ca.yJ)(
										(0, ec.fM)({ uniqueKey: a, status: tc.BS.UNDECIDED })
									);
					}),
					(0, Ca.p8)(ee.kv8, oc),
				];
				var cc = i(702076),
					dc = i(576797),
					uc = i(450997);
				const pc = [
					(0, Ca.jP)(ee.CLr, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.pEC });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'devicebackup-service/backup'
							);
							yield (0, Ca.yJ)({
								type: ee.goz,
								allAvailableDeviceBackups: e.data,
							});
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.RdK });
						}
					}),
					(0, Ca.jP)(ee.v9P, function* (e) {
						const { deviceId: t } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.AIH });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`devicebackup-service/backup/${t}`
							);
							yield (0, Ca.yJ)((0, uc.NU)({ compatibleDeviceBackups: e.data }));
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.mZ9 });
						}
					}),
					(0, Ca.jP)(ee.vS0, function* (e) {
						const { deviceId: t } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.NyP }),
								yield (0, Ca.T1)(
									Na.tI.delete,
									`devicebackup-service/backup/${t}`
								),
								yield (0, Ca.yJ)({ type: ee.rKG, deviceId: t });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.AtF });
						}
					}),
					(0, Ca.jP)(ee.je6, function* (e) {
						const {
								targetDeviceId: t,
								deviceBackupId: i,
								currentDeviceName: n,
							} = e.payload,
							a = yield (0, Ca.Lt)(xn.Oe);
						try {
							yield (0, Ca.yJ)({ type: ee.gNg }),
								yield (0, Ca.T1)(
									Na.tI.post,
									`devicebackup-service/backup/restoreDevice/${t}/${i}`
								),
								yield (0, Ca.yJ)({ type: ee.nuq }),
								a && (cc.A.openAgent(t), yield (0, Ca.yJ)((0, uc.Tc)(!1))),
								dc.A.push({
									event: 'track_event',
									category: 'Device Backups Restore Modal',
									action: 'Clicked restore button for confirmation',
									label: n,
								});
						} catch (s) {
							yield (0, Ca.yJ)({ type: ee.OuJ });
						}
					}),
					(0, Ca.jP)(ee.RgZ, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.Od3 });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'devicebackup-service/backup/summary'
							);
							yield (0, Ca.yJ)({ type: ee.jBf, backupsSummary: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.O7g });
						}
					}),
				];
				const yc = [
					(0, Ca.jP)(ee.$N7, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.qyj });
							const { startDate: t, endDate: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`sleep-service/stats/sleep/daily/${t}/${i}`
								);
							yield (0, Ca.yJ)({ type: ee.HuX, data: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.SaL, data: null });
						}
					}),
					(0, Ca.jP)(ee.bCV, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.qyj });
							const { endDate: t } = e.payload,
								i = yield (0, Ca.T1)(
									Na.tI.get,
									`sleep-service/stats/sleep/weekly/${t}/52`
								);
							yield (0, Ca.yJ)({ type: ee.HuX, data: i.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.SaL, data: null });
						}
					}),
				];
				function* hc(e) {
					try {
						const { calendarDate: t, nonSleepBufferMinutes: i } = e;
						yield (0, Ca.yJ)({ type: ee.Bto, calendarDate: t });
						const n = { date: t };
						i && (n.nonSleepBufferMinutes = i);
						const a = Sa.zJ(n),
							s = yield (0, Ca.T1)(
								Na.tI.get,
								`sleep-service/sleep/dailySleepData${a}`
							);
						yield (0, Ca.yJ)({
							type: ee.q1c,
							dailySleepData: s.data,
							calendarDate: t,
						});
					} catch (t) {
						yield (0, Ca.yJ)({
							type: ee.DAU,
							dailySleepData: null,
							calendarDate:
								(null === e || void 0 === e ? void 0 : e.calendarDate) || null,
						});
					}
				}
				function* gc(e) {
					const { calendarDate: t } = e;
					try {
						yield (0, Ca.yJ)({ type: ee.scF });
						const i = yield (0, Ca.T1)(
							Na.tI.get,
							`sleep-service/sleep/dailySleep?date=${t}`
						);
						yield (0, Ca.yJ)({
							type: ee.Tto,
							payload: i.data,
							calendarDate: e.calendarDate,
						});
					} catch (i) {
						yield (0, Ca.yJ)({ type: ee._dh, calendarDate: e.calendarDate });
					}
				}
				const mc = [
					(0, Ca.jP)(ee.OvS, hc),
					(0, Ca.jP)(ee.xMj, function* (e) {
						const { userNote: t, calendarDate: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.PCN, userNote: t, calendarDate: i });
							const e = yield (0, Ca.T1)(
								Na.tI.put,
								`sleep-service/sleep/dailySleep/${i}/note`,
								{ userNote: t }
							);
							yield (0, Ca.yJ)({ type: ee.DRW, userNote: e.data });
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.U8F, calendarDate: i });
						}
					}),
					(0, Ca.jP)(ee.wXw, function* (e) {
						const {
							sleepObject: t,
							calendarDate: i,
							nonSleepBufferMinutes: n,
						} = e;
						try {
							yield (0, Ca.yJ)({ type: ee.Xej });
							const e = yield (0, Ca.T1)(
								Na.tI.post,
								'sleep-service/sleep/dailySleep',
								t
							);
							yield (0, Ca.yJ)({
								type: ee.shm,
								dailySleepData: e.data,
								calendarDate: i,
							}),
								200 === e.status
									? yield (0, Ca.Q7)([
											(0, Ca.T1)(hc, {
												calendarDate: i,
												nonSleepBufferMinutes: n,
											}),
										])
									: yield (0, Ca.yJ)({ type: ee.ByZ, calendarDate: i });
						} catch (a) {
							yield (0, Ca.yJ)({ type: ee.ByZ, calendarDate: i });
						}
					}),
					(0, Ca.jP)(ee.ffC, function* (e) {
						try {
							const t = e.newSleepDTO;
							yield (0, Ca.yJ)({ type: ee.yLp });
							const i = yield (0, Ca.T1)(
								Na.tI.put,
								`sleep-service/sleep/dailySleep/${t.id}`,
								t
							);
							if (200 === i.status) {
								const {
									displayName: t,
									calendarDate: i,
									nonSleepBufferMinutes: n,
								} = e;
								yield (0, Ca.Q7)([
									(0, Ca.T1)(hc, {
										displayName: t,
										calendarDate: i,
										nonSleepBufferMinutes: n,
									}),
									(0, Ca.T1)(rs, { displayName: t, calendarDate: i }),
								]);
							} else yield (0, Ca.yJ)({ type: ee.mdI });
							yield (0, Ca.yJ)({
								type: ee.BA4,
								dailySleepData: i.data,
								calendarData: e.calendarDate,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.mdI });
						}
					}),
					(0, Ca.jP)(ee.kEF, function* (e) {
						const { startDate: t, endDate: i } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.tZ0, startDate: t, endDate: i });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`hrv-service/hrv/daily/${t}/${i}`
							);
							yield (0, Ca.yJ)({
								type: ee.U82,
								hrvData: e.data,
								startDate: t,
								endDate: i,
							});
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.d9n, startDate: t, endDate: i });
						}
					}),
					(0, Ca.jP)(ee.iPz, function* (e) {
						const { calendarDate: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.pbH, calendarDate: t });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`sleep-service/sleep/naps/${t}`
							);
							yield (0, Ca.yJ)({
								type: ee.Cp8,
								dailyNapData: e.data,
								calendarDate: t,
							});
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.Br5, calendarDate: t });
						}
					}),
					(0, Ca.jP)(ee.gTf, function* (e) {
						const { napObject: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.jm5 });
							200 ===
							(yield (0, Ca.T1)(Na.tI.post, 'sleep-service/sleep/nap', t))
								.status
								? (yield (0, Ca.Q7)([
										(0, Ca.T1)(gc, { calendarDate: t.calendarDate }),
									]),
									yield (0, Ca.yJ)({ type: ee.Yt7 }))
								: yield (0, Ca.yJ)({ type: ee.poc });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.poc });
						}
					}),
					(0, Ca.jP)(ee.mxd, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.TFp });
							const { calendarDate: t, startTimeInMilis: i } = e;
							204 ===
							(yield (0, Ca.T1)(
								Na.tI.delete,
								`sleep-service/sleep/nap/${t}/${i}`
							)).status
								? (yield (0, Ca.Q7)([(0, Ca.T1)(gc, { calendarDate: t })]),
									yield (0, Ca.yJ)({ type: ee.qDd }))
								: yield (0, Ca.yJ)({
										type: ee.LMM,
										calendarDate: e.calendarDate,
									});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.LMM, calendarDate: e.calendarDate });
						}
					}),
					(0, Ca.jP)(ee.eq6, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.jm5 });
							const {
								calendarDate: t,
								startTimeInMilis: i,
								endTimeInMilis: n,
								updatedNapObject: a,
							} = e;
							204 ===
							(yield (0, Ca.T1)(
								Na.tI.put,
								`sleep-service/sleep/nap/${t}/${i}/${n}`,
								a
							)).status
								? (yield (0, Ca.Q7)([(0, Ca.T1)(gc, { calendarDate: t })]),
									yield (0, Ca.yJ)({ type: ee.Yt7 }))
								: yield (0, Ca.yJ)({ type: ee.poc });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.poc });
						}
					}),
				];
				const Ac = [
					(0, Ca.jP)(ee.xBd, function* (e = {}) {
						try {
							yield (0, Ca.yJ)({ type: ee.Q$A });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/notification-service/preference/userPreference'
							);
							yield (0, Ca.yJ)({ type: ee.L03, emailNotifications: e.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.Q9P });
						}
					}),
					(0, Ca.jP)(ee.Gmq, function* (e = {}) {
						const { updatedEmailNotifications: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.Dmj });
							yield (0, Ca.T1)(
								Na.tI.put,
								'/notification-service/preference/userPreference',
								t
							);
							yield (0, Ca.yJ)({ type: ee.YDL, updatedEmailNotifications: t });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.HHh });
						}
					}),
				];
				const _c = [
					(0, Ca.jP)(ee.gNL, function* () {
						try {
							yield (0, Ca.yJ)({ type: ee.Bh5 });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/biometric-service/biometric/latestLactateThreshold'
							);
							yield (0, Ca.yJ)({ type: ee.E3d, data: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.pWE, data: {} });
						}
					}),
					(0, Ca.jP)(ee.nhR, function* (e) {
						try {
							const {
								payload: {
									startDate: t,
									endDate: i,
									aggregation: n,
									aggregationStrategy: a,
									sport: s,
								},
							} = e;
							yield (0, Ca.yJ)({ type: ee.gs1 });
							const r = yield (0, Ca.T1)(
								Na.tI.get,
								`/biometric-service/stats/lactateThresholdHeartRate/range/${t}/${i}`,
								{ params: { aggregation: n, aggregationStrategy: a, sport: s } }
							);
							yield (0, Ca.yJ)({ type: ee.pUd, data: r.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.iFS, data: {} });
						}
					}),
					(0, Ca.jP)(ee.YM9, function* (e) {
						try {
							const {
								payload: {
									startDate: t,
									endDate: i,
									aggregation: n,
									aggregationStrategy: a,
									sport: s,
								},
							} = e;
							yield (0, Ca.yJ)({ type: ee.NaE });
							const r = yield (0, Ca.T1)(
								Na.tI.get,
								`/biometric-service/stats/lactateThresholdSpeed/range/${t}/${i}`,
								{ params: { aggregation: n, aggregationStrategy: a, sport: s } }
							);
							yield (0, Ca.yJ)({ type: ee._po, data: r.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.zq, data: {} });
						}
					}),
				];
				const Ec = [
					(0, Ca.jP)(ee.TvT, function* (e) {
						try {
							const {
									north: t,
									south: i,
									east: n,
									west: a,
									surface: s = 'MIXED_FAVOR_UNPAVED',
									minDifficulty: r,
									maxDifficulty: o,
								} = e.boundingBox,
								l = `/course-service/course/climbs/primary?north=${t}&south=${i}&east=${n}&west=${a}&climbTypePreference=${s}&minDifficulty=${r}&maxDifficulty=${o}`,
								c = yield Na.tI.get(l);
							if ((0, ps.B)() && c && c.data) {
								const e = new Ra.A();
								let t = 0;
								for (let i of c.data) {
									if (i && i.primaryClimbs) {
										let t = i.primaryClimbs;
										for (let i of t)
											if (i && i.polylineDTO) {
												let t = i.polylineDTO,
													n = yield e.fetchGenerator(t, !0);
												n &&
													n.forEach((e, i) => {
														(t[i].latitude = e.lat), (t[i].longitude = e.lon);
													});
											}
									}
									t > 0 &&
										t % 30 === 0 &&
										(yield (0, Ca.yJ)((0, va.kHJ)(c.data))),
										t++;
								}
							}
							yield (0, Ca.yJ)((0, va.kHJ)(c.data));
						} catch (t) {
							yield (0, Ca.yJ)((0, va.h2h)());
						}
					}),
					(0, Ca.jP)(ee.Tzx, function* (e) {
						try {
							if (e.coursePoints.length) {
								const t = yield Na.tI.post(
									'/course-service/course/climbs/onroute',
									e.coursePoints
								);
								yield (0, Ca.yJ)((0, va._Nl)(t.data));
							} else yield (0, Ca.yJ)((0, va._Nl)(!1));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.xoK, function* (e) {
						try {
							const t = yield Na.tI.get(
								`/course-service/course/climbs/onroute/${e.courseId}`
							);
							yield (0, Ca.yJ)((0, va.MHq)(t.data));
						} catch (t) {}
					}),
					(0, Ca.jP)(ee.Ymo, function* (e) {
						try {
							let t;
							t =
								e.climb.length > 1
									? e.climb
											.map((e, t) =>
												0 === t
													? `?climbId=${e.gmapClimbId}`
													: `&climbId=${e.gmapClimbId}`
											)
											.join('')
									: `?climbId=${e.climb[0].gmapClimbId}`;
							const i = e.climb[0],
								n =
									'FIFTH_CATEGORY' !== e.minDifficulty && e.minDifficulty
										? e.minDifficulty
										: 'NONE',
								a = e.maxDifficulty ? e.maxDifficulty : 'HORS_CATEGORY',
								s = yield Na.tI.get(
									`/course-service/course/climbs/secondary/${t}&climbFileId=${i.gmapClimbFileId}&primaryClimbStartLat=${i.polylineDTO[0].latitude}&primaryClimbStartLon=${i.polylineDTO[0].longitude}&minDifficulty=${n}&maxDifficulty=${a}`
								);
							if ((0, ps.B)() && s && s.data) {
								const e = new Ra.A();
								for (let t of s.data)
									if (t && t.polylineDTO) {
										let i = t.polylineDTO,
											n = yield e.fetchGenerator(i, !0);
										n &&
											n.forEach((e, t) => {
												(i[t].latitude = e.lat), (i[t].longitude = e.lon);
											});
									}
							}
							yield (0, Ca.yJ)((0, va.WBr)(s.data));
						} catch (t) {}
					}),
				];
				const Tc = [
					(0, Ca.jP)(ee.qR, function* (e = {}) {
						try {
							yield (0, Ca.yJ)({ type: ee.zuq });
							const e = yield (0, Ca.T1)(
								Ma().get,
								'/currentuser-service/user/info',
								{ baseURL: '/modern' }
							);
							yield (0, Ca.yJ)({ type: ee.K9b, userInfo: e.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.rEx });
						}
					}),
				];
				const Cc = [
					(0, Ca.jP)(ee.VJx, function* (e = {}) {
						try {
							yield (0, Ca.yJ)({ type: ee._Kp });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/oauth-service/oauth/oauth_tokens'
							);
							yield (0, Ca.yJ)({
								type: ee.N1D,
								oauthTokens: e.data.thirdPartyTokens,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.whr });
						}
					}),
					(0, Ca.jP)(ee.ziu, function* (e = {}) {
						const { oAuthTokenId: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.OWM });
							yield (0, Ca.T1)(
								Na.tI.delete,
								`/oauth-service/oauth/oauth_token?token=${t}`
							);
							yield (0, Ca.yJ)({ type: ee.ny0, oAuthTokenId: t });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.WeC });
						}
					}),
					(0, Ca.jP)(ee.wx$, function* (e = {}) {
						try {
							yield (0, Ca.yJ)({ type: ee.LJg });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/partner-service/consumer/permissions'
							);
							yield (0, Ca.yJ)({ type: ee.EV4, partnerPermissions: e.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.DtS });
						}
					}),
					(0, Ca.jP)(ee.oaz, function* (e = {}) {
						const { consumerKey: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.XUu });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/consumer-service/consumer/capabilitiesForUser/${t}`
							);
							yield (0, Ca.yJ)({ type: ee.Emh, capabilities: e.data });
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.xNS });
						}
					}),
					(0, Ca.jP)(ee.gtj, function* (e = {}) {
						try {
							yield (0, Ca.yJ)({ type: ee._Kp });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/oauth-service/oauth/oauth_tokens'
							);
							if (
								(yield (0, Ca.yJ)({
									type: ee.N1D,
									oauthTokens: e.data.thirdPartyTokens,
								}),
								e.data.thirdPartyTokens.length > 0)
							)
								try {
									yield (0, Ca.yJ)({ type: ee.XUu });
									const t = yield e.data.thirdPartyTokens
										.filter(
											(t, i) =>
												e.data.thirdPartyTokens.findIndex(
													(e) => e.consumerKey === t.consumerKey
												) === i
										)
										.map((e) =>
											(0, Ca.T1)(
												Na.tI.get,
												`/consumer-service/consumer/capabilitiesForUser/${e.consumerKey}`
											)
										);
									yield t.map((e) =>
										(0, Ca.yJ)({ type: ee.Emh, capabilities: e.data })
									);
								} catch (t) {
									yield (0, Ca.yJ)({ type: ee.xNS });
								}
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.whr });
						}
					}),
					(0, Ca.jP)(ee.vBT, function* (e = {}) {
						try {
							if (
								(yield (0, Ca.yJ)({ type: ee.rFN }),
								e.appPermissions.permissions.length < 1)
							)
								yield (0, Ca.T1)(
									Na.tI.delete,
									`/partner-service/consumer/permissions/${e.appPermissions.consumerKey}`
								);
							else {
								const t = { permissions: e.appPermissions.permissions };
								yield (0, Ca.T1)(
									Na.tI.put,
									`/partner-service/consumer/permissions/${e.appPermissions.consumerKey}`,
									t
								);
							}
							yield (0, Ca.yJ)({
								type: ee.JqS,
								partnerPermissions: e.appPermissions,
							});
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.MIJ });
						}
					}),
				];
				var Sc = i(410567);
				const Ic = [
					(0, Ca.jP)(Sc.T0, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Sc.gJ });
							const { startDate: t, endDate: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`metrics-service/metrics/hillscore/stats?startDate=${t}&endDate=${i}&aggregation=weekly`
								);
							yield (0, Ca.yJ)({ type: Sc.Fd, hillScoreData: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Sc.oH, hillScoreData: null });
						}
					}),
					(0, Ca.jP)(Sc.Hh, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Sc.we });
							const { startDate: t, endDate: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`metrics-service/metrics/hillscore/stats?startDate=${t}&endDate=${i}&aggregation=monthly`
								);
							yield (0, Ca.yJ)({ type: Sc.RM, hillScoreData: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Sc.wG, hillScoreData: null });
						}
					}),
					(0, Ca.jP)(Sc.L7, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Sc.O3 });
							const { startDate: t, endDate: i, isOneDay: n } = e.payload,
								a = n
									? `metrics-service/metrics/hillscore?calendarDate=${t}`
									: `metrics-service/metrics/hillscore/stats?startDate=${t}&endDate=${i}&aggregation=daily`,
								s = yield (0, Ca.T1)(Na.tI.get, a);
							n
								? yield (0, Ca.yJ)({ type: Sc.$K, hillScoreData: s.data })
								: yield (0, Ca.yJ)({ type: Sc.hI, hillScoreData: s.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Sc.WB, hillScoreData: null });
						}
					}),
				];
				const vc = [
					(0, Ca.jP)(ee.ZoF, function* (e = {}) {
						try {
							yield (0, Ca.yJ)({ type: ee.sq2 });
							const t = yield (0, Ca.T1)(
								Na.tI.get,
								`/userprofile-service/userprofile/optional-feature/${e.featureType.toLowerCase().replace('_', '-')}${e.displayName ? `/${e.displayName}` : ''}`
							);
							yield (0, Ca.yJ)({ type: ee.Run, optionalFeature: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.mju, optionalFeature: {} });
						}
					}),
					(0, Ca.jP)(ee.wlF, function* (e = {}) {
						try {
							yield (0, Ca.yJ)({ type: ee.LGT });
							const t = yield (0, Ca.T1)(
								Na.tI.put,
								`/userprofile-service/userprofile/optional-feature/${e.featureType.toLowerCase().replace('_', '-')}/${e.optionType.toLowerCase().replace('_', '-')}${e.displayName ? `/${e.displayName}` : ''}`
							);
							(0, fa.G)(e.callback, t),
								yield (0, Ca.yJ)({ type: ee.imj, optionalFeature: t.data });
						} catch (t) {
							(0, fa.j)(e.callback, t),
								yield (0, Ca.yJ)({ type: ee.TpR, optionalFeature: {} });
						}
					}),
				];
				const fc = [
					(0, Ca.jP)(ee.r$k, function* (e) {
						const { calendarDate: t, context: i } = e.payload;
						try {
							yield (0, Ca.yJ)({ type: ee.Ik3 });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								`/metrics-service/metrics/maxmet/latest/${t}`
							);
							yield (0, Ca.yJ)({ type: ee.nJ3, data: e.data, date: t });
						} catch (n) {
							yield (0, Ca.yJ)({
								type: ee.sMg,
								data: { errorMessage: n },
								date: t,
							});
						}
					}),
					(0, Ca.jP)(ee.Kr, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.lmp });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/web-data/vo2Max/VO2Max.json'
							);
							yield (0, Ca.yJ)({ type: ee.idc, data: e.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.TOR, data: { errorMessage: t } });
						}
					}),
				];
				var Dc = i(563117);
				const Nc = [
					(0, Ca.jP)(Dc.tU, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Dc.w6 });
							const { startDate: t, endDate: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`metrics-service/metrics/endurancescore/stats?startDate=${t}&endDate=${i}&aggregation=weekly`
								);
							yield (0, Ca.yJ)({ type: Dc.Dj, enduranceScoreData: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Dc.SP, enduranceScoreData: null });
						}
					}),
					(0, Ca.jP)(Dc.xt, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Dc.u4 });
							const { startDate: t, endDate: i } = e.payload,
								n = yield (0, Ca.T1)(
									Na.tI.get,
									`metrics-service/metrics/endurancescore/stats?startDate=${t}&endDate=${i}&aggregation=monthly`
								);
							yield (0, Ca.yJ)({ type: Dc.NP, enduranceScoreData: n.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Dc.Sc, enduranceScoreData: null });
						}
					}),
					(0, Ca.jP)(Dc.Ff, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: Dc.us });
							const { startDate: t } = e.payload,
								i = yield (0, Ca.T1)(
									Na.tI.get,
									`metrics-service/metrics/endurancescore?calendarDate=${t}`
								);
							yield (0, Ca.yJ)({ type: Dc.DA, enduranceScoreData: i.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: Dc.Gs, enduranceScoreData: null });
						}
					}),
					(0, Ca.jP)(Dc.Fm, function* () {
						try {
							yield (0, Ca.yJ)({ type: Dc.WZ });
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'metrics-service/metrics/endurancescore'
							);
							yield (0, Ca.yJ)({ type: Dc.$1, enduranceScoreData: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: Dc.mj, enduranceScoreData: null });
						}
					}),
				];
				var Rc = i(60964),
					bc = i(129800),
					Lc = i(786927);
				function* Pc() {
					const e = yield (0, Ca.Lt)(Ne.cZ, Ao.WI);
					if (!ar.A.hasRole(e)) return !1;
					const t = yield (0, Ca.Lt)(Ft.h_);
					if (!t || !t.userData || !t.userData.wheelchairModeEnabled) return !1;
					const i = yield (0, Ca.Lt)(be.UQ);
					return (
						(null === i || void 0 === i
							? void 0
							: i.hasWheelchairCapableDevice) || !1
					);
				}
				function* Oc() {
					const e = yield (0, Ca.Lt)(ea.mQ);
					if (!e) return null;
					let t = null;
					try {
						t = yield (0, Ca.T1)(
							Na.tI.get,
							`/connection-service/connection/profile/${e}`
						);
					} catch (i) {
						t = null;
					}
					return t && t.data;
				}
				function* wc() {
					const e = yield (0, Ca.Lt)(ea.X_),
						t = yield (0, Ca.Lt)(ea.Dk);
					let i = e.startDate,
						n = e.endDate;
					const a = {
						adHocChallengeName: e.challengeName,
						adHocChallengeDesc: e.challengeDesc,
						socialChallengeActivityTypeId: e.challengeType,
						durationTypeId: e.durationType,
						startDate: as.Ay.formatConnectTimestamp(i),
						endDate: as.Ay.formatConnectTimestamp(n),
						userRanking: 0,
						socialChallengeStatusId: 0,
						ownerUserProfileId: ar.A.get('profileId'),
						players: [],
					};
					a.players = t.connections
						.filter((t) => e.participantDisplayNames.includes(t.displayName))
						.map((e) => ({
							userProfileId: e.userId,
							displayName: e.displayName,
						}));
					try {
						const e = yield (0, Ca.T1)(
							Na.tI.post,
							'/adhocchallenge-service/adHocChallenge',
							a
						);
						yield (0, Ca.yJ)((0, bc.VQ)());
						const t = yield (0, Ca.Lt)(ea.N);
						dc.A.push({
							event: 'track_event',
							category: 'Create Challenge Page Event',
							action: 'Create Adhoc Challenge V2',
							label: t,
						}),
							dl.default.navigate(`/adhoc-challenge/${e.data.uuid}`);
					} catch (s) {
						yield (0, Ca.yJ)((0, bc.VQ)(!0));
					}
				}
				function* Fc() {
					const e = yield (0, Ca.Lt)(ea.X_),
						t = (yield (0, Ca.Lt)(ea.Dk)).groups.find(
							(t) => t.id === e.participantGroupId
						);
					let i = e.startDate,
						n = e.endDate;
					const a = {
						groupChallengeName: e.challengeName,
						groupChallengeDesc: e.challengeDesc,
						groupChallengeActivityTypeId: e.challengeType,
						durationTypeId: e.durationType,
						startDate: as.Ay.formatConnectTimestamp(i),
						endDate: as.Ay.formatConnectTimestamp(n),
						ownerUserProfileId: ar.A.get('profileId'),
						groupId: t.id,
					};
					try {
						yield (0, Ca.T1)(
							Na.tI.post,
							`/groupchallenge-service/group/${t.id}/groupchallenge`,
							a
						),
							yield (0, Ca.yJ)((0, bc.VQ)());
						const e = yield (0, Ca.Lt)(ea.N);
						dc.A.push({
							event: 'track_event',
							category: 'Create Challenge Page Event',
							action: 'Create Group Challenge V2',
							label: e,
						}),
							dl.default.navigate(`/group/${t.id}/challenges/challengeCreated`);
					} catch (s) {
						yield (0, Ca.yJ)((0, bc.VQ)(!0));
					}
				}
				const kc = [
					(0, Ca.p8)(ee.Ot9, function* () {
						yield (0, Ca.yJ)((0, va.h$7)(Ao.WI)),
							yield (0, Ca.yJ)((0, Rc.T3)()),
							yield (0, Ca.yJ)((0, va.M1P)());
					}),
					(0, Ca.p8)(ee.LA5, function* () {
						try {
							const e = ar.A.get('displayName'),
								t = yield (0, Ca.T1)(Pc),
								i = yield (0, Ca.T1)(Oc),
								[n, a, s] = yield (0, Ca.Q7)([
									(0, Ca.T1)(
										Na.tI.get,
										'/connection-service/connection/connections?wheelchairUsers=true'
									),
									(0, Ca.T1)(
										Na.tI.get,
										'/connection-service/connection/connections'
									),
									(0, Ca.T1)(
										Na.tI.get,
										`/group-service/groups/${e}?includeMembership=true&includeMemberCount=true`
									),
								]),
								r = n.data.userConnections,
								o = a.data.userConnections,
								l = {};
							r.forEach((e) => ((l[e.displayName] = !0), l), {});
							const c = o.filter((e) => !l[e.displayName]),
								d = [ll.Bw.OWNER, ll.Bw.ADMIN],
								u = s.data.filter(
									(e) =>
										d.includes(e.membershipStatus) && e.groupMemberCount > 1
								);
							yield (0, Ca.yJ)(
								(0, bc.bN)({
									wheelchairMode: t,
									initConnection: i,
									wheelchairConnections: r,
									nonWheelchairConnections: c,
									connections: o,
									groups: u,
								})
							);
						} catch (e) {
							yield (0, Ca.yJ)(
								(0, bc.bN)({
									error: !0,
									wheelchairConnections: null,
									nonWheelchairConnections: null,
									connections: null,
									groups: null,
								})
							);
						}
					}),
					(0, Ca.p8)(ee.yY3, function* () {
						const { participantType: e } = yield (0, Ca.Lt)(ea.X_);
						e !== Lc.Rz.CONNECTIONS
							? e !== Lc.Rz.GROUP
								? yield (0, Ca.yJ)((0, bc.VQ)(!0))
								: yield (0, Ca.Zy)(Fc)
							: yield (0, Ca.Zy)(wc);
					}),
				];
				const Uc = [
					(0, Ca.jP)(ee.fqy, function* (e) {
						yield (0, Ca.yJ)({ type: ee.KMo });
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/userfocus-service/dashboard'
							);
							yield (0, Ca.yJ)({ type: ee.RX6, data: e.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.obt, data: t.response.status });
						}
					}),
					(0, Ca.jP)(ee.KD8, function* () {
						yield (0, Ca.yJ)({ type: ee.HyF });
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/userfocus-service/dashboard/availablePrimaryStats'
							);
							yield (0, Ca.yJ)({ type: ee.kK2, data: e.data });
						} catch (t) {
							var e;
							yield (0, Ca.yJ)({
								type: ee.Vr$,
								data:
									null === (e = t.response) || void 0 === e ? void 0 : e.status,
							});
						}
					}),
					(0, Ca.jP)(ee.UeO, function* () {
						yield (0, Ca.yJ)({ type: ee.rQr });
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/userfocus-service/dashboard/availableSecondaryStats'
							);
							yield (0, Ca.yJ)({ type: ee.AU_, data: e.data });
						} catch (t) {
							var e;
							yield (0, Ca.yJ)({
								type: ee.zO9,
								data:
									null === t ||
									void 0 === t ||
									null === (e = t.response) ||
									void 0 === e
										? void 0
										: e.status,
							});
						}
					}),
					(0, Ca.jP)(ee.pF4, function* (e) {
						yield (0, Ca.yJ)({ type: ee.U6J });
						try {
							const t = yield (0, Ca.T1)(
								Na.tI.put,
								'/userfocus-service/dashboard',
								e.data
							);
							yield (0, Ca.yJ)({ type: ee.HI5, data: t.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.EhE, data: t.response.status });
						}
					}),
					(0, Ca.jP)(ee.uhL, function* (e) {
						const { dailyStatsConfig: t, callback: i } = e;
						yield (0, Ca.yJ)({ type: ee.Pvm });
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.put,
								'/userfocus-service/dashboard',
								t
							);
							return (
								yield (0, Ca.yJ)({ type: ee.AY8, data: e.data }),
								yield (0, Ca.T1)(fa.G, i, e),
								e
							);
						} catch (n) {
							yield (0, Ca.yJ)({ type: ee.FBA, data: {} });
						}
					}),
				];
				const Mc = [
					(0, Ca.jP)(ee.IEr, function* (e) {
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/userfocus-service/enrollment'
							);
							yield (0, Ca.yJ)({ type: ee.QoZ, data: e.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.F3w, data: {} });
						}
					}),
					(0, Ca.jP)(ee.x4c, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: ee.mQG }),
								yield (0, Ca.T1)(Na.tI.put, '/userfocus-service/enrollment', {
									betaEnrollment: e.enrollmentType,
								}),
								yield (0, Ca.yJ)({ type: ee.trH });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.qYd });
						}
					}),
				];
				const Gc = [
					(0, Ca.jP)(ee.AzX, function* (e) {
						yield (0, Ca.yJ)({ type: ee.NO0 });
						try {
							const e = yield (0, Ca.T1)(Na.tI.get, '/userfocus-service/focus');
							yield (0, Ca.yJ)({ type: ee.i4L, data: e.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.vhE, data: null });
						}
					}),
					(0, Ca.jP)(ee.jrt, function* (e) {
						const { callback: t } = e;
						try {
							yield (0, Ca.yJ)({ type: ee.Az4 });
							const i = { userFocus: e.payload.userFocus },
								n = yield (0, Ca.T1)(Na.tI.put, '/userfocus-service/focus', i);
							yield (0, Ca.yJ)({ type: ee.f5x, payload: i }),
								yield (0, Ca.T1)(fa.G, t, n);
						} catch (i) {
							yield (0, Ca.yJ)({ type: ee.W3k });
						}
					}),
					(0, Ca.jP)(ee.UNA, function* (e) {
						yield (0, Ca.yJ)({ type: ee.pWl });
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/userfocus-service/focus/suggestedFocuses'
							);
							yield (0, Ca.yJ)({ type: ee.mM3, data: e.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: ee.n$m, data: null });
						}
					}),
				];
				var xc = i(853579);
				const Bc = [
					(0, Ca.jP)(xc.gh, function* (e) {
						try {
							yield (0, Ca.yJ)({ type: xc.Rs });
							const {
									scorecardId: t,
									courseId: i,
									date: n,
									leaderboardId: a,
									rowsPerPage: s,
									locale: r,
								} = e,
								o = (0, Sa.zJ)({ 'per-page': s, 'user-locale': r });
							let l = `/gcs-golfcommunity/api/v2/leaderboard/${a}${o}`;
							t &&
								(l = `/gcs-golfcommunity/api/v2/leaderboard/scorecard/${t}${o}`),
								i &&
									n &&
									(l = `/gcs-golfcommunity/api/v2/leaderboard/course/${i}/week-of/${n}${o}`);
							const c = yield (0, Ca.T1)(Na.b0.get, l);
							yield (0, Ca.yJ)({ type: xc.wJ, leaderboard: c.data });
						} catch (t) {
							yield (0, Ca.yJ)({ type: xc.nJ });
						}
					}),
				];
				const Hc = [
					(0, Ca.jP)(ee.XOP, function* () {
						yield (0, Ca.yJ)({ type: ee.wPM });
						try {
							const e = yield (0, Ca.T1)(
								Na.tI.get,
								'/userprofile-service/userprofile/userProfileBase'
							);
							yield (0, Ca.yJ)({ type: ee.pHz, data: e.data });
						} catch (e) {
							yield (0, Ca.yJ)({ type: ee.g3v, userProfileBase: null });
						}
					}),
				];
				function* Vc() {
					yield (0, Ca.Q7)([
						...wa,
						...Fa.Pn,
						...ka,
						...Ga,
						...xa,
						...Ba,
						...Va,
						...Wa,
						...$a,
						...ja,
						...za,
						...Qa,
						...Xa,
						...Za,
						...os,
						...ls,
						...cs,
						...ds,
						...us,
						...gs,
						...ms,
						...As,
						..._s,
						...Es,
						...Cs,
						...Ss,
						...Is,
						...vs,
						...bs,
						...Os,
						...Us,
						...Hs,
						...Vs,
						...Js,
						...Ks,
						...zs,
						...qs,
						...Qs,
						...tr,
						...eo,
						...or,
						...lr.sU,
						...dr,
						...ur,
						...pr,
						...yr,
						...Er,
						...mr,
						...Ar,
						...Tr,
						...Cr,
						...Sr,
						...Ir,
						...vr,
						...fr,
						...Nr,
						...Rr,
						...is,
						...br,
						...Pr,
						...br,
						...Or,
						...wr,
						...Fr,
						...kr,
						...Mr,
						...xr,
						...Br,
						...Hr,
						...Wr,
						...Ws,
						...Jr,
						...$r,
						...jr,
						...Kr,
						...qr,
						...Qr,
						...Zr,
						...no,
						...ao,
						...co,
						...uo,
						...po,
						...yo.jf,
						...Co,
						...Jo,
						...bo,
						...Po,
						...wo,
						...Bo,
						...Ho,
						...Wo,
						...Xo,
						...el,
						...Gl,
						...Bl,
						...Uo,
						...Go,
						...xo,
						...Yo,
						...zo,
						...qo,
						...il,
						...nl,
						...al,
						...ol,
						...cl,
						...gl,
						...Dl,
						...Rl,
						...bl,
						...Fl,
						...kl,
						...Ul,
						...Ml,
						...Hl,
						...Vl,
						...Jl,
						...$l,
						...jl,
						...Ql,
						...Xl,
						...lc,
						...Ac,
						..._c,
						...pc,
						...yc,
						...mc,
						...Ac,
						...Ec,
						...Tc,
						...Cc,
						...Ic,
						...vc,
						...fc,
						...Nc,
						...kc,
						...Uc,
						...Mc,
						...Gc,
						...Bc,
						...Hc,
					]);
				}
				let Wc = {};
				const Jc = () => (e) => (t) => {
						if (!t.type) return e(t);
						if (
							(t.type.includes('LOGOUT') && (Wc = {}), t.type.includes('FAIL'))
						) {
							let i = t.type.replace(/FAIL_|FAILED_|_FAIL|_FAILED/, '');
							const n = Object.keys(Wc).filter((e) => e.startsWith(i));
							if (0 === n.length) return e(t);
							delete Wc[n[n.length - 1]];
						}
						if (!t.meta || !('cacheTime' in t.meta)) return e(t);
						const i = ((e, t) => {
							let i = { ...t };
							return (
								delete i.type, delete i.meta, `${e}-${btoa(JSON.stringify(i))}`
							);
						})(t.type, t);
						return !(i in Wc) ||
							((e, t) => new Date().getTime() - Wc[e] >= t)(i, t.meta.cacheTime)
							? ((Wc[i] = new Date().getTime()), e(t))
							: void 0;
					},
					Yc = (0, Ta.Ay)(),
					$c = (e) => {
						let t = [Jc, Yc];
						(0, Ls.aO)() && t.unshift(Ls.O1);
						const i = (0, n.U1)({
							reducer: { ...Ea },
							middleware: (e) =>
								e({
									thunk: !0,
									serializableCheck: !1,
									immutableCheck: !1,
								}).concat(
									...t,
									na.Ay.middleware,
									aa.Ay.middleware,
									aa.Cq.middleware,
									pa.Ay.middleware,
									sa.Ay.middleware,
									ra.Ay.middleware,
									oa.Ay.middleware,
									la.Ay.middleware,
									_a.Ay.middleware
								),
							devTools: !1,
							preloadedState: e,
						});
						return Yc.run(Vc), i;
					};
			},
			798718: (e, t, i) => {
				'use strict';
				i.d(t, {
					Me: () => n,
					S1: () => s,
					U: () => o,
					kp: () => a,
					sc: () => r,
				});
				const n = '/images/badges/svg/badge_placeholder.svg',
					a = {
						distance: 'mi_km',
						distanceAlt: 'ft_m',
						activities: 'activities',
						days: 'days',
						steps: 'steps',
						miles: 'mi',
						seconds: 'seconds',
						challenges: 'challenges',
						kilocalories: 'kilocalories',
						weeks: 'weeks',
						likes: 'likes',
					},
					s = {
						ACTIVITY: 'ACTIVITY',
						GROUP_CHALLENGE: 'GROUP_CHALLENGE',
						ADHOC_CHALLENGE: 'ADHOC_CHALLENGE',
						VIVOFITJR_CHALLENGE: 'VIVOFITJR_CHALLENGE',
						VIVOFITJR_TEAM_CHALLENGE: 'VIVOFITJR_TEAM_CHALLENGE',
						DAY: 'DAY',
						NO_LINK: 'NO_LINK',
						BADGE_CHALLENGE: 'BADGE_CHALLENGE',
					},
					r = {
						ONE_TIME: 1,
						TRAINING_CLASS: 2,
						REPEATABLE: 3,
						CUMULATIVE: 4,
						LIMITED_ANNUAL: 5,
						LIMITED_SINGLE: 6,
					},
					o = { GCM: 'GCM', WEB: 'WEB', BOTH: 'BOTH' };
			},
			993980: (e, t, i) => {
				'use strict';
				i.d(t, {
					A1: () => A,
					Am: () => _,
					DU: () => l,
					DX: () => d,
					Eo: () => y,
					HU: () => u,
					Np: () => v,
					Qp: () => s,
					T5: () => n,
					Tq: () => S,
					Wb: () => I,
					Xs: () => g,
					Zm: () => m,
					a1: () => f,
					cF: () => E,
					em: () => T,
					ip: () => o,
					n3: () => h,
					ou: () => r,
					pI: () => a,
					ti: () => c,
					uJ: () => C,
					uo: () => p,
				});
				const n = 'NONE',
					a = 'REGULAR',
					s = 'IRREGULAR',
					r = 'PREGNANT',
					o = 'INACTIVE',
					l = 2,
					c = 365,
					d = 'YYYY-MM-DD',
					u = 12,
					p = 6,
					y = 'NONE',
					h = 6,
					g = 5,
					m = 100,
					A = 45,
					_ = 20,
					E = 'CONTRACEPTIVE_INJECTIONS',
					T = 'CONTRACEPTIVE_PATCH',
					C = 'IUD',
					S = 'IMPLANT',
					I = 'ORAL_CONTRACEPTION',
					v = 'VAGINAL_RING',
					f = 'NONE';
			},
			947272: (e, t, i) => {
				'use strict';
				i.d(t, { $H: () => n, Qu: () => a });
				const n = {
						training_plans_filter_level_1: 'lt-grey',
						training_plans_filter_level_2: 'lt-grey',
						training_plans_filter_level_3: 'lt-grey',
					},
					a = [
						'FullCentury',
						'GranFondo',
						'HalfCentury',
						'Crit',
						'TimeTrial',
						'MountainBiking',
					];
			},
			309029: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ai: () => C,
					Di: () => f,
					Ds: () => I,
					Dy: () => g,
					F2: () => n,
					Gs: () => o,
					Js: () => d,
					Kp: () => S,
					Ku: () => y,
					Q_: () => l,
					RK: () => s,
					V2: () => a,
					XA: () => P,
					Zk: () => h,
					ef: () => E,
					el: () => c,
					gT: () => p,
					lu: () => r,
					mF: () => T,
					nX: () => v,
					oF: () => _,
					qA: () => A,
					rd: () => N,
					tE: () => D,
					wc: () => u,
					wl: () => m,
				});
				const n = 'PACE_PRO_SPLIT',
					a = 'RUN_ACTIVE',
					s = 'RUN_REST',
					r = 'CLIMB_PRO_CYCLING_CLIMB',
					o = 'CLIMB_PRO_CYCLING_CLIMB_SECTION',
					l = 'POWER_GUIDANCE_SPLIT',
					c = 'WINDSURF_ACTIVE',
					d = 'RWD_STAND',
					u = 'RWD_WALK',
					p = 'RWD_RUN',
					y = 'OBSTACLE',
					h = 'INTERVAL_WARMUP',
					g = 'INTERVAL_ACTIVE',
					m = 'INTERVAL_COOLDOWN',
					A = 'SURF_ACTIVE',
					_ = 'ASCENT_SPLIT',
					E = 'DESCENT_SPLIT',
					T = 'TRANSITION',
					C = 'ROUND_ACTIVE',
					S = 'ROUND_REST',
					I = 'SWIM_STRAIGHTNESS',
					v = 'SKI_LIFT_SPLIT',
					f = 'SKI_RUN_SPLIT',
					D = (e = null) => {
						var t, i;
						let n = [c];
						return (
							null !== e &&
								void 0 !== e &&
								null !== (t = e.bcSki2RoleKey) &&
								void 0 !== t &&
								t.featureEnabled() &&
								(n = [...n, _, E]),
							null !== e &&
								void 0 !== e &&
								null !== (i = e.advancedSkiRoleKey) &&
								void 0 !== i &&
								i.featureEnabled() &&
								(n = [...n, f]),
							n
						);
					},
					N = { RWD_STAND: 100, RWD_WALK: 67, RWD_RUN: 33 },
					R = 'RUN_WALK',
					b = 'ASCENT_DESCENT',
					L = 'RUN_LIFT',
					P = {
						RWD_STAND: { layerToShow: R },
						RWD_WALK: { layerToShow: R },
						RWD_RUN: { layerToShow: R },
						OBSTACLE: { layerToShow: y },
						ASCENT_SPLIT: { layerToShow: b },
						DESCENT_SPLIT: { layerToShow: b },
						TRANSITION: { layerToShow: b },
						SKI_RUN_SPLIT: { layerToShow: L },
						SKI_LIFT_SPLIT: { layerToShow: L },
					};
			},
			115883: (e, t, i) => {
				'use strict';
				i.d(t, {
					Fb: () => c,
					Gp: () => s,
					Mg: () => p,
					OA: () => a,
					Uk: () => u,
					Un: () => y,
					Vt: () => d,
					dY: () => r,
					p8: () => l,
					r3: () => o,
				});
				var n = i(586816);
				const a = {
						1: { start: 0, end: 19 },
						2: { start: 20, end: 59 },
						3: { start: 60, end: 139 },
						4: { start: 140, end: 299 },
						5: { start: 300, end: 619 },
						6: { start: 620, end: 1259 },
						7: { start: 1260, end: 2539 },
						8: { start: 2540, end: 5099 },
						9: { start: 5100, end: 10219 },
						10: { start: 10220, end: null },
					},
					s = (0, n.B)() ? [39.92889, 116.38833] : [38.854699, -94.797763],
					r = {
						steps: 'DAILY_SUMMARY',
						activity: 'ACTIVITY',
						weight: 'WEIGHT_GRAMS',
					},
					o = { manual: 'MANUAL' },
					l = { daily: 'DAILY' },
					c = { any: 0, running: 1, cycling: 2 },
					d = {
						segment: 'classificationPk',
						surface: 'surfaceTypePk',
						activity: 'activityTypePk',
					},
					u = {
						CREATED_BY_ME: 'CREATED_BY_ME',
						RECENTLY_COMPLETED: 'RECENTLY_COMPLETED',
						FAVORITES: 'FAVORITES',
						NEAR_BY: 'NEAR_BY',
					},
					p = '/web-images/profile/profile-pic-default.svg',
					y = '/modern/images/avatar-default-groups.gif';
			},
			344565: (e, t, i) => {
				'use strict';
				var n = {};
				i.r(n),
					i.d(n, {
						title_active_widget: () => tr,
						title_activities_widget: () => ir,
						title_badges_widget: () => nr,
						title_blood_pressure_widget: () => Br,
						title_bodybattery_widget: () => ar,
						title_calendar_widget: () => sr,
						title_calories_widget: () => rr,
						title_challenge_widget: () => or,
						title_course_widget: () => cr,
						title_devices_widget: () => dr,
						title_diving_widget: () => ur,
						title_ecg_widget: () => Wr,
						title_floors_ascended_widget: () => pr,
						title_gear_tracking_widget: () => yr,
						title_goals_widget: () => hr,
						title_golf_course_widget: () => gr,
						title_golf_leaderboard_widget: () => mr,
						title_golf_scorecard_widget: () => Ar,
						title_golf_stats_widget: () => _r,
						title_golf_swing_analysis_widget: () => Er,
						title_groups_widget: () => Tr,
						title_health_snapshot_widget: () => Hr,
						title_heart_rate_widget: () => Cr,
						title_hydration_widget: () => Sr,
						title_intensity_minutes_widget: () => Ir,
						title_marine_widget: () => vr,
						title_menstrualCycleTracking_widget: () => Ur,
						title_news_feed_widget: () => lr,
						title_pacepro_widget: () => fr,
						title_personal_records_widget: () => Dr,
						title_powerguide_widget: () => Vr,
						title_pulse_ox_acclimation_widget: () => Nr,
						title_pulse_ox_widget: () => Mr,
						title_reports_widget: () => Rr,
						title_respiration_widget: () => Gr,
						title_segment_widget: () => br,
						title_sleep_widget: () => Lr,
						title_solar_charge_widget: () => Yr,
						title_solar_intensity_widget: () => xr,
						title_step_summary_widget: () => Pr,
						title_stress_widget: () => Or,
						title_training_plan_widget: () => wr,
						title_training_readiness_widget: () => Jr,
						title_weight_widget: () => Fr,
						title_workouts_widget: () => kr,
					});
				var a = i(638761),
					s = i.n(a),
					r = i(765722),
					o = i(630105),
					l = i(422460),
					c = i(228748),
					d = i(242865),
					u = i(78511),
					p = i(717776);
				const y = () => {
					const e = () =>
						(0, p.jsxs)('div', {
							style: {
								display: 'grid',
								position: 'fixed',
								top: 0,
								left: 0,
								height: '100vh',
								width: '100vw',
								alignContent: 'center',
								justifyContent: 'center',
							},
							children: [
								(0, p.jsx)('style', {
									children:
										'.privacy-overlay {\n                            display: none;\n                        }',
								}),
								(0, p.jsx)(u.default, { size: 'default' }),
							],
						});
					(0, d.render)((0, p.jsx)(e, {}), document.querySelector('.content'));
				};
				i(784436), i(875029), i(28396);
				var h = i(793056),
					g = i(620013),
					m = i(182137),
					A = i(660344),
					_ = i(998813);
				const E = () => {
					const e = window.location.host;
					return 'connect.garmin.com' === e
						? _('.beta-tag').length > 0
							? 'beta'
							: 'prod'
						: 'connecttest.garmin.com' === e
							? 'test'
							: void 0;
				};
				window.JS_ERROR &&
					(() => {
						const e = window.location.host;
						return 'connect.garmin.com' === e || 'connecttest.garmin.com' === e;
					})() &&
					(h.T({
						dsn: 'https://f0377f25d5534ad589ab3a9634f25e71@o430870.ingest.sentry.io/5591783',
						environment: E(),
						tracesSampleRate: 1,
						release: 'connect@5.0.288',
						normalizeDepth: 5,
						integrations: [
							new m.p({ depth: 5 }),
							new A.Jh({
								beforeNavigate: (e) => ({
									...e,
									name: window.location.pathname
										.replace(
											/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}/g,
											'<guid>'
										)
										.replace(/[0-9]{4}-[0-9]{2}-[0-9]{2}/g, '<date>')
										.replace(/\/[a-fA-F0-9]{32}/g, '/<hash>')
										.replace(/\/\d+/g, '/<digits>'),
								}),
							}),
						],
					}),
					window.VIEWER_SOCIAL_PROFILE &&
						g.gV({ id: window.VIEWER_SOCIAL_PROFILE.garminGUID }));
				var T = i(998813),
					C = i.n(T),
					S = i(893855),
					I = i.n(S);
				(window.handleMobileView = function () {
					C()(window).width() < 768
						? C()('body')
								.addClass('mobile main-nav-closed')
								.removeClass('minimize-main-nav main-nav-open')
						: C()('body').removeClass('mobile mobile-open-main-nav');
				}),
					window.handleMobileView();
				var v = i(34581);
				const f = I().Model.extend({
					backend: 'gcapi',
					urlRoot: '/dashboard-service/dashboard',
					idAttribute: 'dashboardId',
					initialize: function () {
						this.on('change:dashboardOrder', this.onOrderChanged, this);
					},
					onOrderChanged: function () {
						this.isNew() || this.save();
					},
					getId: function () {
						return this.get(this.idAttribute);
					},
				});
				const D = I().Collection.extend({
					model: f,
					backend: 'gcapi',
					url: function () {
						return '/dashboard-service/dashboards/' + this.displayName;
					},
					initialize: function (e, t) {
						if (((this.displayName = t.displayName), !this.displayName))
							throw 'displayName required for Dashboards.js';
					},
					comparator: 'dashboardOrder',
				});
				var N = i(758948),
					R = i(595695),
					b = i.n(R),
					L = i(408822),
					P = i(960474);
				const O = I().Model.extend({
					urlRoot: '/device-service/deviceservice/mylastused',
					backend: 'gcapi',
				});
				var w = i(29273);
				const F = I().Model.extend({
					defaults: {
						order: 0,
						title_key: '',
						desc_key: '',
						url: null,
						states: [],
						args: [],
					},
					findState: function (e) {
						return b().find(
							this.get('states'),
							function (t) {
								return t.name == e;
							},
							this
						);
					},
					findView: function (e, t) {
						var i = null;
						return (i = 'string' == typeof e ? this.findState(e) : e)
							? b().find(
									i.views,
									function (e) {
										return e.name == t;
									},
									this
								)
							: null;
					},
					getDefaultState: function () {
						var e = this.get('states');
						if (!e || 0 == e.length) return null;
						var t = this.findState('large-state');
						return t && t.views.length > 0 ? t : e[0];
					},
					getDefaultView: function () {
						var e = this.getDefaultState();
						if (!e) return null;
						if (0 == e.views.length) return null;
						if ('title_calendar_widget' === this.get('title_key')) {
							var t = this.findView(e, 'calendarWeekView');
							if (t) return t;
						}
						if ('title_groups_widget' === this.get('title_key')) {
							var i = this.findView(e, 'activityFeed');
							if (i) return i;
						}
						if ('title_sleep_widget' === this.get('title_key')) {
							var n = this.findView(e, 'sleepSummary');
							if (n) return n;
						}
						return e.views[0];
					},
				});
				var k = i(159956),
					U = i(408368);
				const M = I().Collection.extend({
					model: F,
					backend: 'gcapi',
					url: function () {
						var e = '/dashboard-service/widgetDefinitions';
						return this.displayName && (e += '/' + this.displayName), e;
					},
					initialize: function (e, t) {
						this.displayName = t.displayName;
					},
					parse: function (e) {
						let t = e;
						if (
							k.A &&
							!1 === k.A.get('capableEnable') &&
							U.A &&
							'ja' !== U.A.get('locale')
						) {
							t = t.filter((e) => -1 === e.title_key.indexOf('pulse_ox'));
							for (let e = 0; e < t.length; e++)
								if ('title_sleep_widget' === t[e].title_key) {
									let i = t[e];
									for (let e = 0; e < i.states.length; e++)
										for (let t = 0; t < i.states[e].views.length; t++)
											-1 !== i.states[e].views[t].name.indexOf('PulseOx') &&
												i.states[e].views.splice(t, 1);
								}
						}
						return (
							(t = t.filter(
								(e) => -1 === e.title_key.indexOf('title_marine_widget')
							)),
							(t = t.filter(
								(e) => -1 === e.title_key.indexOf('title_insights_widget')
							)),
							t
						);
					},
				});
				var G = i(599301),
					x = i(638893),
					B = i(591476),
					H = i(992187),
					V = i(746848);
				const W = I().Model.extend({
					idAttribute: 'value',
					urlRoot: function () {
						return '/modern/system-service/preference/Host.connectApiHost';
					},
					parse: function (e) {
						return e;
					},
				});
				const J = I().Model.extend({
					url: function () {
						return (
							'/activitylist-service/activities/newsfeed/status?lastViewedTimeGMT=' +
							this.lastViewedTimeGMT
						);
					},
					backend: 'gcapi',
					initialize: function (e) {
						this.lastViewedTimeGMT = e.lastViewedTimeGMT;
					},
				});
				var Y = i(619448);
				const $ = new (i(254523).A)();
				var j = i(85057),
					K = i(716343);
				const z = {};
				var q = i(963633),
					Q = i(514504),
					X = i(632246),
					Z = i(763878),
					ee = i(595695),
					te = Z.A.STATUS,
					ie = I().Model.extend({
						backend: 'insights',
						url: function () {
							return (
								'/gcs-insights/api/feature/details' + this.addInsightUrlParams()
							);
						},
						initialize: function (e, t) {
							(this.featureId = e.featureId),
								(this.createdDateUTC = e.createdDateUTC);
						},
						addInsightUrlParams: function () {
							return (
								'?featureId=' +
								this.featureId +
								'&date=' +
								this.createdDateUTC +
								'&lang=' +
								L.A.getLocale()
							);
						},
						save: function (e, t, i) {
							return (
								(e.date = this.createdDateUTC),
								I().Model.prototype.save.call(this, e, t, i)
							);
						},
						sync: function (e, t, i) {
							return (
								('create' !== e && 'update' !== e) ||
									(i.url =
										'/gcs-insights/api/feature/status/' + t.attributes.status),
								I().sync(e, t, i)
							);
						},
						fetch: function (e) {
							return (
								(e = ee.extend(e, { headers: { CHART_VER: Z.A.CHART_VER } })),
								I().Model.prototype.fetch.apply(this, arguments)
							);
						},
					});
				ie.STATUS = te;
				const ne = ie;
				const ae = I().Collection.extend({
					model: ne,
					backend: 'insights',
					url: function () {
						return '/gcs-insights/api/feature/history';
					},
					parse: function (e) {
						return (e = b().filter(e, function (e) {
							return !b().isEmpty(e) || e.featureId || e.createdDateUTC;
						}));
					},
					getUnreadInsights: function () {
						return b().filter(this.models, function (e) {
							return e.get('status') === ne.STATUS.UNREAD;
						});
					},
				});
				var se = i(728407),
					re = i(129582),
					oe = i(991310),
					le = (i(677605), i(109285)),
					ce = i.n(le);
				const de = I().Model.extend({
					urlRoot: function () {
						return '/worker/user/banner';
					},
					isAvailable: function () {
						const e = this.get('survey');
						if (!e || !e.period) return !1;
						const t = 'YYYY-MM-DD',
							i = ce()(e.period.start).format(t),
							n = ce()(e.period.end).format(t),
							a = ce()(new Date()).format(t);
						return a >= i && a <= n;
					},
					getSurveyData: function () {
						return this.get('survey');
					},
				});
				var ue = i(92098),
					pe = i(303074),
					ye = i.n(pe),
					he = i(998813);
				const ge = I()
					.View.extend(oe.A)
					.extend({
						template: b().template(ye()),
						events: {
							'click .js-close-survey-banner': 'closeSurvey',
							'click a.survey-link': 'closeSurvey',
						},
						initialize: function () {
							this.surveyBanner = new de();
						},
						provideDependencies: function (e) {
							e.addModel({ model: this.surveyBanner, required: !0 });
						},
						onDependenciesLoaded: function () {
							if (this.surveyBanner.isAvailable()) {
								ue.A.isInternal((t) => {
									t ||
										(function (t) {
											if (!t) throw 'Callback is required';
											(e.userCompletedSurvey = new B.A({
												key: e.surveyBanner.getSurveyData().key,
											})),
												e.userCompletedSurvey.fetch({
													success: function (e) {
														t.completed('true' === e.get('value'));
													},
												});
										})({ completed: this.displayBanner.bind(this) });
								});
								var e = this;
							}
						},
						displayBanner: function (e) {
							e || this.render();
						},
						render: function () {
							this.$el.html(
								this.template({ survey: this.surveyBanner.getSurveyData() })
							),
								he('body').addClass('show-takeover');
						},
						closeSurvey: function () {
							this.userCompletedSurvey.set('value', 'true'),
								this.userCompletedSurvey.save(),
								this.$el.html(''),
								he('body').removeClass('show-takeover');
						},
					});
				var me = i(318383),
					Ae = i(969893),
					_e = i(624438),
					Ee = i(586816),
					Te = i(787006),
					Ce = i(605246);
				const Se = function (e, t, i, n, a, s) {
					let r = l.Ay.formatISODate(new Date());
					var o = { dashboards: [], main: [], social: [], other: [] },
						c = P.A.isFitnessUser(),
						d = P.A.isWellnessUser(),
						u = P.A.isOutdoorUser(),
						p = P.A.isDiveUser(),
						y = P.A.isMarineUser(),
						h = P.A.isRaceEventProvider();
					if (
						(t || (t = {}),
						o.dashboards.push({
							title: 'main_header_home_text',
							icon: 'icon-home',
							url: '/home',
						}),
						h)
					)
						return (
							o.dashboards.push({
								title: 'title_calendar_widget',
								icon: 'icon-calendar',
								url: '/calendar',
							}),
							o.main.push(
								{ title: 'events_menu_item_nav', url: '/event-dashboard' },
								{
									title: 'course_widget_title',
									url: '/courses',
									disabled: (0, Te.H1)(),
								}
							),
							o
						);
					if (
						((c || d || p) &&
							o.dashboards.push({
								title: 'challenges',
								icon: 'icon-challenges',
								url: '/challenge',
								urlKeyword: 'challenge/',
								disabled: (0, Te.H1)(),
							}),
						(c || d || p) &&
							o.dashboards.push({
								title: 'title_calendar_widget',
								icon: 'icon-calendar',
								url: '/calendar',
							}),
						(c || d || u || p) &&
							o.dashboards.push({
								title: 'news_feed',
								icon: 'icon-newsfeed',
								url: '/newsfeed',
								disabled: (0, Te.H1)(),
							}),
						Ae.A.isDiveUserOnly() &&
							o.main.push({
								title: 'title_diving_widget',
								icon: 'icon-activity-diving',
								url: '/diving',
							}),
						d)
					) {
						const e = [
							{ title: 'activity_type_all', url: '/activities' },
							{
								title: 'label_floors_climbed_unit',
								url: '/floors',
								urlKeyword: 'floors',
							},
							{
								title: 'intensity_minutes',
								url: '/intensity-minutes',
								urlKeyword: 'intensity-minutes',
							},
						];
						if (t.hideFloorFeature) {
							const t = e.findIndex((e) => 'floors' === e.urlKeyword);
							e.splice(t, 1);
						}
						t.showSteps &&
							e.splice(1, 0, {
								title: 'activity_type_steps',
								url: '/steps',
								urlKeyword: 'steps',
							}),
							t.showWheelchairPushes &&
								e.splice(1, 0, {
									title: 'activity_type_wheelchair_pushes',
									url: '/daily-summary/' + r + '/pushes',
									urlKeyword: 'pushes',
								}),
							o.main.push({
								title: 'activities',
								icon: t.isWheelchairMode
									? 'icon-activities-wheelchair'
									: 'icon-activities',
								menuItems: e,
							});
					} else
						(c || p) &&
							o.main.push({
								title: 'activities',
								icon: t.isWheelchairMode
									? 'icon-activities-wheelchair'
									: 'icon-activities',
								url: '/activities',
							});
					if (c || d || p) {
						var g = [];
						if (
							(d &&
								g.push({
									title: 'sleep',
									url: '/sleep/' + r,
									urlKeyword: 'sleep',
								}),
							(c || d || p) &&
								g.push({
									title: 'weight',
									url: '/weight',
									urlKeyword: 'weight',
								}),
							(c || d || p) &&
								g.push({
									title: 'blood_pressure',
									url: Ce.p,
									urlKeyword: 'pressure',
								}),
							t.showHydration &&
								g.push({
									title: 'label_hydration',
									url: `/hydration/${r}/0`,
									urlKeyword: 'hydration',
								}),
							(c || d || p) && 'true' === t.hasCaloriesAvailablePref)
						) {
							1 === s.get('linkStatus')
								? g.push({
										title: 'title_calories_widget',
										url: '/calories/' + r,
										urlKeyword: 'calories',
									})
								: g.push({
										title: 'title_calories_no_mfp_widget',
										url: '/calories/' + r,
										urlKeyword: 'calories',
									});
						}
						t.showAllDayPulseOx &&
							(!0 === k.A.get('capableEnable') || 'ja' === U.A.get('locale')) &&
							t.hasPulseOxAllDayCapableDevice &&
							g.push({ title: 'pulse_ox', url: '/pulse-ox/' + r });
						!t.hasPulseOxAllDayCapableDevice ||
							(!0 !== k.A.get('capableEnable') && 'ja' !== U.A.get('locale')) ||
							g.push({
								title: 'title_pulse_ox_acclimation_widget',
								url: '/pulse-ox-acclimation',
							}),
							t.showRespiration &&
								t.hasRespirationCapableDevice &&
								g.push({
									title: 'label_respiration',
									url: '/respiration/' + r,
									urlKeyword: 'respiration',
								}),
							d &&
								g.push({
									title: 'label_heart_rate',
									url: '/heart-rate/' + r,
									urlKeyword: 'heart-rate',
								}),
							t.hasFitnessAgeV2CapableDevice &&
								g.push({
									title: 'fitness_age',
									url: '/fitness-age',
									urlKeyword: 'fitness-age',
								}),
							d &&
								g.push({
									title: 'title_stress_widget',
									url: `/stress/${r}/0`,
									urlKeyword: 'stress',
								}),
							d &&
								t.hasBodyBatteryCapableDevice &&
								g.push({
									title: 'body_battery',
									url: `/${_e.$4}`,
									urlKeyword: 'body-battery',
								}),
							t.showMenstrualCycleTracking &&
								g.push({
									title: 'label_menstrual_cycle',
									url: '/menstrual-cycle-tracking/' + r,
								}),
							t.showPregnancy &&
								g.push({
									title: 'label_pregnancy',
									url: '/pregnancy-detail/' + r,
								}),
							t.showECG &&
								g.push({
									title: 'ecg',
									url: `/${_e.FB}`,
									disabled: (0, Te.aO)(),
								}),
							t.showHealthSnapshot &&
								g.push({ title: 'health_snapshot', url: '/health-snapshots' }),
							o.main.push({
								title: 'health_stats',
								icon: 'icon-heart',
								menuItems: g,
							});
					}
					if (u) {
						g = [
							{
								title: 'scorecards',
								url: '/my-scorecards',
								urlKeyword: 'scorecard',
								disabled: (0, Te.H1)(),
							},
							{
								title: 'title_golf_stats_widget',
								url: '/golf-stats',
								urlKeyword: 'golf-stat',
							},
							{
								title: 'title_golf_course_widget',
								url: '/my-golf-courses',
								urlKeyword: 'golf-course',
							},
							{
								title: 'title_golf_leaderboard_widget',
								url: '/golf-leaderboards',
								urlKeyword: 'golf-leaderboard',
								disabled: (0, Te.H1)(),
							},
							{
								title: 'title_golf_swing_analysis_widget',
								url: '/my-swings',
								urlKeyword: 'swing-analysis',
							},
						];
						o.main.push({
							title: 'golf',
							icon: t.isWheelchairMode
								? 'icon-activity-golf-wheelchair'
								: 'icon-activity-golf',
							menuItems: g,
						});
					}
					if (c || p) {
						g = [
							{ title: 'workouts', url: '/workouts', urlKeyword: 'workout' },
							{ title: 'label_training_plans', url: '/training-plan' },
							{ title: 'events_menu_item_nav', url: '/event-dashboard' },
							{
								title: 'course_widget_title',
								url: '/courses',
								disabled: (0, Te.H1)(),
							},
							{ title: 'pacepro_menu_item_nav', url: '/pacepro' },
						];
						t.hasPowerGuidanceCapableDevice &&
							g.push({
								title: 'power_guidance_menu_item_nav',
								url: '/power-guidance',
							}),
							g.push({
								title: 'segments',
								url: '/segments',
								disabled: (0, Te.H1)(),
							}),
							a &&
								!(0, Ee.B)() &&
								g.push({
									title: 'garmin_trails',
									url: `/${_e.L2}`,
									disabled: (0, Te.H1)(),
								}),
							(0, Ee.B)() ||
								g.push({
									title: 'course_map_label_popularity_heatmap',
									url: '/popularity-heatmap',
								}),
							t.showJetLag &&
								g.push({
									title: 'jet_lag_advisor',
									url: `/${_e.fX}/manage-trips`,
								}),
							o.main.push({
								title: 'training_and_planning',
								icon: 'icon-workouts',
								menuItems: g,
							});
					} else if (d) {
						const e = [
							{
								title: 'queue.workout',
								url: '/workouts',
								urlKeyword: 'workout',
							},
						];
						t.showJetLag &&
							e.push({
								title: 'jet_lag_advisor',
								url: `/${_e.fX}/manage-trips`,
							}),
							o.main.push({
								title: 'training_and_planning',
								icon: 'icon-workouts',
								menuItems: e,
							});
					}
					return (
						p &&
							!Ae.A.isDiveUserOnly() &&
							o.main.push({
								title: 'title_diving_widget',
								icon: 'icon-activity-diving',
								url: '/diving',
							}),
						(c || u || d || p) &&
							o.main.push({
								title: 'label_gear',
								icon: 'icon-steps',
								url: '/gear',
							}),
						d &&
							t.showInsights &&
							o.main.push({
								title: 'title_insights_widget',
								icon: 'icon-insights',
								url: '/insights',
							}),
						(c || d || p) &&
							o.main.push({
								title: 'title_reports_widget',
								icon: 'icon-reports-bar',
								url: '/report',
							}),
						(c || u || d || p) &&
							o.social.push({
								title: 'connections',
								icon: 'icon-people-2',
								url: '/connections/connections',
								urlKeyword: 'search',
								disabled: (0, Te.H1)(),
							}),
						(c || u || d || p) &&
							o.social.push({
								title: 'title_groups_widget',
								icon: 'icon-people-3',
								url: '/groups',
								urlKeyword: 'group/',
								disabled: (0, Te.H1)(),
							}),
						(c || u || d || p || y) &&
							o.other.push({
								title: 'trophy_case_badges_heading',
								icon: 'icon-badges-new',
								url: '/badges',
								disabled: (0, Te.H1)(),
							}),
						(c || d || p) &&
							o.other.push(
								{
									title: 'personal_records',
									icon: 'icon-personal-records',
									url: '/personal-records',
								},
								{
									title: 'goals',
									icon: 'icon-goals',
									url: '/goals',
									urlKeyword: 'goal',
								}
							),
						o
					);
				};
				var Ie = i(393240),
					ve = i(634328),
					fe = i.n(ve),
					De = { NAV_ITEM_SELECTED: 'NAV_ITEM_SELECTED' },
					Ne = I().View.extend({
						tagName: 'li',
						className: 'main-nav-menu-item',
						events: { 'click .main-nav-link': 'onClick' },
						initialize: function (e) {
							(this.template = b().template(fe())), (this.active = e.active);
						},
						render: function () {
							var e = this.getURL(),
								t = this.getLabel(),
								i = this.model.disabled ? 'read-only' : '',
								n = this.template({ title: t, url: e, customClasses: i });
							return (
								this.$el.html(n),
								this.checkHighlight(),
								I().history.on('route', this.checkHighlight.bind(this)),
								this
							);
						},
						checkHighlight: function () {
							this.matchesUrl() &&
								(this.trigger(De.NAV_ITEM_SELECTED), this.highlight());
						},
						getLabel: function () {
							return this.model.label
								? this.model.label
								: L.A.localize(this.model.title);
						},
						getURL: function () {
							return -1 !== this.model.url.indexOf('http')
								? this.model.url
								: me.default.url(this.model.url);
						},
						onClick: function (e) {
							e.ctrlKey || e.metaKey || e.preventDefault(),
								e.stopPropagation(),
								-1 !== this.model.url.indexOf('http')
									? (window.location = this.model.url)
									: (me.default.anchorTagHandler(e),
										Ie.A.push(this.model.title),
										this.trigger(De.NAV_ITEM_SELECTED),
										this.highlight(!0));
						},
						matchesUrl: function () {
							var e = window.location.pathname;
							if (this.model.root) return e === '/modern' + this.model.url;
							var t = this.model.urlKeyword || this.model.url;
							return -1 !== e.indexOf(t);
						},
						highlight: function (e) {
							this.$el.addClass('active');
						},
					});
				Ne.Events = De;
				const Re = Ne;
				var be = i(99547),
					Le = i(573614),
					Pe = i.n(Le),
					Oe =
						(i(37873),
						{
							NAV_ITEM_SELECTED: 'NAV_ITEM_SELECTED',
							REFRESH_BUBBLE: 'REFRESH_BUBBLE',
						}),
					we = I().View.extend({
						tagName: 'li',
						className: 'main-nav-item',
						events: { 'click .main-nav-link': 'onClick' },
						initialize: function (e) {
							(this.template = b().template(Pe())),
								(this.active = e.active),
								(this.className = e.className || 'main-nav-item'),
								'news_feed' === this.model.title &&
									(this.newsFeedStatus = e.newsFeedStatus);
						},
						render: function () {
							var e = 'main-nav-link';
							e += this.model.disabled ? ' read-only' : '';
							var t = this.template({
								title: this.getLabel(),
								showNewsFeedBubble:
									'news_feed' === this.model.title &&
									this.newsFeedStatus &&
									null !==
										this.newsFeedStatus.get('lastUnreadPostExpirationTimeGMT'),
								link: this.model.url ? me.default.url(this.model.url) : null,
								icon: this.model.icon,
								linkClass: e,
								hasChildren: this.hasChildren(),
							});
							return (
								this.$el.html(t),
								this.hasChildren() && this.renderChildElements(),
								this.checkHighlight(),
								I().history.on('route', this.checkHighlight.bind(this)),
								this
							);
						},
						checkHighlight: function () {
							this.matchesUrl() &&
								(this.trigger(Oe.NAV_ITEM_SELECTED), this.highlight());
						},
						getLabel: function () {
							return this.model.label
								? this.model.label
								: L.A.localize(this.model.title);
						},
						hasChildren: function () {
							return !!this.model.menuItems;
						},
						renderChildElements: function () {
							b().each(
								this.model.menuItems,
								function (e) {
									var t = new Re({ model: e });
									this.listenTo(t, Oe.NAV_ITEM_SELECTED, function () {
										this.trigger(Oe.NAV_ITEM_SELECTED), this.highlight();
									}),
										this.$('.main-nav-menu').append(t.render().el),
										t.matchesUrl() && this.highlight();
								},
								this
							);
						},
						onClick: function (e) {
							if ('news_feed' === this.model.title) {
								let e = this.$('.newsfeedUnreadBubble');
								e && e.hide(), v.A.setNewsFeedLastReadTimeCookies();
							}
							e &&
								(e.ctrlKey || e.metaKey || e.preventDefault(),
								e.stopPropagation()),
								this.hasChildren()
									? (this.$el.toggleClass('open-main-nav-menu'),
										this.$('.main-nav-menu').slideToggle(200),
										be.A.saveToggledNavItem(this.$el))
									: (me.default.anchorTagHandler(e),
										Ie.A.push(this.model.title),
										this.trigger(Oe.NAV_ITEM_SELECTED),
										this.highlight());
						},
						matchesUrl: function () {
							if (!this.hasChildren()) {
								var e = window.location.pathname,
									t = this.model.urlKeyword;
								return (
									!(!t || -1 === e.indexOf(t)) ||
									-1 !== e.indexOf(this.model.url)
								);
							}
							return !1;
						},
						highlight: function () {
							this.$('.main-nav-link').first().addClass('active');
						},
					});
				we.Events = Oe;
				const Fe = we;
				var ke = i(578761),
					Ue = i.n(ke),
					Me = i(321355),
					Ge = i(998813),
					xe = i(998813),
					Be = I()
						.View.extend(oe.A)
						.extend({
							template: b().template(Ue()),
							events: {
								'click a.logo': 'goToModern',
								'click .beta-switch': 'toggleBeta',
							},
							initialize: function (e) {
								(this.dashboards = e.dashboards),
									(this.serviceHost = e.serviceHost),
									(this.navCollapsedPref = e.navCollapsedPref),
									(this.preferences = e.preferences),
									(this.viewerAgentDevices = e.viewerAgentDevices),
									(this.internalAppsHost = e.internalAppsHost),
									(this.isAlphaUser = P.A.isAlphaUser()),
									(this.isRaceEventProvider = P.A.isRaceEventProvider()),
									(this.isBetaPool = Ge('.beta-tag').length > 0),
									(this.newsFeedStatus = e.newsFeedStatus);
								const t = v.A.getFullLocale().replace('_', '-');
								(this.activityTrackingAccuracyUrl = `http://www.garmin.com/${t}/legal/atdisclaimer`),
									(this.garminTrailsRole = new q.A({ key: se.tC })),
									(this.allowTrailsRequestsRole = new q.A({ key: se.UP })),
									(this.mfp = new Me.A());
							},
							render: function () {
								var e = Se(
										this.serviceHost,
										this.preferences,
										this.viewerAgentDevices,
										this.internalAppsHost,
										this.isGarminTrailsEnabled(),
										this.mfp
									),
									t = this.template({
										Localizer: L.A,
										menuJson: e,
										url: me.default.url,
										showMain: e.main.length > 0,
										showSocial: e.social.length > 0,
										showOther: e.other.length > 0,
										beta: {
											isAlphaUser: this.isAlphaUser,
											isBetaPool: this.isBetaPool,
										},
										activityTrackingAccuracyUrl:
											this.activityTrackingAccuracyUrl,
									});
								this.$el.html(t),
									this.addHoverEffect(),
									this.renderStaticDashboards(e),
									this.renderMainEntries(e),
									this.renderSocialEntries(e),
									this.renderOtherEntries(e),
									this.isBetaPool && Ge('.beta-tag').show(),
									Ge(window).on(
										'resize.mobileView',
										function () {
											window.handleMobileView(),
												xe(window).width() >= 768 &&
												this.navCollapsedPref &&
												'true' === this.navCollapsedPref.get('value')
													? (xe('body').removeClass('main-nav-open'),
														xe('body').addClass(
															'minimize-main-nav main-nav-closed'
														))
													: xe(window).width() >= 768 &&
														  this.navCollapsedPref &&
														  'false' === this.navCollapsedPref.get('value')
														? (xe('body').removeClass('main-nav-closed'),
															xe('body').addClass('main-nav-open'))
														: xe(window).width() < 768 &&
															(xe('body').removeClass('main-nav-open'),
															xe('body').addClass('main-nav-closed'));
										}.bind(this)
									);
							},
							isGarminTrailsEnabled: function () {
								return (
									this.garminTrailsRole.featureEnabled() &&
									this.allowTrailsRequestsRole.featureEnabled()
								);
							},
							provideDependencies: function (e, t) {
								0 === t &&
									(e.addModel({ model: this.garminTrailsRole, required: !0 }),
									e.addModel({
										model: this.allowTrailsRequestsRole,
										required: !0,
									}),
									e.addModel({ model: this.mfp, required: !0 }));
							},
							onDependenciesLoaded: function (e) {
								if (0 == e || 1 === e) return !1;
								this.render();
							},
							renderOtherEntries: function (e) {
								b().each(
									e.other,
									function (e) {
										var t = new Fe({ model: e });
										this.listenTo(
											t,
											Fe.Events.NAV_ITEM_SELECTED,
											this.onNavClicked.bind(this, t)
										),
											this.$('.main-nav-group.other').append(t.render().el);
									}.bind(this)
								);
							},
							renderSocialEntries: function (e) {
								b().each(
									e.social,
									function (e) {
										var t = new Fe({ model: e });
										this.listenTo(
											t,
											Fe.Events.NAV_ITEM_SELECTED,
											this.onNavClicked.bind(this, t)
										),
											this.$('.main-nav-group.social').append(t.render().el);
									}.bind(this)
								);
							},
							renderMainEntries: function (e) {
								b().each(
									e.main,
									function (e) {
										var t = new Fe({ model: e });
										this.listenTo(
											t,
											Fe.Events.NAV_ITEM_SELECTED,
											this.onNavClicked.bind(this, t)
										),
											this.$('.main-nav-group.main').append(t.render().el);
									}.bind(this)
								);
							},
							onNavClicked: function () {
								this.clearActiveNavItems(),
									xe('body').removeClass('mobile-open-main-nav');
							},
							clearActiveNavItems: function () {
								this.$('.main-nav-link').removeClass('active'),
									this.$('.main-nav-menu-item').removeClass('active');
							},
							renderStaticDashboards: function (e) {
								b().each(
									e.dashboards,
									function (e) {
										var t = new Fe({
											model: e,
											newsFeedStatus: this.newsFeedStatus,
										});
										this.listenTo(
											t,
											Fe.Events.NAV_ITEM_SELECTED,
											this.onNavClicked.bind(this, t)
										),
											this.$('.dashboards').append(t.render().el);
									}.bind(this)
								);
							},
							expandCollapse: function () {
								var e = xe('body'),
									t = e.hasClass('mobile')
										? 'mobile-open-main-nav'
										: 'minimize-main-nav';
								e.hasClass(t)
									? (e.removeClass(t),
										this.navCollapsedPref.set('value', 'false'),
										be.A.handleOpenedNavItems())
									: (e.addClass(t), this.navCollapsedPref.set('value', 'true')),
									e.hasClass('mobile')
										? e.hasClass('mobile-open-main-nav')
											? (e.removeClass('main-nav-closed'),
												e.addClass('main-nav-open'))
											: (e.removeClass('main-nav-open'),
												e.addClass('main-nav-closed'))
										: this.navCollapsedPref &&
											  'true' === this.navCollapsedPref.get('value')
											? (e.removeClass('main-nav-open'),
												e.addClass('main-nav-closed'))
											: (e.removeClass('main-nav-closed'),
												e.addClass('main-nav-open')),
									this.navCollapsedPref.save(),
									xe('.minimize-main-nav .main-nav-item').removeClass(
										'open-main-nav-menu'
									),
									xe('.minimize-main-nav .main-nav-menu').slideUp(200),
									setTimeout(function () {
										xe(window).trigger('resize.iframePage'),
											window.dispatchEvent(new Event('resize'));
									}, 500);
							},
							addHoverEffect: function () {
								var e;
								this.$el.hover(
									function () {
										var t = xe('body');
										t.hasClass('minimize-main-nav') &&
											(e = setTimeout(() => {
												t.addClass('main-nav-hover'),
													be.A.handleOpenedNavItems();
											}, 250));
									},
									function () {
										clearTimeout(e),
											xe('.minimize-main-nav .main-nav-item').removeClass(
												'open-main-nav-menu'
											),
											xe('.minimize-main-nav .main-nav-menu').slideUp(250),
											xe('body').removeClass('main-nav-hover');
									}
								);
							},
							goToModern: function (e) {
								e.ctrlKey || e.metaKey || e.preventDefault(),
									Ie.A.push('Connect'),
									I().history.navigate('/home', { trigger: !0 });
							},
							toggleBeta: function () {
								var e = function () {
										location.reload();
									},
									t = me.default.url('/service/beta');
								this.isBetaPool
									? Ge.ajax({ url: t, type: 'DELETE' }).done(e)
									: Ge.post(t).done(e);
							},
						});
				Be.Events = { EXPAND_COLLAPSE: 'EXPAND_COLLAPSE' };
				const He = Be;
				const Ve = I().Collection.extend({
					url: function () {
						return '/vivokidchallenge-service/teamChallenge/invite';
					},
					backend: 'gcapi',
				});
				var We = i(87786);
				const Je = { ON_MORE_MEMBERS_FETCHED: 'ON_MORE_MEMBERS_FETCHED' },
					Ye = I().Collection.extend({
						baseUrl: null,
						url: function () {
							let e = this.getBaseUrl();
							const t = {};
							return (
								'POST' !== this.verb &&
									('number' === typeof this.limit && (t.limit = this.limit),
									'string' === typeof this.cursor && (t.cursor = this.cursor)),
								`${e}${(0, We.zJ)(t)}`
							);
						},
						getBaseUrl: function () {
							return 'function' === typeof this.baseUrl
								? this.baseUrl()
								: this.baseUrl;
						},
						initializeCursorPagedCollection: function (e) {
							(this.initialFetchDone = !1),
								(this.appendMode = !0),
								e &&
									((this.limit = e.limit),
									(this.cursor = e.cursor),
									(this.shouldSort = e.sort)),
								e.hasOwnProperty('appendMode') &&
									(this.appendMode = e.appendMode),
								(this.verb = e.verb),
								this.verb || (this.verb = 'POST'),
								'boolean' !== typeof this.shouldSort && (this.shouldSort = !0);
						},
						fetchNext: function (e) {
							let t = null;
							if (
								((e = e || {}).success && (t = e.success),
								this.appendMode && ((e.add = !0), (e.remove = !1)),
								(e.type = this.verb),
								(e.sort = this.shouldSort),
								'POST' === this.verb)
							) {
								let t = {};
								(t.limit = this.limit),
									(e.data = t),
									(e.contentType =
										'application/x-www-form-urlencoded; charset=UTF-8');
							}
							let i = this;
							(e.success = function (e, n, a) {
								i.onFetchSuccess(e, n, a), t && t.call(i, e, n, a);
							}),
								this.hasMoreMembers() &&
									I().Collection.prototype.fetch.call(this, e);
						},
						fetch: function (e) {
							this.fetchNext(e);
						},
						onFetchSuccess: function (e, t, i) {
							(this.cursor = t.pagination.nextCursor),
								this.trigger(Je.ON_MORE_MEMBERS_FETCHED),
								this.initialFetchDone || (this.initialFetchDone = !0);
						},
						hasMoreMembers: function () {
							return !this.initialFetchDone || null !== this.cursor;
						},
					});
				Ye.Events = Je;
				const $e = Ye;
				const je = I().Model.extend({
						backend: 'gcapi',
						urlRoot: function () {
							return '/notification-service/notification/notification/cursor';
						},
						idAttribute: 'notificationId',
						parse: function (e) {
							return (
								e &&
									e.hasOwnProperty('attributes') &&
									((e.attributes = e.attributes.replace('-', '_')),
									this.handleBadCommentAttributes(e)),
								e
							);
						},
						handleBadCommentAttributes: function (e) {
							const t = e.relativeNameValue;
							if (t.device && t.device.indexOf('device-name') > 0) {
								let e = t.device.split('|');
								(t.device_name = e[2]), (t.device = e[0]);
							}
						},
						sync: function (e, t, i) {
							'update' === e &&
								(i.url = `/notification-service/notification/${this.id}/dismiss/${this.get('dismiss')}`),
								I().sync.call(this, e, t, i);
						},
					}),
					Ke = {
						COMMENTED_ON_USER_ACTIVITY: 'COMMENTED_ON_USER_ACTIVITY',
						COMMENTED_ON_USER_SEGMENT: 'COMMENTED_ON_USER_SEGMENT',
						LEADERBOARD_EARN_FIRST_PLACE: 'LEADERBOARD_EARN_FIRST_PLACE',
						LEADERBOARD_LOSE_FIRST_PLACE: 'LEADERBOARD_LOSE_FIRST_PLACE',
						FAVORITE_SEGMENT_DELETED: 'FAVORITE_SEGMENT_DELETED',
						FAVORITE_SEGMENT_EDITED: 'FAVORITE_SEGMENT_EDITED',
						GROUP_INVITE: 'GROUP_INVITE',
						MEMBER_REQUEST: 'MEMBER_REQUEST',
						CONNECTION_REQUEST: 'CONNECTION_REQUEST',
						COMMENTED_ON_USER_DAILYSUMMARY: 'COMMENTED_ON_USER_DAILYSUMMARY',
						COMMENTED_ON_USER_AUTOCHALLENGE: 'COMMENTED_ON_USER_AUTOCHALLENGE',
						COMMENTED_ON_ACTIVITY_THREAD: 'COMMENTED_ON_ACTIVITY_THREAD',
						CONNECTION_REQUEST_ACCEPTED: 'CONNECTION_REQUEST_ACCEPTED',
						LIKED_ON_ACTIVITY: 'LIKED_ON_ACTIVITY',
						LIKED_ON_ACTIVITY_COMMENT: 'LIKED_ON_ACTIVITY_COMMENT',
						TAGGED_ON_ACTIVITY_COMMENT: 'TAGGED_ON_ACTIVITY_COMMENT',
						AUTO_CHALLENGE_WINNER: 'AUTO_CHALLENGE_WINNER',
						ALSO_COMMENTED_ON_USER_SEGMENT: 'ALSO_COMMENTED_ON_USER_SEGMENT',
						ALSO_COMMENTED_ON_USER_DAILYSUMMARY:
							'ALSO_COMMENTED_ON_USER_DAILYSUMMARY',
						GROUP_NEWS_POST: 'GROUP_NEWS_POST',
						GROUP_ANNOUNCEMENT: 'GROUP_ANNOUNCEMENT',
						COMMENTED_ON_GROUP_NEWS_POST: 'COMMENTED_ON_GROUP_NEWS_POST',
						ALSO_COMMENTED_ON_GROUP_NEWS_POST:
							'ALSO_COMMENTED_ON_GROUP_NEWS_POST',
						LIKED_ON_GROUP_POST: 'LIKED_ON_GROUP_POST',
						LIKED_ON_GROUP_POST_COMMENT: 'LIKED_ON_GROUP_POST_COMMENT',
						COMMENTED_ON_GROUP_ACTIVITY: 'COMMENTED_ON_GROUP_ACTIVITY',
						ALSO_COMMENTED_ON_GROUP_ACTIVITY:
							'ALSO_COMMENTED_ON_GROUP_ACTIVITY',
						LIKED_ON_GROUP_ACTIVITY: 'LIKED_ON_GROUP_ACTIVITY',
						LIKED_ON_GROUP_ACTIVITY_COMMENT: 'LIKED_ON_GROUP_ACTIVITY_COMMENT',
						GROUP_INVITE_ACCEPTED: 'GROUP_INVITE_ACCEPTED',
						PRIVATE_GROUP_REQUEST_ACCEPTED: 'PRIVATE_GROUP_REQUEST_ACCEPTED',
						WEIGHT_SCALE_INVITE: 'WEIGHT_SCALE_INVITE',
						WEIGHT_SCALE_REMOVED: 'WEIGHT_SCALE_REMOVED',
						WEIGHT_SCALE_MAX_USER: 'WEIGHT_SCALE_MAX_USER',
						INACTIVE_ACTIVITY_TRACKER_USED: 'INACTIVE_ACTIVITY_TRACKER_USED',
						GEAR_MAX_DISTANCE: 'GEAR_MAX_DISTANCE',
						GROUP_CHALLENGE_CREATED: 'GROUP_CHALLENGE_CREATED',
						GROUP_CHALLENGE_START: 'GROUP_CHALLENGE_START',
						GROUP_CHALLENGE_OVER: 'GROUP_CHALLENGE_OVER',
						GROUP_CHALLENGE_BADGE: 'GROUP_CHALLENGE_BADGE',
						ADHOC_CHALLENGE_INVITED: 'ADHOC_CHALLENGE_INVITED',
						ADHOC_CHALLENGE_ACCEPTED: 'ADHOC_CHALLENGE_ACCEPTED',
						ADHOC_CHALLENGE_DECLINED: 'ADHOC_CHALLENGE_DECLINED',
						ADHOC_CHALLENGE_START: 'ADHOC_CHALLENGE_START',
						ADHOC_CHALLENGE_INVITE_WILL_EXPIRE:
							'ADHOC_CHALLENGE_INVITE_WILL_EXPIRE',
						ADHOC_CHALLENGE_START_TOMORROW: 'ADHOC_CHALLENGE_START_TOMORROW',
						ADHOC_CHALLENGE_SUMMARY: 'ADHOC_CHALLENGE_SUMMARY',
						CHALLENGE_RANKING_UP: 'CHALLENGE_RANKING_UP',
						CHALLENGE_RANKING_TAKEN: 'CHALLENGE_RANKING_TAKEN',
						CHALLENGE_RANKING_DOWN: 'CHALLENGE_RANKING_DOWN',
						ADHOC_CHALLENGE_ENDING_SOON: 'ADHOC_CHALLENGE_ENDING_SOON',
						ADHOC_CHALLENGE_ENDED: 'ADHOC_CHALLENGE_ENDED',
						ADHOC_CHALLENGE_FIRST_PLACE: 'ADHOC_CHALLENGE_FIRST_PLACE',
						ADHOC_CHALLENGE_NOT_FIRST_PLACE: 'ADHOC_CHALLENGE_NOT_FIRST_PLACE',
						ADHOC_CHALLENGE_ALTERNATE_PRIZE: 'ADHOC_CHALLENGE_ALTERNATE_PRIZE',
						COMMENTED_ON_ADHOC_CHALLENGE: 'COMMENTED_ON_ADHOC_CHALLENGE',
						VVFJR_ADHOC_CHALLENGE_START: 'VVFJR_ADHOC_CHALLENGE_START',
						VVFJR_CHALLENGE_INVITE_WILL_EXPIRE:
							'VVFJR_CHALLENGE_INVITE_WILL_EXPIRE',
						VVFJR_ADHOC_CHALLENGE_START_TOMORROW:
							'VVFJR_ADHOC_CHALLENGE_START_TOMORROW',
						VVFJR_CHALLENGE_ENDING_SOON: 'VVFJR_CHALLENGE_ENDING_SOON',
						VVFJR_CHALLENGE_END: 'VVFJR_CHALLENGE_END',
						VVFJR_ADHOC_CHALLENGE_FIRST_PLACE:
							'VVFJR_ADHOC_CHALLENGE_FIRST_PLACE',
						VVFJR_CHALLENGE_NOT_FIRST_PLACE: 'VVFJR_CHALLENGE_NOT_FIRST_PLACE',
						VVFJR_COMMENTED_ON_CHALLENGE: 'VVFJR_COMMENTED_ON_CHALLENGE',
						VVFJR_TEAM_CHALLENGE_ACCEPTED: 'VVFJR_TEAM_CHALLENGE_ACCEPTED',
						VVFJR_TEAM_CHALLENGE_DECLINED: 'VVFJR_TEAM_CHALLENGE_DECLINED',
						VVFJR_TEAM_CHALLENGE_START: 'VVFJR_TEAM_CHALLENGE_START',
						VVFJR_TEAM_CHALLENGE_INVITE_WILL_EXPIRE:
							'VVFJR_TEAM_CHALLENGE_INVITE_WILL_EXPIRE',
						VVFJR_TEAM_CHALLENGE_START_TOMORROW:
							'VVFJR_TEAM_CHALLENGE_START_TOMORROW',
						VVFJR_TEAM_CHALLENGE_SUMMARY: 'VVFJR_TEAM_CHALLENGE_SUMMARY',
						VVFJR_TEAM_CHALLENGE_ENDING_SOON:
							'VVFJR_TEAM_CHALLENGE_ENDING_SOON',
						VVFJR_TEAM_CHALLENGE_ENDED: 'VVFJR_TEAM_CHALLENGE_ENDED',
						VVFJR_TEAM_CHALLENGE_FIRST_PLACE:
							'VVFJR_TEAM_CHALLENGE_FIRST_PLACE',
						VVFJR_TEAM_CHALLENGE_NOT_FIRST_PLACE:
							'VVFJR_TEAM_CHALLENGE_NOT_FIRST_PLACE',
						VVFJR_TEAM_CHALLENGE_ALTERNATE_PRIZE:
							'VVFJR_TEAM_CHALLENGE_ALTERNATE_PRIZE',
						VVFJR_COMMENTED_ON_TEAM_CHALLENGE:
							'VVFJR_COMMENTED_ON_TEAM_CHALLENGE',
						VVFJR_TEAM_CHALLENGE_END: 'VVFJR_TEAM_CHALLENGE_END',
						VVFJR_TEAM_CHALLENGE_ENDS_IN_A_TIE:
							'VVFJR_TEAM_CHALLENGE_ENDS_IN_A_TIE',
						BADGE_START_SINGLE: 'BADGE_START_SINGLE',
						BADGE_START: 'BADGE_START',
						BADGE_START_TODAY_ONLY_SINGLE: 'BADGE_START_TODAY_ONLY_SINGLE',
						BADGE_START_TODAY_ONLY: 'BADGE_START_TODAY_ONLY',
						BADGE_EXPIRE_SINGLE: 'BADGE_EXPIRE_SINGLE',
						BADGE_EXPIRE: 'BADGE_EXPIRE',
						BADGE_EARNED_SINGLE: 'BADGE_EARNED_SINGLE',
						BADGE_EARNED: 'BADGE_EARNED',
						SHAREABLE_DEVICE_ACCEPT: 'SHAREABLE_DEVICE_ACCEPT',
						BADGE_LEVEL_UP: 'BADGE_LEVEL_UP',
						SHAREABLE_EVENT_DELETED: 'SHAREABLE_EVENT_DELETED',
						SHAREABLE_EVENT_COURSE_UPDATED: 'SHAREABLE_EVENT_COURSE_UPDATED',
						SHAREABLE_EVENT_UPDATED: 'SHAREABLE_EVENT_UPDATED',
						SHAREABLE_EVENT_PACEPRO_RECREATE:
							'SHAREABLE_EVENT_PACEPRO_RECREATE',
						SHAREABLE_EVENT_POWERGUIDE_RECREATE:
							'SHAREABLE_EVENT_POWERGUIDE_RECREATE',
						SHAREABLE_EVENT_POWERGUIDE_REMOVED:
							'SHAREABLE_EVENT_POWERGUIDE_REMOVED',
						SHAREABLE_EVENT_PACEPRO_REMOVED: 'SHAREABLE_EVENT_PACEPRO_REMOVED',
						PARTNER_REWARD_EARNED: 'PARTNER_REWARD_EARNED',
						ALL_ACTIVITY_TYPE_PRIVACY_UPDATE_SUCCESS:
							'ALL_ACTIVITY_TYPE_PRIVACY_UPDATE_SUCCESS',
						ALL_ACTIVITY_TYPE_PRIVACY_UPDATE_FAILURE:
							'ALL_ACTIVITY_TYPE_PRIVACY_UPDATE_FAILURE',
						ACTIVITY_TYPE_PRIVACY_UPDATE_SUCCESS:
							'ACTIVITY_TYPE_PRIVACY_UPDATE_SUCCESS',
						ACTIVITY_TYPE_PRIVACY_UPDATE_FAILURE:
							'ACTIVITY_TYPE_PRIVACY_UPDATE_FAILURE',
					},
					ze = {
						COMMENTED_ON_USER_ACTIVITY: 'comment',
						COMMENTED_ON_USER_SEGMENT: 'comment',
						LEADERBOARD_EARN_FIRST_PLACE: 'comment',
						LEADERBOARD_LOSE_FIRST_PLACE: 'comment',
						FAVORITE_SEGMENT_DELETED: 'comment',
						FAVORITE_SEGMENT_EDITED: 'comment',
						COMMENTED_ON_USER_DAILYSUMMARY: 'comment',
						COMMENTED_ON_USER_AUTOCHALLENGE: 'comment',
						COMMENTED_ON_ACTIVITY_THREAD: 'comment',
						AUTO_CHALLENGE_WINNER: 'comment',
						ALSO_COMMENTED_ON_USER_SEGMENT: 'comment',
						ALSO_COMMENTED_ON_USER_DAILYSUMMARY: 'comment',
						CONNECTION_REQUEST_ACCEPTED: 'comment',
						LIKED_ON_ACTIVITY: 'comment',
						LIKED_ON_ACTIVITY_COMMENT: 'comment',
						TAGGED_ON_ACTIVITY_COMMENT: 'comment',
						GROUP_NEWS_POST: 'group',
						GROUP_ANNOUNCEMENT: 'group',
						COMMENTED_ON_GROUP_NEWS_POST: 'group',
						ALSO_COMMENTED_ON_GROUP_NEWS_POST: 'group',
						LIKED_ON_GROUP_POST: 'group',
						LIKED_ON_GROUP_POST_COMMENT: 'group',
						COMMENTED_ON_GROUP_ACTIVITY: 'group',
						ALSO_COMMENTED_ON_GROUP_ACTIVITY: 'group',
						LIKED_ON_GROUP_ACTIVITY: 'group',
						LIKED_ON_GROUP_ACTIVITY_COMMENT: 'group',
						GROUP_INVITE_ACCEPTED: 'group',
						PRIVATE_GROUP_REQUEST_ACCEPTED: 'group',
						WEIGHT_SCALE_REMOVED: 'scale',
						WEIGHT_SCALE_MAX_USER: 'scale',
						INACTIVE_ACTIVITY_TRACKER_USED: 'system',
						GEAR_MAX_DISTANCE: 'gear',
						GROUP_CHALLENGE_CREATED: 'group',
						GROUP_CHALLENGE_START: 'group',
						GROUP_CHALLENGE_OVER: 'group',
						GROUP_CHALLENGE_BADGE: 'group',
						ADHOC_CHALLENGE_ACCEPTED: 'group',
						ADHOC_CHALLENGE_DECLINED: 'group',
						ADHOC_CHALLENGE_START: 'group',
						ADHOC_CHALLENGE_INVITE_WILL_EXPIRE: 'group',
						ADHOC_CHALLENGE_START_TOMORROW: 'group',
						ADHOC_CHALLENGE_SUMMARY: 'group',
						CHALLENGE_RANKING_UP: 'group',
						CHALLENGE_RANKING_TAKEN: 'group',
						CHALLENGE_RANKING_DOWN: 'group',
						ADHOC_CHALLENGE_ENDING_SOON: 'group',
						ADHOC_CHALLENGE_ENDED: 'group',
						ADHOC_CHALLENGE_FIRST_PLACE: 'group',
						ADHOC_CHALLENGE_NOT_FIRST_PLACE: 'group',
						COMMENTED_ON_ADHOC_CHALLENGE: 'group',
						VVFJR_ADHOC_CHALLENGE_START: 'group',
						VVFJR_CHALLENGE_INVITE_WILL_EXPIRE: 'group',
						VVFJR_ADHOC_CHALLENGE_START_TOMORROW: 'group',
						VVFJR_CHALLENGE_ENDING_SOON: 'group',
						VVFJR_CHALLENGE_END: 'group',
						VVFJR_ADHOC_CHALLENGE_FIRST_PLACE: 'group',
						VVFJR_CHALLENGE_NOT_FIRST_PLACE: 'group',
						VVFJR_COMMENTED_ON_CHALLENGE: 'group',
						VVFJR_TEAM_CHALLENGE_ACCEPTED: 'group',
						VVFJR_TEAM_CHALLENGE_DECLINED: 'group',
						VVFJR_TEAM_CHALLENGE_START: 'group',
						VVFJR_TEAM_CHALLENGE_INVITE_WILL_EXPIRE: 'group',
						VVFJR_TEAM_CHALLENGE_START_TOMORROW: 'group',
						VVFJR_TEAM_CHALLENGE_SUMMARY: 'group',
						VVFJR_TEAM_CHALLENGE_ENDING_SOON: 'group',
						VVFJR_TEAM_CHALLENGE_ENDED: 'group',
						VVFJR_TEAM_CHALLENGE_FIRST_PLACE: 'group',
						VVFJR_TEAM_CHALLENGE_NOT_FIRST_PLACE: 'group',
						VVFJR_TEAM_CHALLENGE_ALTERNATE_PRIZE: 'group',
						VVFJR_COMMENTED_ON_TEAM_CHALLENGE: 'group',
						VVFJR_TEAM_CHALLENGE_END: 'group',
						VVFJR_TEAM_CHALLENGE_ENDS_IN_A_TIE: 'group',
						SHAREABLE_DEVICE_ACCEPT: 'group',
						BADGE_START_SINGLE: 'badge',
						BADGE_START: 'badge',
						BADGE_START_TODAY_ONLY_SINGLE: 'badge',
						BADGE_START_TODAY_ONLY: 'badge',
						BADGE_EXPIRE_SINGLE: 'badge',
						BADGE_EXPIRE: 'badge',
						BADGE_EARNED_SINGLE: 'badge',
						BADGE_EARNED: 'badge',
						BADGE_LEVEL_UP: 'badge',
						SHAREABLE_EVENT_DELETED: 'event',
						SHAREABLE_EVENT_COURSE_UPDATED: 'event',
						SHAREABLE_EVENT_UPDATED: 'event',
						SHAREABLE_EVENT_PACEPRO_RECREATE: 'event',
						SHAREABLE_EVENT_POWERGUIDE_RECREATE: 'event',
						SHAREABLE_EVENT_POWERGUIDE_REMOVED: 'event',
						SHAREABLE_EVENT_PACEPRO_REMOVED: 'event',
						PARTNER_REWARD_EARNED: 'badge',
						ALL_ACTIVITY_TYPE_PRIVACY_UPDATE_SUCCESS: 'activity-privacy-update',
						ALL_ACTIVITY_TYPE_PRIVACY_UPDATE_FAILURE: 'activity-privacy-update',
						ACTIVITY_TYPE_PRIVACY_UPDATE_SUCCESS: 'activity-privacy-update',
						ACTIVITY_TYPE_PRIVACY_UPDATE_FAILURE: 'activity-privacy-update',
					},
					qe = $e.extend({
						model: je,
						backend: 'gcapi',
						baseUrl: '/notification-service/notification/notification/cursor',
						initialize: function (e, t) {
							let i = {
								verb: 'GET',
								shouldSort: !1,
								cursor: null,
								limit: t && t.limit ? t.limit : 10,
							};
							this.initializeCursorPagedCollection(i);
						},
						parse: function (e) {
							return e.notificationList.filter((e) =>
								Ke.hasOwnProperty(e.type)
							);
						},
					}),
					Qe = qe;
				const Xe = I().Model.extend({
					idAttribute: 'connectionRequestId',
					backend: 'gcapi',
					url: function () {
						return (
							'/userprofile-service/connection/request/' +
							this.connectionRequestId
						);
					},
					initialize: function (e) {
						this.connectionRequestId = e.connectionRequestId;
					},
				});
				const Ze = I().Collection.extend({
					model: Xe,
					backend: 'gcapi',
					url: '/userprofile-service/connection/pending?mutualConnectionCountIncluded=true',
				});
				var et = i(396993);
				const tt = I().Collection.extend({
					model: et.A,
					backend: 'gcapi',
					url: function () {
						return '/invite-service/invite';
					},
				});
				const it = I().Collection.extend({
					url: function () {
						return '/adhocchallenge-service/adHocChallenge/invite';
					},
					backend: 'gcapi',
				});
				const nt = I().Collection.extend({
						url: function () {
							return '/vivokidchallenge-service/adHocChallenge/invite';
						},
						backend: 'gcapi',
					}),
					at = 1,
					st = 2,
					rt = 3,
					ot = 4,
					lt = 5,
					ct = 6,
					dt = 7,
					ut = [at, st, rt, ot, lt, ct, dt],
					pt = [];
				for (let wo = 1; wo <= 124; wo += 1)
					(wo >= 110 && wo <= 115) || pt.push(wo);
				const yt = ut.map((e) => `req=${e}`).join('&'),
					ht = pt.map((e) => `id=${e}`).join('&'),
					gt = I().Model.extend({
						backend: 'gcapi',
						url: function () {
							return `/web-gateway/inbox/unreadBubble?${yt}&${ht}`;
						},
						poll: function () {
							if (!this.fetching) {
								this.fetching = !0;
								this.fetch({
									success: function (e) {
										e.fetching = !1;
									},
									error: this.onPollingError,
								});
							}
						},
						onPollingError: function (e, t) {
							(e.fetching = !1),
								(e.pollingEnabled = !1),
								'undefined' !== typeof console &&
									'undefined' !== typeof console.log &&
									console.log(
										new Date().toString() +
											' - Error polling: ' +
											t.status +
											' ' +
											t.statusText
									);
						},
						isPollingEnabled: function () {
							return !0;
						},
						parse: function (e) {
							this.set('unreadBubble', e.unreadBubble),
								e.unreadBubble && this.trigger('hasUnread', this);
						},
					}),
					mt = I().Model.extend({
						backend: 'gcapi',
						initialize: function () {
							this.limit = 2;
						},
						url: function () {
							return `/web-gateway/inbox/requests?limit=${this.limit}&${yt}`;
						},
						parse: function (e) {
							this.set('nextCursor', e.nextCursor),
								this.set('requests', e.requests);
						},
					}),
					At = I().Model.extend({
						backend: 'gcapi',
						url: function () {
							return `/web-gateway/inbox/request/count?${yt}`;
						},
						parse: function (e) {
							this.set('requestCount', e.requestCount),
								this.set('requests', e.requests);
						},
					});
				const _t = I().Model.extend({
					idAttribute: 'connectionRequestId',
					backend: 'gcapi',
					url: function () {
						return (
							'/userprofile-service/connection/accept/' +
							this.connectionRequestId
						);
					},
					initialize: function (e) {
						this.connectionRequestId = e.connectionRequestId;
					},
					error: function (e) {
						options.hasOwnProperty('error') && options.error(e);
					},
				});
				const Et = I().Model.extend({
					idAttribute: 'connectionRequestId',
					backend: 'gcapi',
					url: function () {
						return (
							'/userprofile-service/connection/decline/' +
							this.connectionRequestId
						);
					},
					initialize: function (e) {
						this.connectionRequestId = e.connectionRequestId;
					},
				});
				var Tt = i(115883),
					Ct = i(645935),
					St = i(960654),
					It = i(932621),
					vt = i(183059),
					ft = i.n(vt),
					Dt = i(576797),
					Nt = b().clone(I().Events);
				Nt.Events = {
					ON_COMMENT_DELETED: 'ON_COMMENT_DELETED',
					ON_STOP_FOLLOWER_SUCCESS: 'ON_STOP_FOLLOWER_SUCCESS',
					ON_MAX_CONNECTIONS_MODAL_SHOWED: 'ON_MAX_CONNECTIONS_MODAL_SHOWED',
					ON_MUTUAL_CONNECTIONS_MODAL_SHOWED:
						'ON_MUTUAL_CONNECTIONS_MODAL_SHOWED',
				};
				const Rt = Nt;
				var bt = i(702291),
					Lt = i(998813),
					Pt = { CONNECTION_CLICKED: 'CONNECTION_CLICKED' },
					Ot = I().View.extend({
						events: {
							'click .confirm': 'onConfirmButtonClicked',
							'click .delete-btn': 'onDeleteButtonClicked',
							'click .js-select-connection': 'onConnectionClicked',
							'click .mutual-connections-label': 'onMutualConnectionsClicked',
						},
						initialize: function (e) {
							(this.template = b().template(ft())),
								(this.pendingConnection = e.pendingConnection),
								(this.userProfile = e.userProfile),
								(this.userPreferences = e.userPreferences),
								(this.openNotificationCallback = e.openNotificationCallback);
						},
						render: function () {
							this.pendingConnection.mutualConnectionLabel =
								this.pendingConnection.mutualConnectionCount > 1
									? 'multiple_mutual_connections'
									: 'one_mutual_connection';
							const e =
								this.pendingConnection.requestStartTime &&
								l.Ay.formatRelativeTime(
									bt.A.parseISOUTC(this.pendingConnection.requestStartTime)
								);
							this.$el.append(
								this.template({
									Localizer: L.A,
									Personalizer: w.A,
									pendingConnection: this.pendingConnection,
									imageUrl:
										this.pendingConnection.profileImageUrlSmall || Tt.Mg,
									profileUrl: me.default.url(
										'/profile/' + this.pendingConnection.displayName
									),
									timeStamp: e,
								})
							);
						},
						onConfirmButtonClicked: function (e) {
							e.preventDefault();
							var t = Lt(e.target).attr('data-id'),
								i = this;
							new B.A({
								key: 'GDPR.ProfileActivityVisibility.Dismissed',
							}).fetch({
								success: function (e) {
									'true' === e.get('value')
										? i.confirmConnection(t)
										: It.A.openGdprModal(
												i.pendingConnection.displayName,
												t,
												i,
												i.openNotificationCallback
											);
								},
							});
						},
						confirmConnection: function (e) {
							let t = new _t({ connectionRequestId: e });
							t.save(t.attributes, {
								success: () => {
									this.enableMessages(!0),
										(this.privacyAlertView = new St.A({
											requestType: 'connection',
										})),
										this.privacyAlertView.on(
											St.A.Events.Closed,
											this.closeModal,
											this
										),
										this.privacyAlertView.on(
											St.A.Events.Ready,
											this.openModal,
											this
										),
										Dt.A.push({
											event: 'track_event',
											category: 'Connection Events',
											action: 'Accept From Inbox',
										});
								},
								error: (e, t) => this.showConnectionMaxModal(t),
							});
						},
						showConnectionMaxModal: function (e) {
							if (400 === e.status && e.responseJSON) {
								const t = e.responseJSON.errorType;
								('USER_CONNECTIONS_OVER_LIMIT' !== t &&
									'TARGET_CONNECTIONS_OVER_LIMIT' !== t) ||
									Rt.trigger(Rt.Events.ON_MAX_CONNECTIONS_MODAL_SHOWED, {
										isUserConnectionsOverLimitation:
											'USER_CONNECTIONS_OVER_LIMIT' === t,
										nameToDisplay:
											this.pendingConnection.fullName ||
											this.pendingConnection.displayName,
									});
							}
						},
						openModal: function () {
							this.privacyAlertView.getDisplayModal() &&
								((this.modalView = new Ct.A({
									view: this.privacyAlertView,
									showFooter: !0,
									modalTitle: L.A.localize('privacy.alert.heading'),
								})),
								this.modalView.on(
									Ct.A.Events.ON_SAVE,
									this.onSavePrivacyClicked,
									this
								),
								this.modalView.render());
						},
						closeModal: function () {
							this.modalView.close();
						},
						onSavePrivacyClicked: function () {
							this.privacyAlertView.onSaveClicked();
						},
						onDeleteButtonClicked: function (e) {
							e.preventDefault();
							let t = new Et({
								connectionRequestId: this.pendingConnection.connectionRequestId,
							});
							t.save(t.attributes, {
								success: () => {
									this.enableMessages(!1),
										Dt.A.push({
											event: 'track_event',
											category: 'Connection Events',
											action: 'Reject From Inbox',
										});
								},
							});
						},
						enableMessages: function (e) {
							e
								? (this.$('.js-confirm-msg').show(),
									this.$('.js-delete-msg').hide())
								: (this.$('.js-confirm-msg').hide(),
									this.$('.js-delete-msg').show()),
								this.$('.confirm').hide(),
								this.$('.delete-btn').hide();
						},
						onConnectionClicked: function (e) {
							var t = '/profile/' + this.pendingConnection.displayName;
							this.trigger(Pt.CONNECTION_CLICKED), me.default.navigate(t, e);
						},
						onMutualConnectionsClicked: function (e) {
							e.preventDefault(),
								Rt.trigger(Rt.Events.ON_MUTUAL_CONNECTIONS_MODAL_SHOWED, {
									displayName: this.pendingConnection.displayName,
									mutualConnectionsCount:
										this.pendingConnection.mutualConnectionCount,
								});
						},
					});
				Ot.Events = Pt;
				const wt = Ot;
				const Ft = I().Model.extend({
					idAttribute: 'userGroupId',
					url: function () {
						return '/group-service/invite/group/' + this.userGroupId;
					},
					backend: 'gcapi',
					initialize: function (e) {
						(this.userGroupId = e.userGroupId),
							(this.groupInviteId = e.groupInviteId);
					},
				});
				const kt = I().Model.extend({
					idAttribute: 'groupMemberRequestId',
					url: function () {
						return '/group-service/private/group/' + this.userGroupId;
					},
					backend: 'gcapi',
					initialize: function (e) {
						(this.userGroupId = e.userGroupId),
							(this.groupMemberRequestId = e.groupMemberRequestId);
					},
				});
				var Ut = i(598602),
					Mt = i(236296),
					Gt = i(472749),
					xt = i.n(Gt),
					Bt = i(595695);
				const Ht = I().View.extend({
					template: Bt.template(xt()),
					initialize: function (e) {
						return this;
					},
					render: function () {
						return this.$el.html(this.template({ Localizer: L.A })), this;
					},
					destroy: function () {
						this.off(), this.remove();
					},
				});
				var Vt = i(799095),
					Wt = i.n(Vt),
					Jt = b().clone(I().Events);
				Jt.Events = { ON_GROUP_REQUEST_ERROR: 'ON_GROUP_REQUEST_ERROR' };
				const Yt = Jt;
				var $t = i(568574),
					jt = i(698431);
				jt.A.loadNamespaces(['notification']);
				var Kt = { ON_NAVIGATION: 'ON_NAVIGATION' },
					zt = I().View.extend({
						events: {
							'click .confirm': 'onConfirmButtonClicked',
							'click .ignore': 'onIgnoreButtonClicked',
							'click .js-select-group': 'onGroupClicked',
							'click .js-select-user': 'onUserClicked',
						},
						initialize: function (e) {
							(this.template = b().template(Wt())),
								(this.pendingConnection = e.pendingConnection),
								(this.userProfile = e.userProfile),
								(this.userPreferences = e.userPreferences),
								(this.groupInviteSpammingDays = e.groupInviteSpammingDays);
						},
						render: function () {
							const {
									displayName: e,
									fullName: t,
									groupName: i,
									groupId: n,
									createDate: a,
									groupMemberRequestId: s,
									profileImageUrlSmall: r,
								} = this.pendingConnection,
								o = a && l.Ay.formatRelativeTime(bt.A.parseISOUTC(a)),
								c = me.default.url('/profile/' + e),
								d = me.default.url('/group/' + n),
								u = t || e,
								p = jt.A.t('notification:group.request', {
									0: u,
									1: i,
									2: c,
									3: d,
								}),
								y = jt.A.t('notification:group_admin_invite', {
									0: u,
									1: c,
									2: i,
									3: d,
								});
							this.$el.html(
								this.template({
									Localizer: L.A,
									timeStamp: o,
									profileUrl: c,
									groupRequestString: s ? p : y,
									imageUrl: r || Tt.Mg,
								})
							);
						},
						onConfirmButtonClicked: function (e) {
							e.preventDefault();
							var t = new Ht(),
								i = this;
							new Ut.A({
								view: t,
								modalTitle: L.A.localize('data_and_privacy'),
								cancelTextKey: 'button_cancel',
								confirmationTextKey: 'ok',
								onSaveButtonClicked: function () {
									setTimeout(i.acceptRequest.bind(i), 400), this.close();
								},
							}).render();
						},
						acceptRequest: function () {
							var e = this;
							if (this.pendingConnection.groupInviteId) {
								var t = new Ft({
									userGroupId: this.pendingConnection.groupId,
									groupInviteId: this.pendingConnection.groupInviteId,
								});
								t.save(t.attributes, {
									success: (t, i) => {
										e.enableMessages(!0),
											i ||
												Yt.trigger(
													Yt.Events.ON_GROUP_REQUEST_ERROR,
													$t.QC.invitationCancelled
												);
									},
									error: (e, t) => {
										t &&
											404 === t.status &&
											Yt.trigger(
												Yt.Events.ON_GROUP_REQUEST_ERROR,
												$t.QC.groupDeleted
											);
									},
								});
							} else {
								var i = new kt({
									userGroupId: this.pendingConnection.groupId,
									groupMemberRequestId:
										this.pendingConnection.groupMemberRequestId,
								});
								i.save(i.attributes, {
									success: (t, i) => {
										e.enableMessages(!0),
											i ||
												Yt.trigger(
													Yt.Events.ON_GROUP_REQUEST_ERROR,
													$t.QC.requestCancelled
												);
									},
									error: (e, t) => {
										t && 404 === t.status
											? Yt.trigger(
													Yt.Events.ON_GROUP_REQUEST_ERROR,
													$t.QC.groupDeleted
												)
											: t &&
												403 === t.status &&
												Yt.trigger(
													Yt.Events.ON_GROUP_REQUEST_ERROR,
													$t.QC.acceptRequestNoPermission
												);
									},
								});
							}
							(this.privacyAlertView = new St.A({ requestType: 'group' })),
								this.privacyAlertView.on(
									St.A.Events.Closed,
									this.closeModal,
									this
								),
								this.privacyAlertView.on(
									St.A.Events.Ready,
									this.openModal,
									this
								);
						},
						openModal: function () {
							this.privacyAlertView.getDisplayModal() &&
								((this.modalView = new Ct.A({
									view: this.privacyAlertView,
									showFooter: !0,
									modalTitle: L.A.localize('privacy.alert.heading'),
								})),
								this.modalView.on(
									Ct.A.Events.ON_SAVE,
									this.onSavePrivacyClicked,
									this
								),
								this.modalView.render());
						},
						closeModal: function () {
							this.modalView.close();
						},
						onSavePrivacyClicked: function () {
							this.privacyAlertView.onSaveClicked();
						},
						onIgnoreButtonClicked: function (e) {
							if (
								(e.preventDefault(),
								'HIDDEN' === this.pendingConnection.groupVisibility)
							) {
								const e =
									this.groupInviteSpammingDays > 1
										? L.A.localize(
												'confirm_delete_invitation_dialog_desc_n_days',
												this.groupInviteSpammingDays
											)
										: L.A.localize(
												'confirm_delete_invitation_dialog_desc_1_day'
											);
								(this.modalConfirmationView = new Mt.A({
									modalTitle: L.A.localize(
										'confirm_delete_invitation_dialog_title'
									),
									message: e,
									htmlFormat: !0,
									confirmationTextKey: 'button_delete',
									cancelTextKey: 'button_cancel',
									onSaveButtonClicked: () => {
										this.modalConfirmationView.close(),
											this.processIgnoreRequest();
									},
								})),
									this.modalConfirmationView.render();
							} else this.processIgnoreRequest();
						},
						processIgnoreRequest: function () {
							if (this.pendingConnection.groupInviteId) {
								var e = new Ft({
									userGroupId: this.pendingConnection.groupId,
									groupInviteId: this.pendingConnection.groupInviteId,
								});
								e.save(e.attributes, {
									success: this.enableMessages(!1),
									beforeSend: function (e) {
										e.setRequestHeader('X-HTTP-Method-Override', 'DELETE');
									},
								});
							} else {
								var t = new kt({
									userGroupId: this.pendingConnection.groupId,
									groupMemberRequestId:
										this.pendingConnection.groupMemberRequestId,
								});
								t.save(t.attributes, {
									success: this.enableMessages(!1),
									beforeSend: function (e) {
										e.setRequestHeader('X-HTTP-Method-Override', 'DELETE');
									},
								});
							}
						},
						enableMessages: function (e) {
							e
								? (this.$('.js-confirm-msg').show(),
									this.$('.js-ignore-msg').hide())
								: (this.$('.js-confirm-msg').hide(),
									this.$('.js-ignore-msg').show()),
								this.$('.confirm').hide(),
								this.$('.ignore').hide();
						},
						onUserClicked: function (e) {
							var t = '/profile/' + this.pendingConnection.displayName;
							this.trigger(Kt.ON_NAVIGATION), me.default.navigate(t, e);
						},
						onGroupClicked: function (e) {
							var t = '/group/' + this.pendingConnection.groupId;
							this.trigger(Kt.ON_NAVIGATION), me.default.navigate(t, e);
						},
					});
				zt.Events = Kt;
				const qt = zt;
				var Qt = i(205472),
					Xt = i.n(Qt),
					Zt = {
						INVITED: 'INVITED',
						DECLINED: 'DECLINED',
						ACCEPTED: 'ACCEPTED',
					},
					ei = { ON_NAVIGATION: 'ON_NAVIGATION' },
					ti = I().View.extend({
						events: {
							'click .btn-get-started': 'onGetStartedButtonClicked',
							'click .btn-decline': 'onDeclineButtonClicked',
							'click .btn-undo-decline': 'onUndoDeclineButtonClicked',
							'click .js-select-user': 'onUserClicked',
						},
						initialize: function (e) {
							(this.template = b().template(Xt())),
								(this.pendingDeviceInviteRequest =
									e.pendingDeviceInviteRequest),
								(this.userProfile = e.userProfile),
								(this.userPreferences = e.userPreferences);
						},
						render: function () {
							const e = this.pendingDeviceInviteRequest.toJSON(),
								{
									invitorDisplayName: t,
									inviteDate: i,
									deviceInviteStatus: n,
								} = e,
								a = i && l.Ay.formatRelativeTime(bt.A.parseISOUTC(i)),
								s = L.A.localize('device.invited', e.productDisplayName);
							let r = L.A.localize('button_delete'),
								o = L.A.localize('accept'),
								c = L.A.localize('request.deleted');
							const d = L.A.localize('weight.scale.decline.undo.button');
							this.$el.html(
								this.template({
									i18nDecline: r,
									i18nAccept: o,
									i18nUndo: d,
									i18nDeclinedDesc: c,
									i18nDeviceInvited: s,
									pendingRequest: e,
									profileUrl: me.default.url(`/profile/${t}`),
									getStartedUrl: me.default.url(this.getGetStartedUrl()),
									timeStamp: a,
								})
							),
								n == Zt.DECLINED && this.displayDeclineMessages(!0);
						},
						onGetStartedButtonClicked: function (e) {
							e.preventDefault(),
								this.pendingDeviceInviteRequest.set(
									'deviceInviteStatus',
									Zt.ACCEPTED
								);
							var t = this.getGetStartedUrl();
							this.trigger(ei.ON_NAVIGATION),
								I().history.navigate(t, { trigger: !0 });
						},
						getGetStartedUrl: function () {
							return (
								'/device/get-started/' +
								this.pendingDeviceInviteRequest.get('deviceId') +
								'/invite/' +
								this.pendingDeviceInviteRequest.get('deviceInviteId')
							);
						},
						onDeclineButtonClicked: function (e) {
							e.preventDefault();
							var t = this;
							this.pendingDeviceInviteRequest.set(
								'deviceInviteStatus',
								Zt.DECLINED
							),
								this.pendingDeviceInviteRequest.save(
									this.pendingDeviceInviteRequest.attributes,
									{
										success: function (e, i) {
											t.displayDeclineMessages(!0);
										},
									}
								);
						},
						onUndoDeclineButtonClicked: function (e) {
							e.preventDefault();
							var t = this;
							this.pendingDeviceInviteRequest.set(
								'deviceInviteStatus',
								Zt.INVITED
							),
								this.pendingDeviceInviteRequest.save(
									this.pendingDeviceInviteRequest.attributes,
									{
										success: function () {
											t.displayDeclineMessages(!1);
										},
									}
								);
						},
						displayDeclineMessages: function (e) {
							e
								? (this.$('.inbox-response').show(),
									this.$('.btn-get-started').hide(),
									this.$('.btn-decline').hide())
								: (this.$('.inbox-response').hide(),
									this.$('.media-action').show(),
									this.$('.btn-get-started').show(),
									this.$('.btn-decline').show());
						},
						onUserClicked: function (e) {
							var t =
								'/profile/' +
								this.pendingDeviceInviteRequest.get('invitorDisplayName');
							this.trigger(ei.ON_NAVIGATION), me.default.navigate(t, e);
						},
					});
				(ti.STATUS = Zt), (ti.Events = ei);
				const ii = ti;
				var ni = i(284731),
					ai = i(604914),
					si = i.n(ai),
					ri = i(946186),
					oi = i.n(ri),
					li = i(882155),
					ci = i.n(li),
					di = i(127433),
					ui = i.n(di),
					pi = i(188626),
					yi = i.n(pi),
					hi = i(108990),
					gi = i.n(hi),
					mi = i(389827),
					Ai = i.n(mi),
					_i = i(747816),
					Ei = {};
				(Ei.styleTagTransform = Ai()),
					(Ei.setAttributes = yi()),
					(Ei.insert = ui().bind(null, 'head')),
					(Ei.domAPI = ci()),
					(Ei.insertStyleElement = gi());
				oi()(_i.A, Ei);
				_i.A && _i.A.locals && _i.A.locals;
				function Ti(e) {
					return {
						adhoc_challenge_type:
							Number(e.relativeNameValue.adhoc_challenge_type) || 0,
						format_id: Number(e.relativeNameValue.format_id) || 0,
						from_user_name: e.relativeNameValue.from_user_name,
					};
				}
				function Ci(e) {
					if (!e) return '';
					switch (e.type) {
						case Si.ADHOC_CHALLENGE_ENDED:
						case Si.VVFJR_CHALLENGE_END:
						case Si.VVFJR_TEAM_CHALLENGE_END:
						case Si.VVFJR_TEAM_CHALLENGE_ENDED:
							return (function (e) {
								if (!e.relativeNameValue) return '';
								let { format_id: t } = Ti(e);
								return (t %= 4), t < 2 ? '' : `_${t}`;
							})(e);
						case Si.ADHOC_CHALLENGE_ENDING_SOON:
						case Si.VVFJR_CHALLENGE_ENDING_SOON:
						case Si.VVFJR_TEAM_CHALLENGE_ENDING_SOON:
							return (function (e) {
								if (!e.relativeNameValue) return '';
								let { adhoc_challenge_type: t, format_id: i } = Ti(e);
								return 2 === t ? '_cycling' : ((i %= 13), i < 2 ? '' : `_${i}`);
							})(e);
						case Si.ADHOC_CHALLENGE_FIRST_PLACE:
						case Si.VVFJR_ADHOC_CHALLENGE_FIRST_PLACE:
						case Si.VVFJR_TEAM_CHALLENGE_FIRST_PLACE:
							return (function (e) {
								if (!e.relativeNameValue) return '';
								let { format_id: t } = Ti(e);
								return (t %= 7), t < 2 ? '' : `_${t}`;
							})(e);
						case Si.ADHOC_CHALLENGE_NOT_FIRST_PLACE:
						case Si.VVFJR_CHALLENGE_NOT_FIRST_PLACE:
						case Si.VVFJR_TEAM_CHALLENGE_NOT_FIRST_PLACE:
							return (function (e) {
								if (!e.relativeNameValue) return '';
								let { format_id: t } = Ti(e);
								return (t %= 6), 2 === t || 4 === t || 5 === t ? `_${t}` : '';
							})(e);
						case Si.ADHOC_CHALLENGE_START:
						case Si.VVFJR_ADHOC_CHALLENGE_START:
						case Si.VVFJR_TEAM_CHALLENGE_START:
							return (function (e) {
								if (!e.relativeNameValue) return '';
								let { adhoc_challenge_type: t, format_id: i } = Ti(e);
								return 2 === t ? '_cycling' : ((i %= 5), i < 2 ? '' : `_${i}`);
							})(e);
						case Si.ADHOC_CHALLENGE_SUMMARY:
						case Si.VVFJR_TEAM_CHALLENGE_SUMMARY:
							return (function (e) {
								if (!e.relativeNameValue) return '';
								let { format_id: t, from_user_name: i } = Ti(e);
								return (
									(t %= 5),
									(t = t < 2 ? '' : `_${t}`),
									i && (t = `_single${t}`),
									t
								);
							})(e);
						case Si.CHALLENGE_RANKING_DOWN:
							return (function (e) {
								if (!e.relativeNameValue) return '';
								let { adhoc_challenge_type: t, format_id: i } = Ti(e);
								return 2 === t ? '_cycling' : ((i %= 3), i < 2 ? '' : `_${i}`);
							})(e);
						case Si.CHALLENGE_RANKING_TAKEN:
							return (function (e) {
								if (!e.relativeNameValue) return '';
								let { adhoc_challenge_type: t, format_id: i } = Ti(e);
								return 2 === t
									? ((i %= 3), (i = i < 2 ? '' : `_${i}`), `_cycling${i}`)
									: ((i %= 4), i < 2 ? '' : `_${i}`);
							})(e);
						case Si.CHALLENGE_RANKING_UP:
							return (function (e) {
								if (!e.relativeNameValue) return '';
								let { format_id: t } = Ti(e);
								return (t %= 13), t < 2 ? '' : `_${t}`;
							})(e);
						default:
							return '';
					}
				}
				var Si = {
					COMMENTED_ON_USER_ACTIVITY: 'COMMENTED_ON_USER_ACTIVITY',
					COMMENTED_ON_USER_SEGMENT: 'COMMENTED_ON_USER_SEGMENT',
					LEADERBOARD_EARN_FIRST_PLACE: 'LEADERBOARD_EARN_FIRST_PLACE',
					LEADERBOARD_LOSE_FIRST_PLACE: 'LEADERBOARD_LOSE_FIRST_PLACE',
					FAVORITE_SEGMENT_DELETED: 'FAVORITE_SEGMENT_DELETED',
					FAVORITE_SEGMENT_EDITED: 'FAVORITE_SEGMENT_EDITED',
					COMMENTED_ON_USER_DAILYSUMMARY: 'COMMENTED_ON_USER_DAILYSUMMARY',
					COMMENTED_ON_USER_AUTOCHALLENGE: 'COMMENTED_ON_USER_AUTOCHALLENGE',
					COMMENTED_ON_ACTIVITY_THREAD: 'COMMENTED_ON_ACTIVITY_THREAD',
					AUTO_CHALLENGE_WINNER: 'AUTO_CHALLENGE_WINNER',
					ALSO_COMMENTED_ON_USER_SEGMENT: 'ALSO_COMMENTED_ON_USER_SEGMENT',
					ALSO_COMMENTED_ON_USER_DAILYSUMMARY:
						'ALSO_COMMENTED_ON_USER_DAILYSUMMARY',
					CONNECTION_REQUEST_ACCEPTED: 'CONNECTION_REQUEST_ACCEPTED',
					LIKED_ON_ACTIVITY: 'LIKED_ON_ACTIVITY',
					LIKED_ON_ACTIVITY_COMMENT: 'LIKED_ON_ACTIVITY_COMMENT',
					TAGGED_ON_ACTIVITY_COMMENT: 'TAGGED_ON_ACTIVITY_COMMENT',
					GROUP_NEWS_POST: 'GROUP_NEWS_POST',
					GROUP_ANNOUNCEMENT: 'GROUP_ANNOUNCEMENT',
					COMMENTED_ON_GROUP_NEWS_POST: 'COMMENTED_ON_GROUP_NEWS_POST',
					ALSO_COMMENTED_ON_GROUP_NEWS_POST:
						'ALSO_COMMENTED_ON_GROUP_NEWS_POST',
					LIKED_ON_GROUP_POST: 'LIKED_ON_GROUP_POST',
					LIKED_ON_GROUP_POST_COMMENT: 'LIKED_ON_GROUP_POST_COMMENT',
					COMMENTED_ON_GROUP_ACTIVITY: 'COMMENTED_ON_GROUP_ACTIVITY',
					ALSO_COMMENTED_ON_GROUP_ACTIVITY: 'ALSO_COMMENTED_ON_GROUP_ACTIVITY',
					LIKED_ON_GROUP_ACTIVITY: 'LIKED_ON_GROUP_ACTIVITY',
					LIKED_ON_GROUP_ACTIVITY_COMMENT: 'LIKED_ON_GROUP_ACTIVITY_COMMENT',
					GROUP_INVITE_ACCEPTED: 'GROUP_INVITE_ACCEPTED',
					PRIVATE_GROUP_REQUEST_ACCEPTED: 'PRIVATE_GROUP_REQUEST_ACCEPTED',
					WEIGHT_SCALE_REMOVED: 'WEIGHT_SCALE_REMOVED',
					WEIGHT_SCALE_MAX_USER: 'WEIGHT_SCALE_MAX_USER',
					DEVICE_REMOVED: 'DEVICE_REMOVED',
					DEVICE_MAX_USER: 'DEVICE_MAX_USER',
					INACTIVE_ACTIVITY_TRACKER_USED: 'INACTIVE_ACTIVITY_TRACKER_USED',
					GEAR_MAX_DISTANCE: 'GEAR_MAX_DISTANCE',
					GROUP_CHALLENGE_CREATED: 'GROUP_CHALLENGE_CREATED',
					GROUP_CHALLENGE_START: 'GROUP_CHALLENGE_START',
					GROUP_CHALLENGE_OVER: 'GROUP_CHALLENGE_OVER',
					GROUP_CHALLENGE_BADGE: 'GROUP_CHALLENGE_BADGE',
					ADHOC_CHALLENGE_INVITED: 'ADHOC_CHALLENGE_INVITED',
					ADHOC_CHALLENGE_ACCEPTED: 'ADHOC_CHALLENGE_ACCEPTED',
					ADHOC_CHALLENGE_DECLINED: 'ADHOC_CHALLENGE_DECLINED',
					ADHOC_CHALLENGE_START: 'ADHOC_CHALLENGE_START',
					ADHOC_CHALLENGE_INVITE_WILL_EXPIRE:
						'ADHOC_CHALLENGE_INVITE_WILL_EXPIRE',
					ADHOC_CHALLENGE_START_TOMORROW: 'ADHOC_CHALLENGE_START_TOMORROW',
					ADHOC_CHALLENGE_SUMMARY: 'ADHOC_CHALLENGE_SUMMARY',
					CHALLENGE_RANKING_UP: 'CHALLENGE_RANKING_UP',
					CHALLENGE_RANKING_TAKEN: 'CHALLENGE_RANKING_TAKEN',
					CHALLENGE_RANKING_DOWN: 'CHALLENGE_RANKING_DOWN',
					ADHOC_CHALLENGE_ENDING_SOON: 'ADHOC_CHALLENGE_ENDING_SOON',
					ADHOC_CHALLENGE_ENDED: 'ADHOC_CHALLENGE_ENDED',
					ADHOC_CHALLENGE_FIRST_PLACE: 'ADHOC_CHALLENGE_FIRST_PLACE',
					ADHOC_CHALLENGE_NOT_FIRST_PLACE: 'ADHOC_CHALLENGE_NOT_FIRST_PLACE',
					ADHOC_CHALLENGE_ALTERNATE_PRIZE: 'ADHOC_CHALLENGE_ALTERNATE_PRIZE',
					COMMENTED_ON_ADHOC_CHALLENGE: 'COMMENTED_ON_ADHOC_CHALLENGE',
					VVFJR_ADHOC_CHALLENGE_INVITED: 'VVFJR_ADHOC_CHALLENGE_INVITED',
					VVFJR_ADHOC_CHALLENGE_START: 'VVFJR_ADHOC_CHALLENGE_START',
					VVFJR_CHALLENGE_INVITE_WILL_EXPIRE:
						'VVFJR_CHALLENGE_INVITE_WILL_EXPIRE',
					VVFJR_ADHOC_CHALLENGE_START_TOMORROW:
						'VVFJR_ADHOC_CHALLENGE_START_TOMORROW',
					VVFJR_CHALLENGE_ENDING_SOON: 'VVFJR_CHALLENGE_ENDING_SOON',
					VVFJR_CHALLENGE_END: 'VVFJR_CHALLENGE_END',
					VVFJR_ADHOC_CHALLENGE_FIRST_PLACE:
						'VVFJR_ADHOC_CHALLENGE_FIRST_PLACE',
					VVFJR_CHALLENGE_NOT_FIRST_PLACE: 'VVFJR_CHALLENGE_NOT_FIRST_PLACE',
					VVFJR_COMMENTED_ON_CHALLENGE: 'VVFJR_COMMENTED_ON_CHALLENGE',
					VVFJR_TEAM_CHALLENGE_INVITED: 'VVFJR_TEAM_CHALLENGE_INVITED',
					VVFJR_TEAM_CHALLENGE_ACCEPTED: 'VVFJR_TEAM_CHALLENGE_ACCEPTED',
					VVFJR_TEAM_CHALLENGE_DECLINED: 'VVFJR_TEAM_CHALLENGE_DECLINED',
					VVFJR_TEAM_CHALLENGE_START: 'VVFJR_TEAM_CHALLENGE_START',
					VVFJR_TEAM_CHALLENGE_INVITE_WILL_EXPIRE:
						'VVFJR_TEAM_CHALLENGE_INVITE_WILL_EXPIRE',
					VVFJR_TEAM_CHALLENGE_START_TOMORROW:
						'VVFJR_TEAM_CHALLENGE_START_TOMORROW',
					VVFJR_TEAM_CHALLENGE_SUMMARY: 'VVFJR_TEAM_CHALLENGE_SUMMARY',
					VVFJR_TEAM_CHALLENGE_ENDING_SOON: 'VVFJR_TEAM_CHALLENGE_ENDING_SOON',
					VVFJR_TEAM_CHALLENGE_ENDED: 'VVFJR_TEAM_CHALLENGE_ENDED',
					VVFJR_TEAM_CHALLENGE_FIRST_PLACE: 'VVFJR_TEAM_CHALLENGE_FIRST_PLACE',
					VVFJR_TEAM_CHALLENGE_NOT_FIRST_PLACE:
						'VVFJR_TEAM_CHALLENGE_NOT_FIRST_PLACE',
					VVFJR_TEAM_CHALLENGE_ALTERNATE_PRIZE:
						'VVFJR_TEAM_CHALLENGE_ALTERNATE_PRIZE',
					VVFJR_COMMENTED_ON_TEAM_CHALLENGE:
						'VVFJR_COMMENTED_ON_TEAM_CHALLENGE',
					VVFJR_TEAM_CHALLENGE_END: 'VVFJR_TEAM_CHALLENGE_END',
					VVFJR_TEAM_CHALLENGE_ENDS_IN_A_TIE:
						'VVFJR_TEAM_CHALLENGE_ENDS_IN_A_TIE',
					SHAREABLE_DEVICE_ACCEPT: 'SHAREABLE_DEVICE_ACCEPT',
					PRIVATE_GROUP_REQUEST_ACCEPTED: 'PRIVATE_GROUP_REQUEST_ACCEPTED',
					SHAREABLE_EVENT_DELETED: 'SHAREABLE_EVENT_DELETED',
					SHAREABLE_EVENT_COURSE_UPDATED: 'SHAREABLE_EVENT_COURSE_UPDATED',
					SHAREABLE_EVENT_UPDATED: 'SHAREABLE_EVENT_UPDATED',
					SHAREABLE_EVENT_PACEPRO_RECREATE: 'SHAREABLE_EVENT_PACEPRO_RECREATE',
					SHAREABLE_EVENT_POWERGUIDE_RECREATE:
						'SHAREABLE_EVENT_POWERGUIDE_RECREATE',
					SHAREABLE_EVENT_POWERGUIDE_REMOVED:
						'SHAREABLE_EVENT_POWERGUIDE_REMOVED',
					SHAREABLE_EVENT_PACEPRO_REMOVED: 'SHAREABLE_EVENT_PACEPRO_REMOVED',
					ALL_ACTIVITY_TYPE_PRIVACY_UPDATE_SUCCESS:
						'ALL_ACTIVITY_TYPE_PRIVACY_UPDATE_SUCCESS',
					ALL_ACTIVITY_TYPE_PRIVACY_UPDATE_FAILURE:
						'ALL_ACTIVITY_TYPE_PRIVACY_UPDATE_FAILURE',
					ACTIVITY_TYPE_PRIVACY_UPDATE_SUCCESS:
						'ACTIVITY_TYPE_PRIVACY_UPDATE_SUCCESS',
					ACTIVITY_TYPE_PRIVACY_UPDATE_FAILURE:
						'ACTIVITY_TYPE_PRIVACY_UPDATE_FAILURE',
				};
				const Ii = {
					EVENT_DATE: 'shareable_event_date',
					EVENT_TYPE: 'shareable_event_type',
					EVENT_LOCATION: 'shareable_event_location',
					EVENT_TIME: 'shareable_event_start_time',
					EVENT_WEBSITE: 'shareable_event_website',
					EVENT_NOTES: 'shareable_event_notes',
					EVENT_NAME: 'shareable_event_name',
				};
				var vi = {
					COMMENT_CLICKED: 'COMMENT_CLICKED',
					NOTIFICATION_DISMISSED: 'NOTIFICATION_DISMISSED',
					NOTIFICATION_DISMISS_UNDO_SUCCESS:
						'NOTIFICATION_DISMISS_UNDO_SUCCESS',
					NOTIFICATION_DISMISS_UNDO_FAIL: 'NOTIFICATION_DISMISS_UNDO_FAIL',
				};
				const fi = {
					ADHOC_CHALLENGE_ACCEPTED: () => '',
					ADHOC_CHALLENGE_SUMMARY: (e) => {
						if (
							'undefined' !== typeof e &&
							null !== e &&
							'undefined' !== typeof e.relativeNameValue &&
							null !== e.relativeNameValue &&
							'undefined' !== typeof e.relativeNameValue.from_user_name &&
							null !== e.relativeNameValue.from_user_name &&
							'undefined' !== typeof e.relativeNameValue.format_id &&
							null !== e.relativeNameValue.format_id
						) {
							let t = Number(e.relativeNameValue.format_id) % 5;
							return t <= 1 ? '_single' : `_single_${t}`;
						}
						return '';
					},
				};
				var Di = I().View.extend({
					events: {
						'click .js-select-comment': 'onCommentClicked',
						'click .js-dismiss-button': 'onDismissClicked',
						'click .js-undo-button': 'onUndoClicked',
					},
					initialize: function (e) {
						(this.template = b().template(si())),
							(this.pendingComment = e.pendingComment),
							(this.viewerDisplayName = e.displayName),
							(this.addToList = e.addToList),
							(this.removeFromList = e.removeFromList);
					},
					render: function () {
						this.buildCommentMessage(),
							this.$el.append(
								this.template({
									Localizer: L.A,
									Personalizer: w.A,
									pendingComment: this.pendingComment,
									commentUrl: me.default.url(this.pendingComment.relativeUrl),
								})
							);
					},
					buildCommentMessage: function () {
						this.pendingComment.numberOfDaysAgo = this.formatMessageDate();
						var e = b().escape(
								null !== this.pendingComment.fullName
									? this.pendingComment.fullName
									: this.pendingComment.displayName
							),
							t = b().escape(
								this.pendingComment.relativeNameValue
									? this.pendingComment.relativeNameValue.name
									: null
							),
							i = b().escape(
								this.pendingComment.relativeNameValue
									? this.pendingComment.relativeNameValue.act_name
									: null
							),
							n =
								(b().escape(
									this.pendingComment.relativeNameValue
										? this.pendingComment.relativeNameValue.act_owner_name
										: null
								),
								b().escape(
									this.pendingComment.relativeNameValue
										? this.pendingComment.relativeNameValue.seg_name
										: null
								)),
							a = b().escape(
								this.pendingComment.relativeNameValue
									? this.pendingComment.relativeNameValue.well_owner_name
									: null
							),
							s = b().escape(
								this.pendingComment.relativeNameValue
									? this.pendingComment.relativeNameValue.group_name
									: null
							);
						const r = b().escape(
								this.pendingComment.relativeNameValue
									? this.pendingComment.relativeNameValue.newspost_text
									: null
							),
							o = b().escape(
								this.pendingComment.relativeNameValue
									? this.pendingComment.relativeNameValue.announcement_text
									: null
							);
						var l = b().escape(
								this.pendingComment.relativeNameValue
									? this.pendingComment.relativeNameValue.from_user_name
									: null
							),
							c = b().escape(
								this.pendingComment.relativeNameValue
									? this.pendingComment.relativeNameValue
											.vivokid_team_challenge_name
									: null
							);
						let d = b().escape(
							this.pendingComment.relativeNameValue
								? this.pendingComment.relativeNameValue.comment_text
								: null
						);
						const u = b().escape(
							this.pendingComment.relativeNameValue
								? this.pendingComment.relativeNameValue.event_name
								: null
						);
						var p = this.getMessageFormatEnding(),
							y = this.pendingComment.type,
							h = '/resource/ui/images/segment-notifications.png';
						switch (y) {
							case Si.ALL_ACTIVITY_TYPE_PRIVACY_UPDATE_SUCCESS:
								let _ =
									this.pendingComment.relativeNameValue &&
									this.pendingComment.relativeNameValue.privacy_setting
										? L.A.localize(
												`privacy.${this.pendingComment.relativeNameValue.privacy_setting}.title`
											)
										: '';
								(this.pendingComment.formatComment = L.A.localize(
									'all_past_activities_privacy_update_success',
									_
								)),
									(this.pendingComment.relativeUrl = '#');
								break;
							case Si.ALL_ACTIVITY_TYPE_PRIVACY_UPDATE_FAILURE:
								let E =
									this.pendingComment.relativeNameValue &&
									this.pendingComment.relativeNameValue.privacy_setting
										? L.A.localize(
												`privacy.${this.pendingComment.relativeNameValue.privacy_setting}.title`
											)
										: '';
								(this.pendingComment.formatComment = L.A.localize(
									'all_past_activities_privacy_update_error',
									E
								)),
									(this.pendingComment.relativeUrl =
										'settings/privacySettings?pastActivityPrivacy=true');
								break;
							case Si.ACTIVITY_TYPE_PRIVACY_UPDATE_SUCCESS:
								let T = this.getAllActivitiesNamesList(this.pendingComment);
								(this.pendingComment.formatComment = L.A.localize(
									'specific_past_activities_privacy_update_success',
									T
								)),
									(this.pendingComment.relativeUrl = '#');
								break;
							case Si.ACTIVITY_TYPE_PRIVACY_UPDATE_FAILURE:
								(this.pendingComment.formatComment = L.A.localize(
									'specific_past_activities_privacy_update_error'
								)),
									(this.pendingComment.relativeUrl =
										'settings/privacySettings?pastActivityPrivacy=true');
								break;
							case Si.COMMENTED_ON_USER_SEGMENT:
								(this.pendingComment.formatComment = L.A.localize(
									'segment.comment',
									e
								)),
									(this.pendingComment.relativeUrl = this.buildSegmentUrl(
										this.pendingComment
									));
								break;
							case Si.COMMENTED_ON_USER_ACTIVITY:
								(this.pendingComment.formatComment = d
									? L.A.localize('commented.your.activity.with.comment', e, d)
									: L.A.localize('activity.comment', e)),
									(this.pendingComment.relativeUrl = this.buildActivityUrl(
										this.pendingComment
									));
								break;
							case Si.COMMENTED_ON_USER_DAILYSUMMARY:
								this.pendingComment.formatComment = L.A.localize(
									'daily.summary.comment',
									e
								);
								break;
							case Si.COMMENTED_ON_USER_AUTOCHALLENGE:
								(this.pendingComment.formatComment = L.A.localize(
									'auto.challenge.comment',
									e,
									this.getChallengeName(this.pendingComment)
								)),
									(this.pendingComment.relativeUrl = this.buildAutoChallengeUrl(
										this.pendingComment
									));
								break;
							case Si.COMMENTED_ON_ACTIVITY_THREAD:
								(this.pendingComment.formatComment = i
									? d
										? L.A.localize(
												'also.commented.your.named.activity.with.comment',
												e,
												i,
												d
											)
										: L.A.localize('activity.thread.comment', e, i)
									: L.A.localize('also_commented_on_an_activity', e, d)),
									(this.pendingComment.relativeUrl = this.buildActivityUrl(
										this.pendingComment
									));
								break;
							case Si.ALSO_COMMENTED_ON_USER_SEGMENT:
								(this.pendingComment.formatComment = L.A.localize(
									'segment.thread.comment',
									e,
									n
								)),
									(this.pendingComment.relativeUrl = this.buildSegmentUrl(
										this.pendingComment
									));
								break;
							case Si.ALSO_COMMENTED_ON_USER_DAILYSUMMARY:
								this.pendingComment.formatComment = L.A.localize(
									'daily.summary.thread.comment',
									e,
									a
								);
								break;
							case Si.AUTO_CHALLENGE_WINNER:
								(this.pendingComment.formatComment = L.A.localize(
									'autochallenge.last.week.subject',
									e
								)),
									(this.pendingComment.relativeUrl =
										'/auto-challenge/previous');
								break;
							case Si.LEADERBOARD_EARN_FIRST_PLACE:
								(this.pendingComment.formatComment = L.A.localize(
									'segment.leaderboard_earn_first_place',
									t
								)),
									(this.pendingComment.imageUrl = h),
									(this.pendingComment.relativeUrl = this.buildSegmentUrl(
										this.pendingComment
									));
								break;
							case Si.LEADERBOARD_LOSE_FIRST_PLACE:
								(this.pendingComment.formatComment = L.A.localize(
									'segment.leaderboard_lost_first_place',
									t
								)),
									(this.pendingComment.imageUrl = h),
									(this.pendingComment.relativeUrl = this.buildSegmentUrl(
										this.pendingComment
									));
								break;
							case Si.FAVORITE_SEGMENT_DELETED:
								(this.pendingComment.preventClick = !0),
									(this.pendingComment.formatComment = L.A.localize(
										'segment.favorite_segment_deleted',
										t
									)),
									(this.pendingComment.imageUrl = h),
									(this.pendingComment.relativeUrl = '#');
								break;
							case Si.FAVORITE_SEGMENT_EDITED:
								(this.pendingComment.formatComment = L.A.localize(
									'segment.favorite_segment_edited',
									t
								)),
									(this.pendingComment.imageUrl = h),
									(this.pendingComment.relativeUrl = this.buildSegmentUrl(
										this.pendingComment
									));
								break;
							case Si.GROUP_NEWS_POST:
								(this.pendingComment.formatComment = r
									? L.A.localize('group.create.post.with.text', e, s, r)
									: L.A.localize('group.post', e, s)),
									(this.pendingComment.relativeUrl = this.buildGroupNewsPostUrl(
										this.pendingComment
									));
								break;
							case Si.GROUP_ANNOUNCEMENT:
								(this.pendingComment.formatComment = L.A.localize(
									'new_group_announcement_with_text',
									e,
									s,
									o
								)),
									(this.pendingComment.relativeUrl = `${this.buildGroupUrl(this.pendingComment)}/checkAnnouncement`);
								break;
							case Si.COMMENTED_ON_GROUP_NEWS_POST:
								(this.pendingComment.formatComment = L.A.localize(
									'group.comment.my.post.with.text',
									e,
									s,
									d
								)),
									(this.pendingComment.relativeUrl = this.buildGroupNewsPostUrl(
										this.pendingComment
									));
								break;
							case Si.ALSO_COMMENTED_ON_GROUP_NEWS_POST:
								(this.pendingComment.formatComment = L.A.localize(
									'group.also.comment.on.other.post',
									e,
									s,
									d
								)),
									(this.pendingComment.relativeUrl = this.buildGroupNewsPostUrl(
										this.pendingComment
									));
								break;
							case Si.LIKED_ON_GROUP_POST:
								(this.pendingComment.formatComment = r
									? L.A.localize('liked.your.group.post', e, s, r)
									: L.A.localize('liked_your_post_subject', e, s)),
									(this.pendingComment.relativeUrl = this.buildGroupNewsPostUrl(
										this.pendingComment
									));
								break;
							case Si.LIKED_ON_GROUP_POST_COMMENT:
								(this.pendingComment.formatComment = L.A.localize(
									'liked.your.group.comment',
									e,
									s,
									d
								)),
									(this.pendingComment.relativeUrl = this.buildGroupNewsPostUrl(
										this.pendingComment
									));
								break;
							case Si.COMMENTED_ON_GROUP_ACTIVITY:
								(this.pendingComment.formatComment = L.A.localize(
									'commented.your.group.activity.with.comment',
									e,
									s,
									d
								)),
									(this.pendingComment.relativeUrl = this.buildGroupActivityUrl(
										this.pendingComment
									));
								break;
							case Si.ALSO_COMMENTED_ON_GROUP_ACTIVITY:
								(this.pendingComment.formatComment = i
									? L.A.localize(
											'also.commented.group.named.activity',
											e,
											i,
											s,
											d
										)
									: L.A.localize(
											'also.commented.group.untitled.activity',
											e,
											s,
											d
										)),
									(this.pendingComment.relativeUrl = this.buildGroupActivityUrl(
										this.pendingComment
									));
								break;
							case Si.LIKED_ON_GROUP_ACTIVITY:
								(this.pendingComment.formatComment = L.A.localize(
									'liked.your.group.activity',
									e,
									s
								)),
									(this.pendingComment.relativeUrl = this.buildGroupActivityUrl(
										this.pendingComment
									));
								break;
							case Si.LIKED_ON_GROUP_ACTIVITY_COMMENT:
								(this.pendingComment.formatComment = L.A.localize(
									'liked.your.group.comment',
									e,
									s,
									d
								)),
									(this.pendingComment.relativeUrl = this.buildGroupActivityUrl(
										this.pendingComment
									));
								break;
							case Si.CONNECTION_REQUEST_ACCEPTED:
								(this.pendingComment.formatComment = L.A.localize(
									'is_your_connection',
									e
								)),
									(this.pendingComment.relativeUrl = this.buildUserProfileUrl(
										this.pendingComment
									));
								break;
							case Si.LIKED_ON_ACTIVITY:
								let C = i || L.A.localize('untitled');
								(this.pendingComment.formatComment = L.A.localize(
									'liked.your.named.activity',
									e,
									C
								)),
									(this.pendingComment.relativeUrl = this.buildActivityUrl(
										this.pendingComment
									));
								break;
							case Si.LIKED_ON_ACTIVITY_COMMENT:
								(this.pendingComment.formatComment = L.A.localize(
									'liked.your.comment.with.content',
									e,
									d
								)),
									(this.pendingComment.relativeUrl = this.buildActivityUrl(
										this.pendingComment
									));
								break;
							case Si.TAGGED_ON_ACTIVITY_COMMENT:
								(this.pendingComment.formatComment = L.A.localize(
									'tagged_you_in_comment',
									e,
									d
								)),
									(this.pendingComment.relativeUrl = this.buildActivityUrl(
										this.pendingComment
									));
								break;
							case Si.GROUP_INVITE_ACCEPTED:
								(this.pendingComment.formatComment = L.A.localize(
									'group.invite.accepted',
									e,
									s
								)),
									(this.pendingComment.relativeUrl = this.buildGroupUrl(
										this.pendingComment
									));
								break;
							case Si.PRIVATE_GROUP_REQUEST_ACCEPTED:
								(this.pendingComment.formatComment = L.A.localize(
									'group.admin.accepted.2',
									e,
									s
								)),
									(this.pendingComment.relativeUrl = this.buildGroupUrl(
										this.pendingComment
									));
								break;
							case Si.INACTIVE_ACTIVITY_TRACKER_USED:
								var g = L.A.localize('devices.link');
								(g = "<a class='colored' href='/devices'>" + g + '</a>'),
									(this.pendingComment.formatComment = L.A.localize(
										'activity.tracker.data.not.synced.message',
										this.getDeviceName(this.pendingComment),
										g
									)),
									(this.pendingComment.relativeUrl = '/devices');
								break;
							case Si.GEAR_MAX_DISTANCE:
								(this.pendingComment.formatComment = L.A.localize(
									'gear.max.distance.met.email.subject',
									this.getGearName(this.pendingComment)
								)),
									(this.pendingComment.relativeUrl = '/gear');
								break;
							case Si.GROUP_CHALLENGE_CREATED:
								(this.pendingComment.formatComment = L.A.localize(
									'group.challenge.created',
									s,
									this.getGroupChallengeName(),
									this.getGroupChallengeStartDate()
								)),
									(this.pendingComment.relativeUrl =
										this.getGroupChallengeUrl());
								break;
							case Si.GROUP_CHALLENGE_START:
								(this.pendingComment.formatComment = L.A.localize(
									'group.challenge.start',
									s,
									this.getGroupChallengeName()
								)),
									(this.pendingComment.relativeUrl =
										this.getGroupChallengeUrl());
								break;
							case Si.GROUP_CHALLENGE_OVER:
								(this.pendingComment.formatComment = L.A.localize(
									'group.challenge.over',
									this.getRank(),
									s,
									this.getGroupChallengeName()
								)),
									(this.pendingComment.relativeUrl =
										this.getGroupChallengeUrl());
								break;
							case Si.GROUP_CHALLENGE_BADGE:
								(this.pendingComment.formatComment = L.A.localize(
									'group.challenge.badge',
									this.getRank(),
									s,
									this.getGroupChallengeName()
								)),
									(this.pendingComment.relativeUrl = '/badges');
								break;
							case Si.WEIGHT_SCALE_REMOVED:
								const S = (m = this.getDeviceName(this.pendingComment))
									? 'device.has.removed.notification'
									: 'weight.scale.has.removed.notification';
								(this.pendingComment.formatComment = L.A.localize(S, e, m)),
									(this.pendingComment.relativeUrl = '/devices');
								break;
							case Si.WEIGHT_SCALE_MAX_USER:
								var m = this.getDeviceName(this.pendingComment),
									A = this.buildDeviceUrl(this.pendingComment);
								(this.pendingComment.formatComment = m
									? L.A.localize('device.max.user.notification', e, m, A)
									: L.A.localize('weight.scale.max.user.notification', e, A)),
									(this.pendingComment.relativeUrl = A);
								break;
							case Si.DEVICE_REMOVED:
								(this.pendingComment.formatComment = L.A.localize(
									'device.has.removed.notification',
									e,
									this.getDeviceName(this.pendingComment)
								)),
									(this.pendingComment.relativeUrl = '/devices');
								break;
							case Si.DEVICE_MAX_USER:
								A = this.buildDeviceUrl(this.pendingComment);
								(this.pendingComment.formatComment = L.A.localize(
									'device.max.user.notification',
									e,
									this.getDeviceName(this.pendingComment),
									A
								)),
									(this.pendingComment.relativeUrl = A);
								break;
							case Si.SHAREABLE_DEVICE_ACCEPT:
								A = this.buildDeviceUrl(this.pendingComment) + '/users';
								(this.pendingComment.formatComment = L.A.localize(
									'invitation_to_device_accepted_notification',
									e,
									this.getDeviceName(this.pendingComment)
								)),
									(this.pendingComment.relativeUrl = A);
								break;
							case Si.ADHOC_CHALLENGE_ACCEPTED:
								(this.pendingComment.relativeUrl = this.getChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_accepted_format' + p,
										l
									));
								break;
							case Si.ADHOC_CHALLENGE_DECLINED:
								(this.pendingComment.relativeUrl = this.getChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_declined_format' + p,
										l
									));
								break;
							case Si.ADHOC_CHALLENGE_START:
								(this.pendingComment.relativeUrl = this.getChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_start_format' + p
									));
								break;
							case Si.VVFJR_ADHOC_CHALLENGE_START:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_start_format' + p
									));
								break;
							case Si.ADHOC_CHALLENGE_INVITE_WILL_EXPIRE:
								(this.pendingComment.relativeUrl = this.getChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_invite_will_expire_format' + p,
										l
									));
								break;
							case Si.VVFJR_CHALLENGE_INVITE_WILL_EXPIRE:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_invite_will_expire_format' + p,
										l
									));
								break;
							case Si.ADHOC_CHALLENGE_START_TOMORROW:
								(this.pendingComment.relativeUrl = this.getChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_start_tomorrow_format' + p
									));
								break;
							case Si.VVFJR_ADHOC_CHALLENGE_START_TOMORROW:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_start_tomorrow_format' + p
									));
								break;
							case Si.ADHOC_CHALLENGE_SUMMARY:
								(this.pendingComment.relativeUrl = this.getChallengeUrl()),
									'undefined' !==
										typeof this.pendingComment.relativeNameValue &&
									null !== this.pendingComment.relativeNameValue &&
									'undefined' !==
										typeof this.pendingComment.relativeNameValue
											.from_user_name &&
									null !==
										this.pendingComment.relativeNameValue.from_user_name &&
									'undefined' !==
										typeof this.pendingComment.relativeNameValue.format_id &&
									null !== this.pendingComment.relativeNameValue.format_id
										? (this.pendingComment.formatComment = L.A.localize(
												'pn_adhoc_challenge_summary_format' + p,
												this.pendingComment.relativeNameValue.from_user_name
											))
										: (this.pendingComment.formatComment = L.A.localize(
												'pn_adhoc_challenge_summary_format' + p
											));
								break;
							case Si.CHALLENGE_RANKING_UP:
								this.pendingComment.relativeUrl = this.getChallengeUrl();
								t = b().escape(
									this.pendingComment.relativeNameValue
										? this.pendingComment.relativeNameValue.name
										: null
								);
								this.pendingComment.formatComment = L.A.localize(
									'pn_adhoc_challenge_rank_up_format' + p,
									t
								);
								break;
							case Si.CHALLENGE_RANKING_TAKEN:
								this.pendingComment.relativeUrl = this.getChallengeUrl();
								t = b().escape(
									this.pendingComment.relativeNameValue
										? this.pendingComment.relativeNameValue.name
										: null
								);
								this.pendingComment.formatComment = L.A.localize(
									'pn_adhoc_challenge_rank_taken_format' + p,
									t
								);
								break;
							case Si.CHALLENGE_RANKING_DOWN:
								this.pendingComment.relativeUrl = this.getChallengeUrl();
								t = b().escape(
									this.pendingComment.relativeNameValue
										? this.pendingComment.relativeNameValue.name
										: null
								);
								this.pendingComment.formatComment = L.A.localize(
									'pn_adhoc_challenge_rank_down_format' + p,
									t
								);
								break;
							case Si.ADHOC_CHALLENGE_ENDING_SOON:
								(this.pendingComment.relativeUrl = this.getChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_ending_soon_format' + p
									));
								break;
							case Si.VVFJR_CHALLENGE_ENDING_SOON:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_ending_soon_format' + p
									));
								break;
							case Si.ADHOC_CHALLENGE_ENDED:
								(this.pendingComment.relativeUrl = this.getChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_ended_format' + p
									));
								break;
							case Si.VVFJR_CHALLENGE_END:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_ended_format' + p
									));
								break;
							case Si.ADHOC_CHALLENGE_FIRST_PLACE:
								(this.pendingComment.relativeUrl = this.getChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_first_place_format' + p
									));
								break;
							case Si.VVFJR_ADHOC_CHALLENGE_FIRST_PLACE:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_first_place_format' + p
									));
								break;
							case Si.ADHOC_CHALLENGE_NOT_FIRST_PLACE:
								(this.pendingComment.relativeUrl = this.getChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_not_first_place_format' + p
									));
								break;
							case Si.VVFJR_CHALLENGE_NOT_FIRST_PLACE:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_not_first_place_format' + p
									));
								break;
							case Si.ADHOC_CHALLENGE_ALTERNATE_PRIZE:
								(this.pendingComment.relativeUrl = this.getChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_alternate_prize_format' + p
									));
								break;
							case Si.COMMENTED_ON_ADHOC_CHALLENGE:
								(this.pendingComment.relativeUrl = this.getChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_commented_on_adhoc_challenge',
										e
									));
								break;
							case Si.VVFJR_COMMENTED_ON_CHALLENGE:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_commented_on_adhoc_challenge',
										e
									));
								break;
							case Si.VVFJR_TEAM_CHALLENGE_ACCEPTED:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrTeamStepsChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_accepted_format' + p,
										l
									));
								break;
							case Si.VVFJR_TEAM_CHALLENGE_DECLINED:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrTeamStepsChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_declined_format' + p,
										l
									));
								break;
							case Si.VVFJR_TEAM_CHALLENGE_START:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrTeamStepsChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_start_format' + p
									));
								break;
							case Si.VVFJR_TEAM_CHALLENGE_INVITE_WILL_EXPIRE:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrTeamStepsChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_invite_will_expire_format' + p,
										l
									));
								break;
							case Si.VVFJR_TEAM_CHALLENGE_START_TOMORROW:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrTeamStepsChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_start_tomorrow_format' + p
									));
								break;
							case Si.VVFJR_TEAM_CHALLENGE_SUMMARY:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrTeamStepsChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_summary_format' + p
									));
								break;
							case Si.VVFJR_TEAM_CHALLENGE_ENDING_SOON:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrTeamStepsChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_ending_soon_format' + p
									));
								break;
							case Si.VVFJR_TEAM_CHALLENGE_ENDED:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrTeamStepsChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_ended_format' + p
									));
								break;
							case Si.VVFJR_TEAM_CHALLENGE_FIRST_PLACE:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrTeamStepsChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_first_place_format' + p
									));
								break;
							case Si.VVFJR_TEAM_CHALLENGE_NOT_FIRST_PLACE:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrTeamStepsChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_not_first_place_format' + p
									));
								break;
							case Si.VVFJR_TEAM_CHALLENGE_ALTERNATE_PRIZE:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrTeamStepsChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_adhoc_challenge_alternate_prize_format' + p
									));
								break;
							case Si.VVFJR_COMMENTED_ON_TEAM_CHALLENGE:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrTeamStepsChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'pn_commented_on_adhoc_challenge',
										e
									));
								break;
							case Si.VVFJR_TEAM_CHALLENGE_END:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrTeamStepsChallengeUrl()),
									(this.pendingComment.formatComment =
										this.pendingComment.formatComment =
											L.A.localize('pn_adhoc_challenge_ended_format' + p));
								break;
							case Si.VVFJR_TEAM_CHALLENGE_ENDS_IN_A_TIE:
								(this.pendingComment.relativeUrl =
									this.getVivofitjrTeamStepsChallengeUrl()),
									(this.pendingComment.formatComment = L.A.localize(
										'vivo_jr_tean_challenge_ended_as_tie',
										c
									));
								break;
							case Si.SHAREABLE_EVENT_DELETED:
								(this.pendingComment.formatComment = L.A.localize(
									'shareable_event_deleted',
									u
								)),
									(this.pendingComment.relativeUrl = '/calendar');
								break;
							case Si.SHAREABLE_EVENT_UPDATED:
								if (this.pendingComment.relativeNameValue) {
									const e =
										this.pendingComment.relativeNameValue.shareable_event_uuid;
									this.pendingComment.relativeUrl = `/calendar?shareableEventUuid=${e}`;
									if (
										this.pendingComment.relativeNameValue.modified_fields.indexOf(
											','
										) > -1
									)
										this.pendingComment.formatComment = L.A.localize(
											'shareable_event_updated_multiple',
											u
										);
									else if (
										'COMPLETION_TARGET' ===
										this.pendingComment.relativeNameValue.modified_fields
									)
										this.pendingComment.formatComment = L.A.localize(
											'shareable_event_updated_completion_target',
											u
										);
									else {
										const e = L.A.localize(
											Ii[this.pendingComment.relativeNameValue.modified_fields]
										);
										this.pendingComment.formatComment = L.A.localize(
											'shareable_event_updated_single',
											e,
											u
										);
									}
								} else this.pendingComment.relativeUrl = '/calendar';
								break;
							case Si.SHAREABLE_EVENT_COURSE_UPDATED:
								if (
									((this.pendingComment.formatComment = L.A.localize(
										'shareable_event_course_updated',
										u
									)),
									this.pendingComment.relativeNameValue)
								) {
									const e =
										this.pendingComment.relativeNameValue.shareable_event_uuid;
									this.pendingComment.relativeUrl = `/calendar?shareableEventUuid=${e}`;
								} else this.pendingComment.relativeUrl = '/calendar';
								break;
							case Si.SHAREABLE_EVENT_PACEPRO_RECREATE:
								if (
									((this.pendingComment.formatComment = L.A.localize(
										'shareable_event_pacepro_updated',
										u
									)),
									this.pendingComment.relativeNameValue)
								) {
									const e =
										this.pendingComment.relativeNameValue.shareable_event_uuid;
									this.pendingComment.relativeUrl = `/calendar?shareableEventUuid=${e}`;
								} else this.pendingComment.relativeUrl = '/calendar';
								break;
							case Si.SHAREABLE_EVENT_POWERGUIDE_RECREATE:
								if (
									((this.pendingComment.formatComment = L.A.localize(
										'shareable_event_power_guide_updated',
										u
									)),
									this.pendingComment.relativeNameValue)
								) {
									const e =
										this.pendingComment.relativeNameValue.shareable_event_uuid;
									this.pendingComment.relativeUrl = `/calendar?shareableEventUuid=${e}`;
								} else this.pendingComment.relativeUrl = '/calendar';
								break;
							case Si.SHAREABLE_EVENT_POWERGUIDE_REMOVED:
								if (
									((this.pendingComment.formatComment = L.A.localize(
										'shareable_event_power_guide_updated_notification',
										u
									)),
									this.pendingComment.relativeNameValue)
								) {
									const e =
										this.pendingComment.relativeNameValue.shareable_event_uuid;
									this.pendingComment.relativeUrl = `/calendar?shareableEventUuid=${e}`;
								} else this.pendingComment.relativeUrl = '/calendar';
								break;
							case Si.SHAREABLE_EVENT_PACEPRO_REMOVED:
								if (
									((this.pendingComment.formatComment = L.A.localize(
										'shareable_event_pacepro_updated_notification',
										u
									)),
									this.pendingComment.relativeNameValue)
								) {
									const e =
										this.pendingComment.relativeNameValue.shareable_event_uuid;
									this.pendingComment.relativeUrl = `/calendar?shareableEventUuid=${e}`;
								} else this.pendingComment.relativeUrl = '/calendar';
								break;
							default:
								console &&
									console.log &&
									console.log('Unexpected notification type: ' + y);
						}
					},
					getMessageFormatEnding: function () {
						if (fi.hasOwnProperty(this.pendingComment.type))
							return fi[this.pendingComment.type](this.pendingComment);
						const e = Ci(this.pendingComment);
						if (e) return e;
						var t = b().escape(
							this.pendingComment.relativeNameValue
								? this.pendingComment.relativeNameValue.from_user_name
								: null
						);
						return t && t > 1 ? '_' + t : '';
					},
					getChallengeUrl: function () {
						var e = b().escape(
							this.pendingComment.relativeNameValue
								? this.pendingComment.relativeNameValue.challenge_uuid
								: null
						);
						return (
							e ||
								(e = b().escape(
									this.pendingComment.relativeNameValue
										? this.pendingComment.relativeNameValue.adhoc_challenge_uuid
										: null
								)),
							'/adhoc-challenge/' + e
						);
					},
					getAllActivitiesNamesList: function (e) {
						let t = '';
						if (
							e.relativeNameValue &&
							Object.keys(e.relativeNameValue).length
						) {
							let i = Object.keys(e.relativeNameValue);
							i.forEach((n, a) => {
								let s = e.relativeNameValue[n];
								0 === a
									? (t = L.A.localize(`activity_type_${s}`))
									: a < i.length - 1
										? (t += ', ' + L.A.localize(`activity_type_${s}`))
										: a === i.length - 1 &&
											(t +=
												` ${L.A.localize('and_separator')} ` +
												L.A.localize(`activity_type_${s}`));
							});
						}
						return t;
					},
					getVivofitjrChallengeUrl: function () {
						var e = b().escape(
							this.pendingComment.relativeNameValue
								? this.pendingComment.relativeNameValue.challenge_uuid
								: null
						);
						return (
							e ||
								(e = b().escape(
									this.pendingComment.relativeNameValue
										? this.pendingComment.relativeNameValue
												.vivokid_adhoc_challenge_uuid
										: null
								)),
							'/vivofitjr-challenge/' + e
						);
					},
					getVivofitjrTeamStepsChallengeUrl: function () {
						var e = b().escape(
							this.pendingComment.relativeNameValue
								? this.pendingComment.relativeNameValue
										.vivokid_team_challenge_uuid
								: null
						);
						return (
							e ||
								(e = b().escape(
									this.pendingComment.relativeNameValue
										? this.pendingComment.relativeNameValue
												.vivokid_adhoc_challenge_uuid
										: null
								)),
							'/vivofitjr-teamchallenge/' + e
						);
					},
					getGroupChallengeUrl: function () {
						var e = this.pendingComment.relativeNameValue
								? this.pendingComment.relativeNameValue.challengeId
								: null,
							t = '/challenge';
						return e && (t += '/' + e), t;
					},
					getRank: function () {
						var e = this.pendingComment.relativeNameValue
							? this.pendingComment.relativeNameValue.rank
							: null;
						return ni.A.getFormattedRanking(e);
					},
					formatMessageDate: function () {
						var e = bt.A.parseISOUTC(this.pendingComment.dateTimeString);
						return l.Ay.formatRelativeTime(e);
					},
					buildUserProfileUrl: function (e) {
						var t = null,
							i = e.displayName;
						return i && (t = '/profile/' + i), t;
					},
					buildSegmentUrl: function (e) {
						var t = null,
							i = e.relativeNameValue;
						return i && i.segment && (t = '/segment/' + i.segment), t;
					},
					buildActivityUrl: function (e) {
						var t = null,
							i = e.relativeNameValue;
						return (
							i && i.group
								? (t = '/group/' + i.group)
								: i &&
									i.activity &&
									((t = '/activity/' + i.activity),
									i.comment_uuid && (t += `?focusCommentId=${i.comment_uuid}`)),
							t
						);
					},
					buildAutoChallengeUrl: function (e) {
						var t = '/auto-challenge',
							i = e.relativeNameValue;
						return i && i.chall_period && (t = '/auto-challenge/previous'), t;
					},
					buildGroupUrl: function (e) {
						var t = null,
							i = e.relativeNameValue;
						return i && i.group && (t = '/group/' + i.group), t;
					},
					buildDeviceUrl: function (e) {
						var t = null,
							i = e.relativeNameValue;
						return i && i.device && (t = '/device/' + i.device), t;
					},
					buildGroupNewsPostUrl: function (e) {
						var t = null,
							i = e.relativeNameValue;
						return (
							i &&
								i.group &&
								i.newspost &&
								(t = '/group/' + i.group + '/newspost/' + i.newspost),
							i &&
								i.comment_uuid &&
								(t += '/comment/' + i.comment_uuid.toUpperCase()),
							t
						);
					},
					buildGroupActivityUrl: function (e) {
						var t = null,
							i = e.relativeNameValue;
						return (
							i &&
								i.activity &&
								(t = '/group/' + i.group + '/activity/' + i.activity),
							i &&
								i.comment_uuid &&
								(t += '/comment/' + i.comment_uuid.toUpperCase()),
							t
						);
					},
					buildGearUrl: function (e) {
						var t = '/gear',
							i = e.relativeNameValue;
						return i && i.gear_type && (t += '/' + i.gear_type), t;
					},
					getChallengeName: function (e) {
						var t = e.relativeNameValue;
						if (t && t.chall_level) {
							var i = t.chall_level;
							return 0 == t.chall_steps
								? L.A.localize('challenge_' + i)
								: L.A.localize('challenge_level', i);
						}
						return '';
					},
					getDeviceName: function (e) {
						return b().escape(
							e.relativeNameValue ? e.relativeNameValue.device_name : null
						);
					},
					getGearName: function (e) {
						return b().escape(
							e.relativeNameValue ? e.relativeNameValue.gear_name : null
						);
					},
					getGroupChallengeTypeKey: function () {
						var e = null;
						switch (
							b().escape(
								this.pendingComment.relativeNameValue
									? this.pendingComment.relativeNameValue.group_challenge_type
									: null
							)
						) {
							case '0':
								e = 'group.challenge.most.walking.distance';
								break;
							case '1':
								e = 'group.challenge.most.running.distance';
								break;
							case '2':
								e = 'group.challenge.most.cycling.distance';
								break;
							case '3':
								e = 'group.challenge.most.swimming.distance';
								break;
							case '4':
								e = 'group.challenge.most.steps.count';
								break;
							case '5':
								e = 'group.challenge.most.steps.distance';
								break;
							case '6':
								e = 'group.challenge.most.calories.burned';
								break;
							default:
								e = null;
						}
						return e;
					},
					getGroupChallengeMonthKey: function () {
						var e = b().escape(
								this.pendingComment.relativeNameValue
									? this.pendingComment.relativeNameValue.start_time_gmt
									: null
							),
							t = new Date(Number(e)).getMonth();
						return t <= 9 && (t = '0' + t), 'month.' + t;
					},
					getGroupChallengeStartDate: function () {
						var e = b().escape(
								this.pendingComment.relativeNameValue
									? this.pendingComment.relativeNameValue.start_time_gmt
									: null
							),
							t = new Date(Number(e));
						return l.Ay.formatDate(t);
					},
					getGroupChallengeName: function () {
						return b().escape(
							this.pendingComment.relativeNameValue
								? this.pendingComment.relativeNameValue.group_challenge_name
								: null
						);
					},
					onCommentClicked: function (e) {
						this.pendingComment.relativeUrl &&
							(this.trigger(vi.COMMENT_CLICKED),
							me.default.navigate(this.pendingComment.relativeUrl, e));
					},
					onDismissClicked: function (e) {
						e.preventDefault(),
							new je({
								notificationId: this.pendingComment.notificationId,
							}).save(
								{ dismiss: !0 },
								{
									type: 'PUT',
									parse: !1,
									success: () => {
										this.trigger(vi.NOTIFICATION_DISMISS_UNDO_SUCCESS);
									},
									error: () => {
										this.$('.undo-section').fadeOut(),
											clearTimeout(this.dismissTimer),
											(this.dismissTimer = null),
											this.trigger(vi.NOTIFICATION_DISMISS_UNDO_FAIL);
									},
								}
							),
							this.$('.undo-section').fadeIn();
						(this.dismissTimer = setTimeout(() => {
							this.$el.addClass('fadeOut').delay(600).slideUp(),
								this.trigger(
									vi.NOTIFICATION_DISMISSED,
									this.pendingComment.notificationId
								),
								this.removeFromList(this.pendingComment.notificationId);
						}, 5e3)),
							this.addToList(this.pendingComment.notificationId, () =>
								this.clearTimerAndExecute()
							);
					},
					clearTimerAndExecute: function () {
						this.dismissTimer &&
							(clearTimeout(this.dismissTimer),
							(this.dismissTimer = null),
							this.$el.slideUp(),
							this.trigger(
								vi.NOTIFICATION_DISMISSED,
								this.pendingComment.notificationId
							));
					},
					onUndoClicked: function (e) {
						e.preventDefault(),
							this.$('.undo-section').fadeOut(),
							clearTimeout(this.dismissTimer),
							(this.dismissTimer = null),
							new je({
								notificationId: this.pendingComment.notificationId,
							}).save(
								{ dismiss: !1 },
								{
									type: 'PUT',
									parse: !1,
									success: () => {
										this.trigger(vi.NOTIFICATION_DISMISS_UNDO_SUCCESS);
									},
									error: () => {
										this.trigger(vi.NOTIFICATION_DISMISS_UNDO_FAIL);
									},
								}
							),
							this.removeFromList(this.pendingComment.notificationId);
					},
				});
				Di.Events = vi;
				const Ni = Di;
				var Ri = i(52846),
					bi = i.n(Ri);
				const Li = I().View.extend({
					initialize: function (e) {
						(this.template = b().template(bi())),
							(this.isVivokidChallenge = e.isVivokidChallenge);
					},
					render: function () {
						var e = this.template({
							Localizer: L.A,
							isVivokidChallenge: this.isVivokidChallenge || !1,
						});
						this.$el.html(e);
					},
				});
				var Pi = i(421285),
					Oi = i(152059),
					wi = i(874118),
					Fi = i.n(wi),
					ki = i(309507);
				const Ui = 3,
					Mi = 4;
				var Gi = { ON_NAVIGATION: 'ON_NAVIGATION' };
				const xi = I().View.extend({
					events: {
						'click .js-accept-btn': 'onConfirmButtonClicked',
						'click .js-decline-btn': 'onIgnoreButtonClicked',
						'click .js-challenge-link': 'gotoChallenge',
						'click .js-select-user': 'onUserClicked',
						'click .js-notification-privacy': 'onPrivacyClicked',
					},
					initialize: function (e) {
						switch (
							((this.template = b().template(Fi())),
							(this.inboxRequest = e.inboxRequest),
							(this.isVivokidChallenge = !1),
							(this.isTeamStepVivokidChallenge = !1),
							this.inboxRequest.challengeTypeId)
						) {
							case Ui:
								this.isVivokidChallenge = !0;
								break;
							case Mi:
								this.isTeamStepVivokidChallenge = !0;
						}
					},
					render: function () {
						const e = this.inboxRequest.invitorImageUrl || Tt.Mg,
							t = this.inboxRequest.challengeName,
							i =
								this.inboxRequest.invitorName ||
								this.inboxRequest.invitorDisplayName,
							n = me.default.url(
								'/profile/' + this.inboxRequest.invitorDisplayName
							);
						let a = '';
						switch (this.inboxRequest.challengeTypeId) {
							case Ui:
								a = me.default.url(
									`/vivofitjr-challenge/${this.inboxRequest.challengeUuid}`
								);
								break;
							case Mi:
								a = me.default.url(
									`/vivofitjr-teamchallenge/${this.inboxRequest.challengeUuid}`
								);
								break;
							default:
								a = me.default.url(
									`/adhoc-challenge/${this.inboxRequest.challengeUuid}`
								);
						}
						var s = L.A.localize(
							'pn_adhoc_challenge_invited_format',
							i,
							t,
							n,
							a
						);
						const r =
							this.inboxRequest.inviteDate &&
							l.Ay.formatRelativeTime(
								bt.A.parseISOUTC(this.inboxRequest.inviteDate)
							);
						this.$el.html(
							this.template({
								profileUrl: n,
								picture: e,
								message: s,
								challengeName: t,
								ownerName: i,
								acceptButtonText: L.A.localize('accept'),
								declineButtonText: L.A.localize('request_delete'),
								challengeIgnoredMessage: L.A.localize('request.deleted'),
								challengeAcceptedMessage: L.A.localize('request.accepted'),
								privacyText: L.A.localize('privacy'),
								challengeType: this.challengeType,
								timeStamp: r,
							})
						);
					},
					onConfirmButtonClicked: function (e) {
						e.preventDefault(),
							ki.A.handleGdprUploadConsent(
								this.joinChallengeCallback.bind(this),
								!0
							);
					},
					joinChallengeCallback: function () {
						this.isVivokidChallenge
							? ((this.vivokidChallengeConsent = new Oi.A({
									inviteId: this.inboxRequest.challengeInviteId,
									scope: 'accept',
								})),
								this.enableMessages(!0),
								this.vivokidChallengeConsent.save({}, { type: 'PUT' }))
							: this.isTeamStepVivokidChallenge
								? ((this.vivokidChallengeConsent = new Oi.A({
										inviteId: this.inboxRequest.challengeInviteId,
										isVivoKidTeamStepChallenge: this.isTeamStepVivokidChallenge,
										scope: 'accept',
									})),
									this.enableMessages(!0),
									this.vivokidChallengeConsent.save({}, { type: 'PUT' }))
								: ((this.adhocChallengeConsent = new Pi.A({
										inviteId: this.inboxRequest.challengeInviteId,
										scope: 'accept',
									})),
									this.enableMessages(!0),
									this.adhocChallengeConsent.save({}, { type: 'PUT' }));
					},
					onIgnoreButtonClicked: function (e) {
						e.preventDefault();
						(this.modalConfirmationView = new Mt.A({
							modalTitle: L.A.localize('decline_invite'),
							message: L.A.localize(
								'are_you_sure_you_want_to_decline_challenge'
							),
							htmlFormat: !0,
							confirmationTextKey: 'weight.scale.decline.button',
							cancelTextKey: 'button_cancel',
							onSaveButtonClicked: this.declineChallenge.bind(this),
						})),
							this.modalConfirmationView.render();
					},
					declineChallenge: function () {
						this.modalConfirmationView.close(),
							this.isVivokidChallenge
								? ((this.vivokidChallengeConsent = new Oi.A({
										inviteId: this.inboxRequest.challengeInviteId,
										scope: 'decline',
									})),
									this.enableMessages(!1),
									this.vivokidChallengeConsent.save({}, { type: 'PUT' }))
								: this.isTeamStepVivokidChallenge
									? ((this.vivokidChallengeConsent = new Oi.A({
											inviteId: this.inboxRequest.challengeInviteId,
											isVivoKidTeamStepChallenge:
												this.isTeamStepVivokidChallenge,
											scope: 'decline',
										})),
										this.enableMessages(!1),
										this.vivokidChallengeConsent.save({}, { type: 'PUT' }))
									: ((this.adhocChallengeConsent = new Pi.A({
											inviteId: this.inboxRequest.challengeInviteId,
											scope: 'decline',
										})),
										this.enableMessages(!1),
										this.adhocChallengeConsent.save({}, { type: 'PUT' }));
					},
					onUserClicked: function (e) {
						var t = '/profile/' + this.inboxRequest.invitorDisplayName;
						this.trigger(Gi.ON_NAVIGATION), me.default.navigate(t, e);
					},
					gotoChallenge: function (e) {
						var t, i;
						this.isVivokidChallenge
							? (i = this.inboxRequest.challengeUuid) &&
								((t = '/vivofitjr-challenge/' + i),
								this.trigger(Gi.ON_NAVIGATION),
								me.default.navigate(t, e))
							: this.isTeamStepVivokidChallenge
								? (i = this.inboxRequest.challengeUuid) &&
									((t = '/vivofitjr-teamchallenge/' + i),
									this.trigger(Gi.ON_NAVIGATION),
									me.default.navigate(t, e))
								: (i = this.inboxRequest.challengeUuid) &&
									((t = '/adhoc-challenge/' + i),
									this.trigger(Gi.ON_NAVIGATION),
									me.default.navigate(t, e));
					},
					enableMessages: function (e) {
						e
							? (this.$('.js-confirm-msg').show(),
								this.$('.js-ignore-msg').hide())
							: (this.$('.js-confirm-msg').hide(),
								this.$('.js-ignore-msg').show()),
							this.$('.js-accept-btn').hide(),
							this.$('.js-decline-btn').hide();
					},
					onPrivacyClicked: function () {
						var e = new Li({ isVivokidChallenge: this.isVivokidChallenge });
						new Ut.A({
							view: e,
							showFooter: !1,
							modalTitle: L.A.localize('challenge_privacy'),
						}).render();
					},
				});
				xi.Events = Gi;
				const Bi = xi;
				var Hi = i(878076),
					Vi = i.n(Hi);
				const Wi = I().View.extend({
					events: {},
					initialize: function (e) {
						(this.template = b().template(Vi())),
							(this.inboxRequestCount = e.inboxRequestCount);
					},
					render: function () {
						const e = L.A.localize('see_all_requests'),
							t = L.A.localize(
								'you_have_n_requests',
								this.inboxRequestCount.get('requestCount')
							),
							i = me.default.url('/inbox'),
							{ unread: n, imageUrls: a } = this.getUnreadStatusAndImageUrls();
						this.$el.html(
							this.template({
								i18nSeeAllRequests: e,
								i18nYouHaveNRequests: t,
								imageUrls: a,
								inboxUrl: i,
							})
						),
							n && this.$('.request-item.inbox-link').addClass('unread');
					},
					getUnreadStatusAndImageUrls: function () {
						let e = !1;
						const t = this.inboxRequestCount.toJSON().requests.map((t) => {
							switch (((e = e || !t.data.requestViewed), t.requestKey)) {
								case at:
									return t.data.profileImageUrlMedium || Tt.Mg;
								case st:
								case rt:
									return t.data.profileImageUrlSmall || Tt.Un;
								case ot:
								case lt:
								case ct:
									return t.data.invitorImageUrl || Tt.Mg;
								case dt:
									return t.data.invitorProfilePicURL || Tt.Mg;
							}
						});
						return { unread: e, imageUrls: t };
					},
				});
				var Ji = i(950772),
					Yi = i(363099),
					$i = i(994844),
					ji = i.n($i),
					Ki = i(82040),
					zi = i(483796),
					qi = i(211794),
					Qi = i(316550);
				var Xi = i(462026),
					Zi = i(135988),
					en = i(15351),
					tn = i(698848),
					nn = i(617592),
					an = i(435687),
					sn = i(547052),
					rn = i(80879),
					on = i(698164),
					ln = i(874523),
					cn = {};
				(cn.styleTagTransform = Ai()),
					(cn.setAttributes = yi()),
					(cn.insert = ui().bind(null, 'head')),
					(cn.domAPI = ci()),
					(cn.insertStyleElement = gi());
				oi()(ln.A, cn);
				const dn = ln.A && ln.A.locals ? ln.A.locals : void 0,
					un = {
						showModal: Xi.toY,
						setBadgesPageView: qi.Ri,
						requestBadgeAttributes: qi.a4,
						dismissNotification: function (e) {
							return { type: Qi.pJP, payload: e };
						},
					},
					pn = 'BADGE_START_SINGLE',
					yn = 'BADGE_START',
					hn = 'BADGE_START_TODAY_ONLY_SINGLE',
					gn = 'BADGE_START_TODAY_ONLY',
					mn = 'BADGE_EXPIRE_SINGLE',
					An = 'BADGE_EXPIRE',
					_n = 'BADGE_EARNED_SINGLE',
					En = 'BADGE_EARNED',
					Tn = 'BADGE_LEVEL_UP',
					Cn = 'PARTNER_REWARD_EARNED';
				class Sn extends c.Component {
					constructor(e) {
						super(e),
							(this.dismissRef = c.createRef()),
							(this.undoRef = c.createRef()),
							(this.state = { showUndo: !1 });
					}
					componentDidMount() {
						const {
							badgesAttributes: e,
							displayName: t,
							requestBadgeAttributes: i,
						} = this.props;
						this.badgeNotification.addEventListener(
							'click',
							this.onBadgeNotificationClick.bind(this)
						),
							this.dismissRef.current &&
								this.dismissRef.current.addEventListener(
									'click',
									this.onDismissClick.bind(this)
								),
							this.undoRef.current &&
								this.undoRef.current.addEventListener(
									'click',
									this.onUndoClick.bind(this)
								),
							e.data || i(t);
					}
					componentDidUpdate(e) {
						const {
							notificationDismissSuccess: t,
							notificationDismissFail: i,
							onError: n,
							onResetError: a,
						} = this.props;
						e.notificationDismissSuccess !== t && t && a(),
							e.notificationDismissFail !== i &&
								i &&
								(n(),
								clearTimeout(this.dismissTimer),
								(this.dismissTimer = null),
								this.setState({ showUndo: !1 }));
					}
					onDismissClick(e) {
						const {
							badgeNotification: t,
							onSlideUp: i,
							onNotificationDismiss: n,
							dismissNotification: a,
							addToList: s,
							removeFromList: r,
						} = this.props;
						e.preventDefault(),
							this.setState({ showUndo: !0 }),
							a({ notificationId: t.notificationId, dismiss: !0 }),
							(this.dismissTimer = setTimeout(() => {
								i(), n(t.notificationId), r(t.notificationId);
							}, 5e3)),
							s(t.notificationId, () => this.clearTimerAndExecute());
					}
					onUndoClick(e) {
						const {
							badgeNotification: t,
							dismissNotification: i,
							removeFromList: n,
						} = this.props;
						e.preventDefault(),
							this.setState({ showUndo: !1 }),
							clearTimeout(this.dismissTimer),
							(this.dismissTimer = null),
							i({ notificationId: t.notificationId, dismiss: !1 }),
							n(t.notificationId);
					}
					clearTimerAndExecute() {
						const {
							onSlideUp: e,
							onNotificationDismiss: t,
							badgeNotification: i,
						} = this.props;
						this.dismissTimer &&
							(clearTimeout(this.dismissTimer),
							(this.dismissTimer = null),
							e(),
							t(i.notificationId));
					}
					render() {
						const { badgesAttributes: e } = this.props;
						return (
							(this.badgeNotificationData = this.getBadgeNotificationData()),
							e
								? (0, p.jsxs)(zi.A, {
										...this.props,
										children: [
											(0, p.jsxs)('a', {
												href: '',
												ref: (e) => (this.badgeNotification = e),
												className: 'notification-body',
												children: [
													this.badgeNotificationData.message,
													(0, p.jsx)('div', {
														className: 'date-stamp',
														children: this.formatMessageDate(),
													}),
												],
											}),
											(0, p.jsx)('button', {
												ref: this.dismissRef,
												className: 'icon-dismiss',
											}),
											(0, p.jsxs)('div', {
												className: `undo-section ${this.state.showUndo ? dn.fadeIn : dn.fadeOut}`,
												children: [
													(0, p.jsx)('div', {
														children: (0, p.jsx)(sn.A, {
															ns: 'notification',
															content: 'notification_removed',
														}),
													}),
													(0, p.jsx)('button', {
														ref: this.undoRef,
														className: 'undoButton',
														children: (0, p.jsx)(sn.A, {
															ns: 'notification',
															content: 'weight.scale.decline.undo.button',
														}),
													}),
												],
											}),
										],
									})
								: null
						);
					}
					onBadgeNotificationClick(e) {
						e.preventDefault(), document.body.click();
						const {
							displayName: t,
							badgeNotification: i,
							badgesAttributes: n,
							setBadgesPageView: a,
							showModal: s,
						} = this.props;
						switch (this.badgeNotificationData.view) {
							case 'availableBadges':
								me.default.navigate('/badges', e), a(nn.g.AVAILABLE, t);
								break;
							case 'earnedBadges':
								i.type === Tn && (0, qi.oC)(),
									me.default.navigate('/badges', e),
									a(nn.g.EARNED, t);
								break;
							case 'badgeDetail':
								let r = {};
								(r.badgeId = i.relativeNameValue.badge_id),
									s({
										view: (0, p.jsx)(Zi.A, {
											...this.props,
											badge: r,
											badgesAttributes: n.data,
										}),
										title: 'badges:badge_detail',
									});
						}
					}
					getBadgeNotificationData() {
						const { badgeNotification: e } = this.props;
						switch (e.type) {
							case pn:
								return {
									message: (0, p.jsx)(sn.A, {
										ns: 'notification',
										content: 'badge_start_single',
									}),
									view: 'availableBadges',
								};
							case yn:
								return {
									message: (0, p.jsx)(sn.A, {
										ns: 'notification',
										content: 'badge_start',
									}),
									view: 'availableBadges',
								};
							case hn:
								return {
									message: (0, p.jsx)(sn.A, {
										ns: 'notification',
										content: 'badge_start_today_only_single',
									}),
									view: 'availableBadges',
								};
							case gn:
								return {
									message: (0, p.jsx)(sn.A, {
										ns: 'notification',
										content: 'badge_start_today_only',
									}),
									view: 'availableBadges',
								};
							case mn:
								return {
									message: (0, p.jsx)(sn.A, {
										ns: 'notification',
										content: 'badge_expire_single',
										params: {
											0: (0, an.M5)(e.relativeNameValue.badge_key, rn.Ay),
										},
									}),
									view: 'availableBadges',
								};
							case An:
								return {
									message: (0, p.jsx)(sn.A, {
										ns: 'notification',
										content: 'badge_expire',
									}),
									view: 'availableBadges',
								};
							case _n:
								return {
									message: (0, p.jsx)(sn.A, {
										ns: 'notification',
										content: 'badge_earned_single',
										params: {
											0: (0, an.M5)(e.relativeNameValue.badge_key, rn.Ay),
										},
									}),
									view: 'earnedBadges',
								};
							case En:
								return {
									message: (0, p.jsx)(sn.A, {
										ns: 'notification',
										content: 'badge_earned',
										params: { 0: e.relativeNameValue.count },
									}),
									view: 'earnedBadges',
								};
							case Tn:
								return {
									message: (0, p.jsx)(sn.A, {
										ns: 'notification',
										content: 'badge_level_up',
										params: { 0: e.relativeNameValue.level },
									}),
									view: 'earnedBadges',
								};
							case Cn:
								return {
									message: (0, p.jsx)(sn.A, {
										ns: 'challengewidget',
										content: 'partner_challenge_badge_complete_success',
										params: {
											0: (0, an.M5)(e.relativeNameValue.badge_key, rn.Ay),
										},
									}),
									view: 'earnedBadges',
								};
						}
					}
					formatMessageDate() {
						const { badgeNotification: e } = this.props;
						let t = bt.A.parseISOUTC(e.dateTimeString);
						return l.Ay.formatTimeAgo(t);
					}
					componentWillUnmount() {
						this.badgeNotification.removeEventListener(
							'click',
							this.onBadgeNotificationClick
						),
							this.dismissRef.current &&
								this.dismissRef.current.removeEventListener(
									'click',
									this.onDismissClick
								),
							this.undoRef.current &&
								this.undoRef.current.removeEventListener(
									'click',
									this.onUndoClick
								);
					}
				}
				const In = (0, Ki.Ng)(
					(e, t) => ({
						badgesAttributes: (0, en.b)(e).attributes,
						notificationDismissSuccess: (0, tn.so)(
							e,
							t.badgeNotification.notificationId
						),
						notificationDismissFail: (0, tn.DJ)(
							e,
							t.badgeNotification.notificationId
						),
					}),
					un
				)((0, on.CI)('badges')(Sn));
				var vn = i(548413),
					fn = i(120897),
					Dn = {};
				(Dn.styleTagTransform = Ai()),
					(Dn.setAttributes = yi()),
					(Dn.insert = ui().bind(null, 'head')),
					(Dn.domAPI = ci()),
					(Dn.insertStyleElement = gi());
				oi()(fn.A, Dn);
				fn.A && fn.A.locals && fn.A.locals;
				rn.Ay.loadNamespaces(['badges-list']);
				var Nn = {
						REFRESH_COUNT: 'REFRESH_COUNT',
						ON_NAVIGATION: 'ON_NAVIGATION',
					},
					Rn = I()
						.View.extend(oe.A)
						.extend({
							propertyFiles: [
								'/notification/notification',
								'/privacy_alert/privacy_alert',
								'/activity_types/activity_types',
								'/activity-api/activity-api',
								'/challengewidget/challengewidget',
								'/email-template/email-template',
								'/connections/connections',
								'/settings/settings',
								'/calendar/calendar',
								'/badges-list/badges-list',
							],
							template: b().template(ji()),
							initialize: function (e) {
								(this.displayName = e.displayName),
									(this.viewerSocialProfile = e.viewerSocialProfile),
									(this.userProfile = e.userProfile),
									(this.userPreferences = e.userPreferences),
									(this.notificationsLoaded = !1),
									(this.messageAndDevicesNotificationsEnabled =
										e.messageAndDevicesNotificationsEnabled),
									(this.groupInviteSpammingDays = e.groupInviteSpammingDays),
									(this.pollTimeoutValue = parseInt(e.pollTimeoutValue, 10)),
									(this.unviewedCount = 0),
									(this.newRequestsCount = 0),
									(this.newNotificationsCount = 0),
									(this.notifications = new Qe([], { limit: 50 })),
									this.notifications.bind(
										'error',
										this.defaultErrorHandler,
										this
									),
									(this.pendingConnections = new Ze()),
									this.pendingConnections.bind(
										'error',
										this.defaultErrorHandler,
										this
									),
									(this.pendingDeviceInviteRequests = new tt()),
									this.pendingDeviceInviteRequests.bind(
										'error',
										this.defaultErrorHandler,
										this
									),
									(this.pendingChallengeInviteRequests = new it()),
									this.pendingChallengeInviteRequests.bind(
										'error',
										this.defaultErrorHandler,
										this
									),
									(this.pendingVivokidChallengeRequests = new nt()),
									this.pendingVivokidChallengeRequests.bind(
										'error',
										this.defaultErrorHandler,
										this
									),
									(this.pendingTeamStepsVivokidChallengeRequests = new Ve()),
									this.pendingTeamStepsVivokidChallengeRequests.bind(
										'error',
										this.defaultErrorHandler,
										this
									),
									(this.inboxRequestCount = new At()),
									(this.shouldLoadMoreNotifications = !0),
									(this.resetNotifications = !1),
									(this.disMissingList = {}),
									(this.disabledInInboxPage = !1),
									this.messageAndDevicesNotificationsEnabled &&
										((this.unreadBubble = new gt()),
										this.unreadBubble.bind(
											'error',
											this.defaultErrorHandler,
											this
										),
										this.unreadBubble.bind(
											'hasUnread',
											this.handleUnreadBubble,
											this
										),
										(this.disabledInInboxPage =
											window.location.pathname.includes(
												me.default.url('/inbox')
											)),
										vn.A.on(vn.A.Events.ENABLE, () => {
											this.disabledInInboxPage = !1;
										}),
										this.configurePolling()),
									(this.openNotificationCallback = e.openNotificationCallback);
							},
							configurePolling: function () {
								('undefined' !== typeof this.notificationPoller &&
									null !== this.notificationPoller) ||
									(this.notificationPoller = new Ji.A({
										pollTime: this.pollTimeoutValue,
									})),
									!1 === this.notificationPoller.isPollingStarted() &&
										(this.notificationPoller.addCollection(this.unreadBubble),
										this.notificationPoller.start());
							},
							isScrolledIntoView: function (e) {
								let t = e.getBoundingClientRect();
								return t.top >= 0 && t.bottom <= window.innerHeight;
							},
							setupLazyLoader: function () {
								(this.$lazyLoad = this.$('.lazyload')),
									document
										.querySelector('.notifications .header-nav-menu')
										.addEventListener(
											'scroll',
											this.fetchMoreNotificationsIfNeeded.bind(this)
										),
									this.notifications.hasMoreMembers() && this.showLazyLoader();
							},
							hideLazyLoader: function () {
								this.$lazyLoad.hide();
							},
							showLazyLoader: function () {
								this.$lazyLoad.show();
							},
							fetchMoreNotificationsIfNeeded: function () {
								const e = this.isScrolledIntoView(this.$lazyLoad[0]);
								this.shouldLoadMoreNotifications && e && this.fetchMore();
							},
							fetchMore: function () {
								this.shouldLoadMoreNotifications = !1;
								let e = new j.A();
								e.addEvent({
									model: this.notifications,
									event: $e.Events.ON_MORE_MEMBERS_FETCHED,
									required: !0,
								}),
									e.bind(
										j.A.Events.SYNCHRONIZED,
										function () {
											this.shouldLoadMoreNotifications = !0;
											let e = document.querySelector(
												'.notifications .header-nav-menu'
											).scrollTop;
											this.renderNotifications(!0),
												(document.querySelector(
													'.notifications .header-nav-menu'
												).scrollTop = e),
												this.notifications.hasMoreMembers()
													? this.showLazyLoader()
													: this.hideLazyLoader();
										}.bind(this)
									),
									this.notifications.fetchNext();
							},
							handleNotificationCount: function (e) {
								let t = e.get('count').counts,
									i = 0;
								Array.isArray(t) &&
									t.forEach((e) => {
										Ke[e.name] && (i += e.count);
									}),
									i > this.unviewedCount && (this.resetNotifications = !0),
									i !== this.unviewedCount &&
										((this.unviewedCount = i),
										this.updateNonViewedMessageCount());
							},
							loadNotificationCounter: function () {
								var e = new j.A();
								this.notificationCount
									? (e.addModel({
											model: this.notificationCount,
											required: !0,
										}),
										e.bind(
											j.A.Events.SYNCHRONIZED,
											this.onNotificationsCounterFetched,
											this
										),
										e.fetchModels())
									: this.unreadBubble &&
										(e.addModel({ model: this.unreadBubble, required: !0 }),
										e.bind(
											j.A.Events.SYNCHRONIZED,
											this.onUnreadBuddleFetched,
											this
										),
										e.fetchModels());
							},
							onNotificationsCounterFetched: function () {
								this.notificationCount &&
									this.handleNotificationCount(this.notificationCount);
							},
							handleUnreadBubble: function () {
								(this.resetNotifications = !0),
									this.updateNonViewedMessageCount(1);
							},
							onUnreadBuddleFetched: function () {
								this.unreadBubble &&
									this.unreadBubble.get('unreadBubble') &&
									this.handleUnreadBubble();
							},
							defaultErrorHandler: function (e, t) {
								this.$('.alert-error').show(),
									this.$('.empty-state').hide(),
									this.log(arguments),
									this.notificationPoller.stopPolling();
							},
							resetErrorHandler: function () {
								this.$('.alert-error').hide(),
									this.$('.empty-state').show(),
									this.notificationPoller.start();
							},
							updateNonViewedMessageCount: function (e) {
								if (this.disabledInInboxPage) return;
								let t = b().isNumber(e) ? e : this.unviewedCount;
								const i = this.inboxRequestCount.get('requestCount'),
									n = (this.inboxRequestCount.get('requests') || []).some(
										(e) => !e.data.requestViewed
									);
								i > 2 && n && (t += 1), this.trigger(Nn.REFRESH_COUNT, t);
							},
							render: function () {
								const e = L.A.localize('inbox_is_empty'),
									t = L.A.localize('inbox_is_empty_description');
								var i = this.template({
									Localizer: L.A,
									showItems: !this.thereAreNoItems(),
									notificationsLoaded: this.notificationsLoaded,
									inboxUrl: me.default.url('/inbox'),
									notItemsTitle: e,
									notItemsDescription: t,
								});
								this.$el.html(i),
									this.thereAreNoRequests() &&
										this.$('.requests-header').hide(),
									this.thereAreNoNotifications() &&
										this.$('.notifications-header').hide(),
									this.thereAreNoItems()
										? this.$('.js-no-pending-requests-or-notifications').show()
										: ((this.newRequestsCount = 0),
											(this.newNotificationsCount = 0),
											this.renderInboxRequests(),
											this.renderNotifications(),
											this.toggleNewItemsCount(),
											this.resetViewedItems(),
											this.updateNonViewedMessageCount(0));
							},
							thereAreNoRequests: function () {
								return 0 === this.inboxRequestCount.get('requestCount');
							},
							thereAreNoNotifications: function () {
								return 0 === this.notifications.length;
							},
							thereAreNoItems: function () {
								return (
									this.thereAreNoRequests() && this.thereAreNoNotifications()
								);
							},
							toggleNewItemsCount: function () {
								this.newNotificationsCount > 0 &&
									this.$('.js-new-notifications-count')
										.html(this.newNotificationsCount)
										.show();
							},
							renderInboxRequests: function () {
								const e = this.inboxRequestCount.toJSON(),
									t = e.requests || [];
								if (0 === t.length) return;
								const i = this.$('.js-pending-requests-placeholder');
								if (e.requestCount > 2) {
									const e = new Wi({
										inboxRequestCount: this.inboxRequestCount,
									});
									return e.render(), void i.append(e.$el);
								}
								const n = [],
									a = [],
									s = [],
									r = [];
								for (let o = 0; o < t.length; o += 1) {
									const e = t[o];
									let l = 'js-pending-';
									switch (e.requestKey) {
										case at:
											(l += `connection-${e.data.connectionRequestId}`),
												n.push([l, e]);
											break;
										case st:
											(l += `group-${e.data.groupMemberRequestId}`),
												a.push([l, e]);
											break;
										case rt:
											(l += `group-${e.data.groupInviteId}`), a.push([l, e]);
											break;
										case ot:
										case lt:
										case ct:
											(l += `challenge-invite-${e.data.challengeInviteId}`),
												s.push([l, e]);
											break;
										case dt:
											(l += `device-invite-${e.data.deviceInviteId}`),
												r.push([l, e]);
											break;
										default:
											l = '';
									}
									if (!l) continue;
									const c = ['header-nav-menu-section request-item', l];
									e.data.requestViewed || c.push('unread'),
										i.append(`<div class="${c.join(' ')}"></div>`);
								}
								n.forEach((e) => {
									const [t, i] = e,
										n = new wt({
											el: this.$(`.${t}`),
											pendingConnection: i.data,
											userProfile: this.userProfile,
											userPreferences: this.userPreferences,
											openNotificationCallback: this.openNotificationCallback,
										});
									this.listenTo(n, wt.Events.CONNECTION_CLICKED, function () {
										this.trigger(Nn.ON_NAVIGATION);
									}),
										n.render();
								}),
									a.forEach((e) => {
										const [t, i] = e,
											n = new qt({
												el: this.$(`.${t}`),
												pendingConnection: i.data,
												userProfile: this.userProfile,
												userPreferences: this.userPreferences,
												groupInviteSpammingDays: this.groupInviteSpammingDays,
											});
										this.listenTo(n, qt.Events.ON_NAVIGATION, function () {
											this.trigger(Nn.ON_NAVIGATION);
										}),
											n.render();
									}),
									r.forEach((e) => {
										const [t, i] = e;
										if (i.deviceInviteStatus === ii.STATUS.ACCEPTED) return;
										const n = new et.A(i.data),
											a = new ii({
												el: this.$(`.${t}`),
												pendingDeviceInviteRequest: n,
												userProfile: this.userProfile,
												userPreferences: this.userPreferences,
											});
										this.listenTo(a, ii.Events.ON_NAVIGATION, function () {
											this.trigger(Nn.ON_NAVIGATION);
										}),
											a.render();
									}),
									s.forEach((e) => {
										const [t, i] = e,
											n = new Bi({ el: this.$(`.${t}`), inboxRequest: i.data });
										this.listenTo(n, Bi.Events.ON_NAVIGATION, function () {
											this.trigger(Nn.ON_NAVIGATION);
										}),
											n.render();
									});
							},
							renderNotifications: function (e = !1) {
								e && this.$('.js-pending-notifications-placeholder').empty();
								var t = 0,
									i = this.$('.js-pending-notifications-placeholder');
								this.notifications.each(function (e) {
									if (ze[e.get('type')]) {
										i.append(
											"<div class='header-nav-menu-section notification-item " +
												ze[e.get('type')] +
												'-notification js-pending-comment-' +
												t +
												"'></div>"
										);
										var n = this.$('.js-pending-comment-' + t);
										e.get('viewed') ||
											(n.addClass('unread'), this.newNotificationsCount++),
											'badge' === ze[e.get('type')]
												? this.renderBadgeNotification(e, n)
												: (e.bind('error', this.defaultErrorHandler, this),
													this.renderGenericNotification(e, n)),
											t++;
									}
								}, this),
									this.setupLazyLoader();
							},
							renderGenericNotification: function (e, t) {
								var i = new Ni({
									el: t,
									pendingComment: e.toJSON(),
									displayName: this.displayName,
									addToList: (e, t) => this.addToList(e, t),
									removeFromList: (e) => this.removeFromList(e),
								});
								this.listenTo(i, Ni.Events.COMMENT_CLICKED, function () {
									this.trigger(Nn.ON_NAVIGATION);
								}),
									this.listenTo(i, Ni.Events.NOTIFICATION_DISMISSED, (e) => {
										this.notifications.remove(e),
											this.thereAreNoNotifications() && this.render();
									}),
									this.listenTo(
										i,
										Ni.Events.NOTIFICATION_DISMISS_UNDO_SUCCESS,
										() => {
											this.resetErrorHandler();
										}
									),
									this.listenTo(
										i,
										Ni.Events.NOTIFICATION_DISMISS_UNDO_FAIL,
										() => {
											this.defaultErrorHandler();
										}
									),
									i.render();
							},
							renderBadgeNotification: function (e, t) {
								(this.reactBadgeNotification = new Yi.A()),
									this.reactBadgeNotification.renderComponent(In, t[0], {
										badgeNotification: e.toJSON(),
										displayName: this.displayName,
										viewerSocialProfile: this.viewerSocialProfile.toJSON(),
										onSlideUp: () => t.slideUp(),
										onNotificationDismiss: (e) => this.notifications.remove(e),
										onError: () => this.defaultErrorHandler(),
										onResetError: () => this.resetErrorHandler(),
										addToList: (e, t) => this.addToList(e, t),
										removeFromList: (e) => this.removeFromList(e),
									});
							},
							provideDependencies: function (e) {
								this.resetNotifications
									? ((this.notificationsLoaded = !1),
										(this.notifications = new Qe([], { limit: 50 })),
										this.notifications.bind(
											'error',
											this.defaultErrorHandler,
											this
										),
										(document.querySelector(
											'.notifications .header-nav-menu'
										).scrollTop = 0),
										(this.shouldLoadMoreNotifications = !0),
										(this.resetNotifications = !1))
									: this.notifications.forEach((e) => {
											e.set('viewed', !0);
										}),
									0 === this.notifications.length &&
										e.addModel({ model: this.notifications, required: !0 }),
									e.addModel({ model: this.inboxRequestCount, required: !0 }),
									this.inboxRequestCount.once('sync', () => {
										if (this.inboxRequestCount.get('requestCount') <= 2) {
											new mt().fetch();
										}
									});
							},
							onDependenciesLoaded: function () {
								(this.notificationsLoaded = !0), this.render();
							},
							resetViewedItems: function () {
								var e = this;
								this.pendingConnections.each(function (t) {
									t.get('requestViewed') ||
										t.save(t.attributes, {
											url: '/userprofile-service/connection/notViewedRequestCount',
											contentType: 'application/json; charset=utf-8',
											success: function () {
												e.unviewedCount--, e.updateNonViewedMessageCount();
											},
										});
								}, this),
									this.pendingDeviceInviteRequests.each(function (t) {
										if (!t.get('requestViewed')) {
											const i =
												'/invite-service/invite/' +
												t.get('deviceInviteId') +
												'/view/1';
											t.save(
												{},
												{
													isRequestViewed: !0,
													url: i,
													contentType: 'application/json; charset=utf-8',
													success: function () {
														e.unviewedCount--, e.updateNonViewedMessageCount();
													},
												}
											);
										}
									}, this),
									this.notifications.each(function (t) {
										t.get('viewed') ||
											(e.unviewedCount--, e.updateNonViewedMessageCount());
									}, this);
							},
							handleDropdownClosed: function () {
								for (const e in this.disMissingList) {
									(0, this.disMissingList[e])();
								}
								(this.disMissingList = {}),
									this.$(
										'.js-pending-notifications-placeholder .unread'
									).removeClass('unread');
							},
							addToList: function (e, t) {
								this.disMissingList[e] = t;
							},
							removeFromList: function (e) {
								delete this.disMissingList[e];
							},
							log: function () {
								'undefined' !== typeof console &&
									'undefined' !== typeof console.log &&
									console.log(arguments);
							},
						});
				Rn.Events = Nn;
				const bn = Rn;
				var Ln = i(557369),
					Pn = i(643954),
					On = i.n(Pn);
				const wn = () => (0, p.jsx)('span', { id: 'cookie_preferences' });
				var Fn = { ON_NAVIGATION: 'ON_NAVIGATION' },
					kn = I().View.extend({
						events: {
							'click .view-profile': 'navigateLink',
							'click .account-settings': 'navigateLink',
							'click .sign-out': 'onSignOutClicked',
						},
						template: b().template(On()),
						initialize: function (e) {
							(this.viewerSocialProfile = e.viewerSocialProfile),
								(this.profileUrl = me.default.url(
									`/profile/${this.viewerSocialProfile.get('displayName')}`
								)),
								(this.settingsUrl = me.default.url('/settings')),
								this.initializeSupportAndLegalUrls();
						},
						initializeSupportAndLegalUrls: function () {
							let e = 'https://www.garmin.com';
							(0, Ee.w)()
								? (e = 'https://www.garmin.cn')
								: (0, Ee.B)() && (e = 'https://wwwus.garmin.cn'),
								(this.helpUrl = '/help'),
								(this.statusUrl = '/status'),
								(this.termsOfUseUrl = `${e}/legal/terms-of-use/`),
								(this.privacyUrl = `${e}/privacy/connect/`),
								(this.securityUrl = `${e}/legal/security`);
						},
						render: function () {
							var e = this.template({
								Localizer: L.A,
								fullName:
									this.viewerSocialProfile.get('fullName') ||
									this.viewerSocialProfile.get('displayName'),
								userIsPro: this.viewerSocialProfile.get('userPro'),
								profileUrl: this.profileUrl,
								settingsUrl: this.settingsUrl,
								helpUrl: this.helpUrl,
								statusUrl: this.statusUrl,
								termsOfUseUrl: this.termsOfUseUrl,
								privacyUrl: this.privacyUrl,
								securityUrl: this.securityUrl,
								year: this.getCurrentYear(),
								isReadOnly: (0, Te.aO)(),
							});
							this.$el.html(e), this.renderCookieConsentLink();
						},
						renderCookieConsentLink: function () {
							(this.cookieConsent = new Yi.A()),
								this.cookieConsent &&
									this.cookieConsent.element &&
									this.cookieConsent.removeElement(),
								this.cookieConsent.renderComponent(
									wn,
									this.$('#cookie_preferences_container')[0]
								);
						},
						navigateLink: function (e) {
							e.ctrlKey || e.metaKey || e.preventDefault(),
								this.trigger(Fn.ON_NAVIGATION),
								me.default.anchorTagHandler(e);
						},
						onSignOutClicked: function (e) {
							e.preventDefault(), Ln.A.signOut();
						},
						getCurrentYear: function () {
							return new Date().getFullYear();
						},
					});
				kn.Events = Fn;
				const Un = kn;
				var Mn = i(235386),
					Gn = i(671591),
					xn = i(73477),
					Bn = i.n(xn),
					Hn = i(998813),
					Vn = {
						ON_NAVIGATION: 'ON_NAVIGATION',
						ON_ACTIVITY_TRACKER_CHANGE: 'ON_ACTIVITY_TRACKER_CHANGE',
						ON_SYNC_MESSAGE_REMOVE: 'ON_SYNC_MESSAGE_REMOVE',
					},
					Wn = I().View.extend({
						template: b().template(Bn()),
						events: {
							'click .js-device-link': 'navigateLink',
							'click .sync-item-title': 'navigateLink',
							'click .js-set-as-activity-tracker':
								'onSetActivityTrackerLinkClicked',
							'click .new-items-alert': 'onNewItemsBulletClick',
							'click .sync-item-list-toggle a': 'onSyncItemDetailsClick',
							'click .sync-item-remove': 'onSyncItemRemoveClick',
							'click .sync-item-remove-confirm .btn-keep':
								'hideConfirmationPopup',
							'click .sync-item-remove-confirm .btn-confirm':
								'onRemovePopupConfirmClick',
						},
						className: 'header-nav-menu-section',
						initialize: function (e) {
							(this.device = e.device),
								(this.messages = e.messages),
								(this.trackerCount = e.trackerCount),
								(this.isRetired = e.isRetired),
								(this.isPrimaryTrainingDevice = e.isPrimaryTrainingDevice),
								(this.isPrimaryWearableDevice = e.isPrimaryWearableDevice),
								(this.hideDeviceQueue = e.hideDeviceQueue);
						},
						render: function () {
							return (
								this.$el.html(
									this.template({
										Localizer: L.A,
										device: this.device.toJSON(),
										deviceUrl: me.default.url(this.getDeviceUrl()),
										appStoreUrl: this.device.get('appSupport')
											? Gn.A.getAppStoreUrl(this.device)
											: null,
										ActiveIndicatorEnum: Mn.A,
										url: me.default.url,
										messages: this.messages || [],
										messagesCount: this.getMessageCount(),
										isRetired: this.isRetired,
										showBatteryLow: this.device.get('batteryLow') || !1,
										DateFormatter: l.Ay,
										isPrimaryTrainingDevice: this.isPrimaryTrainingDevice,
										isPrimaryWearableDevice: this.isPrimaryWearableDevice,
										shouldShowFirmwareUpdateAwareness:
											this.shouldShowFirmwareUpdateAwarenessBanner(),
										hideDeviceQueue: this.hideDeviceQueue,
									})
								),
								this.trackerCount > 1 &&
									(this.device.get('wellness') || this.device.get('hybrid')) &&
									this.renderActiveActivityTracker(),
								this
							);
						},
						shouldShowFirmwareUpdateAwarenessBanner: function () {
							return (
								'IndexSmartScale2' === this.device.get('applicationKey') &&
								!0 === this.device.get('isPrimaryUser') &&
								this.device.get('currentFirmwareVersion') < 300
							);
						},
						getMessageCount: function () {
							return b().reject(this.messages, function (e) {
								return e.isGroupChild;
							}).length;
						},
						renderActiveActivityTracker: function () {
							this.device.get('primaryActivityTrackerIndicator') ||
							this.device.get('activeInd') === Mn.A.NOT_ACTIVE
								? this.device.get('activeInd') !== Mn.A.NOT_ACTIVE &&
									(this.$('.js-active-activity-tracker').show(),
									this.$('.js-set-as-activity-tracker').hide())
								: (this.$('.js-active-activity-tracker').hide(),
									this.$('.js-set-as-activity-tracker').show()),
								(this.device.get('applicationKey').indexOf('HRM') >= 0 ||
									this.device.get('applicationKey').indexOf('edge') >= 0) &&
									this.$('.js-set-as-activity-tracker').hide();
						},
						onSetActivityTrackerLinkClicked: function (e) {
							e.preventDefault(),
								this.trigger(Vn.ON_ACTIVITY_TRACKER_CHANGE, this.device);
						},
						onSyncItemDetailsClick: function (e) {
							e.preventDefault(),
								this.$(e.currentTarget)
									.closest('.sync-item-content')
									.find('.sync-item-list')
									.slideToggle();
						},
						onSyncItemRemoveClick: function (e) {
							e.preventDefault();
							var t =
									'<strong>' +
									Hn(e.currentTarget).data('messageName') +
									'</strong>',
								i = Hn(e.currentTarget).data('messageId'),
								n = Hn(e.currentTarget).data('groupName');
							this.$('.sync-item-remove-confirm')
								.show()
								.find('.confirm-text')
								.html(L.A.localize('connections.page.stop.follower.prompt', t))
								.end()
								.find('.btn-confirm')
								.data('messageId', i)
								.data('groupName', n);
						},
						onRemovePopupConfirmClick: function (e) {
							var t = Hn(e.currentTarget).data('messageId'),
								i = Hn(e.currentTarget).data('groupName'),
								n = Hn(e.currentTarget).data('message');
							this.trigger(Vn.ON_SYNC_MESSAGE_REMOVE, t, i, n);
						},
						hideMessageItem: function (e, t, i) {
							var n = function (e) {
								return function () {
									this.remove(), e && e();
								};
							};
							t
								? Hn('.sync-item.sync-item-' + e)
										.parent()
										.closest('.sync-item')
										.slideUp(400, n(i))
								: this.$('.sync-item.sync-item-' + e).slideUp(400, n(i));
						},
						updateMessagesCount: function () {
							var e = this.getMessageCount(),
								t = this.$('.new-items-alert');
							e > 0
								? (t.html(e),
									1 === e
										? t.attr('title', L.A.localize('item_to_sync'))
										: t.attr('title', L.A.localize('items_to_sync', e)))
								: (t.remove(),
									this.$('.sync-item-remove-confirm').remove(),
									this.$('.sync-list').remove());
						},
						hideConfirmationPopup: function () {
							this.$('.sync-item-remove-confirm').hide();
						},
						onNewItemsBulletClick: function () {
							this.$('.sync-list').slideToggle(200);
						},
						getDeviceUrl: function () {
							return '/device/' + this.device.get('deviceId');
						},
						navigateLink: function (e) {
							e.ctrlKey || e.metaKey || e.preventDefault(),
								this.trigger(Vn.ON_NAVIGATION),
								me.default.anchorTagHandler(e);
						},
					});
				Wn.Events = Vn;
				const Jn = Wn;
				var Yn = i(226413),
					$n = i.n(Yn);
				const jn = I().View.extend({
					template: b().template($n()),
					className: 'header-nav-menu-section',
					initialize: function (e) {
						(this.sensor = e.sensor),
							(this.userPreferences = e.userPreferences);
					},
					getNamesBasedOnSensorTypeMapping: function () {
						switch (this.sensor.sensorType) {
							case 'BIKE_LIGHT_MAIN':
							case 'BIKE_LIGHT_SHARED':
								return {
									imageUrl: 'icon_sensor_lights_dark.png',
									translationKey: 'sensor_lights',
								};
							case 'BIKE_SPEED_CADENCE':
								return {
									imageUrl: 'icon_sensor_bike_cadence_dark.png',
									translationKey: 'sensor_bike_speed_cadence',
								};
							case 'BIKE_CADENCE':
								return {
									imageUrl: 'icon_sensor_bike_cadence_dark.png',
									translationKey: 'sensor_bike_cadence',
								};
							case 'CONTROL':
							case 'CONTROLS':
								return {
									imageUrl: 'icon_sensor_edge_remote_dark.png',
									translationKey: 'sensor_edge_remote',
								};
							case 'HEART_RATE':
								return {
									imageUrl: 'icon_sensor_heart_rate_dark.png',
									translationKey: 'sensor_heart_rate_monitor',
								};
							case 'CONTROL_HUB':
							case 'SHIFTING':
								return {
									imageUrl: 'icon_sensor_shifting_dark.png',
									translationKey: 'sensor_shifting',
								};
							case 'RUN':
								return {
									imageUrl: 'icon_sensor_footpod_dark.png',
									translationKey: 'sensor_rd_pod',
								};
							case 'FOOTPOD':
							case 'STRIDE_SPEED_DISTANCE':
								return {
									imageUrl: 'icon_sensor_footpod_dark.png',
									translationKey: 'sensor_footpod',
								};
							case 'BIKE_RADAR':
								return {
									imageUrl: 'icon_sensor_radar_dark.png',
									translationKey: 'sensor_radar',
								};
							case 'FITNESS_EQUIPMENT':
								return {
									imageUrl: 'icon_sensor_smart_trainer_dark.png',
									translationKey: 'sensor_smart_trainer',
								};
							case 'ENVIRONMENT_SENSOR_LEGACY':
							case 'ENV_SENSOR':
								return {
									imageUrl: 'icon_sensor_temperature_dark.png',
									translationKey: 'sensor_temperature',
								};
							case 'EXD':
								return {
									imageUrl: 'icon_sensor_varia_dark.png',
									translationKey: 'sensor_varia',
								};
							case 'BIKE_POWER':
								return {
									imageUrl: 'icon_sensor_power_dark.png',
									translationKey: 'sensor_power',
								};
							case 'BIKE_SPEED':
								return {
									imageUrl: 'icon_sensor_speed_dark.png',
									translationKey: 'sensor_speed',
								};
							case 'MULTI_SPORT_SPEED_DISTANCE':
								return {
									imageUrl: 'icon_sensor_other_dark.png',
									translationKey: 'sensor_speed_distance',
								};
							case 'BLOOD_PRESSURE':
								return {
									imageUrl: 'icon_sensor_other_dark.png',
									translationKey: 'sensor_blood_pressure_monitor',
								};
							case 'GEOCACHE_NODE':
								return {
									imageUrl: 'icon_sensor_other_dark.png',
									translationKey: 'sensor_geocache',
								};
							case 'LIGHT_ELECTRIC_VEHICLE':
								return {
									imageUrl: 'icon_sensor_other_dark.png',
									translationKey: 'sensor_ebike',
								};
							case 'ACTIVITY_MONITOR':
								return {
									imageUrl: 'icon_sensor_other_dark.png',
									translationKey: 'sensor_activity_monitor',
								};
							case 'GLUCOSE_MONITOR':
								return {
									imageUrl: 'icon_sensor_other_dark.png',
									translationKey: 'sensor_glucose_monitor',
								};
							case 'RACQUET':
								return {
									imageUrl: 'icon_sensor_other_dark.png',
									translationKey: 'sensor_racquet',
								};
							case 'MUSCLE_OXYGEN':
								return {
									imageUrl: 'icon_sensor_other_dark.png',
									translationKey: 'sensor_muscle_oxygen',
								};
							case 'BIKE_AERO':
								return {
									imageUrl: 'icon_sensor_other_dark.png',
									translationKey: 'sensor_aero',
								};
							case 'WEIGHT_SCALE':
								return {
									imageUrl: 'icon_sensor_other_dark.png',
									translationKey: 'sensor_scale',
								};
							default:
								return {
									imageUrl: 'icon_sensor_other_dark.png',
									translationKey: 'sensor_other',
								};
						}
					},
					getLastSyncDate: function () {
						let e =
							this.sensor && this.sensor.lastConnected
								? this.sensor.lastConnected
								: null;
						if (e) {
							e = ce().utc(e).local().format();
							let t = ce()().isSame(ce()(e), 'day'),
								i = ce()().subtract(1, 'day').isSame(e, 'day'),
								n = w.A.getDateFormatKey(),
								a =
									(this.userPreferences &&
										this.userPreferences.get('timeFormat') &&
										this.userPreferences.get('timeFormat').displayFormat) ||
									'h:mm a',
								s = ce()(e).format(a);
							return t
								? `${L.A.localize('today')} @ ${s}`
								: i
									? `${L.A.localize('yesterday')} @ ${s}`
									: new (ce())(e).format(n);
						}
						return null;
					},
					getBatteryStatusLabel: function () {
						let e = 'not_available',
							t = this.sensor.batteryStatus;
						return (
							t && 'UNKNOWN' !== t && 'INVALID' !== t && (e = t.toLowerCase()),
							`battery_${e}`
						);
					},
					getAlternativeImageUrl: function () {
						return this.sensor.sensorType
							? `/web-images/devices/sensors/${this.getNamesBasedOnSensorTypeMapping().imageUrl}`
							: '/web-images/devices/sensors/icon_sensor_other_dark.png';
					},
					getDeviceName: function () {
						if (this.sensor) {
							if (this.sensor.deviceName) return this.sensor.deviceName;
							var e = this.getNamesBasedOnSensorTypeMapping(),
								t = this.sensor.serialNumber ? this.sensor.serialNumber : '';
							return L.A.localize(e.translationKey, t);
						}
					},
					render: function () {
						let e = !1,
							t = this.getLastSyncDate(),
							i = this.getBatteryStatusLabel(),
							n = i;
						('battery_good' !== n &&
							'battery_ok' !== n &&
							'battery_new' !== i) ||
							((n = 'battery_new'), (e = !0));
						let a = `icon_${n}_black.svg`,
							s = this.sensor.imageUrl
								? this.sensor.imageUrl
								: this.getAlternativeImageUrl(),
							r = this.getDeviceName();
						return (
							this.$el.html(
								this.template({
									Localizer: L.A,
									batteryStatusLabel: i,
									lastConnectedDate: t,
									sensorImageUrl: s,
									deviceName: r,
									batteryStatusIconClass: a,
									isAboveLow: e,
								})
							),
							this
						);
					},
				});
				var Kn = i(523221),
					zn = i(899973),
					qn = i(267122);
				const Qn = I().Model.extend({
					urlRoot: '/device-service/devicemessage/message/count',
					backend: 'gcapi',
					parse: function (e) {
						this.set('count', e), this.trigger('add', this);
					},
					poll: function () {
						if (!this.fetching) {
							this.fetching = !0;
							this.fetch({
								add: !0,
								success: function (e) {
									e.fetching = !1;
								},
								error: this.onPollingError,
							});
						}
					},
					onPollingError: function (e, t) {
						(e.fetching = !1),
							(e.pollingEnabled = !1),
							'undefined' !== typeof console &&
								'undefined' !== typeof console.log &&
								console.log(
									new Date().toString() +
										' - Error polling: ' +
										t.status +
										' ' +
										t.statusText
								);
					},
					isPollingEnabled: function () {
						return !0;
					},
				});
				var Xn = i(748984),
					Zn = i(615055);
				const ea = I().Model.extend({
					backend: 'gcapi',
					urlRoot: '/device-service/sensors',
					url: function () {
						return this.urlRoot;
					},
					parse: function (e) {
						return { sensors: e || [] };
					},
				});
				var ta = i(931251),
					ia = b().clone(I().Events);
				ia.Events = {
					ON_ACTIVE_TRACKER: 'ON_ACTIVE_TRACKER',
					SET_ACTIVE_CLICKED: 'SET_ACTIVE_CLICKED',
				};
				const na = ia;
				var aa = i(48e4),
					sa = i(334790),
					ra = i(150956),
					oa = i(653098),
					la = i(36314),
					ca = i.n(la),
					da = i(386799),
					ua = i(998813),
					pa = {
						ON_NAVIGATION: 'ON_NAVIGATION',
						REFRESH_COUNT: 'REFRESH_COUNT',
						SET_DEVICES_SYNC_DATA: 'SET_DEVICES_SYNC_DATA',
					},
					ya = I()
						.View.extend(oe.A)
						.extend({
							propertyFiles: [
								'/connections/connections',
								'/power_zone/power_zone',
								'/send_to_device/send_to_device',
								'/device/device',
								'/segment/segment',
								'/sensors/sensors',
								'/common/common',
								'/reportswidget/reportswidget',
								'/activity-api/activity-api',
								'/notification/notification',
							],
							template: b().template(ca()),
							initialize: function (e) {
								(this.displayName = e.displayName),
									(this.userPreferences = e.userPreferences),
									(this.pollTimeoutValue = parseInt(e.pollTimeoutValue, 10)),
									(this.queuePoller = null),
									(this.messageAndDevicesNotificationsEnabled =
										e.messageAndDevicesNotificationsEnabled),
									(this.hideDeviceQueue = e.hideDeviceQueue),
									(this.sensorDevicesAvailable = new ea()),
									(this.userHasSensors = new B.A({
										key: 'Activity.userHasSensors',
									})),
									(this.devices = new Zn.A({ displayName: this.displayName })),
									(this.primaryTrainingDevice = new da.A()),
									(this.messages = new ta.A()),
									this.listenTo(
										this.messages,
										'error',
										this.showErrorMessage()
									),
									na.on(
										na.Events.ON_ACTIVE_TRACKER,
										this.fetchUpdatedDevices,
										this
									),
									this.messageAndDevicesNotificationsEnabled &&
										!this.hideDeviceQueue &&
										((this.queueCount = new Qn()),
										this.queueCount.bind('add', this.handleQueueCount, this),
										this.configurePolling()),
									(this.batteryInfos = {}),
									(this.userDeviceInfos = {});
							},
							configurePolling: function () {
								this.queuePoller ||
									(this.queuePoller = new aa.A({
										pollTime: this.pollTimeoutValue,
									})),
									!1 === this.queuePoller.isPollingStarted() &&
										(this.queuePoller.addCollection(this.queueCount),
										this.queuePoller.start());
							},
							provideDependencies: function (e, t) {
								0 === t
									? (e.addModel({ model: this.devices, required: !0 }),
										e.addModel({
											model: this.primaryTrainingDevice,
											required: !0,
										}),
										e.addModel({ model: this.messages, required: !0 }),
										e.addModel({ model: this.userHasSensors, required: !0 }),
										this.queueCount &&
											e.addModel({ model: this.queueCount, required: !0 }))
									: (this.userHasSensors &&
											this.userHasSensors.get('value') &&
											e.addModel({
												model: this.sensorDevicesAvailable,
												required: !0,
											}),
										b().each(
											this.devices.models,
											function (t) {
												var i = t.get('deviceId');
												if (t.get('wellness')) {
													var n = new Xn.A({ deviceId: i });
													e.addModel({ model: n, required: !0 }),
														(this.batteryInfos[i] = n);
												}
												var a = new ra.A({ deviceId: i });
												e.addModel({ model: a, required: !0 }),
													(this.userDeviceInfos[i] = a);
											}.bind(this)
										));
							},
							onDependenciesLoaded: function (e) {
								if (0 === e) {
									let e =
										this.primaryTrainingDevice.getPrimaryWearableDeviceInfo();
									e &&
										Dt.A.push({
											event: 'track_event',
											category: 'Primary Wearable Device',
											action: e.applicationKey,
											label: e.applicationKey,
										});
									let t = this.primaryTrainingDevice.getFullDeviceInfo(
										this.primaryTrainingDevice.getPrimaryTrainingDevice()
									);
									return (
										t &&
											Dt.A.push({
												event: 'track_event',
												category: 'Primary Training Device',
												action: t.applicationKey,
												label: t.applicationKey,
											}),
										!1
									);
								}
								return (
									this.hideErrorMessage(),
									this.getBatteryStatusForDevices(),
									this.getLastUploadTimestampForDevices(),
									!0
								);
							},
							onDependenciesLoadFailed: function () {
								this.showErrorMessage();
							},
							getLastUploadTimestampForDevices: function () {
								this.devices.each(
									function (e) {
										var t = this.userDeviceInfos[e.get('deviceId')];
										e.set('lastUploadTimestamp', t.get('lastUploadTimestamp'));
									}.bind(this)
								),
									this.trigger(pa.SET_DEVICES_SYNC_DATA, this.devices.toJSON()),
									this.render();
							},
							getBatteryStatusForDevices: function () {
								var e = b().filter(this.batteryInfos, function (e) {
									return !0 === e.get('batteryLow');
								});
								b().each(
									e,
									function (e) {
										this.devices.get(e.get('deviceId')).set('batteryLow', !0);
									}.bind(this)
								),
									this.sortDevices();
							},
							sortDevices: function () {
								this.devices.sort();
								var e = this.devices.where({ activeInd: Mn.A.NOT_ACTIVE }),
									t = this.devices.where({ batteryLow: !0 }),
									i = b().reject(this.devices.models, function (e) {
										return (
											e.get('activeInd') === Mn.A.NOT_ACTIVE ||
											!0 === e.get('batteryLow')
										);
									});
								b().each(e, function (e) {
									i.push(e);
								}),
									b().each(t, function (e) {
										i.unshift(e);
									}),
									this.devices.reset(i, { sort: !1 });
							},
							render: function () {
								var e = this.devices.length > 0;
								if (
									(this.$el.html(
										this.template({
											Localizer: L.A,
											url: me.default.url,
											userHasDevices: e,
											showManageDevicePriority:
												this.primaryTrainingDevice.getShowDevicePriority(),
										})
									),
									!e)
								) {
									var t = this.userPreferences.getFullLocale();
									this.$('#express-link').attr('href', '/' + t + '/start'),
										this.$('#mobile-link').attr(
											'href',
											'https://buy.garmin.com/en-US/US/on-the-go/apps/garmin-connect-mobile/prod125677.html'
										);
								}
								this.renderDevices(), this.renderSensorDevices();
							},
							renderDevices: function () {
								var e = this.groupByDeviceId(),
									t = this.prepareForOutput(e),
									i = this.getTrackerCount();
								let n = this.primaryTrainingDevice.getPrimaryTrainingDevice(),
									a = this.primaryTrainingDevice.getPrimaryWearableDevice(),
									s = [];
								b().each(
									this.devices.models,
									function (e) {
										var r = new Jn({
											device: e,
											messages: t[e.get('deviceId')],
											trackerCount: i,
											isRetired: e.get('activeInd') === Mn.A.NOT_ACTIVE,
											isPrimaryTrainingDevice: e.get('deviceId') === n,
											isPrimaryWearableDevice: e.get('deviceId') === a,
											hideDeviceQueue: this.hideDeviceQueue,
										});
										this.listenTo(
											r,
											Jn.Events.ON_ACTIVITY_TRACKER_CHANGE,
											this.onActivityTrackerChange
										),
											this.listenTo(
												r,
												Jn.Events.ON_SYNC_MESSAGE_REMOVE,
												this.onMessageRemove.bind(this, r)
											),
											this.listenTo(r, Jn.Events.ON_NAVIGATION, function () {
												this.trigger(pa.ON_NAVIGATION);
											}),
											e.get('deviceId') === n || e.get('deviceId') === a
												? this.$el.append(r.render().el)
												: s.push(r.render().el);
									},
									this
								),
									s.forEach((e) => {
										this.$el.append(e);
									});
							},
							renderSensorDevices: function () {
								if (
									this.userHasSensors &&
									this.userHasSensors.get('value') &&
									this.sensorDevicesAvailable
								) {
									var e = `<div class='header-nav-menu-section' style="font-size: 12px;"><p class="bottom-xs" style="text-transform: uppercase;">${L.A.localize('sensors')}</p>${L.A.localize('last_90_days_sensors')}</div>`,
										t = this.sensorDevicesAvailable.toJSON();
									(t = t.sensors),
										this.$el.append(e),
										b().each(
											t,
											function (e) {
												var t = new jn({
													sensor: e,
													userPreferences: this.userPreferences,
												});
												this.$el.append(t.render().el);
											},
											this
										);
								}
							},
							onActivityTrackerChange: function (e) {
								e.isInUseByAnotherUser()
									? this.displayActivityTrackerHelpMessage()
									: this.displaySetActivityTrackerConfirmation(e);
							},
							onMessageRemove: function (e, t, i) {
								var n = b().isNumber(t)
										? t
										: parseInt(t.replace(/[^0-9\.]/g, ''), 10),
									a = this.messages.get(n),
									s = !1;
								i && (s = !0),
									a &&
										(s
											? this.messages.removeGroup(
													a.get('deviceId'),
													a.get('groupName'),
													{
														error: function () {
															this.showErrorMessage(),
																e.hideConfirmationPopup();
														}.bind(this),
														success: function () {
															this.handleRemoveSuccess(e, t);
														}.bind(this),
													}
												)
											: a.destroy({
													success: function (i) {
														this.handleRemoveSuccess(e, t, i);
													}.bind(this),
													error: function (t) {
														this.messages.get(t.get('messageId')) ||
															this.messages.add(t),
															this.showErrorMessage(),
															e.hideConfirmationPopup();
													}.bind(this),
												}));
							},
							handleRemoveSuccess: function (e, t, i) {
								if (i) {
									var n = i.get('groupName'),
										a =
											!!n && 0 === this.messages.where({ groupName: n }).length;
									(e.messages = b().reject(e.messages, { messageId: t })),
										e.hideMessageItem(t, a, e.updateMessagesCount.bind(e));
								} else {
									var s = this.groupByDeviceId(),
										r = this.prepareForOutput(s);
									(e.messages = r[e.device.get('deviceId')] || []),
										e.hideMessageItem(t, !1, e.updateMessagesCount.bind(e));
								}
								this.queueCount && this.queueCount.fetch(),
									e.hideConfirmationPopup();
							},
							displayActivityTrackerHelpMessage: function () {
								new Kn.A({
									modalTitle: L.A.localize(
										'device.set.activity.tracker.MAT'
									).toUpperCase(),
									message: L.A.localize('set.up.activity.tracker.message.MAT'),
									confirmationTextKey: 'ok',
									showCancelButton: !1,
									stopClickPropagationOnModalClick: !0,
									onSaveButtonClicked: function (e) {
										return !0;
									},
								}).render();
							},
							displaySetActivityTrackerConfirmation: function (e) {
								var t = new zn.A({}),
									i = new qn.A({
										view: t,
										showHeader: !0,
										modalTitle: L.A.localize('device.set.activity.tracker.MAT'),
										stopClickPropagationOnModalClick: !0,
									});
								this.listenTo(
									i,
									qn.A.Events.ON_SET,
									this.onSetActiveButtonClicked.bind(this, e)
								),
									i.render();
							},
							onSetActiveButtonClicked: function (e) {
								e &&
									sa.A.setPrimaryActivityTracker(
										e.get('deviceId'),
										'true',
										this.preferredTrackerUpdateSuccess.bind(this),
										this.preferredTrackerUpdateFail.bind(this)
									);
							},
							preferredTrackerUpdateSuccess: function () {
								this.hideErrorMessage(), this.load();
							},
							preferredTrackerUpdateFail: function () {
								this.showErrorMessage();
							},
							getTrackerCount: function () {
								var e = 0;
								return (
									b().each(
										this.devices.models,
										function (t) {
											(t.get('wellness') || t.get('hybrid')) &&
												((t.get('activeInd') !== Mn.A.ACTIVE &&
													t.get('activeInd') !== Mn.A.ACTIVE_NOT_TRACKING) ||
													e++);
										},
										this
									),
									e
								);
							},
							groupByDeviceId: function () {
								var e = b().sortBy(this.messages.toJSON(), function (e) {
									return e.priority;
								});
								return (
									(e = this.groupByMulti(e, ['deviceId', 'groupName'])),
									b().toArray(e)
								);
							},
							groupByMulti: function (e, t) {
								if (!t.length) return e;
								var i = b().groupBy(e, t[0]),
									n = t.slice(1);
								for (var a in i) i[a] = this.groupByMulti(i[a], n);
								return i;
							},
							prepareForOutput: function (e) {
								for (var t = {}, i = 0; i < e.length; i++) {
									var n = [];
									for (var a in e[i]) n.push(a);
									n.sort();
									for (var s = [], r = null, o = 0; o < n.length; o++) {
										var l = e[i][n[o]];
										l = b().sortBy(l, function (e) {
											return e.priority;
										});
										for (var c = 0; c < l.length; c++)
											if (!l[c].hidden) {
												var d = l[c],
													u =
														'null' !== d.groupName &&
														null !== d.groupName &&
														void 0 !== d.groupName,
													p = u && 0 == c,
													y = u && c > 0,
													h = u
														? d.groupName.split(' ').join('_') + d.deviceId
														: '',
													g = !0;
												if ((r || (r = d.deviceId), p)) {
													var m = {
														deviceName: d.deviceName,
														applicationKey: d.applicationKey,
														deviceId: d.deviceId,
														messageId: '__' + d.messageId,
														wifiSetup: d.wifiSetup,
														groupName: d.groupName,
														hasGroupName: !0,
														isGroupHeading: !0,
														isGroupChild: !1,
														groupNameClass: h,
														displaySendButton: !1,
														messageType: d.messageType,
														showDeleteButton: g,
														metaData: d.metaData,
														groupHeadingText: '',
														showMessageType: !0,
													};
													this.addMessageTypeToQueue(m),
														'software-update' === d.messageType
															? (m.groupName = L.A.localize(
																	'queue.software.header'
																))
															: d.groupName &&
																  d.groupName.toLowerCase().indexOf('strava-') >
																		-1
																? ((m.groupHeadingText =
																		'<span class="sync-type">' +
																		L.A.localize(
																			d.groupName
																				.toLowerCase()
																				.indexOf('running') > -1
																				? 'running'
																				: 'cycling'
																		) +
																		'</span>'),
																	(m.groupName = L.A.localize(
																		'strava_live_segments',
																		''
																	)))
																: d.groupName &&
																	  'CALENDAR_SYNC' ===
																			d.groupName.toUpperCase()
																	? ((m.groupHeadingText = L.A.localize(
																			'queue_calendar_sync_info'
																		)),
																		(m.groupName =
																			L.A.localize('queue_calendar')),
																		(m.showDeleteButton = !1),
																		(m.showMessageType = !1),
																		(m.connectUrl =
																			me.default.url('/calendar')))
																	: 'schedules' === d.messageType
																		? (m.displayMessageType = L.A.localize(
																				'queue.training.plan'
																			))
																		: 'pace-band' === d.messageType &&
																			((m.groupName =
																				L.A.localize('queue.pacepro')),
																			(m.connectUrl =
																				me.default.url('/pacepro'))),
														(p = !1),
														(y = !0),
														s.push(m);
												}
												('segment-leaders' !== d.messageType &&
													'segment-leaders-running' !== d.messageType) ||
													(g = !1),
													'software-update' === d.messageType
														? (d.useSyncUpdateClass =
																1 === d.softwareUpdateCount)
														: (d.useSyncUpdateClass = !1),
													(d.showDeleteButton = g),
													(d.hasGroupName = u),
													(d.isGroupHeading = p),
													(d.isGroupChild = y),
													(d.groupNameClass = h),
													(d.displaySendButton = true),
													(d.appSupport = this.supportApps(d)),
													this.addMessageTypeToQueue(d),
													!0 === d.appSupport &&
														(d.appStoreUrl = Gn.A.getAppStoreUrl(
															this.getDevice(d)
														)),
													s.push(d);
											}
									}
									t[r] = s;
								}
								return t;
							},
							supportApps: function (e) {
								var t = !1,
									i = this.getDevice(e);
								return null != i && (t = i.get('appSupport')), t;
							},
							getDevice: function (e) {
								for (var t = null, i = 0; i < this.devices.length; i++)
									if (e.deviceId == this.devices.models[i].get('deviceId')) {
										t = this.devices.models[i];
										break;
									}
								return t;
							},
							addMessageTypeToQueue: function (e) {
								if ('workouts' === e.messageType)
									(e.displayMessageType = L.A.localize('queue.workout')),
										(e.connectUrl = me.default.url(
											'/workout/' +
												e.metaData.messageUrl.substring(
													e.metaData.messageUrl.lastIndexOf('/') + 1
												)
										));
								else if ('activities' === e.messageType)
									(e.displayMessageType = L.A.localize('queue.activity')),
										(e.connectUrl = me.default.url(
											'/activity/' +
												e.messageUrl.substring(
													e.messageUrl.lastIndexOf('/') + 1
												)
										));
								else if ('courses' === e.messageType)
									e.messageUrl.indexOf(
										'course-service/course/copyFromActivity'
									) > -1
										? ((e.displayMessageType = L.A.localize('queue.activity')),
											(e.connectUrl = me.default.url(
												'/activity/' +
													e.messageUrl.substring(
														e.messageUrl.indexOf('fit/') + 4,
														e.messageUrl.lastIndexOf('/')
													)
											)))
										: ((e.displayMessageType = L.A.localize('queue.courses')),
											(e.connectUrl = me.default.url(
												'/course/' +
													e.messageUrl.substring(
														e.messageUrl.indexOf('fit/') + 4,
														e.messageUrl.lastIndexOf('/')
													)
											)));
								else if ('personal-records' === e.messageType)
									(e.displayMessageType = L.A.localize('queue.pr')),
										(e.messageName = L.A.localize('queue.pr')),
										(e.connectUrl = me.default.url('/personal-records'));
								else if ('schedules' === e.messageType)
									(e.displayMessageType = L.A.localize('queue.workout')),
										(e.connectUrl = me.default.url('/calendar')),
										'Schedule' == e.messageName
											? (e.messageName = L.A.localize(
													'queue_training_schedule'
												))
											: 'Configuration' == e.messageName &&
												(e.messageName = L.A.localize('queue.configuration'));
								else if (
									'settings' === e.messageType ||
									'user-profile' === e.messageType
								)
									(e.displayMessageType = L.A.localize('queue.settings')),
										(e.connectUrl = me.default.url('/settings/userSettings')),
										'settings' === e.messageType
											? (e.messageName = L.A.localize(
													'queue.personal.information'
												))
											: 'user-profile' === e.messageType &&
												(e.messageName = L.A.localize(
													'queue.personalInf.training.zones'
												));
								else if ('goals' === e.messageType)
									(e.displayMessageType = L.A.localize('queue.goals')),
										(e.messageName = L.A.localize('queue.goals')),
										(e.connectUrl = me.default.url('/goals'));
								else if ('software-update' === e.messageType) {
									if (e.metaData.dataType.indexOf('Chipset') > -1)
										e.messageName = e.metaData.productName;
									else if (
										'Other' === e.metaData.dataType ||
										'Firmware' === e.metaData.dataType
									)
										e.messageName = L.A.localize(
											'fileType.version',
											e.metaData.productName,
											e.metaData.version
										);
									else if ('Text' === e.metaData.dataType) {
										var t = e.metaData.productName.split(',');
										3 == t.length
											? (e.messageName = t[0] + ', ' + t[2])
											: (e.messageName = e.metaData.productName);
									} else
										console.log('Unexpected dataType ' + e.metaData.dataType),
											(e.messageName = L.A.localize(
												'fileType.version',
												e.metaData.productName,
												e.metaData.version
											));
									(e.displayMessageType = ''), (e.connectUrl = '#');
								} else
									'language-settings' === e.messageType
										? ((e.displayMessageType = L.A.localize(
												'queue.device.settings'
											)),
											(e.connectUrl = me.default.url('/settings/device')))
										: 'sports' === e.messageType
											? ((e.connectUrl = me.default.url(
													'/device/' + e.deviceId + '?zones=true'
												)),
												(e.displayMessageType = L.A.localize('queue.settings')),
												'Power Curve' === e.messageName
													? ((e.connectUrl = me.default.url(
															'/report/' +
																oa.A.ACTIVITY_POWER_CURVE_CYCLING.id +
																'/cycling/last_four_weeks'
														)),
														(e.messageName = L.A.localize('power_curve_title')),
														(e.displayMessageType =
															L.A.localize('reports_title')))
													: e.messageUrl.toLowerCase().indexOf('/powerzones') >
														  -1
														? (e.messageName = L.A.localize('power.zones'))
														: e.messageUrl.toLowerCase().indexOf('/default') >
															  -1
															? (e.messageName =
																	L.A.localize('queue.hrz.other'))
															: e.messageUrl.toLowerCase().indexOf('/cycling') >
																  -1
																? e.messageUrl
																		.toLowerCase()
																		.indexOf('?subsport-type=generic') > -1
																	? (e.messageName =
																			L.A.localize('queue.options.bike'))
																	: (e.messageName =
																			L.A.localize('queue.hrz.cycling'))
																: e.messageUrl
																			.toLowerCase()
																			.indexOf('/swimming') > -1
																	? (e.messageName =
																			L.A.localize('queue.hrz.swimming'))
																	: e.messageUrl
																				.toLowerCase()
																				.indexOf('/walking') > -1
																		? (e.messageName =
																				L.A.localize('queue.options.walk'))
																		: e.messageUrl
																					.toLowerCase()
																					.indexOf('/cardio') > -1
																			? (e.messageName = L.A.localize(
																					'queue.options.cardio'
																				))
																			: e.messageUrl
																					.toLowerCase()
																					.indexOf('/running') > -1 &&
																				(-1 !=
																				e.messageUrl.indexOf('device-service')
																					? (-1 !=
																						e.applicationKey.indexOf('edge')
																							? (e.messageName = L.A.localize(
																									'device.settings.options.Cycling'
																								))
																							: e.messageUrl
																										.toLowerCase()
																										.indexOf(
																											'?subsport-type=treadmill'
																										) > -1
																								? (e.messageName = L.A.localize(
																										'queue.options.runIndoor'
																									))
																								: 0 ===
																											e.applicationKey.indexOf(
																												'forerunner35'
																											) ||
																									  0 ===
																											e.applicationKey.indexOf(
																												'foreathlete35'
																											)
																									? (e.messageName =
																											L.A.localize(
																												'queue.options.runOutdoor'
																											))
																									: (e.messageName =
																											L.A.localize(
																												'queue.options.running'
																											)),
																						(e.connectUrl = me.default.url(
																							'/device/' + e.deviceId
																						)))
																					: (e.messageName =
																							L.A.localize(
																								'queue.hrz.running'
																							))))
											: 'device-settings' === e.messageType &&
												  'auto-sync' === e.messageName
												? ((e.messageName = L.A.localize('queue.auto.sync')),
													(e.displayMessageType = L.A.localize(
														'queue.device.settings'
													)),
													(e.connectUrl = '#'))
												: 'device-settings' === e.messageType
													? ((e.displayMessageType = L.A.localize(
															'queue.device.settings'
														)),
														(e.connectUrl = me.default.url(
															'/device/' + e.deviceId
														)))
													: 'segment-leaders' === e.messageType ||
														  'segment-leaders-running' === e.messageType
														? e.isGroupHeading
															? (e.messageName = L.A.localize('queue.segments'))
															: (e.groupName &&
																e.groupName.toLowerCase().indexOf('strava-') >
																	-1
																	? ((e.displayMessageType = null),
																		(e.connectUrl = '#'))
																	: (e.displayMessageType =
																			L.A.localize('queue.segment')),
																e.messageUrl.indexOf('strava') > -1
																	? (e.connectUrl = '#')
																	: '#' !== e.connectUrl &&
																		(e.connectUrl = me.default.url(
																			'/segment/' +
																				e.messageUrl.substring(
																					e.messageUrl.lastIndexOf('/') + 1
																				)
																		)))
														: 'golf_club' === e.messageType
															? ((e.messageName =
																	L.A.localize('queue.golf.club')),
																(e.displayMessageType =
																	L.A.localize('queue.golf.club')),
																(e.connectUrl = '#'))
															: 'install_app' === e.messageType
																? ((e.displayMessageType =
																		this.updateMessageType(
																			e.metaData.appDetails.type,
																			e.metaData.appDetails.developerName
																		)),
																	(e.connectUrl = Gn.A.getAppUrl(e)))
																: 'pace-band' === e.messageType
																	? (e.connectUrl = me.default.url(
																			`/pacepro/edit/${e.metaData.metaDataId}`
																		))
																	: 'sporting-event' === e.messageType
																		? (e.connectUrl =
																				me.default.url('/calendar'))
																		: (console.log(
																				'Unknown message type: ' + e.messageType
																			),
																			(e.displayMessageType = ''),
																			(e.connectUrl = '#'));
							},
							updateMessageType: function (e, t) {
								var i = '';
								switch (e) {
									case 'watchface':
										i = L.A.localize('queue.venu.faces', t);
										break;
									case 'datafield':
										i = L.A.localize('queue.venu.data.fields', t);
										break;
									case 'widget':
										i = L.A.localize('queue.venu.widgets', t);
										break;
									case 'application':
										i = L.A.localize('queue.venu.apps', t);
								}
								if (null === t || 0 === ua.trim(t).length) {
									var n = i,
										a = i.indexOf('('),
										s = i.indexOf(')');
									(i = i.substring(0, a)), (i += n = n.substring(s + 1));
								}
								return i;
							},
							showErrorMessage: function () {
								this.queuePoller && this.queuePoller.stopPolling(),
									this.$('#queueNotification-error').show();
							},
							hideErrorMessage: function () {
								this.$('#queueNotification-error').hide();
							},
							closeLists: function () {
								this.$('.sync-list').hide();
							},
							handleQueueCount: function (e) {
								var t = e.get('count');
								this.trigger(pa.REFRESH_COUNT, t);
							},
						});
				ya.Events = pa;
				const ha = ya;
				var ga = i(659990),
					ma = i(528889),
					Aa = i.n(ma),
					_a = i(276052),
					Ea = i(823012),
					Ta = i.n(Ea),
					Ca = i(509728);
				const Sa = (e) => {
					const {
							displayName: t,
							shouldModalOpen: i,
							onCloseModal: n,
							mutualConnectionsCount: a,
							store: s,
						} = e,
						[r, o] = (0, c.useState)(i);
					return (0, p.jsx)(Ki.Kq, {
						store: s,
						children: (0, p.jsx)(Ca.A, {
							displayName: t,
							isModalOpen: r,
							onCloseModal: () => {
								o(!1), n();
							},
							mutualConnectionsCount: a,
							forceCloseOnNavigation: !0,
						}),
					});
				};
				Sa.propsType = {
					displayName: Ta().string.isRequired,
					shouldModalOpen: Ta().bool.isRequired,
					onCloseModal: Ta().func,
					mutualConnectionsCount: Ta().number.isRequired,
				};
				const Ia = Sa;
				var va = i(471270);
				const fa = ({ store: e, ...t }) =>
					(0, p.jsx)(Ki.Kq, { store: e, children: (0, p.jsx)(va.A, { ...t }) });
				var Da = i(293038),
					Na = i(668712);
				const Ra = (0, on.CI)(['news_feed', 'common'])((e) =>
						(0, d.createPortal)(
							(0, p.jsxs)(
								Na.lG,
								{
									open: e.open,
									onClose: e.onClose,
									children: [
										(0, p.jsx)(Na.L3, {
											children: (0, p.jsx)(sn.A, {
												ns: 'news_feed',
												content: 'comment_limit_reached_title',
											}),
										}),
										(0, p.jsx)(Na.Cf, {
											children: (0, p.jsx)(sn.A, {
												ns: 'news_feed',
												content: 'comment_limit_reached_desc',
											}),
										}),
										(0, p.jsx)(Na.ii, {
											children: (0, p.jsx)(Na.$n, {
												onClick: e.onClose,
												children: (0, p.jsx)(sn.A, {
													ns: 'common',
													content: 'button_ok',
												}),
											}),
										}),
									],
								},
								e.key
							),
							document.querySelector('.connect-container')
						)
					),
					ba = (0, on.CI)(['news_feed', 'common'])((e) =>
						(0, d.createPortal)(
							(0, p.jsxs)(
								Na.lG,
								{
									open: e.open,
									onClose: e.onClose,
									children: [
										(0, p.jsx)(Na.L3, {
											children: (0, p.jsx)(sn.A, {
												ns: 'news_feed',
												content: 'like_limit_reached_title',
											}),
										}),
										(0, p.jsx)(Na.Cf, {
											children: (0, p.jsx)(sn.A, {
												ns: 'news_feed',
												content: 'like_limit_reached_desc',
											}),
										}),
										(0, p.jsx)(Na.ii, {
											children: (0, p.jsx)(Na.$n, {
												onClick: e.onClose,
												children: (0, p.jsx)(sn.A, {
													ns: 'common',
													content: 'button_ok',
												}),
											}),
										}),
									],
								},
								e.key
							),
							document.querySelector('.connect-container')
						)
					),
					La = () => {
						const e = (0, Ki.wA)(),
							{ open: t, errorType: i } = (0, Ki.d4)(Da.xs),
							n = () => {
								e((0, Xi.j0T)({ open: !1, errorType: i }));
							};
						return 'comment' === i
							? (0, p.jsx)(Ra, { open: t, onClose: n })
							: 'like' === i
								? (0, p.jsx)(ba, { open: t, onClose: n })
								: null;
					},
					Pa = (e) => {
						const { store: t } = e;
						return (0, p.jsx)(Ki.Kq, {
							store: t,
							children: (0, p.jsx)(La, {}),
						});
					};
				i(66608);
				var Oa = i(998813),
					wa = [
						{
							selector: '.connect-iq',
							label: 'garmin.app.store',
							placement: 'bottom',
						},
						{
							selector: '.upload-import',
							label: 'upload_or_import_activity',
							placement: 'bottom',
						},
						{
							selector: '.notifications',
							label: 'requests_and_notifications',
							placement: 'bottom',
						},
						{
							selector: '.device-sync',
							label: 'device_and_sync_status',
							placement: 'bottomLeft',
						},
						{
							selector: '.user-profile',
							label: 'profile_and_account',
							placement: 'bottomLeft',
						},
					];
				const Fa = I().View.extend({
					events: {
						'click .main-nav-toggle': 'toggleSidebar',
						'click .js-import-data': 'handleNavigationLink',
						'click .js-how-to-sync': 'handleNavigationLink',
						'click .logo': 'handleNavigationLink',
						'click .notifications .header-nav-link':
							'onNotificationTriggerClicked',
						'click .device-sync .header-nav-link': 'onDeviceSyncTriggerClicked',
						'click .header-nav-link': 'handleDropdownClick',
						'click .header-nav-menu': 'handleDropdownContentClick',
					},
					template: b().template(Aa()),
					initialize: function (e) {
						(this.notificationPollRate =
							window.queueNotificationTimeout &&
							!isNaN(window.queueNotificationTimeout)
								? window.queueNotificationTimeout
								: e.pollRate),
							(this.deviceNotificationPollRate =
								window.queuePollRate && !isNaN(window.queuePollRate)
									? window.queuePollRate
									: e.pollRate),
							(this.userProfile = e.userProfile),
							(this.userPreferences = e.userPreferences),
							(this.messageAndDevicesNotificationsEnabled =
								e.messageAndDevicesNotificationsEnabled),
							(this.groupInviteSpammingDays = e.groupInviteSpammingDays),
							(this.isProductSupportMode = (0, Te.I7)()),
							(this.hideDeviceQueue = e.hideDeviceQueue),
							Rt.on(
								Rt.Events.ON_MAX_CONNECTIONS_MODAL_SHOWED,
								this.showMaxConnectionsModal,
								this
							),
							Rt.on(
								Rt.Events.ON_MUTUAL_CONNECTIONS_MODAL_SHOWED,
								this.showMutualConnectionsModal,
								this
							),
							Yt.on(
								Yt.Events.ON_GROUP_REQUEST_ERROR,
								this.showGroupErrorModal,
								this
							);
					},
					showMaxConnectionsModal: function ({
						isUserConnectionsOverLimitation: e,
						nameToDisplay: t,
					}) {
						'string' === typeof t &&
							'boolean' === typeof e &&
							(document
								.getElementsByClassName('header')[0]
								.classList.add('show-modal'),
							(this.maxConnectionsDialog = new Yi.A()),
							this.maxConnectionsDialog.renderComponent(
								_a.A,
								this.$('.max-connections-modal-placeholder')[0],
								{
									isUserConnectionsOverLimitation: e,
									nameToDisplay: t,
									shouldModalOpen: !0,
									onCloseModal: function () {
										this.maxConnectionsDialog.removeComponent(),
											document
												.getElementsByClassName('header')[0]
												.classList.remove('show-modal');
									}.bind(this),
								}
							));
					},
					showMutualConnectionsModal: function ({
						displayName: e,
						mutualConnectionsCount: t,
					}) {
						'undefined' !== typeof e &&
							null !== e &&
							'undefined' !== typeof t &&
							null !== t &&
							(document
								.getElementsByClassName('header')[0]
								.classList.add('show-modal'),
							(this.mutualConnectionsModalWrapper = new Yi.A()),
							this.mutualConnectionsModalWrapper.renderComponent(
								Ia,
								this.$('.mutual-connections-modal-placeholder')[0],
								{
									displayName: e,
									shouldModalOpen: !0,
									onCloseModal: function () {
										this.mutualConnectionsModalWrapper.removeComponent(),
											document
												.getElementsByClassName('header')[0]
												.classList.remove('show-modal');
									}.bind(this),
									mutualConnectionsCount: t,
								}
							));
					},
					showGroupErrorModal: function (e) {
						document
							.getElementsByClassName('header')[0]
							.classList.add('show-modal'),
							(this.groupErrorDialog = new Yi.A()),
							this.groupErrorDialog.renderComponent(
								fa,
								this.$('.group-request-error-modal-placeholder')[0],
								{
									open: !0,
									onClose: function () {
										this.groupErrorDialog.removeComponent(),
											document
												.getElementsByClassName('header')[0]
												.classList.remove('show-modal');
									}.bind(this),
									errorType: e,
								}
							);
					},
					render: function () {
						var e = this.template({
							Localizer: L.A,
							url: me.default.url,
							actorAvatarUrl: this.getActorAvatarUrl(),
							isProductSupportMode: this.isProductSupportMode,
						});
						this.$el.html(e),
							this.renderProfileImage(),
							P.A.on(
								'change',
								function () {
									this.renderProfileImage(), this.userPopupMenuView.render();
								},
								this
							),
							(this.notificationsPopupMenuView = new bn({
								pollTimeoutValue: this.notificationPollRate,
								messageAndDevicesNotificationsEnabled:
									this.messageAndDevicesNotificationsEnabled,
								el: this.$('.notifications .header-nav-menu'),
								displayName: this.userProfile.get('displayName'),
								viewerSocialProfile: P.A,
								userProfile: this.userProfile,
								userPreferences: this.userPreferences,
								openNotificationCallback: this.openNotificationList.bind(this),
								groupInviteSpammingDays: this.groupInviteSpammingDays,
							})),
							this.notificationsPopupMenuView.loadNotificationCounter(),
							this.notificationsPopupMenuView.render(),
							this.listenTo(
								this.notificationsPopupMenuView,
								bn.Events.REFRESH_COUNT,
								this.refreshNotificationCount,
								this
							),
							this.listenTo(
								this.notificationsPopupMenuView,
								bn.Events.ON_NAVIGATION,
								this.closeDropdowns,
								this
							),
							(this.devicePopupMenuView = new ha({
								pollTimeoutValue: this.deviceNotificationPollRate,
								messageAndDevicesNotificationsEnabled:
									this.messageAndDevicesNotificationsEnabled,
								el: this.$('.device-sync .header-nav-menu'),
								displayName: this.userProfile.get('displayName'),
								userPreferences: this.userPreferences,
								hideDeviceQueue: this.hideDeviceQueue,
							})),
							this.listenTo(
								this.devicePopupMenuView,
								ha.Events.ON_NAVIGATION,
								this.closeDropdowns,
								this
							),
							this.listenTo(
								this.devicePopupMenuView,
								ha.Events.REFRESH_COUNT,
								this.refreshSyncItemsCount,
								this
							),
							this.devicePopupMenuView.load(),
							(this.userPopupMenuView = new Un({
								el: this.$('.user-profile .header-nav-menu'),
								viewerSocialProfile: P.A,
							})),
							this.listenTo(
								this.userPopupMenuView,
								Un.Events.ON_NAVIGATION,
								this.closeDropdowns,
								this
							),
							this.userPopupMenuView.render(),
							this.setupTooltips(),
							(this.openNotifications = !1),
							(this.widgetLimitErrorDialogView = new Yi.A()),
							this.widgetLimitErrorDialogView.renderComponent(
								Pa,
								this.$('.widget-limit-error-dialog')[0],
								{}
							),
							this.listenTo(
								this.devicePopupMenuView,
								ha.Events.SET_DEVICES_SYNC_DATA,
								this.setupDeviceSyncBanner,
								this
							);
					},
					getActorAvatarUrl: function () {
						if (
							!(0, Te.aO)() ||
							this.isProductSupportMode ||
							!localStorage.getItem('actorProfileImage')
						)
							return null;
						return JSON.parse(localStorage.getItem('actorProfileImage'))
							.profileImageMedium;
					},
					refreshNotificationCount: function (e) {
						var t = this.$('.notifications .header-nav-link .new-items-alert');
						e > 0 ? t.show() : t.hide();
					},
					onNotificationTriggerClicked: function (e) {
						Oa(e.currentTarget).hasClass('active')
							? this.notificationsPopupMenuView.handleDropdownClosed()
							: (this.notificationsPopupMenuView.load(),
								Dt.A.push({
									event: 'track_event',
									category: 'Top Header Bar Events',
									action: 'Inbox Toggle Open',
								}));
					},
					onDeviceSyncTriggerClicked: function (e) {
						Oa(e.currentTarget).hasClass('active') ||
							(this.devicePopupMenuView.closeLists(),
							this.devicePopupMenuView.load());
					},
					refreshSyncItemsCount: function (e) {
						var t = this.$('.device-sync .header-nav-link .new-items-alert');
						e > 0 ? t.show() : t.hide();
					},
					renderProfileImage: function () {
						var e = me.default.url('/profile/' + P.A.get('displayName')),
							t = P.A.get('fullName') || P.A.get('displayName'),
							i = P.A.getProfileImageUrlMedium();
						this.$('.user-profile .header-nav-link')
							.attr('href', e)
							.find('.avatar')
							.attr('src', i)
							.attr('alt', t);
					},
					setupTooltips: function () {
						b().each(
							wa,
							function (e) {
								new ga.A({
									el: this.$(e.selector + ' .header-nav-link'),
									content: L.A.localize(e.label),
									placement: e.placement,
								});
							},
							this
						),
							this.setupEvents();
					},
					hideTooltips: function () {
						Oa('.tooltip').hide();
					},
					handleNavigationLink: function (e) {
						e.ctrlKey ||
							e.metaKey ||
							(e.preventDefault(),
							me.default.anchorTagHandler(e) ||
								(window.location.href = e.currentTarget.href));
					},
					handleDropdownClick: function (e) {
						this.$('.header-nav-link')
							.not(e.currentTarget)
							.removeClass('active'),
							this.hideTooltips(),
							Oa(e.currentTarget).toggleClass('active'),
							e.stopPropagation(),
							e.stopImmediatePropagation(),
							e.preventDefault();
					},
					handleDropdownContentClick: function (e) {
						e.stopPropagation();
					},
					setupEvents: function () {
						Oa(document).on(
							'click',
							function (e) {
								let t = Oa(e.target).attr('class');
								if ('undefined' !== typeof t) {
									let e = t.toString();
									if (
										0 === e.length ||
										e.includes('Dialog_dialog') ||
										e.includes('ConnectionDialog_itemContainer') ||
										e.includes('Button_btn')
									)
										return;
								}
								this.closeDropdowns();
							}.bind(this)
						),
							I().history.on('route', this.closeDropdowns.bind(this));
					},
					closeDropdowns: function () {
						this.openNotifications ||
							this.$('.header-nav-link').removeClass('active'),
							(this.openNotifications = !1),
							this.notificationsPopupMenuView.handleDropdownClosed();
					},
					openNotificationList: function () {
						this.openNotifications = !0;
					},
					toggleSidebar: function () {
						this.trigger(He.Events.EXPAND_COLLAPSE),
							this.pushEventToAnalytics();
					},
					pushEventToAnalytics() {
						let e = Oa('body').hasClass('minimize-main-nav');
						Dt.A.push({
							event: 'track_event',
							category: 'Main Nav Menu',
							action: 'Toggle Open or Closed',
							label: e ? 'Closed' : 'Opened',
						});
					},
				});
				var ka = i(352406),
					Ua = i(428394),
					Ma = i(993980),
					Ga = i(657771),
					xa = i.n(Ga),
					Ba = i(537565),
					Ha = i.n(Ba),
					Va = i(540708),
					Wa = i(394188),
					Ja = i(619123),
					Ya = i(998813),
					$a = {
						desc_segment_widget: {
							imageName: 'segments-strava-widget.png',
							descKey: 'desc_segment_strava_widget',
							descKeyArgs: [ka.A.getFullLocale(v.A.get('preferredLocale'))],
							truthTest: function () {
								return (
									this.stravaOptionsFeature &&
									this.stravaOptionsFeature.get('userOptionType') ===
										Ua.A.USER_OPTION_TYPES.OPT_IN
								);
							},
						},
					},
					ja = {
						ON_ADD_WIDGET_CLICKED: 'ON_ADD_WIDGET_CLICKED',
						ON_WIDGET_LIST_HIDDEN: 'ON_WIDGET_LIST_HIDDEN',
					},
					Ka = I()
						.View.extend(oe.A)
						.extend({
							template: b().template(xa()),
							className: 'nav-widgets-container',
							events: {
								'click .widget-add': 'onAddWidgetClicked',
								'click .nav-widgets-cancel': 'toggleWidgetsList',
							},
							initialize: function (e) {
								(this.displayName = e.displayName),
									(this.widgetDefinitions = e.widgetDefinitions),
									(this.stravaOptionsFeature = new Ua.A([])),
									(this.usageIndicators = new Y.A()),
									(this.widgetMenuItemTemplate = b().template(Ha())),
									(this.ecgRolePreference = new q.A({ key: se.jF })),
									(this.ecgEnabled = new B.A({ key: Ja.Sh })),
									(this.showActiveRaceWidget = new q.A({ key: se.EO })),
									(this.userBiometrics = U.A),
									I().history.on('route', this.hideWidgetsList, this),
									this.handleEscapeKeyPress(),
									(this.userInUS = !0),
									(this.showAllDayPulseOx = e.showAllDayPulseOx),
									(this.showRespiration = e.showRespiration),
									(this.showSolarIntensity = e.showSolarIntensity),
									(this.userSettings = e.userSettings),
									(this.mctWidget = null),
									(this.pregnancyWidget = null),
									(this.sleepWidget = null);
							},
							provideDependencies: function (e) {
								e.addModel({ model: this.stravaOptionsFeature, required: !0 }),
									e.addModel({ model: this.usageIndicators, required: !0 }),
									e.addModel({ model: this.ecgRolePreference, required: !0 }),
									e.addModel({
										model: this.showActiveRaceWidget,
										required: !0,
									}),
									(0, re.b)(se.jF, P.A.get('userRoles')) ||
										e.addModel({ model: this.ecgEnabled, required: !0 });
							},
							onDependenciesLoaded: function () {
								ue.A.getUserLocation(
									function (e) {
										var t = 'US' === (e.countryCode || !1);
										(this.userInUS = t), this.render();
									}.bind(this)
								),
									(this.hasPulseOxAllDayCapableDevice =
										this.usageIndicators.hasCurrentOrHistoricalIndicator(
											'device',
											'hasPulseOxAllDayCapableDevice'
										)),
									(this.hasRespirationCapableDevice =
										this.usageIndicators.hasCurrentOrHistoricalIndicator(
											'device',
											'hasRespirationCapableDevice'
										)),
									(this.hasHealthSnapshotCapableDevice =
										this.usageIndicators.hasCurrentOrHistoricalIndicator(
											'device',
											'hasHealthSnapshotCapableDevice'
										)),
									(this.hasTrainingReadinessCapableDevice =
										this.usageIndicators.hasCurrentOrHistoricalIndicator(
											'device',
											'hasTrainingReadinessCapableDevice'
										)),
									this.listenTo(this.widgetDefinitions, 'update', function () {
										this.renderWidgetMenuItems();
									});
							},
							render: function () {
								return (
									this.$el.html(this.template({ Localizer: L.A })),
									this.renderWidgetMenuItems(),
									this
								);
							},
							renderWidgetMenuItems: function () {
								if (this.widgetDefinitions.length) {
									let e = this.$('.nav-widgets-list');
									if (
										((this.mctWidget = this.widgetDefinitions.findWhere({
											title_key: 'title_menstrualCycleTracking_widget',
										})),
										(this.sleepWidget = this.widgetDefinitions.findWhere({
											title_key: 'title_sleep_widget',
										})),
										this.mctWidget)
									) {
										let e = this.mctWidget.toJSON();
										(this.pregnancyWidget = new (I().Model)({
											...e,
											title_key: 'label_pregnancy',
											id: Math.random(),
										})),
											this.widgetDefinitions.add(this.pregnancyWidget, {
												silent: !0,
											});
									}
									(this.widgetDefinitions.comparator =
										this.widgetDefinitionsComparator),
										this.widgetDefinitions.sort(),
										this.widgetDefinitions.each(function (t) {
											for (var i in $a)
												i &&
													$a[i] &&
													t &&
													t.get('desc_key') === i &&
													$a[i].truthTest.call(this) &&
													$a[i];
											this.canLoadWidgetdefinition(t) &&
												e.append(
													this.widgetMenuItemTemplate({
														name: L.A.localize(t.get('title_key')),
														linkUrl: me.default.url(t.get('linkUrl') || ''),
														widgetDefinitionId: t.get('id'),
													})
												);
										}, this);
								}
							},
							onAddWidgetClicked: function (e) {
								if (
									(e.preventDefault(), Ya('body').hasClass('show-widget-nav'))
								) {
									let t = Ya(e.currentTarget).data('widgetDefinitionId');
									this.pregnancyWidget &&
										+t === this.pregnancyWidget.get('id') &&
										(t = this.mctWidget.get('id')),
										this.sleepWidget &&
											t === this.sleepWidget.get('id') &&
											(0, Va.J)('Added Sleep Widget'),
										this.trigger(ja.ON_ADD_WIDGET_CLICKED, t),
										this.hideWidgetsList();
								}
							},
							toggleWidgetsList: function () {
								Ya('body').hasClass('show-widget-nav') ||
									(this.isPregnantCycleType() &&
									this.mctWidget &&
									this.pregnancyWidget
										? (this.$('.nav-widgets-list')
												.find(
													`[data-widget-definition-id='${this.mctWidget.get('id')}']`
												)
												.hide(),
											this.$('.nav-widgets-list')
												.find(
													`[data-widget-definition-id='${this.pregnancyWidget.get('id')}']`
												)
												.show())
										: this.mctWidget &&
											this.pregnancyWidget &&
											(this.$('.nav-widgets-list')
												.find(
													`[data-widget-definition-id='${this.pregnancyWidget.get('id')}']`
												)
												.hide(),
											this.$('.nav-widgets-list')
												.find(
													`[data-widget-definition-id='${this.mctWidget.get('id')}']`
												)
												.show())),
									Ya('body').toggleClass('show-widget-nav');
							},
							hideWidgetsList: function () {
								Ya('body').removeClass('show-widget-nav'),
									this.trigger(ja.ON_WIDGET_LIST_HIDDEN);
							},
							isPregnantCycleType() {
								let e = !1;
								return (
									this.userSettings.has('userMenstrualCycleSettings') &&
										(e =
											this.userSettings.get('userMenstrualCycleSettings')
												.menstrualCycleType === Ma.ou),
									e
								);
							},
							widgetDefinitionsComparator: function (e, t) {
								var i = L.A.localize(e.get('title_key')),
									n = L.A.localize(t.get('title_key'));
								return i.localeCompare(n);
							},
							handleEscapeKeyPress: function () {
								Ya(document).on(
									'keyup',
									function (e) {
										27 === e.keyCode &&
											Ya('body').hasClass('show-widget-nav') &&
											this.hideWidgetsList();
									}.bind(this)
								);
							},
							canLoadWidgetdefinition: function (e) {
								var t = !0;
								return (
									'title_active_widget' === e.get('title_key') &&
										(t =
											'false' !== this.showActiveRaceWidget.get('value') &&
											this.userInUS),
									'title_pulse_ox_acclimation_widget' === e.get('title_key') &&
										(t =
											(!0 === k.A.get('capableEnable') ||
												'ja' === U.A.get('locale')) &&
											this.hasPulseOxAllDayCapableDevice),
									'title_pulse_ox_widget' === e.get('title_key') &&
										(t =
											this.showAllDayPulseOx &&
											(!0 === k.A.get('capableEnable') ||
												'ja' === U.A.get('locale')) &&
											this.hasPulseOxAllDayCapableDevice),
									'title_respiration_widget' === e.get('title_key') &&
										(t =
											this.showRespiration && this.hasRespirationCapableDevice),
									'title_solar_intensity_widget' === e.get('title_key') &&
										(t = this.showSolarIntensity),
									'title_health_snapshot_widget' === e.get('title_key') &&
										(t = this.hasHealthSnapshotCapableDevice),
									'title_ecg_widget' === e.get('title_key') &&
										(t = (0, Wa.VT)(
											this.ecgRolePreference,
											this.ecgEnabled,
											this.usageIndicators
										)),
									'title_training_readiness_widget' === e.get('title_key') &&
										(t = this.hasTrainingReadinessCapableDevice),
									'title_marine_widget' === e.get('title_key') &&
										(t = !(0, Ee.w)()),
									t
								);
							},
						});
				Ka.Events = ja;
				const za = Ka;
				var qa = i(851840),
					Qa = i(616799),
					Xa = i(628873),
					Za = i.n(Xa),
					es = i(998813);
				const ts = I().View.extend({
						events: { 'click .continue-button': 'onContinue' },
						template: b().template(Za()),
						tagName: 'div',
						render: function () {
							P.A.isUserLoggedIn()
								? (this.$el.html(this.template({ Localizer: L.A })),
									(this.privacyContent = new Qa.A({
										el: this.$('.privacy-content-container'),
									})),
									this.listenTo(
										this.privacyContent,
										this.privacyContent.ALL_GRANTED,
										this.hideOverlay
									),
									this.listenTo(
										this.privacyContent,
										this.privacyContent.NOT_DISPLAYING,
										this.hideOverlay
									),
									this.listenTo(
										this.privacyContent,
										this.privacyContent.ENABLE_CONTINUE,
										this.consentChanged
									),
									this.listenTo(
										this.privacyContent,
										this.privacyContent.LOADED,
										this.showContent
									))
								: this.hideOverlay();
						},
						showContent: function () {
							this.$('.overlay-content').show();
						},
						hideOverlay: function () {
							es('.privacy-overlay').remove();
						},
						consentChanged: function (e) {
							e
								? this.$('.continue-button').removeAttr('disabled')
								: this.$('.continue-button').attr('disabled', 'true');
						},
						onContinue: function () {
							this.privacyContent.onContinue();
						},
					}),
					is = I().Model.extend({
						idAttribute: 'app',
						backend: 'gcapi',
						urlRoot: '/info-service/api/system/release-system',
						parse: function (e) {
							if (e) return e[0];
						},
					});
				var ns = i(534720),
					as = i(879739),
					ss = i(289456),
					rs = i(517023),
					os = i(581172);
				class ls extends c.Component {
					hideModal() {
						const { modalState: e } = this.props;
						this.props.dispatch((0, Xi.ASY)({ showFooter: e.showFooter }));
					}
					onButtonClicked(e) {
						const { modalState: t } = this.props;
						('onConfirmationClicked' === e &&
							('onConfirmationClicked' !== e ||
								t.confirmationButtonDisabled)) ||
							'function' !== typeof t[e] ||
							t[e](),
							('onConfirmationClicked' === e && t.confirmationButtonDisabled) ||
								this.hideModal();
					}
					render() {
						const { modalState: e, t: t } = this.props,
							{
								showFooter: i,
								view: n,
								title: a,
								customTitle: s,
								modalId: r,
								customClasses: o,
								customBodyClasses: l,
								showCloseButton: c,
								showCancelButton: d,
								cancelTextKey: u,
								confirmationTextKey: y,
								footerPrimaryButtonClasses: h,
								modalIsOpen: g,
								onConfirmationClicked: m,
								customFooterTemplate: A,
								confirmationButtonDisabled: _,
								backdropClassName: E,
								hideBorder: T,
								largeCloseBtn: C,
								stopClickPropagationOnModalClick: S,
							} = e;
						let I = 'medium',
							v = o;
						return (
							o && o.includes('modal-narrow')
								? ((I = 'small'), (v = o.replace('modal-narrow', '')))
								: o && o.includes('modal-wide')
									? ((I = 'large'), (v = o.replace('modal-wide', '')))
									: o &&
										o.includes('modal-xLarge') &&
										((I = 'xLarge'), (v = o.replace('modal-xLarge', ''))),
							(0, p.jsx)(
								Na.lG,
								{
									open: g,
									closeBtn: c,
									width: I,
									backdropClassName: E,
									hideBorder: T,
									largeCloseBtn: C,
									disableBackdropClick: S,
									onClose: () => this.onButtonClicked('onCloseClicked'),
									children: (0, p.jsxs)('div', {
										className: v,
										children: [
											a || s
												? (0, p.jsx)(Na.L3, { children: a ? t(a) : s })
												: null,
											(0, p.jsx)(Na.Cf, {
												children: (0, p.jsx)('div', {
													className: l,
													children: n,
												}),
											}),
											A
												? (0, p.jsx)(Na.ii, { children: A })
												: i
													? (0, p.jsxs)(Na.ii, {
															children: [
																d
																	? (0, p.jsx)('a', {
																			className: 'btn btn-secondary cancel',
																			'data-dismiss': 'modal',
																			onClick: () =>
																				this.onButtonClicked('onCancelClicked'),
																			children: t(u),
																		})
																	: null,
																'\xa0',
																m
																	? (0, p.jsx)('a', {
																			className: `btn btn-primary js-saveBtn ${h}`,
																			onClick: () =>
																				this.onButtonClicked(
																					'onConfirmationClicked'
																				),
																			disabled: _,
																			children: t(y),
																		})
																	: null,
															],
														})
													: null,
										],
									}),
								},
								r
							)
						);
					}
				}
				ls.defaultProps = { stopClickPropagationOnModalClick: !1 };
				const cs = (0, on.CI)(['main_container'])(
					(0, Ki.Ng)((e) => ({ modalState: (0, os.v)(e) }))(ls)
				);
				class ds extends c.Component {
					render() {
						const { dispatch: e } = this.props;
						return (0, p.jsx)(zi.A, {
							...this.props,
							children: (0, p.jsx)(cs, { dispatch: e }),
						});
					}
				}
				const us = ds;
				class ps extends c.Component {
					constructor(e) {
						super(e),
							(this.renderLanguageDropdown =
								this.renderLanguageDropdown.bind(this)),
							(this.changeLanguage = this.changeLanguage.bind(this));
						const t = jt.A.language.replace('_', '-');
						this.state = {
							showLanguageDropdown: !1,
							languageSelection: hs.find((e) => -1 !== e.locale.indexOf(t)),
						};
					}
					renderLanguageDropdown(e) {
						e.preventDefault();
						const t = !this.state.showLanguageDropdown;
						this.setState({ showLanguageDropdown: t });
					}
					changeLanguage(e) {
						const t = this,
							i = e.replace('-', '_');
						jt.A.changeLanguage(i, () => {
							t.setState({ languageSelection: hs.find((t) => t.locale === e) });
						});
					}
					renderDropdown() {
						const e = this.state.showLanguageDropdown
							? { display: 'block' }
							: { display: 'none' };
						return (0, p.jsx)('ul', {
							id: 'country-selector-dropdown',
							style: e,
							'aria-labelledby': 'dLabel',
							className: 'dropdown dropdown-menu pull-right',
							children: hs.map((e) =>
								(0, p.jsx)(
									'li',
									{
										onClick: () => this.changeLanguage(e.locale),
										children: (0, p.jsx)('a', {
											className: `flag-${e.locale} language-links`,
											'data-locale': e.locale,
											href: `/${e.locale}/signin`,
											children: e.title,
										}),
									},
									e.locale
								)
							),
						});
					}
					render() {
						const { languageSelection: e } = this.state;
						return (0, p.jsx)(zi.A, {
							...this.props,
							children: (0, p.jsx)('div', {
								className: 'header',
								id: 'global-header-wrapper',
								children: (0, p.jsxs)('div', {
									className: 'container',
									children: [
										(0, p.jsxs)('div', {
											className: 'navigation',
											children: [
												(0, p.jsx)('a', {
													className: 'logo pull-left',
													href: '/en-US/',
													title: 'Connect - Powered by Garmin',
													children: (0, p.jsx)(sn.A, {
														ns: 'main_container',
														content: 'main_header_garmin_connect_text',
													}),
												}),
												(0, p.jsxs)('ul', {
													className: 'nav nav-pills pull-left',
													children: [
														(0, p.jsx)('li', {
															className: 'nav-home',
															children: (0, p.jsx)('a', {
																href: '/en-US/',
																children: (0, p.jsx)(sn.A, {
																	ns: 'main_container',
																	content: 'main_header_home_text',
																}),
															}),
														}),
														(0, p.jsx)('li', {
															className: 'nav-features',
															children: (0, p.jsx)('a', {
																href: '/en-US/features/',
																children: (0, p.jsx)(sn.A, {
																	ns: 'main_container',
																	content: 'main_header_features_text',
																}),
															}),
														}),
														(0, p.jsx)('li', {
															className: 'nav-started',
															children: (0, p.jsx)('a', {
																href: '/en-US/start/',
																children: (0, p.jsx)(sn.A, {
																	ns: 'main_container',
																	content: 'main_header_get_started_text',
																}),
															}),
														}),
													],
												}),
											],
										}),
										(0, p.jsx)('div', {
											className: 'utility pull-right',
											children: (0, p.jsxs)('ul', {
												className: 'nav nav-pills',
												children: [
													(0, p.jsx)('li', {
														className: 'nav-signin-container',
														children: (0, p.jsx)('a', {
															className: 'nav-signin',
															href: '/en-US/signin',
															children: (0, p.jsx)(sn.A, {
																ns: 'main_container',
																content: 'main_header_sign_in_text',
															}),
														}),
													}),
													(0, p.jsx)('li', {
														className: 'nav-dash-container',
														children: (0, p.jsx)('a', {
															className: 'nav-dashboard',
															href: '/user-dashboard/check',
															children: (0, p.jsx)(sn.A, {
																ns: 'main_container',
																content: 'main_header_dashboard_text',
															}),
														}),
													}),
													(0, p.jsx)('li', {
														className: 'nav-help-container',
														children: (0, p.jsx)('a', {
															className: 'nav-help',
															href: '/en-US/help',
															children: (0, p.jsx)(sn.A, {
																ns: 'main_container',
																content: 'main_header_help_text',
															}),
														}),
													}),
													(0, p.jsxs)('li', {
														id: 'api-locale-options',
														className: 'country-selector has-menu dropdown',
														onClick: this.renderLanguageDropdown,
														children: [
															(0, p.jsxs)('a', {
																href: '#country-selector-dropdown',
																className: 'dropdown-toggle flag-en-US',
																children: [
																	(null === e || void 0 === e
																		? void 0
																		: e.title) || 'English',
																	(0, p.jsx)('i', {
																		className: 'icon-pointer-down',
																	}),
																],
															}),
															this.renderDropdown(),
														],
													}),
													(0, p.jsx)('li', {
														className: 'nav-signout-container',
														children: (0, p.jsx)('a', {
															className: 'nav-signout',
															href: '/auth/logout',
															children: (0, p.jsx)(sn.A, {
																ns: 'main_container',
																content: 'main_header_sign_out_text',
															}),
														}),
													}),
												],
											}),
										}),
									],
								}),
							}),
						});
					}
				}
				const ys = ps,
					hs = [
						{ locale: 'ko-KR', title: '\ud55c\uad6d\uc5b4' },
						{ locale: 'th-TH', title: '\u0e44\u0e17\u0e22' },
						{ locale: 'in-ID', title: 'Bahasa Indonesia' },
						{ locale: 'ms-MY', title: 'Bahasa Melayu' },
						{ locale: 'cs-CZ', title: '\u010ce\u0161tina' },
						{ locale: 'da-DK', title: 'Dansk' },
						{ locale: 'de-DE', title: 'Deutsch' },
						{ locale: 'en-US', title: 'English' },
						{ locale: 'es-ES', title: 'Espa\xf1ol' },
						{ locale: 'fr-FR', title: 'Fran\xe7ais' },
						{ locale: 'hr-HR', title: 'Hrvatski' },
						{ locale: 'it-IT', title: 'Italiano' },
						{ locale: 'hu-HU', title: 'Magyar' },
						{ locale: 'nl-NL', title: 'Nederlands' },
						{ locale: 'nb-NO', title: 'Norsk' },
						{ locale: 'pl-PL', title: 'Polski' },
						{ locale: 'pt-BR', title: 'Portugu\xeas (Brasil)' },
						{ locale: 'pt-PT', title: 'Portugu\xeas (Portugal)' },
						{ locale: 'sk-SK', title: 'Sloven\u010dina' },
						{ locale: 'sl-SI', title: 'Sloven\u0161\u010dina' },
						{ locale: 'fi-FI', title: 'Suomi' },
						{ locale: 'sv-SE', title: 'Svenska' },
						{ locale: 'iw-IL', title: '\u05e2\u05d1\u05e8\u05d9\u05ea' },
						{
							locale: 'el-GR',
							title: '\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac',
						},
						{
							locale: 'ru-RU',
							title: '\u0420\u0443\u0441\u0441\u043a\u0438\u0439',
						},
						{ locale: 'ja-JP', title: '\u65e5\u672c\u8a9e' },
						{ locale: 'zh-CN', title: '\u7b80\u4f53\u4e2d\u6587' },
						{ locale: 'zh-TW', title: '\u7e41\u9ad4\u4e2d\u6587' },
					];
				function gs(e) {
					const t = (0, Ki.d4)(({ systemReducer: e }) => e.snackbarMessage),
						{ content: i, show: n } = t,
						a = (0, Ki.wA)();
					return (0, p.jsx)(Na.Eg, {
						autoClose: !0,
						onClose: () => {
							a({ type: 'HIDE_SNACKBAR_MESSAGE' });
						},
						open: n,
						children: (0, p.jsx)('div', {
							children: (0, p.jsx)(sn.A, { ns: i.ns, content: i.transKey }),
						}),
					});
				}
				function ms(e) {
					return (0, p.jsx)(Ki.Kq, {
						store: window.ConnectReduxStore,
						children: (0, p.jsx)(gs, {}),
					});
				}
				var As = i(110056),
					_s = {};
				(_s.styleTagTransform = Ai()),
					(_s.setAttributes = yi()),
					(_s.insert = ui().bind(null, 'head')),
					(_s.domAPI = ci()),
					(_s.insertStyleElement = gi());
				oi()(As.A, _s);
				const Es = As.A && As.A.locals ? As.A.locals : void 0;
				class Ts extends c.Component {
					constructor(e) {
						super(e),
							(this.state = {
								consentScriptLoaded: !1,
								analyticsScriptLoaded: !1,
							});
					}
					componentDidMount() {
						this.loadConsentScript();
					}
					componentDidUpdate() {
						this.loadAnalyticsScript();
					}
					render() {
						return (0, p.jsx)('div', {
							id: 'consent',
							children: this.state.consentScriptLoaded
								? this.renderBanner()
								: '',
						});
					}
					renderBanner() {
						return (0, p.jsx)('div', {
							id: 'consent_blackbar',
							className: Es.consentBar,
						});
					}
					loadAnalyticsScript() {
						const e = document.createElement('script'),
							t = this;
						t.state.consentScriptLoaded &&
							!t.state.analyticsScriptLoaded &&
							((e.src =
								'https://tags.tiqcdn.com/utag/garmin/main/prod/utag.js'),
							(e.async = !0),
							(e.type = 'text/javascript'),
							(e.onload = function () {
								t.setState({ analyticsScriptLoaded: !0 });
							}),
							setTimeout(function () {
								document.head.appendChild(e);
							}, 500));
					}
					loadConsentScript() {
						const e = document.createElement('script'),
							t = this;
						(e.src =
							'https://consent.trustarc.com/notice?domain=connect.garmin.com&c=cookie_preferences&js=nj&noticeType=bb&gtm=1&text=true'),
							(e.onload = function () {
								t.setState({ consentScriptLoaded: !0 });
							}),
							document.body.appendChild(e);
					}
				}
				const Cs = Ts;
				var Ss = i(998813),
					Is = i(998813);
				I().View = I().View.extend({
					getUrlVars: function () {
						let e = {};
						return (
							window.location.href.replace(
								/[?&]+([^=&]+)=([^&]*)/gi,
								function (t, i, n) {
									e[i] = n;
								}
							),
							e
						);
					},
				});
				let vs = {
						ON_ADD_WIDGET_CLICKED: 'ON_ADD_WIDGET_CLICKED',
						ON_WIDGET_LIST_HIDDEN: za.Events.ON_WIDGET_LIST_HIDDEN,
						UNAUTHENTICATED_RENDER_COMPLETE: 'UNAUTHENTICATED_RENDER_COMPLETE',
					},
					fs = I()
						.View.extend(oe.A)
						.extend({
							propertyFiles: [
								'/main_container/main_container',
								'/widgets/widgets',
								'/common/common',
								'/validation/validation',
								'/userprofile/userprofile',
								'/send_to_device/send_to_device',
								'/activity-sync/activity-sync',
								'/group/group',
								'/challengewidget/challengewidget',
								'/connections/connections',
								'/activity_types/activity_types',
								'/units/units',
								'/weightwidget/weightwidget',
								'/widgets/widgets',
								'/course/course',
								'/map/map',
								'/trophy_case/trophy_case',
								'/training_plans/training_plans',
								'/goals/goals',
								'/device/device',
								'/personal-record-api/personal-record-api',
								'/daily_summary/daily_summary',
								'/golf_main/golf_main',
								'/event_types/event_types',
								'/workout/workout',
								'/gear_tracking/gear_tracking',
								'/badges-list/badges-list',
								'/badges/badges',
								'/notification/notification',
								'/bodybattery/bodybattery',
								'/insights/insights',
								'/hydration/hydration',
								'/activity-api/activity-api',
								'/menstrual-cycle-tracking/menstrual-cycle-tracking',
								'/settings/settings',
								'/fitness_age/fitness_age',
								'/bloodPressure/bloodPressure',
								'/health_snapshot/health_snapshot',
								'/power_guidance/power_guidance',
								'/ecg/ecg',
								'/news_feed/news_feed',
								'/solar_charge/solar_charge',
								'/jet_lag/jet_lag',
								'/account_sharing/account_sharing',
							],
							events: {
								'click [id^=btnAddToDashboard-]': 'onBtnAddWidgetToDashboard',
								'click .connect-header-link': 'onConnectHeaderClicked',
							},
							initialize: function (e) {
								(this.dashboards = e.dashboards),
									(this.widgetDefinitions = new M([], {
										displayName: this.model.get('displayName'),
									})),
									(this.contextPath = e.contextPath),
									(this.viewerIsAuthenticated = e.viewerIsAuthenticated),
									(this.userProfile = e.userProfile),
									(this.userPreferences = e.userPreferences),
									(this.serviceHost = new W()),
									(this.menuItems = []),
									(this.navCollapsedPref = new B.A({
										key: 'MainNavigation.collapsed',
									})),
									(this.leafletEnabledPref = new B.A({
										key: 'Web.MapView.LeafletEnabled',
									})),
									(this.internalAppsHost = new q.A({
										key: 'internal-apps-host',
									})),
									(this.caloriesAvailablePref = new B.A({
										key: 'DashboardService.EnableCalorieWidget',
									})),
									(this.ecgRolePreference = new q.A({ key: se.jF })),
									(this.ecgEnabled = new B.A({ key: Ja.Sh })),
									(this.gdprFeatureUpload = new Q.A({
										feature: Q.A.Features.UPLOAD,
									})),
									e.viewerIsAuthenticated || (this.viewerIsAuthenticated = !1),
									(this.isError = e.isError),
									this.contextPath || (this.contextPath = '/'),
									(this.dsPage = new q.A({ key: 'ds-routing' })),
									(this.userSettings = new V.A()),
									(this.bodyBattery3Enabled = new q.A({ key: se.Me })),
									(this.sleepVenu3Enabled = new q.A({ key: se.CE })),
									(this.wheelChairRole = new q.A({ key: se.WI })),
									(this.gc5StressPageRole = new q.A({ key: se.YN })),
									(this.gc5HydrationPageRole = new q.A({ key: se.CZ })),
									(this.groupInviteSpammingPref = new q.A({ key: se.Z_ })),
									(this.insightsGDPRConsent = new Q.A({
										feature: Q.A.Features.INSIGHTS,
									})),
									(this.insightsHistory = new ae()),
									(this.messageAndDevicesNotificationsEnabled = new qa.A({
										preferenceKey: 'WebConstants.queue.notification.enabled',
									})),
									(this.hideDeviceQueue = new q.A({ key: se.sc })),
									(this.usageIndicators = new Y.A()),
									(this.newsFeedStatus = new J({
										lastViewedTimeGMT: this.viewerIsAuthenticated
											? v.A.getNewsFeedLastReadTimeFromCookies()
											: new Date().toUTCString(),
									})),
									(this.userBiometrics = U.A),
									(this.apiVersion = new is()),
									(this.forceReloadSidebar = !1),
									(window.onmessage = (e) => {
										'RELOAD_NAVIGATION' === e.data &&
											(() => {
												this.reloadSidebar();
											})();
									});
							},
							showPrivacyOverlay: function () {
								if (window.ERROR_VIEW) Ss('.privacy-overlay').remove();
								else {
									new ts({ el: Ss('.privacy-overlay') }).render();
								}
							},
							onSessionReauthenticateStart: function () {
								this.showWaitCursor();
							},
							onSessionReathenticateFinish: function () {
								this.hideWaitCursor();
							},
							showWaitCursor: function () {
								Is('body').addClass('wait');
							},
							hideWaitCursor: function () {
								Is('body').removeClass('wait');
							},
							onLanguageSelected: function (e) {
								H.A.writeLegacyLocaleCookie(e),
									H.A.updateLegacySessionLocale(e),
									window.location.reload();
							},
							provideDependencies: function (e) {
								this.viewerIsAuthenticated &&
									(e.addModel({ model: x.A, required: !0, countError: !0 }),
									e.addModel({ model: this.widgetDefinitions, required: !0 }),
									e.addEvent({
										model: L.A,
										event: L.A.Events.ON_LOCAL_LOADED,
										required: !0,
									}),
									e.addModel({ model: this.serviceHost, required: !0 }),
									(0, Te.aO)() || e.addModel({ model: G.A, required: !0 }),
									e.addModel({ model: U.A, required: !0 }),
									e.addModel({ model: k.A, required: !0 }),
									e.addModel({
										model: this.caloriesAvailablePref,
										required: !0,
									}),
									e.addModel({ model: this.navCollapsedPref, required: !0 }),
									e.addModel({ model: this.leafletEnabledPref, required: !0 }),
									e.addModel({ model: this.internalAppsHost, required: !0 }),
									e.addModel({ model: this.dsPage, required: !0 }),
									e.addEvent({
										model: e,
										event: j.A.Events.ON_DOCUMENT_READY,
										required: !0,
									}),
									e.addModel({
										model: this.userSettings,
										required: !0,
										countError: !0,
									}),
									e.addModel({
										model: this.messageAndDevicesNotificationsEnabled,
										required: !0,
									}),
									e.addModel({ model: this.gdprFeatureUpload, required: !0 }),
									e.addModel({ model: this.ecgRolePreference, required: !0 }),
									(0, re.b)(se.jF, P.A.get('userRoles')) ||
										e.addModel({ model: this.ecgEnabled, required: !0 }),
									e.addModel({ model: this.bodyBattery3Enabled, required: !0 }),
									e.addModel({ model: this.sleepVenu3Enabled, required: !0 }),
									e.addModel({ model: this.usageIndicators, required: !0 }),
									e.addModel({ model: this.newsFeedStatus, required: !0 }),
									P.A.isWellnessUser() &&
										e.addModel({ model: $, required: !0 }),
									e.addModel({ model: this.wheelChairRole, required: !0 }),
									e.addModel({
										model: this.groupInviteSpammingPref,
										required: !0,
									}),
									e.addModel({ model: this.insightsGDPRConsent, required: !0 }),
									e.addModel({ model: this.hideDeviceQueue, required: !0 }),
									e.addModel({ model: this.gc5StressPageRole, required: !0 }),
									e.addModel({
										model: this.gc5HydrationPageRole,
										required: !0,
									}));
							},
							loadDependencies: function () {
								L.A.setContextPath('/web-translations'),
									L.A.setLocale(this.model.getLocale()),
									this.apiVersion.fetch();
							},
							onDependenciesLoaded: function () {
								P.A.isOutdoorUser() &&
									this.userSettings.get('userData') &&
									w.A.setGolfMeasurementSystem(
										this.userSettings.get('userData').golfDistanceUnit
									),
									(z.leafletEnabled = this.leafletEnabledPref.get('value'));
								let e = this.userSettings.toJSON(),
									t = $.getPrimaryWearableDevice();
								t &&
									Dt.A.push({
										event: 'track_event',
										category: 'Device Usage Event',
										action: t.get('applicationKey'),
										label: t.get('applicationKey'),
									});
								let i = !1,
									n = new j.A();
								ERROR_VIEW ||
									!P.A.isUserLoggedIn() ||
									(0, ns.Y9)(e) ||
									((this.pregnancysnapshots = new as.A()),
									n.addModel({ model: this.pregnancysnapshots, required: !0 }),
									(i = !0));
								const a =
									this.userSettings.getWheelchairModeEnabled() &&
									this.isGdprFeatureOn(this.insightsGDPRConsent);
								if (
									(a &&
										(n.addModel({
											model: this.insightsHistory,
											required: !0,
											countError: !0,
										}),
										(i = !0)),
									i)
								)
									return (
										n.bind(
											j.A.Events.SYNCHRONIZED,
											function () {
												a &&
													((this.menusSetup = !1),
													(this.forceReloadSidebar = !0)),
													this.render();
											},
											this
										),
										void n.fetchModels()
									);
								this.render();
							},
							render: function () {
								this.logAppVersion(), this.showPrivacyOverlay();
								const e = -1 !== window.location.href.indexOf('/embed/');
								if (this.isError || !e) {
									if (
										(this.setupReactModal(),
										this.renderCookieConsentBanner(),
										!this.viewerIsAuthenticated)
									)
										return (
											this.renderLoggedOutHeader(),
											void this.trigger(vs.UNAUTHENTICATED_RENDER_COMPLETE)
										);
									P.A.hasUserExperience() &&
										this.renderBetaTestersSurveyBanner(),
										this.setupMenus(),
										Ss('.main-body').on('scroll.main', function () {
											Ss('.has-date-picker')
												.datepicker('hide')
												.blur()
												.datepicker('widget')
												.hide();
											let e = Ss('.has-time-picker');
											e.length > 0 && e.timepicker('hide').blur();
										});
								}
							},
							renderSnackbarMessage: function () {
								(this.snackbarMessage = new Yi.A()),
									this.snackbarMessage.renderComponent(
										ms,
										Is('.header-snackbar')[0]
									);
							},
							renderBetaTestersSurveyBanner: function () {
								this.betaTestersSurveyBanner ||
									((this.betaTestersSurveyBanner = new ge({
										el: Is('.beta-testers-survey-banner'),
									})),
									this.betaTestersSurveyBanner.load());
							},
							onBtnAddWidgetToDashboard: function (e) {
								this.trigger(vs.ON_ADD_WIDGET_CLICKED, e);
							},
							onConnectHeaderClicked: function (e) {
								this.viewerIsAuthenticated &&
									(e.preventDefault(),
									I().history.navigate('/', { trigger: !0 }));
							},
							setupMenus: function () {
								Is('.no-script').removeClass('no-script'),
									Is('a[href="#"]').click(function (e) {
										e.preventDefault();
									}),
									this.menusSetup
										? console.log('SetupMenus: Menu has already been setup.')
										: ((this.menusSetup = !0),
											this.renderSidebar(),
											this.renderHeaderBar(),
											this.renderWidgetsNav());
							},
							renderLoggedOutHeader: function () {
								(this.header = new Yi.A()),
									this.header.renderComponent(ys, Is('.main-header')[0]);
							},
							renderSidebar: function () {
								if (!this.sidebar || this.forceReloadSidebar) {
									let e = {};
									(P.A.isFitnessUser() || P.A.isWellnessUser()) &&
										(e.hasPulseOxAllDayCapableDevice =
											this.usageIndicators.hasCurrentOrHistoricalIndicator(
												'device',
												'hasPulseOxAllDayCapableDevice'
											)),
										(e.hasRespirationCapableDevice =
											this.usageIndicators.hasCurrentOrHistoricalIndicator(
												'device',
												'hasRespirationCapableDevice'
											)),
										(e.hasBodyBatteryCapableDevice =
											this.usageIndicators.hasCurrentOrHistoricalIndicator(
												'device',
												'hasBodyBatteryCapableDevice'
											)),
										(e.hasFitnessAgeV2CapableDevice =
											this.usageIndicators.hasCurrentOrHistoricalIndicator(
												'device',
												'hasFitnessAgeV2CapableDevice'
											)),
										(e.hasPowerGuidanceCapableDevice =
											this.usageIndicators.hasCurrentOrHistoricalIndicator(
												'device',
												'hasPowerGuidanceCapableDevice'
											)),
										(e.hasCaloriesAvailablePref =
											this.caloriesAvailablePref.get('value'));
									let t = !0;
									-1 ===
										this.widgetDefinitions.indexOf('pulse_ox_acclimation') &&
										(t = !1),
										(e.showAllDayPulseOx = this.showAllDayPulseOx()),
										(e.showRespiration = this.showRespiration()),
										(e.showHydration = this.showHydration()),
										(e.showHealthSnapshot = this.showHealthSnapshot()),
										(e.showECG = (0, Wa.VT)(
											this.ecgRolePreference,
											this.ecgEnabled,
											this.usageIndicators
										));
									let i = (0, K.GK)({ userRoles: P.A.get('userRoles') }),
										n = this.userSettings.toJSON(),
										a = !0;
									if (this.pregnancysnapshots) {
										let t = new Date();
										(0, ss.Sv)(this.pregnancysnapshots.toJSON(), t) &&
											((e.showPregnancy = !0), (a = !1));
									}
									a &&
										(e.showPregnancy =
											this.userSettings.getMenstrualCycleTrackingFeatureData() &&
											this.userSettings.getMenstrualCycleTrackingFeatureData()
												.menstrualCycleType === Ma.ou),
										(e.showMenstrualCycleTracking =
											n && n.userData && (0, K.rg)(i, n) && !e.showPregnancy),
										(e.showJetLag = this.showJetLag()),
										(e.showSteps = this.showSteps()),
										(e.showWheelchairPushes = this.showWheelchairPushes()),
										(e.showInsights = this.showInsights()),
										(e.showBodyBattery3 = this.showBodyBattery3()),
										(e.showSleepVenu3 = this.showSleepVenu3()),
										(e.hideFloorFeature = this.hideFloorFeature()),
										(e.isWheelchairMode = this.isWheelchairMode()),
										(e.showStressPage = this.showStressPage()),
										(e.showHydrationPage = this.showHydrationPage()),
										(this.sidebar = new He({
											el: Is('.main-nav'),
											dashboards: this.dashboards,
											serviceHost: this.serviceHost.get('value'),
											navCollapsedPref: this.navCollapsedPref,
											preferences: e,
											internalAppsHost: this.internalAppsHost,
											userCanViewPulseOx: t,
											viewerAgentDevices: $,
											newsFeedStatus: this.newsFeedStatus,
										}));
								}
								'true' !== this.navCollapsedPref.get('value') ||
									Ss('body').hasClass('mobile') ||
									Ss('body').addClass('minimize-main-nav'),
									Ss('body').hasClass('mobile') ||
										(this.navCollapsedPref &&
										'true' === this.navCollapsedPref.get('value')
											? (Ss('body').addClass('main-nav-closed'),
												Ss('body').removeClass('main-nav-open'))
											: (Ss('body').addClass('main-nav-open'),
												Ss('body').removeClass('main-nav-closed'))),
									this.sidebar.load(),
									(0, Te.Yd)() || this.sidebar.$el.removeClass('hide');
							},
							renderHeaderBar: function () {
								(this.topHeader = new Fa({
									el: Is('.main-body .header'),
									pollRate: 6e4,
									userProfile: this.userProfile,
									userPreferences: this.userPreferences,
									messageAndDevicesNotificationsEnabled:
										'true' ===
										this.messageAndDevicesNotificationsEnabled.get('value'),
									hideDeviceQueue: 'true' === this.hideDeviceQueue.get('value'),
									groupInviteSpammingDays:
										+this.groupInviteSpammingPref.get('value'),
								})),
									this.listenTo(
										this.topHeader,
										He.Events.EXPAND_COLLAPSE,
										function () {
											this.sidebar.expandCollapse(),
												this.sidebar.$el.trigger('MAIN_NAV_EXPAND_COLLAPSE');
										}
									),
									this.topHeader.render(),
									(0, Te.Yd)() || this.topHeader.$el.removeClass('hide'),
									(0, Te.aO)() &&
										(this.renderSnackbarMessage(),
										rs.A.display({
											ns: 'settings',
											transKey: 'read_only_mode_alert_1',
										}));
							},
							renderCookieConsentBanner: function () {
								(this.cookieConsentBanner = new Yi.A()),
									this.cookieConsentBanner.renderComponent(
										Cs,
										Is('.main-footer')[0]
									);
							},
							renderWidgetsNav: function () {
								if (
									this.userSettings.get('userMenstrualCycleSettings') &&
									(0, K.JQ)(this.userSettings.get('userMenstrualCycleSettings'))
								) {
									const e = this.widgetDefinitions.find(
										(e) =>
											'title_menstrualCycleTracking_widget' ===
											e.get('title_key')
									);
									this.widgetDefinitions.remove(e);
								}
								this.widgetNav &&
									(this.widgetNav.stopListening(),
									this.widgetNav.el.remove(),
									this.widgetNav.remove()),
									(this.widgetNav = new za({
										widgetDefinitions: this.widgetDefinitions,
										displayName: this.model.get('displayName'),
										showAllDayPulseOx: this.showAllDayPulseOx(),
										showRespiration: this.showRespiration(),
										showSolarIntensity: !0,
										userSettings: this.userSettings,
										showInsights: this.showInsights(),
									})),
									this.listenTo(
										this.widgetNav,
										za.Events.ON_ADD_WIDGET_CLICKED,
										this.onBtnAddWidgetToDashboard
									),
									this.listenTo(
										this.widgetNav,
										za.Events.ON_WIDGET_LIST_HIDDEN,
										function () {
											this.trigger(vs.ON_WIDGET_LIST_HIDDEN);
										}
									),
									this.widgetNav.load(),
									this.sidebar.$el.after(this.widgetNav.el);
							},
							highlightDashboard: function (e) {
								this.sidebar.highlightDashboard(e);
							},
							setupReactModal: function () {
								(this.modal = new Yi.A()),
									this.modal.renderComponent(us, Is('.react-global-modal')[0]);
							},
							showAllDayPulseOx: function () {
								return P.A.isWellnessUser();
							},
							showRespiration: function () {
								return P.A.isWellnessUser();
							},
							showHydration: function () {
								return P.A.isWellnessUser();
							},
							showHealthSnapshot: function () {
								return this.usageIndicators.hasCurrentOrHistoricalIndicator(
									'device',
									'hasHealthSnapshotCapableDevice'
								);
							},
							showJetLag: function () {
								return this.usageIndicators.hasCurrentOrHistoricalIndicator(
									'device',
									'hasJetlagCapableDevice'
								);
							},
							showSteps: function () {
								const e = this.userSettings.getWheelchairModeEnabled(),
									t =
										this.usageIndicators &&
										this.usageIndicators.hasCurrentOrHistoricalIndicator(
											'device',
											'hasWheelchairCapableDevice'
										);
								return !e || !t;
							},
							showWheelchairPushes: function () {
								return (
									this.usageIndicators &&
									this.usageIndicators.hasCurrentOrHistoricalIndicator(
										'device',
										'hasWheelchairCapableDevice'
									) &&
									this.userSettings.getWheelchairModeEnabled()
								);
							},
							showInsights: function () {
								var e;
								const t = this.userSettings.getWheelchairModeEnabled(),
									i =
										(null === (e = this.insightsHistory) || void 0 === e
											? void 0
											: e.length) > 0;
								return !t || i;
							},
							showBodyBattery3: function () {
								return this.bodyBattery3Enabled.featureEnabled();
							},
							showStressPage: function () {
								return this.gc5StressPageRole.featureEnabled();
							},
							showHydrationPage: function () {
								return this.gc5HydrationPageRole.featureEnabled();
							},
							showSleepVenu3: function () {
								return this.sleepVenu3Enabled.featureEnabled();
							},
							hideFloorFeature: function () {
								return (
									!!this.wheelChairRole.featureEnabled() &&
									!!this.userSettings.getWheelchairModeEnabled() &&
									!!this.usageIndicators.has('ReportAvailability') &&
									!this.usageIndicators.get('ReportAvailability')
										.hasFloorsAscended &&
									!this.usageIndicators.get('ReportAvailability')
										.hasFloorsDescended
								);
							},
							reloadSidebar() {
								let e = new j.A();
								(0, ns.Y9)(this.userSettings.toJSON()) ||
									((this.pregnancysnapshots = new as.A()),
									e.addModel({ model: this.pregnancysnapshots, required: !0 })),
									(this.userSettings = new V.A()),
									e.addModel({
										model: this.userSettings,
										required: !0,
										countError: !0,
									}),
									this.listenTo(e, j.A.Events.SYNCHRONIZED, () => {
										(this.forceReloadSidebar = !0), this.renderSidebar();
									}),
									e.fetchModels();
							},
							isGdprFeatureOn: function (e) {
								return X.A.isFeatureForUserOn(
									e.get('userOption'),
									e.get('consentEnforcementState'),
									e.get('sourceType')
								);
							},
							isWheelchairMode: function () {
								return (
									!!this.wheelChairRole.featureEnabled() &&
									!!this.userSettings.getWheelchairModeEnabled() &&
									this.usageIndicators.checkDeviceIndicator(
										'hasWheelchairCapableDevice'
									)
								);
							},
							logAppVersion: function () {
								const e = this.apiVersion.get('version'),
									t = Ss('#garmin-connect-version').text();
								console.log(`Version: ${t}, ${e}`);
							},
						});
				(fs.Events = vs), (fs.QUEUE_POLL_RATE = 6e4);
				const Ds = fs;
				var Ns = i(407586),
					Rs = i(383790),
					bs = i(9787),
					Ls = i(778727),
					Ps = i.n(Ls),
					Os = i(998813),
					ws = { ON_MESSAGE_CLOSED: 'ON_MESSAGE_CLOSED' },
					Fs = I().View.extend({
						template: b().template(Ps()),
						attributes: function () {
							return { class: 'page-message-container' };
						},
						events: {
							'click .notification-dismiss': 'onGrowlNotificationDismissed',
							'click button': 'onClose',
						},
						initialize: function (e) {
							return (
								(this.pageViewSuccessMessage = e.pageViewSuccessMessage),
								(this.pageViewFailureMessage = e.pageViewFailureMessage),
								(this.pageViewInfoMessage = e.pageViewInfoMessage),
								(this.growl = e.growl),
								this.growl &&
									this.$el.addClass('growl-alert alert-growl-bottom-right'),
								this
							);
						},
						render: function () {
							return (
								this.$el.html(
									this.template({
										Localizer: L.A,
										pageViewSuccessMessage: this.pageViewSuccessMessage,
										pageViewFailureMessage: this.pageViewFailureMessage,
										pageViewInfoMessage: this.pageViewInfoMessage,
										growl: this.growl,
									})
								),
								(this.$errorElement = this.$('.alert-error')),
								(this.$errorElementText =
									this.$errorElement.find('.alert-text')),
								(this.$successElement = this.$('.alert-success')),
								(this.$successElementText =
									this.$successElement.find('.alert-text')),
								(this.$infoElement = this.$('.alert-info')),
								(this.$infoElementText = this.$infoElement.find('.alert-text')),
								this
							);
						},
						updateSuccessMessage: function (e) {
							(e || '' === e) && (this.pageViewSuccessMessage = e),
								this.$successElementText.text(this.pageViewSuccessMessage);
						},
						showSuccessMessage: function (e) {
							this.updateSuccessMessage(e), this.$successElement.show();
						},
						hideSuccessMessage: function (e) {
							e && this.$successElementText.empty(),
								this.$successElement.hide();
						},
						updateFailureMessage: function (e) {
							(e || '' === e) && (this.pageViewFailureMessage = e),
								this.$errorElementText.text(e);
						},
						showFailureMessage: function (e) {
							this.updateFailureMessage(e), this.$errorElement.show();
						},
						hideFailureMessage: function (e) {
							e && this.$errorElementText.empty(), this.$errorElement.hide();
						},
						updateInfoMessage: function (e) {
							(e || '' === e) && (this.pageViewInfoMessage = e),
								this.$infoElementText.html(e);
						},
						showInfoMessage: function (e) {
							this.updateInfoMessage(e), this.$infoElement.show();
						},
						hideInfoMessage: function (e) {
							e && this.$infoElementText.empty(), this.$infoElement.hide();
						},
						onGrowlNotificationDismissed: function (e) {
							e.preventDefault();
							var t = Os(e.currentTarget).closest('.alert');
							t.addClass('animated fadeOutRight'),
								setTimeout(
									function () {
										this.hideFailureMessage(),
											this.hideSuccessMessage(),
											t.removeClass('animated fadeOutRight');
									}.bind(this),
									600
								);
						},
						onClose: function (e) {
							e.preventDefault(),
								this.hideInfoMessage(),
								this.trigger(ws.ON_MESSAGE_CLOSED);
						},
					});
				Fs.Events = ws;
				const ks = Fs;
				var Us = i(942546),
					Ms = i.n(Us),
					Gs = i(998813),
					xs = i(998813);
				const Bs = I()
					.View.extend(oe.A)
					.extend({
						initialize: function (e) {
							(this.userPreferences = e.userPreferences),
								(this.pageView = null),
								(this.registeredApplicationEvents = {}),
								(this.template = b().template(Ms()));
						},
						render: function () {
							if (this.pageView && this.pageView.isLoaded()) {
								this.$el.empty(),
									this.$el.removeClass(),
									this.$el.addClass('content page'),
									this.$el.addClass(this.pageView.pageClassName),
									this.$el.html(this.template({}));
								var e = this.$('#pageContainer');
								e.append(this.pageView.el),
									this.isFluid() && e.addClass('page-inner-fluid'),
									this.pageView.enableContainerCss && e.addClass('container'),
									window.scrollTo(0, 0),
									this.setupPageMessages(),
									this.pageView.render(),
									this.addBodyLevelClass(),
									Gs('body').removeClass('wait');
							}
						},
						addBodyLevelClass: function () {
							if (this.pageView.pageClassName) {
								var e = this.pageView.pageClassName.trim().split(' ');
								(e = b().map(e, function (e) {
									return 'body-' + e;
								})),
									Gs('body').addClass(e.join(' '));
							}
						},
						setupPageMessages: function () {
							(this.systemMessagePageView = new bs.A({
								el: this.$('.system-message-container'),
								systemMessageText: this.pageView.getSystemMessage(),
								shouldDisplayMessages: this.pageView.enableSystemMessage,
							})),
								this.listenTo(
									this.systemMessagePageView,
									bs.A.Events.SYSTEM_MESSAGE_RENDERED,
									function () {
										this.pageView &&
											b().isFunction(this.pageView.handleListPadding) &&
											this.pageView.handleListPadding();
									}
								),
								this.systemMessagePageView.load(),
								(this.alertMessagesView = new ks({
									pageViewSuccessMessage: this.pageView.getSuccessMessage(),
									pageViewFailureMessage: this.pageView.getFailureMessage(),
									pageViewInfoMessage: this.pageView.getInfoMessage(),
									growl: this.pageView.growlMessages,
								})),
								this.listenTo(
									this.alertMessagesView,
									ks.Events.ON_MESSAGE_CLOSED,
									function () {
										this.pageView &&
											b().isFunction(this.pageView.onMessageClosed) &&
											this.pageView.onMessageClosed();
									}
								),
								this.$('.system-message-container').after(
									this.alertMessagesView.render().el
								),
								this.bindPageViewEvents();
						},
						setPageView: function (e) {
							this.pageView && this.pageView.onPageUnloaded(),
								(this.pageView = e),
								this.registerApplicationEvents(this.pageView),
								this.pageView &&
									(this.pageView.isLoaded()
										? this.render()
										: this.pageView.once(
												e.Loadable.Events.ON_DEPENDENCIES_LOADED,
												this.onPageDependenciesLoaded,
												this
											));
						},
						onPageDependenciesLoaded: function () {
							this.render();
						},
						setApplicationCss: function (e) {
							xs("<style type='text/css'>" + e + '</style>').appendTo('head');
						},
						onContainerUnloaded: function () {
							this.pageView &&
								(this.pageView.onPageUnloaded(),
								this.off(),
								this.stopListening());
						},
						bindPageViewEvents: function () {
							this.pageView &&
								(this.pageView.on(
									Rs.A.Events.HIDE_PAGE_VIEW_SUCCESS_MESSAGE,
									this.hideSuccessMessage,
									this
								),
								this.pageView.on(
									Rs.A.Events.SHOW_PAGE_VIEW_SUCCESS_MESSAGE,
									this.showSuccessMessage,
									this
								),
								this.pageView.on(
									Rs.A.Events.HIDE_PAGE_VIEW_FAILURE_MESSAGE,
									this.hideFailureMessage,
									this
								),
								this.pageView.on(
									Rs.A.Events.SHOW_PAGE_VIEW_FAILURE_MESSAGE,
									this.showFailureMessage,
									this
								),
								this.pageView.on(
									Rs.A.Events.HIDE_PAGE_VIEW_INFO_MESSAGE,
									this.hideInfoMessage,
									this
								),
								this.pageView.on(
									Rs.A.Events.SHOW_PAGE_VIEW_INFO_MESSAGE,
									this.showInfoMessage,
									this
								),
								this.pageView.on(
									Rs.A.Events.HIDE_ALL_PAGE_VIEW_MESSAGES,
									this.hideAllMessages,
									this
								));
						},
						registerApplicationEvents: function (e) {
							for (var t in e.applicationEvents)
								if (e.applicationEvents.hasOwnProperty(t)) {
									var i = e[e.applicationEvents[t]];
									if (!i)
										return void console.log(
											'Handler not found for event: ' + t
										);
									this.registeredApplicationEvents[t] ||
										(this.registeredApplicationEvents[t] = []),
										this.registeredApplicationEvents[t].push({
											callback: i,
											context: e,
										});
								}
							e.bind(
								Rs.A.Events.ON_APPLICATION_EVENT_TRIGGERED,
								this.handleApplicationEvent,
								this
							);
						},
						registerApplicationEvent: function (e, t, i) {
							this.registeredApplicationEvents[e] ||
								(this.registeredApplicationEvents[e] = []),
								this.registeredApplicationEvents[e].push({
									callback: i,
									context: t,
								});
						},
						raiseApplicationEvent: function (e, t) {
							this.handleApplicationEvent(arguments);
						},
						handleApplicationEvent: function (e) {
							var t = this.registeredApplicationEvents[e[1]],
								i = [];
							i.push(e[0]);
							for (var n = 2; n < e.length; n++) i.push(e[n]);
							b().each(t, function (e) {
								e.callback.apply(e.context, i);
							});
						},
						isFluid: function () {
							var e = this.pageView.fluid;
							return 'function' == typeof e && (e = e.call(this.pageView)), e;
						},
						isNewGrid: function () {
							var e = this.pageView.enableGridCss;
							return 'function' == typeof e && (e = e.call(this.pageView)), e;
						},
						hideSuccessMessage: function (e) {
							this.alertMessagesView &&
								'function' ===
									typeof this.alertMessagesView.hideSuccessMessage &&
								this.alertMessagesView.hideSuccessMessage(e);
						},
						showSuccessMessage: function (e) {
							this.alertMessagesView &&
								'function' ===
									typeof this.alertMessagesView.showSuccessMessage &&
								this.alertMessagesView.showSuccessMessage(e);
						},
						hideFailureMessage: function (e) {
							this.alertMessagesView &&
								'function' ===
									typeof this.alertMessagesView.hideFailureMessage &&
								this.alertMessagesView.hideFailureMessage(e);
						},
						showFailureMessage: function (e) {
							this.alertMessagesView &&
								'function' ===
									typeof this.alertMessagesView.showFailureMessage &&
								this.alertMessagesView.showFailureMessage(e);
						},
						hideInfoMessage: function (e) {
							this.alertMessagesView &&
								'function' === typeof this.alertMessagesView.hideInfoMessage &&
								this.alertMessagesView.hideInfoMessage(e);
						},
						showInfoMessage: function (e) {
							this.alertMessagesView &&
								'function' === typeof this.alertMessagesView.showInfoMessage &&
								this.alertMessagesView.showInfoMessage(e);
						},
						hideAllMessages: function (e) {
							this.hideSuccessMessage(e),
								this.hideFailureMessage(e),
								this.hideInfoMessage(e);
						},
					});
				var Hs = i(58408),
					Vs = i.n(Hs),
					Ws = i(998813),
					Js = i(998813);
				const Ys = I()
					.View.extend(oe.A)
					.extend({
						initialize: function (e) {
							(this.userPreferences = e.userPreferences),
								(this.pageView = null),
								(this.registeredApplicationEvents = {}),
								(this.template = b().template(Vs()));
						},
						render: function () {
							if (this.pageView && this.pageView.isLoaded()) {
								this.$el.empty(),
									this.$el.removeClass(),
									this.$el.addClass('embed-container'),
									this.$el.addClass(this.pageView.pageClassName),
									this.$el.html(this.template({}));
								let e = v.A.get('preferredLocale');
								Ws('html').attr('lang', e),
									this.$('#embedContainer').append(this.pageView.el),
									window.scrollTo(0, 0),
									this.pageView.render(),
									Ws('body').removeClass('wait');
							}
						},
						setPageView: function (e) {
							this.pageView && this.pageView.onPageUnloaded(),
								(this.pageView = e),
								this.pageView &&
									(this.pageView.isLoaded()
										? this.render()
										: this.pageView.once(
												e.Loadable.Events.ON_DEPENDENCIES_LOADED,
												this.onPageDependenciesLoaded,
												this
											));
						},
						onPageDependenciesLoaded: function () {
							this.render();
						},
						setApplicationCss: function (e) {
							Js("<style type='text/css'>" + e + '</style>').appendTo('head');
						},
						onContainerUnloaded: function () {
							this.pageView &&
								(this.pageView.onPageUnloaded(),
								this.off(),
								this.stopListening());
						},
					});
				var $s = i(352093);
				const js = I().Model.extend({
					urlRoot: '/dashboard-service/widgetInstance',
					backend: 'gcapi',
					defaults: {
						id: null,
						dashboardId: 0,
						order: null,
						stateName: null,
						viewName: null,
						widgetDefinitionId: null,
						args: null,
					},
					initialize: function () {
						this.get('args') || this.set('args', {});
					},
					setPosition: function (e, t) {
						var i = this.get('args') || {},
							n = i.positions,
							a = {};
						n && (a = JSON.parse(n)),
							(a[e] = t),
							(a = JSON.stringify(a)) != n &&
								((i.positions = a),
								this.set('args', i),
								this.isNew() || this.save());
					},
					getPosition: function (e) {
						var t = this.get('args');
						if (t && t.positions) return (JSON.parse(t.positions) || {})[e];
					},
					hasPositionOverride: function () {
						var e = this.get('args');
						return e && e.firstPosition && 'true' === e.firstPosition;
					},
					resetPositionOverride: function () {
						var e = {
							firstPosition: 'false',
							positions: JSON.stringify({
								'layout-1': { column: 0, row: -1 },
								'layout-2': { column: 0, row: -1 },
								'layout-3': { column: 0, row: -1 },
								'layout-4': { column: 0, row: -1 },
							}),
						};
						this.set('args', e), this.isNew() || this.save();
					},
				});
				I().Collection.extend({
					model: js,
					url: function () {
						return (
							'/dashboard-service/dashboard/widgetInstances/' + this.dashboardId
						);
					},
					backend: 'gcapi',
					initialize: function (e, t) {
						if ('undefined' == typeof t.dashboardId)
							throw 'Dashboard requires dashboard Id';
						(this.dashboardId = t.dashboardId),
							(this.userSettings = new V.A()),
							this.userSettings.fetch({ async: !1 }),
							(this.insightsGDPRConsent = new Q.A({
								feature: Q.A.Features.INSIGHTS,
							})),
							this.insightsGDPRConsent.fetch({ async: !1 }),
							(this.insightsHistory = new ae()),
							this.insightsHistory.fetch({ async: !1 }),
							(this.bodyBattery3Role = new q.A({ key: se.Me })),
							(this.sleepVenu3Role = new q.A({ key: se.CE })),
							this.bodyBattery3Role.fetch({ async: !1 }),
							this.sleepVenu3Role.fetch({ async: !1 });
					},
					parse: function (e) {
						let t = e;
						if (
							(k.A &&
								!1 === k.A.get('capableEnable') &&
								U.A &&
								'ja' !== U.A.get('locale') &&
								(t = t.filter((e) => -1 === e.viewName.indexOf('pulseOx'))),
							(0, Te.aO)() &&
								(t = t.filter(
									(e) => -1 === e.viewName.indexOf('quickdrawLargeState')
								)),
							this.bodyBattery3Role.featureEnabled() &&
								(t = t.filter((e) => '84' !== e.args.metricId)),
							this.sleepVenu3Role.featureEnabled() &&
								(t = t.filter(
									(e) => '26' !== e.args.metricId && '-26' !== e.args.metricId
								)),
							this.userSettings.getWheelchairModeEnabled())
						) {
							var i;
							(null === (i = this.insightsHistory) || void 0 === i
								? void 0
								: i.length) > 0 ||
								(t = t.filter((e) => -1 === e.viewName.indexOf('insights')));
						}
						return t;
					},
					comparator: 'order',
				});
				var Ks = i(813613),
					zs = i(615567),
					qs = i(763614),
					Qs = i.n(qs),
					Xs = { ON_MANAGE_WIDGETS_CLICKED: 'ON_MANAGE_WIDGETS_CLICKED' },
					Zs = I().View.extend({
						template: b().template(Qs()),
						className: 'widget widget-medium manage-widgets',
						events: { click: 'onManageButtonClicked' },
						render: function () {
							return this.$el.html(this.template({ Localizer: L.A })), this;
						},
						onManageButtonClicked: function (e) {
							e.preventDefault(),
								this.$el.hasClass('loading') ||
									this.trigger(Xs.ON_MANAGE_WIDGETS_CLICKED);
						},
						showLoadingSpinner: function () {
							this.$el.addClass('loading');
						},
						hideLoadingSpinner: function () {
							this.$el.removeClass('loading');
						},
					});
				Zs.Events = Xs;
				const er = Zs,
					tr = () => i.e(4619).then(i.bind(i, 14619)),
					ir = () =>
						Promise.all([
							i.e(3067),
							i.e(4547),
							i.e(6642),
							i.e(1567),
							i.e(9624),
							i.e(2802),
							i.e(3869),
							i.e(1526),
							i.e(798),
							i.e(8600),
							i.e(7449),
							i.e(5477),
							i.e(1954),
						]).then(i.bind(i, 879158)),
					nr = (0, Te.aO)()
						? void 0
						: () => Promise.all([i.e(1089), i.e(8956)]).then(i.bind(i, 368956)),
					ar = () =>
						Promise.all([
							i.e(2403),
							i.e(1567),
							i.e(332),
							i.e(453),
							i.e(2058),
						]).then(i.bind(i, 2058)),
					sr = () =>
						Promise.all([i.e(9654), i.e(4335), i.e(6075)]).then(
							i.bind(i, 336075)
						),
					rr = () =>
						Promise.all([i.e(1567), i.e(1197), i.e(6861)]).then(
							i.bind(i, 306861)
						),
					or = (0, Te.aO)()
						? void 0
						: () =>
								Promise.all([i.e(3), i.e(4759), i.e(3573)]).then(
									i.bind(i, 303573)
								),
					lr = (0, Te.aO)()
						? void 0
						: () =>
								Promise.all([i.e(3067), i.e(3), i.e(7689), i.e(468)]).then(
									i.bind(i, 243264)
								),
					cr = (0, Te.aO)()
						? void 0
						: () =>
								Promise.all([i.e(4335), i.e(5640), i.e(4253)]).then(
									i.bind(i, 354253)
								),
					dr = () => i.e(9878).then(i.bind(i, 109878)),
					ur = () =>
						Promise.all([
							i.e(4547),
							i.e(6642),
							i.e(1567),
							i.e(3869),
							i.e(8600),
							i.e(7449),
							i.e(5477),
							i.e(3551),
						]).then(i.bind(i, 273551)),
					pr = () =>
						Promise.all([i.e(1567), i.e(1197), i.e(965), i.e(4282)]).then(
							i.bind(i, 904282)
						),
					yr = () =>
						Promise.all([i.e(1567), i.e(1197), i.e(7404)]).then(
							i.bind(i, 807404)
						),
					hr = () =>
						Promise.all([i.e(1567), i.e(1197), i.e(1536), i.e(6257)]).then(
							i.bind(i, 646257)
						),
					gr = () =>
						Promise.all([i.e(1602), i.e(1252)]).then(i.bind(i, 511252)),
					mr = (0, Te.aO)()
						? void 0
						: () =>
								Promise.all([i.e(8532), i.e(1602), i.e(3), i.e(9891)]).then(
									i.bind(i, 739891)
								),
					Ar = (0, Te.aO)()
						? void 0
						: () =>
								Promise.all([
									i.e(1567),
									i.e(1197),
									i.e(1602),
									i.e(6757),
									i.e(7809),
									i.e(4763),
								]).then(i.bind(i, 764763)),
					_r = () =>
						Promise.all([
							i.e(1567),
							i.e(1197),
							i.e(1602),
							i.e(7957),
							i.e(6766),
						]).then(i.bind(i, 454214)),
					Er = () =>
						Promise.all([i.e(1602), i.e(7175)]).then(i.bind(i, 657175)),
					Tr = (0, Te.aO)()
						? void 0
						: () =>
								Promise.all([i.e(3), i.e(4859), i.e(6453)]).then(
									i.bind(i, 896453)
								),
					Cr = () =>
						Promise.all([
							i.e(1567),
							i.e(1197),
							i.e(9624),
							i.e(6521),
							i.e(9719),
							i.e(332),
							i.e(5532),
						]).then(i.bind(i, 566473)),
					Sr = () => i.e(7443).then(i.bind(i, 147443)),
					Ir = () =>
						Promise.all([
							i.e(1567),
							i.e(1197),
							i.e(9624),
							i.e(6521),
							i.e(9719),
							i.e(2604),
							i.e(8782),
						]).then(i.bind(i, 940149)),
					vr = void 0,
					fr = () => i.e(2890).then(i.bind(i, 492890)),
					Dr = () => i.e(2971).then(i.bind(i, 182971)),
					Nr = () =>
						Promise.all([
							i.e(1567),
							i.e(1197),
							i.e(9624),
							i.e(210),
							i.e(44),
							i.e(8679),
						]).then(i.bind(i, 458679)),
					Rr = () =>
						Promise.all([
							i.e(3077),
							i.e(6077),
							i.e(5117),
							i.e(3617),
							i.e(1567),
							i.e(1197),
							i.e(9624),
							i.e(9967),
							i.e(4688),
							i.e(3725),
							i.e(4375),
							i.e(8600),
							i.e(6232),
							i.e(7461),
							i.e(4796),
							i.e(7068),
							i.e(2418),
						]).then(i.bind(i, 209249)),
					br = (0, Te.aO)()
						? void 0
						: () =>
								Promise.all([i.e(4335), i.e(9144), i.e(5640), i.e(1620)]).then(
									i.bind(i, 701620)
								),
					Lr = () =>
						Promise.all([
							i.e(1567),
							i.e(1197),
							i.e(9624),
							i.e(9420),
							i.e(3705),
						]).then(i.bind(i, 559276)),
					Pr = () =>
						Promise.all([
							i.e(1567),
							i.e(1197),
							i.e(4335),
							i.e(965),
							i.e(691),
						]).then(i.bind(i, 412954)),
					Or = () =>
						Promise.all([
							i.e(2403),
							i.e(1567),
							i.e(332),
							i.e(453),
							i.e(7733),
						]).then(i.bind(i, 707733)),
					wr = () =>
						Promise.all([
							i.e(8532),
							i.e(8230),
							i.e(1567),
							i.e(1197),
							i.e(9624),
							i.e(2802),
							i.e(1526),
							i.e(7680),
							i.e(798),
							i.e(4876),
							i.e(3583),
							i.e(378),
							i.e(1095),
							i.e(6232),
							i.e(9205),
							i.e(3866),
							i.e(3354),
						]).then(i.bind(i, 169703)),
					Fr = () =>
						Promise.all([
							i.e(1567),
							i.e(1197),
							i.e(9624),
							i.e(4999),
							i.e(8300),
							i.e(8976),
						]).then(i.bind(i, 525670)),
					kr = () =>
						Promise.all([
							i.e(9654),
							i.e(4335),
							i.e(378),
							i.e(4804),
							i.e(408),
						]).then(i.bind(i, 150408)),
					Ur = () =>
						Promise.all([
							i.e(1567),
							i.e(1197),
							i.e(9624),
							i.e(1320),
							i.e(567),
						]).then(i.bind(i, 800567)),
					Mr = () =>
						Promise.all([
							i.e(1567),
							i.e(1197),
							i.e(9624),
							i.e(6521),
							i.e(2604),
							i.e(3788),
						]).then(i.bind(i, 193788)),
					Gr = () =>
						Promise.all([
							i.e(1567),
							i.e(1197),
							i.e(9624),
							i.e(6521),
							i.e(2604),
							i.e(2283),
						]).then(i.bind(i, 952283)),
					xr = () =>
						Promise.all([
							i.e(1567),
							i.e(1197),
							i.e(6521),
							i.e(612),
							i.e(256),
						]).then(i.bind(i, 920256)),
					Br = () =>
						Promise.all([
							i.e(1567),
							i.e(1197),
							i.e(9624),
							i.e(6088),
							i.e(7075),
						]).then(i.bind(i, 527075)),
					Hr = () =>
						Promise.all([i.e(1567), i.e(8943), i.e(354)]).then(
							i.bind(i, 410354)
						),
					Vr = () => i.e(8203).then(i.bind(i, 908203)),
					Wr = () =>
						Promise.all([
							i.e(9967),
							i.e(4688),
							i.e(8900),
							i.e(7220),
							i.e(6414),
						]).then(i.bind(i, 376414)),
					Jr = () =>
						Promise.all([i.e(1567), i.e(1197), i.e(9624), i.e(4153)]).then(
							i.bind(i, 434153)
						),
					Yr = () =>
						Promise.all([
							i.e(9967),
							i.e(4688),
							i.e(6188),
							i.e(2811),
							i.e(4500),
						]).then(i.bind(i, 894500));
				var $r = i(998813),
					jr = i(998813),
					Kr = I().View.extend(oe.A),
					zr = {
						WIDGET_CONTAINER_LOADED: 'WIDGET_CONTAINER_LOADED',
						ON_MANAGE_WIDGETS_CLICKED: er.Events.ON_MANAGE_WIDGETS_CLICKED,
					},
					qr = Kr.extend({
						events: { 'click .show-more': 'onShowMoreClicked' },
						initialize: function (e) {
							if ('undefined' === typeof this.insertWidgetView)
								throw 'ContainerView must implement insertWidgetView';
							if (!e.userPreferences)
								throw 'ContainerView must have UserPreferences model.';
							if (!e.widgetDefinitions)
								throw 'ContainerView must have widget definitions.';
							(this.userProfile = e.userProfile),
								(this.userPreferences = e.userPreferences),
								(this.widgetDefinitions = e.widgetDefinitions),
								(this.registeredApplicationEvents = {}),
								(this.widgetViews = []),
								(this.widgetContainerLoaded = !1),
								(this.overlayEl = null),
								'undefined' !== typeof this.initializeContainer &&
									this.initializeContainer.call(this, e),
								(this.showActiveRaceWidget = new q.A({ key: se.EO })),
								this.bind(
									this.Loadable.Events.ON_DEPENDENCIES_LOADED,
									this.onWidgetStatesLoaded
								);
						},
						provideCommonDependencies: function (e) {
							0 === this.widgetDefinitions.length &&
								e.addEvent({
									model: this.widgetDefinitions,
									event: 'sync',
									required: !0,
								}),
								e.addModel({ model: this.collection, required: !0 }),
								e.addModel({ model: this.showActiveRaceWidget, required: !0 });
						},
						setWidgetStates: function (e) {
							this.empty(),
								this.hideWidgetManager(),
								(this.collection = e),
								this.collection.once('sync', this.onWidgetStatesLoaded, this),
								b().isFunction(this.onWidgetRemoved) &&
									this.collection.on('destroy', this.onWidgetRemoved, this),
								this.collection.fetch();
						},
						empty: function () {
							this.collection.off(),
								b().each(
									this.widgetViews,
									function (e) {
										this.removeWidgetView(e);
									},
									this
								);
						},
						createWidgetInstance: function (e, t, i) {
							var n = this.widgetDefinitions.get(t),
								a = n.getDefaultState(),
								s = n.getDefaultView();
							if ((this.widgetManager.showLoadingSpinner(), s)) {
								var r = 0;
								this.collection.length &&
									(r = this.collection.last().get('order') + 1);
								var o = new js({
									dashboardId: e,
									stateName: a.name,
									viewName: s.name,
									order: r,
									widgetDefinitionId: t,
								});
								this.collection.add(o),
									this.addWidgetState(o, function () {
										o.once('sync', i), o.save();
									});
							} else alert('Default widget not found.');
						},
						onWidgetStatesLoaded: function () {
							if (
								((this.registeredApplicationEvents = {}),
								this.render(),
								(this.widgetContainerLoaded = !1),
								(this.widgetViewLoadedCount = 0),
								0 === this.collection.length)
							)
								this.renderWidgetManager();
							else {
								if ('false' === this.showActiveRaceWidget.get('value')) {
									let e = [];
									this.collection.each(function (t) {
										const i = this.widgetDefinitions.get(
											t.get('widgetDefinitionId')
										);
										if (i) {
											'title_active_widget' === i.get('title_key') && e.push(t);
										}
									}, this),
										e.length > 0 &&
											e.forEach((e) => {
												this.collection.remove(e, { silent: !0 });
											});
								}
								this.collection.each(function (e) {
									this.addWidgetState(e);
								}, this);
							}
						},
						countWidgetViewLoaded: function () {
							this.widgetContainerLoaded ||
								(this.widgetViewLoadedCount++,
								this.widgetViewLoadedCount === this.collection.length &&
									this.onWidgetContainerLoaded());
						},
						addWidgetState: function (e, t) {
							var i = this.widgetDefinitions.get(e.get('widgetDefinitionId'));
							if (!i)
								return (
									console.log(
										'WidgetDefinition not found for widget with id: ' +
											e.get('widgetDefinitionId')
									),
									void this.countWidgetViewLoaded()
								);
							var a = this,
								s = setTimeout(function () {
									console.log('Issue loading widget: ' + i.get('url')),
										a.widgetManager && a.widgetManager.hideLoadingSpinner(),
										a.countWidgetViewLoaded();
								}, 1e4);
							const r = i.get('title_key');
							n[r] &&
								n[r]().then(({ default: n }) => {
									clearTimeout(s), a.loadWidgetView(n, i, e), t && t.call(a);
								});
						},
						loadWidgetView: function (e, t, i) {
							var n = {
								userProfile: this.userProfile,
								userPreferences: this.userPreferences,
								widgetDefinition: t,
								widgetState: i,
							};
							b().extend(n, t.get('args')), b().extend(n, i.get('args'));
							var a = new e(n);
							this.listenTo(a, e.Events.WIDGET_RENDERED, function (e) {
								e.isLoaded() && (this.widgetStateChange = !1);
							}),
								this.widgetViews.push(a),
								a.bind(
									a.Loadable.Events.ON_DEPENDENCIES_LOADED,
									this.onWidgetViewLoaded,
									this
								),
								a.bind(
									a.Loadable.Events.ON_DEPENDENCIES_LOAD_FAILED,
									this.onWidgetViewLoadFailed,
									this
								),
								a.bind(
									a.Loadable.Events.ON_WIDGET_STATE_CHANGED,
									this.onWidgetStateChanged,
									this
								),
								this.registerApplicationEvents(a),
								this.insertWidgetView(a),
								a.load();
						},
						onWidgetViewLoaded: function (e) {
							e.render(), this.countWidgetViewLoaded();
						},
						onWidgetViewLoadFailed: function (e) {
							this.countWidgetViewLoaded(),
								this.widgetManager && this.widgetManager.hideLoadingSpinner();
						},
						onWidgetStateChanged: function (e, t) {
							(this.widgetStateChange = !0),
								this.onWidgetRemoved(e.widgetState, t, !0),
								this.addWidgetState(e.widgetState);
						},
						removeWidgetView: function (e) {
							e.off(),
								e.remove(),
								(this.widgetViews = b().reject(this.widgetViews, function (t) {
									return e == t;
								}));
						},
						animateWidget: function (e) {},
						registerApplicationEvents: function (e) {
							b().each(
								e.applicationEventInstances,
								function (e) {
									var t = e.context[e.handlerName];
									this.registeredApplicationEvents[e.eventName] ||
										(this.registeredApplicationEvents[e.eventName] = []),
										this.registeredApplicationEvents[e.eventName].push({
											callback: t,
											context: e.context,
										});
								},
								this
							),
								e.bind(
									zs.A.Events.ON_APPLICATION_EVENT_TRIGGERED,
									this.handleApplicationEvent,
									this
								);
						},
						unregisterApplicationEvents: function (e) {
							e.unbind(zs.A.Events.ON_APPLICATION_EVENT_TRIGGERED),
								b().each(
									e.applicationEventInstances,
									function (e) {
										this.registeredApplicationEvents[e.eventName] &&
											((this.registeredApplicationEvents[e.eventName] =
												b().reject(
													this.registeredApplicationEvents[e.eventName],
													function (t) {
														return t.context === e.context;
													}
												)),
											0 ===
												this.registeredApplicationEvents[e.eventName].length &&
												delete this.registeredApplicationEvents[e.eventName]);
									},
									this
								);
						},
						raiseApplicationEvent: function (e, t) {
							this.handleApplicationEvent(arguments);
						},
						handleApplicationEvent: function (e) {
							var t = this.registeredApplicationEvents[e[1]],
								i = [];
							i.push(e[0]);
							for (var n = 2; n < e.length; n++) i.push(e[n]);
							b().each(t, function (e) {
								e.callback.apply(e.context, i);
							});
						},
						findWidgetView: function (e) {
							var t = b().find(this.widgetViews, function (t) {
								return t.widgetState.id === e;
							});
							return t || null;
						},
						getWidgetViewByElement: function (e) {
							var t = $r(e).data('widgetstateid');
							return 'undefined' !== typeof t && null !== t
								? this.findWidgetView(t)
								: null;
						},
						onWidgetContainerLoaded: function () {
							(this.widgetContainerLoaded = !0),
								this.trigger(zr.WIDGET_CONTAINER_LOADED),
								this.renderWidgetManager();
						},
						onDependenciesLoaded: function () {},
						onContainerUnloaded: function () {
							this.empty(), this.off(), this.stopListening();
						},
						renderWidgetManager: function () {
							var e = this.widgetManager;
							e ||
								((e = new er()),
								this.listenTo(e, zr.ON_MANAGE_WIDGETS_CLICKED, function () {
									this.trigger(zr.ON_MANAGE_WIDGETS_CLICKED),
										this.toggleOverlay();
								}),
								e.render(),
								(this.widgetManager = e)),
								e.delegateEvents(),
								this.$('#column-' + this.findShortestColumn().index).append(
									e.el
								),
								this.widgetManager.$el.removeAttr('style'),
								this.widgetManager.hideLoadingSpinner();
						},
						hideWidgetManager: function () {
							this.widgetManager && this.widgetManager.$el.hide();
						},
						toggleOverlay: function () {
							this.overlayEl
								? this.removeOverlay()
								: (this.overlayEl = jr(
										'<div class="widget-content-overlay"></div>'
									).appendTo(this.$el));
						},
						removeOverlay: function () {
							(this.overlayEl = null),
								this.$('.widget-content-overlay').remove();
						},
					});
				qr.Events = zr;
				const Qr = qr;
				var Xr = i(253743),
					Zr = i.n(Xr),
					eo = (i(645980), i(393003), i(147449)),
					to = i(421889),
					io = i(998813),
					no = 'SORT',
					ao = 'EXPLICIT';
				Qr.extend({
					columnWidth: 340,
					propertyFiles: [],
					initializeContainer: function (e) {
						(this.template = b().template(Zr())),
							(this.rendered = !1),
							(this.placementMethod = no),
							this.collection.on('destroy', this.onWidgetRemoved, this),
							(this.gdprFeatureUpload = new Q.A({
								feature: Q.A.Features.UPLOAD,
							})),
							(this.accountDeviceSyncPref = new B.A({
								key: 'account.deviceSync',
							})),
							(this.language = ka.A.getFullLocale(v.A.get('preferredLocale'))),
							(this.gdprUploadConsentModalView = new to.A({
								gdprFeatureUpload: this.gdprFeatureUpload,
								accountDeviceSyncPref: this.accountDeviceSyncPref,
								language: this.language,
							})),
							C()(window).on(
								'resize.widgetContainer',
								this.resizeHandler.bind(this)
							),
							be.A.setExpandCollapseHandler(this.resizeHandler.bind(this), 20);
					},
					determinePlacementMethod: function () {
						if (0 == this.collection.length) return no;
						var e = this.getCurrentLayoutName();
						return b().find(this.collection.models, function (t) {
							return t.getPosition(e);
						})
							? ao
							: no;
					},
					getDefaultColumnInfo: function () {
						for (var e = [], t = 0; t < this.columnsVisible; t++)
							e.push({ index: t, count: 0, height: 0 });
						return e;
					},
					provideDependencies: function (e, t) {
						0 === t &&
							(e.addModel({ model: this.gdprFeatureUpload, required: !0 }),
							e.addModel({ model: this.accountDeviceSyncPref, required: !0 }));
					},
					loadDependencies: function () {},
					onDependenciesLoaded: function (e) {
						if (
							(this.gdprUploadConsentModalView.gdprRcdCheck() &&
								this.gdprUploadConsentModalView.showRcdWarningModal(),
							0 === e)
						)
							return !1;
					},
					render: function () {
						if (0 != this.$el.parent().length) {
							this.$el.empty(),
								this.$el.removeClass(),
								this.$el.addClass('content clearfix'),
								(this.columnsVisible = this.calculateColumnsVisible());
							var e = this.template({ numColumns: this.columnsVisible });
							this.$el.html(e),
								(this.columns = this.getDefaultColumnInfo()),
								(this.placementMethod = this.determinePlacementMethod()),
								this.placementMethod == no && this.calculateWidgetPlacement(),
								(this.systemMessagePageView = new bs.A({
									el: this.$('.system-message-container'),
									shouldDisplayMessages: !0,
								})),
								this.systemMessagePageView.load();
							var t = this;
							this.$('.widget-column').sortable({
								handle: '.widget-header',
								connectWith: '.widget-column, .connect-nav li',
								revert: 200,
								delay: 150,
								items: '.widget',
								opacity: 0.4,
								scrollSensitivity: 100,
								tolerance: 'pointer',
								placeholder: 'drop-point-indicator',
								forcePlaceholderSize: !0,
								disabled: io('body').hasClass('mobile'),
								start: function (e, i) {
									C()(i.placeholder).slideUp(300);
									var n = t.getWidgetViewByElement(i.item),
										a = i.item.closest('.widget-column').attr('id').slice(-1);
									(n.oldColumnIndex = a),
										n && n.setDragStatus(zs.A.DragStatus.IS_BEING_DRAGGED);
								},
								change: function (e, t) {
									C()(t.placeholder).hide().slideDown(300);
								},
								stop: function (e, i) {
									t.onWidgetOrderChanged(e, i);
									var n = t.getWidgetViewByElement(i.item),
										a = parseInt(n.oldColumnIndex, 10),
										s = n.widgetState.getPosition(
											t.getCurrentLayoutName()
										).column,
										r = t.calculateWidgetHeight(n.widgetState),
										o = null;
									a !== s &&
										((o = t.columns[a]).count--,
										(o.height -= r),
										delete n.oldColumnIndex,
										(o = t.columns[s]).count++,
										(o.height += r)),
										n && n.setDragStatus(zs.A.DragStatus.STATIONARY),
										i.item.removeAttr('style'),
										t.renderWidgetManager();
								},
							}),
								(this.gdprLimitedFeatureAlert = new Yi.A()),
								this.gdprLimitedFeatureAlert.renderComponent(
									eo.A,
									this.$('.gdprLimitedFeatureAlert')[0],
									{ gdprUploadFeature: this.gdprFeatureUpload.toJSON() }
								),
								io('.main-body').addClass('dashboard').scrollTop(0);
						}
					},
					calculateColumnsVisible: function () {
						var e = Math.min(
							Math.floor(this.$el.width() / this.columnWidth),
							4
						);
						return e < 1 && (e = 1), e;
					},
					onWidgetOrderChanged: function (e, t) {
						this.persistCurrentPositions();
					},
					persistCurrentPositions: function () {
						this.placementMethod = ao;
						var e = this;
						this.$("[id^='column-']").each(function (t, i) {
							var n = C()(i),
								a = n.children().not('.manage-widgets'),
								s = +n.attr('id').substring(7),
								r = 0;
							a.each(function (t, i) {
								var n = C()(i),
									a = n.data('widgetstateid');
								if (null != a && 'undefined' != typeof a) {
									n.data('rowindex', r);
									var o = e.collection.get(a),
										l = { column: s, row: r };
									o.setPosition(e.getCurrentLayoutName(), l);
								} else Ks.A.log("widgetStateId doesn't exist in dom!");
								r++;
							});
						});
					},
					onNumberOfColumnsChanged: function () {
						this.render(),
							(this.widgetViews = b().sortBy(this.widgetViews, function (e) {
								return e.widgetState.get('order');
							})),
							b().each(
								this.widgetViews,
								function (e) {
									this.insertWidgetView(e), e.delegateEvents();
								},
								this
							);
					},
					insertWidgetView: function (e) {
						this.placementMethod == ao
							? this.insertWidgetViewExplicit(e)
							: this.insertWidgetViewSortOrder(e);
					},
					insertWidgetViewSortOrder: function (e) {
						var t = e.widgetState.column,
							i = e.widgetState.row;
						'undefined' == typeof t &&
							(this.addSortOrderPositionToWidgetState(e.widgetState),
							(t = e.widgetState.column),
							(i = e.widgetState.row));
						var n = this.$('#column-' + t);
						if (0 == n.children().length) n.append(e.$el);
						else {
							var a = !1;
							n.children().each(function (t, n) {
								var s = C()(n).data('rowindex');
								!a && s >= i && (e.$el.insertBefore(n), (a = !0));
							}),
								a || n.append(e.$el);
						}
						e.render(),
							e.$el.data('rowindex', i),
							this.widgetStateChange && this.renderWidgetManager();
					},
					insertWidgetViewExplicit: function (e) {
						var t = e.widgetState.getPosition(this.getCurrentLayoutName()),
							i = e.widgetState.hasPositionOverride();
						t && t.column >= this.columnsVisible && (t = null),
							t ||
								i ||
								(this.addColumnAndRowIndexToWidgetState(e.widgetState),
								(t = e.widgetState.getPosition(this.getCurrentLayoutName()))),
							i && (t = { column: 0, row: -1 });
						var n = t.column,
							a = t.row,
							s = this.$('#column-' + n);
						if (0 == s.children().length) s.append(e.$el);
						else {
							var r = !1;
							s.children().each(function (t, i) {
								var n = C()(i).data('rowindex');
								!r && n >= a && (C()(i).before(e.$el), (r = !0));
							}),
								r || s.append(e.$el);
						}
						e.render(), e.$el.data('rowindex', a);
						var o = this.columns[n];
						o.count++,
							(o.height += this.calculateWidgetHeight(e.widgetState)),
							e.widgetState.isNew() && e.widgetState.once('sync', e.render, e),
							this.widgetStateChange && this.renderWidgetManager(),
							i && e.widgetState.resetPositionOverride();
					},
					onWidgetRemoved: function (e, t, i) {
						var n = b().find(this.widgetViews, function (t) {
							return t.widgetState == e;
						});
						this.removeWidgetView(n), this.unregisterApplicationEvents(n);
						var a = 0;
						'undefined' != typeof e.column
							? (a = e.column)
							: (a = n.widgetState.getPosition(
									this.getCurrentLayoutName()
								).column);
						var s = this.columns[a];
						s.count--,
							(s.height -= this.calculateWidgetHeight(
								t instanceof I().Model ? t : e
							)),
							!0 !== i && this.renderWidgetManager(),
							this.persistCurrentPositions();
					},
					calculateWidgetPlacement: function () {
						this.collection.sort(),
							this.collection.each(function (e) {
								this.addSortOrderPositionToWidgetState(e);
							}, this);
					},
					addSortOrderPositionToWidgetState: function (e) {
						var t = this.determineNextAvailablePosition(),
							i = this.columns[t.column];
						(e.column = i.index),
							(e.row = i.count),
							i.count++,
							(i.height += this.calculateWidgetHeight(e));
					},
					addColumnAndRowIndexToWidgetState: function (e) {
						var t = this.findShortestColumn();
						e.setPosition(this.getCurrentLayoutName(), {
							column: t.index,
							row: t.count,
						});
					},
					determineNextAvailablePosition: function () {
						var e = this.findShortestColumn();
						return { column: e.index, row: e.count };
					},
					getCurrentLayoutName: function () {
						return 'layout-' + this.columnsVisible;
					},
					findShortestColumn: function () {
						return b().min(this.columns, function (e) {
							return e.height;
						});
					},
					calculateWidgetHeight: function (e) {
						var t = this.widgetDefinitions.get(e.get('widgetDefinitionId'));
						if (t) {
							var i = t.findState(e.get('stateName'));
							if (i) {
								var n = e.get('viewName'),
									a = b().find(i.views, function (e) {
										return e.name == n;
									});
								if (a) return a.height;
							}
						}
						return 0;
					},
					animateWidget: function (e) {
						var t = b().find(this.widgetViews, function (t) {
							return t.widgetState.id == e;
						});
						if (t) {
							var i = t.$el;
							this.renderWidgetManager(),
								i.show(),
								this._animateCss(i, 'bounceIn');
						}
					},
					_animateCss: function (e, t) {
						e.addClass('animated ' + t).one(
							'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend',
							function () {
								io(this).removeClass('animated ' + t);
							}
						);
					},
					onWindowResized: function () {
						var e = this.calculateColumnsVisible();
						e != this.columnsVisible &&
							((this.columnsVisible = e), this.onNumberOfColumnsChanged());
					},
					off: function () {
						C()(window).off('resize.widgetContainer'),
							I().View.prototype.off.call(this);
					},
					resizeHandler: function () {
						window.doNotResize || this.onWindowResized(),
							this.renderWidgetManager();
					},
				});
				var so = i(549420),
					ro = i(108179),
					oo = i.n(ro),
					lo = i(37786),
					co = i(371553),
					uo = i(998813),
					po = i(998813),
					yo = {
						ON_EXPERIENCES_SAVED: 'ON_EXPERIENCES_SAVED',
						ON_SWITCHES_CHANGE: 'ON_SWITCHES_CHANGE',
					},
					ho = I().View.extend({
						template: b().template(oo()),
						propertyFiles: ['/common/common', '/main_container/main_container'],
						initialize: function (e) {
							var t = e.saveEvent;
							(this.marinePref = e.marinePref),
								(this.userSettings = new V.A()),
								(this.userSettings.isReady = !0),
								t && this.on(t, this.onCreateDashboardClicked);
						},
						render: function () {
							var e = ka.A.getFullLocale(v.A.getLocale());
							this.$el.html(
								this.template({
									Localizer: L.A,
									locale: e,
									isMarineExperienceAvailable:
										this.isMarineExperienceAvailable(),
								})
							),
								(this.fitnessSwitch = this.$('#button-experience-fitness')),
								this.fitnessSwitch.on(
									'change',
									this.onSwitchToggled.bind(this)
								),
								(this.wellnessSwitch = this.$('#button-experience-wellness')),
								this.wellnessSwitch.on(
									'change',
									this.onSwitchToggled.bind(this)
								),
								(this.golfSwitch = this.$('#button-experience-golf')),
								this.golfSwitch.on('change', this.onSwitchToggled.bind(this)),
								(this.diveSwitch = this.$('#button-experience-dive')),
								this.diveSwitch.on(
									'change',
									this.onDiveSwitchToggled.bind(this)
								),
								(this.marineSwitch = this.$('#button-experience-marine')),
								this.marineSwitch.on('change', this.onSwitchToggled.bind(this)),
								this.updateSelections(),
								this.setupExternalBottomTimeView(),
								lo.A.renderTooltips.call(this);
						},
						onCreateDashboardClicked: function (e) {
							var t = this.getSelectedExperiences();
							this.userSetupIsValid() &&
								(uo(e).attr('disabled', 'disabled'),
								b().contains(t, 'ROLE_DIVE_USER') &&
									(this.userSettings.setExternalBottomTime(
										this.externalBottomTimeView.calculateTime()
									),
									this.userSettings.save({})),
								this.saveExperiences(t));
						},
						userSetupIsValid: function () {
							var e = this.getSelectedExperiences();
							return (
								0 === this.$('.error-tooltip-active').length && e.length > 0
							);
						},
						getSelectedExperiences: function () {
							var e = [];
							return (
								this.fitnessSwitch.is(':checked') &&
									e.push('ROLE_FITNESS_USER'),
								this.wellnessSwitch.is(':checked') &&
									e.push('ROLE_WELLNESS_USER'),
								this.golfSwitch.is(':checked') && e.push('ROLE_OUTDOOR_USER'),
								this.diveSwitch.is(':checked') && e.push('ROLE_DIVE_USER'),
								this.marineSwitch.is(':checked') && e.push('ROLE_MARINE_USER'),
								e
							);
						},
						saveExperiences: function (e) {
							var t = this;
							po.ajax({
								url: '/modern/proxy/dashboard-service/userExperience',
								type: 'POST',
								data: JSON.stringify(e),
								contentType: 'application/json; charset=utf-8',
								success: function () {
									t.refreshUserSession(e);
								},
							});
						},
						refreshUserSession: function (e) {
							po.post('/modern/refreshUserSession').always(
								function () {
									var t = P.A.get('userRoles');
									P.A.set('userRoles', b().union(t, e)),
										this.handleSideBarComponents(),
										this.trigger(yo.ON_EXPERIENCES_SAVED),
										this.trigger('ON_CLOSE');
								}.bind(this)
							);
						},
						onSwitchToggled: function (e) {
							this.golfSwitch.is(':checked') ||
							this.fitnessSwitch.is(':checked') ||
							this.wellnessSwitch.is(':checked') ||
							this.marineSwitch.is(':checked') ||
							this.diveSwitch.is(':checked')
								? this.errorToolTipView &&
									(this.errorToolTipView.hide(), (this.errorToolTipView = null))
								: ((this.errorToolTipView = new Ns.A({
										el: po(e.target).closest('.connect-checkbox'),
										content: L.A.localize(
											'userexperience.dialog.no.activity.selected'
										),
									})),
									this.errorToolTipView.render(),
									this.errorToolTipView.show()),
								this.trigger(
									yo.ON_SWITCHES_CHANGE,
									this.getSelectedExperiences().length
								),
								this.updateSelections();
						},
						onDiveSwitchToggled: function (e) {
							this.diveSwitch.is(':checked')
								? (this.$('#externalBottomTime').show(),
									this.externalBottomTimeView.validator.validateInputNow())
								: (this.$('#externalBottomTime').hide(),
									this.externalBottomTimeView.validator.clearReport()),
								this.onSwitchToggled(e);
						},
						setupExternalBottomTimeView: function () {
							(this.externalBottomTimeView = new so.A({
								el: this.$('.externalBottomTimePlaceholder'),
								idPrefix: 'externalBottomTime_' + new Date().getTime(),
								hideSeconds: !0,
								hourInputMaxLength: 3,
								maxTime: co.A.maxSecondsOfBottomTime,
								maxExceededErrorKey: this.getExternalBottomTimeErrorKey,
							})),
								this.externalBottomTimeView.render();
						},
						getExternalBottomTimeErrorKey: function () {
							return L.A.localize(
								'user_experience_enter_a_time_less_than',
								co.A.maxHoursOfBottomTime
							);
						},
						updateSelections: function () {
							this.fitnessSwitch.is(':checked')
								? this.$('.fitness-experience-container').removeClass(
										'disabled'
									)
								: this.$('.fitness-experience-container').addClass('disabled'),
								this.wellnessSwitch.is(':checked')
									? this.$('.wellness-experience-container').removeClass(
											'disabled'
										)
									: this.$('.wellness-experience-container').addClass(
											'disabled'
										),
								this.golfSwitch.is(':checked')
									? this.$('.golf-experience-container').removeClass('disabled')
									: this.$('.golf-experience-container').addClass('disabled'),
								this.diveSwitch.is(':checked')
									? this.$('.dive-experience-container').removeClass('disabled')
									: this.$('.dive-experience-container').addClass('disabled'),
								this.marineSwitch.is(':checked')
									? this.$('.marine-experience-container').removeClass(
											'disabled'
										)
									: this.$('.marine-experience-container').addClass('disabled');
						},
						handleSideBarComponents: function () {
							var e = P.A.get('userRoles');
							(1 === e.length && -1 !== e.indexOf('ROLE_MARINE_USER')) ||
								(3 === e.length &&
									-1 !== e.indexOf('ROLE_CONNECTUSER') &&
									-1 !== e.indexOf('ROLE_CONNECT_2_USER') &&
									-1 !== e.indexOf('ROLE_MARINE_USER')) ||
								po('.new-user').show();
						},
						isMarineExperienceAvailable: function () {
							return (
								P.A.get('userRoles').indexOf('ROLE_MBTESTER') > -1 ||
								'true' === this.marinePref.get('value')
							);
						},
					});
				ho.Events = yo;
				const go = ho;
				var mo = i(171805),
					Ao = i.n(mo),
					_o = {
						CREATE_DASHBOARD_CLICK: 'CREATE_DASHBOARD_CLICK',
						ON_EXPERIENCES_SAVED: go.Events.ON_EXPERIENCES_SAVED,
						ON_SWITCHES_CHANGE: go.Events.ON_SWITCHES_CHANGE,
					},
					Eo = Ut.A.extend({
						showFooter: !0,
						showCloseButton: !1,
						customClasses: 'select-your-experience',
						options: { backdrop: 'static', keyboard: !1 },
						events: {
							'click #select-experience-save': 'onCreateDashboardClick',
						},
						initialize: function (e) {
							(this.marinePref = e.marinePref),
								(this.view = new go({
									saveEvent: _o.CREATE_DASHBOARD_CLICK,
									marinePref: this.marinePref,
								})),
								(this.modalTitle = L.A.localize('userexperience.dialog.title')),
								(this.footerTemplate = b().template(Ao())),
								this.listenTo(
									this.view,
									_o.ON_EXPERIENCES_SAVED,
									this.onExperiencesSaved
								),
								this.listenTo(
									this.view,
									_o.ON_SWITCHES_CHANGE,
									this.onSwitchesChange
								),
								this.listenTo(this.view, 'ON_CLOSE', this.close);
						},
						onCreateDashboardClick: function (e) {
							e.preventDefault(),
								this.view.trigger(_o.CREATE_DASHBOARD_CLICK, e.currentTarget);
						},
						onExperiencesSaved: function () {
							this.trigger(_o.ON_EXPERIENCES_SAVED);
						},
						onSwitchesChange: function (e) {
							var t = this.$('#select-experience-save');
							0 === e
								? t.attr('disabled', 'disabled')
								: t.removeAttr('disabled');
						},
					});
				Eo.Events = _o;
				var To = i(998813);
				I().emulateHTTP = !0;
				var Co,
					So = [],
					Io = I().Router.extend({
						initialize: function (e) {
							if (!e.userPreferences)
								throw 'MainRouter: userPreferences required.';
							(this.userPreferences = e.userPreferences),
								(this.displayName = this.userPreferences.get('displayName')),
								(this.dashboards = e.dashboards),
								(this.urlBustValue = e.urlBustValue);
							var t = window.location.search;
							if (t.length > 0) {
								var i = new URLSearchParams(t);
								window.chinaMode = i.get('chinaMode');
							}
							(this.viewerIsAuthenticated = !1),
								P.A.get('profileId')
									? ((this.viewerIsAuthenticated = !0),
										this.userPreferences.setPreferenceKey(P.A.get('profileId')),
										(this.userPreferences.viewerIsAuthenticated = !0))
									: (this.userPreferences.getLocaleFromCookie = !0),
								L.A.setUrlBustingParam(this.urlBustValue);
							var n = C()('body');
							this.setDefaultUserRoles(),
								(this.mainContainerView = new Ds({
									model: this.userPreferences,
									el: n,
									dashboards: this.dashboards,
									contextPath: e.contextPath,
									viewerIsAuthenticated: e.viewerIsAuthenticated,
									userProfile: e.userProfile,
									userPreferences: this.userPreferences,
									gAuthHost: e.gAuthHost,
									sessionLength: e.sessionLength,
									isError:
										'undefined' !== typeof window.ERROR_VIEW &&
										null !== window.ERROR_VIEW,
								})),
								this.mainContainerView.bind(
									Ds.Events.ON_ADD_WIDGET_CLICKED,
									this.onAddWidgetClicked,
									this
								),
								this.mainContainerView.bind(
									Ds.Events.ON_WIDGET_LIST_HIDDEN,
									function () {
										this.widgetContainerView &&
											this.widgetContainerView.removeOverlay();
									},
									this
								),
								this.mainContainerView.bind(
									Ds.Events.UNAUTHENTICATED_RENDER_COMPLETE,
									function () {
										n.find('#light_box_fade').remove();
									},
									this
								),
								this.mainContainerView.load(),
								this.bind('route', function (e, t) {
									me.default.getHostUrl(),
										me.default.url('/' + [e].concat(t).join('/'));
									Dt.A.push({
										event: 'track_pageview',
										category: window.location.href,
										action: document.title,
									}),
										window.ADRUM &&
											(Co = new window.ADRUM.events.VPageView({
												url: window.location.href,
											})).start();
								}),
								I().history.on(
									'route',
									function () {
										this.mainContainerView.sidebar &&
											this.mainContainerView.sidebar.clearActiveNavItems();
									}.bind(this)
								),
								this.setLastUsedDeviceAplicationKeyGlobalVariable();
						},
						routes: {
							'dashboard/:dashboardId': 'dashboard',
							'': 'dashboard',
							'*notFound': 'getResourceNotFoundRoute',
						},
						onSSOSessionExpired: function () {
							location.reload();
						},
						isErrorPage: function () {
							return null != ERROR_VIEW;
						},
						loadErrorPageView: function () {
							switch (ERROR_VIEW) {
								case 'resourceNotFoundRoute':
									this.getResourceNotFoundRoute();
									break;
								case 'NoPrivilegesPageView':
									this.getNoPrivilegesPageView();
									break;
								case 'RegistrationExceptions':
									this.getRegistrationExceptionPageView();
									break;
								case 'FailedDependencies':
									this.getFailedDependenciesPageView();
							}
						},
						getFailedDependenciesPageView: function () {
							var e = this;
							i.e(4112)
								.then(i.bind(i, 184112))
								.then(({ default: t }) => {
									var i = new t({ userPreferences: e.userPreferences });
									e.displayPage(i);
								});
						},
						getRegistrationExceptionPageView: function () {
							var e = this;
							i.e(2173)
								.then(i.bind(i, 162173))
								.then(({ default: t }) => {
									var i = new t({
										id: new Date().getTime(),
										userPreferences: v.A,
									});
									e.displayPage(i, !0);
								});
						},
						getNoPrivilegesPageView: function () {
							var e = this;
							i.e(6676)
								.then(i.bind(i, 786676))
								.then(({ default: t }) => {
									var i = '',
										n = '';
									window.location.href.indexOf('/activity/') > -1
										? ((i = 'privileges.activity'), (n = 'activity'))
										: window.location.href.indexOf('/course/') > -1
											? (i = 'privileges.course')
											: window.location.href.indexOf('/newspost/') > -1
												? (i = 'privileges.post')
												: window.location.href.indexOf('/swing-analysis/') >
														-1 && (i = 'privileges.swing.analysis');
									var a = new t({
										userPreferences: v.A,
										id: new Date().getTime(),
										authTypeKey: i,
										viewerIsAuthenticated: e.viewerIsAuthenticated,
										pageType: n,
									});
									(ERROR_VIEW = null), e.displayPage(a, !0);
								});
						},
						getResourceNotFoundRoute: function () {
							var e = this;
							i.e(2313)
								.then(i.bind(i, 142313))
								.then(({ default: t }) => {
									var i = '';
									window.location.href.indexOf('/activity/') > -1 &&
										(i = 'activity');
									var n = new t({
										userPreferences: e.userPreferences,
										displayName: e.displayName,
										pageType: i,
									});
									(ERROR_VIEW = null), e.displayPage(n, !0);
								});
						},
						displayEmbed: function (e) {
							'undefined' === typeof handled && this.isErrorPage()
								? this.loadErrorPageView()
								: this.embedContainerView
									? this.embedContainerView.setPageView(e)
									: e.once(
											oe.A.Loadable.Events.ON_DEPENDENCIES_LOADED,
											function () {
												(this.embedContainerView = new Ys({
													model: this.userPreferences,
													el: C()('.embed-container'),
												})),
													this.embedContainerView.setPageView(e);
											},
											this
										),
								e.run();
						},
						displayPage: function (e, t) {
							(0, $s.B)(),
								this.closeModals(),
								ga.A.hideAll(),
								Ns.A.hideAll(),
								window.ADRUM &&
									Co &&
									e.once(
										oe.A.Loadable.Events.ON_DEPENDENCIES_LOADED,
										function () {
											Co.end(), window.ADRUM.report(Co);
										}
									);
							var i = 'undefined' === typeof t && this.isErrorPage();
							i &&
								window.location.href.includes('/group/') &&
								((i = !1), (ERROR_VIEW = null)),
								i
									? this.loadErrorPageView()
									: this.pageContainerView
										? this.pageContainerView.setPageView(e)
										: e.once(
												oe.A.Loadable.Events.ON_DEPENDENCIES_LOADED,
												function () {
													this.removeExistingView(),
														(this.pageContainerView = new Bs({
															model: this.userPreferences,
															el: C()('.content'),
														})),
														this.pageContainerView.setPageView(e),
														this.pageContainerView.registerApplicationEvent(
															'RELOAD_DEVICES_POPUP_MENU',
															this,
															function () {
																this.mainContainerView.topHeader.devicePopupMenuView.load();
															}
														),
														this.pageContainerView.registerApplicationEvent(
															'SHOW_WAIT_CURSOR',
															this,
															this.showWaitCursor
														),
														this.pageContainerView.registerApplicationEvent(
															'HIDE_WAIT_CURSOR',
															this,
															this.hideWaitCursor
														);
												},
												this
											),
								i
									? this.pageContainerView ||
										(this.pageContainerView = new Bs({
											model: this.userPreferences,
											el: C()('.content'),
										}))
									: e.once(
											oe.A.Loadable.Events.ON_DEPENDENCIES_LOAD_FAILED,
											function (e) {
												this.isForbidden(e) && this.getNoPrivilegesPageView(),
													(this.isBadRequest(e) ||
														this.isNotFound(e) ||
														this.isServerError(e)) &&
														this.getFailedDependenciesPageView();
											},
											this
										),
								i || (this.showWaitCursor(), e.load());
						},
						isBadRequest: function (e) {
							return 400 === e.status;
						},
						isServerError: function (e) {
							return e.status >= 500;
						},
						isNotFound: function (e) {
							return 404 === e.status;
						},
						isForbidden: function (e) {
							return 403 === e.status;
						},
						showWaitCursor: function () {
							C()('body').addClass('wait');
						},
						hideWaitCursor: function () {
							C()('body').removeClass('wait');
						},
						setDefaultUserRoles: function () {
							const e = this;
							r.tI
								.post('/dashboard-service/userExperience', [
									'ROLE_WELLNESS_USER',
									'ROLE_FITNESS_USER',
								])
								.then(() => {
									e.refreshUserSession();
								});
						},
						refreshUserSession: function () {
							To.post('/modern/refreshUserSession').always(function () {
								const e = P.A.get('userRoles');
								P.A.set(
									'userRoles',
									b().union(e, ['ROLE_WELLNESS_USER', 'ROLE_FITNESS_USER'])
								);
							});
						},
						dashboard: function (e) {
							if (((0, $s.B)(), P.A.isRaceEventProvider()))
								I().history.navigate('/calendar', { trigger: !0 });
							else {
								parseInt(e, 10) || (e = null),
									this.closeModals(),
									ga.A.hideAll(),
									Ns.A.hideAll(),
									this.isErrorPage()
										? this.loadErrorPageView()
										: I().history.navigate('/home', { trigger: !0 });
							}
						},
						removeExistingView: function () {
							C()('.content').replaceWith(
								'<div class="content clearfix"></div>'
							),
								(be.A.activeDashboardId = null),
								this.widgetContainerView &&
									(this.widgetContainerView.onContainerUnloaded(),
									(this.widgetContainerView = null)),
								this.pageContainerView &&
									(this.pageContainerView.onContainerUnloaded(),
									(this.pageContainerView = null));
						},
						index: function () {
							alert('default');
						},
						onWidgetContainerDependenciesLoaded: function () {},
						onWidgetContainerLoaded: function () {},
						onPageContainerDependenciesLoaded: function () {},
						onAddWidgetClicked: function (e) {
							this.widgetContainerView ||
								alert(L.A.localize('no_dashboard_to_add_widget')),
								this.widgetContainerView.createWidgetInstance(
									be.A.activeDashboardId,
									e,
									b().bind(this.onWidgetInstanceCreated, this)
								);
						},
						onWidgetInstanceCreated: function (e) {
							this.widgetContainerView.animateWidget(e.id);
						},
						raiseApplicationEvent: function (e, t) {
							this.widgetContainerView &&
								this.widgetContainerView.raiseApplicationEvent.apply(
									this.widgetContainerView,
									arguments
								),
								this.pageContainerView &&
									this.pageContainerView.raiseApplicationEvent.apply(
										this.pageContainerView,
										arguments
									);
						},
						setLastUsedDeviceAplicationKeyGlobalVariable: function () {
							if (
								this.viewerIsAuthenticated &&
								b().isUndefined(window.lastUsedDeviceApplicationKey)
							)
								new O().fetch({
									success: function (e) {
										window.lastUsedDeviceApplicationKey = e.get(
											'lastUsedDeviceApplicationKey'
										);
									},
								});
						},
						registerModal: function (e) {
							So.push(e);
						},
						closeModals: function () {
							b().each(So, function (e) {
								e && 'function' === typeof e.close && e.close();
							});
						},
						displayNoPrivilegesPage: function () {
							this.getNoPrivilegesPageView();
						},
						displayPageNotFoundPage: function () {
							this.getResourceNotFoundRoute();
						},
						displayFailedDepenciesPage: function () {
							this.getFailedDependenciesPageView();
						},
					});
				const vo = Io;
				i(605515);
				var fo = i(156337),
					Do = i(805872);
				i(156187), i(312819);
				const No = s().create({ baseURL: '/' }),
					Ro = (e) => r.tI.get(`/userprofile-service/socialProfile/${e}`),
					bo = (e) => r.tI.get(`/dashboard-service/dashboards/${e}`),
					Lo = () => {
						const e = new URLSearchParams(window.location.search);
						return No.post('/services/auth/token/readonly', {
							code: e.get('code'),
							codeVerifier: Po('code_verifier') || e.get('code_verifier'),
						});
					},
					Po = (e) => {
						var t;
						return (
							(null ===
								(t = document.cookie.match(
									'(^|;)\\s*' + e + '\\s*=\\s*([^;]+)'
								)) || void 0 === t
								? void 0
								: t.pop()) || ''
						);
					},
					Oo = async () => {
						const e = new URLSearchParams(window.location.search),
							t = e.get('code');
						if (t && '' !== t)
							try {
								await (async () => {
									await o.A.initializeAccountSharing(Lo);
								})();
							} catch (i) {
								throw 'Error';
							}
						if (
							(await (async () => {
								const { actor_guid: e } = JSON.parse(
										localStorage.getItem('token')
									),
									[{ data: t }, { data: i }] = await Promise.all([
										r.tI.get('/userprofile-service/userprofile/settings'),
										!(0, Te.I7)() &&
											!(0, Te.Yd)() &&
											((n = e),
											r.tI.get(
												`/userprofile-service/socialProfile/image/multiple?garminGuid=${n}`
											)),
									]).catch(() => {
										throw (
											(console.log("Can't fetch dependencies"), new Error())
										);
									});
								var n;
								(window.VIEWER_USERPREFERENCES = t),
									localStorage.setItem(
										'viewerUserPreferences',
										JSON.stringify(t)
									),
									!(0, Te.I7)() &&
										!(0, Te.Yd)() &&
										localStorage.setItem(
											'actorProfileImage',
											JSON.stringify(i[0])
										);
								const { displayName: a } = t,
									[{ data: s }, { data: o }] = await Promise.all([
										Ro(a),
										!(0, Te.Yd)() && bo(a),
									]).catch(() => {
										throw (
											(console.log("Can't fetch dependencies"), new Error())
										);
									});
								(window.VIEWER_SOCIAL_PROFILE = s),
									(window.VIEWER_DASHBOARDS = o),
									localStorage.setItem(
										'viewerSocialProfile',
										JSON.stringify(s)
									),
									localStorage.setItem('viewerDashboards', JSON.stringify(o));
							})().catch(() => {
								throw 'Error';
							}),
							(0, Te.Yd)())
						) {
							const t = e.get('view'),
								i = e.get('redID');
							window.location.assign(
								`/modern/race-management/${t}${i ? '/' + i : ''}`
							);
						} else window.location.assign('/modern/home');
					};
				(async () => {
					if (window.location.pathname.includes('delegation-authorization')) {
						y();
						try {
							await Oo();
						} catch (e) {
							window.location.assign('/account-sharing');
						}
					} else
						(() => {
							N.A.setSystemTime(window.SYSTEM_TIME_GMT),
								C().ajaxSetup({ cache: !1 }),
								(0, r.Ay)();
							const e = (0, fo.default)();
							let t;
							if (P.A.get('garminGUID')) {
								let e;
								(0, Te.aO)() || (0, Te.I7)()
									? (e = JSON.parse(localStorage.getItem('viewerDashboards')))
									: ((e = window.VIEWER_DASHBOARDS),
										o.A.initialize(!0, P.A.get('garminGUID'))),
									(t = new D(e, { displayName: P.A.get('displayName') }));
							} else o.A.initialize(!1, null);
							Do.A.initialize(),
								'undefined' == typeof Window && (Window = {}),
								(Window.App = new vo({
									userPreferences: v.A,
									userProfile: P.A,
									dashboards: t,
									contextPath: '/modern/',
									urlBustValue: window.URL_BUST_VALUE,
									viewerIsAuthenticated: window.viewerIsAuthenticated,
									gAuthHost: window.GAUTH_HOST,
									sessionLength: window.SESSION_LENGTH,
									webToken: window.WEB_TOKEN,
								}));
							let n = [];
							n.push(i.e(1573).then(i.bind(i, 491573))),
								n.push(i.e(174).then(i.bind(i, 590174))),
								Promise.all(n).then(() => {
									console.log('Starting Backbone Router'),
										I().history.start({ pushState: !0, root: '/modern/' });
								}),
								(window.ConnectReduxStore = e);
						})();
				})();
			},
			583476: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => m,
					FX: () => g,
					Gh: () => p,
					WS: () => y,
					_0: () => u,
					aZ: () => c,
					ah: () => l,
					iH: () => d,
					uh: () => h,
				});
				var n = i(316550),
					a = i(593177);
				const s = {
						isFetching: !1,
						activities: { data: null, fetching: !1, success: !1, error: !1 },
						entities: {},
						lastUpdated: void 0,
						chartOrder: {},
					},
					r = (e) => (t, i) => ({
						...t,
						activities: {
							...t.activities,
							data: e ? i.data : null,
							fetching: !1,
							success: e,
							error: !e,
						},
					}),
					o = {
						[n.ACT]: (e, t) => ({
							...e,
							entities: { ...e.entities, [t.activityId]: void 0 },
							isFetching: !0,
						}),
						[n._nf]: (e, t) => ({
							...e,
							isFetching: !1,
							entities: { ...e.entities, [t.activityId]: t.activity },
							lastUpdated: t.receivedAt,
						}),
						[n.r9e]: (e, t) => ({
							...e,
							isFetching: !1,
							entities: { ...e.entities, activities: t.activities },
							lastUpdated: t.receivedAt,
						}),
						[n.LNJ]: (e) => ({ ...e, isFetching: !0, entities: s.entities }),
						[n.CWI]: () => s,
						[n.ThX]: (e, t) => ({ ...e, chartOrder: t.chartsOrder }),
						[a.mZ]: r(!0),
						[a.nA]: r(!1),
						[a.nq]: (e, t) => ({ ...e, activities: { fetching: !0 } }),
					},
					l = (e) => e.activities.entities,
					c = (e, t) => e.activities.entities[t],
					d = (e) => e.activities.entities.activities,
					u = (e) => e.activities.isFetching,
					p = (e) => e.activities.chartOrder,
					y = (e) => e.activities.activities.data,
					h = (e) => e.activities.activities.addSuccess,
					g = (e) => e.activities.activities.addError;
				function m(e = s, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
			},
			961673: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, Ll: () => r, cY: () => o });
				var n = i(316550);
				const a = { isFetching: !1, isFinish: !0, entity: [] },
					s = {
						[n.Wby]: (e) => ({ ...e, isFetching: !0, isFinish: !1 }),
						[n.kI]: (e, t) => ({
							...e,
							isFetching: !1,
							isFinish: !0,
							entity: { ...e.entity, [t.activityId]: t.activityHrTimeInZones },
							lastUpdated: t.receivedAt,
						}),
						[n.VAD]: (e) => ({ ...e, isFetching: !1, isFinish: !1 }),
					},
					r = (e, t) => e.activityHrTimeInZones.entity[t],
					o = (e) => e.activityHrTimeInZones.isFinish;
				function l(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			695484: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, a: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entity: {}, hasMoreDataToLoad: !0 },
					s = {
						[n.cu]: (e) => ({ ...e, isFetching: !0 }),
						[n.qxB]: (e, t) =>
							0 === Object.keys(e.entity).length || t.data.refresh
								? {
										...e,
										isFetching: !1,
										entity: t.data,
										lastUpdated: t.receivedAt,
										hasMoreDataToLoad:
											t.data.activityList && 10 === t.data.activityList.length,
									}
								: {
										...e,
										isFetching: !1,
										entity: {
											...t.data,
											activityList: [
												...e.entity.activityList,
												...t.data.activityList,
											],
										},
										lastUpdated: t.receivedAt,
										hasMoreDataToLoad:
											t.data.activityList && 10 === t.data.activityList.length,
									},
						[n.QrN]: () => a,
						[n.DV8]: (e, t) => {
							let i = { ...e.entity },
								n = !1;
							return (
								i.activityList &&
									i.activityList.forEach((e) => {
										e.ownerDisplayName === t.displayName &&
											((e.ownerProfileImageUrlLarge = null),
											(e.ownerProfileImageUrlMedium = null),
											(e.ownerProfileImageUrlSmall = null),
											(n = !0));
									}),
								n ? { ...e, entity: i } : e
							);
						},
					},
					r = (e) => e.activityList;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			762708: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, _F: () => r, uB: () => o });
				var n = i(316550);
				const a = { isFetching: !1, entities: {} },
					s = {
						[n.VJU]: (e) => ({ ...e, isFetching: !0 }),
						[n.hNn]: (e, t) => ({
							...e,
							isFetching: !1,
							entities: { ...e.entities, [t.activityId]: t.data },
							lastUpdated: t.receivedAt,
						}),
						[n.z7O]: () => a,
					},
					r = (e) => e.activityPolyline.entities,
					o = (e, t) => e.activityPolyline.entities[t];
				function l(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			944510: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, C2: () => r, L0: () => o });
				var n = i(316550);
				const a = { isFetching: !1, isFinish: !1, entity: [] },
					s = {
						[n.z3k]: (e) => ({ ...e, isFetching: !0, isFinish: !1 }),
						[n.THl]: (e, t) => ({
							...e,
							isFetching: !1,
							isFinish: !0,
							entity: {
								...e.entity,
								[t.activityId]: t.activityPowerTimeInZones,
							},
							lastUpdated: t.receivedAt,
						}),
						[n.qIU]: (e) => ({ ...e, isFetching: !1, isFinish: !1 }),
					},
					r = (e, t) => e.activityPowerTimeInZones.entity[t],
					o = (e) => e.activityPowerTimeInZones.isFinish;
				function l(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			817644: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, a: () => r });
				var n = i(316550);
				const a = {
						isFetching: !1,
						isInitialFetchComplete: !1,
						error: !1,
						entities: {
							running: [],
							cycling: [],
							hiking: [],
							strength_training: [],
							swimming: [],
							other: [],
							yoga: [],
							diving: [],
							favorites: {
								running: [],
								cycling: [],
								hiking: [],
								strength_training: [],
								swimming: [],
								other: [],
								yoga: [],
								diving: [],
							},
						},
					},
					s = {
						[n.VB$]: (e) => ({ ...e, isFetching: !0 }),
						[n.zeH]: (e, t) =>
							t.favorite
								? {
										...e,
										isFetching: !1,
										isInitialFetchComplete: !0,
										error: !1,
										entities: {
											...e.entities,
											favorites: {
												...e.entities.favorites,
												[t.parentActivityType]: t.activities || [],
											},
										},
										lastUpdated: t.receivedAt,
									}
								: {
										...e,
										isFetching: !1,
										isInitialFetchComplete: !0,
										error: !1,
										entities: {
											...e.entities,
											[t.parentActivityType]:
												[
													...e.entities[t.parentActivityType],
													...t.activities,
												] || [],
										},
										lastUpdated: t.receivedAt,
									},
						[n.Rop]: (e, t) => {
							const i = e.entities[t.parentActivityType].findIndex(
									(e) => e.activityId === t.activityDetails.activityId
								),
								n = e.entities.favorites[t.parentActivityType].findIndex(
									(e) => e.activityId === t.activityDetails.activityId
								);
							return (
								(e.entities[t.parentActivityType][i].favorite = t.favorite),
								t.favorite
									? e.entities.favorites[t.parentActivityType].push(
											t.activityDetails
										)
									: e.entities.favorites[t.parentActivityType].splice(n, 1),
								{
									...e,
									isFetching: !1,
									entities: {
										...e.entities,
										favorites: {
											...e.entities.favorites,
											[t.parentActivityType]:
												e.entities.favorites[t.parentActivityType],
										},
									},
									lastUpdated: t.receivedAt,
								}
							);
						},
						[n.$3c]: (e, t) => {
							const i = e.entities[t.parentActivityType].findIndex(
									(e) => e.activityId === t.activityDetails.activityId
								),
								n = e.entities.favorites[t.parentActivityType].findIndex(
									(e) => e.activityId === t.activityDetails.activityId
								);
							return (
								t.activityDetails.favorite &&
									e.entities.favorites[t.parentActivityType].splice(n, 1),
								e.entities[t.parentActivityType].splice(i, 1),
								{
									...e,
									isFetching: !1,
									entities: {
										...e.entities,
										[t.parentActivityType]: e.entities[t.parentActivityType],
										favorites: {
											...e.entities.favorites,
											[t.parentActivityType]:
												e.entities.favorites[t.parentActivityType],
										},
									},
									lastUpdated: t.receivedAt,
								}
							);
						},
						[n.U4D]: (e, t) => ({
							...e,
							error: !0,
							isInitialFetchComplete: !0,
							lastUpdated: t.receivedAt,
						}),
						[n.VGp]: () => a,
					},
					r = (e) => e.activitySearch;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			808643: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, FG: () => o, TO: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entity: [] },
					s = {
						[n.s1i]: (e) => ({ ...e, isFetching: !0 }),
						[n.QPy]: (e, t) => ({
							...e,
							isFetching: !1,
							entity: t.activityTypes,
							lastUpdated: t.receivedAt,
						}),
						[n.xDv]: (e) => ({ ...e, isFetching: !1 }),
					},
					r = (e) => e.activityTypes.entity,
					o = (e) => e.activityTypes.isFetching;
				function l(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			942640: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, k: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entities: {} },
					s = {
						[n.LP6]: (e) => ({ ...e, isFetching: !0 }),
						[n.uU5]: (e, t) => ({
							...e,
							isFetching: !1,
							entities: { ...e.entities, [t.displayName]: t.json },
							lastUpdated: t.receivedAt,
						}),
						[n.BLe]: () => a,
					},
					r = (e) => e.favoriteActivities.entities;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			619588: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					Qx: () => l,
					UW: () => d,
					Wp: () => c,
					pB: () => u,
				});
				var n = i(316550);
				const a = { fetching: !1, lastUpdated: {} },
					s = (e) => ({ ...e, fetching: !1 }),
					r = {
						[n.faG]: (e) => ({ ...e, fetching: !0 }),
						[n.Iz1]: (e, { activityDetails: t }) => ({
							...e,
							fetching: !1,
							[t.activityId]: t,
							lastUpdated: { ...e.lastUpdated, [t.activityId]: Date.now() },
						}),
						[n.hu3]: s,
						[n.hu3]: s,
						[n.HZT]: (e, { typeSplitIndex: t }) => ({
							...e,
							typeSplitIndex: t,
						}),
						[n.wqD]: (e, t) => {
							const { activityDetails: i } = t;
							if (!e[i.activityId]) return { ...e, fetching: !1 };
							const n = {
								...i,
								activityHeatMapDTO: e[i.activityId].activityHeatMapDTO,
								geoPolylineDTO: e[i.activityId].geoPolylineDTO,
							};
							return {
								...e,
								fetching: !1,
								[i.activityId]: n,
								lastUpdated: { ...e.lastUpdated, [i.activityId]: Date.now() },
							};
						},
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				const l = (e, t) => e.activityDetails && e.activityDetails[t],
					c = (e) => e.activityDetails.fetching,
					d = (e) => e.activityDetails.typeSplitIndex,
					u = (e, t) => e.activityDetails && e.activityDetails.lastUpdated[t];
			},
			844013: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, I6: () => o, XO: () => l, er: () => c });
				var n = i(316550);
				const a = { weather: [] },
					s = {
						[n.yzC]: (e, t) => ({ ...e, ...t.weather }),
						[n.jOq]: (e, t) => ({ ...e, ...t }),
						[n.Teo]: (e) => ({ ...a }),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return { type: n._tV, activityId: e };
				}
				function l() {
					return { type: n.Teo };
				}
				const c = (e) => e.weatherStationDTO;
			},
			878566: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => u, Ib: () => o, MG: () => l, Wf: () => c });
				var n = i(586816),
					a = i(316550);
				const s = { entities: {}, fetching: {} },
					r = (e) => e.activityMapDetailsReducer,
					o = (e, t) => {
						var i;
						return null === (i = r(e).entities[t]) || void 0 === i
							? void 0
							: i.data;
					},
					l = (
						e,
						{ maxPolylineSize: t, maxHeatMapSize: i, splitTypes: s } = {}
					) => ({
						type: (0, n.B)() ? a.RaI : a.VM4,
						activityId: e,
						maxPolylineSize: t,
						maxHeatMapSize: i,
						splitTypes: s,
					}),
					c = (e, { error: t, data: i }) => ({
						type: a.c2D,
						activityId: e,
						error: t,
						data: i,
					}),
					d = {
						[a.VM4]: (e, t) => ({
							...e,
							entities: {
								...e.entities,
								[t.activityId]: { ...e.entities[t.activityId], error: !1 },
							},
							fetching: { ...e.fetching, [t.activityId]: !0 },
						}),
						[a.c2D]: (e, t) => ({
							...e,
							entities: {
								...e.entities,
								[t.activityId]: { error: t.error, data: t.data },
							},
							fetching: { ...e.fetching, [t.activityId]: !0 },
						}),
					};
				function u(e = s, t = {}) {
					const i = d[t.type];
					return i ? i(e, t) : e;
				}
			},
			400843: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, cl: () => l, cr: () => o });
				var n = i(316550);
				const a = {},
					s = {
						[n.o3$]: (e, t) => ({
							...e,
							[t.typedSplits.activityId]: {
								...t.typedSplits,
								...e.typedSplits,
							},
						}),
						[n.JQO]: (e, t) => ({ ...e, ...t }),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return { type: n.whv, activityId: e };
				}
				const l = (e, t) => e.typedSplits[t] && e.typedSplits[t].splits;
			},
			15351: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => h, b: () => y });
				var n = i(316550);
				const a = {
						latestEarned: { isFetching: !1, data: null },
						attributes: { isFetching: !1, data: null },
						earned: { isFetching: !1, data: null },
						available: { isFetching: !1, data: null },
						comparison: { isFetching: !1, data: null },
						leaderboard: {
							isFetching: !1,
							isAppending: !1,
							data: null,
							hasMoreDataToLoad: !1,
						},
					},
					s = (e, t) => ({
						...e,
						latestEarned: {
							isFetching: !1,
							data: t.data,
							lastUpdated: t.receivedAt,
						},
					}),
					r = (e, t) => ({
						...e,
						attributes: {
							isFetching: !1,
							data: t.data,
							lastUpdated: t.receivedAt,
						},
					}),
					o = (e) => ({ ...e, earned: { ...e.earned, isFetching: !0 } }),
					l = (e, t) => ({
						...e,
						earned: { isFetching: !1, data: t.data, lastUpdated: t.receivedAt },
					}),
					c = (e, t) => ({
						...e,
						available: {
							isFetching: !1,
							data: t.data,
							lastUpdated: t.receivedAt,
						},
					}),
					d = (e, t) => ({
						...e,
						comparison: {
							isFetching: !1,
							data: t.data,
							lastUpdated: t.receivedAt,
						},
					}),
					u = (e, t) => {
						let i;
						return (
							(i = t.isAppending
								? {
										...e.leaderboard.data,
										connections: [
											...e.leaderboard.data.connections,
											...t.data.connections,
										],
									}
								: t.data),
							{
								...e,
								leaderboard: {
									isFetching: !1,
									isAppending: !1,
									data: i,
									lastUpdated: t.receivedAt,
									hasMoreDataToLoad: e.leaderboard.data
										? e.leaderboard.data.connections.length +
												t.data.connections.length <
											e.leaderboard.data.publicConnectionCount +
												t.data.privateConnectionCount
										: t.data.connections.length <
											t.data.publicConnectionCount +
												t.data.privateConnectionCount,
								},
							}
						);
					},
					p = {
						[n.F1d]: (e) => ({
							...e,
							latestEarned: { ...e.latestEarned, isFetching: !0 },
						}),
						[n.t$B]: s,
						[n.l0b]: s,
						[n.CzN]: (e) => ({
							...e,
							attributes: { ...e.attributes, isFetching: !0 },
						}),
						[n.Qmh]: r,
						[n.WC9]: r,
						[n.xst]: o,
						[n.LvO]: l,
						[n.pfG]: l,
						[n.ToW]: (e) => ({
							...e,
							available: { ...e.earned, isFetching: !0 },
						}),
						[n.Znr]: c,
						[n.vJ6]: c,
						[n.fIj]: (e) => ({
							...e,
							comparison: { ...e.comparison, isFetching: !0 },
						}),
						[n.Bz9]: d,
						[n.RWK]: d,
						[n.Njq]: (e, t) => ({
							...e,
							leaderboard: {
								...e.leaderboard,
								isFetching: !0,
								isAppending: t.isAppending,
							},
						}),
						[n.NrZ]: u,
						[n.n9V]: u,
						[n.jHm]: (e) => ({ ...e, leaderboard: { ...a.leaderboard } }),
						[n.Ft_]: o,
						[n.Rzy]: l,
						[n.nfx]: l,
						[n.dWh]: o,
						[n.Qr3]: l,
						[n.UUm]: l,
						[n.jJe]: () => ({ ...a }),
					},
					y = (e) => e.badges;
				function h(e = a, t = {}) {
					const i = p[t.type];
					return i ? i(e, t) : e;
				}
			},
			382158: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => _,
					Kw: () => p,
					RB: () => c,
					Wj: () => y,
					aY: () => d,
					dA: () => g,
					gv: () => m,
					s8: () => u,
					wq: () => h,
				});
				var n = i(316550);
				const a = {
						benchmarkExercisesData: [],
						benchmarkExercisesDataFetching: !1,
						benchmarkExercisesDataSuccess: !1,
						benchmarkExercisesDataFail: !1,
						benchmarkExerciseDataSaving: !1,
						benchmarkExerciseDataSaveSuccess: !1,
						benchmarkExerciseDataSaveFail: !1,
						benchmarkExerciseDataUpdating: !1,
						benchmarkExerciseDataUpdateSuccess: !1,
						benchmarkExerciseDataUpdateFail: !1,
						benchmarkExerciseDataDeleting: !1,
						benchmarkExerciseDataDeleteSuccess: !1,
						benchmarkExerciseDataDeleteFail: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						benchmarkExercisesData: e ? i.benchmarkExercisesData : [],
						benchmarkExercisesDataFetching: !1,
						benchmarkExercisesDataSuccess: e,
						benchmarkExercisesDataFail: !e,
					}),
					r = (e) => (t, i) => ({
						...t,
						benchmarkExerciseDataSaving: !1,
						benchmarkExerciseDataSaveSuccess: e,
						benchmarkExerciseDataSaveFail: !e,
					}),
					o = (e) => (t, i) => ({
						...t,
						benchmarkExerciseDataUpdating: !1,
						benchmarkExerciseDataUpdateSuccess: e,
						benchmarkExerciseDataUpdateFail: !e,
					}),
					l = (e) => (t, i) => ({
						...t,
						benchmarkExerciseDataDeleting: !1,
						benchmarkExerciseDataDeleteSuccess: e,
						benchmarkExerciseDataDeleteFail: !e,
						benchmarkExerciseDataUpdateSuccess: !1,
						benchmarkExerciseDataSaveSuccess: !1,
					}),
					c = (e) => e.benchmarkExercises.benchmarkExercisesDataFetching,
					d = (e) => e.benchmarkExercises.benchmarkExerciseDataSaving,
					u = (e) => e.benchmarkExercises.benchmarkExerciseDataSaveSuccess,
					p = (e) => e.benchmarkExercises.benchmarkExerciseDataUpdating,
					y = (e) => e.benchmarkExercises.benchmarkExerciseDataUpdateSuccess,
					h = (e) => e.benchmarkExercises.benchmarkExerciseDataDeleting,
					g = (e) => e.benchmarkExercises.benchmarkExercisesData,
					m = (e, t) =>
						e.benchmarkExercises.benchmarkExercisesData.find(
							({ benchmarkKey: e }) => e === t
						),
					A = {
						[n.nx4]: (e) => ({ ...e, benchmarkExercisesDataFetching: !0 }),
						[n.a8y]: s(!0),
						[n.Fqw]: s(!1),
						[n.QKo]: (e) => ({ ...e, benchmarkExerciseDataSaving: !0 }),
						[n.yqw]: r(!0),
						[n.XnB]: r(!1),
						[n.jq6]: (e) => ({ ...e, benchmarkExerciseDataUpdating: !0 }),
						[n.mqO]: o(!0),
						[n.hgz]: o(!1),
						[n.dDV]: (e) => ({ ...e, benchmarkExerciseDataDeleting: !0 }),
						[n.Y8Y]: l(!0),
						[n.D4e]: l(!1),
					};
				function _(e = a, t = {}) {
					const i = A[t.type];
					return i ? i(e, t) : e;
				}
			},
			61674: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					ST: () => o,
					_P: () => l,
					lv: () => c,
					tS: () => u,
					u6: () => d,
				});
				var n = i(316550);
				const a = {
						heartRateZones: {},
						isHeartRateZonesFetching: !1,
						didHeartRateZonesFetchFail: !1,
					},
					s = {
						[n.PkB]: (e, t) => ({
							heartRateZones: { ...e.heartRateZones },
							isHeartRateZonesFetching: !0,
							didHeartRateZonesFetchFail: !1,
						}),
						[n.fQZ]: (e, t) => {
							let i = {};
							return (
								t.heartRateZones.map((e) => (i[e.sport] = e)),
								{
									heartRateZones: { ...i },
									isHeartRateZonesFetching: !1,
									didHeartRateZonesFetchFail: !1,
								}
							);
						},
						[n.GgE]: (e, t) => ({
							heartRateZones: { ...e.heartRateZones },
							isHeartRateZonesFetching: !1,
							didHeartRateZonesFetchFail: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return { type: n.PkB, meta: { cacheTime: e ? null : 12e4 } };
				}
				const l = (e, t) => {
						let i = null;
						return (
							e.heartRateZones.heartRateZones &&
								(e.heartRateZones.heartRateZones[t]
									? (i = e.heartRateZones.heartRateZones[t])
									: e.heartRateZones.heartRateZones.DEFAULT &&
										(i = e.heartRateZones.heartRateZones.DEFAULT)),
							i
						);
					},
					c = (e) => {
						let t = null;
						return (
							e.heartRateZones.heartRateZones &&
								(t = e.heartRateZones.heartRateZones),
							t
						);
					},
					d = (e) => e.heartRateZones.isHeartRateZonesFetching,
					u = (e) => e.heartRateZones.didHeartRateZonesFetchFail;
			},
			591631: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					FA: () => d,
					Sf: () => c,
					jY: () => l,
					tj: () => o,
				});
				var n = i(316550);
				const a = {
						powerZones: {},
						isPowerZonesFetching: !1,
						didPowerZonesFetchFailing: !1,
					},
					s = {
						[n.a8A]: (e, t) => ({
							powerZones: { ...e.powerZones },
							isPowerZonesFetching: !0,
							didPowerZonesFetchFailing: !1,
						}),
						[n.Abp]: (e, t) => {
							let i = {};
							return (
								t.powerZones.map((e) => (i[e.sport] = e)),
								{
									powerZones: { ...i },
									isPowerZonesFetching: !1,
									didPowerZonesFetchFailing: !1,
								}
							);
						},
						[n.fRn]: (e, t) => ({
							powerZones: { ...e.powerZones },
							isPowerZonesFetching: !1,
							didPowerZonesFetchFailing: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t) {
					return {
						type: n.a8A,
						doNotGenerateDefaults: t,
						meta: { cacheTime: e ? null : 12e4 },
					};
				}
				const l = (e, t) => {
						let i = null;
						return (
							e.powerZones.powerZones &&
								(e.powerZones.powerZones[t]
									? (i = e.powerZones.powerZones[t])
									: e.powerZones.powerZones.DEFAULT &&
										(i = e.powerZones.powerZones.DEFAULT)),
							i
						);
					},
					c = (e) => {
						let t = null;
						return e.powerZones.powerZones && (t = e.powerZones.powerZones), t;
					},
					d = (e) => e.powerZones.isPowerZonesFetching;
			},
			687024: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => h,
					G_: () => y,
					If: () => u,
					Qe: () => c,
					YA: () => l,
					hV: () => p,
					mF: () => d,
				});
				var n = i(316550);
				const a = {
						blockedUserList: [],
						blockedUserListFetching: !1,
						blockedUserListFetchSuccess: !1,
						blockedUserListFetchFail: !1,
						userUnblocking: !1,
						userUnblockSuccess: !1,
						userUnblockFail: !1,
					},
					s =
						(e) =>
						(t, { blockedUserList: i }) => ({
							...t,
							blockedUserList: i,
							blockedUserListFetching: !1,
							blockedUserListFetchSuccess: e,
							blockedUserListFetchFail: !e,
						}),
					r = (e) => (t) => ({
						...t,
						userUnblocking: !1,
						userUnblockSuccess: e,
						userUnblockFail: !e,
					}),
					o = {
						[n.MFJ]: (e) => ({
							...e,
							blockedUserListFetching: !0,
							blockedUserListFetchSuccess: !1,
							blockedUserListFetchFail: !1,
						}),
						[n.d7w]: s(!0),
						[n.QzT]: s(!1),
						[n.IrP]: (e) => ({
							...e,
							userUnblocking: !0,
							userUnblockSuccess: !1,
							userUnblockFail: !1,
						}),
						[n.LuW]: r(!0),
						[n.YrR]: r(!1),
					},
					l = (e) => e.blockUser.blockedUserListFetching,
					c = (e) => e.blockUser.blockedUserListFetchFail,
					d = (e) => e.blockUser.blockedUserList,
					u = (e) => e.blockUser.userUnblocking,
					p = (e) => e.blockUser.userUnblockSuccess,
					y = (e) => e.blockUser.userUnblockFail;
				function h(e = a, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
			},
			690920: (e, t, i) => {
				'use strict';
				i.d(t, {
					$1: () => A,
					Ay: () => d,
					B4: () => E,
					C5: () => b,
					CR: () => m,
					FI: () => S,
					LX: () => T,
					P$: () => I,
					Pn: () => D,
					TG: () => C,
					_M: () => R,
					bP: () => h,
					bj: () => P,
					d0: () => N,
					eh: () => v,
					hf: () => L,
					rF: () => u,
					uc: () => f,
					wL: () => p,
					xb: () => g,
					xe: () => y,
					y_: () => _,
				});
				var n = i(22903),
					a = i(692135),
					s = i(908950),
					r = i(422460);
				const o = {
						oneDay: { entries: {}, isFetching: null, didFetchFail: !1 },
						oneMonth: { entries: {}, isFetching: null, didFetchFail: !1 },
						sevenDays: { entries: {}, isFetching: null, didFetchFail: !1 },
						fourWeeks: { entries: {}, isFetching: null, didFetchFail: !1 },
						fiftyTwoWeeks: { entries: {}, isFetching: null, didFetchFail: !1 },
						fiftyTwoWeeksReport: {
							entries: {},
							isFetching: null,
							didFetchFail: !1,
						},
						currentTab: a.DF.ONE_DAY,
						currentPageDate: null,
						addBPMFetching: null,
						noteUpdating: !1,
						noteUpdateFailed: !1,
					},
					l = (e) => ({ ...e, addBPMFetching: !1 }),
					c = {
						[n.sY]: (e) => ({
							...e,
							oneDay: { ...e.oneDay },
							isFetching: !0,
							didFetchFail: !1,
						}),
						[n.lE]: (e, t) => ({
							...e,
							oneDay: {
								entries: { ...e.oneDay.entries, [t.date]: t.data },
								isFetching: !1,
								didFetchFail: !1,
							},
						}),
						[n.G5]: (e, t) => (
							delete e.bloodPressure.oneDay[t.date],
							{
								...e,
								oneDay: {
									entries: { ...e.oneDay.entities },
									isFetching: !1,
									didFetchFail: !0,
								},
							}
						),
						[n.K4]: (e, t) => ({ ...e, currentTab: t.currentTab }),
						[n.rY]: (e, t) => {
							let i = r.Ay.formatISODate(new Date());
							return {
								...e,
								currentPageDate: t.currentPageDate > i ? i : t.currentPageDate,
							};
						},
						[n.Tt]: (e) => ({
							...e,
							fiftyTwoWeeks: {
								...e.fiftyTwoWeeks,
								isFetching: !0,
								didFetchFail: !1,
							},
						}),
						[n.MV]: (e, t) => ({
							...e,
							fiftyTwoWeeks: {
								...e.fiftyTwoWeeks,
								entries: { ...e.fiftyTwoWeeks.entries, [t.date]: t.data },
								isFetching: !1,
								didFetchFail: !1,
							},
						}),
						[n.Fu]: (e) => ({
							...e,
							fiftyTwoWeeks: {
								...e.fiftyTwoWeeks,
								isFetching: !1,
								didFetchFail: !0,
							},
						}),
						[n.mq]: (e) => ({
							...e,
							fiftyTwoWeeks: {
								...e.fiftyTwoWeeks,
								isFetching: !0,
								didFetchFail: !1,
							},
						}),
						[n.XM]: (e, t) => ({
							...e,
							fiftyTwoWeeksReport: {
								...e.fiftyTwoWeeksReport,
								[t.endDate]: t.data,
								isFetching: !1,
								didFetchFail: !1,
							},
						}),
						[n.sD]: (e) => ({
							...e,
							fiftyTwoWeeksReport: {
								...e.fiftyTwoWeeksReport,
								isFetching: !1,
								didFetchFail: !0,
							},
						}),
						[n.Kr]: (e, t) => {
							let i = t.dateRange ? t.dateRange : s.IC.SEVEN_DAYS;
							return {
								...e,
								[i]: { ...e[i], isFetching: !0, didFetchFail: !1 },
							};
						},
						[n.dS]: (e, t) => {
							let i = t.dateRange ? t.dateRange : s.IC.SEVEN_DAYS;
							return {
								...e,
								[i]: {
									...e[i],
									entries: { ...e[i].entries, [t.date]: t.data },
									isFetching: !1,
									didFetchFail: !1,
								},
							};
						},
						[n.aF]: (e, t) => {
							let i = t.dateRange ? t.dateRange : s.IC.SEVEN_DAYS;
							return {
								...e,
								[i]: { ...e[i], isFetching: !1, didFetchFail: !0 },
							};
						},
						[n.zL]: (e) => ({ ...e, addBPMFetching: !0 }),
						[n.S7]: l,
						[n.fU]: l,
						[n.YY]: (e) => ({ ...o, currentTab: e.currentTab }),
						[n.wP]: (e) => ({ ...o, currentTab: e.currentTab }),
						[n.cx]: (e) => ({ ...e, noteUpdating: !0 }),
						[n.FJ]: (e) => ({ ...e, noteUpdating: !1, noteUpdateFailed: !1 }),
						[n.eG]: (e) => ({ ...e, noteUpdating: !1, noteUpdateFailed: !0 }),
					};
				function d(e = o, t = {}) {
					const i = c[t.type];
					return i ? i(e, t) : e;
				}
				function u(e) {
					return { type: n.rY, currentPageDate: e };
				}
				function p(e, t) {
					return { type: n.ev, bloodPressure: e, fetchLatestData: t };
				}
				function y(e) {
					return { type: n.hw, date: e };
				}
				function h(e) {
					return { type: n.K4, currentTab: e };
				}
				function g(e) {
					return { type: n.UN, dates: e };
				}
				function m(e, t) {
					return { type: n.$p, dates: e, dateRange: t };
				}
				function A(e, t, i, a, s, r) {
					return {
						type: n.OL,
						payload: e,
						currentDate: t,
						actionToDispatch: i,
						saveBPM: a,
						fetchData: s,
						fetchLatestData: r,
					};
				}
				function _() {
					return { type: n.YY };
				}
				function E(e, t) {
					return { type: n.$i, payload: e, fetchBPData: t };
				}
				const T = (e, t) =>
						e.bloodPressure.oneDay.entries[t]
							? e.bloodPressure.oneDay.entries[t].bloodPressureMeasurements
							: null,
					C = (e) => e.bloodPressure.oneDay.isFetching,
					S = (e) => e.bloodPressure.currentTab,
					I = (e, t) =>
						e.bloodPressure.fiftyTwoWeeks.entries[t]
							? e.bloodPressure.fiftyTwoWeeks.entries[t].measurementSummaries
							: null,
					v = (e, t) =>
						e.bloodPressure.sevenDays.entries[t]
							? e.bloodPressure.sevenDays.entries[t].measurementSummaries
							: null,
					f = (e) => e.bloodPressure.sevenDays.isFetching,
					D = (e) => e.bloodPressure.isFetching,
					N = (e) => e.bloodPressure.fiftyTwoWeeks.isFetching,
					R = (e) => e.bloodPressure.fourWeeks.isFetching,
					b = (e, t) =>
						e.bloodPressure.fourWeeks.entries[t]
							? e.bloodPressure.fourWeeks.entries[t].measurementSummaries
							: null,
					L = (e) => e.bloodPressure.currentPageDate,
					P = (e) => e.bloodPressure.addBPMFetching;
			},
			403282: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					OA: () => c,
					Qu: () => l,
					c2: () => o,
					kb: () => d,
				});
				var n = i(22903);
				const a = { latestBP: {}, isFetching: !0, didFetchFail: !1 },
					s = {
						[n.JN]: (e) => ({
							...e,
							latestBP: { ...e.latestBP, isFetching: !0, didFetchFail: !1 },
						}),
						[n.CJ]: (e, t) => ({
							latestBP: { ...e.latestBP, [t.endDate]: t.data },
							isFetching: !1,
							didFetchFail: !1,
						}),
						[n.be]: (e, t) => (
							delete e.latestBP[t.endDate],
							{ latestBP: { ...e.latestBP }, isFetching: !1, didFetchFail: !0 }
						),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t) {
					return { type: n.O1, date: e, meta: { cacheTime: t ? null : 12e4 } };
				}
				const l = (e, t) =>
						e.latestBP.latestBP[t] ? e.latestBP.latestBP[t][0] : null,
					c = (e) => e.latestBP.isFetching,
					d = (e) => e.latestBP.didFetchFail;
			},
			280560: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					TB: () => l,
					U6: () => d,
					XK: () => o,
					l1: () => u,
					sh: () => c,
				});
				var n = i(316550);
				const a = {
						dailyBodyBatteryReportData: null,
						isDailyBodyBatteryReportFetching: !1,
						didDailyBodyBatteryReportFail: !1,
						dailyBodyBatteryEvents: [],
						isDailyBodyBatteryEventsFetching: !1,
						didDailyBodyBatteryEventsFail: !1,
					},
					s = {
						[n.w_q]: (e) => ({
							...e,
							isDailyBodyBatteryReportFetching: !0,
							didDailyBodyBatteryReportFail: !1,
						}),
						[n.Hxb]: (e, t) => ({
							...e,
							dailyBodyBatteryReportData: t.data,
							isDailyBodyBatteryReportFetching: !1,
							didDailyBodyBatteryReportFail: !1,
						}),
						[n.yZU]: (e, t) => (
							delete e.bodyBattery.dailyBodyBatteryReportData,
							{
								...e,
								dailyBodyBatteryReportData: null,
								isDailyBodyBatteryReportFetching: !1,
								didDailyBodyBatteryReportFail: !0,
							}
						),
						[n.v2W]: (e) => ({
							...e,
							isDailyBodyBatteryEventsFetching: !0,
							didDailyBodyBatteryEventsFail: !1,
						}),
						[n.urR]: (e, t) => ({
							...e,
							dailyBodyBatteryEvents: t.data,
							isDailyBodyBatteryEventsFetching: !1,
							didDailyBodyBatteryEventsFail: !1,
						}),
						[n.lRj]: (e, t) => (
							delete e.dailyBodyBatteryEvents,
							{
								...e,
								dailyBodyBatteryEvents: null,
								isDailyBodyBatteryEventsFetching: !1,
								didDailyBodyBatteryEventsFail: !0,
							}
						),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				const o = (e, t) => e.bodyBattery.dailyBodyBatteryReportData,
					l = (e) => e.bodyBattery.isDailyBodyBatteryReportFetching,
					c = (e) => e.bodyBattery.dailyBodyBatteryEvents,
					d = (e) => e.bodyBattery.isDailyBodyBatteryEventsFetching,
					u = (e) => e.bodyBattery.didDailyBodyBatteryEventsFail;
			},
			754355: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => u,
					DO: () => r,
					VK: () => s,
					WD: () => o,
					bU: () => l,
				});
				var n = i(410682);
				const a = {
						query: { events: null, fetching: !1, success: !1, error: !1 },
					},
					s = (e) => e.eventBasedGoals.query.events,
					r = (e) => e.eventBasedGoals.query.fetching,
					o = (e) => e.eventBasedGoals.query.success,
					l = (e) => e.eventBasedGoals.query.error,
					c = (e) => (t, i) => ({
						...t,
						query: {
							...t.query,
							events: e ? i.data : null,
							success: e,
							error: !e,
							fetching: !1,
						},
					}),
					d = {
						[n.AV]: c(!0),
						[n.H7]: (e, t) => ({
							...e,
							query: {
								...e.query,
								events: null,
								fetching: !0,
								error: !1,
								success: !1,
							},
						}),
						[n.Be]: c(!1),
						[n.lw]: (e) => ({ ...e, query: a.query }),
						[n.Z0]: (e, t) => ({
							...e,
							query: { ...e.query, events: t.events },
						}),
					};
				function u(e = a, t = {}) {
					const i = d[t.type];
					return i ? i(e, t) : e;
				}
			},
			543548: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					N2: () => d,
					Ot: () => y,
					QR: () => u,
					Qo: () => c,
					cC: () => h,
					g1: () => o,
					nZ: () => g,
					s5: () => p,
					y4: () => l,
				});
				var n = i(316550);
				const a = {
						challenges: {},
						fetching: !1,
						joinedSuccessDialogOpened: !1,
						joinChallengeFullFail: !1,
					},
					s = {
						[n.fHo]: (e, t) => ({
							...e,
							challenges: { ...e.challenges, [t.challenge.uuid]: t.challenge },
						}),
						[n.L0r]: (e) => ({ ...e, joinedSuccessDialogOpened: !0 }),
						[n.K2W]: (e, t) =>
							'ForbiddenException' === t.error.error &&
							"The status of the partner rewards challenge is 'FULL'" ===
								t.error.message
								? { ...e, joinChallengeFullFail: !0 }
								: {
										...e,
										challenges: {
											...e.challenges,
											[t.challenge.challengeId]: null,
										},
									},
						[n.wND]: (e) => ({ ...e, joinedSuccessDialogOpened: !1 }),
						[n.IiA]: (e) => ({ ...e }),
						[n.kun]: (e) => ({ ...e, challenges: {} }),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return { type: n.NmK, challengeId: e };
				}
				function l(e) {
					return { type: n.kun, challengeId: e };
				}
				function c(e) {
					return { type: n.JPR, challengeId: e };
				}
				function d(e) {
					return { type: n.oMs, challengeId: e };
				}
				function u() {
					return { type: n.wND };
				}
				const p = (e, t) => e.challenge.challenges[t],
					y = (e) => e.challenge.fetching,
					h = (e) => e.challenge.joinedSuccessDialogOpened,
					g = (e) => e.challenge.joinChallengeFullFail;
			},
			259540: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => T,
					J8: () => h,
					Oh: () => y,
					VO: () => d,
					WL: () => p,
					WX: () => g,
					eT: () => A,
					em: () => m,
					k8: () => u,
					z: () => _,
				});
				var n = i(316550);
				const a = 0,
					s = 1,
					r = 2,
					o = 3,
					l = {
						viewerSocialProfile: null,
						route: null,
						badgeChallenge: {
							error: !1,
							fetching: !0,
							limit: -1,
							list: null,
							hasMore: !1,
							processing: [],
							notificationStatus: a,
							lastJoined: null,
						},
						virtualChallenge: {
							error: !1,
							fetching: !0,
							limit: -1,
							list: null,
							hasMore: !1,
						},
						virtualChallengeDetail: {
							challengeUuid: null,
							fetching: !0,
							error: !1,
							challenge: null,
							optInError: !1,
						},
						badgeDetail: { badge: null, open: !1, fetchng: !0 },
						currentChallenge: {
							error: !1,
							fetching: !0,
							limit: -1,
							autoChallenge: null,
							groupChallenges: null,
							adHocChallenges: null,
							vivokidChallenges: null,
							teamStepsVivokidChallenges: null,
							badgeChallenges: null,
							virtualChallenges: null,
						},
						optOutDialog: { open: !1, submitting: !1 },
						pastChallenge: {
							error: !1,
							fetching: !0,
							limit: -1,
							autoChallenge: null,
							groupChallenges: null,
							adHocChallenges: null,
							vivokidChallenges: null,
							teamStepsVivokidChallenges: null,
							badgeChallenges: null,
							virtualChallenges: null,
						},
					},
					c = (e) => e.challengePage || l,
					d = (e) => c(e).viewerSocialProfile,
					u = (e) => c(e).route,
					p = (e) => c(e).badgeChallenge,
					y = (e) => c(e).virtualChallenge,
					h = (e) => c(e).virtualChallengeDetail,
					g = (e) => c(e).badgeDetail,
					m = (e) => c(e).currentChallenge,
					A = (e) => c(e).optOutDialog,
					_ = (e) => c(e).pastChallenge,
					E = {
						[n.zy2]: (e, t) => ({
							...l,
							viewerSocialProfile: t.viewerSocialProfile,
							route: t.route,
						}),
						[n.aa9]: () => ({ ...l }),
						[n.tmf]: (e, t) => ({ ...e, route: t.route }),
						[n.etd]: (e, t) => ({
							...e,
							badgeChallenge: {
								error: !1,
								fetching: !0,
								list: null,
								hasMore: !1,
								limit: t.limit,
								processing: [],
								notificationStatus: a,
							},
						}),
						[n.J5U]: (e, t) => ({
							...e,
							badgeChallenge: {
								...e.badgeChallenge,
								error: t.error,
								fetching: !1,
								list: t.list,
								hasMore: t.hasMore,
							},
						}),
						[n.ijK]: (e, t) => {
							if (!t.challenge || !t.challenge.uuid) return e;
							const i = e.badgeChallenge.list;
							if (!Array.isArray(i)) return e;
							const n = i.findIndex((e) => e.uuid === t.challenge.uuid);
							return n < 0
								? e
								: (i.splice(n, 1, t.challenge),
									{ ...e, badgeChallenge: { ...e.badgeChallenge, list: i } });
						},
						[n.Jbg]: (e, t) => {
							let i = e.badgeChallenge.processing;
							return (
								i.includes(t.challenge.uuid) || i.push(t.challenge.uuid),
								{
									...e,
									badgeChallenge: {
										...e.badgeChallenge,
										processing: i,
										notificationStatus: a,
										lastJoined: null,
									},
								}
							);
						},
						[n.SyM]: (e, t) => {
							let i = e.badgeChallenge.processing;
							return (
								(i = i.filter((e) => e !== t.challenge.uuid)),
								{
									...e,
									badgeChallenge: {
										...e.badgeChallenge,
										processing: i,
										notificationStatus: t.error ? r : s,
										lastJoined: t.error ? null : t.challenge,
									},
								}
							);
						},
						[n.eD5]: (e, t) => ({
							...e,
							virtualChallenge: {
								error: !1,
								fetching: !0,
								list: null,
								hasMore: !1,
								limit: t.limit,
							},
						}),
						[n.$G$]: (e, t) => ({
							...e,
							virtualChallenge: {
								...e.virtualChallenge,
								error: t.error,
								fetching: !1,
								list: t.list,
								hasMore: t.hasMore,
							},
						}),
						[n.nVB]: (e, t) => ({
							...e,
							virtualChallengeDetail: {
								challengeUuid: t.challengeUuid,
								fetching: !0,
								error: !1,
								challenge: null,
								badgeDetail: null,
							},
						}),
						[n.eH]: (e, t) => ({
							...e,
							virtualChallengeDetail: {
								...e.virtualChallengeDetail,
								fetching: !1,
								error: t.error,
								challenge: t.challenge,
							},
						}),
						[n.FVp]: (e, t) => ({
							...e,
							badgeDetail: { ...e.badgeDetail, open: t.open },
						}),
						[n.ZaY]: (e) => ({
							...e,
							badgeDetail: { ...e.badgeDetail, badge: null, fetching: !0 },
						}),
						[n.sE5]: (e, t) => ({
							...e,
							badgeDetail: { ...e.badgeDetail, badge: t.badge, fetching: !1 },
						}),
						[n.nSW]: (e, t) =>
							t.error && t.tooMany
								? {
										...e,
										virtualChallengeDetail: {
											...e.virtualChallengeDetail,
											optInError: !0,
											challenge: {
												...e.virtualChallengeDetail.challenge,
												joinable: !1,
											},
										},
									}
								: t.error
									? e
									: {
											...e,
											virtualChallengeDetail: {
												...e.virtualChallengeDetail,
												challenge: {
													...e.virtualChallengeDetail.challenge,
													joinDateLocal: new Date().toISOString(),
													userJoined: !0,
												},
											},
										},
						[n.uMM]: (e, t) => ({
							...e,
							currentChallenge: {
								error: !1,
								fetching: !0,
								limit: t.limit,
								autoChallenge: null,
								groupChallenges: null,
								adHocChallenges: null,
								vivokidChallenges: null,
								teamStepsVivokidChallenges: null,
								badgeChallenges: null,
								virtualChallenges: null,
							},
						}),
						[n.FEB]: (e, t) => ({
							...e,
							currentChallenge: {
								...e.currentChallenge,
								fetching: !1,
								error: t.error,
								autoChallenge: t.autoChallenge,
								groupChallenges: t.groupChallenges,
								adHocChallenges: t.adHocChallenges,
								vivokidChallenges: t.vivokidChallenges,
								teamStepsVivokidChallenges: t.teamStepsVivokidChallenges,
								badgeChallenges: t.badgeChallenges,
								virtualChallenges: t.virtualChallenges,
							},
						}),
						[n.kmk]: (e, t) => ({
							...e,
							currentChallenge: {
								...e.currentChallenge,
								autoChallenge: t.autoChallenge,
							},
						}),
						[n.l11]: (e, t) => ({
							...e,
							optOutDialog: { open: t.open, submitting: t.submitting },
						}),
						[n.FP_]: (e, t) => ({
							...e,
							optOutDialog: { ...e.optOutDialog, submitting: !0 },
						}),
						[n.D8k]: (e, t) => ({
							...e,
							pastChallenge: {
								error: !1,
								fetching: !0,
								limit: t.limit,
								autoChallenge: null,
								groupChallenges: null,
								adHocChallenges: null,
								vivokidChallenges: null,
								teamStepsVivokidChallenges: null,
								badgeChallenges: null,
								virtualChallenges: null,
							},
						}),
						[n.U33]: (e, t) => ({
							...e,
							pastChallenge: {
								...e.pastChallenge,
								fetching: !1,
								error: t.error,
								autoChallenge: t.autoChallenge,
								groupChallenges: t.groupChallenges,
								adHocChallenges: t.adHocChallenges,
								vivokidChallenges: t.vivokidChallenges,
								teamStepsVivokidChallenges: t.teamStepsVivokidChallenges,
								badgeChallenges: t.badgeChallenges,
								virtualChallenges: t.virtualChallenges,
							},
						}),
						[n.Glc]: (e) => ({
							...e,
							badgeChallenge: { ...e.badgeChallenge, notificationStatus: o },
						}),
						[n.twl]: (e) => ({
							...e,
							virtualChallengeDetail: {
								...e.virtualChallengeDetail,
								optInError: !1,
							},
						}),
					};
				function T(e = l, t = {}) {
					const i = E[t.type];
					return i ? i(e, t) : e;
				}
			},
			591264: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => s, Q: () => a });
				const n = { component: 0 },
					a = (e) => e.component;
				function s(e = n) {
					return { component: e.component + 1 };
				}
			},
			707293: (e, t, i) => {
				'use strict';
				i.d(t, {
					$D: () => d,
					Ay: () => E,
					Ks: () => p,
					Nv: () => u,
					R1: () => a,
					SR: () => m,
					Wk: () => c,
					f_: () => h,
					jt: () => A,
					u2: () => g,
					v$: () => y,
				});
				var n = i(316550);
				const a = { ACCEPT: 'ACCEPT', DELETE: 'DELETE', NONE: 'NONE' },
					s = {
						connections: [],
						connectionFullName: '',
						connectionsFetching: !1,
						connectionsFetchSuccess: !1,
						connectionsFetchFail: !1,
						hasMoreToLoad: !1,
						pendingConnections: [],
						pendingConnectionsFetching: !1,
						pendingConnectionsFetchSuccess: !1,
						pendingConnectionsFetchFail: !1,
						followers: [],
						followersFetching: !1,
						followersFetchSuccess: !1,
						followersFetchFail: !1,
					},
					r =
						(e) =>
						(
							t,
							{ data: i, connectionFullName: n, hasMoreToLoad: a, replace: s }
						) => {
							let r;
							return (
								(r = e ? (s ? i : t.connections.concat(i)) : t.connections),
								{
									...t,
									connections: r,
									connectionFullName: e ? n : '',
									connectionsFetching: !1,
									connectionsFetchSuccess: e,
									connectionsFetchFail: !e,
									hasMoreToLoad: e ? a : t.hasMoreToLoad,
								}
							);
						},
					o =
						(e) =>
						(t, { data: i }) => ({
							...t,
							pendingConnections: e
								? i.map((e) => ({ ...e, dismissingStatus: a.NONE }))
								: t.pendingConnections,
							pendingConnectionsFetching: !1,
							pendingConnectionsFetchSuccess: e,
							pendingConnectionsFetchFail: !e,
						}),
					l =
						(e) =>
						(t, { data: i }) => ({
							...t,
							followers: e
								? i.map((e) => ({ ...e, isDismissing: !1 }))
								: t.followers,
							followersFetching: !1,
							followersFetchSuccess: e,
							followersFetchFail: !e,
						}),
					c = (e) => e.connections.connections,
					d = (e) => e.connections.connectionFullName,
					u = (e) => e.connections.connectionsFetchSuccess,
					p = (e) => e.connections.connectionsFetchFail,
					y = (e) => e.connections.hasMoreToLoad,
					h = (e) => e.connections.pendingConnections,
					g = (e) => e.connections.pendingConnectionsFetchSuccess,
					m = (e) => e.connections.followers,
					A = (e) => e.connections.followersFetchSuccess,
					_ = {
						[n.UcT]: (e) => ({
							...e,
							connectionsFetching: !0,
							connectionsFetchSuccess: !1,
							connectionsFetchFail: !1,
						}),
						[n.vbC]: r(!0),
						[n.AOU]: r(!1),
						[n.YEL]: (e) => ({
							...e,
							pendingConnectionsFetching: !0,
							pendingConnectionsFetchSuccess: !1,
							pendingConnectionsFetchFail: !1,
						}),
						[n.D3v]: o(!0),
						[n.Ice]: o(!1),
						[n.O$n]: (e) => {
							const {
								connections: t,
								connectionFullName: i,
								connectionsFetching: n,
								connectionsFetchSuccess: a,
								connectionsFetchFail: r,
								hasMoreToLoad: o,
							} = s;
							return {
								...e,
								connections: t,
								connectionFullName: i,
								connectionsFetching: n,
								connectionsFetchSuccess: a,
								connectionsFetchFail: r,
								hasMoreToLoad: o,
							};
						},
						[n.V6I]: (e, t) => {
							const { displayName: i, status: n } = t.payload;
							return {
								...e,
								pendingConnections: e.pendingConnections.map((e) =>
									e.displayName === i ? { ...e, dismissingStatus: n } : e
								),
							};
						},
						[n.cWA]: (e, t) => {
							const { displayName: i } = t.payload;
							return {
								...e,
								pendingConnections: e.pendingConnections.filter(
									(e) => e.displayName !== i
								),
							};
						},
						[n.Wqr]: (e) => ({
							...e,
							followersFetching: !0,
							followersFetchSuccess: !1,
							followersFetchFail: !1,
						}),
						[n.BNs]: l(!0),
						[n.Y9f]: l(!1),
						[n._jn]: (e, { displayName: t }) => ({
							...e,
							followers: e.followers.map((e) =>
								e.displayName === t ? { ...e, isDismissing: !0 } : e
							),
						}),
						[n.Z]: (e, { displayName: t }) => ({
							...e,
							followers: e.followers.filter((e) => e.displayName !== t),
						}),
					};
				function E(e = s, t = {}) {
					const i = _[t.type];
					return i ? i(e, t) : e;
				}
			},
			950264: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, k: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entities: {} },
					s = {
						[n.viz]: (e) => ({ ...e, isFetching: !0 }),
						[n.XgG]: (e, t) => ({
							...e,
							isFetching: !1,
							entities: { ...e.entities, [t.conversationCommentUuid]: t.data },
							lastUpdated: t.receivedAt,
						}),
						[n.THx]: () => a,
					},
					r = (e) => e.commentLikes.entities;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			786337: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => p,
					BL: () => l,
					Mt: () => d,
					X7: () => c,
					nG: () => u,
					vr: () => o,
				});
				var n = i(316550);
				const a = {
						entities: {},
						adding: {},
						editing: {},
						fetching: [],
						addCommentFailedTS: null,
						addCommentFailedDialog: !1,
					},
					s = (e, t) =>
						e.entities[t.resourceId]
							? {
									...e,
									entities: {
										...e.entities,
										[t.resourceId]: {
											comments: [
												...t.comments,
												...e.entities[t.resourceId].comments,
											],
											hasMoreDataToLoad: 10 === t.comments.length,
										},
									},
									fetching: e.fetching.filter((e) => e !== t.resourceId),
									lastUpdated: t.receivedAt,
								}
							: {
									...e,
									entities: {
										...e.entities,
										[t.resourceId]: {
											comments: t.comments,
											hasMoreDataToLoad: 10 === t.comments.length,
										},
									},
									fetching: e.fetching.filter((e) => e !== t.resourceId),
									lastUpdated: t.receivedAt,
								},
					r = {
						[n.bV8]: (e, t) => ({
							...e,
							fetching: [...e.fetching, t.resourceId],
						}),
						[n.VIo]: s,
						[n.BTm]: s,
						[n.MGt]: (e, t) =>
							e.entities[t.resourceId]
								? {
										...e,
										entities: {
											...e.entities,
											[t.resourceId]: {
												comments: [
													...e.entities[t.resourceId].comments,
													t.comment,
												],
												hasMoreDataToLoad:
													e.entities[t.resourceId].hasMoreDataToLoad,
											},
										},
									}
								: {
										...e,
										entities: {
											...e.entities,
											[t.resourceId]: {
												comments: [t.comment],
												hasMoreDataToLoad: !1,
											},
										},
									},
						[n.z_l]: (e, t) => ({
							...e,
							adding: { ...e.adding, [t.resourceId]: { submitting: !0 } },
							addCommentFailedDialog: !1,
						}),
						[n.kj2]: (e, t) => {
							const i = t.error ? e[t.resourceId] : Date.now();
							let n = e.addCommentFailedTS;
							return (
								t.error && (n = 'limit' === t.error ? null : Date.now()),
								{
									...e,
									adding: {
										...e.adding,
										[t.resourceId]: { submitting: !1, renderKey: i },
									},
									addCommentFailedTS: n,
								}
							);
						},
						[n.WcL]: (e, t) => {
							if (!e.editing[t.resourceId])
								return {
									...e,
									editing: {
										...e.editing,
										[t.resourceId]: {
											submitting: [t.comment.conversationCommentUuid],
										},
									},
								};
							const i = [...e.editing[t.resourceId].error].filter(
									(e) => e !== t.comment.conversationCommentUuid
								),
								n = [
									...e.editing[t.resourceId].submitting,
									t.comment.conversationCommentUuid,
								];
							return {
								...e,
								editing: {
									...e.editing,
									[t.resourceId]: {
										...e.editing[t.resourceId],
										error: i,
										submitting: n,
									},
								},
							};
						},
						[n._UJ]: (e, t) => {
							let i = [];
							if (e.entities[t.resourceId]) {
								i = [...e.entities[t.resourceId].comments];
								const n = i.findIndex(
									(e) =>
										e.conversationCommentUuid ===
										t.comment.conversationCommentUuid
								);
								i.splice(n, 1, t.comment);
							} else i = [t.comment];
							let n = [],
								a = [];
							return (
								e.editing[t.resourceId] &&
									((n = [...(e.editing[t.resourceId].error || [])].filter(
										(e) => e !== t.comment.conversationCommentUuid
									)),
									(a = [...(e.editing[t.resourceId].submitting || [])].filter(
										(e) => e !== t.comment.conversationCommentUuid
									))),
								{
									...e,
									entities: {
										...e.entities,
										[t.resourceId]: {
											comments: i,
											hasMoreDataToLoad:
												e.entities[t.resourceId].hasMoreDataToLoad,
										},
									},
									editing: {
										...e.editing,
										[t.resourceId]: {
											...e.editing[t.resourceId],
											error: n,
											submitting: a,
										},
									},
								}
							);
						},
						[n.gMX]: (e, t) => {
							if (!e.editing[t.resourceId])
								return {
									...e,
									editing: {
										...e.editing,
										[t.resourceId]: {
											error: [t.comment.conversationCommentUuid],
										},
									},
								};
							const i = [
									...(e.editing[t.resourceId].error || []),
									t.comment.conversationCommentUuid,
								],
								n = [...(e.editing[t.resourceId].submitting || [])].filter(
									(e) => e !== t.comment.conversationCommentUuid
								);
							return {
								...e,
								editing: {
									...e.editing,
									[t.resourceId]: {
										...e.editing[t.resourceId],
										error: i,
										submitting: n,
									},
								},
							};
						},
						[n.JTP]: (e, t) => ({
							...e,
							entities: {
								...e.entities,
								[t.resourceId]: {
									comments: e.entities[t.resourceId].comments.filter(
										(e) =>
											e.conversationCommentUuid !== t.conversationCommentUuid
									),
									hasMoreDataToLoad: e.entities[t.resourceId].hasMoreDataToLoad,
								},
							},
						}),
						[n.j0T]: (e, t) => ({
							...e,
							entities: {
								...e.entities,
								[t.resourceId]: {
									comments: e.entities[t.resourceId].comments.map((e) =>
										e.conversationCommentUuid === t.conversationCommentUuid
											? {
													...e,
													likedByUser: t.add,
													numberOfLikes: t.add
														? ++e.numberOfLikes
														: --e.numberOfLikes,
												}
											: e
									),
									hasMoreDataToLoad: e.entities[t.resourceId].hasMoreDataToLoad,
								},
							},
						}),
						[n.BLT]: (e, t) => {
							let i = { ...e.entities },
								n = !1;
							return (
								Object.keys(i).forEach((e) => {
									i[e] &&
										i[e].comments &&
										i[e].comments.forEach((e) => {
											e.authorDisplayName === t.displayName &&
												((e.authorImageUrl = null), (n = !0));
										});
								}),
								n ? { ...e, entities: i } : e
							);
						},
						[n.$mk]: () => a,
					},
					o = (e) => e.comments.entities,
					l = (e) => e.comments.editing,
					c = (e) => e.comments.fetching,
					d = (e) => e.comments.adding,
					u = (e) => e.comments.addCommentFailedTS;
				function p(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			333474: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, wl: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entities: {} },
					s = {
						[n.NH8]: (e) => ({ ...e, isFetching: !0 }),
						[n.xbA]: (e, t) => ({
							...e,
							isFetching: !1,
							entities: { ...e.entities, [t.resourceId]: t.data },
							lastUpdated: t.receivedAt,
						}),
						[n.TLU]: () => a,
						[n.hY0]: (e) => ({ ...e, isFetching: !0 }),
						[n.Hwy]: (e, t) => ({
							...e,
							isFetching: !1,
							entities: { ...e.entities, [t.resourceId]: t.data },
							lastUpdated: t.receivedAt,
						}),
					},
					r = (e) => e.conversationLikes.entities;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			532383: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, l: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entities: {} },
					s = {
						[n.Qfy]: (e) => ({ ...e, isFetching: !0 }),
						[n.S6m]: (e, t) => ({
							...e,
							isFetching: !1,
							entities: { ...e.entities, [t.resourceId]: t.conversation },
							lastUpdated: t.receivedAt,
						}),
						[n.LDX]: (e, t) => ({
							...e,
							entities: {
								...e.entities,
								[t.resourceId]: {
									...e.entities[t.resourceId],
									likedByUser: t.add,
									numberOfLikes: t.add
										? ++e.entities[t.resourceId].numberOfLikes
										: --e.entities[t.resourceId].numberOfLikes,
								},
							},
						}),
						[n.LRj]: (e, t) => ({
							...e,
							entities: {
								...e.entities,
								[t.resourceId]: {
									...e.entities[t.resourceId],
									numberOfComments: t.add
										? ++e.entities[t.resourceId].numberOfComments
										: --e.entities[t.resourceId].numberOfComments,
								},
							},
						}),
						[n.Mwu]: () => a,
					},
					r = (e) => e.conversations.entities;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			906519: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, MG: () => o, Zx: () => r });
				var n = i(316550);
				const a = { isFetching: !1, fetchSuccess: !1, entities: {} },
					s = {
						[n.ngr]: (e) => ({ ...e, isFetching: !0 }),
						[n.NxO]: (e, t) => ({
							...e,
							isFetching: !1,
							entities: { ...e.entities, [t.resourceId]: t.data },
							lastUpdated: t.receivedAt,
						}),
						[n.Ll5]: (e) => ({ ...e, isFetching: !0, fetchSuccess: !1 }),
						[n.Jvz]: (e, t) =>
							e.entities[t.resourceId]
								? {
										...e,
										isFetching: !1,
										fetchSuccess: !0,
										entities: {
											...e.entities,
											[t.resourceId]: [...e.entities[t.resourceId], ...t.data],
										},
										lastUpdated: t.receivedAt,
									}
								: {
										...e,
										isFetching: !1,
										fetchSuccess: !0,
										entities: { ...e.entities, [t.resourceId]: t.data },
										lastUpdated: t.receivedAt,
									},
					},
					r = (e) => e.groupConversationLikes.entities,
					o = (e) => e.groupConversationLikes.fetchSuccess;
				function l(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			950170: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, G: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entities: {} },
					s = {
						[n.SS9]: (e) => ({ ...e, isFetching: !0 }),
						[n.uy4]: (e, t) => ({
							...e,
							isFetching: !1,
							entities: { ...e.entities, [t.resourceId]: t.conversation },
							lastUpdated: t.receivedAt,
						}),
						[n.bLy]: (e, t) => ({
							...e,
							entities: {
								...e.entities,
								[t.resourceId]: {
									...e.entities[t.resourceId],
									likedByUser: t.add,
									numberOfLikes: t.add
										? ++e.entities[t.resourceId].numberOfLikes
										: --e.entities[t.resourceId].numberOfLikes,
								},
							},
						}),
						[n.vjo]: (e, t) => ({
							...e,
							entities: {
								...e.entities,
								[t.resourceId]: {
									...e.entities[t.resourceId],
									numberOfComments: t.add
										? ++e.entities[t.resourceId].numberOfComments
										: --e.entities[t.resourceId].numberOfComments,
								},
							},
						}),
					},
					r = (e) => e.groupConversations.entities;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			873715: (e, t, i) => {
				'use strict';
				i.d(t, {
					$Q: () => q,
					AC: () => De,
					Ay: () => ye,
					BB: () => P,
					CM: () => W,
					Fl: () => F,
					G9: () => ge,
					Hf: () => Ne,
					Ie: () => Te,
					Jk: () => Ie,
					Mq: () => _e,
					NJ: () => N,
					Ni: () => le,
					O3: () => z,
					OM: () => Ee,
					Q3: () => O,
					Q_: () => oe,
					Tc: () => ue,
					UN: () => L,
					UR: () => B,
					Ue: () => pe,
					WS: () => b,
					WW: () => se,
					Wk: () => de,
					XD: () => ve,
					YR: () => M,
					_C: () => fe,
					a$: () => j,
					a7: () => ne,
					bm: () => X,
					cx: () => x,
					d_: () => $,
					dz: () => Se,
					fX: () => J,
					g0: () => me,
					g3: () => ee,
					hP: () => Z,
					i0: () => k,
					j: () => te,
					jC: () => w,
					kc: () => R,
					nq: () => Y,
					oA: () => U,
					oe: () => re,
					pY: () => Ce,
					qS: () => ie,
					rJ: () => ae,
					s6: () => Ae,
					sD: () => K,
					xG: () => Q,
					xv: () => ce,
					yR: () => he,
					yf: () => G,
					yt: () => H,
					zm: () => V,
				});
				var n = i(316550),
					a = i(80879),
					s = i(2995),
					r = i(569875),
					o = i(109241);
				const l = {
						entity: [],
						webGatewayCourses: [],
						courseListSortType: null,
						courseListFilters: null,
						mapBoundingBox: null,
						courseRouteHistory: { 0: (0, o.K7)() },
						courseRouteHistoryIndex: 0,
						importedCourse: null,
						editableCourseData: {
							activityTypePk: null,
							hasTurnDetectionDisabled: !1,
							geoPoints: [],
							courseLines: [],
							boundingBox: null,
							coursePoints: null,
							distanceMeter: null,
							elevationGainMeter: null,
							elevationLossMeter: null,
							startPoint: null,
							elapsedSeconds: null,
							openStreetMap: !1,
							coordinateSystem: (0, o.AL)(null),
							rulePK: o.XT.private.id,
						},
						fetchingCourseDetails: !1,
						initialCourseDataWithNoChanges: null,
						editableCourseDrawingData: {
							mapRouteFetching: !1,
							receivedRouteDoesNotHaveData: !1,
							coursePoints: null,
							drawingMethod: { ...o.h2[0] },
							routesDrawingType: { ...o.kj.POPULAR_ROUTES },
							direction: o.HO.NORTH,
							distance: null,
							createNewCourseId: null,
							courseTypeParent: null,
						},
						group: [],
						favorite: [],
						details: {},
						coursesListFetching: !1,
						coursesFetched: !1,
						availableCoursePoints: null,
						coursePointSelection: {
							pointType: null,
							pointLocation: null,
							editModeMarkerInitialValue: null,
						},
						courseLinesFetching: !1,
						courseDuplicateFetching: !1,
						isSettingFavoriteCourseInProgress: !1,
						changingFavoriteCourseStatusFail: !1,
						elevationChart: {
							courseElevationChartExpandedStatus: !1,
							selectedGeoPoints: null,
							selectionStart: null,
							selectionEnd: null,
						},
						coursePointMarkerData: {
							tempGeoPoints: [],
							tempLines: [],
							tempWorkInProgressPoint: null,
							tempCoursePointMarkers: [],
						},
						deleteCourseInProgress: null,
						deleteCourseError: null,
						elevationChartHoverValue: null,
						nearbyCourses: null,
						nearbyCoursesTotalSearchHits: null,
						nearbyCoursesFetching: !1,
						coursesListGeoPoints: { fetching: !1, items: {} },
						boundingBoxError: !1,
						consumers: [],
						climbs: [],
						cachedClimbs: {},
						climbsOnRouteOrCourse: [],
						climbsListFetching: !1,
						climbsOnRouteFetching: !1,
						climbsOnCourseFetching: !1,
						secondaryClimbs: [],
						secondaryClimbsFetching: !1,
						mapMatchState: { courseId: null, processing: !1, error: !1 },
					},
					c = (e) => ({ ...e, coursesListFetching: !0, coursesFetched: !1 });
				function d(e) {
					return e._importFromChina
						? ((e._importFromChina = void 0),
							(e._sourceGeoPoints = void 0),
							(e._sourceCoursePoints = void 0),
							(e._sourceCourseLines = void 0),
							(e.coordinateSystem = (0, o.AL)()),
							e)
						: e;
				}
				const u = (e, t) => ({
						...e,
						webGatewayCourses: t.courses && t.courses.coursesForUser,
					}),
					p = (e, t) => ({ ...e, favorite: t.courses }),
					y = (e) => (t) => ({ ...t, courseDuplicateFetching: e }),
					h = (e, t) => {
						const i = ++e.courseRouteHistoryIndex,
							n = (0, o.K7)(e.editableCourseData);
						let a =
							t.courseLines && t.courseLines.length
								? t.courseLines
								: (0, o.pC)(
										!0,
										e.editableCourseData.geoPoints,
										e.editableCourseData
									);
						(t.courseLines && 0 !== t.courseLines.length) ||
							(a = (0, o.EV)(a, e.editableCourseData.coursePoints));
						let s = (0, o.gm)(a);
						return (
							(n.geoPoints = s),
							{
								...e,
								editableCourseData: {
									...e.editableCourseData,
									courseLines: a,
									geoPoints: s,
								},
								initialCourseDataWithNoChanges: {
									...e.editableCourseData,
									courseLines: a,
									geoPoints: s,
								},
								courseRouteHistory: {
									...(0, o.U7)(
										i,
										e.courseRouteHistory,
										n,
										e.editableCourseData.coursePoints,
										a
									),
								},
								courseRouteHistoryIndex: i,
								courseLinesFetching: l.courseLinesFetching,
							}
						);
					},
					g = (e, t) => ({
						...e,
						editableCourseDrawingData: {
							...e.editableCourseDrawingData,
							mapRouteFetching: !0,
						},
					}),
					m = (e, t) => {
						let i,
							n = t.geoPoints,
							a =
								!!(
									e.editableCourseData.geoPoints &&
									e.editableCourseData.geoPoints.length > 1
								) && e.editableCourseData.geoPoints;
						i = (0, o.BE)(n, !!t.addToExistingPoints && a);
						let s = e.courseRouteHistoryIndex,
							r = { ...e.courseRouteHistory };
						t.geoPoints &&
							t.geoPoints.length > 0 &&
							((s = ++s),
							(r = {
								...(0, o.U7)(
									s,
									e.courseRouteHistory,
									i,
									e.editableCourseData.coursePoints,
									e.editableCourseData.courseLines
								),
							}));
						let l = { ...e.editableCourseData, ...i };
						return (
							(l = d(l)),
							{
								...e,
								editableCourseData: l,
								courseRouteHistory: r,
								courseRouteHistoryIndex: s,
								editableCourseDrawingData: {
									...e.editableCourseDrawingData,
									mapRouteFetching: !1,
									receivedRouteDoesNotHaveData: 0 === t.geoPoints.length,
								},
							}
						);
					},
					A = (e, t) => {
						let i = t.newCourseData;
						return {
							...e,
							editableCourseDrawingData: {
								...e.editableCourseDrawingData,
								createNewCourseId: i.courseId,
							},
						};
					},
					_ = (e) => ({
						...e,
						editableCourseDrawingData: {
							...e.editableCourseDrawingData,
							createNewCourseId: null,
						},
					}),
					E = (e, t) => ({
						...e,
						editableCourseDrawingData: {
							...e.editableCourseDrawingData,
							mapRouteFetching: !1,
							receivedRouteDoesNotHaveData: !0,
						},
					}),
					T = (e) => (t) => ({ ...t, courseElevationFetching: e }),
					C = (e, t) => ({
						...e,
						isSettingFavoriteCourseInProgress: !0,
						changingFavoriteCourseStatusFail: !1,
					}),
					S = (e) => (t, i) => {
						let n = {},
							a =
								t.webGatewayCourses && t.webGatewayCourses.length
									? [...t.webGatewayCourses]
									: t.webGatewayCourses,
							s =
								t.favorite && t.favorite.length ? [...t.favorite] : t.favorite,
							r =
								t.nearbyCourses && t.nearbyCourses.length
									? [...t.nearbyCourses]
									: t.nearbyCourses;
						if (i && i.courseId) {
							let o;
							if (
								((n = {
									...t.details,
									[i.courseId]: { ...t.details[i.courseId], favorite: e },
								}),
								a && a.length)
							) {
								let t = a.find((e) => e.courseId === i.courseId);
								t && ((t.favorite = e), (o = { ...t }));
							}
							if (r && r.length) {
								let t = r.find((e) => e.courseId === i.courseId);
								t && ((t.favorite = e), (o = { ...t }));
							}
							e && o
								? s.push(o)
								: s &&
									s.length &&
									(s = s.filter((e) => e.courseId !== i.courseId));
						}
						return {
							...t,
							details: { ...t.details, ...n },
							editableCourseData: { ...t.editableCourseData, favorite: e },
							webGatewayCourses: a,
							favorite: s,
							nearbyCourses: r,
							isSettingFavoriteCourseInProgress: !1,
							changingFavoriteCourseStatusFail: !1,
						};
					},
					I = (e, t) => ({
						...e,
						isSettingFavoriteCourseInProgress: !1,
						changingFavoriteCourseStatusFail: !0,
					}),
					v = (e) => (t, i) => {
						let n;
						n = e ? ++t.courseRouteHistoryIndex : --t.courseRouteHistoryIndex;
						const a = t.courseRouteHistory[n];
						return {
							...t,
							editableCourseData: { ...t.editableCourseData, ...a },
							courseRouteHistoryIndex: n,
						};
					},
					f = (e, t) => {
						let i;
						return (
							(i =
								t.fromCourseIndex && e.nearbyCourses && e.nearbyCourses.length
									? [...e.nearbyCourses, ...t.nearbyCourses.courseSummaryDTOs]
									: t.nearbyCourses.courseSummaryDTOs),
							{
								...e,
								nearbyCourses: i,
								nearbyCoursesTotalSearchHits: t.nearbyCourses.totalSearchHits,
								nearbyCoursesFetching: !1,
								boundingBoxError: !1,
							}
						);
					},
					D = {
						[n.Xui]: c,
						[n.Dkz]: (e, t) => ({
							...e,
							coursesListFetching: !1,
							coursesFetched: !0,
							entity: t.courses,
						}),
						[n.x0h]: (e) => ({
							...e,
							deleteCourseInProgress: !0,
							deleteCourseError: l.deleteCourseError,
						}),
						[n.mhG]: (e, t) => {
							let i = { ...e.details },
								n =
									e.webGatewayCourses && e.webGatewayCourses.length
										? [...e.webGatewayCourses]
										: e.webGatewayCourses,
								a =
									e.favorite && e.favorite.length
										? [...e.favorite]
										: e.favorite,
								s =
									e.nearbyCourses && e.nearbyCourses.length
										? [...e.nearbyCourses]
										: e.nearbyCourses;
							return (
								t &&
									t.courseId &&
									(delete i[t.courseId],
									n &&
										n.length &&
										(n = n.filter((e) => e.courseId !== t.courseId)),
									a &&
										a.length &&
										(a = a.filter((e) => e.courseId !== t.courseId)),
									s &&
										s.length &&
										(s = s.filter((e) => e.courseId !== t.courseId))),
								{
									...e,
									details: { ...i },
									webGatewayCourses: n,
									favorite: a,
									nearbyCourses: s,
									deleteCourseInProgress: l.deleteCourseInProgress,
									deleteCourseError: l.deleteCourseError,
								}
							);
						},
						[n.ZpI]: (e) => ({
							...e,
							deleteCourseInProgress: l.deleteCourseInProgress,
							deleteCourseError: !0,
						}),
						[n.gmR]: (e) => ({
							...e,
							deleteCourseError: l.deleteCourseInProgress,
						}),
						[n.N1N]: u,
						[n.HOh]: u,
						[n.hjG]: c,
						[n.rIZ]: (e, t) => ({ ...e, group: t.courses }),
						[n.RA2]: p,
						[n.yzx]: p,
						[n.Jx$]: (e, t) => ({ ...e, fetchingCourseDetails: !0 }),
						[n.f43]: (e, t) => ({
							...e,
							details: { ...e.details, [t.course.courseId]: t.course },
							fetchingCourseDetails: !1,
							editableCourseData: {
								...e.editableCourseData,
								coordinateSystem: (0, o.AL)(t.course && t.course.fromImport),
								...t.course,
							},
						}),
						[n.S28]: (e, t) => ({ ...e, fetchingCourseDetails: !1 }),
						[n.FUg]: (e, t) => ({ ...e, courseLinesFetching: !0 }),
						[n.y6o]: h,
						[n.h4F]: h,
						[n.s5d]: (e) => ({
							...e,
							editableCourseData: { ...l.editableCourseData },
							courseRouteHistory: { ...l.courseRouteHistory },
							courseRouteHistoryIndex: 0,
						}),
						[n.cjp]: (e) => ({
							...e,
							editableCourseData: {
								...e.editableCourseData,
								geoPoints: l.editableCourseData.geoPoints,
								courseLines: l.editableCourseData.courseLines,
								coursePoints: l.editableCourseData.coursePoints,
								startPoint: l.editableCourseData.startPoint,
								boundingBox: l.editableCourseData.boundingBox,
								distanceMeter: l.editableCourseData.distanceMeter,
								elevationGainMeter: l.editableCourseData.elevationGainMeter,
								elevationLossMeter: l.editableCourseData.elevationLossMeter,
							},
							courseRouteHistory: { ...l.courseRouteHistory },
							courseRouteHistoryIndex: 0,
						}),
						[n.VBI]: (e) => ({
							...e,
							editableCourseDrawingData: { ...l.editableCourseDrawingData },
						}),
						[n.KyZ]: (e, t) => {
							let i = { ...e.editableCourseData, ...t.editableCourseData },
								n = Object.keys(t.editableCourseData).filter(
									(e) => -1 !== e.indexOf('coursePoints')
								),
								a = Object.keys(t.editableCourseData).filter(
									(e) => -1 !== e.indexOf('geoPoints')
								),
								s = Object.keys(t.editableCourseData).filter(
									(e) => -1 !== e.indexOf('courseLines')
								),
								r = e.courseRouteHistoryIndex,
								l = null;
							if (
								(a && a.length > 0) ||
								(s && s.length > 0) ||
								(n && n.length > 0)
							) {
								let c =
										a && a.length > 0
											? t.editableCourseData.geoPoints
											: e.editableCourseData.geoPoints,
									u =
										n && n.length > 0
											? t.editableCourseData.coursePoints
											: e.editableCourseData.coursePoints,
									p =
										s && s.length > 0
											? t.editableCourseData.courseLines.sort(
													(e, t) => e.sortOrder - t.sortOrder
												)
											: e.editableCourseData.courseLines;
								s &&
									s.length > 0 &&
									((p = (0, o.YT)(p)),
									(c = (0, o.gm)(p)),
									!t.editableCourseData.courseLines.length &&
										e.editableCourseData.geoPoints.length > 1 &&
										(c = [e.editableCourseData.geoPoints[0]]),
									(u = (0, o.SJ)(p, u)));
								let y = (0, o.BV)(c);
								(r =
									'number' === typeof t.historyOverwriteIndex &&
									t.historyOverwriteIndex >= 0
										? t.historyOverwriteIndex
										: ++r),
									(l = { ...(0, o.U7)(r, e.courseRouteHistory, y, u, p) }),
									((a && a.length > 0) || (s && s.length > 0)) &&
										((i = { ...i, ...y }),
										0 !== t.historyOverwriteIndex && (i = d(i)));
							}
							return {
								...e,
								editableCourseData: i,
								editableCourseDrawingData: { ...e.editableCourseDrawingData },
								courseRouteHistory: l ? { ...l } : { ...e.courseRouteHistory },
								courseRouteHistoryIndex: l ? r : e.courseRouteHistoryIndex,
							};
						},
						[n.YXX]: (e, t) => ({ ...e, importedCourse: t.importedCourseData }),
						[n.oL]: (e) => ({ ...e, importedCourse: l.importedCourse }),
						[n.JJV]: (e, t) => {
							let i = {
								...e.editableCourseDrawingData,
								...t.editableCourseDrawingData,
							};
							return { ...e, editableCourseDrawingData: i };
						},
						[n.XzT]: g,
						[n.lOB]: g,
						[n.PAq]: m,
						[n.knh]: A,
						[n.HVJ]: _,
						[n.ZYz]: A,
						[n.s3C]: _,
						[n.uHn]: E,
						[n.tPY]: E,
						[n.S56]: m,
						[n.Bkw]: T(!0),
						[n.NKt]: T(!1),
						[n.xnI]: T(!1),
						[n.mdq]: (e, t) => {
							const i = (0, o.Hl)(
									e.editableCourseData.geoPoints,
									t.geoPointsWithElevation
								),
								n = (0, o.aj)(e.editableCourseDrawingData.drawingMethod.value),
								a = (0, o.BV)(i),
								s = (0, o.pC)(n, a.geoPoints, e.editableCourseData);
							return {
								...e,
								editableCourseData: {
									...e.editableCourseData,
									...a,
									courseLines: s,
									coursePoints: n
										? l.editableCourseData.coursePoints
										: e.editableCourseData.coursePoints,
								},
								courseElevationFetching: !1,
								courseRouteHistory: {
									...(0, o.U7)(
										e.courseRouteHistoryIndex,
										e.courseRouteHistory,
										a,
										n
											? l.editableCourseData.coursePoints
											: e.editableCourseData.coursePoints,
										s
									),
								},
							};
						},
						[n.YR4]: C,
						[n.sJD]: S(!0),
						[n.Fw9]: I,
						[n.zNS]: C,
						[n.dE9]: S(!1),
						[n.GLC]: I,
						[n.Vjl]: (e, t) => {
							const { privacyRule: i, courseId: n } = t,
								a = i.typeId === o.XT.public.id;
							return {
								...e,
								webGatewayCourses: e.webGatewayCourses.map((e) =>
									e.courseId === n ? { ...e, public: a, privacyRule: i } : e
								),
								favorite: e.favorite.map((e) =>
									e.courseId === n ? { ...e, public: a, privacyRule: i } : e
								),
							};
						},
						[n.LDT]: (e, t) => ({
							...e,
							changingFavoriteCourseStatusFail:
								l.changingFavoriteCourseStatusFail,
						}),
						[n.If5]: v(!1),
						[n.itB]: v(!0),
						[n.Pht]: (e, t) => {
							const i = t.status;
							return {
								...e,
								elevationChart: {
									...e.elevationChart,
									courseElevationChartExpandedStatus: i,
								},
							};
						},
						[n.obv]: (e) => ({
							...e,
							elevationChart: {
								...e.elevationChart,
								courseElevationChartExpandedStatus:
									l.elevationChart.courseElevationChartExpandedStatus,
							},
						}),
						[n.j84]: (e, t) => {
							const i = t.selectionStart,
								n = t.selectionEnd;
							return {
								...e,
								elevationChart: {
									...e.elevationChart,
									selectionStart: i,
									selectionEnd: n,
								},
							};
						},
						[n.K8x]: (e) => ({
							...e,
							elevationChart: {
								...e.elevationChart,
								selectionEnd:
									l.elevationChart.courseElevationChartExpandedStatus,
								selectionStart:
									l.elevationChart.courseElevationChartExpandedStatus,
							},
						}),
						[n.iYs]: (e, t) => ({
							...e,
							elevationChart: {
								...e.elevationChart,
								selectedGeoPoints: t.selectedGeoPoints,
							},
						}),
						[n.$6I]: (e) => ({
							...e,
							elevationChart: {
								...e.elevationChart,
								selectedGeoPoints: l.elevationChart.selectedGeoPoints,
							},
						}),
						[n.B00]: (e, t) => ({
							...e,
							availableCoursePoints: t.availableCoursePoints,
						}),
						[n.xYJ]: (e, t) => {
							let i = { ...e.coursePointSelection, ...t.payload };
							return { ...e, coursePointSelection: { ...i } };
						},
						[n.SG4]: (e, t) => ({
							...e,
							coursePointSelection: l.coursePointSelection,
						}),
						[n.EGn]: (e, t) => ({ ...e, elevationChartHoverValue: t.payload }),
						[n.sMW]: (e) => ({
							...e,
							elevationChartHoverValue: l.elevationChartHoverValue,
						}),
						[n.PDz]: (e, t) => ({
							...e,
							coursePointMarkerData: {
								...e.coursePointMarkerData,
								...t.payload,
							},
						}),
						[n.Sc0]: (e, t) => ({
							...e,
							coursePointMarkerData: l.coursePointMarkerData,
						}),
						[n.a$d]: (e, t) => {
							let i =
								t.duplicatedCourseData &&
								t.duplicatedCourseData.courseLines &&
								t.duplicatedCourseData.courseLines.length
									? t.duplicatedCourseData.courseLines
									: (0, o.pC)(
											!0,
											t.duplicatedCourseData.geoPoints,
											t.duplicatedCourseData
										);
							return {
								...e,
								editableCourseData: {
									...e.editableCourseData,
									...t.duplicatedCourseData,
									courseName: a.Ay.t('course:course_copy_of_prefix', {
										0: t.duplicatedCourseData.courseName,
									}),
									courseLines: i,
								},
								courseRouteHistory: {
									...(0, o.U7)(
										e.courseRouteHistoryIndex,
										e.courseRouteHistory,
										t.duplicatedCourseData,
										e.editableCourseData.coursePoints,
										i
									),
								},
								courseDuplicateFetching: !1,
							};
						},
						[n.F_I]: y(!0),
						[n.$IY]: y(!1),
						[n.Lvr]: (e, t) => ({ ...e, nearbyCoursesFetching: !0 }),
						[n.Eig]: f,
						[n.XgF]: f,
						[n.Ntx]: (e, t) => ({
							...e,
							nearbyCourses: l.nearbyCourses,
							nearbyCoursesTotalSearchHits: l.nearbyCoursesTotalSearchHits,
							nearbyCoursesFetching: !1,
							boundingBoxError: !0,
						}),
						[n.v1v]: (e, t) => ({
							...e,
							consumers: { ...e.consumers, [t.courseId]: t.consumerInfo },
						}),
						[n.YDX]: (e, t) => ({
							...e,
							coursesListGeoPoints: {
								...e.coursesListGeoPoints,
								fetching: t.courseIds,
							},
						}),
						[n.TC0]: (e, t) => ({
							...e,
							coursesListGeoPoints: {
								items: {
									...e.coursesListGeoPoints.items,
									...t.coursesListGeoPoints,
								},
								fetching: !1,
							},
						}),
						[n.qLZ]: (e) => ({
							...e,
							coursesListGeoPoints: { ...e.coursesListGeoPoints, fetching: !1 },
						}),
						[n.FeS]: (e) => ({
							...e,
							coursesListGeoPoints: l.coursesListGeoPoints,
						}),
						[n.DQH]: (e, t) => {
							let i = { ...e.coursesListGeoPoints.items };
							return (
								t &&
									t.courseIds &&
									t.courseIds.length &&
									t.courseIds.forEach((e) => {
										i[e] && delete i[e];
									}),
								{
									...e,
									coursesListGeoPoints: {
										...e.coursesListGeoPoints,
										items: { ...i },
									},
								}
							);
						},
						[n.tQx]: (e) => ({
							...e,
							courseListSortType: l.courseListSortType,
						}),
						[n.e72]: (e, t) => ({
							...e,
							courseListSortType: t.courseListSortType,
						}),
						[n.ia5]: (e, t) => ({
							...e,
							courseListFilters: t.courseListFilters,
						}),
						[n.Z7Y]: (e) => ({ ...e, courseListFilters: l.courseListFilters }),
						[n.R6E]: (e, t) => ({ ...e, mapBoundingBox: t.mapBoundingBox }),
						[n.UnO]: (e) => ({ ...e, mapBoundingBox: l.mapBoundingBox }),
						[n._ye]: (e) => {
							let t = { ...e.editableCourseData };
							return (
								t.elevationDataUpdated && delete t.elevationDataUpdated,
								{ ...e, editableCourseData: { ...t } }
							);
						},
						[n.TvT]: (e) => ({ ...e, climbsListFetching: !0 }),
						[n.H$q]: (e, t) => {
							let i = e.cachedClimbs ? { ...e.cachedClimbs } : {};
							return (
								t.climbs &&
									t.climbs.length &&
									t.climbs.forEach((e) => {
										e &&
											e.primaryClimbs &&
											e.primaryClimbs.length &&
											(i[e.primaryClimbs[0].gmapClimbId] = { ...e });
									}),
								{
									...e,
									climbsListFetching: !1,
									climbs: t.climbs,
									cachedClimbs: i,
								}
							);
						},
						[n.hZo]: (e) => ({ ...e, climbsListFetching: !1 }),
						[n.Cb8]: (e) => ({
							...e,
							cachedClimbs: l.cachedClimbs,
							climbsListFetching: !1,
						}),
						[n.Tzx]: (e) => ({ ...e, climbsOnRouteFetching: !0 }),
						[n.fnA]: (e, t) => ({
							...e,
							climbsOnRouteFetching: !1,
							climbsOnRouteOrCourse: t.climbsOnRouteOrCourse,
						}),
						[n.xoK]: (e) => ({ ...e, climbsOnCourseFetching: !0 }),
						[n.t86]: (e, t) => ({
							...e,
							climbsOnCourseFetching: !1,
							climbsOnRouteOrCourse: t.climbsOnRouteOrCourse,
						}),
						[n.Ymo]: (e) => ({ ...e, secondaryClimbsFetching: !0 }),
						[n.Ecg]: (e, t) => ({
							...e,
							secondaryClimbsFetching: !1,
							secondaryClimbs: t.secondaryClimbs,
						}),
						[n.I19]: (e, t) => ({ ...e, secondaryClimbs: l.secondaryClimbs }),
						[n.fsE]: (e, t) => ({
							...e,
							climbsOnRouteOrCourse: l.climbsOnRouteOrCourse,
						}),
						[n.$GL]: E,
						[n.IIK]: (e, t) => {
							let i,
								n = t.geoPoints,
								a =
									!!(
										e.editableCourseData.geoPoints &&
										e.editableCourseData.geoPoints.length > 1
									) && e.editableCourseData.geoPoints;
							const s = t.climb.map((e) => [[e.latitude, e.longitude]]),
								r = t.addClimbOnly ? s : [...n, ...s];
							i = (0, o.BE)(r, !!t.addToExistingPoints && a);
							let l = e.courseRouteHistoryIndex,
								c = { ...e.courseRouteHistory };
							t.geoPoints &&
								t.geoPoints.length > 0 &&
								((l = ++l),
								(c = {
									...(0, o.U7)(
										l,
										e.courseRouteHistory,
										i,
										e.editableCourseData.coursePoints,
										e.editableCourseData.courseLines
									),
								}));
							let u = { ...e.editableCourseData, ...i };
							return (
								(u = d(u)),
								{
									...e,
									editableCourseData: u,
									courseRouteHistory: c,
									courseRouteHistoryIndex: l,
									editableCourseDrawingData: {
										...e.editableCourseDrawingData,
										mapRouteFetching: !1,
										receivedRouteDoesNotHaveData: 0 === t.geoPoints.length,
									},
								}
							);
						},
						[n.TTW]: (e, t) => ({
							...e,
							mapMatchState: {
								courseId: t.courseId,
								processing: !0,
								error: !1,
							},
						}),
						[n.kUB]: (e, t) => ({
							...e,
							mapMatchState: { courseId: null, processing: !1, error: t.error },
						}),
						[n.U6E]: (e, t) => ({
							...e,
							mapMatchState: { courseId: null, processing: !1, error: !1 },
						}),
					},
					N = (e) => e.courses.entity,
					R = (e) => e.courses.editableCourseData,
					b = (e) =>
						e.courses.elevationChart.courseElevationChartExpandedStatus,
					L = (e) => e.courses.elevationChart.selectionStart,
					P = (e) => e.courses.elevationChart.selectionEnd,
					O = (e) => e.courses.mapBoundingBox,
					w = (e) => e.courses.elevationChart.selectedGeoPoints,
					F = (e) => e.courses.coursesListGeoPoints.items,
					k = (e) => e.courses.coursesListGeoPoints.fetching,
					U = (e) => e.courses.fetchingCourseDetails,
					M = (e) => e.courses.isSettingFavoriteCourseInProgress,
					G = (e) => e.courses.changingFavoriteCourseStatusFail,
					x = (e) => e.courses.editableCourseDrawingData,
					B = (e) => e.courses.initialCourseDataWithNoChanges,
					H = (e) => e.courses.editableCourseDrawingData.mapRouteFetching,
					V = (e) => e.courses.webGatewayCourses,
					W = (e) => {
						let t =
							e.courses.webGatewayCourses && e.courses.webGatewayCourses.length
								? [...e.courses.webGatewayCourses]
								: [];
						return (
							e.courses.courseListSortType &&
								t &&
								t.length &&
								(t = (0, o.$8)(t, e.courses.courseListSortType)),
							e.courses.courseListFilters &&
								t &&
								t.length &&
								(t = (0, o.UA)(t, e.courses.courseListFilters)),
							t
						);
					},
					J = (e) => e.courses.deleteCourseInProgress,
					Y = (e) => e.courses.deleteCourseError,
					$ = (e) => e.courses.coursesListFetching,
					j = (e) => e.courses.coursesFetched,
					K = (e) => e.courses.courseLinesFetching,
					z = (e) => e.courses.courseDuplicateFetching,
					q = (e) => e.courses.courseElevationFetching,
					Q = (e) => e.courses.courseRouteHistory,
					X = (e) => e.courses.courseRouteHistoryIndex,
					Z = (e) =>
						Array.filter(
							e.courses.entity,
							(e) =>
								(1 === e.activityType.typeId ||
									1 === e.activityType.parentTypeId) &&
								e.distanceInMeters > s.A.MIN_LENGTH &&
								e.distanceInMeters < s.A.MAX_LENGTH
						),
					ee = (e) =>
						Array.filter(
							e.courses.entity,
							(e) =>
								2 === e.activityType.parentTypeId &&
								e.distanceInMeters > r.A.MIN_LENGTH &&
								e.distanceInMeters < r.A.MAX_LENGTH
						),
					te = (e) => e.courses.favorite,
					ie = (e) => {
						let t =
							e.courses.favorite && e.courses.favorite.length
								? [...e.courses.favorite]
								: [];
						return (
							e.courses.courseListSortType &&
								t &&
								t.length &&
								(t = (0, o.$8)(t, e.courses.courseListSortType)),
							e.courses.courseListFilters &&
								t &&
								t.length &&
								(t = (0, o.UA)(t, e.courses.courseListFilters)),
							t
						);
					},
					ne = (e) => e.courses.courseListSortType,
					ae = (e) => e.courses.courseListFilters,
					se = (e) => e.courses.availableCoursePoints,
					re = (e) => e.courses.importedCourse,
					oe = (e) => e.courses.coursePointSelection,
					le = (e) => e.courses.elevationChartHoverValue,
					ce = (e) =>
						e.courses.favorite.filter(
							(e) =>
								e.activityType.typeKey === s.A.COURSE_TYPE &&
								e.distanceInMeters > s.A.MIN_LENGTH &&
								e.distanceInMeters < s.A.MAX_LENGTH
						),
					de = (e) =>
						e.courses.favorite.filter(
							(e) =>
								r.A.COURSE_TYPE.includes(e.activityType.typeKey) &&
								e.distanceInMeters > r.A.MIN_LENGTH &&
								e.distanceInMeters < r.A.MAX_LENGTH
						),
					ue = (e, t) => (e.courses.details[t] ? e.courses.details[t] : {}),
					pe = (e) => e.courses.details;
				function ye(e = l, t = {}) {
					const i = D[t.type];
					return i ? i(e, t) : e;
				}
				const he = (e) => e.courses.coursePointMarkerData,
					ge = (e) => e.courses.nearbyCourses,
					me = (e) => e.courses.nearbyCoursesTotalSearchHits,
					Ae = (e) => e.courses.boundingBoxError,
					_e = (e) => e.courses.nearbyCoursesFetching,
					Ee = (e, t) =>
						t && e.courses.consumers[t]
							? e.courses.consumers[t].applicationName
							: void 0,
					Te = (e, t) =>
						t && e.courses.consumers[t] ? e.courses.consumers[t] : void 0,
					Ce = (e) => e.courses.climbs,
					Se = (e) => e.courses.cachedClimbs,
					Ie = (e) => e.courses.climbsOnRouteOrCourse,
					ve = (e) => e.courses.secondaryClimbs,
					fe = (e) => e.courses.secondaryClimbsFetching,
					De = (e) => e.courses.mapMatchState,
					Ne = (e) => e.courses.climbsListFetching;
			},
			303327: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => I,
					X9: () => c,
					N: () => m,
					Lr: () => C,
					X_: () => u,
					vl: () => h,
					DR: () => T,
					mQ: () => A,
					Xw: () => E,
					Ig: () => g,
					Dk: () => p,
					Li: () => _,
					TG: () => d,
					gx: () => y,
				});
				var n = i(316550),
					a = i(786927),
					s = i(109285),
					r = i.n(s);
				const o = () => ({
						inited: !1,
						createFrom: 'challenge',
						initDisplayName: '',
						initGroupId: null,
						viewerWheelchairMode: null,
						step: a.Ev.TYPE,
						initChallengeTypes: null,
						participantState: {
							fetching: !1,
							error: !1,
							wheelchairConnections: null,
							nonWheelchairConnections: null,
							connections: null,
							groups: null,
						},
						editingData: {
							challengeType: null,
							challengeName: null,
							challengeDesc: null,
							participantType: null,
							participantDisplayNames: [],
							participantGroupId: null,
							durationType: null,
							startDate: null,
							endDate: null,
						},
						editingDataBackup: null,
						summaryDialogState: { open: !1, dialogType: null },
						discardDialogOpen: !1,
						submitting: !1,
						error: !1,
					}),
					l = o(),
					c = (e) => e.createChallengePage || l,
					d = (e) => c(e).step,
					u = (e) => c(e).editingData,
					p = (e) => {
						const t = c(e),
							i = u(e),
							{
								fetching: n,
								error: s,
								wheelchairConnections: r,
								nonWheelchairConnections: o,
								connections: l,
								groups: d,
							} = t.participantState;
						let p = l;
						return (
							a.P8.includes(i.challengeType)
								? (p = r)
								: a.Op.includes(i.challengeType) && (p = o),
							{
								fetching: n,
								error: s,
								connections: p,
								fullConnections: l,
								groups: d,
							}
						);
					},
					y = (e) => c(e).summaryDialogState,
					h = (e) => c(e).editingDataBackup,
					g = (e) => c(e).inited,
					m = (e) => c(e).createFrom,
					A = (e) => c(e).initDisplayName,
					_ = (e) => {
						const t = c(e),
							i = !!t.initDisplayName,
							n = !!t.initGroupId;
						return i || n;
					},
					E = (e) => c(e).initGroupId,
					T = (e) => c(e).initChallengeTypes,
					C = (e) => c(e).discardDialogOpen,
					S = {
						[n.Ot9]: (e, t) => {
							const i = o();
							return (
								(i.createFrom = t.createFrom),
								(i.initDisplayName = t.initDisplayName),
								(i.initGroupId = t.initGroupId),
								i
							);
						},
						[n.lPs]: () => l,
						[n.HGh]: (e, t) => {
							let i = e.editingData.participantDisplayNames,
								n = e.editingData.participantGroupId;
							return (
								t.step === a.Ev.SUMMARY &&
									(e.editingData.participantType === a.Rz.CONNECTIONS &&
										(n = null),
									e.editingData.participantType === a.Rz.GROUP && (i = [])),
								{
									...e,
									step: t.step,
									error: !1,
									editingData: {
										...e.editingData,
										participantDisplayNames: i,
										participantGroupId: n,
									},
								}
							);
						},
						[n.xXe]: (e, t) => {
							let i = e.editingData.participantDisplayNames.slice();
							if (a.P8.includes(t.challengeType)) {
								const t = e.participantState.wheelchairConnections || [];
								i = i.filter((e) => t.some((t) => t.displayName === e));
							}
							return {
								...e,
								editingData: {
									...e.editingData,
									challengeType: t.challengeType,
									challengeName: t.challengeName,
									participantDisplayNames: i,
								},
							};
						},
						[n.f4Z]: (e, t) => {
							let i = e.editingData.challengeType;
							return (
								t.participantType === a.Rz.CONNECTIONS &&
									(i = e.viewerWheelchairMode
										? a.rf.find((e) => e === i)
										: a.x_.find((e) => e === i)),
								{
									...e,
									editingData: {
										...e.editingData,
										participantType: t.participantType,
										challengeType: i || null,
									},
								}
							);
						},
						[n.gSc]: (e, t) => {
							const { startDate: i, endDate: n } = (function (e) {
								let t = new Date(),
									i = new Date();
								switch (e) {
									default:
									case a.ad.ONE_DAY:
									case a.ad.CUSTOM:
										(t = r()().startOf('day').toDate()),
											(i = r()().endOf('day').toDate());
										break;
									case a.ad.WEEKEND: {
										const e = r()().endOf('isoWeek');
										(i = e.toDate()),
											e.add(-2, 'days').add(1, 'millisecond'),
											(t = e.toDate());
										break;
									}
									case a.ad.WEEK: {
										const e = r()().startOf('day');
										(t = e.toDate()),
											e.add(6, 'day'),
											(i = e.endOf('day').toDate());
										break;
									}
									case a.ad.MONTH: {
										const e = r()().startOf('month');
										(t = e.toDate()), (i = e.endOf('month').toDate());
										break;
									}
								}
								return { startDate: t, endDate: i };
							})(t.durationType);
							return {
								...e,
								editingData: {
									...e.editingData,
									durationType: t.durationType,
									challengeDesc: t.challengeDesc,
									startDate: i,
									endDate: n,
								},
							};
						},
						[n.BTK]: (e, t) => {
							const i = (function (e, t, i, n) {
								const s = r()(i);
								switch (t) {
									default:
									case a.ad.CUSTOM:
										const t = r()(n);
										return (
											t.isBefore(s) && (n = s.endOf('day').toDate()),
											e === a.Rz.GROUP ? s.add(366, 'day') : s.add(60, 'day'),
											t.isAfter(s) && (n = s.endOf('day').toDate()),
											n
										);
									case a.ad.ONE_DAY:
										return s.endOf('day').toDate();
									case a.ad.WEEKEND:
										return s.endOf('isoWeek').toDate();
									case a.ad.WEEK:
										return s.add(6, 'day').endOf('day').toDate();
									case a.ad.MONTH:
										return s.endOf('month').toDate();
								}
							})(
								e.editingData.participantType,
								e.editingData.durationType,
								t.startDate,
								e.editingData.endDate
							);
							return {
								...e,
								editingData: {
									...e.editingData,
									startDate: t.startDate,
									endDate: i,
								},
							};
						},
						[n.mSF]: (e, t) => ({
							...e,
							editingData: { ...e.editingData, endDate: t.endDate },
						}),
						[n.LA5]: (e) => ({
							...e,
							participantState: {
								...e.participantState,
								error: !1,
								fetching: !0,
							},
						}),
						[n.IJ$]: (e, t) => {
							if (t.error)
								return {
									...e,
									participantState: {
										...e.participantState,
										error: !0,
										fetching: !1,
									},
								};
							let i = e.initDisplayName,
								n = e.initGroupId,
								s = e.initChallengeTypes,
								r = e.editingData.participantDisplayNames,
								o = e.editingData.participantGroupId;
							const l = t.connections && t.connections.length > 0,
								c = t.groups && t.groups.length > 0,
								d = !l && c;
							let u = null;
							if (
								(l && !c && (u = a.Rz.CONNECTIONS),
								d && (u = a.Rz.GROUP),
								l || (i = ''),
								l && i)
							) {
								if (t.connections.some((e) => e.displayName === i)) {
									(u = a.Rz.CONNECTIONS), (r = [i]);
									const e = t.wheelchairMode,
										{ initConnection: n } = t;
									s =
										e && n.wheelchairModeEnabled
											? a.rf.slice()
											: (e && !n.wheelchairModeEnabled) ||
												  (!e && n.wheelchairModeEnabled)
												? a.m2.slice()
												: a.x_.slice();
								} else i = '';
							} else if (c && n) {
								t.groups.some((e) => e.id === n)
									? ((u = a.Rz.GROUP), (o = n), (s = a.K7.slice()))
									: (n = null);
							}
							return {
								...e,
								inited: !0,
								initDisplayName: i,
								initGroupId: n,
								initChallengeTypes: s,
								viewerWheelchairMode: t.wheelchairMode,
								participantState: {
									...e.participantState,
									error: !1,
									fetching: !1,
									wheelchairConnections: t.wheelchairConnections,
									nonWheelchairConnections: t.nonWheelchairConnections,
									connections: t.connections,
									groups: t.groups,
								},
								editingData: {
									...e.editingData,
									participantType: u,
									participantDisplayNames: r,
									participantGroupId: o,
								},
							};
						},
						[n.g0W]: (e, t) => {
							let i = e.editingData.participantDisplayNames,
								n = e.editingData.participantGroupId;
							if (t.displayName) {
								const e = i.includes(t.displayName);
								t.checked
									? e || i.push(t.displayName)
									: e && (i = i.filter((e) => e !== t.displayName));
							} else if (t.groupId) {
								e.participantState.groups.some((e) => e.id === t.groupId) &&
									(n = t.groupId);
							}
							return {
								...e,
								editingData: {
									...e.editingData,
									participantDisplayNames: i,
									participantGroupId: n,
								},
							};
						},
						[n.yY3]: (e) => ({ ...e, submitting: !0, error: !1 }),
						[n.tkB]: (e, t) => ({ ...e, submitting: !t.error, error: t.error }),
						[n.erE]: (e) => ({ ...e, error: !1 }),
						[n.s0I]: (e, t) => {
							let i = e.editingData,
								n = null;
							return (
								t.open
									? (n = {
											...e.editingData,
											participantDisplayNames:
												e.editingData.participantDisplayNames.slice(),
										})
									: t.commit || (i = e.editingDataBackup),
								{
									...e,
									summaryDialogState: {
										open: t.open,
										dialogType: t.open
											? t.dialogType
											: e.summaryDialogState.dialogType,
									},
									editingData: i,
									editingDataBackup: n,
								}
							);
						},
						[n.KC$]: (e, t) => ({ ...e, discardDialogOpen: t.open }),
					};
				function I(e = l, t = {}) {
					const i = S[t.type];
					return i ? i(e, t) : e;
				}
			},
			453492: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					Hs: () => u,
					L_: () => d,
					Lx: () => y,
					Q7: () => c,
					fi: () => l,
					nA: () => p,
				});
				var n = i(168718);
				const a = {
						latestCSS: {},
						isLatestCSSFetching: !1,
						didLatestCSSFetchFail: !1,
						cssReportData: [],
						cssReportDataFetching: !1,
						cssReportDataFetchFail: !1,
						addCSSFetching: !1,
						deleteCSSFetching: !1,
						deleteCSSFail: !1,
					},
					s = (e) => ({ ...e, addCSSFetching: !1 }),
					r = {
						[n.gd]: (e) => ({ ...e, isLatestCSSFetching: !0 }),
						[n.ZL]: (e, t) => ({
							...e,
							latestCSS: t.latestCSS,
							isLatestCSSFetching: !1,
							didLatestCSSFetchFail: !1,
						}),
						[n.yI]: (e) => ({
							...e,
							isLatestCSSFetching: !1,
							didLatestCSSFetchFail: !0,
						}),
						[n.fi]: (e) => ({
							...e,
							cssReportDataFetchFail: !0,
							cssReportDataFetching: !1,
						}),
						[n.Lm]: (e) => ({ ...e, cssReportDataFetching: !0 }),
						[n._x]: (e, t) => ({
							cssReportData: t.data,
							cssReportDataFetching: !1,
							cssReportDataFetchFail: !1,
						}),
						[n.$g]: (e) => ({ ...e, addCSSFetching: !0 }),
						[n.kB]: s,
						[n.lO]: s,
						[n.DB]: (e) => ({ ...e, deleteCSSFetching: !0, deleteCSSFail: !1 }),
						[n.XV]: (e) => ({ ...e, deleteCSSFetching: !1, deleteCSSFail: !1 }),
						[n.Ym]: (e) => ({ ...e, deleteCSSFetching: !1, deleteCSSFail: !0 }),
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t) {
					return { payload: e, type: n.Hg };
				}
				function c(e, t, i) {
					return { type: n.Cp, startDate: e, endDate: t, aggregation: i };
				}
				function d(e, t) {
					return { type: n.cN, payload: e, actionToDispatch: t };
				}
				function u(e, t) {
					return { type: n.i9, cssValue: e, callback: t };
				}
				const p = (e) =>
						e.cssReports.latestCSS ? e.cssReports.latestCSS : null,
					y = (e) => e.cssReports.isLatestCSSFetching;
			},
			20380: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					Mh: () => c,
					Ok: () => d,
					U2: () => o,
					ux: () => l,
				});
				var n = i(316550);
				const a = { dailyPulseOxData: {}, isFetching: !1, fetchFailed: !1 },
					s = {
						[n.Tnq]: (e) => ({ ...e, isFetching: !0, fetchFailed: !1 }),
						[n.eu]: (e, t) => ({
							dailyPulseOxData: {
								...e.dailyPulseOxData,
								[t.displayName]: {
									...e.dailyPulseOxData[t.displayName],
									[t.calendarDate]: t.dailyPulseOxData,
								},
							},
							isFetching: !1,
							fetchFailed: !1,
						}),
						[n.FQZ]: (e, t) => ({
							dailyPulseOxData: {
								...e.dailyPulseOxData,
								[t.displayName]: {
									...e.dailyPulseOxData[t.displayName],
									[t.calendarDate]: {},
								},
							},
							isFetching: !1,
							fetchFailed: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i, a) {
					return {
						type: n.Uft,
						displayName: e,
						calendarDate: t,
						nonSleepBufferMinutes: i,
						meta: { cacheTime: a ? null : 12e4 },
					};
				}
				const l = (e, t, i) =>
						e.dailyPulseOxData.dailyPulseOxData[t]
							? e.dailyPulseOxData.dailyPulseOxData[t][i]
							: null,
					c = (e) => e.dailyPulseOxData.isFetching,
					d = (e) => e.dailyPulseOxData.fetchFailed;
			},
			118256: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => s, k: () => a });
				var n = i(316550);
				const a = (e) => e.dailySummary.entity,
					s = (e = { isFetching: !1, entity: {} }, t) => {
						switch (t.type) {
							case n.Jlk:
								return { ...e, isFetching: !0 };
							case n.zcN:
								return {
									...e,
									isFetching: !1,
									entity: t.dailySummary,
									lastUpdated: t.receivedAt,
								};
							default:
								return e;
						}
					};
			},
			50196: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					Pc: () => d,
					_D: () => o,
					aT: () => l,
					uq: () => c,
				});
				var n = i(316550);
				const a = {
						activitiesForDailySummary: {},
						activitiesForDailySummaryFetching: !1,
						activitiesForDailySummaryFetchFail: !1,
					},
					s = {
						[n.zJP]: (e, t) => ({
							activitiesForDailySummary: { ...e.activitiesForDailySummary },
							activitiesForDailySummaryFetching: !0,
							activitiesForDailySummaryFetchFail: !1,
						}),
						[n._eC]: (e, t) => ({
							activitiesForDailySummary: {
								...e.activitiesForDailySummary,
								[t.displayName]: {
									...e.activitiesForDailySummary[t.displayName],
									[t.calendarDate]: t.activitiesForDailySummary,
								},
							},
							activitiesForDailySummaryFetching: !1,
							activitiesForDailySummaryFetchFail: !1,
						}),
						[n.PtW]: (e, t) => ({
							activitiesForDailySummary: { ...e.activitiesForDailySummary },
							activitiesForDailySummaryFetching: !1,
							activitiesForDailySummaryFetchFail: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i) {
					return {
						type: n.I$b,
						displayName: e,
						calendarDate: t,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				const l = (e, t, i) =>
						e.activitiesForDailySummary.activitiesForDailySummary[t]
							? e.activitiesForDailySummary.activitiesForDailySummary[t][i]
							: [],
					c = (e) =>
						e.activitiesForDailySummary.activitiesForDailySummaryFetching,
					d = (e) =>
						e.activitiesForDailySummary.activitiesForDailySummaryFetchFail;
			},
			25737: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, hD: () => c, jd: () => o, nN: () => l });
				var n = i(316550);
				const a = {
						payload: {},
						activitiesList: {},
						fetching: !1,
						success: !1,
						error: !1,
					},
					s = {
						[n.qz9]: (e, t) => ({
							payload: t.activitiesListForTimeframe,
							activitiesList: {
								...e.activitiesList,
								[t.displayName]: t.activitiesListForTimeframe,
							},
							fetching: !1,
							success: !0,
							error: !1,
						}),
						[n.Xw2]: (e, t) => ({ ...e, fetching: !0 }),
						[n.nEc]: (e, t) => ({
							payload: t.activitiesListForTimeframe,
							activitiesList: e.activitiesList,
							fetching: !1,
							success: !1,
							error: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i, a, s, r) {
					return {
						type: n.YIJ,
						displayName: i,
						startTimestampLocal: e,
						endTimestampLocal: t,
						activityTypeId: s,
						limit: r,
					};
				}
				const l = (e, t) =>
						e.activitiesListForTimeframe.activitiesList[t]
							? e.activitiesListForTimeframe.activitiesList[t]
							: [],
					c = (e) => ({
						fetching: e.activitiesListForTimeframe.fetching,
						success: e.activitiesListForTimeframe.success,
						error: e.activitiesListForTimeframe.error,
					});
			},
			606155: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, DA: () => o, JV: () => l });
				var n = i(316550);
				const a = { payload: {}, dailyEvents: {} },
					s = {
						[n.kkP]: (e, t) => ({
							payload: t.autoDetectedEvents,
							dailyEvents: {
								...e.dailyEvents,
								[t.displayName]: {
									...e.dailyEvents[t.displayName],
									[t.calendarDate]: t.autoDetectedEvents,
								},
							},
						}),
						[n.v6H]: (e, t) => ({
							payload: t.autoDetectedEvents,
							dailyEvents: e.dailyEvents,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i) {
					return {
						type: n.EOf,
						displayName: e,
						calendarDate: t,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				const l = (e, t, i) =>
					e.autoDetectedEvents.dailyEvents[t]
						? e.autoDetectedEvents.dailyEvents[t][i]
						: [];
			},
			407769: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, TP: () => r, d7: () => l, lw: () => o });
				var n = i(316550);
				const a = {
						bodyBatteryToday: {},
						bodyBatteryTodayFetching: !1,
						bodyBatteryTodayFetchFail: !1,
					},
					s = {
						[n.i_L]: (e, t) => ({
							bodyBatteryToday: { ...e.bodyBatteryToday },
							bodyBatteryTodayFetching: !0,
							bodyBatteryTodayFetchFail: !1,
						}),
						[n.c3z]: (e, t) => ({
							bodyBatteryToday: {
								...e.bodyBatteryToday,
								[t.displayName]: {
									...e.bodyBatteryToday[t.displayName],
									[t.calendarDate]: t.bodyBatteryToday,
								},
							},
							bodyBatteryTodayFetching: !1,
							bodyBatteryTodayFetchFail: !1,
						}),
						[n.rFZ]: (e, t) => ({
							bodyBatteryToday: {
								...e.bodyBatteryToday,
								[t.displayName]: {
									...e.bodyBatteryToday[t.displayName],
									[t.calendarDate]: {},
								},
							},
							bodyBatteryTodayFetching: !1,
							bodyBatteryTodayFetchFail: !0,
						}),
					};
				function r(e, t, i) {
					return {
						type: n.i_L,
						displayName: e,
						calendarDate: t,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				const o = (e, t, i) =>
						e.bodyBatteryToday.bodyBatteryToday[t]
							? e.bodyBatteryToday.bodyBatteryToday[t][i]
							: null,
					l = (e) => e.bodyBatteryToday.bodyBatteryFetching;
				function c(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			631375: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					Fl: () => h,
					Rg: () => c,
					Vt: () => d,
					Vy: () => y,
					YI: () => p,
					bP: () => u,
					xb: () => o,
					yC: () => l,
				});
				var n = i(316550);
				const a = {
						data: null,
						consolidatedPushesGoalFetching: !1,
						consolidatedPushesGoalFetchFail: !1,
						consolidatedPushesGoalUpdateSucceed: !1,
						consolidatedPushesGoalUpdateFail: !1,
					},
					s = {
						[n.Ly1]: (e, t) => ({
							...e,
							consolidatedPushesGoalFetching: !0,
							consolidatedPushesGoalFetchFail: !1,
						}),
						[n.s2Z]: (e, t) => ({
							...e,
							data: { ...t.data },
							consolidatedPushesGoalFetching: !1,
							consolidatedPushesGoalFetchFail: !1,
						}),
						[n.JDs]: (e, t) => ({
							...e,
							consolidatedPushesGoalFetching: !1,
							consolidatedPushesGoalFetchFail: !0,
						}),
						[n.ZN]: (e, t) => ({
							...e,
							data: { ...t.data },
							consolidatedPushesGoalUpdateSucceed: !0,
							consolidatedPushesGoalUpdateFail: !1,
						}),
						[n.wJK]: (e, t) => ({
							...e,
							consolidatedPushesGoalUpdateSucceed: !1,
							consolidatedPushesGoalUpdateFail: !0,
						}),
						[n.Tf9]: (e) => ({
							...e,
							consolidatedPushesGoalUpdateSucceed: !1,
							consolidatedPushesGoalUpdateFail: !1,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t) {
					return {
						type: n.EqB,
						calendarDate: e,
						meta: { cacheTime: t ? null : 2e3 },
					};
				}
				function l(e, t) {
					return { type: n.Rfe, calendarDate: e, newGoal: t };
				}
				function c() {
					return { type: n.Tf9 };
				}
				const d = (e) =>
						e.consolidatedPushesGoal.data
							? e.consolidatedPushesGoal.data
							: null,
					u = (e) => e.consolidatedPushesGoal.consolidatedPushesGoalFetching,
					p = (e) => e.consolidatedPushesGoal.consolidatedPushesGoalFetchFail,
					y = (e) =>
						e.consolidatedPushesGoal.consolidatedPushesGoalUpdateSucceed,
					h = (e) => e.consolidatedPushesGoal.consolidatedPushesGoalUpdateFail;
			},
			229546: (e, t, i) => {
				'use strict';
				i.d(t, {
					AH: () => o,
					Ay: () => r,
					DR: () => p,
					EI: () => y,
					bp: () => l,
					e8: () => c,
					g: () => h,
					ib: () => u,
					m: () => d,
				});
				var n = i(316550);
				const a = {
						data: {},
						consolidatedStepsGoalFetching: !1,
						consolidatedStepsGoalFetchFail: !1,
						consolidatedStepsGoalUpdateSucceed: !1,
						consolidatedStepsGoalUpdateFail: !1,
					},
					s = {
						[n.l4D]: (e, t) => ({
							...e,
							consolidatedStepsGoalFetching: !0,
							consolidatedStepsGoalFetchFail: !1,
						}),
						[n.AR1]: (e, t) => ({
							...e,
							data: { ...e.data, [t.calendarDate]: t.data },
							consolidatedStepsGoalFetching: !1,
							consolidatedStepsGoalFetchFail: !1,
						}),
						[n.vHg]: (e, t) => ({
							...e,
							consolidatedStepsGoalFetching: !1,
							consolidatedStepsGoalFetchFail: !0,
						}),
						[n.WmQ]: (e, t) => ({
							...e,
							data: { ...e.data, [t.calendarDate]: t.data },
							consolidatedStepsGoalUpdateSucceed: !0,
							consolidatedStepsGoalUpdateFail: !1,
						}),
						[n.IC$]: (e, t) => ({
							...e,
							consolidatedStepsGoalUpdateSucceed: !1,
							consolidatedStepsGoalUpdateFail: !0,
						}),
						[n.XW9]: (e) => ({
							...e,
							consolidatedStepsGoalUpdateSucceed: !1,
							consolidatedStepsGoalUpdateFail: !1,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i) {
					return {
						type: n.wHs,
						displayName: e,
						calendarDate: t,
						meta: { cacheTime: i ? null : 2e3 },
					};
				}
				function l(e, t, i) {
					return { type: n.Pbl, displayName: e, calendarDate: t, newGoal: i };
				}
				function c() {
					return { type: n.XW9 };
				}
				const d = (e, t) => {
						var i, n, a, s, r, o;
						return t
							? null !== (i = e.consolidatedStepsGoal) &&
								void 0 !== i &&
								null !== (n = i.data) &&
								void 0 !== n &&
								n[t]
								? null === (a = e.consolidatedStepsGoal) ||
									void 0 === a ||
									null === (s = a.data) ||
									void 0 === s
									? void 0
									: s[t]
								: null
							: null !== (r = e.consolidatedStepsGoal) && void 0 !== r && r.data
								? null === (o = e.consolidatedStepsGoal) || void 0 === o
									? void 0
									: o.data
								: null;
					},
					u = (e) => e.consolidatedStepsGoal.consolidatedStepsGoalFetching,
					p = (e) => e.consolidatedStepsGoal.consolidatedStepsGoalFetchFail,
					y = (e) => e.consolidatedStepsGoal.consolidatedStepsGoalUpdateSucceed,
					h = (e) => e.consolidatedStepsGoal.consolidatedStepsGoalUpdateFail;
			},
			510026: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => y,
					Pk: () => c,
					SK: () => u,
					Uq: () => l,
					WO: () => a,
					aL: () => s,
					am: () => p,
					tQ: () => d,
				});
				var n = i(316550);
				const a = { DEFAULT: '25', ALMOST_DONE: '80', DONE: '100' },
					s = {
						LOADING: 'loading',
						GENESIS: 'genesis',
						UNABLE_TO_CONNECT: 'unable_to_connect',
						DISCONNECTED: 'disconnected',
						INACTIVE: 'in-active',
						SUMMARY: 'summary',
						SYNC: 'sync',
						RESTART: 'restart',
					},
					r = {
						mfpConnectionState: '',
						mfpConnecting: !1,
						flamePercent: a.DEFAULT,
					},
					o = {
						[n.rnI]: (e, t) =>
							t.state === s.SYNC
								? { ...e, mfpConnecting: !0 }
								: { ...e, mfpConnectionState: t.state },
						[n.hhd]: (e, t) => ({ ...e, flamePercent: t.flamePercent }),
						[n.PI0]: (e) => ({ ...e, mfpConnecting: !1 }),
						[n.eLm]: (e) => ({
							...e,
							mfpConnecting: !1,
							mfpConnectionState: s.SUMMARY,
							flamePercent: a.DONE,
						}),
					};
				function l(e) {
					return { type: n.rnI, state: e };
				}
				function c(e) {
					return { type: n.hhd, flamePercent: e };
				}
				const d = (e) => e.dailyCalories.mfpConnectionState,
					u = (e) => e.dailyCalories.mfpConnecting,
					p = (e) => e.dailyCalories.flamePercent;
				function y(e = r, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
			},
			751010: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => u,
					Ge: () => c,
					Gp: () => o,
					Hj: () => d,
					KJ: () => l,
				});
				var n = i(316550);
				const a = {
						payload: {},
						dailyHeartRate: {},
						dailyHeartRateFetching: !1,
						dailyHeartRateFetchFail: !1,
						abnormalHeartRateDeleting: !1,
						abnormalHeartRateDeleteSuccess: !1,
						abnormalHeartRateDeleteFail: !1,
					},
					s = (e) => (t, i) => {
						if (!t.dailyHeartRate) return t;
						const {
								eventTimestamp: n,
								calendarDate: a,
								displayName: s,
							} = i.payload,
							r = t.dailyHeartRate[s][a].abnormalHRValuesArray.filter(
								(e) => e[0] !== n
							);
						return {
							...t,
							dailyHeartRate: {
								...t.dailyHeartRate,
								[s]: {
									...t.dailyHeartRate[i.displayName],
									[a]: { ...t.dailyHeartRate[s][a], abnormalHRValuesArray: r },
								},
							},
							abnormalHeartRateDeleting: !1,
							abnormalHeartRateDeleteSuccess: e,
							abnormalHeartRateDeleteFail: !e,
						};
					},
					r = {
						[n.nVG]: (e, t) => ({
							dailyHeartRate: { ...e.dailyHeartRate },
							dailyHeartRateFetching: !0,
							dailyHeartRateFetchFail: !1,
						}),
						[n.JOV]: (e, t) => ({
							dailyHeartRate: {
								...e.dailyHeartRate,
								[t.displayName]: {
									...e.dailyHeartRate[t.displayName],
									[t.calendarDate]: t.dailyHeartRate,
								},
							},
							dailyHeartRateFetching: !1,
							dailyHeartRateFetchFail: !1,
						}),
						[n.eTM]: (e, t) => ({
							dailyHeartRate: {
								...e.dailyHeartRate,
								[t.displayName]: {
									...e.dailyHeartRate[t.displayName],
									[t.calendarDate]: {},
								},
							},
							dailyHeartRateFetching: !1,
							dailyHeartRateFetchFail: !0,
						}),
						[n.OAh]: (e) =>
							e.dailyHeartRate ? { ...e, abnormalHeartRateDeleting: !0 } : e,
						[n.lDt]: s(!0),
						[n.Uv6]: s(!1),
					};
				function o(e, t, i) {
					return {
						type: n.nVG,
						displayName: e,
						calendarDate: t,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				const l = (e, t, i) =>
						e.dailyHeartRate.dailyHeartRate[t]
							? e.dailyHeartRate.dailyHeartRate[t][i]
							: null,
					c = (e) => e.dailyHeartRate.dailyHeartRateFetching,
					d = (e) => e.dailyHeartRate.dailyHeartRateFetchFail;
				function u(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			155615: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					IW: () => d,
					Tr: () => l,
					Xn: () => o,
					tZ: () => c,
				});
				var n = i(316550);
				const a = {
						dailyMovement: {},
						dailyMovementFetching: !1,
						dailyMovementFetchFail: !1,
					},
					s = {
						[n.iqT]: (e, t) => ({
							dailyMovement: { ...e.dailyMovement },
							dailyMovementFetching: !0,
							dailyMovementFetchFail: !1,
						}),
						[n.JD2]: (e, t) => ({
							dailyMovement: {
								...e.dailyMovement,
								[t.displayName]: {
									...e.dailyMovement[t.displayName],
									[t.calendarDate]: t.dailyMovement,
								},
							},
							dailyMovementFetching: !1,
							dailyMovementFetchFail: !1,
						}),
						[n.AVH]: (e, t) => ({
							dailyMovement: { ...e.dailyMovement },
							dailyMovementFetching: !1,
							dailyMovementFetchFail: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i) {
					return {
						type: n.nK3,
						displayName: e,
						calendarDate: t,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				const l = (e, t, i) =>
						e.dailyMovement.dailyMovement[t]
							? e.dailyMovement.dailyMovement[t][i]
							: null,
					c = (e) => e.dailyMovement.dailyMovementFetching,
					d = (e) => e.dailyMovement.dailyMovementFetchFail;
			},
			505874: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					TM: () => u,
					Vz: () => c,
					dK: () => d,
					x7: () => o,
				});
				var n = i(316550);
				const a = {
						data: {},
						dailyAverageFetching: !1,
						dailyAverageFetchFail: !1,
					},
					s = {
						[n.P6B]: (e, t) => ({
							...e,
							dailyAverageFetching: !0,
							dailyAverageFetchFail: !1,
						}),
						[n.CFX]: (e, t) => ({
							...e,
							data: { ...e.data, [t.calendarDate]: t.data },
							dailyAverageFetching: !1,
							dailyAverageFetchFail: !1,
						}),
						[n.v6A]: (e, t) => ({
							...e,
							data: { ...e.data, [t.calendarDate]: {} },
							dailyAverageFetching: !1,
							dailyAverageFetchFail: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t) {
					return {
						type: n.MC3,
						calendarDate: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function l(e) {
					return e.dailyPushes;
				}
				function c(e, t) {
					return l(e).data[t] || null;
				}
				function d(e) {
					return l(e).dailyAverageFetching;
				}
				function u(e) {
					return l(e).dailyAverageFetchFail;
				}
			},
			360023: (e, t, i) => {
				'use strict';
				i.d(t, {
					$H: () => l,
					Ay: () => r,
					Bp: () => o,
					Nh: () => c,
					e7: () => u,
					eE: () => d,
				});
				var n = i(316550);
				const a = {
						payload: {},
						dailySleeps: {},
						isFetching: {},
						fetchFailed: {},
						noteUpdating: !1,
						noteUpdateFailed: !1,
						lastNote: '',
					},
					s = {
						[n.$Uc]: (e, t) => ({
							...e,
							isFetching: {
								...e.isFetching,
								[t.displayName]: {
									...e.isFetching[t.displayName],
									[t.calendarDate]: !0,
								},
							},
							fetchFailed: {
								...e.fetchFailed,
								[t.displayName]: {
									...e.fetchFailed[t.displayName],
									[t.calendarDate]: !1,
								},
							},
						}),
						[n.cKe]: (e, t) => ({
							...e,
							payload: t.dailySleepData,
							dailySleeps: {
								...e.dailySleeps,
								[t.displayName]: {
									...e.dailySleeps[t.displayName],
									[t.calendarDate]: t.dailySleepData,
								},
							},
							isFetching: {
								...e.isFetching,
								[t.displayName]: {
									...e.isFetching[t.displayName],
									[t.calendarDate]: !1,
								},
							},
							fetchFailed: {
								...e.fetchFailed,
								[t.displayName]: {
									...e.fetchFailed[t.displayName],
									[t.calendarDate]: !1,
								},
							},
							noteUpdateFailed: a.noteUpdateFailed,
							lastNote: t.dailySleepData.dailySleepDTO.userNote,
						}),
						[n.Tar]: (e, t) => ({
							...e,
							payload: t.dailySleepData,
							dailySleeps: {
								...e.dailySleeps,
								[t.displayName]: {
									...e.dailySleeps[t.displayName],
									[t.calendarDate]: {},
								},
							},
							isFetching: {
								...e.isFetching,
								[t.displayName]: {
									...e.isFetching[t.displayName],
									[t.calendarDate]: !1,
								},
							},
							fetchFailed: {
								...e.fetchFailed,
								[t.displayName]: {
									...e.fetchFailed[t.displayName],
									[t.calendarDate]: !0,
								},
							},
						}),
						[n.ETp]: (e, t) => {
							const { userNote: i, displayName: n, calendarDate: a } = t;
							return {
								...e,
								dailySleeps: {
									...e.dailySleeps,
									[n]: {
										...e.dailySleeps[n],
										[a]: {
											...e.dailySleeps[n][a],
											dailySleepDTO: {
												...e.dailySleeps[n][a].dailySleepDTO,
												userNote: i,
											},
										},
									},
								},
								noteUpdating: !0,
							};
						},
						[n.RrC]: (e, t) => {
							const { userNote: i } = t;
							return {
								...e,
								noteUpdating: a.noteUpdating,
								noteUpdateFailed: a.noteUpdateFailed,
								lastNote: i,
							};
						},
						[n.WEB]: (e, t) => {
							const { displayName: i, calendarDate: n } = t;
							return {
								...e,
								dailySleeps: {
									...e.dailySleeps,
									[i]: {
										...e.dailySleeps[i],
										[n]: {
											...e.dailySleeps[i][n],
											dailySleepDTO: {
												...e.dailySleeps[i][n].dailySleepDTO,
												userNote: e.lastNote,
											},
										},
									},
								},
								noteUpdating: a.noteUpdating,
								noteUpdateFailed: !0,
							};
						},
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				const o = (e, t, i) =>
						e.dailySleepData.dailySleeps[t]
							? e.dailySleepData.dailySleeps[t][i]
							: null,
					l = (e) =>
						Object.values(e.dailySleepData.isFetching).find((e) => {
							const t = Object.values(e);
							return t && t.find((e) => !0 === e);
						}),
					c = (e) =>
						Object.values(e.dailySleepData.fetchFailed).find((e) => {
							const t = Object.values(e);
							return t && t.find((e) => !0 === e);
						}),
					d = (e, t, i) =>
						!!e.dailySleepData.isFetching[t] &&
						e.dailySleepData.isFetching[t][i],
					u = (e, t, i) =>
						!!e.dailySleepData.fetchFailed[t] &&
						e.dailySleepData.fetchFailed[t][i];
			},
			705899: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					RN: () => l,
					VV: () => o,
					tw: () => c,
					w: () => d,
				});
				var n = i(316550);
				const a = { data: {}, dailyStepsFetching: !1, dailyStepsFetchFail: !1 },
					s = {
						[n.iZm]: (e, t) => ({
							...e,
							dailyStepsFetching: !0,
							dailyStepsFetchFail: !1,
						}),
						[n.$Pn]: (e, t) => ({
							data: {
								...e.data,
								[t.displayName]: {
									...e.data[t.displayName],
									[t.calendarDate]: t.data,
								},
							},
							dailyStepsFetching: !1,
							dailyStepsFetchFail: !1,
						}),
						[n.ocK]: (e, t) => ({
							data: {
								...e.data,
								[t.displayName]: {
									...e.data[t.displayName],
									[t.calendarDate]: {},
								},
							},
							dailyStepsFetching: !1,
							dailyStepsFetchFail: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i) {
					return {
						type: n.Jcb,
						displayName: e,
						calendarDate: t,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				const l = (e, t, i) =>
						e.dailySteps.data[t] ? e.dailySteps.data[t][i] : null,
					c = (e) => e.dailySteps.dailyStepsFetching,
					d = (e) => e.dailySteps.dailyStepsFetchFail;
			},
			402574: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => d,
					IN: () => r,
					Rg: () => c,
					Sx: () => l,
					yu: () => o,
				});
				var n = i(316550);
				const a = {
						dailyStress: {},
						dailyStressFetching: !1,
						dailyStressFetchFail: !1,
					},
					s = {
						[n.FB5]: (e, t) => ({
							dailyStress: {
								...e.dailyStress,
								[t.displayName]: {
									...e.dailyStress[t.displayName],
									[t.calendarDate]: {},
								},
							},
							dailyStressFetching: !0,
							dailyStressFetchFail: !1,
						}),
						[n.p5M]: (e, t) => ({
							dailyStress: {
								...e.dailyStress,
								[t.displayName]: {
									...e.dailyStress[t.displayName],
									[t.calendarDate]: t.dailyStressData,
								},
							},
							dailyStressFetching: !1,
							dailyStressFetchFail: !1,
						}),
						[n._ku]: (e, t) => ({
							dailyStress: {
								...e.dailyStress,
								[t.displayName]: {
									...e.dailyStress[t.displayName],
									[t.calendarDate]: {},
								},
							},
							dailyStressFetching: !1,
							dailyStressFetchFail: !0,
						}),
					};
				function r(e, t, i) {
					return {
						type: n.FB5,
						displayName: e,
						calendarDate: t,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				const o = (e, t, i) =>
						e.dailyStressData.dailyStress[t]
							? e.dailyStressData.dailyStress[t][i]
							: null,
					l = (e) => e.dailyStressData.dailyStressFetching,
					c = (e) => e.dailyStressData.dailyStressFetchFail;
				function d(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			386601: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, TL: () => r, j: () => l, kQ: () => o });
				var n = i(808171);
				const a = { isExportable: {} },
					s = {
						[n.qM]: (e, t) => ({
							isExportable: {
								...e.isExportable,
								[t.calendarDate]: {
									isExportable: t.isExportable,
									isFetching: !1,
								},
							},
						}),
						[n.X7]: (e, t) => ({
							...e,
							isExportable: {
								...e.isExportable,
								[t.calendarDate]: {
									isExportable: t.isExportable,
									isFetching: !1,
								},
							},
						}),
						[n.ZO]: (e, t) => ({
							isExportable: {
								...e.isExportable,
								[t.calendarDate]: { isExportable: null, isFetching: !0 },
							},
						}),
						[n.wz]: (e, t) => ({
							...e,
							deletingDailySummary: {
								...e.deletingDailySummary,
								[t.calendarDate]: { isDeleting: !1, isDeleted: !1 },
							},
						}),
						[n.F$]: (e, t) => ({
							...e,
							deletingDailySummary: {
								...e.deletingDailySummary,
								[t.calendarDate]: { isDeleting: !1, isDeleted: !0 },
							},
						}),
						[n.Ph]: (e, t) => {
							let i = { ...e };
							return (
								i &&
									i.deletingDailySummary &&
									i.deletingDailySummary[t.calendarDate] &&
									delete i.deletingDailySummary[t.calendarDate],
								i
							);
						},
					};
				function r(e, t) {
					return { type: n.$C, calendarDate: e, displayName: t };
				}
				function o(e) {
					return { type: n.Ph, calendarDate: e };
				}
				const l = (e, t) =>
					!!(
						e.dailySummaryActions &&
						e.dailySummaryActions.deletingDailySummary &&
						e.dailySummaryActions.deletingDailySummary[t]
					) && e.dailySummaryActions.deletingDailySummary[t].isDeleted;
				function c(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			371552: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, Qc: () => r, sP: () => s });
				var n = i(316550);
				const a = {
						ecgRecordingDailySummary: {},
						ecgRecordingsForDailySummaryFetching: !1,
						ecgRecordingsForDailySummaryFetchFail: !1,
					},
					s = (e, t) =>
						e.ecgRecordingDailySummary.ecgRecordingDailySummary[t]
							? e.ecgRecordingDailySummary.ecgRecordingDailySummary[t]
							: [],
					r = (e) =>
						e.ecgRecordingDailySummary.ecgRecordingsForDailySummaryFetching,
					o = {
						[n.wTF]: (e, t) => ({
							ecgRecordingDailySummary: { ...e.ecgRecordingDailySummary },
							ecgRecordingsForDailySummaryFetching: !0,
							ecgRecordingsForDailySummaryFetchFail: !1,
						}),
						[n.p$4]: (e, t) => ({
							ecgRecordingDailySummary: {
								...e.ecgRecordingDailySummary,
								[t.calendarDate]: t.data.content,
							},
							ecgRecordingsForDailySummaryFetching: !1,
							ecgRecordingsForDailySummaryFetchFail: !1,
						}),
						[n._06]: (e, t) => ({
							ecgRecordingDailySummary: { ...e.ecgRecordingDailySummary },
							ecgRecordingsForDailySummaryFetching: !1,
							ecgRecordingsForDailySummaryFetchFail: !0,
						}),
					};
				function l(e = a, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
			},
			791638: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, Rq: () => o, YT: () => s, wg: () => r });
				var n = i(316550);
				const a = {
						ecgRecordings: {},
						ecgRecordingsFetching: !1,
						ecgRecordingsFetchFail: !1,
					},
					s = (e) =>
						e.ecgRecordings.ecgRecordings ? e.ecgRecordings.ecgRecordings : [],
					r = (e) => e.ecgRecordings.ecgRecordingsFetching,
					o = (e) => e.ecgRecordings.ecgRecordingsFetchFail,
					l = {
						[n.wTF]: (e, t) => ({
							ecgRecordings: { ...e.ecgRecordings },
							ecgRecordingsFetching: !0,
							ecgRecordingsFetchFail: !1,
						}),
						[n.p$4]: (e, t) => ({
							ecgRecordings: { ...e.ecgRecordings, ecgRecordings: t.data },
							ecgRecordingsFetching: !1,
							ecgRecordingsFetchFail: !1,
						}),
						[n._06]: (e, t) => ({
							ecgRecordings: { ...e.ecgRecordings },
							ecgRecordingsFetching: !1,
							ecgRecordingsFetchFail: !0,
						}),
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
			},
			330026: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, ab: () => s, mk: () => r, vZ: () => o });
				var n = i(316550);
				const a = {
						healthSnapshotsForDailySummary: {},
						healthSnapshotsForDailySummaryFetching: !1,
						healthSnapshotsForDailySummaryFetchFail: !1,
					},
					s = (e, t) =>
						e.healthSnapshotsForDailySummary.healthSnapshotsForDailySummary[t]
							? e.healthSnapshotsForDailySummary.healthSnapshotsForDailySummary[
									t
								]
							: [],
					r = (e) =>
						e.healthSnapshotsForDailySummary
							.healthSnapshotsForDailySummaryFetching,
					o = (e) =>
						e.healthSnapshotsForDailySummary
							.healthSnapshotsForDailySummaryFetchFail,
					l = {
						[n.mNn]: (e, t) => ({
							healthSnapshotsForDailySummary: {
								...e.healthSnapshotsForDailySummary,
							},
							healthSnapshotsForDailySummaryFetching: !0,
							healthSnapshotsForDailySummaryFetchFail: !1,
						}),
						[n.ZgL]: (e, t) => ({
							healthSnapshotsForDailySummary: {
								...e.healthSnapshotsForDailySummary,
								[t.calendarDate]: t.data,
							},
							healthSnapshotsForDailySummaryFetching: !1,
							healthSnapshotsForDailySummaryFetchFail: !1,
						}),
						[n.SdF]: (e, t) => ({
							healthSnapshotsForDailySummary: {
								...e.healthSnapshotsForDailySummary,
							},
							healthSnapshotsForDailySummaryFetching: !1,
							healthSnapshotsForDailySummaryFetchFail: !0,
						}),
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
			},
			617366: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, e6: () => l, kZ: () => o });
				var n = i(316550);
				const a = { payload: null },
					s = {
						[n.hWm]: (e, t) => ({ payload: t.lastSyncTimestamp }),
						[n.cQ1]: (e, t) => ({ payload: e.lastSyncTimestamp }),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return { type: n.DjC, meta: { cacheTime: e ? null : 12e4 } };
				}
				const l = (e) =>
					e.lastSyncTimestamp.payload ? e.lastSyncTimestamp.payload : null;
			},
			415427: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					Bo: () => c,
					Ko: () => p,
					Le: () => d,
					Sn: () => u,
					mO: () => y,
					xM: () => l,
				});
				var n = i(316550),
					a = i(702291);
				const s = { summaries: [], isFetching: !1, fetchFailed: !1 },
					r = {
						[n.cTw]: (e) => ({ ...e, isFetching: !0, fetchFailed: !1 }),
						[n.ncT]: (e, t) => ({
							summaries: {
								...e.summaries,
								[t.displayName]: {
									...e.summaries[t.displayName],
									[t.calendarDate]: t.mergedSummary,
								},
							},
							isFetching: !1,
							fetchFailed: !1,
						}),
						[n.ktn]: (e, t) => ({
							summaries: {
								...e.summaries,
								[t.displayName]: {
									...e.summaries[t.displayName],
									[t.calendarDate]: {},
								},
							},
							isFetching: !1,
							fetchFailed: !0,
						}),
						[n.Odt]: (e, t) => ({
							summaries: {
								...e.summaries,
								[t.mergedSummary.displayName]: {
									...e.summaries[t.mergedSummary.displayName],
									[t.mergedSummary.calendarDate]: t.mergedSummary,
								},
							},
						}),
					};
				function o(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t, i) {
					return {
						type: n.rAn,
						displayName: e,
						calendarDate: t,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				const c = (e, t, i) =>
						e.mergedSummary.summaries[t]
							? e.mergedSummary.summaries[t][i]
							: null,
					d = (e) => e.mergedSummary.isFetching,
					u = (e) => e.mergedSummary.fetchFailed;
				function p(e) {
					return { type: n.q$n, payload: e };
				}
				const y = (e, t, i) => {
					let n = c(e, t, i);
					if (n && n.wellnessEndTimeGmt && n.wellnessStartTimeGmt) {
						let e = a.A.parseISOUTC(n.wellnessStartTimeGmt).getTime(),
							t = a.A.parseISOUTC(n.wellnessStartTimeLocal).getTime(),
							i = a.A.parseISOUTC(n.wellnessEndTimeGmt).getTime(),
							s = t - e,
							r = a.A.parseISOUTC(n.wellnessEndTimeLocal).getTime() - i;
						return s !== r && { startOffset: s / 36e5, endOffset: r / 36e5 };
					}
					return !1;
				};
			},
			874640: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, E1: () => l, iu: () => o });
				var n = i(316550);
				const a = { mergedSummaryCount: {} },
					s = {
						[n.voy]: (e, t) => ({ ...t.mergedSummaryCount }),
						[n.YFP]: (e, t) => ({ ...e.mergedSummaryCount }),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return { type: n.Nr, meta: { cacheTime: e ? null : 12e4 } };
				}
				const l = (e) => (e.mergedSummaryCount ? e.mergedSummaryCount : null);
			},
			787906: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					Ce: () => c,
					DF: () => p,
					KN: () => g,
					Mf: () => o,
					YO: () => u,
					cL: () => d,
					gY: () => h,
					jF: () => l,
					sz: () => y,
				});
				var n = i(316550);
				const a = {
						wellnessGoalsTypes: {},
						wellnessGoalsFetching: !1,
						wellnessGoalsFetchFail: !1,
						wellnessGoalsUpdating: !1,
						wellnessGoalsUpdateSucceed: !1,
						wellnessGoalsUpdateFail: !1,
					},
					s = {
						[n.lMF]: (e, t) => ({
							wellnessGoalsTypes: { ...e.wellnessGoalsTypes },
							wellnessGoalsFetching: !0,
							wellnessGoalsFetchFail: !1,
						}),
						[n.KYd]: (e, t) => ({
							wellnessGoalsTypes: {
								...e.wellnessGoalsTypes,
								[t.calendarDate]: [...t.data],
							},
							wellnessGoalsFetching: !1,
							wellnessGoalsFetchFail: !1,
						}),
						[n.FKM]: (e, t) => ({
							wellnessGoalsTypes: { ...e.wellnessGoalsTypes },
							wellnessGoalsFetching: !1,
							wellnessGoalsFetchFail: !0,
						}),
						[n.aMx]: (e) => ({
							...e,
							wellnessGoalsUpdating: !0,
							wellnessGoalsUpdateSucceed: !1,
							wellnessGoalsUpdateFail: !1,
						}),
						[n.TJW]: (e, t) => {
							const i = e.wellnessGoalsTypes[t.calendarDate],
								n = [];
							return (
								i &&
									i.map((e) => {
										e.goalType === t.data.goalType
											? n.push({
													goalType: t.data.goalType,
													goalValue: t.data.goalValue,
												})
											: n.push(e);
									}),
								{
									wellnessGoalsTypes: {
										...e.wellnessGoalsTypes,
										[t.calendarDate]: n,
									},
									wellnessGoalsUpdating: !1,
									wellnessGoalsUpdateSucceed: !0,
									wellnessGoalsUpdateFail: !1,
								}
							);
						},
						[n._ZD]: (e, t) => ({
							...e,
							wellnessGoalsUpdating: !1,
							wellnessGoalsUpdateSucceed: !1,
							wellnessGoalsUpdateFail: !0,
						}),
						[n.b_3]: (e) => ({
							...e,
							wellnessGoalsUpdating: !1,
							wellnessGoalsUpdateSucceed: !1,
							wellnessGoalsUpdateFail: !1,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t) {
					return {
						type: n.q0$,
						calendarDate: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function l(e, t) {
					return { type: n.j7R, calendarDate: e, newGoal: t };
				}
				function c() {
					return { type: n.b_3 };
				}
				const d = (e) => (e.wellnessGoals ? e.wellnessGoals : null),
					u = (e) => e.wellnessGoals.wellnessGoalsFetching,
					p = (e) => e.wellnessGoals.wellnessGoalsFetchFail,
					y = (e) => e.wellnessGoals.wellnessGoalsUpdating,
					h = (e) => e.wellnessGoals.wellnessGoalsUpdateSucceed,
					g = (e) => e.wellnessGoals.wellnessGoalsUpdateFail;
			},
			773295: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => S,
					HN: () => A,
					IN: () => p,
					IT: () => _,
					Oe: () => T,
					W: () => g,
					bM: () => y,
					e9: () => h,
					fs: () => m,
					j9: () => d,
					qH: () => c,
					qr: () => u,
					zM: () => E,
				});
				var n = i(316550);
				const a = {
						allAvailableDeviceBackups: [],
						allAvailableBackupsFetching: !1,
						allAvailableBackupsSuccess: !1,
						allAvailableBackupsFail: !1,
						compatibleDeviceBackups: [],
						compatibleDeviceBackupsFetching: !1,
						compatibleDeviceBackupsSuccess: !1,
						compatibleDeviceBackupsFail: !1,
						removeBackupSuccess: !1,
						removingBackup: !1,
						removeBackupFail: !1,
						restoreBackupSuccess: !1,
						restoringBackup: !1,
						restoreBackupFail: !1,
						shouldLaunchGarminExpress: !1,
						backupsSummary: {},
						backupsSummaryFetching: !1,
						backupsSummarySuccess: !1,
						backupsSummaryFail: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						allAvailableDeviceBackups: e
							? i.allAvailableDeviceBackups
							: a.allAvailableDeviceBackups,
						allAvailableBackupsFetching: !1,
						allAvailableBackupsSuccess: e,
						allAvailableBackupsFail: !e,
					}),
					r = (e) => (t, i) => {
						const { deviceId: n } = i,
							s = t.allAvailableDeviceBackups.filter((e) => e.deviceId !== n);
						return {
							...t,
							allAvailableDeviceBackups:
								e && s.length ? s : a.allAvailableDeviceBackups,
							removingBackup: !1,
							removeBackupSuccess: e,
							removeBackupFail: !e,
						};
					},
					o = (e) => (t) => ({
						...t,
						compatibleDeviceBackupsFetching: !1,
						restoreBackupSuccess: e,
						restoreBackupFail: !e,
					}),
					l = (e) => (t, i) => ({
						...t,
						backupsSummaryFetching: !1,
						backupsSummarySuccess: e,
						backupsSummaryFail: !e,
						backupsSummary: e ? i.backupsSummary : t.backupsSummary,
					}),
					c = (e) => e.deviceBackups.allAvailableBackupsFetching,
					d = (e) => e.deviceBackups.allAvailableBackupsSuccess,
					u = (e) => e.deviceBackups.allAvailableDeviceBackups,
					p = (e) => e.deviceBackups.backupsSummaryFetching,
					y = (e) => e.deviceBackups.backupsSummarySuccess,
					h = (e) => e.deviceBackups.backupsSummary,
					g = (e) => e.compatibleDeviceBackups,
					m = (e, t) => {
						const { compatibleDeviceBackups: i } = e;
						return i && i.find((e) => +e.deviceId === t);
					},
					A = (e) =>
						e.compatibleDeviceBackups && e.compatibleDeviceBackups.length > 0,
					_ = (e) => e.deviceBackups.removingBackup,
					E = (e) => e.deviceBackups.restoreBackupFail,
					T = (e) => e.deviceBackups.shouldLaunchGarminExpress,
					C = {
						[n.pEC]: (e) => ({ ...e, allAvailableBackupsFetching: !0 }),
						[n.goz]: s(!0),
						[n.RdK]: s(!1),
						[n.AIH]: (e) => ({ ...e, compatibleDeviceBackupsFetching: !0 }),
						[n.rjW]: (e, t) => {
							const { compatibleDeviceBackups: i } = t.payload;
							return {
								...e,
								compatibleDeviceBackups: i,
								compatibleDeviceBackupsFetching: !1,
								compatibleDeviceBackupsSuccess: !0,
								compatibleDeviceBackupsFail: !1,
							};
						},
						[n.mZ9]: (e, t) => ({
							...e,
							compatibleDeviceBackups: a.compatibleDeviceBackups,
							compatibleDeviceBackupsFetching: !1,
							compatibleDeviceBackupsSuccess: !1,
							compatibleDeviceBackupsFail: !0,
						}),
						[n.NyP]: (e) => ({ ...e, removingBackup: !0 }),
						[n.rKG]: r(!0),
						[n.AtF]: r(!1),
						[n.gNg]: (e) => ({ ...e, restoringBackup: !0 }),
						[n.nuq]: o(!0),
						[n.OuJ]: o(!1),
						[n.eu0]: (e, t) => ({ ...e, shouldLaunchGarminExpress: t.payload }),
						[n.NdP]: () => a,
						[n.pNI]: (e) => ({
							...e,
							allAvailableBackupsFail: !1,
							compatibleDeviceBackupsFail: !1,
							removeBackupFail: !1,
							restoreBackupFail: !1,
						}),
						[n.Od3]: (e) => ({ ...e, backupsSummaryFetching: !0 }),
						[n.jBf]: l(!0),
						[n.O7g]: l(!1),
					};
				function S(e = a, t = {}) {
					const i = C[t.type];
					return i ? i(e, t) : e;
				}
			},
			202821: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, Us: () => o });
				var n = i(316550);
				const a = {
						deviceBetaSoftwareInfo: {},
						deviceBetaSoftwareInfoFetching: !1,
						deviceBetaSoftwareInfoFetchFail: !1,
					},
					s = {
						[n.n3x]: (e) => ({
							...e,
							deviceBetaSoftwareInfoFetching: !0,
							deviceBetaSoftwareInfoFetchFail: !1,
						}),
						[n.AL]: (e, t) => ({
							...e,
							deviceBetaSoftwareInfo: {
								...e.deviceBetaSoftwareInfo,
								[t.deviceId]: { ...t.data },
							},
							deviceBetaSoftwareInfoFetching: !1,
							deviceBetaSoftwareInfoFetchFail: !1,
						}),
						[n.x8Y]: (e) => ({
							...e,
							deviceBetaSoftwareInfoFetching: !1,
							deviceBetaSoftwareInfoFetchFail: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				const o = (e) => {
					var t, i;
					return null !== (t = e.deviceBetaSoftwareInfo) &&
						void 0 !== t &&
						t.deviceBetaSoftwareInfo
						? null === (i = e.deviceBetaSoftwareInfo) || void 0 === i
							? void 0
							: i.deviceBetaSoftwareInfo
						: null;
				};
			},
			439014: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => u,
					Pf: () => c,
					aF: () => o,
					jO: () => r,
					vS: () => l,
				});
				var n = i(316550);
				const a = {
						device: null,
						deviceFetching: !1,
						deviceSuccess: !1,
						deviceFail: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						device: e ? i.data : null,
						deviceFetching: !1,
						deviceSuccess: e,
						deviceFail: !e,
					}),
					r = (e) => e.deviceByHealthDeviceId.deviceFetching,
					o = (e) => e.deviceByHealthDeviceId.deviceSuccess,
					l = (e) => e.deviceByHealthDeviceId.deviceFail,
					c = (e) => e.deviceByHealthDeviceId.device,
					d = {
						[n.Le9]: (e) => ({ ...e, deviceFetching: !0 }),
						[n.K6S]: s(!0),
						[n.dgr]: s(!1),
					};
				function u(e = a, t = {}) {
					const i = d[t.type];
					return i ? i(e, t) : e;
				}
			},
			933178: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => u, NW: () => l, Xk: () => o, ah: () => c });
				var n = i(316550);
				const a = {
						deviceInfo: null,
						deviceInfoFetching: !1,
						deviceInfoSuccess: !1,
						deviceInfoFail: !1,
						removingDevice: !1,
						removeDeviceSuccess: !1,
						removeDeviceFail: !1,
						userDeviceInfo: null,
						userDeviceInfoFetching: !1,
						userDeviceInfoSuccess: !1,
						userDeviceInfoFail: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						deviceInfo: e ? i.data : null,
						deviceInfoFetching: !1,
						deviceInfoSuccess: e,
						deviceInfoFail: !e,
					}),
					r = (e) => (t, i) => ({
						...t,
						userDeviceInfo: e ? i.data : null,
						userDeviceInfoFetching: !1,
						userDeviceInfoSuccess: e,
						userDeviceInfoFail: !e,
					}),
					o = (e) => e.deviceInfo.deviceInfoFetching,
					l = (e) => e.deviceInfo.deviceInfo,
					c = (e) => e.deviceInfo.userDeviceInfo,
					d = {
						[n.igT]: (e) => ({ ...e, deviceInfoFetching: !0 }),
						[n.pdt]: s(!0),
						[n.KOQ]: s(!1),
						[n.hHv]: (e) => ({ ...e, removingDevice: !0 }),
						[n.yS6]: (e) => ({
							...e,
							removingDevice: !1,
							removeDeviceSuccess: !0,
							removeDeviceFail: !1,
						}),
						[n.NWp]: (e) => ({
							...e,
							removingDevice: !1,
							removeDeviceSuccess: !1,
							removeDeviceFail: !0,
						}),
						[n.uUY]: (e) => ({ ...e, userDeviceInfoFetching: !0 }),
						[n.IuD]: r(!0),
						[n.yq2]: r(!1),
					};
				function u(e = a, t = {}) {
					const i = d[t.type];
					return i ? i(e, t) : e;
				}
			},
			692583: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, _0: () => o, cc: () => r });
				var n = i(316550);
				const a = {
						deviceInfo: null,
						deviceInfoFetching: !1,
						deviceInfoSuccess: !1,
						deviceInfoFail: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						deviceInfo: e
							? i.data &&
								i.data.devices &&
								i.data.devices.length > 0 &&
								i.data.devices[0]
							: null,
						deviceInfoFetching: !1,
						deviceInfoSuccess: e,
						deviceInfoFail: !e,
					}),
					r = (e) => e.deviceInfoByPartNumber.deviceInfoFetching,
					o = (e) => e.deviceInfoByPartNumber.deviceInfo,
					l = {
						[n.SZj]: (e) => ({ ...e, deviceInfoFetching: !0 }),
						[n.rfH]: s(!0),
						[n.GzH]: s(!1),
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
			},
			284286: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, Dt: () => o, VA: () => l, Wq: () => c });
				var n = i(316550);
				const a = { deviceList: [], hasFetched: !1 },
					s = {
						[n.Zt0]: (e, t) => ({
							...e,
							deviceList: t.deviceList,
							hasFetched: !0,
						}),
						[n.w32]: (e, t) => e.deviceList,
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t) {
					return {
						type: n.zez,
						displayName: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				const l = (e) =>
						e.deviceList.deviceList ? e.deviceList.deviceList : null,
					c = (e) => (e.deviceList.hasFetched ? e.deviceList.hasFetched : null);
			},
			759202: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, FA: () => o, rM: () => c, zj: () => l });
				var n = i(316550);
				const a = {
						historicalDeviceList: null,
						isFetching: !1,
						success: !1,
						error: !1,
					},
					s = {
						[n.HV1]: (e) => ({ ...e, isFetching: !0 }),
						[n.myF]: (e, t) => ({
							historicalDeviceList: t.historicalDeviceList,
							isFetching: !1,
							success: !0,
							error: !1,
						}),
						[n.xMh]: (e) => ({ ...e, isFetching: !1, error: !0, success: !1 }),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return { type: n.gr9, meta: { cacheTime: e ? null : 12e4 } };
				}
				const l = (e) =>
						e.historicalDeviceList &&
						e.historicalDeviceList.historicalDeviceList
							? e.historicalDeviceList.historicalDeviceList
							: null,
					c = (e) => e.historicalDeviceList.isFetching;
			},
			181104: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => E,
					Du: () => y,
					Gm: () => m,
					HV: () => A,
					LK: () => g,
					W_: () => u,
					aZ: () => h,
					ah: () => r,
					bY: () => _,
					e1: () => d,
					k0: () => l,
					p5: () => o,
					rd: () => s,
					tf: () => p,
					vu: () => c,
				});
				var n = i(316550);
				const a = {
						primaryTrainingDevice: null,
						PrimaryTrainingDevices: {
							deviceWeights: [],
							primaryTrainingDeviceCount: 0,
						},
						RegisteredDevices: [],
						TrainingStatusOnlyDevices: { deviceWeights: [] },
						WearableDevices: { deviceWeights: [], wearableDeviceCount: 0 },
						fetchingPrimaryTrainingDevice: !1,
						fetchPrimaryTrainingDeviceSuccess: !1,
						fetchPrimaryTrainingDeviceFail: !1,
						updatingPrimaryTrainingDevice: !1,
						updatePrimaryTrainingDeviceSuccess: !1,
						updatePrimaryTrainingDeviceFail: !1,
						updatingPrimaryActivityTracker: !1,
						updatePrimaryActivityTrackerSuccess: !1,
						updatePrimaryActivityTrackerFail: !1,
					},
					s = (e) => e.primaryTrainingDevice.fetchingPrimaryTrainingDevice,
					r = (e) => e.primaryTrainingDevice.fetchPrimaryTrainingDeviceSuccess,
					o = (e) => e.primaryTrainingDevice.PrimaryTrainingDevice,
					l = (e) => {
						const t = e.primaryTrainingDevice.WearableDevices.deviceWeights;
						if ((null === t || void 0 === t ? void 0 : t.length) > 0) {
							return t.find((e) =>
								null === e || void 0 === e ? void 0 : e.primaryWearableDevice
							);
						}
					},
					c = (e) => {
						const t =
								e.primaryTrainingDevice.PrimaryTrainingDevices.deviceWeights,
							i = e.primaryTrainingDevice.PrimaryTrainingDevice;
						if (t && i) {
							return t.find((e) => e.deviceId === i.deviceId);
						}
					},
					d = (e) => e.primaryTrainingDevice.RegisteredDevices,
					u = (e) =>
						e.primaryTrainingDevice.PrimaryTrainingDevices.deviceWeights,
					p = (e) => e.primaryTrainingDevice.WearableDevices.deviceWeights,
					y = (e) => e.primaryTrainingDevice.updatingPrimaryTrainingDevice,
					h = (e) => e.primaryTrainingDevice.updatingPrimaryActivityTracker,
					g = (e) =>
						e.primaryTrainingDevice.PrimaryTrainingDevices
							.primaryTrainingDeviceCount > 1,
					m = (e) =>
						e.primaryTrainingDevice.WearableDevices.wearableDeviceCount > 1,
					A = (e) => g(e) || m(e),
					_ = (e) =>
						e.primaryTrainingDevice.TrainingStatusOnlyDevices.deviceWeights;
				function E(e = a, t = {}) {
					const i = I[t.type];
					return i ? i(e, t) : e;
				}
				const T = (e) => (t, i) => ({
						...t,
						...(e ? i.data : null),
						fetchingPrimaryTrainingDevice: !1,
						fetchPrimaryTrainingDeviceSuccess: e,
						fetchPrimaryTrainingDeviceFail: !e,
					}),
					C = (e) => (t, i) => ({
						...t,
						...(e ? { PrimaryTrainingDevice: { deviceId: i.deviceId } } : null),
						updatingPrimaryTrainingDevice: !1,
						updatePrimaryTrainingDeviceSuccess: e,
						updatePrimaryTrainingDeviceFail: !e,
					}),
					S = (e) => (t, i) => ({
						...t,
						...(e
							? {
									RegisteredDevices: t.RegisteredDevices.map((e) =>
										e.primaryActivityTrackerIndicator
											? { ...e, primaryActivityTrackerIndicator: !1 }
											: e.deviceId === i.deviceId
												? { ...e, primaryActivityTrackerIndicator: !0 }
												: e
									),
								}
							: null),
						...(e
							? {
									WearableDevices: {
										...t.WearableDevices,
										deviceWeights: t.WearableDevices.deviceWeights.map((e) =>
											e.primaryWearableDevice
												? { ...e, primaryWearableDevice: !1 }
												: e.deviceId === i.deviceId
													? { ...e, primaryWearableDevice: !0 }
													: e
										),
									},
								}
							: null),
						updatingPrimaryActivityTracker: !1,
						updatePrimaryActivityTrackerSuccess: e,
						updatePrimaryActivityTrackerFail: !e,
					}),
					I = {
						[n.dr7]: (e) => ({ ...e, fetchingPrimaryTrainingDevice: !0 }),
						[n.U1b]: T(!0),
						[n.bxW]: T(!1),
						[n.Oku]: (e) => ({ ...e, updatingPrimaryTrainingDevice: !0 }),
						[n.FpF]: C(!0),
						[n.S4_]: C(!1),
						[n.hzL]: (e) => ({ ...e, updatingPrimaryActivityTracker: !0 }),
						[n.od5]: S(!0),
						[n.twg]: S(!1),
						[n.yS6]: (e, t) => ({
							...e,
							RegisteredDevices: e.RegisteredDevices.filter(
								(e) => e.deviceId !== t.deviceId
							),
							WearableDevices: {
								...e.WearableDevices,
								deviceWeights: e.WearableDevices.deviceWeights.filter(
									(e) => e.deviceId !== t.deviceId
								),
								wearableDeviceCount: e.WearableDevices.deviceWeights.some(
									(e) => e.deviceId === t.deviceId
								)
									? e.WearableDevices.wearableDeviceCount - 1
									: e.WearableDevices.wearableDeviceCount,
							},
							PrimaryTrainingDevices: {
								...e.PrimaryTrainingDevices,
								deviceWeights: e.PrimaryTrainingDevices.deviceWeights.filter(
									(e) => e.deviceId !== t.deviceId
								),
								primaryTrainingDeviceCount:
									e.PrimaryTrainingDevices.deviceWeights.some(
										(e) => e.deviceId === t.deviceId
									)
										? e.PrimaryTrainingDevices.primaryTrainingDeviceCount - 1
										: e.PrimaryTrainingDevices.primaryTrainingDeviceCount,
							},
							TrainingStatusOnlyDevices: {
								...e.TrainingStatusOnlyDevices,
								deviceWeights: e.TrainingStatusOnlyDevices.deviceWeights.filter(
									(e) => e.deviceId !== t.deviceId
								),
							},
						}),
					};
			},
			47610: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					Fi: () => d,
					Fn: () => c,
					V6: () => o,
					dM: () => l,
				});
				var n = i(316550);
				const a = {
						registeredDeviceList: [],
						isFetching: !1,
						success: !1,
						error: !1,
					},
					s = {
						[n.loZ]: (e) => ({ ...e, isFetching: !0 }),
						[n.Inc]: (e, t) => ({
							registeredDeviceList: t.registeredDeviceList,
							isFetching: !1,
							success: !0,
							error: !1,
						}),
						[n.T3P]: (e) => ({ ...e, isFetching: !1, error: !0, success: !1 }),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return { type: n.Upd, meta: { cacheTime: e ? null : 12e4 } };
				}
				const l = (e) =>
						e.registeredDeviceList &&
						e.registeredDeviceList.registeredDeviceList
							? e.registeredDeviceList.registeredDeviceList
							: null,
					c = (e) => e.registeredDeviceList.isFetching,
					d = (e) => e.registeredDeviceList.success;
			},
			175149: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, bs: () => s, e1: () => a });
				var n = i(316550);
				const a = (e) => e.registeredDevices.entities,
					s = (e) =>
						e.registeredDevices.list.filter((e) => !!e.atpWorkoutCapable),
					r = (e = { isFetching: !1, entities: {}, list: [] }, t) => {
						switch (t.type) {
							case n.zwi:
								return { ...e, isFetching: !0 };
							case n.fSY:
								return {
									...e,
									isFetching: !1,
									entities: t.registeredDevices.reduce(
										(e, t) => ((e[t.deviceId] = t), e),
										{}
									),
									list: t.registeredDevices,
									lastUpdated: t.receivedAt,
								};
							default:
								return e;
						}
					};
			},
			377088: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, u: () => r });
				var n = i(316550);
				const a = { entity: null },
					s = { [n.ik0]: (e, t) => ({ entity: t.selectedDive }) },
					r = (e) => ({ entity: e.selectedDive });
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			869595: (e, t, i) => {
				'use strict';
				i.d(t, {
					$w: () => y,
					Ay: () => S,
					Bc: () => T,
					Rf: () => A,
					W3: () => _,
					ZK: () => c,
					dK: () => g,
					fw: () => p,
					gH: () => d,
					l4: () => u,
					mL: () => m,
					vm: () => E,
					yR: () => h,
				});
				var n = i(316550);
				const a = {
						ecgRecordings: null,
						ecgRecordingDetailsFetching: !1,
						ecgRecordingDetailsSuccess: !1,
						ecgRecordingDetailsFail: !1,
						ecgRecordingDetailsErrorType: null,
						ecgRelativeRecordingsFetching: !1,
						ecgRelativeRecordingsSuccess: !1,
						ecgRelativeRecordingsFail: !1,
						ecgRecordingDeleting: !1,
						ecgRecordingDeleteSuccess: !1,
						ecgRecordingDeleteFail: !1,
						ecgVideoTutorial: null,
						ecgVideoTutorialFetching: !1,
						ecgVideoTutorialSuccess: !1,
						ecgVideoTutorialFail: !1,
					},
					s = (e) => (t, i) => {
						const { summary: n, errorType: a } = i.data;
						if (!n && a)
							return {
								...t.ecgRecordings,
								ecgRecordingDetailsFetching: !1,
								ecgRecordingDetailsFail: !0,
								ecgRecordingDetailsErrorType: a,
							};
						const s = { ...t.ecgRecordings };
						return (
							s[n.detailId] || (s[n.detailId] = {}),
							(s[n.detailId] = e ? i.data : null),
							{
								...t,
								ecgRecordings: s,
								ecgRecordingDetailsFetching: !1,
								ecgRecordingDetailsSuccess: e,
								ecgRecordingDetailsFail: !e,
								ecgRecordingDetailsErrorType: !e && a ? a : null,
							}
						);
					},
					r = (e) => (t, i) => {
						const { detailId: n } = i.data,
							a = { ...t.ecgRecordings };
						return (
							a[n] || (a[n] = {}),
							(a[n] = e
								? { ...a[n], relativeRecordings: i.data.relativeRecordings }
								: a[n]),
							{
								...t,
								ecgRecordings: a,
								ecgRelativeRecordingsFetching: !1,
								ecgRelativeRecordingsSuccess: e,
								ecgRelativeRecordingsFail: !e,
							}
						);
					},
					o = (e) => (t, i) => {
						const n = i.payload;
						if (!t.ecgRecordings || !t.ecgRecordings[n]) return t;
						const a = { ...t.ecgRecordings };
						return (
							delete a[n],
							{
								...t,
								ecgRecordings: a,
								ecgRecordingDeleting: !1,
								ecgRecordingDeleteSuccess: e,
								ecgRecordingDeleteFail: !e,
							}
						);
					},
					l = (e) => (t, i) => ({
						...t,
						ecgVideoTutorial: i.data,
						ecgVideoTutorialFetching: !1,
						ecgVideoTutorialSuccess: e,
						ecgVideoTutorialFail: !e,
					}),
					c = (e) => e.ecgRecordingDetails.ecgRecordingDetailsFetching,
					d = (e) => e.ecgRecordingDetails.ecgRecordingDetailsSuccess,
					u = (e) => e.ecgRecordingDetails.ecgRecordingDetailsFail,
					p = (e, t) =>
						e.ecgRecordingDetails && e.ecgRecordingDetails.ecgRecordings
							? e.ecgRecordingDetails.ecgRecordings[t]
							: null,
					y = (e) => e.ecgRecordingDetails.ecgRecordingDetailsErrorType,
					h = (e) => e.ecgRecordingDetails.ecgRelativeRecordingsFetching,
					g = (e) => e.ecgRecordingDetails.ecgRelativeRecordingsSuccess,
					m = (e) => e.ecgRecordingDetails.ecgRelativeRecordingsFail,
					A = (e) => e.ecgRecordingDetails.ecgVideoTutorialFetching,
					_ = (e) => e.ecgRecordingDetails.ecgVideoTutorialSuccess,
					E = (e) => e.ecgRecordingDetails.ecgVideoTutorialFail,
					T = (e) =>
						e.ecgRecordingDetails && e.ecgRecordingDetails.ecgVideoTutorial
							? e.ecgRecordingDetails.ecgVideoTutorial
							: null,
					C = {
						[n.JvZ]: (e) => ({
							...e,
							ecgRecordingDetailsFetching: !0,
							ecgRecordingDetailsErrorType: null,
						}),
						[n.eiq]: s(!0),
						[n.zVA]: s(!1),
						[n.EbZ]: (e) => ({ ...e, ecgRelativeRecordingsFetching: !0 }),
						[n.Fhv]: r(!0),
						[n.YN3]: r(!1),
						[n.tH]: (e, t) => {
							const i = t.payload;
							return e.ecgRecordings && e.ecgRecordings[i]
								? { ...e, ecgRecordingDeleting: !0 }
								: e;
						},
						[n.A79]: o(!0),
						[n.hwF]: o(!1),
						[n.d7M]: (e) => ({ ...e, ecgVideoTutorialFetching: !0 }),
						[n.M7I]: l(!0),
						[n.VW1]: l(!1),
					};
				function S(e = a, t = {}) {
					const i = C[t.type];
					return i ? i(e, t) : e;
				}
			},
			70069: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => A,
					UR: () => c,
					ZE: () => h,
					dL: () => u,
					dP: () => y,
					df: () => p,
					hG: () => d,
					jb: () => l,
				});
				var n = i(316550),
					a = i(394188);
				const s = {
						ecgRecordingList: null,
						ecgRecordingListFetching: '',
						ecgRecordingListSuccess: !1,
						ecgRecordingListFail: !1,
						ecgRecordingListErrorType: null,
						nextToken: null,
						ecgRecordingDeleting: !1,
						ecgRecordingDeleteSuccess: !1,
						ecgRecordingDeleteFail: !1,
						filters: {
							symptoms: [],
							resultTypes: [],
							dates: { fromDate: '', toDate: '' },
						},
					},
					r = (e) => (t, i) => {
						const {
							content: n,
							next: a,
							errorType: s,
						} = i && i.data ? i.data : {};
						return {
							...t,
							ecgRecordingList: n || [],
							ecgRecordingListFetching: '',
							ecgRecordingListSuccess: e,
							ecgRecordingListFail: !e,
							ecgRecordingListErrorType: !e && s ? s : null,
							nextToken: a,
							ecgRecordingDeleting: !1,
							ecgRecordingDeleteSuccess: !1,
							ecgRecordingDeleteFail: !1,
						};
					},
					o = (e) => (t, i) => {
						const n = i.payload;
						if (!t.ecgRecordingList) return t;
						const a = t.ecgRecordingList.filter((e) => e.detailId !== n);
						return {
							...t,
							ecgRecordingList: a,
							ecgRecordingDeleting: !1,
							ecgRecordingDeleteSuccess: e,
							ecgRecordingDeleteFail: !e,
						};
					},
					l = (e) => e.ecgRecordingList.ecgRecordingListFetching,
					c = (e) => e.ecgRecordingList.ecgRecordingListSuccess,
					d = (e) => e.ecgRecordingList.ecgRecordingListFail,
					u = (e) => e.ecgRecordingList.ecgRecordingList,
					p = (e) => e.ecgRecordingList.ecgRecordingListErrorType,
					y = (e) => e.ecgRecordingList.nextToken,
					h = (e) => e.ecgRecordingList.filters,
					g = {
						[n.HHK]: (e, t) => ({
							...e,
							ecgRecordingListFetching: t.loadingType,
							ecgRecordingListSuccess: !1,
							ecgRecordingListFail: !1,
							ecgRecordingListErrorType: null,
						}),
						[n.oao]: r(!0),
						[n.PWE]: r(!1),
						[n.W8j]:
							((m = !0),
							(e, t) => {
								const {
									content: i,
									next: n,
									errorType: a,
								} = t && t.data ? t.data : {};
								let s = [];
								return (
									(s =
										e.ecgRecordingList && e.ecgRecordingList.length > 0
											? m
												? e.ecgRecordingList.concat(i)
												: e.ecgRecordingList || []
											: m
												? i
												: []),
									{
										...e,
										ecgRecordingList: s,
										ecgRecordingListFetching: '',
										ecgRecordingListSuccess: m,
										ecgRecordingListFail: !m,
										ecgRecordingListErrorType: !m && a ? a : null,
										nextToken: n,
									}
								);
							}),
						[n.tH]: (e, t) => {
							const i = t.payload;
							return e.ecgRecordings && e.ecgRecordings[i]
								? { ...e, ecgRecordingDeleting: !0 }
								: e;
						},
						[n.A79]: o(!0),
						[n.hwF]: o(!1),
						[n.pPb]: (e, t) => {
							const { filterType: i, filterValue: n } = t.payload,
								r = (0, a.fb)(e.filters, i, n);
							return { ...e, filters: r, nextToken: s.nextToken };
						},
						[n.l1d]: (e) => ({
							...e,
							filters: { ...s.filters },
							nextToken: s.nextToken,
						}),
					};
				var m;
				function A(e = s, t = {}) {
					const i = g[t.type];
					return i ? i(e, t) : e;
				}
			},
			888939: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					BT: () => h,
					E1: () => u,
					Hc: () => l,
					gR: () => c,
					j8: () => y,
					mK: () => d,
					zY: () => p,
				});
				var n = i(316550);
				const a = {
						emailNotifications: {},
						emailNotificationsFetching: !1,
						emailNotificationsFetchSuccess: !1,
						emailNotificationsFetchFail: !1,
						emailNotificationsUpdating: !1,
						emailNotificationsUpdateFail: !1,
						emailNotificationsUpdateSuccess: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						emailNotifications: e ? i.emailNotifications : t.emailNotifications,
						emailNotificationsFetching: !1,
						emailNotificationsFetchSuccess: e,
						emailNotificationsFetchFail: !e,
					}),
					r = {
						[n.Q$A]: (e) => ({
							...e,
							emailNotificationsFetching: !0,
							emailNotificationsFetchSuccess: !1,
							emailNotificationsFetchFail: !1,
						}),
						[n.L03]: s(!0),
						[n.Q9P]: s(!1),
						[n.Dmj]: (e) => ({
							...e,
							emailNotificationsUpdating: !0,
							emailNotificationsUpdateFail: !1,
							emailNotificationsUpdateSuccess: !1,
						}),
						[n.YDL]: (e, t) => ({
							...e,
							emailNotifications: {
								...e.emailNotifications,
								...t.updatedEmailNotifications,
							},
							emailNotificationsUpdating: !1,
							emailNotificationsUpdateFail: !1,
							emailNotificationsUpdateSuccess: !0,
						}),
						[n.HHh]: (e) => ({
							...e,
							emailNotificationsUpdating: !1,
							emailNotificationsUpdateFail: !0,
						}),
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				const l = (e) => e.emailNotification.emailNotifications,
					c = (e) => e.emailNotification.emailNotificationsFetching,
					d = (e) => e.emailNotification.emailNotificationsUpdateFail,
					u = (e) => e.emailNotification.emailNotificationsUpdateSuccess,
					p = (e) =>
						!e.emailNotification.emailNotificationsFetching &&
						(e.emailNotification.emailNotificationsFetchFail ||
							e.emailNotification.emailNotificationsFetchSuccess);
				function y() {
					return { type: n.xBd };
				}
				function h(e) {
					return { type: n.Gmq, updatedEmailNotifications: e };
				}
			},
			73304: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					H4: () => c,
					ZV: () => d,
					fQ: () => u,
					kS: () => p,
					nk: () => l,
				});
				var n = i(316550),
					a = i(576797);
				const s = {
						data: null,
						epochDataReloadFetching: !1,
						epochDataReloadFail: !1,
					},
					r = {
						[n.jph]: (e, t) => ({
							...e,
							epochDataReloadFetching: !0,
							epochDataReloadFail: !1,
						}),
						[n.g9h]: (e, t) => (
							y(t.data.status),
							{
								data: { ...e.data, [t.calendarDate]: { ...t.data } },
								epochDataReloadFetching: !1,
								epochDataReloadFail: !1,
							}
						),
						[n.ZqM]: (e, t) => ({
							data: { ...e.data, [t.calendarDate]: {} },
							epochDataReloadFetching: !1,
							epochDataReloadFail: !0,
						}),
					};
				function o(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t, i) {
					return {
						calendarDate: e,
						deviceId: t,
						type: n.Ujl,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				const c = (e, t) =>
						e.epochDataReload.data && e.epochDataReload.data[t]
							? e.epochDataReload.data[t].status
							: null,
					d = (e, t) =>
						e.epochDataReload.data && e.epochDataReload.data[t]
							? e.epochDataReload.data[t].deviceList
							: null,
					u = (e) => e.epochDataReload.epochDataReloadFetching,
					p = (e) => e.epochDataReload.epochDataReloadFail,
					y = (e) => {
						a.A.push({
							event: 'track_event',
							category: 'Epoch Data Reloading',
							action: 'Reload status from the API',
							label: e,
						});
					};
			},
			995264: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, IX: () => r });
				var n = i(316550);
				const a = {
						exerciseEquipments: {},
						exerciseEquipmentsFetching: !1,
						exerciseEquipmentsSucces: !1,
						exerciseEquipmentsFail: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						exerciseEquipments: e ? i.exerciseEquimentsData : {},
						exerciseEquipmentsFetching: !1,
						exerciseEquipmentsSucces: e,
						exerciseEquipmentsFail: !e,
					}),
					r = (e) => e.exerciseEquipments.exerciseEquipments,
					o = {
						[n.H_v]: (e) => ({ ...e, exerciseEquipmentsFetching: !0 }),
						[n.oC0]: s(!0),
						[n.DwB]: s(!1),
					};
				function l(e = a, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
			},
			176600: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => p, HD: () => d, Yn: () => l, iX: () => c });
				var n = i(44222),
					a = i(316550),
					s = i(655984);
				const r = {
						exerciseTypes: {},
						flattenedExerciseTypes: {},
						exerciseTypesFetching: !1,
						exerciseTypesSucces: !1,
						exerciseTypesFail: !1,
					},
					o = (e) => (t, i) => ({
						...t,
						exerciseTypes: e ? i.exerciseTypesData : {},
						flattenedExerciseTypes: e
							? {
									...t.flattenedExerciseTypes,
									[i.sportType]: (0, s.oD)(i.exerciseTypesData, i.fullLocale),
								}
							: t.flattenedExerciseTypes,
						exerciseTypesFetching: !1,
						exerciseTypesSucces: e,
						exerciseTypesFail: !e,
					}),
					l = (e) => e.exerciseTypes.exerciseTypesFetching,
					c = (e) => {
						var t, i;
						return null !==
							(t =
								null ===
									(i =
										e.exerciseTypes.flattenedExerciseTypes[
											n.yT.Strength_Training
										]) || void 0 === i
									? void 0
									: i.filter((e) => !e.isBodyWeight)) && void 0 !== t
							? t
							: [];
					},
					d = (e, t = n.yT.Strength_Training) => {
						var i;
						return null !== (i = e.exerciseTypes.flattenedExerciseTypes[t]) &&
							void 0 !== i
							? i
							: [];
					},
					u = {
						[a.zj9]: (e) => ({ ...e, exerciseTypesFetching: !0 }),
						[a.GG2]: o(!0),
						[a.LdV]: o(!1),
					};
				function p(e = r, t = {}) {
					const i = u[t.type];
					return i ? i(e, t) : e;
				}
			},
			874317: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, x: () => r });
				var n = i(316550);
				const a = { isFetching: !1 },
					s = {
						[n.SOJ]: (e) => ({ ...e, isFetching: !0 }),
						[n.gSB]: (e, t) => ({
							...e,
							[t.exerciseData.categoryKey + '.' + t.exerciseData.exerciseKey]:
								t.exerciseData,
							isFetching: !1,
						}),
					},
					r = (e) => e.exerciseData;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			954712: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => p,
					C$: () => c,
					EQ: () => o,
					fh: () => l,
					k7: () => d,
				});
				var n = i(316550),
					a = i(34523);
				const s = {
						fitnessAgeData: null,
						fitnessAgeDataFetching: !1,
						fitnessAgeDataSuccess: !1,
						fitnessAgeDataFail: !1,
					},
					r = (e) => (t, i) => {
						const n = (0, a.kf)(i.fitnessAgeData);
						return {
							...t,
							fitnessAgeData: e ? n : null,
							fitnessAgeDataFetching: !1,
							fitnessAgeDataSuccess: e,
							fitnessAgeDataFail: !e,
						};
					},
					o = (e) => e.fitnessAge.fitnessAgeDataFetching,
					l = (e) => e.fitnessAge.fitnessAgeDataSuccess,
					c = (e) => e.fitnessAge.fitnessAgeDataFail,
					d = (e) => e.fitnessAge.fitnessAgeData,
					u = {
						[n.ej7]: (e) => ({ ...e, fitnessAgeDataFetching: !0 }),
						[n.RyL]: r(!0),
						[n.Sv9]: r(!1),
					};
				function p(e = s, t = {}) {
					const i = u[t.type];
					return i ? i(e, t) : e;
				}
			},
			315808: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					IM: () => c,
					pX: () => o,
					px: () => d,
					qO: () => l,
				});
				var n = i(316550);
				const a = {
					floorsData: {},
					floorsDataFetching: !1,
					floorsDataFetchFail: !1,
				};
				const s = {
					[n.Gg7]: function (e, t) {
						return {
							floorsData: {
								...e.floorsData,
								[t.displayName]: {
									...e.floorsData[t.displayName],
									[t.calendarDate]: t.data,
								},
							},
							floorsDataFetching: !1,
							floorsDataFetchFail: !1,
						};
					},
					[n.dyk]: function (e, t) {
						return {
							floorsData: {
								...e.floorsData,
								[t.displayName]: {
									...e.floorsData[t.displayName],
									[t.calendarDate]: [],
								},
							},
							floorsDataFetchFail: !0,
							floorsDataFetching: !1,
						};
					},
					[n.ZaM]: function (e, t) {
						return { ...e, floorsDataFetching: !0 };
					},
				};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i) {
					return {
						type: n.Goe,
						calendarDate: t,
						displayName: e,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				function l(e) {
					return e.floorsData.floorsDataFetchFail;
				}
				function c(e) {
					return e.floorsData.floorsDataFetching;
				}
				function d(e, t, i) {
					return e.floorsData.floorsData[t]
						? e.floorsData.floorsData[t][i]
						: null;
				}
			},
			510548: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => l,
					ar: () => p,
					dq: () => d,
					iG: () => u,
					oM: () => c,
					yo: () => y,
				});
				var n = i(316550);
				const a = {
					floorsReportData: [],
					floorsReportDataFetching: !1,
					floorsReportDataFetchFail: !1,
					floorsOneYearData: [],
				};
				function s(e, t) {
					return {
						...e,
						floorsReportDataFetching: !1,
						floorsReportDataFetchFail: !0,
					};
				}
				function r(e, t) {
					return { ...e, floorsReportDataFetching: !0 };
				}
				const o = {
					[n.Ai6]: function (e, t) {
						return {
							floorsReportData: t.data,
							floorsReportDataFetching: !1,
							floorsReportDataFetchFail: !1,
						};
					},
					[n.VLF]: s,
					[n.beK]: r,
					[n.ggo]: r,
					[n.KXX]: s,
					[n.F6R]: function (e, t) {
						return {
							...e,
							floorsOneYearData: t.data,
							floorsReportDataFetching: !1,
							floorsReportDataFetchFail: !1,
						};
					},
				};
				function l(e = a, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
				function c(e, t) {
					return { type: n.Iuq, startDate: e, endDate: t };
				}
				function d(e, t) {
					return { type: n.Jce, endDate: e, numWeeks: t };
				}
				function u(e) {
					return e.floorsReportData.floorsReportDataFetching;
				}
				function p(e) {
					return e.floorsReportData.floorsReportData;
				}
				function y(e) {
					return e.floorsReportData.floorsOneYearData;
				}
			},
			775828: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, eO: () => s, i4: () => l });
				var n = i(316550);
				const a = { ftp: [], hasWeight: !0, isFetching: !1 },
					s = (e) => e.ftp.isFetching,
					r = {
						[n.zbY]: (e) => ({ ...e, isFetching: !0 }),
						[n.JE]: (e) => ({ ...e, isFetching: !1 }),
						[n.s9q]: (e, { powerToWeight: t }) => ({
							...e,
							hasWeight:
								Array.isArray(t) &&
								((t[0] && t[0].weight) || (t[1] && t[1].weight)),
							ftp: Array.isArray(t) ? t : [],
							isFetching: !1,
						}),
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				const l = (e) => ({ type: n.U3t, payload: e });
			},
			50467: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, Z$: () => r, rT: () => s });
				var n = i(316550);
				const a = {
						ftpData: [],
						isFTPFetching: !1,
						powerToWeightData: [],
						isPowerToWeightFetching: !1,
						powerToWeightFilter: 'ftp',
						selectedSports: i(818591).Qc,
					},
					s = (e) => e && e.ftpRange && e.ftpRange.isFTPFetching,
					r = (e) => e && e.ftpRange && e.ftpRange.isPowerToWeightFetching,
					o = {
						[n.BJj]: (e) => ({ ...e, isFTPFetching: !0 }),
						[n.fDb]: (e) => ({ ...e, isPowerToWeightFetching: !0 }),
						[n.Zz5]: (e) => ({ ...e, isFTPFetching: !1 }),
						[n.D5I]: (e) => ({ ...e, isPowerToWeightFetching: !1 }),
						[n.wSH]: (e, { data: t }) => ({
							...e,
							ftpData: Array.isArray(t) ? t : [],
							isFTPFetching: !1,
						}),
						[n.QVw]: (e, { data: t }) => ({
							...e,
							powerToWeightData: Array.isArray(t) ? t : [],
							isPowerToWeightFetching: !1,
						}),
						[n.AbA]: (e, { payload: { sportFilter: t } }) => ({
							...e,
							selectedSports: t,
						}),
						[n.JAq]: (e, { payload: { filter: t } }) => ({
							...e,
							powerToWeightFilter: t,
						}),
					};
				function l(e = a, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
			},
			826352: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					BC: () => _,
					D_: () => d,
					FB: () => o,
					FN: () => m,
					GG: () => h,
					GI: () => c,
					GY: () => p,
					Tz: () => A,
					Vu: () => u,
					Z6: () => g,
					m1: () => y,
					xY: () => l,
				});
				var n = i(316550);
				const a = {
						dashboardConfigData: null,
						isDashboardConfigFetching: !1,
						didDashboardConfigFail: !1,
						availablePrimaryStats: null,
						isAvailablePrimaryStatsFetching: !1,
						didAvailablePrimaryStatsFail: !1,
						secondaryStats: null,
						isSecondaryStatsFetching: !1,
						didSecondaryStatsFail: !1,
						isDashboardConfigUpdating: !1,
						didDashboardConfigUpdateFail: !1,
						updateDashboardSuccess: !1,
						dashboardConfigSaving: !1,
						dashboardConfigSavingFail: !1,
						dashboardConfigSavingSuccess: !1,
					},
					s = {
						[n.KMo]: (e) => ({
							...e,
							isDashboardConfigFetching: !0,
							didDashboardConfigFail: !1,
						}),
						[n.RX6]: (e, t) => ({
							...e,
							dashboardConfigData: t.data,
							isDashboardConfigFetching: !1,
							didDashboardConfigFail: !1,
						}),
						[n.obt]: (e, t) => ({
							...e,
							dashboardConfigData: t.data,
							isDashboardConfigFetching: !1,
							didDashboardConfigFail: !0,
						}),
						[n.HyF]: (e) => ({
							...e,
							isAvailablePrimaryStatsFetching: !0,
							didAvailablePrimaryStatsFail: !1,
						}),
						[n.kK2]: (e, t) => ({
							...e,
							availablePrimaryStats: t.data,
							isAvailablePrimaryStatsFetching: !1,
							didAvailablePrimaryStatsFail: !1,
						}),
						[n.Vr$]: (e, t) => ({
							...e,
							availablePrimaryStats: t.data,
							isAvailablePrimaryStatsFetching: !1,
							didAvailablePrimaryStatsFail: !0,
						}),
						[n.rQr]: (e) => ({
							...e,
							isSecondaryStatsFetching: !0,
							didSecondaryStatsFail: !1,
						}),
						[n.AU_]: (e, t) => ({
							...e,
							secondaryStats: t.data,
							isSecondaryStatsFetching: !1,
							didSecondaryStatsFail: !1,
						}),
						[n.zO9]: (e, t) => ({
							...e,
							secondaryStats: t.data,
							isSecondaryStatsFetching: !1,
							didSecondaryStatsFail: !0,
						}),
						[n.U6J]: (e) => ({
							...e,
							isDashboardConfigUpdating: !0,
							didDashboardConfigUpdateFail: !1,
							updateDashboardSuccess: !1,
						}),
						[n.HI5]: (e, t) => ({
							...e,
							dashboardConfigData: t.data,
							isDashboardConfigUpdating: !1,
							didDashboardConfigUpdateFail: !1,
							updateDashboardSuccess: !0,
						}),
						[n.EhE]: (e, t) => ({
							...e,
							dashboardConfigData: t.data,
							isDashboardConfigUpdating: !1,
							didDashboardConfigUpdateFail: !0,
						}),
						[n.Pvm]: (e) => ({
							...e,
							dashboardConfigSaving: !0,
							dashboardConfigSavingFail: !1,
							dashboardConfigSavingSuccess: !1,
						}),
						[n.AY8]: (e, t) => ({
							...e,
							dashboardConfigSaving: !1,
							dashboardConfigSavingFail: !1,
							dashboardConfigSavingSuccess: !0,
						}),
						[n.FBA]: (e, t) => ({
							...e,
							dashboardConfigSaving: !1,
							dashboardConfigSavingFail: !0,
							dashboardConfigSavingSuccess: !1,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				const o = (e) =>
						e.dashboardConfig ? e.dashboardConfig.dashboardConfigData : null,
					l = (e) =>
						e.dashboardConfig
							? e.dashboardConfig.isDashboardConfigFetching
							: null,
					c = (e) =>
						e.dashboardConfig ? e.dashboardConfig.didDashboardConfigFail : null,
					d = (e) => {
						var t;
						return (
							(null === (t = e.dashboardConfig) || void 0 === t
								? void 0
								: t.availablePrimaryStats) || null
						);
					},
					u = (e) => {
						var t;
						return (
							(null === (t = e.dashboardConfig) || void 0 === t
								? void 0
								: t.isAvailablePrimaryStatsFetching) || !1
						);
					},
					p = (e) => {
						var t;
						return (
							(null === (t = e.dashboardConfig) || void 0 === t
								? void 0
								: t.didAvailablePrimaryStatsFail) || !1
						);
					},
					y = (e) => {
						var t;
						return (
							(null === (t = e.dashboardConfig) || void 0 === t
								? void 0
								: t.secondaryStats) || null
						);
					},
					h = (e) => {
						var t;
						return (
							(null === (t = e.dashboardConfig) || void 0 === t
								? void 0
								: t.isSecondaryStatsFetching) || !1
						);
					},
					g = (e) => {
						var t;
						return (
							(null === (t = e.dashboardConfig) || void 0 === t
								? void 0
								: t.didSecondaryStatsFail) || !1
						);
					},
					m = (e) => {
						var t;
						return (
							(null === (t = e.dashboardConfig) || void 0 === t
								? void 0
								: t.isDashboardConfigUpdating) || !1
						);
					},
					A = (e) => {
						var t;
						return (
							(null === (t = e.dashboardConfig) || void 0 === t
								? void 0
								: t.didDashboardConfigUpdateFail) || !1
						);
					},
					_ = (e) => {
						var t;
						return null === (t = e.dashboardConfig) || void 0 === t
							? void 0
							: t.updateDashboardSuccess;
					};
			},
			176895: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, C: () => d, Fz: () => l, xZ: () => c });
				var n = i(316550);
				const a = {
						isFetching: !1,
						consentTexts: {},
						gdprGetConsentTextSuccess: !0,
					},
					s = (e) => (t, i) => ({
						isFetching: !1,
						consentTexts: { ...t.consentTexts, [i.key]: i.consentText },
						gdprGetConsentTextSuccess: e,
					}),
					r = { [n.mPY]: s(!0), [n.Det]: s(!1) };
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t, i) {
					return {
						type: n.u9q,
						key: e,
						locale: t,
						isFetching: !0,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				const c = (e, t) => e.gdprConsentText.consentTexts[t],
					d = (e) => e.gdprConsentText.gdprGetConsentTextSuccess;
			},
			756992: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, Ih: () => l, Vb: () => o });
				var n = i(316550);
				const a = { displayGdprLimitedFeatureAlert: !0 },
					s = {
						[n.rBs]: (e, t) => ({ displayGdprLimitedFeatureAlert: t.display }),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return { type: n.rBs, display: e };
				}
				const l = (e) =>
					e.gdprDisplayLimitedFeatureAlert.displayGdprLimitedFeatureAlert;
			},
			83984: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					JK: () => c,
					K8: () => p,
					ST: () => d,
					jC: () => y,
					s9: () => l,
					z2: () => u,
				});
				var n = i(316550);
				const a = { isFetching: !1, features: {}, gdprGetFeatureSuccess: null },
					s = (e) => (t, i) => {
						let n = { ...t.features };
						return (
							(n[i.key] = i.feature),
							{ isFetching: !1, features: n, gdprGetFeatureSuccess: e }
						);
					},
					r = {
						[n.KMI]: s(!0),
						[n.JQc]: s(!1),
						[n.mst]: (e, t) => {
							let i = { ...e.features };
							return (i[t.key] = null), { ...e, features: i };
						},
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e) {
					return { type: n.otu, key: e, isFetching: !0 };
				}
				function c(e) {
					return { type: n.mst, key: e };
				}
				const d = (e) => ({ type: n.MxI, key: e }),
					u = (e) => ({ type: n.z5Y, key: e }),
					p = (e, t) => e.gdprFeature.features[t],
					y = (e) => e.gdprFeature.gdprGetFeatureSuccess;
			},
			535684: (e, t, i) => {
				'use strict';
				i.d(t, { Ag: () => c, Ay: () => o, KL: () => l, n: () => d });
				var n = i(316550);
				const a = { isFetching: !1, grantConsent: {}, grantConsentState: !0 },
					s = (e) => (t, i) => ({
						isFetching: !1,
						grantConsent: { ...t.grantConsent, [i.key]: i.grantConsent },
						grantConsentState: e,
					}),
					r = { [n.JoU]: s(!0), [n.KFJ]: s(!1), [n.Y5X]: () => ({ ...a }) };
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t, i, a) {
					return {
						type: n.ta5,
						key: e,
						locale: t,
						consentVersion: i,
						featureKey: a,
						isFetching: !0,
					};
				}
				const c = (e, t) => e.gdprGrantConsent.grantConsent[t],
					d = (e) => e.gdprGrantConsent.grantConsentState;
			},
			144918: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, Hs: () => d, iH: () => c, sW: () => l });
				var n = i(316550);
				const a = {
						isFetching: !1,
						revokeConsents: {},
						revokeConsentSuccess: !0,
					},
					s = (e) => (t, i) => ({
						isFetching: !1,
						revokeConsents: { ...t.revokeConsents, [i.key]: i.revokeConsent },
						revokeConsentSuccess: e,
					}),
					r = { [n.ZMG]: s(!0), [n.oaP]: s(!1) };
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t, i, a, s) {
					return {
						type: n.jpz,
						key: e,
						locale: t,
						consentVersion: i,
						clientIndicator: a,
						passwordChallengeToken: s,
						isFetching: !0,
					};
				}
				const c = (e, t) => e.gdprRevokeConsent.revokeConsents[t],
					d = (e) => e.gdprRevokeConsent.revokeConsentSuccess;
			},
			784648: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, g: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entities: {} },
					s = {
						[n.Afm]: (e) => ({ ...e, isFetching: !0 }),
						[n.A9]: (e, t) => ({
							...e,
							entities: { ...e.entities, [t.displayName]: t.gear },
							isFetching: !1,
							lastUpdated: t.receivedAt,
						}),
						[n.MIS]: () => a,
					},
					r = (e) => e.gear.entities;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			932480: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, NQ: () => r });
				var n = i(316550);
				const a = {
						gearsData: [],
						gearsFetchSuccess: !1,
						gearsFetchingFail: !1,
						gearsFetching: !1,
					},
					s = {
						[n.k3K]: (e, t) => ({
							...e,
							gearsData: { ...t },
							gearsFetchSuccess: !0,
							gearsFetchingFail: !1,
							gearsFetching: !1,
						}),
						[n.nzh]: (e, t) => ({
							...e,
							gearsActivitiesFetchSuccess: !1,
							gearsActivitiesFetchingFail: !0,
						}),
						[n.noR]: (e, t) => ({
							...e,
							gearsFetchSuccess: !1,
							gearsFetching: !0,
						}),
					},
					r = (e) => (e.gears ? e.gears : []);
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			309103: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => p,
					DX: () => o,
					Ib: () => c,
					Mc: () => u,
					Vk: () => d,
					m7: () => l,
				});
				var n = i(316550);
				const a = {
						isFetching: !1,
						lastDeletedGoal: null,
						updatingGoal: !1,
						updateGoalSuccess: !1,
						updateGoalFail: !1,
						creatingGoal: !1,
						createGoalSuccess: !1,
						createGoalFail: !1,
						entity: [],
						allGoals: {},
						hasMorePastGoals: !1,
					},
					s = (e, t = [], i) => {
						var n;
						let a =
								(null === (n = e.allGoals) || void 0 === n ? void 0 : n[i]) ||
								[],
							s = [];
						return (
							a.forEach((e) => {
								t.find((t) => t.id === e.id) || s.push(e);
							}),
							(s = [...s, ...t]),
							s
						);
					},
					r = {
						[n.rZK]: (e) => ({ ...e, isFetching: !0 }),
						[n.bZH]: (e, t) => ({
							...e,
							entity: t.goals,
							allGoals: {
								[t.status]: t.replace ? t.goals : s(e, t.goals, t.status),
							},
							hasMorePastGoals: t.goals.length === t.limit,
							isFetching: !1,
							lastUpdated: t.receivedAt,
						}),
						[n.L9q]: (e, t) => ({
							...e,
							allGoals: t.goals,
							hasMorePastGoals: t.goals.past.length === t.limit,
							isFetching: !1,
							lastUpdated: t.receivedAt,
						}),
						[n.OK$]: (e, t) => ({ ...e, lastDeletedGoal: t.goalId }),
						[n.Y3S]: (e) => ({
							...e,
							creatingGoal: !0,
							createGoalSuccess: !1,
							createGoalFail: !1,
						}),
						[n.dAD]: (e) => ({
							...e,
							creatingGoal: !1,
							createGoalSuccess: !0,
							createGoalFail: !1,
						}),
						[n.wOg]: (e) => ({
							...e,
							creatingGoal: !1,
							createGoalSuccess: !1,
							createGoalFail: !0,
						}),
						[n.RPB]: (e) => ({
							...e,
							updatingGoal: !0,
							updateGoalSuccess: !1,
							updateGoalFail: !1,
						}),
						[n.IgD]: (e) => ({
							...e,
							updatingGoal: !1,
							updateGoalSuccess: !0,
							updateGoalFail: !1,
						}),
						[n.T2z]: (e) => ({
							...e,
							updatingGoal: !1,
							updateGoalSuccess: !1,
							updateGoalFail: !0,
						}),
					},
					o = (e, t) => (t ? e.allGoals[t] : e.goals.entity),
					l = (e) => e.goals.allGoals,
					c = (e) => e.goals.updatingGoal,
					d = (e) => e.goals.creatingGoal,
					u = (e) => e.goals.hasMorePastGoals;
				function p(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			2238: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, Bp: () => o, TL: () => c, VF: () => l });
				var n = i(233544);
				const a = { goals: {}, isFetching: {}, didFetchFail: !1 },
					s = {
						[n.X4]: (e, t) => ({
							goals: { ...e.goals },
							isFetching: { [t.userGoalType]: !0 },
							didFetchFail: { [t.userGoalType]: !1 },
						}),
						[n.ne]: (e, t) => ({
							goals: { ...e.goals, [t.userGoalType]: t.data },
							isFetching: { [t.userGoalType]: !1 },
							didFetchFail: { [t.userGoalType]: !1 },
						}),
						[n.ID]: (e, t) => (
							delete e.goals[t.userGoalType],
							{
								goals: { ...e.goals },
								isFetching: { [t.userGoalType]: !1 },
								didFetchFail: { [t.userGoalType]: !0 },
							}
						),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i) {
					return {
						type: n.X4,
						trackingPeriodType: t,
						userGoalType: e,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				const l = (e, t) => e.wellnessGoal.goals[t],
					c = (e, t) => e.wellnessGoal.isFetching[t];
			},
			556551: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, GP: () => d, LY: () => c, Lf: () => l });
				var n = i(316550),
					a = i(82628);
				const s = {
						isFetching: !1,
						payload: {},
						filteredPayload: {},
						gdprSafePayload: {},
						gdprSafeFilteredPayload: {},
						allClubIds: [],
						clubIdsSelected: [],
						areClubIdsSaved: !0,
					},
					r = {
						[n.$vs]: (e, t) => {
							let i = new Set();
							return (
								t.approachGolfStats.shotOrientationDetail &&
									t.approachGolfStats.shotOrientationDetail.forEach(
										(e) => !i.has(e.clubId) && (i.add(e.clubId), !0)
									),
								{
									isFetching: !1,
									payload: t.approachGolfStats,
									gdprSafePayload: u(t.approachGolfStats),
									filteredPayload: t.approachGolfStats,
									gdprSafeFilteredPayload: u(t.approachGolfStats),
									allClubIds: [...i],
									clubIdsSelected: [],
									areClubIdsSaved: !0,
								}
							);
						},
						[n.ywP]: (e, t) =>
							t.areClubIdsSaved
								? { ...e, clubIdsSelected: t.clubIdsSelected || [] }
								: { ...e, unsavedIdsSelected: t.clubIdsSelected || [] },
						[n.zJe]: (e, t) => ({
							...e,
							filteredPayload: t.approachGolfStats,
							gdprSafeFilteredPayload: u(t.approachGolfStats),
						}),
					};
				function o(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l() {
					return { type: n.LZf, isFetching: !0 };
				}
				function c(e) {
					return { type: n.pWW, isFetching: !0, clubIds: e };
				}
				const d = (e) => e.approachGolfStats,
					u = (e) => {
						const t = e.shotOrientationDetail
							? e.shotOrientationDetail.map((e) => ({
									shotId: e.shotId,
									holeNumber: e.holeNumber,
									clubId: e.clubId,
									endingLieType: e.endingLieType,
									offsetAngle: e.offsetAngle,
									remainingDistance: e.remainingDistance,
									startingDistanceToHole: e.startingDistanceToHole,
									startingLieType: e.startingLieType,
									strokesGained: e.strokesGained,
								}))
							: void 0;
						let i = !1;
						return (
							(((0, a.kZ)(e.percentHitGreen10) ||
								(0, a.b0)(e.percentHitGreen10)) &&
								((0, a.kZ)(e.percentHitGreen20) ||
									(0, a.b0)(e.percentHitGreen20)) &&
								((0, a.kZ)(e.percentHitGreen20Plus) ||
									(0, a.b0)(e.percentHitGreen20Plus))) ||
								(i = !0),
							{
								usingClubtrack: i,
								usingClubTrack: i,
								percentHitGreen: e.percentHitGreen,
								percentHitGreen10: e.percentHitGreen10,
								percentHitGreen20: e.percentHitGreen20,
								percentHitGreen20Plus: e.percentHitGreen20Plus,
								percentLeftOfGreen: e.percentLeftOfGreen,
								percentLongOfGreen: e.percentLongOfGreen,
								percentMissedGreen: e.percentMissedGreen,
								percentRightOfGreen: e.percentRightOfGreen,
								percentShortOfGreen: e.percentShortOfGreen,
								shotOrientationDetail: t,
							}
						);
					};
			},
			505769: (e, t, i) => {
				'use strict';
				i.d(t, { $L: () => l, Ay: () => r, Yf: () => c, rU: () => o });
				var n = i(316550);
				const a = {
						isFetching: !1,
						payload: {},
						filteredPayload: {},
						gdprSafePayload: {},
						gdprSafeFilteredPayload: {},
						allClubIds: [],
						clubIdsSelected: [],
						areClubIdsSaved: !0,
					},
					s = {
						[n.fiT]: (e, t) => {
							let i = new Set();
							return (
								t.chipGolfStats.shotOrientationDetail &&
									t.chipGolfStats.shotOrientationDetail.forEach(
										(e) => !i.has(e.clubId) && (i.add(e.clubId), !0)
									),
								{
									isFetching: !1,
									payload: t.chipGolfStats,
									gdprSafePayload: d(t.chipGolfStats),
									filteredPayload: t.chipGolfStats,
									gdprSafeFilteredPayload: d(t.chipGolfStats),
									allClubIds: [...i],
									clubIdsSelected: [],
									areClubIdsSaved: !0,
								}
							);
						},
						[n.s6R]: (e, t) =>
							t.areClubIdsSaved
								? { ...e, clubIdsSelected: t.clubIdsSelected || [] }
								: { ...e, unsavedIdsSelected: t.clubIdsSelected || [] },
						[n.jgz]: (e, t) => ({
							...e,
							filteredPayload: t.chipGolfStats,
							gdprSafeFilteredPayload: d(t.chipGolfStats),
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o() {
					return { type: n.N$y, isFetching: !0 };
				}
				function l(e) {
					return { type: n.lff, isFetching: !0, clubIds: e };
				}
				const c = (e) => e.chipGolfStats,
					d = (e) => {
						const t = e.shotOrientationDetail
							? e.shotOrientationDetail.map((e) => ({
									shotId: e.shotId,
									holeNumber: e.holeNumber,
									clubId: e.clubId,
									endingLieType: e.endingLieType,
									offsetAngle: e.offsetAngle,
									onePuttAfter: e.onePuttAfter,
									remainingDistance: e.remainingDistance,
									startingDistanceToHole: e.startingDistanceToHole,
									startingLieType: e.startingLieType,
									strokesGained: e.strokesGained,
								}))
							: [];
						return {
							usingClubtrack: e.usingClubtrack,
							percentHitGreen: e.percentHitGreen,
							percentHitGreen10: e.percentHitGreen10,
							percentHitGreen20: e.percentHitGreen20,
							percentHitGreen20Plus: e.percentHitGreen20Plus,
							percentLeftOfGreen: e.percentLeftOfGreen,
							percentLongOfGreen: e.percentLongOfGreen,
							percentMissedGreen: e.percentMissedGreen,
							percentRightOfGreen: e.percentRightOfGreen,
							percentShortOfGreen: e.percentShortOfGreen,
							shotOrientationDetail: t,
						};
					};
			},
			360471: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					CD: () => l,
					_z: () => a,
					aL: () => d,
					qT: () => c,
				});
				var n = i(883557);
				const a = { FAIL: 'FAIL', SUCCESS: 'SUCCESS', FETCHING: 'FETCHING' },
					s = { golfCourses: {}, networkingStatus: a.SUCCESS },
					r = {
						[n.Ub]: (e, t) => ({
							golfCourses: {
								...e.golfCourses,
								[t.golfCourse.courseSnapshotId]: t.golfCourse,
							},
							networkingStatus: a.SUCCESS,
						}),
						[n.Oc]: (e, t) => ({
							golfCourses: { ...e.golfCourses },
							networkingStatus: a.FETCHING,
						}),
						[n.pM]: (e, t) => e,
					};
				function o(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t, i) {
					return {
						type: n.Oc,
						courseSnapshotId: e,
						userLocale: t,
						meta: { cacheTime: i ? null : 6e4 },
					};
				}
				const c = (e, t) => e.golfCourse.golfCourses[t] || {},
					d = (e) => e.golfCourse.networkingStatus;
			},
			236473: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => l,
					Nc: () => c,
					Qd: () => p,
					TJ: () => d,
					bc: () => u,
				});
				var n = i(883557);
				const a = 'SUCCESS',
					s = 'FETCHING',
					r = {
						golfCourseLayouts: {},
						networkingStatus: a,
						layoutNetworkStatus: {},
					},
					o = {
						[n.kD]: (e, t) => ({
							golfCourseLayouts: {
								...e.golfCourseLayouts,
								[t.courseGlobalId]: t.layouts,
							},
							networkingStatus: a,
							layoutNetworkStatus: {
								...e.layoutNetworkStatus,
								[t.courseGlobalId]: a,
							},
						}),
						[n.wh]: (e, t) => ({
							golfCourseLayouts: { ...e.golfCourseLayouts },
							networkingStatus: s,
							layoutNetworkStatus: {
								...e.layoutNetworkStatus,
								[t.courseGlobalId]: s,
							},
						}),
						[n.bT]: (e, t) => e,
					};
				function l(e = r, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
				function c(e, t) {
					return {
						type: n.wh,
						courseGlobalId: e,
						meta: { cacheTime: t ? null : 6e4 },
					};
				}
				const d = (e, t) => e.golfCourseLayout.golfCourseLayouts[t] || [],
					u = (e) => e.golfCourseLayout.networkingStatus,
					p = (e, t) => e.golfCourseLayout.layoutNetworkStatus[t] || a;
			},
			509482: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => u, JH: () => p, PR: () => h, bo: () => y });
				var n = i(109285),
					a = i.n(n),
					s = i(883557),
					r = i(625124);
				const o = 'SUCCESS',
					l = 'FETCHING',
					c = { scorecards: {}, networkingStatus: o },
					d = {
						[s.wR]: (e, t) => ({
							scorecards: {
								...e.scorecards,
								[`${t.courseSnapshotId} - ${t.roundType}`]: t.scorecards.sort(
									(e, t) => {
										const i = new (a())(e.startTime),
											n = new (a())(t.startTime);
										return i > n ? -1 : i < n ? 1 : 0;
									}
								),
							},
							networkingStatus: o,
						}),
						[s.GO]: (e, t) => ({
							scorecards: { ...e.scorecards },
							networkingStatus: l,
						}),
						[s.JQ]: (e, t) => e,
					};
				function u(e = c, t = {}) {
					const i = d[t.type];
					return i ? i(e, t) : e;
				}
				function p(e, t, i, n, a, o) {
					return {
						type: s.GO,
						courseSnapshotId: e,
						courseGlobalId: t,
						backNineCourseGlobalId: i,
						roundType: n || r.HT.ALL_18_HOLES,
						userLocale: a,
						meta: { cacheTime: o ? null : 6e4 },
					};
				}
				const y = (e, t, i) => {
						let n = i || r.HT.ALL_18_HOLES;
						return e.golfCourseScorecards.scorecards[`${t} - ${n}`] || {};
					},
					h = (e) => e.golfCourseScorecards.networkingStatus;
			},
			531768: (e, t, i) => {
				'use strict';
				i.d(t, {
					$p: () => d,
					Ay: () => c,
					BG: () => u,
					QD: () => y,
					VB: () => p,
				});
				var n = i(883557),
					a = i(625124);
				const s = 'SUCCESS',
					r = 'FETCHING',
					o = {
						golfCourses: {},
						networkingStatus: s,
						courseStatsNetworkStatus: {},
					},
					l = {
						[n.sD]: (e, t) => {
							let i = (0, a.Ew)(
								t.golfCourseStats.courseSnapshotId || t.courseSnapshotId,
								t.golfCourseStats.courseGlobalId || t.courseGlobalId,
								t.fromDate
							);
							return {
								golfCourses: {
									...e.golfCourses,
									...(i && { [i]: t.golfCourseStats }),
								},
								networkingStatus: s,
								courseStatsNetworkStatus: {
									...e.courseStatsNetworkStatus,
									...(i && { [i]: s }),
								},
							};
						},
						[n.am]: (e, t) => {
							let i = (0, a.Ew)(
								t.courseSnapshotId,
								t.courseGlobalId,
								t.fromDate
							);
							return {
								golfCourses: { ...e.golfCourses },
								networkingStatus: r,
								courseStatsNetworkStatus: {
									...e.courseStatsNetworkStatus,
									...(i && { [i]: r }),
								},
							};
						},
						[n.Vm]: (e, t) => e,
					};
				function c(e = o, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
				function d(e, t, i, a, s, r) {
					return {
						type: n.am,
						courseSnapshotId: e,
						courseGlobalId: t,
						backNineCourseGlobalId: i,
						fromDate: a,
						userLocale: s,
						meta: { cacheTime: r ? null : 6e4 },
					};
				}
				const u = (e, t, i, n) => {
						const s = (0, a.Ew)(t, n, i);
						return e.golfCourseStats.golfCourses[s] || void 0;
					},
					p = (e) => e.golfCourseStats.networkingStatus,
					y = (e, t, i, n) => {
						const s = (0, a.Ew)(t, n, i);
						return (
							e.golfCourseStats.courseStatsNetworkStatus[s] ||
							e.golfCourseStats.networkingStatus
						);
					};
			},
			180258: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => c,
					F: () => p,
					R9: () => h,
					T8: () => y,
					bo: () => d,
					dL: () => u,
				});
				var n = i(883557);
				const a = 'FAIL',
					s = 'SUCCESS',
					r = 'FETCHING',
					o = { golfCourses: [], networkingStatus: s },
					l = {
						[n.ZO]: (e, t) => ({
							golfCourses: t.golfCourses,
							networkingStatus: s,
						}),
						[n.tE]: (e, t) => ({
							golfCourses: e.golfCourses,
							networkingStatus: r,
						}),
						[n.uD]: (e, t) => ({
							golfCourses: e.golfCourses,
							networkingStatus: a,
						}),
					};
				function c(e = o, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
				function d(e) {
					return { type: n.tE, meta: { cacheTime: e ? null : 6e5 } };
				}
				const u = (e) =>
						Object.keys(e.golfCourses.golfCourses).map(
							(t) => e.golfCourses.golfCourses[t]
						),
					p = (e) => e.golfCourses.networkingStatus,
					y = (e, t) => {
						const i = parseInt(t, 10);
						return e.golfCourses.golfCourses.find(
							(e, t, n) => t > 0 && i === n[t - 1].courseSnapshotId
						);
					},
					h = (e, t) => {
						const i = parseInt(t, 10);
						return e.golfCourses.golfCourses.find(
							(e, t, n) => t < n.length - 1 && i === n[t + 1].courseSnapshotId
						);
					};
			},
			391681: (e, t, i) => {
				'use strict';
				i.d(t, { $i: () => l, Ay: () => r, If: () => c, xu: () => o });
				var n = i(316550);
				const a = {
						isFetching: !1,
						payload: {},
						filteredPayload: {},
						gdprSafePayload: {},
						gdprSafeFilteredPayload: {},
						allClubIds: [],
						clubIdsSelected: [],
						areClubIdsSaved: !0,
					},
					s = {
						[n.pCG]: (e, t) => {
							let i = new Set();
							return (
								t.driveGolfStats.shotDispersionDetails &&
									t.driveGolfStats.shotDispersionDetails.forEach(
										(e) => !i.has(e.clubId) && (i.add(e.clubId), !0)
									),
								{
									isFetching: !1,
									payload: t.driveGolfStats,
									gdprSafePayload: d(t.driveGolfStats),
									filteredPayload: t.driveGolfStats,
									gdprSafeFilteredPayload: d(t.driveGolfStats),
									allClubIds: [...i],
									clubIdsSelected: [],
									areClubIdsSaved: !0,
								}
							);
						},
						[n.MhH]: (e, t) =>
							t.areClubIdsSaved
								? { ...e, clubIdsSelected: t.clubIdsSelected || [] }
								: { ...e, unsavedIdsSelected: t.clubIdsSelected || [] },
						[n.zXJ]: (e, t) => ({
							...e,
							filteredPayload: t.driveGolfStats,
							gdprSafeFilteredPayload: d(t.driveGolfStats),
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o() {
					return { type: n.rJc, isFetching: !0 };
				}
				function l(e) {
					return { type: n.vzy, isFetching: !0, clubIds: e };
				}
				const c = (e) => e.driveGolfStats,
					d = (e) => {
						const t = e.shotDispersionDetails
							? e.shotDispersionDetails.map((e) => ({
									shotId: e.shotId,
									holeNumber: e.holeNumber,
									clubId: e.clubId,
									dispersionDistance: e.dispersionDistance,
									shotDistance: e.shotDistance,
									fairwayShotOutcome: e.fairwayShotOutcome,
								}))
							: [];
						return {
							numberOfRounds: e.numberOfRounds,
							percentFairwayLeft: e.percentFairwayLeft,
							percentFairwayRight: e.percentFairwayRight,
							percentFairwayHit: e.percentFairwayHit,
							minShotDistance: e.minShotDistance,
							maxShotDistance: e.maxShotDistance,
							avgShotDistance: e.avgShotDistance,
							minDispersionDistance: e.minDispersionDistance,
							maxDispersionDistance: e.maxDispersionDistance,
							shotDispersionDetails: t,
						};
					};
			},
			659461: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, Gi: () => o, WM: () => l });
				var n = i(316550);
				const a = { isFetching: !1, payload: null },
					s = {
						[n.V1e]: (e, t) => ({ isFetching: !1, payload: t.golfClubTypes }),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return {
						type: n.FV0,
						isFetching: !0,
						meta: { cacheTime: e ? null : 2628e6 },
					};
				}
				const l = (e) => e.golfClubTypes;
			},
			706349: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, Cc: () => o, Un: () => l });
				var n = i(316550);
				const a = { isFetching: !1, payload: null },
					s = { [n.Q4_]: (e, t) => ({ isFetching: !1, payload: t.golfClubs }) };
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t) {
					return {
						type: n.cC4,
						isFetching: !0,
						includeStats: e,
						meta: { cacheTime: t ? null : 6e4 },
					};
				}
				const l = (e) => e.golfClubs;
			},
			96293: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, Sg: () => l, kt: () => o });
				var n = i(316550);
				const a = { isFetching: !1, payload: null },
					s = {
						[n.BzT]: (e, t) => ({
							isFetching: !1,
							payload: t.golfClubsFlexTypes,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return {
						type: n.Vr3,
						isFetching: !0,
						meta: { cacheTime: e ? null : 6e4 },
					};
				}
				const l = (e) => e.golfClubsFlexTypes;
			},
			721143: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, E4: () => r });
				var n = i(316550);
				const a = {},
					s = { [n.Wsf]: (e, t) => ({ ...e, ...t.pageState }) },
					r = (e) => e.golfStatsPageState;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			947943: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, J6: () => c, K0: () => l });
				var n = i(853579);
				const a = {
						leaderboards: {},
						leaderboardFetching: !1,
						leaderboardFetchSuccess: !1,
						leaderboardFetchFail: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						leaderboards:
							e && i.leaderboard
								? {
										...t.leaderboards,
										[i.leaderboard.leaderboard.id]: i.leaderboard,
									}
								: t.leaderboards,
						leaderboardFetching: !1,
						leaderboardFetchSuccess: e,
						leaderboardFetchFail: !e,
					}),
					r = {
						[n.Rs]: (e) => ({
							...e,
							leaderboardFetching: !0,
							leaderboardFetchSuccess: !1,
							leaderboardFetchFail: !1,
						}),
						[n.wJ]: s(!0),
						[n.nJ]: s(!1),
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				const l = (e, t) => {
					const i = Object.entries(e.golfLeaderboard.leaderboards).find(
						(e) => e[1].standings.currentPlayerStanding.scorecardId === t
					);
					return i ? i[1] : {};
				};
				function c(e) {
					return { type: n.gh, scorecardId: e };
				}
			},
			808884: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, Jo: () => o, jt: () => l });
				var n = i(316550);
				const a = {
						isFetching: !1,
						initialLoadComplete: !1,
						payload: {},
						loadFailed: !1,
					},
					s = {
						[n.IyG]: (e, t) => ({
							isFetching: !1,
							payload: t.playerGolfStats,
							initialLoadComplete: !0,
						}),
						[n.FXf]: (e, t) => ({
							isFetching: !1,
							payload: t.playerGolfStats,
							initialLoadComplete: !0,
							loadFailed: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return { type: n.mj7, isFetching: !0 };
				}
				const l = (e) => e.playerGolfStats;
			},
			806823: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					Qt: () => l,
					_o: () => d,
					_z: () => a,
					uA: () => c,
				});
				var n = i(42821);
				const a = { FAIL: 'FAIL', SUCCESS: 'SUCCESS', FETCHING: 'FETCHING' },
					s = { golfProfiles: {}, networkingStatus: a.SUCCESS },
					r = {
						[n.k_]: (e, t) => ({
							golfProfiles: {
								...e.golfProfiles,
								[t.displayName]: t.golfProfile,
							},
							networkingStatus: a.SUCCESS,
						}),
						[n.s2]: (e, t) => ({
							golfProfiles: { ...e.golfProfiles },
							networkingStatus: a.FETCHING,
						}),
						[n.Py]: (e, t) => e,
					};
				function o(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t) {
					return {
						type: n.s2,
						displayName: e,
						meta: { cacheTime: t ? null : 6e4 },
					};
				}
				const c = (e, t) => e.golfProfile.golfProfiles[t] || {},
					d = (e) => e.golfProfile.networkingStatus;
			},
			381590: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, fY: () => l, mk: () => o });
				var n = i(316550);
				const a = { isFetching: !1, payload: {} },
					s = {
						[n.U13]: (e, t) => ({ isFetching: !1, payload: t.puttGolfStats }),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o() {
					return { type: n.uSs, isFetching: !0 };
				}
				const l = (e) => e.puttGolfStats;
			},
			774435: (e, t, i) => {
				'use strict';
				i.d(t, {
					$N: () => _,
					Ay: () => l,
					CD: () => v,
					Dh: () => c,
					GD: () => y,
					L2: () => C,
					Mf: () => L,
					UD: () => I,
					XU: () => T,
					ZK: () => b,
					bv: () => N,
					ei: () => m,
					g_: () => f,
					hz: () => D,
					ki: () => O,
					lK: () => p,
					lq: () => g,
					nM: () => E,
					nS: () => d,
					qR: () => u,
					ro: () => h,
					wR: () => P,
					yd: () => A,
					z0: () => R,
					zk: () => S,
				});
				var n = i(379334);
				const a = {
						scorecards: {},
						scorecardFetching: !1,
						scorecardFetchSuccess: !1,
						scorecardFetchFail: !1,
						scorecardUpdating: !1,
						scorecardUpdateFail: !1,
						scorecardUpdateSuccess: !1,
						scorecardDetailFetching: !1,
						scorecardDetailFetchSuccess: !1,
						scorecardDetailFetchFail: !1,
						scorecardDeleting: !1,
						scorecardDeleteFail: !1,
						scorecardDeleteSuccess: !1,
						scorecardFetchFailStatus: void 0,
					},
					s = (e) => (t, i) => ({
						...t,
						scorecards: e
							? {
									...t.scorecards,
									[i.scorecard.id]: {
										...t.scorecards[i.scorecard.id],
										scorecard: i.scorecard,
									},
								}
							: t.scorecards,
						scorecardFetching: !1,
						scorecardFetchSuccess: e,
						scorecardFetchFail: !e,
						scorecardFetchFailStatus: i.status,
					}),
					r = (e) => (t, i) => ({
						...t,
						scorecards: e
							? { ...t.scorecards, [i.scorecardId]: i.scorecardDetail }
							: t.scorecards,
						scorecardFetching: !1,
						scorecardFetchSuccess: e,
						scorecardFetchFail: !e,
						scorecardDetailFetching: !1,
						scorecardDetailFetchSuccess: e,
						scorecardDetailFetchFail: !e,
					}),
					o = {
						[n.oD]: (e) => ({
							...e,
							scorecardFetching: !0,
							scorecardFetchSuccess: !1,
							scorecardFetchFail: !1,
						}),
						[n.fO]: s(!0),
						[n.Yn]: s(!1),
						[n.Z]: (e) => ({
							...e,
							scorecardUpdating: !0,
							scorecardUpdateFail: !1,
							scorecardUpdateSuccess: !1,
						}),
						[n.KV]: (e, t) => ({
							...e,
							scorecardUpdating: !1,
							scorecardUpdateFail: !1,
							scorecardUpdateSuccess: !0,
						}),
						[n.RD]: (e) => ({
							...e,
							scorecardUpdating: !1,
							scorecardUpdateFail: !0,
							scorecardUpdateSuccess: !1,
						}),
						[n.wc]: (e) => ({
							...e,
							scorecardFetching: !0,
							scorecardFetchSuccess: !1,
							scorecardFetchFail: !1,
							scorecardDetailFetching: !0,
							scorecardDetailFetchSuccess: !1,
							scorecardDetailFetchFail: !1,
						}),
						[n.XZ]: r(!0),
						[n.sy]: r(!1),
						[n.d6]: (e) => ({
							...e,
							scorecardDeleting: !0,
							scorecardDeleteFail: !1,
							scorecardDeleteSuccess: !1,
						}),
						[n.eU]: (e, t) => (
							delete e.scorecards[t.scorecardId],
							{
								...e,
								scorecards: { ...e.scorecards },
								scorecardDeleting: !1,
								scorecardDeleteFail: !1,
								scorecardDeleteSuccess: !0,
							}
						),
						[n.b1]: (e) => ({
							...e,
							scorecardDeleting: !1,
							scorecardDeleteFail: !0,
						}),
					};
				function l(e = a, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
				const c = (e, t) => m(e, t).scorecard || {},
					d = (e) => e.golfScorecard.scorecardFetching,
					u = (e) => e.golfScorecard.scorecardFetchFail,
					p = (e) => e.golfScorecard.scorecardFetchFailStatus,
					y = (e) => e.golfScorecard.scorecardFetchSuccess,
					h = (e) => e.golfScorecard.scorecardUpdateFail,
					g = (e) => e.golfScorecard.scorecardUpdateSuccess,
					m = (e, t) => e.golfScorecard.scorecards[t] || {},
					A = (e) => e.golfScorecard.scorecardDetailFetching,
					_ = (e) => e.golfScorecard.scorecardDetailFetchFail,
					E = (e) => e.golfScorecard.scorecardDetailFetchSuccess,
					T = (e, t) => {
						var i;
						return null === (i = m(e, t).nextPreviousScorecardIdsApiModel) ||
							void 0 === i
							? void 0
							: i.nextScorecardId;
					},
					C = (e, t) => {
						var i;
						return null === (i = m(e, t).nextPreviousScorecardIdsApiModel) ||
							void 0 === i
							? void 0
							: i.previousScorecardId;
					},
					S = (e, t) => m(e, t).shotCounts || [],
					I = (e, t) => m(e, t).scorecardStats || {},
					v = (e, t) => {
						const i = m(e, t);
						return null === i || void 0 === i ? void 0 : i.longestShotInMeters;
					},
					f = (e, t) => m(e, t).guestScorecardStats || [],
					D = (e) => e.golfScorecard.scorecardDeleting,
					N = (e) => e.golfScorecard.scorecardDeleteFail,
					R = (e) => e.golfScorecard.scorecardDeleteSuccess;
				function b(e) {
					return { type: n.bi, scorecardId: e };
				}
				function L(e, t) {
					return { type: n.wi, scorecardId: e, patches: t };
				}
				function P(e, t) {
					return { type: n.tg, scorecardId: e, locale: t };
				}
				function O(e) {
					return { type: n.Kk, scorecardId: e };
				}
			},
			560187: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => l,
					Hr: () => p,
					RZ: () => c,
					Vo: () => d,
					_z: () => a,
					b8: () => u,
				});
				var n = i(379334);
				const a = { FAIL: 'FAIL', SUCCESS: 'SUCCESS', FETCHING: 'FETCHING' },
					s = { golfScorecardSummaries: {}, networkingStatus: a.SUCCESS },
					r = (e, t) => {
						var i = {};
						let n = parseInt(t.scorecardId, 10);
						for (var s of Object.keys(e.golfScorecardSummaries))
							i[s] = e.golfScorecardSummaries[s].filter((e) => e.id !== n);
						return {
							golfScorecardSummaries: { ...i },
							networkingStatus: a.SUCCESS,
						};
					},
					o = {
						[n.JX]: (e, t) => ({
							golfScorecardSummaries: { ...e.golfScorecardSummaries },
							networkingStatus: a.FETCHING,
						}),
						[n.BR]: (e, t) => ({
							golfScorecardSummaries: {
								...e.golfScorecardSummaries,
								[t.connectionDisplayName || t.displayName]:
									t.scorecardSummaries,
							},
							networkingStatus: a.SUCCESS,
						}),
						[n.k1]: (e, t) => ({
							golfScorecardSummaries: { ...e.golfScorecardSummaries },
							networkingStatus: a.FAIL,
						}),
						[n.Qo]: r,
						[n.eU]: r,
					};
				function l(e = s, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
				function c(e, t, i, a) {
					return {
						type: n.JX,
						connectionDisplayName: t,
						displayName: e,
						userLocale: i,
						meta: { cacheTime: a ? null : 1e4 },
					};
				}
				function d(e) {
					return { type: n.Qo, scorecardId: e };
				}
				const u = (e, t) => e.golfScorecardSummary.golfScorecardSummaries[t],
					p = (e) => e.golfScorecardSummary.networkingStatus;
			},
			995319: (e, t, i) => {
				'use strict';
				i.d(t, {
					$0: () => A,
					$u: () => _,
					Ay: () => ue,
					Ch: () => le,
					Cl: () => ne,
					Cr: () => U,
					Dw: () => C,
					EA: () => Z,
					Gv: () => ie,
					H$: () => G,
					HY: () => p,
					IW: () => V,
					In: () => re,
					JF: () => B,
					JJ: () => L,
					LY: () => I,
					M8: () => Y,
					MM: () => m,
					N2: () => g,
					N9: () => R,
					PK: () => S,
					Q5: () => O,
					Qh: () => Q,
					Rw: () => oe,
					SB: () => se,
					U5: () => ee,
					UG: () => v,
					VM: () => ae,
					VO: () => c,
					Xd: () => z,
					YS: () => w,
					ZK: () => D,
					bh: () => K,
					cN: () => N,
					eS: () => h,
					f: () => u,
					fF: () => b,
					g7: () => q,
					ge: () => E,
					gq: () => J,
					hr: () => $,
					iC: () => te,
					jI: () => W,
					k1: () => ce,
					nr: () => y,
					oD: () => T,
					q$: () => M,
					qZ: () => x,
					sK: () => f,
					t2: () => H,
					uz: () => F,
					wG: () => j,
					wQ: () => d,
					y7: () => P,
					zk: () => o,
				});
				var n = i(316550),
					a = i(568574),
					s = i(155641),
					r = i(565359);
				const o = { all: 'All', detail: 'Detail' },
					l = {
						viewerSocialProfile: null,
						viewerUserPreferences: null,
						viewerUserBiometrics: null,
						fetching: !0,
						group: null,
						isGroupPrivate: !1,
						isGroupDeleted: !1,
						groupMembers: [],
						groupViewerMember: [],
						groupConnectionMembers: [],
						groupNonConnectionMembers: [],
						groupUserConnections: [],
						groupAnnouncement: null,
						groupMemberRequest: null,
						groupInvites: [],
						groupRejectedInvites: [],
						groupInvitation: null,
						viewerIsAdmin: !1,
						tab: null,
						feedTab: a.Qe.ALL,
						showViewPost: !1,
						showViewAnnouncement: !1,
						groupAnnouncementRenderKey: null,
						postingGroupAnnouncement: !1,
						postingGroupAnnouncementSuccess: !1,
						postingGroupAnnouncementError: !1,
						postingGroupPost: !1,
						postingGroupPostError: !1,
						postingGroupPostSuccess: !1,
						allFeeds: {
							fetching: !1,
							success: !1,
							error: !1,
							list: [],
							cursor: null,
							daysLimit: null,
						},
						activityFeed: {
							fetching: !1,
							success: !1,
							error: !1,
							list: [],
							cursor: null,
							daysLimit: null,
						},
						groupPosts: {
							fetching: !1,
							success: !1,
							error: !1,
							list: [],
							cursor: null,
						},
						groupPostImages: [],
						groupPostImageEditMode: !1,
						groupPostImageUploading: !1,
						groupPostHasValidImage: !1,
						groupPostHasFailedImage: !1,
						groupPostImageLastIndex: null,
						comments: {},
						highlightedComments: {},
						uiPostState: {},
						uiCommentsState: {},
						uiAddCommentState: {},
						uiEditCommentState: {},
						uiCommentState: {},
						conversationLikers: {},
						commentLikers: {},
						deleteDialog: {
							open: !1,
							deleteType: null,
							postUuid: null,
							course: null,
						},
						challenges: {
							view: o.all,
							fetching: !1,
							fetchSuccess: !1,
							fetchError: !1,
							nonCompleted: [],
							userJoined: [],
							updateSuccess: !1,
							updateError: !1,
							deleteSuccess: !1,
							deleteError: !1,
							prevUuid: null,
							currentUuid: null,
							nextUuid: null,
							leaderboard: null,
							leaderboardFetching: !1,
							leaderboardFetchSuccess: !1,
							leaderboardFetchError: !1,
						},
						showCommentError: !1,
						showGeneralErrorAlert: !1,
						showPhotoLimitError: !1,
						showImageUploadRetryHint: !1,
						initializeSinglePageDone: !1,
						initializeSinglePageError: !1,
						singlePageErrorStatus: null,
						focusCommentUuid: null,
						showGroupPageErrorAlert: !1,
						showChangesSaved: !1,
						inviteLimitDays: null,
					},
					c = (e) => e.groupPage.viewerSocialProfile,
					d = (e) => e.groupPage.viewerUserPreferences,
					u = (e) => e.groupPage.fetching,
					p = (e) => e.groupPage.isGroupPrivate,
					y = (e) => e.groupPage.isGroupDeleted,
					h = (e) => e.groupPage.group,
					g = (e) => e.groupPage.group.id,
					m = (e) => e.groupPage.group.ownerId,
					A = (e) => e.groupPage.group.groupName,
					_ = (e) => e.groupPage.groupMembers,
					E = (e) => e.groupPage.groupInvites,
					T = (e) => e.groupPage.groupRejectedInvites,
					C = (e) => e.groupPage.groupMemberRequest,
					S = (e) => e.groupPage.groupInvitation,
					I = (e) => e.groupPage.groupAnnouncement,
					v = (e) => {
						const { group: t } = e.groupPage;
						return !!t && [a.Bw.OWNER, a.Bw.ADMIN].includes(t.membershipStatus);
					},
					f = (e) => {
						const { group: t } = e.groupPage;
						return !!t && t.membershipStatus === a.Bw.OWNER;
					},
					D = (e) => {
						const { group: t } = e.groupPage;
						return (
							!!t &&
							[a.Bw.OWNER, a.Bw.ADMIN, a.Bw.MEMBER].includes(t.membershipStatus)
						);
					},
					N = (e) => e.groupPage.tab,
					R = (e) => e.groupPage.groupPosts,
					b = (e) => e.groupPage.groupPosts.cursor,
					L = (e) => e.groupPage.groupPosts.fetching,
					P = (e, { postUuid: t }) => {
						const i = e.groupPage.feedTab === a.Qe.ALL,
							n = i
								? e.groupPage.allFeeds.list.find((e) => e.data.uuid === t)
								: e.groupPage.groupPosts.list.find((e) => e.uuid === t);
						return (i ? n && n.data : n) || {};
					},
					O = (e) => e.groupPage.initializeSinglePageDone,
					w = (e) => e.groupPage.singlePageErrorStatus,
					F = (e) => e.groupPage.focusCommentUuid,
					k = (e, { resourceType: t, resourceId: i }) => {
						const n = `${t}/${i}`;
						return e.groupPage.uiCommentsState[n];
					},
					U = (e, { resourceType: t, resourceId: i }) => {
						const n = k(e, { resourceType: t, resourceId: i });
						return !!n && n.fetching;
					},
					M = (e, { resourceType: t, resourceId: i }) => {
						const n = k(e, { resourceType: t, resourceId: i });
						return !!n && n.initialFetchDone;
					},
					G = (e, { resourceType: t, resourceId: i }) =>
						x(e, { resourceType: t, resourceId: i }).length + 1,
					x = (e, { resourceType: t, resourceId: i }) => {
						const n = `${t}/${i}`;
						return e.groupPage.comments[n] || [];
					},
					B = (e, { resourceType: t, resourceId: i }) => {
						const n = `${t}/${i}`;
						return e.groupPage.highlightedComments[n] || [];
					},
					H = (e, { resourceType: t, resourceId: i }) => {
						const n = `${t}/${i}`;
						return e.groupPage.uiAddCommentState[n] || {};
					},
					V = (e, { conversationCommentUuid: t }) =>
						e.groupPage.uiEditCommentState[t] || {},
					W = (e) => e.groupPage.deleteDialog,
					J = (e) => e.groupPage.deleteDialog.deleteType,
					Y = (e) => e.groupPage.deleteDialog.open,
					$ = (e) => e.groupPage.deleteDialog.course,
					j = (e, { resourceType: t, resourceId: i }) => {
						const n = `${t}/${i}`,
							a = e.groupPage.conversationLikers[n];
						return a ? a.updating || !1 : null;
					},
					K = (
						e,
						{ resourceType: t, resourceId: i, conversationCommentUuid: n }
					) => {
						const a = `${t}/${i}`,
							s = e.groupPage.commentLikers[a];
						return (s && s[n] && s[n].likers) || null;
					},
					z = (
						e,
						{ resourceType: t, resourceId: i, conversationCommentUuid: n }
					) => {
						const a = `${t}/${i}`,
							s = e.groupPage.commentLikers[a];
						return (s && s[n] && s[n].fetching) || !1;
					},
					q = (
						e,
						{ resourceType: t, resourceId: i, conversationCommentUuid: n }
					) => {
						const a = `${t}/${i}`,
							s = e.groupPage.commentLikers[a];
						return (s && s[n] && s[n].updating) || !1;
					},
					Q = (
						e,
						{ resourceType: t, resourceId: i, conversationCommentUuid: n }
					) => {
						const a = `${t}/${i}`,
							s = e.groupPage.commentLikers[a];
						return (s && s[n] && s[n].success) || !1;
					},
					X = (e) => e.groupPage.activityFeed,
					Z = (e) => X(e).fetching,
					ee = (e) => X(e).cursor,
					te = (e) => e.groupPage.allFeeds.list,
					ie = (e) => e.groupPage.allFeeds.cursor,
					ne = (e) => e.groupPage.challenges.fetching,
					ae = (e) => e.groupPage.challenges.fetchSuccess,
					se = (e) => e.groupPage.challenges.nonCompleted,
					re = (e) => e.groupPage.challenges.userJoined,
					oe = (e, t) =>
						e.groupPage.challenges.nonCompleted.find((e) => e.uuid === t) ||
						e.groupPage.challenges.userJoined.find((e) => e.uuid === t),
					le = (e) => {
						const t = e.groupPage.challenges.currentUuid;
						return (
							e.groupPage.challenges.nonCompleted.find((e) => e.uuid === t) ||
							e.groupPage.challenges.userJoined.find((e) => e.uuid === t)
						);
					},
					ce = (e) => e.groupPage.showGroupPageErrorAlert,
					de = {
						[n.rMO]: (e, t) => ({
							...l,
							viewerSocialProfile: t.viewerSocialProfile,
							viewerUserPreferences: t.viewerUserPreferences,
							viewerUserBiometrics: t.viewerUserBiometrics,
						}),
						[n.JvC]: (e, t) => ({
							...e,
							fetching: !1,
							group: t.group,
							groupMembers: t.groupMembers,
							groupAnnouncement: t.groupAnnouncement,
							groupAnnouncementRenderKey: Date.now(),
							groupUserConnections: t.groupUserConnections,
							groupMemberRequest: t.groupMemberRequest,
							groupInvitation: t.groupInvitation,
						}),
						[n.OYz]: (e, { isGroupPrivate: t, isGroupDeleted: i }) => ({
							...e,
							fetching: !1,
							isGroupPrivate: t,
							isGroupDeleted: i,
						}),
						[n.pVp]: (e, t) => ({ ...e, tab: t.tab }),
						[n.Vh]: (e, { feedTab: t }) => ({
							...e,
							feedTab: t,
							showViewPost: !1,
							showViewAnnouncement: !1,
							showGeneralErrorAlert: !1,
						}),
						[n._RB]: () => l,
						[n.OZA]: (e) => ({
							...e,
							postingGroupAnnouncement: !0,
							postingGroupAnnouncementSuccess: !1,
							postingGroupAnnouncementError: !1,
							showViewAnnouncement: !1,
						}),
						[n.Q4E]: (e, t) => ({
							...e,
							groupAnnouncement: t.groupAnnouncement,
							groupAnnouncementRenderKey: Date.now(),
							postingGroupAnnouncement: !1,
							postingGroupAnnouncementSuccess: !0,
							groupPostImages: [],
							groupPostImageLastIndex: null,
							showViewAnnouncement: e.feedTab === a.Qe.ACTIVITIES,
							showViewPost: !1,
						}),
						[n.Gx$]: (e) => ({
							...e,
							postingGroupAnnouncement: !1,
							postingGroupAnnouncementError: !0,
						}),
						[n.uIV]: (e) => ({
							...e,
							groupAnnouncement: null,
							allFeeds:
								e.feedTab === a.Qe.ALL
									? {
											...e.allFeeds,
											list: e.allFeeds.list.map((e) => ({
												...e,
												data: { ...e.data, shouldAnimateUp: !0 },
											})),
										}
									: e.allFeeds,
							groupPosts:
								e.feedTab === a.Qe.POSTS
									? {
											...e.groupPosts,
											list: e.groupPosts.list.map((e) => ({
												...e,
												shouldAnimateUp: !0,
											})),
										}
									: e.groupPosts,
							showGeneralErrorAlert: !1,
						}),
						[n.GcM]: (e) => ({ ...e, showGeneralErrorAlert: !0 }),
						[n.DCy]: (e, t) => ({
							...e,
							deleteDialog: {
								open: !0,
								deleteType: t.deleteType,
								postUuid: t.postUuid || null,
								course: t.course || null,
								postImage: t.postImage || null,
							},
						}),
						[n.BC2]: (e) => ({ ...e, deleteDialog: { open: !1 } }),
						[n.d16]: (e) => ({
							...e,
							postingGroupPost: !0,
							postingGroupPostSuccess: !1,
							postingGroupPostError: !1,
							showViewPost: !1,
						}),
						[n.FXT]: (e, { newPost: t }) => ({
							...e,
							groupAnnouncementRenderKey: Date.now(),
							postingGroupPost: !1,
							postingGroupPostSuccess: !0,
							allFeeds: {
								...e.allFeeds,
								list: [
									{ groupFeedType: a.Ob.post, data: t },
									...e.allFeeds.list,
								],
							},
							groupPosts: e.groupPosts.success
								? { ...e.groupPosts, list: [t, ...e.groupPosts.list] }
								: e.groupPosts,
							groupPostImages: [],
							groupPostImageEditMode: !1,
							groupPostImageLastIndex: null,
							showViewPost: e.feedTab === a.Qe.ACTIVITIES,
							showViewAnnouncement: !1,
						}),
						[n.NkD]: (e) => ({
							...e,
							postingGroupPost: !1,
							postingGroupPostError: !0,
						}),
						[n.pC0]: (e, t) => ({
							...e,
							uiPostState: {
								...e.uiPostState,
								[t.postUuid]: { deleting: !0, error: !1 },
							},
						}),
						[n.$9]: (e, { postUuid: t }) => {
							const i = e.groupPosts.list.findIndex((e) => e.uuid === t),
								n = e.allFeeds.list.findIndex(
									(e) => e.groupFeedType === a.Ob.post && e.data.uuid === t
								),
								s = `${a.kq.post}/${t}`,
								o = e.allFeeds.list
									.filter(
										(e) =>
											e.groupFeedType === a.Ob.activity ||
											(e.groupFeedType === a.Ob.post && e.data.uuid !== t)
									)
									.map((e, t) => ({
										...e,
										data: { ...e.data, shouldAnimateUp: t >= n },
									})),
								l = e.groupPosts.list
									.filter((e) => e.uuid !== t)
									.map((e, t) => ({ ...e, shouldAnimateUp: t >= i })),
								c = (0, r.u)(e.comments, s),
								d = (0, r.u)(e.highlightedComments, s),
								u = (0, r.u)(e.uiPostState, s),
								p = (0, r.u)(e.uiCommentsState, s),
								y = (0, r.u)(e.uiAddCommentState, s),
								h = (0, r.u)(e.uiCommentState, s),
								g = (0, r.u)(e.conversationLikers, s),
								m = (0, r.u)(e.commentLikers, s);
							return {
								...e,
								allFeeds: { ...e.allFeeds, list: o },
								groupPosts: { ...e.groupPosts, list: l },
								comments: c,
								highlightedComments: d,
								uiPostState: u,
								uiCommentsState: p,
								uiAddCommentState: y,
								uiCommentState: h,
								conversationLikers: g,
								commentLikers: m,
								showGeneralErrorAlert: !1,
							};
						},
						[n.hfK]: (e, t) => ({
							...e,
							uiPostState: {
								...e.uiPostState,
								[t.postUuid]: { deleting: !1, error: !0 },
							},
							showGeneralErrorAlert: !0,
						}),
						[n.Xev]: (e, t) => ({
							...e,
							groupPosts: {
								...e.groupPosts,
								fetching: !0,
								success: !1,
								error: !1,
							},
							showGeneralErrorAlert: !1,
						}),
						[n.dxM]: (e, { posts: t, hasMore: i, cursor: n }) => {
							const s = { ...e.highlightedComments };
							return (
								t.forEach((e) => {
									const { highlightedCommentDTO: t, uuid: i } = e,
										n = `${a.kq.post}/${i}`;
									t && (s[n] = [t]);
								}),
								{
									...e,
									groupPosts: {
										...e.groupPosts,
										list: [...e.groupPosts.list, ...t],
										fetching: !1,
										success: !0,
										hasMore: i,
										cursor: n,
									},
									highlightedComments: s,
								}
							);
						},
						[n.deR]: (e) => ({
							...e,
							groupPosts: { ...e.groupPosts, fetching: !1, error: !0 },
							showGeneralErrorAlert: !0,
						}),
						[n.hqh]: (e) => ({
							...e,
							groupPosts: { ...l.groupPosts, fetching: !0 },
						}),
						[n.ir9]: (e, { post: t }) => {
							const i = { ...e.highlightedComments },
								{ highlightedCommentDTO: n, uuid: s } = t,
								r = `${a.kq.post}/${s}`;
							return (
								n && (i[r] = [n]),
								{
									...e,
									groupPosts: {
										...e.groupPosts,
										list: [t],
										fetching: !1,
										success: !0,
									},
									highlightedComments: i,
								}
							);
						},
						[n.sE7]: (e, { errorStatus: t }) => ({
							...e,
							groupPosts: { ...e.groupPosts, fetching: !1, error: !0 },
							singlePageErrorStatus: t,
						}),
						[n.iP4]: (e, t) => {
							const { resourceType: i, resourceId: n } = t,
								a = `${i}/${n}`;
							let s = {
								resourceType: i,
								id: n,
								nextCursor: 0,
								...e.uiCommentsState[a],
								fetching: !0,
								error: !1,
							};
							return {
								...e,
								uiCommentsState: { ...e.uiCommentsState, [a]: s },
							};
						},
						[n.ino]: (e, t) => {
							const {
									resourceType: i,
									resourceId: n,
									hasMore: a,
									comments: s,
								} = t,
								r = `${i}/${n}`;
							let o,
								l = {
									...e.uiCommentsState[r],
									hasMore: a,
									fetching: !1,
									error: !1,
									initialFetchDone: !0,
								};
							return (
								(o = e.comments[r] ? [...s, ...e.comments[r]] : s),
								{
									...e,
									uiCommentsState: { ...e.uiCommentsState, [r]: l },
									comments: { ...e.comments, [r]: o },
								}
							);
						},
						[n.Ea6]: (e, t) => {
							const { resourceType: i, resourceId: n } = t,
								a = `${i}/${n}`,
								s = { ...e.uiCommentsState[a], fetching: !1, error: !0 };
							return {
								...e,
								uiCommentsState: { ...e.uiCommentsState, [a]: s },
							};
						},
						[n.oav]: (e, t) => {
							const { resourceType: i, resourceId: n } = t,
								a = `${i}/${n}`,
								s = {
									...e.uiAddCommentState[a],
									success: !1,
									error: !1,
									submitting: !0,
								};
							return {
								...e,
								uiAddCommentState: { ...e.uiAddCommentState, [a]: s },
								showCommentError: !1,
								showGeneralErrorAlert: !1,
							};
						},
						[n.YoW]: (e, t) => {
							const { resourceType: i, resourceId: n, newComment: s } = t,
								r = `${i}/${n}`;
							return {
								...e,
								uiAddCommentState: {
									...e.uiAddCommentState,
									[r]: { submitting: !1, success: !0, error: !1 },
								},
								comments: {
									...e.comments,
									[r]: e.comments[r] ? [...e.comments[r], s] : [s],
								},
								highlightedComments: {
									...e.highlightedComments,
									[r]: e.highlightedComments[r]
										? [...e.highlightedComments[r], s]
										: [s],
								},
								allFeeds: {
									...e.allFeeds,
									list: e.allFeeds.list.map((e) => {
										const { data: t, groupFeedType: i } = e;
										return i === a.Ob.activity && t.activityId === n
											? {
													...e,
													data: {
														...t,
														numberOfActivityComments:
															t.numberOfActivityComments + 1,
													},
												}
											: i === a.Ob.post && t.uuid === n
												? {
														...e,
														data: {
															...t,
															conversationDTO: t.conversationDTO
																? {
																		...t.conversationDTO,
																		numberOfComments:
																			t.conversationDTO.numberOfComments + 1,
																	}
																: {
																		conversationUuid: s.conversationUuid,
																		numberOfComments: 1,
																		numberOfLikes: 0,
																		likedByUser: !1,
																	},
														},
													}
												: e;
									}),
								},
								activityFeed: {
									...e.activityFeed,
									list: e.activityFeed.list.map((e) =>
										e.activityId === n
											? {
													...e,
													numberOfActivityComments:
														e.numberOfActivityComments + 1,
												}
											: e
									),
								},
								groupPosts: {
									...e.groupPosts,
									list: e.groupPosts.list.map((e) =>
										e.uuid === n
											? {
													...e,
													conversationDTO: e.conversationDTO
														? {
																...e.conversationDTO,
																numberOfComments:
																	e.conversationDTO.numberOfComments + 1,
															}
														: {
																conversationUuid: s.conversationUuid,
																numberOfComments: 1,
																numberOfLikes: 0,
																likedByUser: !1,
															},
												}
											: e
									),
								},
							};
						},
						[n.EW9]: (e, t) => {
							const { resourceType: i, resourceId: n, errorReachLimit: a } = t,
								s = `${i}/${n}`;
							return {
								...e,
								uiAddCommentState: {
									...e.uiAddCommentState,
									[s]: { submitting: !1, error: !0 },
								},
								showCommentError: !a,
								showGeneralErrorAlert: !a,
							};
						},
						[n.SUC]: (e, t) => {
							const { conversationCommentUuid: i } = t;
							return {
								...e,
								uiEditCommentState: {
									...e.uiEditCommentState,
									[i]: { editing: !0, editSuccess: !1, editError: !1 },
								},
								showCommentError: !1,
								showGeneralErrorAlert: !1,
							};
						},
						[n.Hgi]: (e, t) => {
							const {
									resourceType: i,
									resourceId: n,
									newComment: a,
									conversationCommentUuid: s,
								} = t,
								r = `${i}/${n}`;
							return {
								...e,
								uiEditCommentState: {
									...e.uiEditCommentState,
									[s]: { editing: !1, editSuccess: !0, editError: !1 },
								},
								comments: {
									...e.comments,
									[r]: Array.isArray(e.comments[r])
										? e.comments[r].map((e) =>
												e.conversationCommentPk === a.conversationCommentPk
													? a
													: e
											)
										: e.comments[r],
								},
								highlightedComments: {
									...e.highlightedComments,
									[r]: Array.isArray(e.highlightedComments[r])
										? e.highlightedComments[r].map((e) =>
												e.conversationCommentPk === a.conversationCommentPk
													? a
													: e
											)
										: e.highlightedComments[r],
								},
							};
						},
						[n.dy6]: (e, t) => {
							const { conversationCommentUuid: i } = t;
							return {
								...e,
								uiEditCommentState: {
									...e.uiEditCommentState,
									[i]: { editing: !1, editSuccess: !1, editError: !0 },
								},
								showCommentError: !0,
								showGeneralErrorAlert: !0,
							};
						},
						[n.qUx]: (e, t) => {
							const { resourceType: i, resourceId: n } = t,
								a = `${i}/${n}`,
								{ conversationUuid: s, conversationCommentUuid: r } = t.comment,
								o = `${s}/${r}`;
							return {
								...e,
								uiCommentState: {
									...e.uiCommentState,
									[a]: {
										...e.uiCommentState[a],
										[o]: { deleting: !0, error: !1 },
									},
								},
								showGeneralErrorAlert: !1,
							};
						},
						[n.Iln]: (e, t) => {
							const { resourceType: i, resourceId: n, comment: s } = t,
								o = `${i}/${n}`,
								{ conversationUuid: l, conversationCommentUuid: c } = s,
								d = `${l}/${c}`,
								u = (e.comments[o] || []).filter(
									(e) => e.conversationCommentUuid !== c
								),
								p = (0, r.u)(e.uiCommentState[o], d),
								y = (0, r.u)(e.commentLikers[o], c),
								h = (e.highlightedComments[o] || []).filter(
									(e) => e.conversationCommentUuid !== c
								);
							return {
								...e,
								comments: { ...e.comments, [o]: u },
								uiCommentState: { ...e.uiCommentState, [o]: p },
								commentLikers: { ...e.commentLikers, [o]: y },
								allFeeds: {
									...e.allFeeds,
									list: e.allFeeds.list.map((e) => {
										const { data: t, groupFeedType: i } = e;
										return i === a.Ob.activity && t.activityId === n
											? {
													...e,
													data: {
														...t,
														numberOfActivityComments:
															t.numberOfActivityComments - 1,
													},
												}
											: i === a.Ob.post && t.uuid === n
												? {
														...e,
														data: {
															...t,
															conversationDTO: {
																...t.conversationDTO,
																numberOfComments:
																	t.conversationDTO.numberOfComments - 1,
															},
														},
													}
												: e;
									}),
								},
								activityFeed: {
									...e.activityFeed,
									list: e.activityFeed.list.map((e) =>
										e.activityId === n
											? {
													...e,
													numberOfActivityComments:
														e.numberOfActivityComments - 1,
												}
											: e
									),
								},
								groupPosts: {
									...e.groupPosts,
									list: e.groupPosts.list.map((e) =>
										e.uuid === n
											? {
													...e,
													conversationDTO: {
														...e.conversationDTO,
														numberOfComments:
															e.conversationDTO.numberOfComments - 1,
													},
												}
											: e
									),
								},
								highlightedComments: { ...e.highlightedComments, [o]: h },
							};
						},
						[n.Q1o]: (e, t) => {
							const { resourceType: i, resourceId: n } = t,
								a = `${i}/${n}`,
								{ conversationUuid: s, conversationCommentUuid: r } = t.comment,
								o = `${s}/${r}`;
							return {
								...e,
								uiCommentState: {
									...e.uiCommentState,
									[a]: {
										...e.uiCommentState[a],
										[o]: { deleting: !0, error: !1 },
									},
								},
								showGeneralErrorAlert: !0,
							};
						},
						[n.mos]: (e, t) => {
							const { resourceType: i, resourceId: n } = t,
								a = `${i}/${n}`;
							return {
								...e,
								conversationLikers: {
									...e.conversationLikers,
									[a]: {
										...e.conversationLikers[a],
										fetching: !0,
										success: !1,
										error: !1,
									},
								},
							};
						},
						[n.HhY]: (e, t) => {
							const { resourceType: i, resourceId: n } = t,
								a = `${i}/${n}`;
							return {
								...e,
								conversationLikers: {
									...e.conversationLikers,
									[a]: {
										...e.conversationLikers[a],
										likers: t.likers,
										fetching: !1,
										success: !t.error,
										error: t.error,
									},
								},
							};
						},
						[n.DyE]: (e, t) => {
							const { resourceType: i, resourceId: n } = t,
								a = `${i}/${n}`;
							return {
								...e,
								conversationLikers: {
									...e.conversationLikers,
									[a]: { ...e.conversationLikers[a], updating: !0 },
								},
								showGeneralErrorAlert: !1,
							};
						},
						[n.luh]: (e, t) => {
							const {
									resourceType: i,
									resourceId: n,
									like: s,
									likerInfo: r,
									conversationUuid: o,
									error: l,
									errorReachLimit: c,
								} = t,
								d = `${i}/${n}`;
							if (l)
								return {
									...e,
									conversationLikers: {
										...e.conversationLikers,
										[d]: {
											...e.conversationLikers[d],
											updating: !1,
											success: !1,
											error: !0,
										},
									},
									showGeneralErrorAlert: !c,
								};
							const u = (e, t) => {
									const {
											numberOfActivityLikes: i,
											activityLikeDisplayNames: n,
											activityLikeFullNames: a,
											activityLikeProfileImageUrls: r,
										} = e,
										{
											profileImageUrlSmall: l,
											fullName: c,
											displayName: d,
										} = t;
									return {
										likedByUser: s,
										numberOfActivityLikes: s ? i + 1 : i - 1,
										activityLikeDisplayNames: s
											? (n || []).concat(d)
											: n.filter((e) => e !== d),
										activityLikeFullNames: s
											? (a || []).concat(c)
											: a.filter((e) => e !== c),
										activityLikeProfileImageUrls: s
											? (r || []).concat(l)
											: r.filter((e) => e !== l),
										conversationUuid: o || e.conversationUuid,
									};
								},
								p = (e, t) => {
									let i, n;
									const {
											profileImageUrlSmall: a,
											fullName: r,
											displayName: l,
										} = t,
										c =
											(e.conversationDTO && e.conversationDTO.numberOfLikes) ||
											0;
									return (
										s
											? ((i = e.conversationDTO
													? {
															...e.conversationDTO,
															numberOfLikes: c + 1,
															likedByUser: !0,
														}
													: {
															conversationUuid: o,
															numberOfComments: 0,
															numberOfLikes: 1,
															likedByUser: !0,
														}),
												(n = {
													likerDisplayNames: (
														(e.conversationLikersDTO &&
															e.conversationLikersDTO.likerDisplayNames) ||
														[]
													).concat(l),
													likerFullNames: (
														(e.conversationLikersDTO &&
															e.conversationLikersDTO.likerFullNames) ||
														[]
													).concat(r),
													likerProfileImageUrls: (
														(e.conversationLikersDTO &&
															e.conversationLikersDTO.likerProfileImageUrls) ||
														[]
													).concat(a),
												}))
											: ((i = {
													...e.conversationDTO,
													numberOfLikes: c - 1,
													likedByUser: !1,
												}),
												(n = {
													...e.conversationLikersDTO,
													likerDisplayNames:
														e.conversationLikersDTO.likerDisplayNames.filter(
															(e) => e !== l
														),
													likerFullNames:
														e.conversationLikersDTO.likerFullNames.filter(
															(e) => e !== r
														),
													likerProfileImageUrls:
														e.conversationLikersDTO.likerProfileImageUrls.filter(
															(e) => e !== a
														),
												})),
										{ ...e, conversationDTO: i, conversationLikersDTO: n }
									);
								};
							return {
								...e,
								conversationLikers: {
									...e.conversationLikers,
									[d]: {
										...e.conversationLikers[d],
										updating: !1,
										success: !0,
										error: !1,
									},
								},
								allFeeds: {
									...e.allFeeds,
									list: e.allFeeds.list.map((e) => {
										const { data: t, groupFeedType: i } = e;
										return i === a.Ob.activity && t.activityId === n
											? { ...e, data: { ...t, ...u(t, r) } }
											: i === a.Ob.post && t.uuid === n
												? { ...e, data: { ...t, ...p(t, r) } }
												: e;
									}),
								},
								activityFeed: {
									...e.activityFeed,
									list: e.activityFeed.list.map((e) =>
										e.activityId === n ? { ...e, ...u(e, r) } : e
									),
								},
								groupPosts: {
									...e.groupPosts,
									list: e.groupPosts.list.map((e) =>
										e.uuid === n ? { ...e, ...p(e, r) } : e
									),
								},
							};
						},
						[n.Ycw]: (e, t) => {
							const {
									resourceType: i,
									resourceId: n,
									conversationCommentUuid: a,
								} = t,
								s = `${i}/${n}`;
							let r = {};
							return (
								e.commentLikers[s] && (r = e.commentLikers[s][a] || {}),
								{
									...e,
									commentLikers: {
										...e.commentLikers,
										[s]: {
											...e.commentLikers[s],
											[a]: { ...r, fetching: !0, success: !1, error: !1 },
										},
									},
								}
							);
						},
						[n.f6$]: (e, t) => {
							const {
									resourceType: i,
									resourceId: n,
									conversationCommentUuid: a,
								} = t,
								s = `${i}/${n}`;
							let r = {};
							return (
								e.commentLikers[s] && (r = e.commentLikers[s][a] || {}),
								{
									...e,
									commentLikers: {
										...e.commentLikers,
										[s]: {
											...e.commentLikers[s],
											[a]: {
												...r,
												likers: t.likers,
												fetching: !1,
												success: !t.error,
												error: t.error,
											},
										},
									},
								}
							);
						},
						[n.$qU]: (e, t) => {
							const {
									resourceType: i,
									resourceId: n,
									conversationCommentUuid: a,
								} = t,
								s = `${i}/${n}`;
							let r = {};
							return (
								e.commentLikers[s] && (r = e.commentLikers[s][a] || {}),
								{
									...e,
									commentLikers: {
										...e.commentLikers,
										[s]: { ...e.commentLikers[s], [a]: { ...r, updating: !0 } },
									},
									showGeneralErrorAlert: !1,
								}
							);
						},
						[n.HNN]: (e, t) => {
							const {
									resourceType: i,
									resourceId: n,
									conversationCommentUuid: a,
									like: s,
									likeDto: r,
									error: o,
									errorReachLimit: l,
								} = t,
								c = `${i}/${n}`;
							let d = {};
							if ((e.commentLikers[c] && (d = e.commentLikers[c][a] || {}), o))
								return {
									...e,
									commentLikers: {
										...e.commentLikers,
										[c]: {
											...e.commentLikers[c],
											[a]: { ...d, updating: !1, error: o },
										},
									},
									showGeneralErrorAlert: !l,
								};
							const u = Array.isArray(d.likers),
								p =
									Array.isArray(e.comments[c]) &&
									e.comments[c].some((e) => e.conversationCommentUuid === a),
								y =
									Array.isArray(e.highlightedComments[c]) &&
									e.highlightedComments[c].some(
										(e) => e.conversationCommentUuid === a
									);
							let h = [];
							u &&
								(h = s
									? d.likers.concat(r)
									: d.likers.filter(
											(t) => t.displayName !== e.viewerSocialProfile.displayName
										));
							let g = e.comments;
							p &&
								(g = {
									...e.comments,
									[c]: e.comments[c].map((e) =>
										e.conversationCommentUuid === a
											? {
													...e,
													likedByUser: s,
													numberOfLikes: s
														? e.numberOfLikes + 1
														: e.numberOfLikes - 1,
												}
											: e
									),
								});
							let m = e.highlightedComments;
							return (
								y &&
									(m = {
										...e.highlightedComments,
										[c]: e.highlightedComments[c].map((t) =>
											t.conversationCommentUuid === a
												? {
														...t,
														likedByUser: s,
														numberOfLikes: s
															? t.numberOfLikes + 1
															: t.numberOfLikes - 1,
														likerFullNames: s
															? (t.likerFullNames || []).concat(
																	e.viewerSocialProfile.userProfileFullName
																)
															: (t.likerFullNames || []).filter(
																	(t) =>
																		t !==
																		e.viewerSocialProfile.userProfileFullName
																),
													}
												: t
										),
									}),
								{
									...e,
									commentLikers: {
										...e.commentLikers,
										[c]: {
											...e.commentLikers[c],
											[a]: { ...d, updating: !1, error: o, likers: h },
										},
									},
									comments: g,
									highlightedComments: m,
								}
							);
						},
						[n.KRD]: (e) => ({
							...e,
							allFeeds: { ...e.allFeeds, fetching: !0, success: !1, error: !1 },
							showGeneralErrorAlert: !1,
						}),
						[n.fdE]: (e, { list: t, hasMore: i, cursor: n, daysLimit: s }) => {
							const r = { ...e.highlightedComments };
							return (
								t.forEach((e) => {
									const { data: t, groupFeedType: i } = e,
										n = i === a.Ob.activity,
										s = n ? a.kq.activity : a.kq.post,
										o = n ? t.activityId : t.uuid,
										l = n ? t.highlightedComment : t.highlightedCommentDTO;
									l && (r[`${s}/${o}`] = [l]);
								}),
								{
									...e,
									allFeeds: {
										...e.allFeeds,
										fetching: !1,
										success: !0,
										error: !1,
										list: [...e.allFeeds.list, ...t],
										hasMore: i,
										cursor: n,
										daysLimit: s,
									},
									highlightedComments: r,
								}
							);
						},
						[n.J9e]: (e) => ({
							...e,
							allFeeds: { ...e.allFeeds, fetching: !1, success: !1, error: !0 },
							showGeneralErrorAlert: !0,
						}),
						[n.l78]: (e) => ({
							...e,
							activityFeed: {
								...e.activityFeed,
								fetching: !0,
								success: !1,
								error: !1,
							},
							showGeneralErrorAlert: !1,
						}),
						[n.zik]: (e, { list: t, hasMore: i, cursor: n, daysLimit: s }) => {
							const r = { ...e.highlightedComments };
							return (
								t.forEach((e) => {
									const { highlightedComment: t, activityId: i } = e,
										n = `${a.kq.activity}/${i}`;
									t && (r[n] = [t]);
								}),
								{
									...e,
									activityFeed: {
										...e.activityFeed,
										fetching: !1,
										success: !0,
										error: !1,
										list: [...e.activityFeed.list, ...t],
										hasMore: i,
										cursor: n,
										daysLimit: s,
									},
									highlightedComments: r,
								}
							);
						},
						[n.PXt]: (e) => ({
							...e,
							activityFeed: {
								...e.activityFeed,
								fetching: !1,
								success: !1,
								error: !0,
							},
							showGeneralErrorAlert: !0,
						}),
						[n.h_3]: (e) => ({
							...e,
							activityFeed: {
								...e.activityFeed,
								fetching: !0,
								error: !1,
								list: l.activityFeed.list,
							},
						}),
						[n.oMJ]: (e, { activity: t }) => {
							const i = { ...e.highlightedComments },
								{ highlightedComment: n, activityId: s } = t,
								r = `${a.kq.activity}/${s}`;
							return (
								n && (i[r] = [n]),
								{
									...e,
									activityFeed: {
										...e.activityFeed,
										list: [t],
										fetching: !1,
										error: !1,
									},
									highlightedComments: i,
								}
							);
						},
						[n.yVf]: (e, { errorStatus: t }) => ({
							...e,
							activityFeed: { ...e.activityFeed, fetching: !1, error: !0 },
							singlePageErrorStatus: t,
						}),
						[n.Z30]: (e, t) => {
							const { member: i, groupAnnouncement: n } = t,
								s = {
									connectionRequestId: null,
									connectionRequestorId: null,
									connectionStatus: 0,
									userProfileId: i.userProfileId,
									groupRole: a.Bw.MEMBER,
								};
							return {
								...e,
								groupMembers: [...e.groupMembers, i],
								groupUserConnections: [...e.groupUserConnections, s],
								group: { ...e.group, membershipStatus: a.Bw.MEMBER },
								groupAnnouncement: n,
							};
						},
						[n.BhG]: (
							e,
							{ members: t, groupAnnouncement: i, userConnection: n }
						) => ({
							...e,
							groupMembers: t,
							groupUserConnections: [...e.groupUserConnections, n],
							group: { ...e.group, membershipStatus: a.Bw.MEMBER },
							groupAnnouncement: i,
						}),
						[n.pCV]: (e, t) => ({
							...e,
							groupMemberRequest: t.groupMemberRequest,
						}),
						[n.AXw]: (e, t) => ({ ...e, groupMembers: t.groupMembers || [] }),
						[n.hw8]: (e) => {
							const {
									viewerSocialProfile: t,
									groupMembers: i,
									groupUserConnections: n,
								} = e,
								{ profileId: r } = t,
								o = (e, t) =>
									t.groupRole === a.Bw.OWNER ||
									(t.groupRole === a.Bw.ADMIN && e.groupRole === a.Bw.MEMBER)
										? 1
										: e.groupRole === a.Bw.OWNER ||
											  (e.groupRole === a.Bw.ADMIN &&
													t.groupRole === a.Bw.MEMBER)
											? -1
											: 0;
							return !(!t || !r)
								? {
										...e,
										groupViewerMember: i.filter((e) => e.userProfileId === r),
										groupConnectionMembers: i
											.filter((e) => {
												const { connectionStatus: t } = n.find(
													(t) => t.userProfileId === e.userProfileId
												);
												return (0, s.Cx)(t);
											})
											.sort(o),
										groupNonConnectionMembers: i
											.filter((e) => r !== e.userProfileId)
											.filter((e) => {
												const { connectionStatus: t } = n.find(
													(t) => t.userProfileId === e.userProfileId
												);
												return !(0, s.Cx)(t);
											})
											.sort(o),
									}
								: {
										...e,
										groupViewerMember: [],
										groupConnectionMembers: [],
										groupNonConnectionMembers: i.sort(o),
									};
						},
						[n.Sir]: (e, t) => ({
							...e,
							groupUserConnections: t.groupUserConnections,
						}),
						[n.Y17]: (e, t) => {
							const { groupUserConnection: i } = t;
							return {
								...e,
								groupUserConnections: e.groupUserConnections.map((e) =>
									e.userProfileId === i.userProfileId ? i : e
								),
							};
						},
						[n.D9N]: (e, t) => {
							const i = t.groupRejectedInvites;
							return (
								i.sort((e, t) => t.inviteDate - e.inviteDate),
								{ ...e, groupInvites: t.groupInvites, groupRejectedInvites: i }
							);
						},
						[n.CkZ]: (e, t) =>
							t.error
								? e
								: {
										...e,
										groupInvites: e.groupInvites.filter(
											(e) => e.inviteeId !== t.connection.userId
										),
									},
						[n.xKC]: (e, t) =>
							t.error
								? e
								: { ...e, groupInvites: [...e.groupInvites, t.newInvite] },
						[n.mer]: (e, t) => {
							const { userProfileId: i } = t;
							return {
								...e,
								groupMembers: e.groupMembers.filter(
									(e) => e.userProfileId !== i
								),
								groupUserConnections: e.groupUserConnections.filter(
									(e) => e.userProfileId !== i
								),
								groupConnectionMembers: e.groupConnectionMembers.filter(
									(e) => e.userProfileId !== i
								),
								groupNonConnectionMembers: e.groupNonConnectionMembers.filter(
									(e) => e.userProfileId !== i
								),
							};
						},
						[n.ewP]: (e) => e,
						[n.SeH]: (e, t) => {
							const { updatedMember: i } = t;
							return {
								...e,
								groupMembers: e.groupMembers.map((e) =>
									e.userProfileId === i.userProfileId ? i : e
								),
								group: {
									...e.group,
									membershipStatus:
										i.userProfileId === e.viewerSocialProfile.profileId
											? i.groupRole
											: e.group.membershipStatus,
								},
							};
						},
						[n.K2i]: (e) => e,
						[n.YfN]: (e, t) => {
							const { newGroup: i } = t;
							return {
								...e,
								group: i,
								groupMembers: e.groupMembers.map((t) =>
									t.userProfileId === i.ownerId
										? { ...t, groupRole: a.Bw.OWNER }
										: t.userProfileId === e.viewerSocialProfile.profileId
											? { ...t, groupRole: a.Bw.ADMIN }
											: t
								),
							};
						},
						[n.IVz]: (e) => e,
						[n.vbd]: (e) => ({
							...e,
							challenges: {
								...e.challenges,
								fetching: !0,
								fetchSuccess: !1,
								fetchError: !1,
								nonCompleted: [],
								userJoined: [],
							},
						}),
						[n.siJ]: (e, t) => {
							const { nonCompleted: i, userJoined: n } = t;
							return {
								...e,
								challenges: {
									...e.challenges,
									fetching: !1,
									fetchSuccess: !0,
									fetchError: !1,
									nonCompleted: i,
									userJoined: n,
								},
							};
						},
						[n.YqF]: (e) => ({
							...e,
							challenges: {
								...e.challenges,
								fetching: !1,
								fetchSuccess: !1,
								fetchError: !0,
							},
						}),
						[n.NYb]: (e) => ({
							...e,
							challenges: {
								...e.challenges,
								updateSuccess: !1,
								updateError: !1,
								deleteSuccess: !1,
								deleteError: !1,
							},
						}),
						[n.wUi]: (e, { newChallenge: t }) => ({
							...e,
							challenges: {
								...e.challenges,
								nonCompleted: e.challenges.nonCompleted.map((e) =>
									e.uuid === t.uuid ? t : e
								),
								updateSuccess: !0,
								updateError: !1,
							},
						}),
						[n.CfB]: (e) => ({
							...e,
							challenges: {
								...e.challenges,
								updateSuccess: !1,
								updateError: !0,
							},
						}),
						[n.DQW]: (e) => ({
							...e,
							challenges: {
								...e.challenges,
								updateSuccess: !1,
								updateError: !1,
								deleteSuccess: !1,
								deleteError: !1,
							},
						}),
						[n.mi$]: (e, { uuid: t }) => ({
							...e,
							challenges: {
								...e.challenges,
								nonCompleted: e.challenges.nonCompleted.filter(
									(e) => e.uuid !== t
								),
								prevUuid: null,
								currentUuid: null,
								nextUuid: null,
								deleteSuccess: !0,
								deleteError: !1,
							},
						}),
						[n.KsP]: (e) => ({
							...e,
							challenges: {
								...e.challenges,
								deleteSuccess: !1,
								deleteError: !0,
							},
						}),
						[n.wpS]: (e, { uuid: t }) => {
							if (
								!e.challenges.nonCompleted.some((e) => e.uuid === t) &&
								!e.challenges.userJoined.some((e) => e.uuid === t)
							)
								return e;
							let i,
								n,
								a = null,
								s = null;
							return (
								(i = e.challenges.nonCompleted.findIndex((e) => e.uuid === t)),
								-1 !== i
									? (n = [...e.challenges.nonCompleted])
									: ((i = e.challenges.userJoined.findIndex(
											(e) => e.uuid === t
										)),
										(n = [...e.challenges.userJoined])),
								i > 0 && (a = n[i - 1].uuid),
								i !== n.length - 1 && (s = n[i + 1].uuid),
								{
									...e,
									challenges: {
										...e.challenges,
										prevUuid: a,
										currentUuid: t,
										nextUuid: s,
										view: o.detail,
										updateSuccess: !1,
										updateError: !1,
										deleteSuccess: !1,
										deleteError: !1,
									},
								}
							);
						},
						[n.yFL]: (e, { view: t }) => ({
							...e,
							challenges: { ...e.challenges, view: t },
						}),
						[n.UE1]: (e) => ({
							...e,
							challenges: {
								...e.challenges,
								leaderboardFetching: !0,
								leaderboardFetchSuccess: !1,
								leaderboardFetchError: !1,
							},
						}),
						[n.tWs]: (e, { data: t }) => ({
							...e,
							challenges: {
								...e.challenges,
								leaderboard: t,
								leaderboardFetching: !1,
								leaderboardFetchSuccess: !0,
								leaderboardFetchError: !1,
							},
						}),
						[n.d7H]: (e) => ({
							...e,
							challenges: {
								...e.challenges,
								leaderboardFetching: !1,
								leaderboardFetchSuccess: !1,
								leaderboardFetchError: !0,
							},
						}),
						[n.eoS]: (e) => ({ ...e, showGeneralErrorAlert: !1 }),
						[n.BVL]: (e) => ({
							...e,
							allFeeds: {
								...e.allFeeds,
								list: e.allFeeds.list.map((e) => ({
									...e,
									data: { ...e.data, shouldAnimateUp: !1 },
								})),
							},
							groupPosts: {
								...e.groupPosts,
								list: e.groupPosts.list.map((e) => ({
									...e,
									shouldAnimateUp: !1,
								})),
							},
						}),
						[n.KN8]: (e, { file: t, imageB64: i, index: n, isRetry: a }) => ({
							...e,
							groupPostImages: a
								? e.groupPostImages.map((e) =>
										e.index === n
											? { ...e, uploading: !0, success: !1, error: !1 }
											: e
									)
								: e.groupPostImages.concat({
										index: n,
										file: t,
										fileName: t.name,
										imageB64: i,
										uploading: !0,
										success: !1,
										error: !1,
									}),
							groupPostImageEditMode: !0,
							groupPostImageUploading: !0,
							groupPostImageLastIndex: a ? e.groupPostImageLastIndex : n,
						}),
						[n.LVS]: (e, { index: t, postImage: i }) => {
							const n = e.groupPostImages.map((e) =>
									e.index === t
										? {
												...e,
												uploading: !1,
												success: !0,
												error: !1,
												postImage: i,
											}
										: e
								),
								a = n.some((e) => e.uploading),
								s = n.some((e) => e.error);
							return {
								...e,
								groupPostImages: n,
								groupPostImageUploading: a,
								groupPostHasValidImage: !0,
								groupPostHasFailedImage: s,
							};
						},
						[n.nsX]: (e, { index: t }) => {
							const i = e.groupPostImages.map((e) =>
									e.index === t
										? { ...e, uploading: !1, success: !1, error: !0 }
										: e
								),
								n = i.some((e) => e.uploading);
							return {
								...e,
								groupPostImages: i,
								groupPostImageUploading: n,
								showImageUploadRetryHint: !0,
								groupPostHasFailedImage: !0,
							};
						},
						[n.IY0]: (e, { index: t }) => {
							const i = e.groupPostImages.filter((e) => e.index !== t),
								n = i.some((e) => e.uploading),
								a = i.some((e) => !!e.postImage);
							return {
								...e,
								groupPostImages: i,
								groupPostImageUploading: n,
								groupPostHasValidImage: a,
							};
						},
						[n.XWB]: (e) => ({
							...e,
							groupPostImages: [],
							groupPostImageEditMode: !1,
							groupPostImageUploading: !1,
							groupPostHasValidImage: !1,
							groupPostHasFailedImage: !1,
							groupPostImageLastIndex: null,
						}),
						[n.G7X]: (e, { images: t }) => ({ ...e, groupPostImages: t }),
						[n.nY_]: (e, { error: t }) => ({ ...e, showPhotoLimitError: t }),
						[n.hkF]: (e) => ({ ...e, showImageUploadRetryHint: !1 }),
						[n.oS3]: (e) => ({ ...e, postingGroupPostError: !1 }),
						[n.hRY]: (e) => ({ ...e, postingGroupAnnouncementError: !1 }),
						[n.Umf]: (
							e,
							{ group: t, viewerSocialProfile: i, focusCommentUuid: n }
						) => ({
							...e,
							group: t,
							viewerSocialProfile: i,
							focusCommentUuid: n,
							initializeSinglePageDone: !0,
						}),
						[n.eVc]: (e) => ({
							...e,
							initializeSinglePageError: !0,
							initializeSinglePageDone: !0,
						}),
						[n.xUB]: (e) => ({ ...e, focusCommentUuid: null }),
						[n.qvK]: (e, { showAlert: t }) => ({
							...e,
							showGroupPageErrorAlert: t,
						}),
						[n.Fkv]: (e, t) => {
							const { activityId: i, imageUuid: n } = t;
							let a = e.activityFeed.list || [],
								s = e.allFeeds.list || [];
							const r = a.findIndex((e) => e.activityId === i),
								o = s.findIndex((e) => e.data.activityId === i);
							if (r < 0 && o < 0) return e;
							if (r >= 0 && a[r].activityImages) {
								const e = { ...a[r] },
									t = e.activityImages.filter((e) => e.imageId !== n);
								(a = a.slice()), (e.activityImages = t), a.splice(r, 1, e);
							}
							if (o >= 0 && s[o].data.activityImages) {
								const e = { ...s[o] },
									t = e.data.activityImages.filter((e) => e.imageId !== n);
								(s = s.slice()), (e.data.activityImages = t), s.splice(o, 1, e);
							}
							return {
								...e,
								activityFeed: { ...e.activityFeed, list: a },
								allFeeds: { ...e.allFeeds, list: s },
							};
						},
						[n.y_2]: (e, t) => {
							const { postUuid: i, imageUuid: n } = t;
							let a = e.groupPosts.list || [],
								s = e.allFeeds.list || [];
							const r = a.findIndex((e) => e.uuid === i),
								o = s.findIndex((e) => e.data.uuid === i);
							if (r < 0 && o < 0) return e;
							if (r >= 0 && a[r].postImages) {
								const e = { ...a[r] },
									t = e.postImages.filter((e) => e.imageUuid !== n);
								(a = a.slice()), (e.postImages = t), a.splice(r, 1, e);
							}
							if (o >= 0 && s[o].data.postImages) {
								const e = { ...s[o] },
									t = e.data.postImages.filter((e) => e.imageUuid !== n);
								(s = s.slice()), (e.data.postImages = t), s.splice(o, 1, e);
							}
							return {
								...e,
								groupPosts: { ...e.groupPosts, list: a },
								allFeeds: { ...e.allFeeds, list: s },
							};
						},
						[n.x4Q]: (e) => ({
							...e,
							group: {
								...e.group,
								profileImageUrlLarge: null,
								profileImageUrlMedium: null,
								profileImageUrlSmall: null,
								defaultImageName: null,
							},
						}),
						[n.xex]: (e, { group: t }) => ({
							...e,
							group: t,
							tab: a.rH.FEED,
							allFeeds: l.allFeeds,
							activityFeed: l.activityFeed,
							groupPosts: l.groupPosts,
							showChangesSaved: !0,
						}),
						[n.uIT]: (e) => ({ ...e, showChangesSaved: !1 }),
						[n.dbk]: (
							e,
							{ newsPostUuid: t, newsPostHasImageId: i, deletePost: n }
						) => {
							if (n) return e;
							const a = (e.groupPosts.list || []).map(
									(e) => (
										e.uuid === t &&
											(e.postImages = e.postImages.filter(
												(e) => e.newsPostHasImageId !== i
											)),
										e
									)
								),
								s = (e.allFeeds.list || []).map(
									(e) => (
										e.data.uuid === t &&
											(e.data.postImages = e.data.postImages.filter(
												(e) => e.newsPostHasImageId !== i
											)),
										e
									)
								);
							return {
								...e,
								groupPosts: { ...e.groupPosts, list: a },
								allFeeds: { ...e.allFeeds, list: s },
							};
						},
						[n.JIv]: (e) => ({ ...e, showGeneralErrorAlert: !0 }),
					};
				function ue(e = l, t = {}) {
					const i = de[t.type];
					return i ? i(e, t) : e;
				}
			},
			847398: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => A,
					I6: () => u,
					Mx: () => h,
					a0: () => c,
					c0: () => l,
					gy: () => o,
					hf: () => y,
					ll: () => g,
					wG: () => d,
					yZ: () => p,
				});
				var n = i(316550),
					a = i(565359);
				const s = {
						fetching: !1,
						error: !1,
						userCourses: [],
						groupCourses: [],
						groupCourseDetail: {},
						deleting: [],
						deleteFailed: [],
						sendingToDevice: [],
						lastDeleteCourseName: '',
					},
					r = (e) => e.groupPageCourse,
					o = (e) => r(e).fetching,
					l = (e) => r(e).userCourses,
					c = (e) => r(e).groupCourses,
					d = (e, { courseId: t }) => {
						const i = r(e).groupCourseDetail[t];
						return !i || i.fetching;
					},
					u = (e, { courseId: t }) => {
						const i = r(e).groupCourseDetail[t];
						return i ? i.data : null;
					},
					p = (e, { courseId: t }) => r(e).deleting.includes(t),
					y = (e, { courseId: t }) => r(e).sendingToDevice.includes(t),
					h = (e) => r(e).lastDeleteCourseName,
					g = (e) => {
						const t = r(e);
						if (!t.deleteFailed.length) return '';
						const i = t.deleteFailed[0],
							n = t.groupCourses.find((e) => e.courseId === i);
						return n ? n.courseName : '';
					},
					m = {
						[n.LKb]: (e) => ({ ...e, fetching: !0 }),
						[n.cnh]: (e, t) => ({
							...e,
							fetching: !1,
							error: t.error,
							userCourses: t.userCourses,
							groupCourses: t.groupCourses,
						}),
						[n.F1u]: (e, t) => ({
							...e,
							groupCourses: [...e.groupCourses, t.newCourse],
						}),
						[n.mEv]: (e, t) => ({
							...e,
							deleting: [...e.deleting, t.groupCourseId],
							deleteFailed: e.deleteFailed.filter((e) => e !== t.groupCourseId),
						}),
						[n.pIF]: (e, t) => {
							const i = e.deleting.filter((e) => e !== t.groupCourseId);
							if (t.error)
								return {
									...e,
									deleting: i,
									deleteFailed: [...e.deleteFailed, t.groupCourseId],
								};
							const n = e.groupCourses.find(
								(e) => e.courseId === t.groupCourseId
							);
							return {
								...e,
								deleting: i,
								deleteFailed: e.deleteFailed.filter(
									(e) => e !== t.groupCourseId
								),
								groupCourses: e.groupCourses.filter(
									(e) => e.courseId !== t.groupCourseId
								),
								groupCourseDetail: (0, a.u)(
									e.groupCourseDetail,
									t.groupCourseId
								),
								lastDeleteCourseName: (n && n.courseName) || '',
							};
						},
						[n.jh5]: (e, t) => ({
							...e,
							groupCourseDetail: {
								...e.groupCourseDetail,
								[t.groupCourseId]: {
									...e.groupCourseDetail[t.groupCourseId],
									error: !1,
									fetching: !0,
								},
							},
						}),
						[n.i1H]: (e, t) => ({
							...e,
							groupCourseDetail: {
								...e.groupCourseDetail,
								[t.groupCourseId]: {
									...e.groupCourseDetail[t.groupCourseId],
									error: t.error,
									fetching: !1,
									data: t.groupCourseDetail,
								},
							},
						}),
						[n.dhA]: (e) => ({ ...e, lastDeleteCourseName: '' }),
						[n.hTv]: (e) => ({ ...e, deleteFailed: e.deleteFailed.slice(1) }),
						[n._RB]: () => s,
					};
				function A(e = s, t = {}) {
					const i = m[t.type];
					return i ? i(e, t) : e;
				}
			},
			565359: (e, t, i) => {
				'use strict';
				function n(e, t) {
					if (!e || !e[t]) return e;
					const { [t]: i, ...n } = e;
					return n;
				}
				i.d(t, { u: () => n });
			},
			919594: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => h,
					RK: () => o,
					TB: () => l,
					Zi: () => c,
					yZ: () => d,
				});
				var n = i(316550),
					a = i(568574);
				const s = {
						searching: !1,
						error: !1,
						keyword: '',
						list: [],
						hasMore: !1,
						nextCursor: 0,
						processing: [],
						showSearchHint: !1,
						showNoResult: !1,
						inviteErrorDialog: { open: !1, errorType: '', inviteDTO: null },
					},
					r = (e) => e.groupPageInvite,
					o = (e) => r(e).keyword,
					l = (e) => r(e).nextCursor,
					c = (e, { displayName: t }) => r(e).processing.includes(t),
					d = (e) => r(e).inviteErrorDialog,
					u = (e, t) => ({
						...e,
						processing: [...e.processing, t.connection.displayName],
					}),
					p = (e, t) => ({
						...e,
						processing: e.processing.filter(
							(e) => e !== t.connection.displayName
						),
					}),
					y = {
						[n.y9K]: (e, t) => {
							const { keyword: i, reset: n } = t,
								r = 'string' === typeof i ? i : e.keyword;
							return {
								...e,
								searching: r.length >= a.w4,
								error: !1,
								hasMore: !n && e.hasMore,
								keyword: r,
								list: n ? s.list : e.list,
								showSearchHint: r.length < a.w4,
								showNoResult: !1,
							};
						},
						[n.oDQ]: (e, t) => {
							const { error: i, list: n, hasMore: a, nextCursor: s } = t;
							if (i) return { ...e, searching: !1, error: !0 };
							const r = e.list.concat(n);
							return {
								...e,
								searching: !1,
								error: !1,
								list: r,
								hasMore: a,
								nextCursor: s,
								showNoResult: 0 === r.length,
							};
						},
						[n.HNn]: (e, t) => {
							const i = e.list.findIndex(
								(e) => e.userId === t.connectionStatus.userProfileId
							);
							if (i < 0) return e;
							const n = e.list.slice(0, i),
								a = e.list.slice(i + 1),
								s = { ...e.list[i], ...t.connectionStatus };
							return { ...e, list: [...n, s, ...a] };
						},
						[n.dMC]: u,
						[n.e5G]: p,
						[n.jcG]: u,
						[n.CkZ]: p,
						[n.MTJ]: u,
						[n.xKC]: p,
						[n.NOF]: (e, t) => ({
							...e,
							inviteErrorDialog: {
								open: t.open,
								errorType: t.open ? t.errorType : e.inviteErrorDialog.errorType,
								inviteDTO: t.open ? t.inviteDTO : e.inviteErrorDialog.inviteDTO,
							},
						}),
						[n._RB]: () => s,
					};
				function h(e = s, t = {}) {
					const i = y[t.type];
					return i ? i(e, t) : e;
				}
			},
			792412: (e, t, i) => {
				'use strict';
				i.d(t, {
					$Y: () => r,
					Ay: () => u,
					DA: () => l,
					ZP: () => o,
					lL: () => c,
				});
				var n = i(316550);
				const a = {
						fetching: !0,
						error: !1,
						viewPrevious: !1,
						leaderboardType: '',
						list: null,
					},
					s = (e) => e.groupPageLeaderboard,
					r = (e) => s(e).fetching,
					o = (e) => s(e).leaderboardType,
					l = (e) => s(e).viewPrevious,
					c = (e) => s(e).list,
					d = {
						[n.wN3]: (e, t) => ({ ...e, leaderboardType: t.leaderboardType }),
						[n.hDe]: (e, t) => ({ ...e, viewPrevious: t.viewPrevious }),
						[n.fyP]: (e) => ({ ...e, fetching: !0, error: !1, list: null }),
						[n.$QG]: (e, t) => ({
							...e,
							fetching: !1,
							error: !1,
							list: t.list,
						}),
						[n.HXW]: (e) => ({ ...e, fetching: !1, error: !0 }),
						[n._RB]: () => a,
					};
				function u(e = a, t = {}) {
					const i = d[t.type];
					return i ? i(e, t) : e;
				}
			},
			558005: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => y,
					NO: () => o,
					P: () => d,
					VC: () => r,
					ZE: () => u,
					jl: () => c,
					lz: () => l,
				});
				var n = i(316550);
				const a = {
						open: !1,
						submitting: !1,
						error: !1,
						reviewStatus: null,
						activityId: null,
						newsPostUuid: null,
						imageUuid: null,
					},
					s = (e) => e.groupPageReportPhotoDialog,
					r = (e) => s(e).open,
					o = (e) => s(e).submitting,
					l = (e) => s(e).reviewStatus,
					c = (e) => s(e).activityId,
					d = (e) => s(e).newsPostUuid,
					u = (e) => s(e).imageUuid,
					p = {
						[n.SJ6]: (e, t) => ({
							...e,
							open: !0,
							activityId: t.activityId || null,
							newsPostUuid: t.newsPostUuid || null,
							imageUuid: t.imageUuid || null,
						}),
						[n.GMr]: (e) => a,
						[n.nVg]: (e) => ({ ...e, submitting: !0 }),
						[n.UsZ]: (e, t) =>
							t.error
								? { ...e, error: !0, submitting: !1 }
								: {
										...e,
										error: !1,
										submitting: !1,
										reviewStatus: t.reviewStatus,
									},
						[n._RB]: () => a,
					};
				function y(e = a, t = {}) {
					const i = p[t.type];
					return i ? i(e, t) : e;
				}
			},
			493399: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => S,
					FB: () => A,
					GF: () => T,
					W3: () => E,
					Wu: () => C,
					f: () => m,
					qO: () => I,
					wH: () => _,
				});
				var n = i(316550),
					a = i(568574);
				const s = {
						groups: [],
						groupsFetching: !1,
						groupsFetchSuccess: !1,
						groupsFetchFail: !1,
						administeredGroups: [],
						administeredGroupsFetching: !1,
						administeredGroupsFetchSuccess: !1,
						administeredGroupsFetchFail: !1,
						groupRequests: [],
						groupRequestsFetching: !1,
						groupRequestsFetchSuccess: !1,
						groupRequestsFetchFail: !1,
						groupUnhandledRequests: [],
						groupUnhandledRequestsFetchSuccess: !1,
						groupUnhandledRequestsFetchFail: !1,
						groupInvitations: [],
						leaveGroupSuccess: !1,
						leaveGroupFail: !1,
						leaveGroupDone: !1,
						deleteGroupSuccess: !1,
						deleteGroupFail: !1,
						deleteGroupDone: !1,
						searchedGroups: [],
						groupSearchKeyword: '',
						groupSearching: !1,
						groupSearchSuccess: !1,
						groupSearchFail: !1,
						groupJoining: !1,
						groupJoinSuccess: !1,
						groupJoinFail: !1,
						groupJoinDone: !1,
						hasMoreToSearch: !1,
						groupSearchStart: 1,
						groupMemberData: null,
						tab: null,
					},
					r =
						(e) =>
						(t, { data: i }) => ({
							...t,
							groups: e ? i || [] : t.groups,
							groupsFetching: !1,
							groupsFetchSuccess: e,
							groupsFetchFail: !e,
						}),
					o =
						(e) =>
						(t, { data: i }) => ({
							...t,
							administeredGroups: e ? i || [] : t.administeredGroups,
							administeredGroupsFetching: !1,
							administeredGroupsFetchSuccess: e,
							administeredGroupsFetchFail: !e,
						}),
					l =
						(e) =>
						(t, { data: i }) => ({
							...t,
							groupRequests: e ? i || [] : t.groupRequests,
							groupRequestsFetching: !1,
							groupRequestsFetchSuccess: e,
							groupRequestsFetchFail: !e,
						}),
					c =
						(e) =>
						(t, { data: i }) => ({
							...t,
							groupUnhandledRequests: e ? i || [] : t.groupRequests,
							groupUnhandledRequestsFetchSuccess: e,
							groupUnhandledRequestsFetchFail: !e,
							groupInvitations: e
								? (i || []).filter((e) => !!e.groupInviteId)
								: t.groupInvitations,
						}),
					d =
						(e) =>
						(t, { groupId: i }) => ({
							...t,
							groups: e ? t.groups.filter((e) => e.id !== i) : t.groups,
							administeredGroups: e
								? t.administeredGroups.filter((e) => e.id !== i)
								: t.administeredGroups,
							leaveGroupSuccess: e,
							leaveGroupFail: !e,
							leaveGroupDone: !0,
						}),
					u =
						(e) =>
						(t, { groupId: i }) => ({
							...t,
							groups: e ? t.groups.filter((e) => e.id !== i) : t.groups,
							administeredGroups: e
								? t.administeredGroups.filter((e) => e.id !== i)
								: t.administeredGroups,
							searchedGroups: e
								? t.searchedGroups.filter((e) => e.id !== i)
								: t.searchedGroups,
							deleteGroupSuccess: e,
							deleteGroupFail: !e,
							deleteGroupDone: !0,
						}),
					p =
						(e) =>
						(t, { data: i, keyword: n, reset: s }) => {
							if (!e)
								return {
									...t,
									groupSearchKeyword: n,
									groupSearching: !1,
									groupSearchSuccess: !1,
									groupSearchFail: !0,
									hasMoreToSearch: !1,
								};
							const { groupDTOs: r } = i,
								o = r.length === a.Tx + 1 ? r.slice(0, -1) : r;
							return {
								...t,
								searchedGroups: s ? o : [...t.searchedGroups, ...o],
								groupSearchKeyword: n,
								groupSearching: !1,
								groupSearchSuccess: !0,
								groupSearchFail: !1,
								hasMoreToSearch: r.length === a.Tx + 1,
								showGroupSearchHint: !1,
							};
						},
					y =
						(e) =>
						(t, { groupId: i, joinType: n, groupRequest: s }) =>
							e
								? {
										...t,
										groupJoining: !1,
										groupJoinSuccess: !0,
										groupJoinFail: !1,
										groupJoinDone: !0,
										groups:
											n === a.oY.requestJoin
												? t.groups
												: [
														...t.groups,
														t.searchedGroups.find((e) => e.id === i),
													],
										groupRequests:
											n === a.oY.requestJoin
												? [...t.groupRequests, s]
												: t.groupRequests,
										groupInvitations:
											n === a.oY.acceptInvitation
												? t.groupInvitations.filter((e) => e.groupId !== i)
												: t.groupInvitations,
									}
								: {
										...t,
										groupJoining: !1,
										groupJoinSuccess: !1,
										groupJoinFail: !0,
										groupJoinDone: !0,
									},
					h =
						(e) =>
						(t, { groupId: i }) => {
							if (e)
								return {
									...t,
									groupRequests: t.groupRequests.filter(
										(e) => e.userGroupId !== i
									),
								};
						},
					g = {
						[n.Lsd]: (e) => ({
							...e,
							groupsFetching: !0,
							groupsFetchSuccess: !1,
							groupsFetchFail: !1,
						}),
						[n.kFJ]: r(!0),
						[n.TH4]: r(!1),
						[n.JPE]: (e) => ({
							...e,
							administeredGroupsFetching: !0,
							administeredGroupsFetchSuccess: !1,
							administeredGroupsFetchFail: !1,
						}),
						[n.K8A]: o(!0),
						[n.dCO]: o(!1),
						[n.bt5]: (e) => ({
							...e,
							groupRequestsFetching: !1,
							groupRequestsFetchSuccess: !1,
							groupRequestsFetchFail: !1,
						}),
						[n.qF]: l(!0),
						[n.ZhA]: l(!1),
						[n._hI]: c(!0),
						[n.dPV]: c(!1),
						[n.dP4]: (e) => ({
							...e,
							leaveGroupSuccess: !1,
							leaveGroupFail: !1,
							leaveGroupDone: !1,
						}),
						[n.ARp]: d(!0),
						[n.XxG]: d(!1),
						[n.pY1]: (e) => ({
							...e,
							deleteGroupSuccess: !1,
							deleteGroupFail: !1,
							deleteGroupDone: !1,
						}),
						[n.gY7]: u(!0),
						[n.p53]: u(!1),
						[n.R24]: () => s,
						[n.AaN]: (e, { reset: t }) => ({
							...e,
							groupSearching: !0,
							groupSearchSuccess: !1,
							groupSearchFail: !1,
							groupSearchStart: t ? 1 : e.groupSearchStart + a.Tx,
						}),
						[n.lGK]: p(!0),
						[n.UQ4]: p(!1),
						[n.vj_]: (e, { keyword: t }) => ({
							...e,
							groupSearchKeyword: t,
							searchedGroups: [],
							groupSearching: !1,
							groupSearchSuccess: !1,
							groupSearchFail: !1,
							hasMoreToSearch: !1,
							showGroupSearchHint: !0,
						}),
						[n.ub9]: (e) => ({
							...e,
							groupJoining: !0,
							groupJoinSuccess: !1,
							groupJoinFail: !1,
							groupJoinDone: !1,
						}),
						[n.zdU]: y(!0),
						[n.u56]: y(!1),
						[n.qZ8]: h(!0),
						[n.xnf]: h(!1),
						[n.u56]: y(!1),
						[n.oit]: (e, t) => ({ ...e, groupMemberData: t.data }),
						[n.anv]: (e, { tab: t }) => ({ ...e, tab: t }),
					},
					m = (e) => e.groups.groups,
					A = (e) => e.groups.groupSearchKeyword,
					_ = (e) => e.groups.groupSearchStart,
					E = (e) => e.groups.groupsFetchSuccess,
					T = (e) => e.groups.leaveGroupSuccess,
					C = (e) => e.groups.groupInvitations;
				function S(e = s, t = {}) {
					const i = g[t.type];
					return i ? i(e, t) : e;
				}
				const I = (e) => e.groups.groupMemberData;
			},
			949950: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => k,
					CA: () => E,
					CG: () => b,
					GM: () => A,
					Gh: () => I,
					JJ: () => N,
					M0: () => T,
					Mg: () => C,
					N8: () => w,
					Qe: () => D,
					Qx: () => f,
					T9: () => u,
					Y5: () => O,
					cN: () => p,
					cO: () => P,
					fe: () => h,
					li: () => L,
					ps: () => S,
					qQ: () => v,
					rF: () => y,
					rk: () => _,
					tR: () => g,
					uW: () => m,
					y1: () => R,
				});
				var n = i(316550);
				const a = {
						healthSnapshots: null,
						healthSnapshotSummaryFetching: !1,
						healthSnapshotSummarySuccess: !1,
						healthSnapshotSummaryFail: !1,
						healthSnapshotSummaryErrorType: null,
						healthSnapshotEpochDataFetching: !1,
						healthSnapshotEpochDataSuccess: !1,
						healthSnapshotEpochDataFail: !1,
						healthSnapshotRelativeActivitiesFetching: !1,
						healthSnapshotRelativeActivitiesSuccess: !1,
						healthSnapshotRelativeActivitiesFail: !1,
						healthSnapshotItemDeleting: !1,
						healthSnapshotItemDeleteSuccess: !1,
						healthSnapshotItemDeleteFail: !1,
						healthSnapshotItemUpdating: !1,
						healthSnapshotItemUpdateSuccess: !1,
						healthSnapshotItemUpdateFail: !1,
						healthSnapshotItemNoteUpdating: !1,
						healthSnapshotItemUpdateNoteSuccess: !1,
						healthSnapshotItemUpdateNoteFail: !1,
					},
					s = (e) => (t, i) => {
						const { activityUuid: n } = i.data;
						if (!i.data || !n)
							return {
								...t.healthSnapshots,
								healthSnapshotSummaryFetching: !1,
								healthSnapshotSummaryFail: !0,
								healthSnapshotSummaryErrorType: !0,
							};
						const a = { ...t.healthSnapshots };
						return (
							a[n.uuid] || (a[n.uuid] = {}),
							(a[n.uuid].healthSnapshotSummary = e ? i.data : null),
							{
								...t,
								healthSnapshots: a,
								healthSnapshotSummaryFetching: !1,
								healthSnapshotSummarySuccess: e,
								healthSnapshotSummaryFail: !e,
								healthSnapshotSummaryErrorType: (!e && !i.data) || null,
							}
						);
					},
					r = (e) => (t, i) => {
						const { activityUuid: n } = i.data,
							a = { ...t.healthSnapshots };
						return (
							a[n] || (a[n] = {}),
							(a[n].healthSnapshotEpochData = e ? i.data : null),
							{
								...t,
								healthSnapshots: a,
								healthSnapshotEpochDataFetching: !1,
								healthSnapshotEpochDataSuccess: e,
								healthSnapshotEpochDataFail: !e,
							}
						);
					},
					o = (e) => (t, i) => {
						const { activityUuid: n } = i.payload,
							a = { ...t.healthSnapshots };
						return (
							a[n] || (a[n] = {}),
							(a[n].healthSnapshotRelativeActivities = e ? i.data : null),
							{
								...t,
								healthSnapshots: a,
								healthSnapshotRelativeActivitiesFetching: !1,
								healthSnapshotRelativeActivitiesSuccess: e,
								healthSnapshotRelativeActivitiesFail: !e,
							}
						);
					},
					l = (e) => (t, i) => {
						const n = i.payload;
						if (!t.healthSnapshots || !t.healthSnapshots[n] || !e) return t;
						const a = { ...t.healthSnapshots };
						return (
							delete a[n],
							{
								...t,
								healthSnapshots: a,
								healthSnapshotItemDeleting: !1,
								healthSnapshotItemDeleteSuccess: e,
								healthSnapshotItemDeleteFail: !e,
							}
						);
					},
					c = (e) => (t, i) => {
						const { activityName: n, activityUuid: a } = i.payload;
						if (!t.healthSnapshots || !t.healthSnapshots[a] || !e) return t;
						const s = { ...t.healthSnapshots };
						return (
							(s[a].healthSnapshotSummary = {
								...s[a].healthSnapshotSummary,
								activityName: n,
							}),
							{
								...t,
								healthSnapshots: s,
								healthSnapshotItemUpdating: !1,
								healthSnapshotItemUpdateSuccess: e,
								healthSnapshotItemUpdateFail: !e,
							}
						);
					},
					d = (e) => (t, i) => {
						const { activityNote: n, activityUuid: a } = i.payload;
						if (!t.healthSnapshots || !t.healthSnapshots[a] || !e) return t;
						const s = { ...t.healthSnapshots };
						return (
							(s[a].healthSnapshotSummary = {
								...s[a].healthSnapshotSummary,
								notes: n,
							}),
							{
								...t,
								healthSnapshots: s,
								healthSnapshotItemNoteUpdating: !1,
								healthSnapshotItemNoteUpdateSuccess: e,
								healthSnapshotItemNoteUpdateFail: !e,
							}
						);
					},
					u = (e) => e.healthSnapshotDetails.healthSnapshotSummaryFetching,
					p = (e) => e.healthSnapshotDetails.healthSnapshotSummarySuccess,
					y = (e) => e.healthSnapshotDetails.healthSnapshotSummaryFail,
					h = (e, t) => {
						const i =
							e.healthSnapshotDetails && e.healthSnapshotDetails.healthSnapshots
								? e.healthSnapshotDetails.healthSnapshots[t]
								: null;
						return i ? i.healthSnapshotSummary : null;
					},
					g = (e) => e.healthSnapshotDetails.healthSnapshotSummaryErrorType,
					m = (e) => e.healthSnapshotDetails.healthSnapshots,
					A = (e) => e.healthSnapshotDetails.healthSnapshotEpochDataFetching,
					_ = (e) => e.healthSnapshotDetails.healthSnapshotEpochDataSuccess,
					E = (e) => e.healthSnapshotDetails.healthSnapshotEpochDataSuccess,
					T = (e, t) => {
						const i =
							e.healthSnapshotDetails && e.healthSnapshotDetails.healthSnapshots
								? e.healthSnapshotDetails.healthSnapshots[t]
								: null;
						return i ? i.healthSnapshotEpochData : null;
					},
					C = (e) =>
						e.healthSnapshotDetails.healthSnapshotRelativeActivitiesFetching,
					S = (e) =>
						e.healthSnapshotDetails.healthSnapshotRelativeActivitiesSuccess,
					I = (e) =>
						e.healthSnapshotDetails.healthSnapshotRelativeActivitiesFail,
					v = (e, t) => {
						const i =
							e.healthSnapshotDetails && e.healthSnapshotDetails.healthSnapshots
								? e.healthSnapshotDetails.healthSnapshots[t]
								: null;
						return i ? i.healthSnapshotRelativeActivities : null;
					},
					f = (e) => e.healthSnapshotDetails.healthSnapshotItemDeleting,
					D = (e) => e.healthSnapshotDetails.healthSnapshotItemDeleteSuccess,
					N = (e) => e.healthSnapshotDetails.isHealthSnapshotItemDeleteFail,
					R = (e) => e.healthSnapshotDetails.healthSnapshotItemUpdating,
					b = (e) => e.healthSnapshotDetails.healthSnapshotItemUpdateSuccess,
					L = (e) => e.healthSnapshotDetails.healthSnapshotItemUpdateFail,
					P = (e) => e.healthSnapshotDetails.healthSnapshotItemNoteUpdating,
					O = (e) =>
						e.healthSnapshotDetails.healthSnapshotItemNoteUpdateSuccess,
					w = (e) => e.healthSnapshotDetails.healthSnapshotItemNoteUpdateFail,
					F = {
						[n.NHy]: (e) => ({
							...e,
							healthSnapshotSummaryFetching: !0,
							healthSnapshotSummaryErrorType: null,
						}),
						[n.QXg]: s(!0),
						[n.DF3]: s(!1),
						[n.z3L]: (e) => ({ ...e, healthSnapshotEpochDataFetching: !0 }),
						[n.ezn]: r(!0),
						[n.NXi]: r(!1),
						[n.Bl6]: (e, t) => {
							const i = t.payload;
							return e.healthSnapshots && e.healthSnapshots[i]
								? { ...e, healthSnapshotRelativeActivitiesFetching: !0 }
								: e;
						},
						[n.MpV]: o(!0),
						[n.bru]: o(!1),
						[n.SAF]: (e, t) => {
							const i = t.payload;
							return e.healthSnapshots && e.healthSnapshots[i]
								? { ...e, healthSnapshotItemDeleting: !0 }
								: e;
						},
						[n.Xkv]: l(!0),
						[n.s5P]: l(!1),
						[n.OPe]: (e, t) => {
							const { activityUuid: i } = t.payload;
							return e.healthSnapshots && e.healthSnapshots[i]
								? { ...e, healthSnapshotItemUpdating: !0 }
								: e;
						},
						[n.Tl$]: c(!0),
						[n.Gjn]: c(!1),
						[n.SIi]: (e, t) => {
							const { activityUuid: i } = t.payload;
							return e.healthSnapshots && e.healthSnapshots[i]
								? { ...e, healthSnapshotItemNoteUpdating: !0 }
								: e;
						},
						[n.hHs]: d(!0),
						[n.gd6]: d(!1),
					};
				function k(e = a, t = {}) {
					const i = F[t.type];
					return i ? i(e, t) : e;
				}
			},
			609658: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => C,
					K8: () => h,
					LL: () => E,
					O6: () => _,
					Sl: () => A,
					dL: () => p,
					fd: () => y,
					gG: () => u,
					oc: () => g,
					pr: () => d,
					xr: () => m,
				});
				var n = i(316550),
					a = i(438909);
				const s = {
						healthSnapshotList: null,
						healthSnapshotListFetching: !1,
						healthSnapshotListSuccess: !1,
						healthSnapshotListFail: !1,
						healthSnapshotListByDateRange: null,
						healthSnapshotListByDateRangeFetching: !1,
						healthSnapshotListByDateRangeSuccess: !1,
						healthSnapshotListByDateRangeFail: !1,
						healthSnapshotListItemDeleting: !1,
						healthSnapshotListItemDeleteSuccess: !1,
						healthSnapshotListItemDeleteFail: !1,
						healthSnapshotListItemUpdating: !1,
						healthSnapshotListItemUpdateSuccess: !1,
						healthSnapshotListItemUpdateFail: !1,
					},
					r = (e) => (t, i) => {
						let n;
						return (
							(n =
								t.healthSnapshotList &&
								t.healthSnapshotList.length > 0 &&
								i.startIndex > a.N.initialStartIndex
									? e
										? t.healthSnapshotList.concat(i.data)
										: t.healthSnapshotList
									: e
										? i.data
										: null),
							{
								...t,
								healthSnapshotList: n,
								healthSnapshotListFetching: !1,
								healthSnapshotListSuccess: e,
								healthSnapshotListFail: !e,
							}
						);
					},
					o = (e) => (t, i) => ({
						...t,
						healthSnapshotListByDateRange: i.data,
						healthSnapshotListByDateRangeFetching: !1,
						healthSnapshotListByDateRangeSuccess: e,
						healthSnapshotListByDateRangeFail: !e,
					}),
					l = (e) => (t, i) => {
						if (!t.healthSnapshotList) return t;
						const n = i.payload,
							a = t.healthSnapshotList.filter((e) => e.activityUuid.uuid !== n);
						return {
							...t,
							healthSnapshotList: a,
							healthSnapshotListItemDeleting: !1,
							healthSnapshotListItemDeleteSuccess: e,
							healthSnapshotListItemDeleteFail: !e,
						};
					},
					c = (e) => (t, i) => {
						if (!t.healthSnapshotList) return t;
						const { activityName: n, activityUuid: a } = i.payload,
							s = t.healthSnapshotList.map(
								(e) => (e.activityUuid.uuid === a && (e.activityName = n), e)
							);
						return {
							...t,
							healthSnapshotList: s,
							healthSnapshotListItemUpdating: !1,
							healthSnapshotListItemUpdateSuccess: e,
							healthSnapshotListItemUpdateFail: !e,
						};
					},
					d = (e) => e.healthSnapshotList.healthSnapshotListFetching,
					u = (e) => e.healthSnapshotList.healthSnapshotListSuccess,
					p = (e) => e.healthSnapshotList.healthSnapshotListFail,
					y = (e) => e.healthSnapshotList.healthSnapshotList,
					h = (e) => e.healthSnapshotList.healthSnapshotListItemDeleting,
					g = (e) => e.healthSnapshotList.healthSnapshotListItemDeleteSuccess,
					m = (e) => e.healthSnapshotList.isHealthSnapshotListItemDeleteFail,
					A = (e) => e.healthSnapshotList.healthSnapshotListItemUpdating,
					_ = (e) => e.healthSnapshotList.healthSnapshotListItemUpdateSuccess,
					E = (e) => e.healthSnapshotList.healthSnapshotListItemUpdateFail,
					T = {
						[n.Tqm]: (e) => ({ ...e, healthSnapshotListFetching: !0 }),
						[n.UZq]: r(!0),
						[n.Rs7]: r(!1),
						[n.GmR]: (e) => ({
							...e,
							healthSnapshotListByDateRangeFetching: !0,
						}),
						[n.F1P]: o(!0),
						[n.uM$]: o(!1),
						[n.SAF]: (e) =>
							e.healthSnapshotList
								? { ...e, healthSnapshotListItemDeleting: !0 }
								: e,
						[n.Xkv]: l(!0),
						[n.s5P]: l(!1),
						[n.OPe]: (e) =>
							e.healthSnapshotList
								? { ...e, healthSnapshotListItemUpdating: !0 }
								: e,
						[n.Tl$]: c(!0),
						[n.Gjn]: c(!1),
					};
				function C(e = s, t = {}) {
					const i = T[t.type];
					return i ? i(e, t) : e;
				}
			},
			923764: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => l,
					Fr: () => p,
					Nk: () => d,
					Pr: () => c,
					gE: () => h,
					mx: () => y,
					z2: () => u,
				});
				var n = i(316550);
				const a = {
						heartRateDailyData: [],
						heartRateDataFetching: !1,
						heartRateDataFail: !1,
						heartRateOneYearData: [],
					},
					s = (e, t) => ({ ...e, heartRateDataFetching: !0 }),
					r = (e, t) => ({
						...e,
						heartRateDataFetching: !1,
						heartRateDataFail: !0,
					}),
					o = {
						[n.RQz]: r,
						[n.i6F]: (e, t) => ({
							...e,
							heartRateDailyData: t.data,
							heartRateDataFetching: !1,
							heartRateDataFail: !1,
						}),
						[n.DbE]: s,
						[n.IwY]: r,
						[n.wff]: s,
						[n.FvP]: (e, t) => ({
							...e,
							heartRateOneYearData: t.data,
							heartRateDataFetching: !1,
							heartRateDataFail: !1,
						}),
					};
				function l(e = a, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
				function c(e, t) {
					return { type: n.mCc, startDate: e, endDate: t };
				}
				function d(e, t) {
					return { type: n.Jbr, endDate: e, numWeeks: t };
				}
				function u(e) {
					return e.heartRateReport.heartRateDailyData;
				}
				function p(e) {
					return e.heartRateReport.heartRateDataFetching;
				}
				function y(e) {
					return e.heartRateReport.heartRateDataFail;
				}
				function h(e) {
					return e.heartRateReport.heartRateOneYearData;
				}
			},
			335300: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => d, Y$: () => l, _3: () => r, mQ: () => o });
				var n = i(316550);
				const a = {
						dailySummary: { data: null, success: !1, error: !1, fetching: !1 },
						daily: { data: null, success: !1, error: !1, fetching: !1 },
					},
					s = (e) => (t, i) => ({
						...t,
						dailySummary: {
							...t.dailySummary,
							data: e ? i.data : null,
							success: e,
							error: !e,
							fetching: !1,
						},
					}),
					r = (e) => e.hrvStatus.dailySummary.fetching,
					o = (e) => e.hrvStatus.dailySummary.data,
					l = (e) => e.hrvStatus.dailySummary.error,
					c = {
						[n.Iwi]: s(!0),
						[n.lgd]: (e, t) => ({
							...e,
							dailySummary: { ...e.dailySummary, data: null, fetching: !0 },
						}),
						[n.D_$]: s(!1),
					};
				function d(e = a, t = {}) {
					const i = c[t.type];
					return i ? i(e, t) : e;
				}
			},
			105948: (e, t, i) => {
				'use strict';
				i.d(t, {
					$p: () => c,
					Ay: () => g,
					Mi: () => y,
					S7: () => l,
					Ty: () => d,
					Zd: () => u,
					hf: () => p,
					vC: () => o,
				});
				var n = i(316550);
				const a = {
						hydrationData: null,
						hydrationLevelUpdating: !1,
						hydrationLevelUpdateError: !1,
						hydrationDataFetching: !1,
						hydrationDataFetchFail: !1,
						hydrationDataUpdating: !1,
						hydrationDataUpdateError: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						hydrationData: { ...t.hydrationData, ...i.response.data },
						hydrationLevelUpdating: !1,
						hydrationLevelUpdateError: !e,
					}),
					r = (e) => (t, i) => ({
						...t,
						hydrationData: i.dailyHydrationData,
						hydrationDataFetching: !1,
						hydrationDataFetchFail: !e,
					}),
					o = (e) => e.hydration.hydrationLevelUpdating,
					l = (e) => e.hydration.hydrationLevelUpdateError,
					c = (e) => e.hydration.hydrationDataFetching,
					d = (e) => e.hydration.hydrationDataFetchFail,
					u = (e) => e.hydration.hydrationData,
					p = (e) => e.hydration.hydrationDataUpdating,
					y = (e) => e.hydration.hydrationDataUpdateError,
					h = {
						[n.Jh_]: (e) => ({
							...e,
							hydrationLevelUpdating: !0,
							hydrationLevelUpdateError: !1,
						}),
						[n.gR$]: s(!0),
						[n.vPC]: s(!1),
						[n.A1r]: (e) => ({
							...e,
							hydrationDataFetching: !0,
							hydrationDataFetchFail: !1,
						}),
						[n.Bzi]: r(!0),
						[n.meH]: r(!1),
						[n.VoB]: (e) => ({
							...e,
							hydrationDataUpdating: !0,
							hydrationDataUpdateError: !1,
						}),
						[n.sIe]: (e, t) => ({
							...e,
							hydrationData: { ...e.hydrationData, ...t.response.data },
							hydrationDataUpdating: !1,
							hydrationDataUpdateError: !1,
						}),
						[n.faM]: (e) => ({
							...e,
							hydrationDataUpdating: !1,
							hydrationDataUpdateError: !0,
						}),
						[n.p8]: () => a,
						[n.bY8]: (e) => ({
							...e,
							hydrationLevelUpdating: !1,
							hydrationLevelUpdateError: !1,
						}),
					};
				function g(e = {}, t = {}) {
					const i = h[t.type];
					return i ? i(e, t) : e;
				}
			},
			454800: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => C,
					D0: () => A,
					IV: () => g,
					Ik: () => u,
					PT: () => d,
					VO: () => r,
					b_: () => _,
					cU: () => m,
					lz: () => l,
					sE: () => c,
					wQ: () => o,
					wT: () => E,
					zC: () => p,
					zQ: () => y,
				});
				var n = i(316550);
				const a = {
						viewerSocialProfile: null,
						viewerUserPreferences: null,
						requests: null,
						nextCursor: null,
						error: !1,
						fetching: !0,
						useFallback: !0,
						challengeDialog: {
							open: !1,
							dialogType: null,
							uniqueKey: null,
							request: null,
						},
						requestsStatus: {},
						mutualConnectionDialog: {
							open: !1,
							displayName: null,
							mutualConnectionsCount: null,
						},
						joinGroupConsentDialog: {
							open: !1,
							uniqueKey: null,
							request: null,
						},
						dataPrivacyDialog: { open: !1, uniqueKey: null, request: null },
						groupErrorDialog: { open: !1, errorType: null },
						deleteGroupRequestDialog: {
							open: !1,
							uniqueKey: null,
							request: null,
						},
					},
					s = (e) => e.inboxPage || a,
					r = (e) => s(e).viewerSocialProfile,
					o = (e) => s(e).viewerUserPreferences,
					l = (e) => s(e).requests,
					c = (e) => s(e).nextCursor,
					d = (e) => s(e).fetching,
					u = (e) => s(e).useFallback,
					p = (e) => s(e).challengeDialog,
					y = (e) => s(e).deleteGroupRequestDialog,
					h = 0,
					g = (e, t) => {
						const i = s(e);
						return (i && i.requestsStatus[t]) || h;
					},
					m = (e) => s(e).mutualConnectionDialog,
					A = (e) => s(e).joinGroupConsentDialog,
					_ = (e) => s(e).groupErrorDialog,
					E = (e) => s(e).dataPrivacyDialog,
					T = {
						[n.EWk]: (e, t) => ({
							...a,
							viewerSocialProfile: t.viewerSocialProfile,
							viewerUserPreferences: t.viewerUserPreferences,
						}),
						[n.LWL]: () => a,
						[n.ZLD]: (e, t) => ({
							...e,
							error: !1,
							fetching: !0,
							requests: t.cursor ? e.requests : null,
						}),
						[n.eWY]: (e, t) => {
							if (t.error) return { ...e, fetching: !1, error: !0 };
							const i = (e.requests || []).concat(t.requests);
							return {
								...e,
								error: !1,
								fetching: !1,
								requests: i,
								nextCursor: t.nextCursor,
							};
						},
						[n.g7R]: (e, t) => ({
							...e,
							challengeDialog: {
								open: t.open,
								dialogType: t.open
									? t.dialogType
									: e.challengeDialog.dialogType,
								uniqueKey: t.uniqueKey,
								request: t.request,
							},
						}),
						[n.Yed]: (e, t) => ({
							...e,
							requestsStatus: { ...e.requestsStatus, [t.uniqueKey]: t.status },
						}),
						[n.QXQ]: (e, t) => ({
							...e,
							mutualConnectionDialog: {
								open: t.open,
								displayName: t.displayName || null,
								mutualConnectionsCount: t.mutualConnectionsCount || null,
							},
						}),
						[n.soF]: (e, t) => ({
							...e,
							joinGroupConsentDialog: {
								open: t.open,
								uniqueKey: t.uniqueKey || null,
								request: t.request || null,
							},
						}),
						[n.Omb]: (e, t) => ({
							...e,
							dataPrivacyDialog: {
								open: t.open,
								uniqueKey: t.uniqueKey || null,
								request: t.request || null,
							},
						}),
						[n.tJz]: (e, { open: t, errorType: i }) => ({
							...e,
							groupErrorDialog: { open: t, errorType: i },
						}),
						[n.Pys]: (e, t) => ({
							...e,
							deleteGroupRequestDialog: {
								open: t.open,
								uniqueKey: t.uniqueKey,
								request: t.request,
							},
						}),
					};
				function C(e = a, t) {
					const i = T[t.type];
					return i ? i(e, t) : e;
				}
			},
			353685: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					KF: () => d,
					PA: () => l,
					Tj: () => c,
					ZP: () => o,
				});
				var n = i(316550);
				const a = {
						data: {},
						demographicCompareFetching: {},
						demographicCompareFetchFail: {},
					},
					s = {
						[n.Q_t]: (e, t) => ({
							data: { ...e.data, [t.activityType]: {} },
							demographicCompareFetching: {
								...e.demographicCompareFetching,
								[t.activityType]: !0,
							},
							demographicCompareFetchFail: {
								...e.demographicCompareFetchFail,
								[t.activityType]: !1,
							},
						}),
						[n.Jkn]: (e, t) => ({
							data: { ...e.data, [t.activityType]: t.data },
							demographicCompareFetching: {
								...e.demographicCompareFetching,
								[t.activityType]: !1,
							},
							demographicCompareFetchFail: {
								...e.demographicCompareFetchFail,
								[t.activityType]: !1,
							},
						}),
						[n.y1W]: (e, t) => ({
							data: { ...e.data, [t.activityType]: null },
							demographicCompareFetching: {
								...e.demographicCompareFetching,
								[t.activityType]: !1,
							},
							demographicCompareFetchFail: {
								...e.demographicCompareFetchFail,
								[t.activityType]: !0,
							},
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i, a, s, r, o, l, c) {
					return {
						type: n.T9v,
						gender: e,
						age: t,
						activityType: i,
						field: a,
						lang: s,
						measurementSystem: r,
						year: o,
						month: l,
						meta: { cacheTime: c ? null : 2e3 },
					};
				}
				const l = (e, t) =>
						e.demographicCompare.data[t] ? e.demographicCompare.data[t] : null,
					c = (e, t) =>
						e.demographicCompare.demographicCompareFetching &&
						e.demographicCompare.demographicCompareFetching[t]
							? e.demographicCompare.demographicCompareFetching[t]
							: null,
					d = (e, t) =>
						e.demographicCompare.demographicCompareFetchFail &&
						e.demographicCompare.demographicCompareFetchFail[t]
							? e.demographicCompare.demographicCompareFetchFail[t]
							: null;
			},
			494935: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					Be: () => d,
					Dq: () => o,
					M0: () => p,
					dY: () => y,
					eM: () => u,
					pl: () => c,
					qz: () => l,
				});
				var n = i(316550);
				const a = {
						data: {},
						demographicComparePreferencesFetching: !1,
						demographicComparePreferencesFetchFail: !1,
						demographicComparePreferencesUpdateUpdating: !1,
						demographicComparePreferencesUpdateFail: !1,
					},
					s = {
						[n.Hj]: (e) => ({
							...e,
							demographicComparePreferencesFetching: !0,
							demographicComparePreferencesFetchFail: !1,
						}),
						[n.sH9]: (e, t) => ({
							...e,
							data: t.data,
							demographicComparePreferencesFetching: !1,
							demographicComparePreferencesFetchFail: !1,
						}),
						[n.Dtf]: (e) => ({
							...e,
							demographicComparePreferencesFetching: !1,
							demographicComparePreferencesFetchFail: !0,
						}),
						[n.Oht]: (e) => ({
							...e,
							demographicComparePreferencesUpdateUpdating: !0,
							demographicComparePreferencesUpdateFail: !1,
						}),
						[n.TmI]: (e, t) => ({
							...e,
							data: t.data,
							demographicComparePreferencesUpdateUpdating: !1,
							demographicComparePreferencesUpdateFail: !1,
						}),
						[n.mw$]: (e) => ({
							...e,
							demographicComparePreferencesUpdateUpdating: !1,
							demographicComparePreferencesUpdateFail: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return { type: n.UZo, meta: { cacheTime: e ? null : 12e4 } };
				}
				function l(e) {
					return { type: n.lji, newPreferences: e };
				}
				const c = (e) =>
						e.demographicComparePreferences.data
							? e.demographicComparePreferences.data
							: null,
					d = (e) =>
						e.demographicComparePreferences
							.demographicComparePreferencesFetching,
					u = (e) =>
						e.demographicComparePreferences
							.demographicComparePreferencesFetchFail,
					p = (e) =>
						e.demographicComparePreferences
							.demographicComparePreferencesUpdateUpdating,
					y = (e) =>
						e.demographicComparePreferences
							.demographicComparePreferencesUpdateFail;
			},
			960963: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					H: () => o,
					JN: () => l,
					ZA: () => c,
					ik: () => d,
				});
				var n = i(316550);
				const a = {
						data: {},
						demographicSelectionsFetching: !1,
						demographicSelectionsFetchFail: !1,
					},
					s = {
						[n.q3K]: (e, t) => ({
							data: e.data,
							demographicSelectionsFetching: !0,
							demographicSelectionsFetchFail: !1,
						}),
						[n.HxA]: (e, t) => ({
							data: t.data,
							demographicSelectionsFetching: !1,
							demographicSelectionsFetchFail: !1,
						}),
						[n.Cnj]: (e, t) => ({
							data: e.data,
							demographicSelectionsFetching: !1,
							demographicSelectionsFetchFail: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i) {
					return {
						type: n.DRT,
						lang: e,
						measurementSystem: t,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				const l = (e) =>
						e.demographicSelections.data ? e.demographicSelections.data : null,
					c = (e) => e.demographicSelections.demographicSelectionsFetching,
					d = (e) => e.demographicSelections.demographicSelectionsFetchFail;
			},
			684770: (e, t, i) => {
				'use strict';
				i.d(t, {
					AJ: () => h,
					Ay: () => E,
					E8: () => m,
					EI: () => A,
					Oc: () => d,
					Xw: () => o,
					_5: () => c,
					aK: () => g,
					dG: () => l,
					jX: () => r,
					qu: () => y,
					wE: () => p,
					wN: () => u,
				});
				var n = i(316550);
				const a = {
						intensityMinutesData: null,
						intensityMinutesDataFetching: !1,
						intensityMinutesDataFetchFail: !1,
						intensityMinutesDailyData: null,
						intensityMinutesDailyDataFetching: !1,
						intensityMinutesDailyDataFetchFail: !1,
						intensityMinutesWeeklyData: null,
						intensityMinutesWeeklyDataFetching: !1,
						intensityMinutesWeeklyDataFetchFail: !1,
					},
					s = (e) => e.intensityMinutes,
					r = (e) =>
						e.intensityMinutes.intensityMinutesData
							? e.intensityMinutes.intensityMinutesData
							: null,
					o = (e) => e.intensityMinutes.intensityMinutesDataFetching,
					l = (e) => e.intensityMinutes.intensityMinutesDataFetchFail,
					c = (e) =>
						e.intensityMinutes.intensityMinutesDailyData
							? e.intensityMinutes.intensityMinutesDailyData
							: null,
					d = (e) => e.intensityMinutes.intensityMinutesDailyDataFetching,
					u = (e) => e.intensityMinutes.intensityMinutesDailyDataFetchFail,
					p = (e) =>
						e.intensityMinutes.intensityMinutesWeeklyData
							? e.intensityMinutes.intensityMinutesWeeklyData
							: null,
					y = (e) => e.intensityMinutes.intensityMinutesWeeklyDataFetching,
					h = (e) => e.intensityMinutes.intensityMinutesWeeklyDataFetchFail,
					g = (e) => s(e).intensityMinutesHourlyData,
					m = (e) => s(e).intensityMinutesHourlyDataFetching,
					A = (e) => s(e).intensityMinutesHourlyDataError,
					_ = {
						[n.Jel]: (e) => ({
							...e,
							intensityMinutesDataFetching: !0,
							intensityMinutesDataFetchFail: !1,
						}),
						[n.QJU]: (e, t) => ({
							...e,
							intensityMinutesData: t.intensityMinutesData,
							intensityMinutesDataFetching: !1,
							intensityMinutesDataFetchFail: !1,
						}),
						[n.lWh]: (e, t) => ({
							...e,
							intensityMinutesData: t.intensityMinutesData,
							intensityMinutesDataFetching: !1,
							intensityMinutesDataFetchFail: !0,
						}),
						[n.TQl]: (e) => ({
							...e,
							intensityMinutesDailyDataFetching: !0,
							intensityMinutesDailyDataFetchFail: !1,
						}),
						[n.qVj]: (e, t) => ({
							...e,
							intensityMinutesDailyData: t.intensityMinutesDailyData,
							intensityMinutesDailyDataFetching: !1,
							intensityMinutesDailyDataFetchFail: !1,
						}),
						[n.jg$]: (e, t) => ({
							...e,
							intensityMinutesDailyData: t.intensityMinutesDailyData,
							intensityMinutesDailyDataFetching: !1,
							intensityMinutesDailyDataFetchFail: !0,
						}),
						[n.RYt]: (e) => ({
							...e,
							intensityMinutesWeeklyDataFetching: !0,
							intensityMinutesWeeklyDataFetchFail: !1,
						}),
						[n.yW_]: (e, t) => ({
							...e,
							intensityMinutesWeeklyData: t.intensityMinutesWeeklyData,
							intensityMinutesWeeklyDataFetching: !1,
							intensityMinutesWeeklyDataFetchFail: !1,
						}),
						[n.ZAp]: (e, t) => ({
							...e,
							intensityMinutesWeeklyData: t.intensityMinutesWeeklyData,
							intensityMinutesWeeklyDataFetching: !1,
							intensityMinutesWeeklyDataFetchFail: !0,
						}),
						[n.wyZ]: (e) => ({
							...e,
							intensityMinutesHourlyDataFetching: !0,
							intensityMinutesHourlyDataError: !1,
						}),
						[n.Pq9]: (e, t) => ({
							...e,
							intensityMinutesHourlyData: t.intensityMinutesHourlyData,
							intensityMinutesHourlyDataFetching: !1,
							intensityMinutesHourlyDataError: t.error,
						}),
					};
				function E(e = a, t = {}) {
					const i = _[t.type];
					return i ? i(e, t) : e;
				}
			},
			488529: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => h,
					NV: () => c,
					ZV: () => d,
					_g: () => p,
					vh: () => u,
				});
				var n = i(316550),
					a = i(604497),
					s = i(559685),
					r = i(362905),
					o = i(804329);
				const l = {
						jetLagDailyStatus: {},
						statusCodesByDate: {},
						jetLagDailyStatusFetching: !1,
						jetLagDailyStatusFetchFail: !1,
					},
					c = (e, t) => {
						const i = e.jetLagDailyStatus.jetLagDailyStatus[t];
						if (!i) return {};
						return {
							...i,
							bodyClockDifference:
								null !== i.bodyClockDifference
									? (0, r.A0)(i.bodyClockDifference / 60)
									: null,
						};
					},
					d = (0, o.Mz)(
						(e) => e.jetLagDailyStatus,
						(e, t) => e.jetLagDailyStatus.statusCodesByDate[t],
						(e, t) => {
							const i = t && t !== a.fi;
							return (
								!e.jetLagDailyStatusFetching &&
								!e.jetLagDailyStatusFetchFail &&
								i
							);
						}
					),
					u = (e) => e.jetLagDailyStatus.jetLagDailyStatusFetching,
					p = (e) => e.jetLagDailyStatus.jetLagDailyStatusFetchFail,
					y = {
						[n.oMA]: (e) => ({
							...e,
							jetLagDailyStatusFetching: !0,
							jetLagDailyStatusFetchFail: !1,
						}),
						[n.BCg]: (e, t) => {
							const { calendarDate: i, data: n, status: a } = t.payload;
							return (
								(n.overlappingFlights = (0, s.Qi)(n.flights, n.calendarDate)),
								{
									jetLagDailyStatus: { ...e.jetLagDailyStatus, [i]: n },
									statusCodesByDate: { ...e.statusCodesByDate, [i]: a },
									jetLagDailyStatusFetching: !1,
									jetLagDailyStatusFetchFail: !1,
								}
							);
						},
						[n.ogs]: (e) => ({
							...e,
							jetLagDailyStatusFetching: !1,
							jetLagDailyStatusFetchFail: !0,
						}),
					};
				function h(e = l, t = {}) {
					const i = y[t.type];
					return i ? i(e, t) : e;
				}
			},
			324026: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => d, nH: () => l });
				var n = i(316550);
				const a = {
						trips: [],
						tripsFetching: !1,
						tripsSuccess: !1,
						tripsFail: !1,
						deletingTripsStart: !1,
						deletingTripsSuccess: !1,
						deletingTripsFails: !1,
						updateTripsStart: !1,
						updateTripsSucces: !1,
						updateTripsFail: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						trips: i.payload,
						tripsFetching: !1,
						tripsSuccess: e,
						tripsFail: !e,
					}),
					r = (e) => (t, i) => {
						if (!t.trips) return t;
						const n = i.payload,
							a = t.trips.filter((e) => e.tripId !== n);
						return {
							...t,
							trips: a,
							deletingTripsStart: !1,
							deletingTripsSuccess: e,
							deletingTripsFails: !e,
						};
					},
					o = (e) => (t, i) => {
						if (!t.trips) return t;
						const { tripId: n } = i.payload,
							a = t.trips.map((e) => (e.tripId === n ? { ...i.payload } : e));
						return {
							...t,
							trips: a,
							updateTripsStart: !1,
							updateTripsSucces: e,
							updateTripsFail: !e,
						};
					},
					l = (e) => e.jetLagTrips.trips,
					c = {
						[n.mw6]: (e) => ({ ...e, tripsFetching: !0 }),
						[n.re9]: s(!0),
						[n.cxb]: s(!1),
						[n.WXU]: (e) => (e.trips ? { ...e, deletingTripsStart: !0 } : e),
						[n.Nyv]: r(!0),
						[n.afS]: r(!1),
						[n.DsC]: o(!0),
						[n.OUw]: o(!1),
					};
				function d(e = a, t = {}) {
					const i = c[t.type];
					return i ? i(e, t) : e;
				}
			},
			459770: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, FM: () => r, L8: () => o });
				var n = i(316550);
				const a = { data: null, success: !1, error: !1, fetching: !1 },
					s = (e) => (t, i) => ({
						...t,
						data: e ? i.data : null,
						success: e,
						error: !e,
						fetching: !1,
					}),
					r = (e) => e.latestLactateThreshold.fetching,
					o = (e) => e.latestLactateThreshold.data,
					l = {
						[n.Bh5]: (e, t) => ({ ...e, data: null, fetching: !0 }),
						[n.E3d]: s(!0),
						[n.pWE]: s(!1),
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
			},
			449182: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, fe: () => r, t2: () => o });
				var n = i(316550);
				const a = { data: null, success: !1, error: !1, fetching: !1 },
					s = (e) => (t, i) => ({
						...t,
						data: e ? i.data : null,
						success: e,
						error: !e,
						fetching: !1,
					}),
					r = (e) =>
						e &&
						e.lactateThresholdRangeHR &&
						e.lactateThresholdRangeHR.fetching,
					o = (e) => e.lactateThresholdRangeHR.data,
					l = {
						[n.gs1]: (e) => ({ ...e, data: null, fetching: !0 }),
						[n.pUd]: s(!0),
						[n.iFS]: s(!1),
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
			},
			164039: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, YU: () => o, ae: () => r });
				var n = i(316550);
				const a = { data: null, success: !1, error: !1, fetching: !1 },
					s = (e) => (t, i) => ({
						...t,
						data: e ? i.data : null,
						success: e,
						error: !e,
						fetching: !1,
					}),
					r = (e) =>
						e &&
						e.lactateThresholdRangeSpeed &&
						e.lactateThresholdRangeSpeed.fetching,
					o = (e) => e.lactateThresholdRangeSpeed.data,
					l = {
						[n.NaE]: (e) => ({ ...e, data: null, fetching: !0 }),
						[n._po]: s(!0),
						[n.zq]: s(!1),
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
			},
			396680: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, R3: () => o, bG: () => s, lL: () => r });
				var n = i(316550);
				const a = {
						leaderboardList: [],
						connectionsLeaderboardFetching: !1,
						connectionsLeaderboardFetchFail: !1,
						refetchTS: 0,
					},
					s = (e) => e.connectionsLeaderboard.connectionsLeaderboardFetching,
					r = (e) => e.connectionsLeaderboard.leaderboardList,
					o = (e) => e.connectionsLeaderboard.refetchTS,
					l = {
						[n.WnG]: (e) => ({
							...e,
							connectionsLeaderboardFetching: !0,
							connectionsLeaderboardFetchFail: !1,
						}),
						[n.nRW]: (e, t) => {
							const { metricsMap: i } = t.data.allMetrics;
							return {
								...e,
								leaderboardList:
									i.WELLNESS_TOTAL_PUSHES ||
									i.WELLNESS_TOTAL_STEPS ||
									i.ACTIVITY_TOTAL_DISTANCE ||
									[],
								connectionsLeaderboardFetching: !1,
								connectionsLeaderboardFetchFail: !1,
							};
						},
						[n.c2A]: (e) => ({
							...e,
							connectionsLeaderboardFetching: !1,
							connectionsLeaderboardFetchFail: !0,
						}),
						[n.OFo]: (e) => ({ ...e, refetchTS: Date.now() }),
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
			},
			371865: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, C2: () => s, Ms: () => o, ZC: () => r });
				var n = i(721617),
					a = i(316550);
				const s = (e) => e.matSupportPage.matSupportFilter,
					r = (e) => e.matSupportPage.matSupportExpandedDevice,
					o = (e) => e.matSupportPage.matSupportReportFilter,
					l = (0, n.HY)({
						matSupportFilter: (e = {}, t) => (t.type === a.$B4 ? t.filter : e),
						matSupportExpandedDevice: (e = {}, t) =>
							t.type === a.NSB ? t.expandedDevice : e,
						matSupportReportFilter: (e = 'steps', t) =>
							t.type === a._AV ? t.filter : e,
					});
			},
			672750: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => N,
					BG: () => E,
					FH: () => f,
					JY: () => A,
					Lq: () => _,
					Ov: () => C,
					U: () => I,
					Yz: () => v,
					q1: () => T,
					wT: () => S,
				});
				var n = i(316550);
				const a = {
						menstrualCycleDayView: { dayLog: null, daySummary: null },
						menstrualCycleDayViewNoContentStatus: !1,
						initialMenstrualCycleDayView: { dayLog: null, daySummary: null },
						menstrualCycleDailyLogFetching: !1,
						menstrualCycleDailyLogFetchFail: !1,
						menstrualCycleSymptomsUpdating: !1,
						menstrualCycleSymptomsUpdatingFail: !1,
						menstrualCycleSymptomsIconsFetching: !1,
						menstrualCycleSymptomsIconsFetchFail: !1,
						saveOrConfirmSingleCycleStart: !1,
						saveOrConfirmSingleCycleFail: !1,
						menstrualCycleSymptoms: {},
						symptomsIcons: {},
						educationalContent: null,
					},
					s = ['LIGHT', 'MEDIUM', 'HEAVY'],
					r = [
						'ACNE',
						'BACKACHE',
						'BLOATING',
						'BODY_ACHES',
						'CONSTIPATION',
						'CONTRACTIONS',
						'CRAMPS',
						'CRAVINGS',
						'DIARRHEA',
						'DIZZINESS',
						'FATIGUE',
						'HEADACHE',
						'INSOMNIA',
						'NAUSEA',
						'TENDER_BREASTS',
						'TROUBLE_BREATHING',
						'VOMITING',
						'SWELLING',
						'HEARTBURN',
						'ROUND_LIGAMENT_PAIN',
					],
					o = [
						'CHILLS',
						'DISTRACTED',
						'DRY_SKIN',
						'FREQUENT_URINATION',
						'HAIR_LOSS',
						'HOT_FLASHES',
						'NIGHT_SWEATS',
						'URINE_LEAKAGE',
						'VAGINAL_DRYNESS',
						'WEIGHT_GAIN',
					],
					l = [
						'FINE',
						'HAPPY',
						'ENERGETIC',
						'MOTIVATED',
						'MOOD_SWINGS',
						'SAD',
						'EMOTIONAL',
						'OVERWHELMED',
						'IRRITABLE',
						'FRUSTRATED',
						'WORRIED',
					],
					c = [
						'NO_DISCHARGE',
						'LIGHT',
						'MEDIUM',
						'HEAVY',
						'CREAMY',
						'EGG_WHITE',
						'SPOTTING',
						'STICKY',
						'UNUSUAL',
					],
					d = !1,
					u = ['PROTECTED', 'UNPROTECTED'],
					p = ['LOW', 'AVERAGE', 'HIGH'],
					y = {
						symptoms: [],
						moods: [],
						discharge: [],
						notes: '',
						flow: '',
						sexDrive: '',
						sexualActivity: '',
						ovulationDay: !1,
					},
					h = 'NO_DISCHARGE',
					g = (e) => ({
						...e,
						dayLog: {
							...e.dayLog,
							symptoms: e.dayLog.symptoms
								? [...e.dayLog.symptoms]
								: [...y.symptoms],
							moods: e.dayLog.moods ? [...e.dayLog.moods] : [...y.moods],
							discharge: e.dayLog.discharge
								? [...e.dayLog.discharge]
								: [...y.discharge],
							notes: e.dayLog.notes ? e.dayLog.notes : y.notes,
							flow: e.dayLog.flow ? e.dayLog.flow : y.flow,
							sexDrive: e.dayLog.sexDrive ? e.dayLog.sexDrive : y.sexDrive,
							sexualActivity: e.dayLog.sexualActivity
								? e.dayLog.sexualActivity
								: y.sexualActivity,
							ovulationDay: e.dayLog.ovulationDay
								? e.dayLog.ovulationDay
								: !!e.dayLog.ovulationDay,
						},
					}),
					m = (e) => (t, i) => {
						let n =
							i.menstrualCycleDayView && i.menstrualCycleDayView.dayLog
								? i.menstrualCycleDayView
								: { ...i.menstrualCycleDayView, dayLog: y };
						return {
							...t,
							menstrualCycleDayView: g(n),
							menstrualCycleDayViewNoContentStatus:
								204 === i.menstrualCycleDayViewStatus,
							initialMenstrualCycleDayView: g(n),
							menstrualCycleSymptoms: { ...t.menstrualCycleSymptoms },
							menstrualCycleDailyLogFetching: !1,
							menstrualCycleDailyLogFetchFail: !e,
						};
					},
					A = (e) =>
						!e.menstrualCycle.menstrualCycleDayView.daySummary ||
						null === e.menstrualCycle.menstrualCycleDayView.daySummary,
					_ = (e) => e.menstrualCycle.menstrualCycleDayViewNoContentStatus,
					E = (e) => e.menstrualCycle.menstrualCycleDayView.dayLog,
					T = (e) => e.menstrualCycle.menstrualCycleDayView.daySummary,
					C = (e) => e.menstrualCycle.menstrualCycleDailyLogFetching,
					S = (e) => {
						let t =
								e.userSettings.userSettings &&
								e.userSettings.userSettings.userMenstrualCycleSettings,
							i = e.userSettings.userSettings,
							n =
								(e.menstrualCycle.menstrualCycleDayView.daySummary &&
									1 ===
										e.menstrualCycle.menstrualCycleDayView.daySummary
											.currentPhase) ||
								(e.menstrualCycle.initialMenstrualCycleDayView &&
									e.menstrualCycle.initialMenstrualCycleDayView.dayLog &&
									e.menstrualCycle.initialMenstrualCycleDayView.dayLog.flow);
						if (
							((e.menstrualCycle.menstrualCycleSymptoms = {
								...(t &&
									i.userMenstrualCycleSettings.flowTracking &&
									n && { flow: s }),
								...(t &&
									i.userMenstrualCycleSettings.physicalSymptomsTracking && {
										symptoms: r,
									}),
								...(t &&
									i.userMenstrualCycleSettings.moodTracking && { moods: l }),
								...(t &&
									i.userMenstrualCycleSettings.dischargeTracking && {
										discharge: c,
									}),
								...(t &&
									i.userMenstrualCycleSettings.ovulationDateTracking && {
										ovulationDay: d,
									}),
								...(t &&
									i.userMenstrualCycleSettings.sexualActivityTracking && {
										sexualActivity: u,
									}),
								...(t &&
									i.userMenstrualCycleSettings.sexDriveTracking && {
										sexDrive: p,
									}),
							}),
							!!t &&
								i.userMenstrualCycleSettings.menopauseSymptomsTracking &&
								i.userMenstrualCycleSettings.physicalSymptomsTracking)
						) {
							let t = [
								...e.menstrualCycle.menstrualCycleSymptoms.symptoms,
								...o,
							].sort();
							e.menstrualCycle.menstrualCycleSymptoms = {
								...e.menstrualCycle.menstrualCycleSymptoms,
								symptoms: [...t],
							};
						}
						return e.menstrualCycle.menstrualCycleSymptoms;
					},
					I = (e) => e.menstrualCycle.symptomsIcons,
					v = (e) => e.menstrualCycle.educationalContent,
					f = (e) => e.menstrualCycle.menstrualCycleSymptomsUpdatingFail,
					D = {
						[n.Nuf]: (e) => ({
							...e,
							menstrualCycleSymptoms: a.menstrualCycleSymptoms,
							menstrualCycleDailyLogFetching: !0,
							menstrualCycleDailyLogFetchFail: !1,
						}),
						[n.svi]: m(!0),
						[n.vRY]: m(!1),
						[n.WvB]: (e, t) => {
							let i = { ...e.menstrualCycleDayView.dayLog };
							return (
								'object' === typeof i[t.key] &&
								null !== i[t.key] &&
								i[t.key].length >= 0
									? 'discharge' !== t.key ||
										(-1 === i[t.key].indexOf(h) && t.value !== h)
										? -1 !== i[t.key].indexOf(t.value)
											? i[t.key].splice(i[t.key].indexOf(t.value), 1)
											: i[t.key].push(t.value)
										: -1 !== i[t.key].indexOf(h) && t.value === h
											? i[t.key].splice(i[t.key].indexOf(t.value), 1)
											: t.value === h
												? (i[t.key] = [t.value])
												: t.value !== h &&
													-1 === i[t.key].indexOf(h) &&
													i[t.key].push(t.value)
									: 'string' === typeof i[t.key]
										? 0 === i[t.key].indexOf(t.value) && t.value === i[t.key]
											? (i[t.key] = '')
											: (i[t.key] = t.value)
										: 'boolean' === typeof i[t.key] && (i[t.key] = t.value),
								{
									...e,
									menstrualCycleDayView: {
										...e.menstrualCycleDayView,
										dayLog: i,
									},
								}
							);
						},
						[n.mnx]: (e) => ({
							...e,
							menstrualCycleDayView: g(e.initialMenstrualCycleDayView),
						}),
						[n.DYz]: (e) => ({
							...e,
							menstrualCycleSymptomsUpdating: !0,
							menstrualCycleSymptomsUpdatingFail: !1,
						}),
						[n.SaA]: (e, t) => {
							let i = {
								...e.menstrualCycleDayView,
								dayLog: { ...t.response.data },
							};
							return {
								...e,
								menstrualCycleDayView: g(i),
								initialMenstrualCycleDayView: g(i),
								menstrualCycleSymptomsUpdating: !1,
								menstrualCycleSymptomsUpdatingFail: !1,
							};
						},
						[n.hKg]: (e) => ({
							...e,
							menstrualCycleDayView: g(e.initialMenstrualCycleDayView),
							initialMenstrualCycleDayView: g(e.initialMenstrualCycleDayView),
							menstrualCycleSymptomsUpdating: !1,
							menstrualCycleSymptomsUpdatingFail: !0,
						}),
						[n.qQD]: (e) => ({
							...e,
							menstrualCycleSymptomsIconsFetching: !0,
							menstrualCycleSymptomsIconsFetchFail: !1,
						}),
						[n.Frk]: (e, t) => ({
							...e,
							symptomsIcons: { ...t.response.data },
							menstrualCycleSymptomsIconsFetching: !1,
							menstrualCycleSymptomsIconsFetchFail: !1,
						}),
						[n.KxQ]: (e) => ({
							...e,
							menstrualCycleSymptomsIconsFetching: !1,
							menstrualCycleSymptomsIconsFetchFail: !0,
						}),
						[n._A0]: (e) => ({
							...e,
							menstrualCycleEducationalContentFetching: !0,
							menstrualCycleEducationalContentFetchFail: !1,
						}),
						[n.l9v]: (e, t) => ({
							...e,
							educationalContent: { ...t.response.data },
							menstrualCycleEducationalContentFetching: !1,
							menstrualCycleEducationalContentFetchFail: !1,
						}),
						[n.EwQ]: (e) => ({
							...e,
							menstrualCycleEducationalContentFetching: !1,
							menstrualCycleEducationalContentFetchFail: !0,
						}),
						[n.YQC]: (e) => ({
							...e,
							saveOrConfirmSingleCycleStart: !0,
							menstrualCycleSymptomsIconsFetchFail: !1,
						}),
						[n.UKW]: (e) => ({
							...e,
							saveOrConfirmSingleCycleStart: !1,
							saveOrConfirmSingleCycleFail: !0,
						}),
					};
				function N(e = a, t = {}) {
					const i = D[t.type];
					return i ? i(e, t) : e;
				}
			},
			546772: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => D,
					DK: () => C,
					R8: () => _,
					Z2: () => m,
					ay: () => v,
					bj: () => g,
					hu: () => S,
					ko: () => T,
					mE: () => y,
					rU: () => h,
					th: () => A,
					xj: () => I,
					zA: () => E,
					zE: () => d,
				});
				var n = i(993980),
					a = i(109285),
					s = i.n(a),
					r = i(316550),
					o = i(716343);
				const l = {
						menstrualCycleTrackingCalendar: {},
						dataForCheckingIfHasActiveCyclesSixMonthsObject: {},
						dataForCheckingIfHasActiveCyclesSixMonths: {
							loggedOvulationDays: [],
							loggedSymptomDays: [],
							fertileDates: [],
							menstrualDates: [],
						},
						calendarEditableUntilAndIncludingDate: !1,
						isMenstrualCycleTrackingCalendarModalOpened: !1,
						isMenstrualCycleTrackingCalendarModalInEdit: !1,
						menstrualCycleTrackingCalendarFetching: !1,
						menstrualCycleTrackingFetchFail: !1,
						menstrualCycleTrackingSaveRequesting: !1,
						menstrualCycleTrackingSaveSuccess: !0,
						calendarUpdateInProgress: !1,
						closeModalOnSuccess: !1,
						allCalendarEventDates: {
							loggedOvulationDays: [],
							loggedSymptomDays: [],
							fertileDates: [],
							menstrualDates: [],
						},
						allPristineCalendarEventDates: {
							loggedOvulationDays: [],
							loggedSymptomDays: [],
							fertileDates: [],
							menstrualDates: [],
						},
						currentCycleThatContinuesInTheFuture: [],
						removedDates: [],
					},
					c = (e) => ({ ...e, calendarUpdateInProgress: !1 }),
					d = (e) => e.menstrualCycleTrackingCalendar.calendarUpdateInProgress,
					u = (e) => (t, i) => {
						let n = { ...t.menstrualCycleTrackingCalendar },
							a = { ...t.dataForCheckingIfHasActiveCyclesSixMonthsObject },
							s = {};
						e && !i.isForDeleteAllDatesCheck
							? ((n[i.startDate + '/' + i.endDate] =
									i.menstrualCycleTrackingCalendar),
								(s[i.startDate + '/' + i.endDate] =
									i.menstrualCycleTrackingCalendar))
							: e &&
								i.isForDeleteAllDatesCheck &&
								(a[i.startDate + '/' + i.endDate] =
									i.menstrualCycleTrackingCalendar);
						let r = (0, o.tB)(a),
							l = (0, o.tB)(n, s, t.allCalendarEventDates, t.removedDates),
							c = (0, o.tB)(n);
						return {
							...t,
							menstrualCycleTrackingCalendar: { ...n },
							dataForCheckingIfHasActiveCyclesSixMonthsObject: { ...a },
							menstrualCycleTrackingCalendarFetching: !1,
							menstrualCycleTrackingFetchFail: !e,
							dataForCheckingIfHasActiveCyclesSixMonths: { ...r },
							allCalendarEventDates: { ...l },
							allPristineCalendarEventDates: { ...c },
						};
					},
					p = (e) => (t, i) => ({
						...t,
						menstrualCycleTrackingSaveSuccess: e,
						menstrualCycleTrackingSaveRequesting: !1,
						closeModalOnSuccess: e,
						removedDates: [],
					}),
					y = (e) =>
						e.menstrualCycleTrackingCalendar
							.menstrualCycleTrackingSaveRequesting,
					h = (e) =>
						e.menstrualCycleTrackingCalendar.menstrualCycleTrackingCalendar,
					g = (e) => e.menstrualCycleTrackingCalendar.allCalendarEventDates,
					m = (e) =>
						e.menstrualCycleTrackingCalendar
							.dataForCheckingIfHasActiveCyclesSixMonths,
					A = (e) =>
						e.menstrualCycleTrackingCalendar
							.menstrualCycleTrackingCalendarFetching,
					_ = (e) =>
						e.menstrualCycleTrackingCalendar.allPristineCalendarEventDates,
					E = (e) =>
						e.menstrualCycleTrackingCalendar
							.calendarEditableUntilAndIncludingDate,
					T = (e) =>
						e.menstrualCycleTrackingCalendar
							.isMenstrualCycleTrackingCalendarModalOpened,
					C = (e) => e.menstrualCycleTrackingCalendar.closeModalOnSuccess,
					S = (e) =>
						e.menstrualCycleTrackingCalendar.menstrualCycleTrackingSaveSuccess,
					I = (e) =>
						e.menstrualCycleTrackingCalendar
							.isMenstrualCycleTrackingCalendarModalInEdit,
					v = (e) =>
						e.menstrualCycleTrackingCalendar
							.currentCycleThatContinuesInTheFuture,
					f = {
						[r.tPc]: (e) => ({
							...e,
							menstrualCycleTrackingCalendarFetching: !0,
							menstrualCycleTrackingFetchFail: !1,
						}),
						[r.ETz]: (e) => ({
							...e,
							menstrualCycleTrackingSaveRequesting: !0,
							closeModalOnSuccess: !1,
						}),
						[r.QG7]: u(!0),
						[r.Tii]: u(!1),
						[r.Dwq]: p(!0),
						[r.m0_]: p(!1),
						[r.can]: (e, t) => {
							const { menstrualDates: i } = e.allCalendarEventDates,
								n = t.date;
							let a = [...e.removedDates];
							const s = i.indexOf(n);
							let r = [...i],
								l = [];
							return (
								-1 === s
									? (r.push(n),
										(l = (0, o.eo)(i, n)),
										(a = a.filter((e) => e !== n)))
									: (a.push(r.splice(s, 1)[0]), (l = (0, o.eo)(i, n, !0))),
								{
									...e,
									allCalendarEventDates: {
										...e.allCalendarEventDates,
										menstrualDates: [...r],
									},
									removedDates: a,
									currentCycleThatContinuesInTheFuture: [...l],
								}
							);
						},
						[r.n$5]: () => ({ ...l }),
						[r.US8]: (e) => ({
							...e,
							menstrualCycleTrackingCalendar: {
								...l.menstrualCycleTrackingCalendar,
							},
							allCalendarEventDates: { ...l.allCalendarEventDates },
						}),
						[r.$lp]: (e, t) => ({
							...e,
							isMenstrualCycleTrackingCalendarModalOpened: t.isOpened,
						}),
						[r.Eqk]: (e, t) => {
							const { menstrualDates: i } = e.allCalendarEventDates;
							let a = s()().format(n.DX),
								r = -1 !== i.indexOf(a),
								l = (0, o.eo)(i, a, !r);
							return {
								...e,
								isMenstrualCycleTrackingCalendarModalInEdit:
									t.isOpenedAndInEdit,
								currentCycleThatContinuesInTheFuture: [...l],
							};
						},
						[r.PzS]: (e) => ({ ...e, calendarUpdateInProgress: !0 }),
						[r.SvL]: c,
						[r.J3N]: c,
						[r.elR]: (e) => ({
							...e,
							allCalendarEventDates: { ...e.allPristineCalendarEventDates },
						}),
						[r.lag]: (e, t) => ({
							...e,
							calendarEditableUntilAndIncludingDate: t.untilDate,
						}),
						[r.cTc]: (e, t) => ({
							...e,
							calendarEditableUntilAndIncludingDate:
								l.calendarEditableUntilAndIncludingDate,
						}),
					};
				function D(e = l, t = {}) {
					const i = f[t.type];
					return i ? i(e, t) : e;
				}
			},
			533763: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => h,
					BA: () => c,
					MS: () => u,
					R_: () => d,
					Wv: () => p,
				});
				var n = i(316550);
				const a = {
						menstrualCycleTrackingInitialSetupSaveRequesting: !1,
						menstrualCycleTrackingInitialSetupSaveSuccess: null,
						showInitialSetupFromInactiveUser: !1,
						showInitialSetupStep1FromInactiveUser: !1,
						showMctInitialSetupAllSetModal: !1,
					},
					s = (e) => (t) => ({
						...t,
						menstrualCycleTrackingInitialSetupSaveSuccess: e,
						menstrualCycleTrackingInitialSetupSaveRequesting: !1,
					}),
					r = (e) => (t) => ({ ...t, showInitialSetupFromInactiveUser: e }),
					o = (e) => (t) => ({
						...t,
						showInitialSetupStep1FromInactiveUser: e,
					}),
					l = (e) => (t) => ({ ...t, showMctInitialSetupAllSetModal: e }),
					c = (e) =>
						e.menstrualCycleTrackingInitialSetup
							.menstrualCycleTrackingInitialSetupSaveSuccess,
					d = (e) =>
						e.menstrualCycleTrackingInitialSetup
							.showInitialSetupFromInactiveUser,
					u = (e) =>
						e.menstrualCycleTrackingInitialSetup
							.showInitialSetupStep1FromInactiveUser,
					p = (e) =>
						e.menstrualCycleTrackingInitialSetup.showMctInitialSetupAllSetModal,
					y = {
						[n.fgM]: (e) => ({
							...e,
							menstrualCycleTrackingInitialSetupSaveRequesting: !0,
						}),
						[n.yUV]: s(!0),
						[n.n9N]: s(!1),
						[n.ZDz]: (e) => ({
							...e,
							menstrualCycleTrackingInitialSetupSaveSuccess:
								a.menstrualCycleTrackingInitialSetupSaveSuccess,
						}),
						[n.T4M]: r(!0),
						[n.an4]: r(!1),
						[n.vj]: o(!0),
						[n.yEH]: o(!1),
						[n.sOV]: l(!0),
						[n.Mvk]: l(!1),
					};
				function h(e = a, t = {}) {
					const i = y[t.type];
					return i ? i(e, t) : e;
				}
			},
			470831: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, WT: () => s, wm: () => r });
				var n = i(316550);
				const a = {
						menstrualCycleTrackingReportsCycleSummaries: null,
						dailyLogs: null,
						avgCycleLength: null,
						avgPeriodLength: null,
						nextPage: !1,
						prevPage: !1,
						menstrualCycleTrackingReportsFetching: !1,
						menstrualCycleTrackingReportsNoContentForSixCycles: !1,
						menstrualCycleTrackingReportsSuccess: null,
					},
					s = (e) =>
						e.menstrualCycleTrackingReports
							.menstrualCycleTrackingReportsCycleSummaries,
					r = (e) =>
						e.menstrualCycleTrackingReports
							.menstrualCycleTrackingReportsFetching,
					o = {
						[n.a_z]: (e) => ({
							...e,
							menstrualCycleTrackingReportsFetching: !0,
						}),
						[n.bAb]:
							((l = !0),
							(e, t) => {
								const { response: i, payloadData: n } = t;
								let a = { ...e };
								return (
									n &&
										6 === n.numberOfCycles &&
										(a = {
											...e,
											menstrualCycleTrackingReportsNoContentForSixCycles:
												204 === i.status,
										}),
									{
										...a,
										menstrualCycleTrackingReportsCycleSummaries: i.data
											? i.data.cycleSummaries
											: [],
										dailyLogs: i.data ? i.data.dailyLogs : null,
										avgCycleLength: i.data ? i.data.avgCycleLength : null,
										avgPeriodLength: i.data ? i.data.avgPeriodLength : null,
										nextPage: !!i.data && i.data.nextPage,
										prevPage: !!i.data && i.data.prevPage,
										menstrualCycleTrackingReportsFetching: !1,
										menstrualCycleTrackingReportsSuccess: l,
									}
								);
							}),
						[n.Uh2]: ((e) => (t, i) => ({
							...t,
							menstrualCycleTrackingReportsFetching: !1,
							menstrualCycleTrackingReportsSuccess: e,
						}))(!1),
						[n.u1g]: () => ({ ...a }),
					};
				var l;
				function c(e = a, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
			},
			411088: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, W4: () => r, vY: () => o });
				var n = i(316550);
				const a = {
						mctFetching: !1,
						mctSummary: null,
						mctStatus: !1,
						mctFetchFail: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						mctSummary: e ? i.mctSummary : null,
						mctStatus: i.mctStatus,
						mctFetching: !1,
						mctFetchFail: !e,
					}),
					r = (e) => e.menstrualCycleTrackingSummary.mctFetching,
					o = (e) => e.menstrualCycleTrackingSummary.mctSummary,
					l = {
						[n.Tpf]: (e) => ({ ...e, mctFetching: !0, mctFetchFail: !1 }),
						[n.s5n]: s(!0),
						[n.DBO]: s(!1),
						[n.T1p]: () => a,
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
			},
			436654: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					Oz: () => c,
					kS: () => o,
					kv: () => l,
					mc: () => d,
				});
				var n = i(998573);
				const a = { mfpLinkStatus: {}, fetching: !1 },
					s = {
						[n.x]: (e) => ({ ...e, fetching: !0 }),
						[n.di]: (e, t) => ({ ...t.mfpLinkStatus, fetching: !1 }),
						[n.aJ]: (e, t) => ({ ...e.mfpLinkStatus, fetching: !1 }),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return { type: n.x, meta: { cacheTime: e ? null : 12e4 } };
				}
				const l = (e) => !!e.mfpLinkStatus && e.mfpLinkStatus.fetching,
					c = (e) => (e.mfpLinkStatus ? e.mfpLinkStatus : {}),
					d = { ACTIVE: 1, DISCONNECTED: 2 };
			},
			904828: (e, t, i) => {
				'use strict';
				i.d(t, {
					$d: () => C,
					Ay: () => l,
					Df: () => d,
					N8: () => g,
					Nv: () => u,
					OP: () => T,
					Ot: () => p,
					UH: () => c,
					V3: () => _,
					Xv: () => y,
					h6: () => m,
					mp: () => S,
					s5: () => h,
					xi: () => A,
					zH: () => E,
				});
				var n = i(316550);
				const a = {
						entity: {},
						authorizationResponse: {},
						accountConflict: !1,
						loadFailed: !1,
						isLoading: !1,
						newAccount: !1,
						fetchingAccountInfo: !1,
						accountInfo: {},
						fetchingLastSync: !1,
						lastSync: null,
						syncingNow: !1,
						syncNowResponse: {},
					},
					s = (e, t) => ({ ...e, entity: t.data, isLoading: !1 }),
					r = (e) => ({ ...e, loadFailed: !0, entity: {}, isLoading: !1 }),
					o = {
						[n.pk4]: s,
						[n.gwB]: r,
						[n.nB]: (e) => ({ ...e, isLoading: !0 }),
						[n.eLm]: (e, t) => ({
							...e,
							authorizationResponse: t.data,
							newAccount: !0,
						}),
						[n.PI0]: (e) => ({ ...e, accountConflict: !0 }),
						[n.Kb5]: s,
						[n.lJZ]: r,
						[n.o6n]: (e) => ({ ...e, fetchingAccountInfo: !0 }),
						[n.Kb5]: (e, t) => ({
							...e,
							fetchingAccountInfo: !1,
							accountInfo: t.data,
						}),
						[n.lJZ]: (e) => ({
							...e,
							fetchingAccountInfo: !1,
							accountInfo: {},
						}),
						[n.sff]: (e) => ({ ...e, fetchingLastSync: !0 }),
						[n.Scr]: (e, t) => ({
							...e,
							fetchingLastSync: !1,
							lastSync: t.data,
						}),
						[n.PPd]: (e) => ({ ...e, fetchingLastSync: !1, lastSync: {} }),
						[n.xHB]: (e) => ({ ...e, syncingNow: !0 }),
						[n.rCd]: (e, t) => ({
							...e,
							syncingNow: !1,
							syncNowResponse: t.data,
						}),
						[n.oTr]: (e) => ({ ...e, syncingNow: !1, syncNowResponse: {} }),
					};
				function l(e = a, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
				function c() {
					return { type: n.nB };
				}
				function d(e, t) {
					return { type: n.OVC, authorizationCode: e, displayName: t };
				}
				function u() {
					return { type: n.o6n };
				}
				function p() {
					return { type: n.sff };
				}
				function y(e, t) {
					return { type: n.xHB, calendarDate: e, displayName: t };
				}
				const h = (e) => e.mfp.entity,
					g = (e) => e.mfp.accountConflict,
					m = (e) => e.mfp.authorizationResponse,
					A = (e) => e.mfp.newAccount,
					_ = (e) => e.mfp.accountInfo,
					E = (e) => e.mfp.fetchingAccountInfo,
					T = (e) => e.mfp.lastSync,
					C = (e) => e.mfp.syncingNow,
					S = (e) => e.mfp.isLoading;
			},
			581172: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, v: () => r });
				var n = i(316550);
				const a = {
						state: {
							showFooter: !0,
							view: '',
							title: '',
							customTitle: '',
							modalId: '',
							customClasses: '',
							customBodyClasses: '',
							showCloseButton: !0,
							showCancelButton: !0,
							cancelTextKey: 'main_container:modal_close',
							confirmationTextKey: 'main_container:modal_save',
							footerPrimaryButtonClasses: '',
							stopClickPropagationOnModalClick: !1,
							modalIsOpen: !1,
							onCloseClicked: null,
							onCancelClicked: null,
							onConfirmationClicked: null,
							customFooterTemplate: null,
							confirmationButtonDisabled: !1,
						},
					},
					s = {
						[n.e$N]: (e, t) => ({ ...a.state, ...t.data, modalIsOpen: !0 }),
						[n.XwX]: (e, t) => ({ ...a.state, ...t.data }),
						[n.$ch]: (e, t) => ({ ...e, confirmationButtonDisabled: !1 }),
						[n.a9Z]: (e, t) => ({ ...e, confirmationButtonDisabled: !0 }),
					},
					r = (e) => e.modalState;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			524969: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					BS: () => c,
					JU: () => u,
					K9: () => l,
					p$: () => d,
				});
				var n = i(316550);
				const a = {
						userInfo: {},
						userInfoFetching: !1,
						userInfoFetchSuccess: !1,
						userInfoFetchFail: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						userInfo: e ? i.userInfo : t.userInfo,
						userInfoFetching: !1,
						userInfoFetchSuccess: e,
						userInfoFetchFail: !e,
					}),
					r = {
						[n.zuq]: (e) => ({
							...e,
							userInfoFetching: !0,
							userInfoFetchSuccess: !1,
							userInfoFetchFail: !1,
						}),
						[n.K9b]: s(!0),
						[n.rEx]: s(!1),
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				const l = (e) => e.currentUserInfo.userInfo.socialNetwork,
					c = (e) => e.currentUserInfo.userInfo.socialIcon,
					d = (e) => e.currentUserInfo.userInfo.emailAddress,
					u = (e) => e.currentUserInfo.userInfoFetching;
			},
			679232: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					Iw: () => o,
					MI: () => c,
					Ok: () => d,
					Vt: () => l,
					lz: () => u,
				});
				var n = i(316550);
				const a = {
					moveIQEvents: {},
					moveIQEventsFetching: !1,
					moveIQEventsFetchFail: !1,
				};
				const s = {
					[n.NjK]: (e, t) => ({
						moveIQEvents: { ...e.moveIQEvents },
						moveIQEventsFetching: !0,
						moveIQEventsFetchFail: !1,
					}),
					[n.u3h]: (e, t) => ({
						moveIQEvents: {
							...e.moveIQEvents,
							[t.displayName]: {
								...e.moveIQEvents[t.displayName],
								[t.calendarDate]: t.moveIQEvents,
							},
						},
						moveIQEventsFetching: !1,
						moveIQEventsFetchFail: !1,
					}),
					[n.dPY]: (e, t) => ({
						moveIQEvents: { ...e.moveIQEvents },
						moveIQEventsFetching: !1,
						moveIQEventsFetchFail: !0,
					}),
					[n.Mir]: function (e, t) {
						return {
							moveIQEvents: {
								...e.moveIQEvents,
								[t.displayName]: {
									...e.moveIQEvents[t.displayName],
									[t.calendarDate]: [
										...e.moveIQEvents[t.displayName][t.calendarDate].filter(
											(e) =>
												e.startTimestampLocal !== t.event.startTimestampLocal ||
												e.deviceId !== t.event.deviceId
										),
									],
								},
							},
						};
					},
					[n.x$f]: function (e, t) {
						return {
							moveIQEvents: {
								...e.moveIQEvents,
								[t.displayName]: { ...e.moveIQEvents[t.displayName] },
							},
						};
					},
				};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i) {
					return {
						type: n.c2b,
						displayName: e,
						calendarDate: t,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				function l(e, t, i) {
					return { type: n.wSg, displayName: t, calendarDate: i, event: e };
				}
				const c = (e, t, i) =>
						e.moveIQEvents.moveIQEvents[t]
							? e.moveIQEvents.moveIQEvents[t][i]
							: null,
					d = (e) => e.moveIQEvents.moveIQEventsFetching,
					u = (e) => e.moveIQEvents.moveIQEventsFetchFail;
			},
			992353: (e, t, i) => {
				'use strict';
				i.d(t, { J: () => h, Ay: () => m });
				var n = i(316550),
					a = i(760953),
					s = i(507963),
					r = i(19045),
					o = i(543205);
				const l = ({ timestamp: e, directTimestamp: t, polyline: i }) => {
						const { index: n, isExactMatch: a } = (0, o.Ap)(t, e),
							{ index: s } = (0, o.TB)(i, e);
						return {
							metricsStartIdx: n,
							timestamp: a ? null : e,
							polylineStartIdx: s,
						};
					},
					c = {
						attributes: {
							hasInvalidStartEndTime: !1,
							hasParentActivityData: !1,
							hasChildActivityData: !1,
							hasMetricsData: !1,
							hasError: !1,
							activityData: null,
							metricsByKey: null,
							errorStatus: null,
						},
						putReconstructedActivityAttributes: {
							isSubmitting: !1,
							hasError: !1,
							showAlert: !1,
						},
						currentLegIndex: 0,
						activityIds: [],
						legDataByActivityId: null,
						completeMetricsByMetricsDescriptor: null,
						legIndexData: null,
						initialLegIndexData: [],
						legsSnapshotByName: {},
						trim: { start: null, end: null, eventType: null },
						trimSnapshot: { start: null, end: null },
					};
				let d = -1;
				const u = (e, t) => {
						if (e < 0) throw new Error('Negative legIndex.');
						if (e >= t) throw new Error(`LegIndex must be < legCount (${t})`);
						if (1 === t) throw new Error('Just one leg left, cannot remove.');
					},
					p = ({
						startTimestamp: e,
						directTimestamp: t,
						polyline: i,
						activityId: n,
						typeKey: a,
						typeId: s,
					}) => {
						const { index: r, isExactMatch: l } = (0, o.Ap)(t, e),
							{ index: c } = (0, o.TB)(i, e);
						return {
							activityId: n,
							typeKey: a,
							typeId: s,
							metricsStartIdx: r,
							polylineStartIdx: c,
							timestamp: l ? null : e,
						};
					},
					y = [
						'sumDistance',
						'sumDuration',
						'directSpeed',
						'directPower',
						'directElevation',
						'directHeartRate',
						'directTimestamp',
					],
					h = (e) => ({
						start: { timestamp: null, metricsStartIdx: 0, polylineStartIdx: 0 },
						end: {
							timestamp: null,
							metricsStartIdx: e.directTimestamp.length - 2,
							polylineStartIdx: e.polyline.length - 2,
						},
						eventType: 'ON_CHANGE',
					}),
					g = {
						[n.h4o]: (e) => ({
							...e,
							attributes: { ...e.attributes, hasError: !1 },
						}),
						[n.IIj]: (e, t) => {
							const { activityData: i } = t.payload;
							return {
								...e,
								attributes: {
									...e.attributes,
									hasError: !1,
									hasParentActivityData: !0,
									activityData: i,
								},
							};
						},
						[n.vos]: (e, t) => {
							const { response: i } = t.payload;
							return {
								...e,
								attributes: {
									...e.attributes,
									hasError: !0,
									errorStatus: i.status,
								},
							};
						},
						[n.ox_]: (e) => ({
							...e,
							attributes: { ...e.attributes, hasChildActivityData: !1 },
						}),
						[n.h5N]: (e, t) => {
							const { childActivities: i } = t.payload,
								n = i.map(({ activityId: e }) => e),
								a = i.map((e) => [e.activityId.toString(), e]).reduce(r.vw, {});
							return {
								...e,
								attributes: { ...e.attributes, hasChildActivityData: !0 },
								activityIds: n,
								legDataByActivityId: a,
							};
						},
						[n._wP]: (e) => ({ ...e }),
						[n.bBA]: (e, t) => {
							const { payload: i } = t,
								{ activityId: n } = i;
							return {
								...e,
								legMetricsByActivityId: {
									...e.legMetricsByActivityId,
									[n]: { isFetching: !0 },
								},
							};
						},
						[n.KPb]: (e, t) => {
							const { activityMetricsDTO: i } = t.payload,
								n = ((e) => {
									const t = (0, o.P9)(e),
										i = y
											.filter((e) => !(e in t))
											.map((e) => [e, []])
											.reduce(r.vw, {}),
										n = {
											...t,
											...i,
											polyline:
												e.geoPolylineDTO && e.geoPolylineDTO.polyline
													? e.geoPolylineDTO.polyline
													: [],
										};
									return (0, r.lg)(n), n;
								})(i),
								a = ((e, t) => {
									const i = e.activityReconstructDTO.reconstructRequest.map(
										({ startTime: e, activityId: i, activityTypeDTO: n }) => ({
											activityId: i,
											typeKey: n.typeKey,
											typeId: n.typeId,
											metricsStartIdx: t.directTimestamp.indexOf(e),
											polylineStartIdx: (0, r.AF)(
												(0, r.El)(t.polyline, e, (e, t) => (0, r.UD)(e, t.time))
											),
											timestamp: null,
										})
									);
									return (
										i.push({
											activityId: null,
											typeKey: null,
											typeId: null,
											metricsStartIdx: t.directTimestamp.length - 1,
											polylineStartIdx: t.polyline.length - 1,
											timestamp: null,
										}),
										i
									);
								})(i, n),
								s = h(n),
								l = ((e, t) => {
									const i = e.activityReconstructDTO.reconstructRequest.some(
										({ startTime: e, endTime: t }) => !e || !t
									);
									let n = !1;
									if (!i) {
										const i = e.activityReconstructDTO.reconstructRequest,
											a = i.reduce((e, t) =>
												e.startTime < t.startTime ? e : t
											).startTime,
											s = i.reduce((e, t) =>
												e.endTime > t.endTime ? e : t
											).endTime,
											r = t.directTimestamp,
											o = r.reduce((e, t) => (e < t ? e : t)),
											l = r.reduce((e, t) => (e > t ? e : t));
										n = !(a >= o && a <= l && s >= o && s <= l);
									}
									return i || n;
								})(i, n);
							return {
								...e,
								attributes: {
									...e.attributes,
									hasMetricsData: !0,
									hasInvalidStartEndTime: l,
								},
								completeMetricsByMetricsDescriptor: n,
								legIndexData: a,
								initialLegIndexData: [...a],
								trim: s,
								trimSnapshot: { ...s },
							};
						},
						[n.dhP]: (e, t) => {
							const { data: i } = t,
								{ activityId: n } = i;
							return {
								...e,
								legMetricsByActivityId: {
									...e.legMetricsByActivityId,
									[n]: { hasError: !0 },
								},
							};
						},
						[n.yR9]: (e, t) => {
							const { metricsByKey: i, legIndexData: n } = t.payload,
								a = [...n],
								s = h(i);
							return {
								...e,
								attributes: { ...e.attributes, hasMetricsData: !0 },
								completeMetricsByMetricsDescriptor: i,
								legIndexData: n,
								initialLegIndexData: a,
								trim: s,
								trimSnapshot: { ...s },
							};
						},
						[n.$CA]: (e, t) => ({ ...e, showSelectLegModal: t.payload }),
						[n.BC]: (e, t) => {
							let { currentLegIndex: i } = t.payload;
							const n = Math.max((0, s.qB)(e) - 1, 0);
							return (
								i < 0 && (i = 0), i > n && (i = n), { ...e, currentLegIndex: i }
							);
						},
						[n.d3g]: (e, t) => {
							const { legIndex: i, timestamp: n } = t.payload,
								{ completeMetricsByMetricsDescriptor: a, legIndexData: s } = e,
								{ directTimestamp: o, polyline: l } = a,
								{ activityId: c, typeKey: d, typeId: u } = s[i],
								y = p({
									startTimestamp: n,
									directTimestamp: o,
									polyline: l,
									activityId: c,
									typeKey: d,
									typeId: u,
								}),
								h = (0, r.j$)(s, i, y);
							return { ...e, legIndexData: h };
						},
						[n.sr2]: () => c,
						[n.fyJ]: (e, t) => {
							const {
									timestamp: i,
									typeKey: n,
									typeId: a,
									insertAtIndex: s,
								} = t.payload,
								{ legIndexData: o, completeMetricsByMetricsDescriptor: l } = e,
								{ directTimestamp: c, polyline: u } = l,
								y = p({
									startTimestamp: i,
									directTimestamp: c,
									polyline: u,
									activityId: d--,
									typeKey: n,
									typeId: a,
								}),
								h = (0, r.wq)(o, s, y);
							return { ...e, legIndexData: h };
						},
						[n.fHE]: (e, t) => {
							const { legIndex: i, mergeStrategy: n = a.x8 } = t.payload,
								{ legIndexData: s, currentLegIndex: o } = e,
								l =
									(0 === i ? a.x8 : n) === a.x8
										? ((e, t) => {
												const i = e.length - 1;
												u(t, i);
												const n = e[t];
												let a = e;
												return (
													(a = (0, r.j$)(a, t + 1, {
														...a[t + 1],
														metricsStartIdx: n.metricsStartIdx,
														polylineStartIdx: n.polylineStartIdx,
														timestamp: n.timestamp,
													})),
													(a = (0, r.pd)(a, t)),
													a
												);
											})(s, i)
										: ((e, t) => {
												u(t, e.length - 1);
												let i = e;
												return (
													(i = (0, r.pd)(i, t)),
													0 === t &&
														(i = (0, r.j$)(i, 0, {
															...i[0],
															polylineStartIdx: 0,
															metricsStartIdx: 0,
															timestamp: null,
														})),
													i
												);
											})(s, i),
								c = ((e, t, i) => (t >= e ? Math.max(t - 1, 0) : t))(i, o);
							return { ...e, currentLegIndex: c, legIndexData: l };
						},
						[n._Ni]: (e, t) => {
							const { snapshotName: i } = t.payload,
								n = [...e.legIndexData];
							return {
								...e,
								legsSnapshotByName: { ...e.legsSnapshotByName, [i]: n },
							};
						},
						[n.WkO]: (e, t) => {
							const { snapshotName: i } = t.payload,
								n = e.legsSnapshotByName[i];
							return { ...e, ...(n && { legIndexData: [...n] }) };
						},
						[n.Weo]: (e, t) => {
							const { snapshotName: i } = t.payload,
								{ [i]: n, ...a } = e.legsSnapshotByName;
							return { ...e, legsSnapshotByName: a };
						},
						[n.Wyt]: (e) => ({
							...e,
							putReconstructedActivityAttributes: {
								...e.putReconstructedActivityAttributes,
								isSubmitting: !0,
							},
						}),
						[n.x1z]: (e) => ({
							...e,
							putReconstructedActivityAttributes: {
								...e.putReconstructedActivityAttributes,
								isSubmitting: !1,
								hasError: !1,
							},
						}),
						[n.oli]: (e) => ({
							...e,
							putReconstructedActivityAttributes: {
								...e.putReconstructedActivityAttributes,
								isSubmitting: !1,
								hasError: !0,
								showAlert: !0,
							},
						}),
						[n.of5]: (e) => ({
							...e,
							putReconstructedActivityAttributes: {
								...e.putReconstructedActivityAttributes,
								showAlert: !1,
							},
						}),
						[n.Xoq]: (e, t) => {
							const { timestamp: i, eventType: n } = t.payload,
								{ directTimestamp: a, polyline: s } =
									e.completeMetricsByMetricsDescriptor,
								r = {
									...e.trim,
									start: l({ timestamp: i, directTimestamp: a, polyline: s }),
									eventType: n,
								};
							return { ...e, trim: r };
						},
						[n.KZ$]: (e, t) => {
							const { timestamp: i, eventType: n } = t.payload,
								{ directTimestamp: a, polyline: s } =
									e.completeMetricsByMetricsDescriptor,
								r = l({ timestamp: i, directTimestamp: a, polyline: s });
							return { ...e, trim: { ...e.trim, end: r, eventType: n } };
						},
						[n.bV0]: (e) => ({
							...e,
							trimSnapshot: { start: e.trim.start, end: e.trim.end },
						}),
						[n.VH4]: (e) => ({
							...e,
							trim: { ...e.trimSnapshot, eventType: 'SNAPSHOT_RESTORE' },
						}),
						[n.rZV]: (e) => {
							const t = h(e.completeMetricsByMetricsDescriptor);
							return { ...e, trim: t, trimSnapshot: { ...t } };
						},
						[n.vVR]: (e, t) => {
							const { activityId: i, typeKey: n, typeId: a } = t.payload;
							return {
								...e,
								legIndexData: e.legIndexData.map((e) =>
									e.activityId !== i ? e : { ...e, typeKey: n, typeId: a }
								),
							};
						},
					};
				function m(e = c, t) {
					const i = g[t.type];
					return i ? i(e, t) : e;
				}
			},
			413551: (e, t, i) => {
				'use strict';
				i.d(t, { F$: () => a, G$: () => r, Md: () => s, hH: () => n });
				const n = 2,
					a = 1e3,
					s = 'LEGS_SNAPSHOT_LAST_OPERATION',
					r = 'LEGS_SNAPSHOT_SET_ACTIVE_LEG';
			},
			507963: (e, t, i) => {
				'use strict';
				i.d(t, {
					wM: () => le,
					Cs: () => ce,
					Vm: () => h,
					aO: () => g,
					Ki: () => _,
					cy: () => G,
					PL: () => x,
					Yl: () => U,
					Bf: () => M,
					zI: () => k,
					Jn: () => de,
					wm: () => _e,
					Vr: () => S,
					QQ: () => I,
					eR: () => H,
					Jj: () => te,
					vX: () => me,
					jb: () => Z,
					dp: () => se,
					g5: () => R,
					E9: () => z,
					yT: () => K,
					jm: () => m,
					sb: () => ge,
					YO: () => Q,
					J_: () => he,
					sS: () => E,
					u5: () => B,
					U1: () => N,
					dr: () => D,
					j4: () => ye,
					jC: () => pe,
					tI: () => oe,
					gW: () => J,
					m0: () => A,
					$j: () => O,
					qB: () => T,
					aX: () => F,
					V: () => f,
					OA: () => C,
					Y1: () => V,
					Dr: () => ie,
					pN: () => ee,
					rh: () => re,
					Zg: () => b,
					LK: () => ue,
					eB: () => w,
					BP: () => L,
					iK: () => P,
					rP: () => X,
					Kj: () => q,
					qz: () => y,
				});
				var n = i(808643),
					a = i(490010),
					s = i(804329),
					r = i(693663),
					o = i(413551),
					l = i(19045),
					c = i(607839);
				const d = (e, t) =>
						e.metricsStartIdx === t.metricsStartIdx &&
						e.timestamp === t.timestamp &&
						e.activityId === t.activityId &&
						e.typeKey === t.typeKey &&
						e.typeId === t.typeId &&
						e.polylineStartIdx === t.polylineStartIdx,
					u = (e, t) => [e[t].metricsStartIdx, e[t + 1].metricsStartIdx],
					p = (e, t) => [e[t].polylineStartIdx, e[t + 1].polylineStartIdx],
					y = (e, t, i) => ({
						sumDistance: e.sumDistance.slice(...t),
						sumDuration: e.sumDuration.slice(...t),
						directTimestamp: e.directTimestamp.slice(...t),
						directSpeed: e.directSpeed.slice(...t),
						directPower: e.directPower.slice(...t),
						directElevation: e.directElevation.slice(...t),
						directHeartRate: e.directHeartRate.slice(...t),
						polyline: e.polyline.slice(...i),
					}),
					h = (e, t, i, n, a, s) => {
						if (!i || !n) return null;
						const r = a(e),
							o = a(t),
							l = o - r,
							c = o,
							d = s(e),
							u = s(t) - d,
							p = u / l,
							y = n[e.activityId],
							h =
								y &&
								y.summaryDTO &&
								y.summaryDTO.unitOfPoolLength &&
								y.summaryDTO.unitOfPoolLength.unitKey;
						return {
							duration: l,
							cumulativeDuration: c,
							distance: u,
							averageSpeed: p,
							typeKey: e.typeKey,
							unitOfPoolLength_unitKey: h,
						};
					},
					g = (e, t) =>
						(0, l.Ju)(e)
							.map(([e, i]) => {
								const n = t.findIndex((t) => t.activityId === e.activityId);
								if (-1 === n) return null;
								const a = [t[n].metricsStartIdx, t[n + 1].metricsStartIdx],
									s = [e.metricsStartIdx, i.metricsStartIdx];
								return (0, l.kX)(a, s);
							})
							.filter((e) => null !== e)
							.filter((e) => !e).length,
					m = (e) => e.attributes.errorStatus,
					A = (e) =>
						!e.attributes.activityData ||
						e.attributes.activityData.isMultiSportParent,
					_ = (e) => e.attributes.activityData,
					E = (0, s.Mz)(
						(e) => e.attributes.hasParentActivityData,
						(e) => e.attributes.hasChildActivityData,
						(e) => e.attributes.hasMetricsData,
						(e, t, i) => e && t && i
					),
					T = (e) => (e.legIndexData ? e.legIndexData.length - 1 : 0),
					C = (e) => {
						const t = Q(e),
							i = ge(e),
							{
								completeMetricsByMetricsDescriptor: n,
								legDataByActivityId: a,
								legIndexData: s,
							} = e,
							r = s && s.length;
						if (!n || r <= 0) return null;
						const o = [];
						for (let l = 0; l < s.length - 1; l++) {
							const e = s[l],
								r = s[l + 1],
								c = h(e, r, n, a, t, i);
							o.push(c);
						}
						return o;
					},
					S = (e) => e.completeMetricsByMetricsDescriptor,
					I = (e) => e.currentLegIndex,
					v = (e) => e.currentLegIndex + 1,
					f = (e) => e.legIndexData,
					D = (e) => e.initialLegIndexData,
					N = (e) => e.activityIds,
					R = (e) => e.completeMetricsByMetricsDescriptor.directTimestamp,
					b = (e) => e.completeMetricsByMetricsDescriptor.polyline,
					L = (e) => e.completeMetricsByMetricsDescriptor.sumDistance,
					P = (e) => e.completeMetricsByMetricsDescriptor.sumDuration,
					O = (e) => e.putReconstructedActivityAttributes.isSubmitting,
					w = (e) => e.putReconstructedActivityAttributes.showAlert,
					F = (e) => e.legDataByActivityId,
					k = (e) => e.completeMetricsByMetricsDescriptor.sumDuration[0],
					U = (e) =>
						(0, l.Ps)(e.completeMetricsByMetricsDescriptor.sumDuration),
					M =
						((0, s.Mz)(
							(e) => e.completeMetricsByMetricsDescriptor.directTimestamp[0],
							(e) =>
								(0, l.Ps)(e.completeMetricsByMetricsDescriptor.directTimestamp),
							(e, t) => (t - e) / o.F$
						),
						(e) => e.completeMetricsByMetricsDescriptor.sumDistance[0]),
					G = (e) =>
						(0, l.Ps)(e.completeMetricsByMetricsDescriptor.sumDistance),
					x = (e) =>
						e.completeMetricsByMetricsDescriptor.directTimestamp.length - 1,
					B = (e) => e.attributes.hasInvalidStartEndTime,
					H = (0, s.Mz)(I, f, (e, t) => (t ? t[e] : null)),
					V = (0, s.Mz)(v, f, (e, t) => (t ? t[e] : null)),
					W = (0, s.Mz)(I, f, (e, t) => (t ? t[e + 2] : null)),
					J = (0, s.Mz)(I, T, (e, t) => e === t - 1),
					Y = (0, s.Mz)(H, (e) => e),
					$ = (0, s.Mz)(I, f, (e, t) => t[e + 1]),
					j = (0, s.Mz)(W, D, J, (e, t, i) => (i ? t[t.length - 1] : e)),
					K = (0, s.Mz)(Y, j, (e, t) => ({ start: e, end: t })),
					z = (0, s.Mz)(Y, $, j, (e, t, i) => ({
						start: e,
						middle: t,
						end: i,
					})),
					q = (0, s.Mz)(n.TO, (e) =>
						e.filter(
							(e) => e.trimmable && !e.restricted && 'multi_sport' !== e.typeKey
						)
					),
					Q = (0, s.Mz)(
						R,
						P,
						(e, t) =>
							({ metricsStartIdx: i, timestamp: n }) => {
								let a;
								if (n) {
									const s = e[i - 1],
										o = e[i],
										l = t[i - 1],
										c = t[i];
									a = r.A.linearInterpolating(s, l, o, c, n);
								} else a = t[i];
								return a;
							}
					),
					X = (0, s.Mz)(f, Q, (e, t) => {
						const i = t((0, l.dH)(e));
						return t((0, l.Ps)(e)) - i;
					}),
					Z = (0, s.Mz)(H, (e) => e && e.typeKey),
					ee = (0, s.Mz)(V, (e) => e && e.typeKey),
					te = (0, s.Mz)(I, f, S, (e, t, i) => {
						if (!i) return null;
						const n = u(t, e),
							a = p(t, e);
						return y(i, n, a);
					}),
					ie = (0, s.Mz)(v, J, f, S, (e, t, i, n) => {
						if (t) return null;
						if (!n) return null;
						const a = u(i, e),
							s = p(i, e);
						return y(n, a, s);
					}),
					ne = (0, s.Mz)(I, f, (e, t) => {
						const i = t && t[e];
						return i && i.activityId;
					}),
					ae = (0, s.Mz)(v, f, (e, t) => {
						const i = t && t[e];
						return i && i.activityId;
					}),
					se = (0, s.Mz)(F, ne, (e, t) => {
						const i = t && e[t];
						return i && i.summaryDTO.unitOfPoolLength;
					}),
					re = (0, s.Mz)(F, ae, (e, t) => {
						const i = t && e[t];
						return i && i.summaryDTO.unitOfPoolLength;
					}),
					oe = (0, s.Mz)(T, (e) => e > o.hH),
					le = 'ADD',
					ce = 'DELETE',
					de = (0, s.Mz)(D, R, (e, t) => (i) => {
						const n = i.map((e) => e.activityId),
							a = (e) => (e < 0 ? le : 'EDIT'),
							s = (0, l.Ju)(i).map(
								([
									{
										activityId: e,
										typeId: i,
										timestamp: n,
										metricsStartIdx: s,
									},
									r,
								]) => ({
									activityId: e,
									activityTypeDTO: { typeId: i },
									operation: a(e),
									startTime: n || t[s],
									endTime: r.timestamp || t[r.metricsStartIdx],
								})
							),
							r = e
								.filter(({ activityId: e }) => !n.includes(e))
								.map((e) => ({ activityId: e.activityId, operation: ce }));
						return s.concat(r);
					}),
					ue = (0, s.Mz)(f, D, de, (e, t, i) => {
						const n = i(e),
							a = n.filter((e) => e.operation === le).length,
							s = n.filter((e) => e.operation === ce).length,
							r = g(e, t);
						let o = '';
						return (
							e.forEach((e, t) => {
								e.typeKey &&
									(o +=
										0 !== t
											? e.typeKey
											: (e.typeKey += ' to ' + e.typeKey + ', '));
							}),
							{
								reconstructDTOs: n,
								convertAnalyticsString: o,
								analyticsData: {
									addedLegsCount: a,
									deletedLegsCount: s,
									editedLegsCount: r,
								},
							}
						);
					}),
					pe = (0, s.Mz)(
						f,
						(e) => (t) => e.legsSnapshotByName[t],
						(e, t) => {
							const i = t(o.G$);
							if (!i) return !1;
							return !(0, l.kX)(e, i);
						}
					),
					ye = (0, s.Mz)(f, D, (e, t) => !(0, l.kX)(e, t, d)),
					he = (0, s.Mz)(R, (e) => (t) => t.timestamp || e[t.metricsStartIdx]),
					ge = (0, s.Mz)(
						R,
						L,
						(e, t) =>
							({ metricsStartIdx: i, timestamp: n }) =>
								n ? (0, a.xV)(n, e, t, i) : t[i]
					),
					me = (0, s.Mz)(H, V, S, F, Q, ge, h),
					Ae = (0, s.Mz)(P, (e) => (t) => {
						const i = e[t.metricsStartIdx];
						let n = t.metricsStartIdx;
						for (; n >= 0 && e[n] === i; ) n--;
						return n++, n === t.metricsStartIdx ? t : (0, c.B)(n);
					}),
					_e = (0, s.Mz)(he, Ae, (e, t) => (i, n) => {
						const a = t(i.end),
							s = ((e, t, i) => ({
								isStart: e - t < o.F$,
								isEnd: i - e < o.F$,
							}))(n, e(i.start), e(a));
						return s;
					});
			},
			19045: (e, t, i) => {
				'use strict';
				i.d(t, {
					AF: () => l,
					El: () => o,
					Gc: () => A,
					Ju: () => p,
					Ps: () => g,
					UD: () => d,
					dH: () => m,
					il: () => c,
					j$: () => a,
					kX: () => h,
					lg: () => u,
					pd: () => r,
					vw: () => n,
					wq: () => s,
					xv: () => E,
				});
				const n = (e, [t, i]) => ({ ...e, [t]: i }),
					a = (e, t, i) => Object.assign(e.slice(), { [t]: i }),
					s = (e, t, i) => {
						const n = e.slice();
						return n.splice(t, 0, i), n;
					},
					r = (e, t) => {
						const i = e.slice();
						return i.splice(t, 1), i;
					};
				function o(e, t, i) {
					for (var n = 0, a = e.length - 1; n <= a; ) {
						var s = (a + n) >> 1,
							r = i(t, e[s]);
						if (r > 0) n = s + 1;
						else {
							if (!(r < 0)) return s;
							a = s - 1;
						}
					}
					return -n - 1;
				}
				const l = (e) => (e < 0 ? ~e : e),
					c = (e, t) => (Math.abs(e - t) < 0.001 ? 0 : e - t),
					d = (e, t) => e - t,
					u = (e) => {
						Object.keys(e).map((t) => {
							return (i = e[t]).length && i.push(i[i.length - 1]), i;
							var i;
						});
					},
					p = (e) =>
						e
							.map((t, i) => [t, e[i + 1]])
							.filter(
								(e) =>
									null !== e[0] &&
									void 0 !== e[0] &&
									null !== e[1] &&
									void 0 !== e[1]
							),
					y = (e, t) => e === t,
					h = (e, t, i = y) => {
						let n = e.length === t.length;
						for (let a = 0; a < e.length && n; a++) {
							const s = i(e[a], t[a]);
							n = n && s;
						}
						return n;
					},
					g = (e) => e[e.length - 1],
					m = (e) => e[0],
					A = (e, t) => {
						const [i, n] = t;
						let a = e;
						return a < i && (a = i), a > n && (a = n), a;
					},
					_ = (e, t) => {
						if (e[0] > t[0]) return _(t, e);
						const [i, n] = e,
							[a, s] = t;
						return n > a ? [a, n] : null;
					},
					E = (e, t, i) => {
						const [n, a] = t,
							s = i ? (e) => e[i] : (e) => e,
							r = i ? (e, t) => ({ ...e, [i]: t }) : (e, t) => t,
							o = p(e)
								.map(([e, i]) => {
									const n = s(e),
										a = s(i),
										o = _([n, a], t);
									return o ? r(e, o[0]) : null;
								})
								.filter((e) => null !== e),
							l = m(e),
							c = g(e);
						if (_([s(l), s(c)], t)) {
							const e = Math.min(a, s(c));
							o.push(r(c, e));
						}
						return o;
					};
			},
			607839: (e, t, i) => {
				'use strict';
				i.d(t, { B: () => n, i: () => a });
				const n = (e, t = null) => ({ metricsStartIdx: e, timestamp: t }),
					a = (e, t) => {
						if (null === e || null === t) return e === t;
						return (
							e.metricsStartIdx === t.metricsStartIdx &&
							e.timestamp === t.timestamp
						);
					};
			},
			490010: (e, t, i) => {
				'use strict';
				i.d(t, { Km: () => a, h5: () => o, m2: () => r, xV: () => s });
				var n = i(693663);
				const a = (e, t, i, a) => {
						const s = t[a - 1],
							r = t[a];
						let o = i[a - 1],
							l = i[a];
						!o && (o = l), !l && (l = o);
						return n.A.linearInterpolating(s, o, r, l, e);
					},
					s = (e, t, i, a) => {
						const s = t[a - 1],
							r = t[a],
							o = i[a - 1],
							l = i[a];
						return n.A.linearInterpolating(s, o, r, l, e);
					},
					r = (e, t, i, a) => {
						const s = t[a - 1],
							r = t[a],
							o = i[a - 1],
							l = i[a];
						return n.A.timestampInterpolating(s, o, r, l, e);
					},
					o = (e, t, i, a) => {
						const s = i[a - 1],
							r = i[a],
							o = t[a - 1],
							l = t[a];
						return n.A.linearInterpolating(s, o, r, l, e);
					};
			},
			543205: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ap: () => d,
					P9: () => o,
					TB: () => u,
					Yz: () => p,
					x7: () => y,
				});
				var n = i(19045),
					a = (i(693663), i(607839)),
					s = i(490010);
				const r = (e, t) => e.map(({ metrics: e }) => e[t]);
				function o(e) {
					if (!e) return null;
					const { metricDescriptors: t, activityDetailMetrics: i } = e;
					if (!t) return null;
					if (!i || 0 === i.length) return null;
					return t
						.map((e) => {
							const { metricsIndex: t, key: n } = e;
							return [n, r(i, t)];
						})
						.reduce(n.vw, {});
				}
				const l = (e, t) => (0, n.il)(e, t.time),
					c = (e, t, i) => {
						const a = (0, n.El)(e, t, i),
							s = a >= 0;
						return { index: s ? a : ~a, isExactMatch: s };
					},
					d = (e, t) => c(e, t, n.il),
					u = (e, t) => c(e, t, l),
					p = (e, { sumDuration: t, directTimestamp: i }) => {
						const { index: r, isExactMatch: o } = ((e, t) => c(e, t, n.il))(
								t,
								e
							),
							l = o ? i[r] : (0, s.h5)(e, i, t, r);
						return (0, a.B)(r, l);
					},
					y = (e, { sumDistance: t, directTimestamp: i }) => {
						const { index: r, isExactMatch: o } = ((e, t) => c(e, t, n.il))(
								t,
								e
							),
							l = o ? i[r] : (0, s.m2)(e, i, t, r);
						return (0, a.B)(r, l);
					};
			},
			6062: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, NE: () => r, Nj: () => o });
				var n = i(316550);
				const a = {
						muscleMappingModel: void 0,
						muscleMappingModelFetching: !1,
						muscleMappingModelSuccess: !1,
						muscleMappingModelFail: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						muscleMappingModel: e ? i.muscleMappingModel : {},
						muscleMappingModelFetching: !1,
						muscleMappingModelSuccess: e,
						muscleMappingModelFail: !e,
					}),
					r = (e) => e.muscleMappingModel.muscleMappingModelFetching,
					o = (e) => e.muscleMappingModel.muscleMappingModel,
					l = {
						[n.LnP]: (e) => ({ ...e, muscleMappingModelFetching: !0 }),
						[n.M1f]: s(!0),
						[n.f9c]: s(!1),
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
			},
			632120: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => l, v: () => o });
				var n = i(316550);
				const a = {
						isFetching: !1,
						fetchSuccess: !1,
						fetchFailed: !1,
						start: 1,
						connectionList: [],
						mutualConnectionsModalInfo: { displayName: '', show: !1, count: 0 },
					},
					s =
						(e) =>
						(t, { data: i, start: n }) => ({
							...t,
							isFetching: !1,
							fetchSuccess: e,
							fetchFailed: !e,
							connectionList: e
								? t.connectionList.concat(i.profileList)
								: t.connectionList,
							start: e ? n : t.start,
						}),
					r = {
						[n.XSI]: (e, { reset: t }) => ({
							...e,
							isFetching: !0,
							fetchFailed: !1,
							fetchSuccess: !1,
							connectionList: t ? [] : e.connectionList,
							start: t ? 1 : e.start,
						}),
						[n.okM]: s(!0),
						[n.FT8]: s(!1),
						[n.xnF]: () => a,
						[n.r55]: (e, t) => {
							const { displayName: i, show: n, count: a } = t.payload;
							return {
								...e,
								mutualConnectionsModalInfo: {
									displayName: i,
									show: n,
									count: a,
								},
							};
						},
					},
					o = (e) => e.mutualConnections.mutualConnectionsModalInfo;
				function l(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			889093: (e, t, i) => {
				'use strict';
				i.d(t, {
					$1: () => m,
					Ay: () => E,
					EI: () => _,
					EJ: () => A,
					ES: () => y,
					LA: () => g,
					Qq: () => p,
					zy: () => h,
				});
				var n = i(316550);
				const a = {
						activityList: [],
						activitiesFetching: !1,
						activitiesFetchingSuccess: !1,
						activitiesFetchingFail: !1,
						activityPrivacyUpdating: { activityId: null, updating: !1 },
						activityPrivacyUpdateSuccess: !1,
						activityPrivacyUpdateFail: !1,
						hasError: !1,
						daysLimit: null,
						nextCursor: null,
						conversationLikeUpdating: {},
						reportDialog: {
							open: !1,
							submitting: !1,
							error: !1,
							reviewStatus: null,
							activityId: null,
							imageUuid: null,
						},
					},
					s = { public: 1, private: 2, subscribers: 3, groups: 4 },
					r = (e) => (t, i) => {
						let { activityList: n, daysLimit: a, nextCursor: s } = t;
						if (e) {
							const { data: e } = i;
							(n =
								n.length > 0 && null === e.filter.cursor
									? e.activityList
									: n.concat(e.activityList)),
								(a = e.daysLimit),
								(s = e.filter.nextCursor);
						}
						return {
							...t,
							activityList: n,
							daysLimit: a,
							nextCursor: s,
							activitiesFetching: !1,
							activitiesFetchingSuccess: e,
							activitiesFetchingFail: !e,
						};
					},
					o = (e) => (t, i) => {
						let n;
						if (e) {
							const { accessControlRuleDTO: e, activityId: a } = i,
								{ typeKey: r } = e;
							n = t.activityList.map(
								(e) => (
									e.activityId === a &&
										(e.privacy = { typeKey: r, typeId: s[r] }),
									e
								)
							);
						}
						return {
							...t,
							activityList: e ? n : t.activityList,
							activityPrivacyUpdating: { activityId: null, updating: !1 },
							activityPrivacyUpdateSuccess: e,
							activityPrivacyUpdateFail: !e,
						};
					},
					l = (e, { activityId: t }) => ({
						...e,
						conversationLikeUpdating: {
							...e.conversationLikeUpdating,
							[t]: !0,
						},
					}),
					c =
						(e) =>
						(t, { activityId: i, likerInfo: n }) => {
							if (e) {
								const {
									profileImageUrlSmall: e,
									fullName: a,
									displayName: s,
								} = n;
								return {
									...t,
									activityList: t.activityList.map((t) =>
										t.activityId === i
											? {
													...t,
													likedByUser: !0,
													numberOfActivityLikes: t.numberOfActivityLikes + 1,
													activityLikeDisplayNames: t.activityLikeDisplayNames
														? [...t.activityLikeDisplayNames, s]
														: [s],
													activityLikeFullNames: t.activityLikeFullNames
														? [...t.activityLikeFullNames, a]
														: [a],
													activityLikeProfileImageUrls:
														t.activityLikeProfileImageUrls
															? [...t.activityLikeProfileImageUrls, e]
															: [e],
												}
											: t
									),
									conversationLikeUpdating: {
										...t.conversationLikeUpdating,
										[i]: !1,
									},
								};
							}
							return {
								...t,
								conversationLikeUpdating: {
									...t.conversationLikeUpdating,
									[i]: !1,
								},
							};
						},
					d =
						(e) =>
						(t, { activityId: i, likerInfo: n }) => {
							if (e) {
								const {
									profileImageUrlSmall: e,
									fullName: a,
									displayName: s,
								} = n;
								return {
									...t,
									activityList: t.activityList.map((t) =>
										t.activityId === i
											? {
													...t,
													likedByUser: !1,
													numberOfActivityLikes: t.numberOfActivityLikes - 1,
													activityLikeDisplayNames:
														t.activityLikeDisplayNames.filter((e) => e !== s),
													activityLikeFullNames: t.activityLikeFullNames.filter(
														(e) => e !== a
													),
													activityLikeProfileImageUrls:
														t.activityLikeProfileImageUrls.filter(
															(t) => t !== e
														),
												}
											: t
									),
									conversationLikeUpdating: {
										...t.conversationLikeUpdating,
										[i]: !1,
									},
								};
							}
							return {
								...t,
								conversationLikeUpdating: {
									...t.conversationLikeUpdating,
									[i]: !1,
								},
							};
						},
					u = {
						[n.tlM]: (e) => ({ ...e, activitiesFetching: !0 }),
						[n.Kwd]: r(!0),
						[n.p4H]: r(!1),
						[n.PFn]: () => a,
						[n.HgN]: (e, t) => {
							const { addCount: i, activityId: n } = t.payload;
							return {
								...e,
								activityList: e.activityList.map(
									(e) => (
										e.activityId === n &&
											(e.numberOfActivityComments = i
												? e.numberOfActivityComments + 1
												: e.numberOfActivityComments - 1),
										e
									)
								),
							};
						},
						[n.$J4]: (e, t) => ({
							...e,
							activityPrivacyUpdating: {
								activityId: t.activityId,
								updating: !0,
							},
						}),
						[n.sA8]: o(!0),
						[n.bSH]: o(!1),
						[n.QXx]: (e, { hasError: t }) => ({ ...e, hasError: t }),
						[n.IZT]: (e, { displayName: t }) => {
							const i = e.activityList.findIndex(
								(e) => e.ownerDisplayName === t
							);
							return {
								...e,
								activityList: e.activityList
									.filter((e) => e.ownerDisplayName !== t)
									.map((e, t) => ({ ...e, shouldAnimate: t >= i })),
							};
						},
						[n.SS$]: l,
						[n.VFA]: c(!0),
						[n.mGT]: c(!1),
						[n.bdI]: l,
						[n.m1p]: d(!0),
						[n.jMC]: d(!1),
						[n.oge]: (e, { data: t }) => ({
							...e,
							activityList: e.activityList.map((e) => {
								if (e.activityId === t.activityId) {
									const {
										likedByUser: i,
										numberOfActivityLikes: n,
										activityLikeDisplayNames: a,
										activityLikeFullNames: s,
										activityLikeProfileImageUrls: r,
									} = t;
									return {
										...e,
										likedByUser: i,
										numberOfActivityLikes: n,
										activityLikeDisplayNames: a,
										activityLikeFullNames: s,
										activityLikeProfileImageUrls: r,
									};
								}
								return e;
							}),
						}),
						[n.H$_]: (e, t) => ({
							...e,
							reportDialog: {
								open: !0,
								submitting: !1,
								error: !1,
								reviewStatus: null,
								activityId: t.activityId,
								imageUuid: t.imageUuid,
							},
						}),
						[n.T39]: (e) => ({
							...e,
							reportDialog: { ...e.reportDialog, open: !1 },
						}),
						[n.ocE]: (e, t) => ({
							...e,
							reportDialog: { ...e.reportDialog, submitting: !0 },
						}),
						[n.BBw]: (e, t) =>
							t.error
								? {
										...e,
										reportDialog: {
											...e.reportDialog,
											error: !0,
											submitting: !1,
										},
									}
								: {
										...e,
										reportDialog: {
											...e.reportDialog,
											error: !1,
											submitting: !1,
											reviewStatus: t.reviewStatus,
										},
									},
						[n.eoq]: (e, t) => {
							let i = e.activityList || [];
							const n = i.findIndex((e) => e.activityId === t.activityId);
							if (n < 0 || !i[n].activityImages) return e;
							const a = { ...i[n] },
								s = a.activityImages.filter((e) => e.imageId !== t.imageUuid);
							return (
								(i = i.slice()),
								(a.activityImages = s),
								i.splice(n, 1, a),
								{ ...e, activityList: i }
							);
						},
					},
					p = (e) => e.newsFeedActivities.activitiesFetching,
					y = (e) => e.newsFeedActivities.activityList,
					h = (e) => e.newsFeedActivities.daysLimit,
					g = (e) => e.newsFeedActivities.activityPrivacyUpdating,
					m = (e) => e.newsFeedActivities.hasError,
					A = (e) => null !== e.newsFeedActivities.nextCursor,
					_ = (e) => e.newsFeedActivities.reportDialog;
				function E(e = a, t = {}) {
					const i = u[t.type];
					return i ? i(e, t) : e;
				}
			},
			445886: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => E,
					BQ: () => g,
					HR: () => A,
					YH: () => m,
					bY: () => y,
					dy: () => h,
					mM: () => _,
				});
				var n = i(316550);
				const a = {
						comments: {},
						commentsFetching: {},
						commentsFetchSuccess: {},
						commentsFetchFail: {},
						commentAdding: {},
						commentAddSuccess: {},
						commentAddFail: {},
						commentEditing: { conversationCommentUuid: null, editing: !1 },
						commentEditSuccess: { conversationCommentUuid: null, success: !1 },
						commentEditFail: { conversationCommentUuid: null, fail: !1 },
						highlightedComments: {},
						commentRemoving: !1,
						commentRemoveSuccess: !1,
						commentRemoveFail: !1,
						commentLikers: {},
						initialCommentsFetchDone: {},
						errorRenderKey: 0,
					},
					s =
						(e) =>
						(t, { data: i, activityId: n }) => {
							let a;
							return (
								e && (a = r(n, t.comments, i, !0)),
								{
									...t,
									comments: e ? a : t.comments,
									commentsFetching: { ...t.commentsFetching, [n]: !1 },
									commentsFetchSuccess: { ...t.commentsFetchSuccess, [n]: e },
									commentsFetchFail: { ...t.commentsFetchFail, [n]: !e },
									initialCommentsFetchDone: e
										? { ...t.initialCommentsFetchDone, [n]: !0 }
										: t.initialCommentsFetchDone,
								}
							);
						},
					r = (e, t, i, n = !1) => {
						let a;
						return (
							(a = t
								? t[e]
									? { ...t, [e]: n ? i.concat(t[e]) : t[e].concat(i) }
									: { ...t, [e]: i }
								: { [e]: i }),
							a
						);
					},
					o =
						(e) =>
						(t, { data: i, activityId: n, errorReachLimit: a }) => {
							let s,
								o,
								l = t.errorRenderKey;
							return (
								e
									? ((s = r(n, t.comments, [i])),
										(o = r(n, t.highlightedComments, [{ ...i }])))
									: (l = Date.now()),
								{
									...t,
									commentAdding: { ...t.commentAdding, [n]: !1 },
									commentAddSuccess: { ...t.commentAddSuccess, [n]: e },
									commentAddFail: { ...t.commentAddFail, [n]: !e && !a },
									comments: e ? s : t.comments,
									highlightedComments: e ? o : t.highlightedComments,
									errorRenderKey: l,
								}
							);
						},
					l = (e) => (t, i) => {
						const { data: n, activityId: a, conversationCommentUuid: s } = i;
						let r = !1,
							o = !1,
							l = t.errorRenderKey;
						return (
							e
								? ((r =
										t.comments &&
										Array.isArray(t.comments[a]) &&
										t.comments[a].some((e) => e.conversationCommentUuid === s)),
									(o =
										t.highlightedComments &&
										Array.isArray(t.highlightedComments[a]) &&
										t.highlightedComments[a].some(
											(e) => e.conversationCommentUuid === s
										)))
								: (l = Date.now()),
							{
								...t,
								commentEditing: { conversationCommentUuid: s, editing: !1 },
								commentEditSuccess: { conversationCommentUuid: s, success: e },
								commentEditFail: { conversationCommentUuid: s, fail: !e },
								comments:
									e && r
										? {
												...t.comments,
												[a]: t.comments[a].map((e) => {
													if (e.conversationCommentUuid === s) {
														const {
															body: t,
															updated: i,
															commentBlockList: a,
														} = n;
														return {
															...e,
															body: t,
															commentBlockList: a,
															updated: i,
														};
													}
													return e;
												}),
											}
										: t.comments,
								highlightedComments:
									e && o
										? {
												...t.highlightedComments,
												[a]: t.highlightedComments[a].map((e) => {
													if (e.conversationCommentUuid === s) {
														const {
															body: t,
															updated: i,
															commentBlockList: a,
														} = n;
														return {
															...e,
															body: t,
															commentBlockList: a,
															updated: i,
														};
													}
													return e;
												}),
											}
										: t.highlightedComments,
								errorRenderKey: l,
							}
						);
					},
					c = (e) => (t, i) => {
						const { activityId: n, conversationCommentUuid: a } = i;
						let s = !1,
							r = !1;
						return (
							e &&
								((s =
									t.comments &&
									Array.isArray(t.comments[n]) &&
									t.comments[n].some((e) => e.conversationCommentUuid === a)),
								(r =
									t.highlightedComments &&
									Array.isArray(t.highlightedComments[n]) &&
									t.highlightedComments[n].some(
										(e) => e.conversationCommentUuid === a
									))),
							{
								...t,
								commentRemoving: !1,
								commentRemoveSuccess: e,
								commentRemoveFail: !e,
								comments:
									e && s
										? {
												...t.comments,
												[n]: t.comments[n].filter(
													(e) => e.conversationCommentUuid !== a
												),
											}
										: t.comments,
								highlightedComments:
									e && r
										? {
												...t.highlightedComments,
												[n]: t.highlightedComments[n].filter(
													(e) => e.conversationCommentUuid !== a
												),
											}
										: t.highlightedComments,
							}
						);
					},
					d = (e) => (t, i) => (e ? u(t, i) : t),
					u = (
						e,
						{ activityId: t, commentUuid: i, likers: n, numberOfLikes: a }
					) => {
						const s =
								e.comments &&
								Array.isArray(e.comments[t]) &&
								e.comments[t].some((e) => e.conversationCommentUuid === i),
							r =
								e.highlightedComments &&
								Array.isArray(e.highlightedComments[t]) &&
								e.highlightedComments[t].some(
									(e) => e.conversationCommentUuid === i
								);
						return {
							...e,
							comments: s
								? {
										...e.comments,
										[t]: e.comments[t].map(
											(e) => (
												e.conversationCommentUuid === i &&
													(e.numberOfLikes = a),
												e
											)
										),
									}
								: e.comments,
							highlightedComments: r
								? {
										...e.highlightedComments,
										[t]: e.highlightedComments[t].map(
											(e) => (
												e.conversationCommentUuid === i &&
													((e.numberOfLikes = a),
													e.hasOwnProperty('likerFullNames') &&
														(e.likerFullNames = n.map(
															(e) => e.fullName || e.displayName
														))),
												e
											)
										),
									}
								: e.highlightedComments,
							commentLikers: { ...e.commentLikers, [i]: n },
						};
					},
					p = {
						[n.kFk]: (e, { activityId: t }) => ({
							...e,
							commentsFetching: { ...e.commentsFetching, [t]: !0 },
							commentsFetchSuccess: { ...e.commentsFetchSuccess, [t]: !1 },
							commentsFetchFail: { ...e.commentsFetchFail, [t]: !1 },
						}),
						[n.HuV]: s(!0),
						[n._09]: s(!1),
						[n.QUe]: (e, { activityId: t }) => ({
							...e,
							commentAdding: { ...e.commentAdding, [t]: !0 },
							commentAddSuccess: { ...e.commentAddSuccess, [t]: !1 },
							commentAddFail: { ...e.commentAddFail, [t]: !1 },
						}),
						[n.HvM]: o(!0),
						[n.aHb]: o(!1),
						[n.PeN]: (e, { conversationCommentUuid: t }) => ({
							...e,
							commentEditing: { conversationCommentUuid: t, editing: !0 },
							commentEditSuccess: { conversationCommentUuid: t, success: !1 },
							commentEditFail: { conversationCommentUuid: t, fail: !1 },
						}),
						[n.uyD]: l(!0),
						[n.bl$]: l(!1),
						[n.usX]: (e, t) => {
							const { activityList: i } = t.data;
							if (!i) return e;
							const n = { ...e.highlightedComments };
							return (
								i.forEach((e) => {
									const { highlightedComment: t, activityId: i } = e;
									t && (n[i] = [t]);
								}),
								{ ...e, highlightedComments: n }
							);
						},
						[n.RJp]: (e) => ({ ...e, commentRemoving: !0 }),
						[n.yeF]: c(!0),
						[n.T$R]: c(!1),
						[n.DX5]: (e, t) => {
							const {
									activityId: i,
									conversationCommentUuid: n,
									likedByUser: a,
									fullName: s,
									displayName: r,
								} = t.payload,
								o =
									e.comments &&
									Array.isArray(e.comments[i]) &&
									e.comments[i].some((e) => e.conversationCommentUuid === n),
								l =
									e.highlightedComments &&
									Array.isArray(e.highlightedComments[i]) &&
									e.highlightedComments[i].some(
										(e) => e.conversationCommentUuid === n
									);
							let c = e.commentLikers[n] || [];
							return (
								a
									? c.push({ fullName: s, displayName: r })
									: (c = c.filter((e) => e.fullName !== s)),
								{
									...e,
									comments: o
										? {
												...e.comments,
												[i]: e.comments[i].map(
													(e) => (
														e.conversationCommentUuid === n &&
															((e.likedByUser = a),
															(e.numberOfLikes = a
																? e.numberOfLikes + 1
																: e.numberOfLikes - 1)),
														e
													)
												),
											}
										: e.comments,
									highlightedComments: l
										? {
												...e.highlightedComments,
												[i]: e.highlightedComments[i].map(
													(e) => (
														e.conversationCommentUuid === n &&
															((e.likedByUser = a),
															(e.numberOfLikes = a
																? e.numberOfLikes + 1
																: e.numberOfLikes - 1),
															e.hasOwnProperty('likerFullNames') &&
																(e.likerFullNames = a
																	? e.likerFullNames.concat([s])
																	: e.likerFullNames.filter((e) => e !== s))),
														e
													)
												),
											}
										: e.highlightedComments,
									commentLikers: { ...e.commentLikers, [n]: c },
								}
							);
						},
						[n.QI7]: () => a,
						[n.r4R]: d(!0),
						[n.WUz]: d(!1),
						[n.IO1]: u,
					},
					y = (e) =>
						Object.values(e.newsFeedComments.commentAddFail).some(
							(e) => !0 === e
						),
					h = (e, t) =>
						e.newsFeedComments.commentEditing.conversationCommentUuid === t &&
						e.newsFeedComments.commentEditing.editing,
					g = (e, t) =>
						e.newsFeedComments.commentEditFail.conversationCommentUuid === t &&
						e.newsFeedComments.commentEditFail.fail,
					m = (e) => e.newsFeedComments.commentEditFail.fail,
					A = (e) => e.newsFeedComments.errorRenderKey,
					_ = (e, t) => e.newsFeedComments.commentLikers[t];
				function E(e = a, t = {}) {
					const i = p[t.type];
					return i ? i(e, t) : e;
				}
			},
			923527: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ak: () => D,
					Ay: () => P,
					CP: () => A,
					Dr: () => m,
					EU: () => v,
					Kn: () => L,
					NF: () => R,
					NV: () => N,
					OB: () => h,
					Ob: () => _,
					Qb: () => b,
					Sr: () => C,
					U_: () => I,
					_p: () => S,
					jN: () => f,
					m0: () => E,
					pM: () => T,
					pT: () => g,
				});
				var n = i(316550);
				const a = {
						connectionRemoving: !1,
						connectionRemoveSuccess: !1,
						connectionRemoveFail: !1,
						connectionMuting: !1,
						connectionMuteSuccess: !1,
						connectionMuteFail: !1,
						connectionUnmuting: !1,
						connectionUnmuteSuccess: !1,
						connectionUnmuteFail: !1,
						mutedConnectionList: [],
						mutedConnectionListFetching: !1,
						mutedConnectionListFetchSuccess: !1,
						mutedConnectionListFetchFail: !1,
						connectionCount: null,
						connectionCountSuccess: !1,
						connectionCountFail: !1,
						suggestedConnectionList: [],
						suggestedConnectionListFetching: !1,
						suggestedConnectionListFetchSuccess: !1,
						suggestedConnectionListFetchFail: !1,
						pagedSuggestedConnectionList: {
							profileList: [],
							hasMore: !1,
							nextCursor: null,
						},
						pagedSuggestedConnectionListFetching: !1,
						pagedSuggestedConnectionListFetchSuccess: !1,
						pagedSuggestedConnectionListFetchFail: !1,
						suggestedConnectionsCount: -1,
						suggestedConnectionsCountFetchSuccess: !1,
						suggestedConnectionsCountFetchFail: !1,
					},
					s = (e) => (t) => ({
						...t,
						connectionRemoving: !1,
						connectionRemoveSuccess: e,
						connectionRemoveFail: !e,
					}),
					r = (e) => (t) => ({
						...t,
						connectionMuting: !1,
						connectionMuteSuccess: e,
						connectionMuteFail: !e,
					}),
					o = (e) => (t) => ({
						...t,
						connectionUnmuting: !1,
						connectionUnmuteSuccess: e,
						connectionUnmuteFail: !e,
					}),
					l =
						(e) =>
						(t, { mutedConnectionList: i }) => ({
							...t,
							mutedConnectionList: i,
							mutedConnectionListFetching: !1,
							mutedConnectionListFetchSuccess: e,
							mutedConnectionListFetchFail: !e,
						}),
					c =
						(e) =>
						(t, { connectionCount: i }) => ({
							...t,
							connectionCount: i,
							connectionCountSuccess: e,
							connectionCountFail: !e,
						}),
					d =
						(e) =>
						(t, { data: i }) => ({
							...t,
							suggestedConnectionList: i.profileList,
							suggestedConnectionListFetching: !1,
							suggestedConnectionListFetchSuccess: e,
							suggestedConnectionListFetchFail: !e,
						}),
					u =
						(e) =>
						(t, { data: i }) => {
							const {
									profileList: n,
									hasMore: a,
									nextCursor: s,
									connectionSuggestionRequest: r,
								} = i,
								o = null === r.cursor;
							let l = n.map((e) => ({ ...e, isDismissing: !1 }));
							return {
								...t,
								pagedSuggestedConnectionList: {
									profileList: o
										? l
										: t.pagedSuggestedConnectionList.profileList.concat(l),
									hasMore: a,
									nextCursor: s,
								},
								pagedSuggestedConnectionListFetching: !1,
								pagedSuggestedConnectionListFetchSuccess: e,
								pagedSuggestedConnectionListFetchFail: !e,
							};
						},
					p =
						(e) =>
						(t, { count: i }) => ({
							...t,
							suggestedConnectionsCount: e ? i : -1,
							suggestedConnectionsCountFetchSuccess: e,
							suggestedConnectionsCountFetchFail: !e,
						}),
					y = {
						[n.T34]: (e) => ({
							...e,
							connectionRemoving: !0,
							connectionRemoveSuccess: !1,
							connectionRemoveFail: !1,
						}),
						[n.SlF]: s(!0),
						[n.FNg]: s(!1),
						[n.iF0]: (e) => ({
							...e,
							connectionMuting: !0,
							connectionMuteSuccess: !1,
							connectionMuteFail: !1,
						}),
						[n.r7y]: r(!0),
						[n.Ii6]: r(!1),
						[n.DoA]: (e) => ({
							...e,
							connectionUnmuting: !0,
							connectionUnmuteSuccess: !1,
							connectionUnmuteFail: !1,
						}),
						[n.OYy]: o(!0),
						[n.zV0]: o(!1),
						[n.ahV]: (e) => ({
							...e,
							mutedConnectionListFetching: !0,
							mutedConnectionListFetchSuccess: !1,
							mutedConnectionListFetchFail: !1,
						}),
						[n.VAI]: l(!0),
						[n.apb]: l(!1),
						[n.kHG]: c(!0),
						[n.jDP]: c(!1),
						[n.rZg]: () => a,
						[n.U0h]: (e) => ({
							...e,
							suggestedConnectionListFetching: !0,
							suggestedConnectionListFetchSuccess: !1,
							suggestedConnectionListFetchFail: !1,
						}),
						[n.pS7]: d(!0),
						[n.QgJ]: d(!1),
						[n.ArK]: (e) => ({
							...e,
							pagedSuggestedConnectionListFetching: !0,
							pagedSuggestedConnectionListFetchSuccess: !1,
							pagedSuggestedConnectionListFetchFail: !1,
						}),
						[n.NLO]: u(!0),
						[n.SgA]: u(!1),
						[n.kRn]: (e, t) => {
							const { displayName: i, dismissing: n } = t.payload;
							return {
								...e,
								pagedSuggestedConnectionList: {
									...e.pagedSuggestedConnectionList,
									profileList: e.pagedSuggestedConnectionList.profileList.map(
										(e) => (e.displayName === i ? { ...e, isDismissing: n } : e)
									),
								},
							};
						},
						[n.E7Z]: (e, t) => {
							const { displayName: i } = t.payload;
							return {
								...e,
								pagedSuggestedConnectionList: {
									...e.pagedSuggestedConnectionList,
									profileList:
										e.pagedSuggestedConnectionList.profileList.filter(
											(e) => e.displayName !== i
										),
								},
							};
						},
						[n.MKI]: (e) => ({
							...e,
							pagedSuggestedConnectionList: {
								profileList: [],
								hasMore: !1,
								nextCursor: null,
							},
							pagedSuggestedConnectionListFetching: !1,
							pagedSuggestedConnectionListFetchSuccess: !1,
							pagedSuggestedConnectionListFetchFail: !1,
						}),
						[n.TV$]: p(!0),
						[n.yrg]: p(!1),
					},
					h = (e) => e.newsFeedConnections.connectionRemoveSuccess,
					g = (e) => e.newsFeedConnections.connectionRemoveFail,
					m = (e) => e.newsFeedConnections.connectionMuteSuccess,
					A = (e) => e.newsFeedConnections.connectionMuteFail,
					_ = (e) => e.newsFeedConnections.connectionUnmuting,
					E = (e) => e.newsFeedConnections.connectionUnmuteSuccess,
					T = (e) => e.newsFeedConnections.connectionUnmuteFail,
					C = (e) => e.newsFeedConnections.mutedConnectionListFetching,
					S = (e) => e.newsFeedConnections.mutedConnectionListFetchFail,
					I = (e) => e.newsFeedConnections.mutedConnectionList,
					v = (e) => e.newsFeedConnections.connectionCount,
					f = (e) => e.newsFeedConnections.connectionCountSuccess,
					D = (e) => e.newsFeedConnections.suggestedConnectionList,
					N = (e) => e.newsFeedConnections.pagedSuggestedConnectionList,
					R = (e) => e.newsFeedConnections.pagedSuggestedConnectionListFetching,
					b = (e) =>
						e.newsFeedConnections.pagedSuggestedConnectionListFetchSuccess,
					L = (e) => e.newsFeedConnections.suggestedConnectionsCount;
				function P(e = a, t = {}) {
					const i = y[t.type];
					return i ? i(e, t) : e;
				}
			},
			383746: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => A,
					DZ: () => p,
					NR: () => h,
					kj: () => g,
					o$: () => y,
					qG: () => d,
					rG: () => u,
					wl: () => m,
				});
				var n = i(316550);
				const a = {
						commentLikes: [],
						commentLikesFetching: !1,
						commentLikesFetchSuccess: !1,
						commentLikesFetchFail: !1,
						commentLikeUpdating: {},
						commentLikeUpdateSuccess: !1,
						commentLikeUpdateFail: !1,
						conversationLikes: [],
						conversationLikesFetching: !1,
						conversationLikesFetchSuccess: !1,
						conversationLikesFetchFail: !1,
					},
					s = (e, { commentUuid: t }) => ({
						...e,
						commentLikeUpdating: { ...e.commentLikeUpdating, [t]: !0 },
					}),
					r =
						(e) =>
						(t, { commentUuid: i }) => ({
							...t,
							commentLikeUpdating: { ...t.commentLikeUpdating, [i]: !1 },
							commentLikeUpdateSuccess: e,
							commentLikeUpdateFail: !e,
						}),
					o =
						(e) =>
						(t, { data: i }) => {
							let n;
							return (
								e &&
									(n =
										t.commentLikes.length > 0 ? t.commentLikes.concat(i) : i),
								{
									...t,
									commentLikes: e ? n : t.commentLikes,
									commentLikesFetching: !1,
									commentLikesFetchSuccess: e,
									commentLikesFetchFail: !e,
								}
							);
						},
					l =
						(e) =>
						(t, { data: i }) => {
							let n;
							return (
								e &&
									(n =
										t.conversationLikes.length > 0
											? t.conversationLikes.concat(i)
											: i),
								{
									...t,
									conversationLikes: e ? n : t.conversationLikes,
									conversationLikesFetching: !1,
									conversationLikesFetchSuccess: e,
									conversationLikesFetchFail: !e,
								}
							);
						},
					c = {
						[n.AYP]: (e, { reset: t }) => ({
							...e,
							commentLikes: t ? [] : e.commentLikes,
							commentLikesFetching: !0,
							commentLikesFetchSuccess: !1,
							commentLikesFetchFail: !1,
						}),
						[n.dEu]: o(!0),
						[n.OzG]: o(!1),
						[n.OXG]: s,
						[n.RM7]: r(!0),
						[n.iLS]: r(!1),
						[n.FYX]: s,
						[n.SHX]: r(!0),
						[n.vid]: r(!1),
						[n.kwX]: (e, { reset: t }) => ({
							...e,
							conversationLikes: t ? [] : e.conversationLikes,
							conversationLikesFetching: !0,
							conversationLikesFetchSuccess: !1,
							conversationLikesFetchFail: !1,
						}),
						[n.TBF]: l(!0),
						[n.aPE]: l(!1),
						[n.QH5]: () => a,
					},
					d = (e) => e.newsFeedLikes.commentLikesFetching,
					u = (e) => e.newsFeedLikes.commentLikesFetchSuccess,
					p = (e, t) =>
						e.newsFeedLikes.commentLikeUpdating &&
						e.newsFeedLikes.commentLikeUpdating[t],
					y = (e) => e.newsFeedLikes.conversationLikesFetching,
					h = (e) => e.newsFeedLikes.conversationLikesFetchSuccess,
					g = (e) => e.newsFeedLikes && e.newsFeedLikes.commentLikes,
					m = (e) => e.newsFeedLikes && e.newsFeedLikes.conversationLikes;
				function A(e = a, t = {}) {
					const i = c[t.type];
					return i ? i(e, t) : e;
				}
			},
			698848: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, DJ: () => o, so: () => r });
				var n = i(316550);
				const a = {
						notificationDismissSuccess: { id: null, success: !1 },
						notificationDismissFail: { id: null, fail: !1 },
					},
					s =
						(e) =>
						(t, { notificationId: i }) => ({
							...t,
							notificationDismissSuccess: { id: i, success: e },
							notificationDismissFail: { id: i, fail: !e },
						}),
					r = (e, t) =>
						e.notification.notificationDismissSuccess.id === t &&
						e.notification.notificationDismissSuccess.success,
					o = (e, t) =>
						e.notification.notificationDismissFail.id === t &&
						e.notification.notificationDismissFail.fail,
					l = {
						[n.UZ9]: (e, { notificationId: t }) => ({
							...e,
							notificationDismissSuccess: { id: t, success: !1 },
							notificationDismissFail: { id: t, fail: !1 },
						}),
						[n.DKw]: s(!0),
						[n.uk0]: s(!1),
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
			},
			797460: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => p, MI: () => s, MX: () => d, rb: () => a });
				var n = i(316550);
				const a = { OPT_IN: 'OPT_IN', OPT_OUT: 'OPT_OUT' },
					s = {
						TAGGING: 'TAGGING',
						SEGMENT_LEADERBOARD: 'SEGMENT_LEADERBOARD',
					},
					r = {
						optionalFeatures: {},
						optionalFeatureFetching: !1,
						optionalFeatureFetchFail: !1,
						optionalFeatureFetchFinished: !1,
						optionalFeatureUpdating: !1,
						optionalFeatureUpdateFail: !1,
						optionalFeatureUpdateFinished: !1,
					},
					o = (e) => (t, i) => ({
						...t,
						optionalFeatures: e
							? {
									...t.optionalFeatures,
									[i.optionalFeature.optionalFeatureType]: i.optionalFeature,
								}
							: t.optionalFeatures,
						optionalFeatureFetching: !1,
						optionalFeatureFetchFail: !e,
						optionalFeatureFetchFinished: !0,
					}),
					l = (e) => (t, i) => ({
						...t,
						optionalFeatures: e
							? {
									...t.optionalFeatures,
									[i.optionalFeature.optionalFeatureType]: i.optionalFeature,
								}
							: t.optionalFeatures,
						optionalFeatureUpdating: !1,
						optionalFeatureUpdateFail: !e,
						optionalFeatureUpdateFinished: !0,
					}),
					c = (e, t) => e.optionalFeature.optionalFeatures[t.toUpperCase()],
					d = (e, t) => c(e, t) && c(e, t).userOptionType === a.OPT_IN,
					u = {
						[n.sq2]: (e) => ({
							...e,
							optionalFeatureFetching: !0,
							optionalFeatureFetchFail: !1,
							optionalFeatureFetchFinished: !1,
						}),
						[n.Run]: o(!0),
						[n.mju]: o(!1),
						[n.LGT]: (e) => ({
							...e,
							optionalFeatureUpdating: !0,
							optionalFeatureUpdateFail: !1,
							optionalFeatureUpdateFinished: !1,
						}),
						[n.imj]: l(!0),
						[n.TpR]: l(!1),
					};
				function p(e = r, t = {}) {
					const i = u[t.type];
					return i ? i(e, t) : e;
				}
			},
			657623: (e, t, i) => {
				'use strict';
				i.d(t, { AQ: () => o, Ay: () => r, yl: () => l });
				var n = i(11481);
				const a = {
						elevationSegmentationTolerance: 12,
						elevationSegmentMinLength: 400,
						paceFactor: 2,
					},
					s = { [n.i0]: (e, t) => t.config, [n.DF]: (e, t) => e };
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return { type: n.CQ, meta: { cacheTime: e ? null : 36e5 } };
				}
				const l = (e) => e.paceProAlgorithmConfig;
			},
			223715: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => l,
					BW: () => p,
					CO: () => c,
					D$: () => T,
					H$: () => h,
					MX: () => _,
					RK: () => d,
					_z: () => a,
					ay: () => m,
					bD: () => y,
					bt: () => A,
					cV: () => E,
					hd: () => g,
					u_: () => u,
				});
				var n = i(11481);
				const a = {
						FAIL: 'FAIL',
						SUCCESS: 'SUCCESS',
						SAVING: 'SAVING',
						FETCHING: 'FETCHING',
						DELETING: 'DELETING',
					},
					s = { paceProBands: {}, networkingStatus: a.SUCCESS },
					r = (e, t) => ({
						paceProBands: {
							...e.paceProBands,
							[t.paceProBand.paceBandSummary.paceBandPk]: t.paceProBand,
						},
						networkingStatus: a.SUCCESS,
					}),
					o = {
						[n.ri]: (e, t) => (
							t.paceProBandSummaries.forEach((t) => {
								e.paceProBands[t.paceBandPk] ||
									(e.paceProBands[t.paceBandPk] = {}),
									(e.paceProBands[t.paceBandPk].paceBandSummary = t);
							}),
							{ ...e, networkingStatus: a.SUCCESS }
						),
						[n.Ej]: (e, t) => e,
						[n.YZ]: (e, t) => {
							let i = {};
							return (
								t.paceProBands.forEach((e) => {
									i[e.paceBandSummary.paceBandPk] = e;
								}),
								{
									paceProBands: { ...e.paceProBands, ...i },
									networkingStatus: a.SUCCESS,
								}
							);
						},
						[n.LD]: (e, t) => e,
						[n.LY]: r,
						[n.SC]: (e, t) => ({
							paceProBands: { ...e.paceProBands },
							networkingStatus: a.FAIL,
						}),
						[n._G]: r,
						[n.dG]: (e, t) => ({
							paceProBands: { ...e.paceProBands },
							networkingStatus: a.FAIL,
						}),
						[n.g7]: r,
						[n.r9]: (e, t) => ({
							paceProBands: { ...e.paceProBands },
							networkingStatus: a.FAIL,
						}),
						[n.MD]: (e) => ({
							paceProBands: { ...e.paceProBands },
							networkingStatus: a.SAVING,
						}),
						[n.Gq]: (e) => ({
							paceProBands: { ...e.paceProBands },
							networkingStatus: a.SAVING,
						}),
						[n.Xo]: (e, t) => ({
							paceProBands: { ...e.paceProBands },
							networkingStatus: a.FETCHING,
						}),
						[n.jK]: (e) => ({
							paceProBands: { ...e.paceProBands },
							networkingStatus: a.DELETING,
						}),
						[n.Lq]: (e, t) => (
							delete e.paceProBands[t.paceBandId],
							{
								paceProBands: { ...e.paceProBands },
								networkingStatus: a.SUCCESS,
							}
						),
						[n.oR]: (e, t) => ({
							paceProBands: { ...e.paceProBands },
							networkingStatus: a.FAIL,
						}),
					};
				function l(e = s, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
				function c(e) {
					return { type: n.Xo, courseId: e };
				}
				function d() {
					return { type: n.YR };
				}
				function u(e) {
					return { type: n.DK, paceBandId: e };
				}
				function p(e) {
					return { type: n.Jo, courseId: e };
				}
				function y(e, t, i) {
					return {
						type: n.MD,
						paceProBand: e,
						courseNotOwned: t,
						hasShareableEvent: i,
					};
				}
				function h(e, t) {
					return { type: n.Gq, paceBandId: e, paceProBand: t };
				}
				function g(e) {
					return { type: n.FM, payload: e };
				}
				function m(e) {
					return { type: n.jK, paceBandId: e };
				}
				const A = (e, t) => {
						const i = Object.keys(e.paceProBand.paceProBands).map(
							(t) => e.paceProBand.paceProBands[t].paceBandSummary
						);
						return t ? i.filter((e) => e.courseId === t) : i;
					},
					_ = (e, t, i) => {
						const n = Object.keys(e.paceProBand.paceProBands).map(
							(t) => e.paceProBand.paceProBands[t].paceBandSummary
						);
						return t
							? n.filter((e) => e.courseId === t && e.paceBandPk !== i)
							: [];
					},
					E = (e, t) => e.paceProBand.paceProBands[t] || {},
					T = (e) => e.paceProBand.networkingStatus;
			},
			275704: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => I,
					BQ: () => a,
					DR: () => A,
					Hu: () => C,
					Ke: () => p,
					LF: () => h,
					ND: () => d,
					RT: () => s,
					bA: () => g,
					kd: () => u,
					mt: () => r,
					ol: () => m,
					sg: () => c,
					z_: () => l,
				});
				var n = i(316550);
				const a = {
						MILE: 'DISTANCE_MILE',
						KILOMETER: 'DISTANCE_KILOMETER',
						ELEVATION: 'ELEVATION',
					},
					s = {
						'5K': '5K',
						'10K': '10K',
						HALF_MARATHON: 'HALF_MARATHON',
						MARATHON: 'MARATHON',
						OTHER: 'OTHER',
						COURSE: 'COURSE',
					},
					r = {
						'5K': 5e3,
						'10K': 1e4,
						HALF_MARATHON: 21097.5,
						MARATHON: 42195,
						OTHER: 1e4,
						COURSE: 0,
					},
					o = { '5K': 1500, '10K': 3e3, HALF_MARATHON: 7200, MARATHON: 14400 },
					l = { SAVE_READY: 'SAVE_READY', SAVED: 'SAVED' },
					c = { MI: 'MILE', KM: 'KILOMETER' },
					d = {
						METRIC_FOUR_MIN_PACE: 148,
						METRIC_TWENTY_MIN_PACE: 745.645431,
						STATUTE_FOUR_MIN_PACE: 240,
						STATUTE_TWENTY_MIN_PACE: 1200,
					},
					u = { HOURS: 50 },
					p = {
						distance: s['10K'],
						customDistance: r['10K'],
						customDistanceUnit: null,
						course: null,
						goalTime: 3e3,
						splits: a.KILOMETER,
						pacingStrategy: 0,
						hillEffort: 0,
						elevationSegmentMinLength: 1700,
						paceIntervals: [],
						id: null,
						saveState: l.SAVE_READY,
						name: '',
						manualPaceEdit: !1,
						source: null,
					},
					y = 0.335540444,
					h = { MIN: -5, MAX: 5 },
					g = { MIN: -2.5, MAX: 2.5 },
					m = { MIN: 400, MAX: 3e3 },
					A = (e) => Math.ceil(e);
				let _ = { ...p };
				const E = (e) => {
						if (!e.id) return l.SAVE_READY;
						const t = Object.keys(p);
						for (let i of t)
							if ('saveState' !== i && 'paceIntervals' !== i && e[i] !== _[i])
								return l.SAVE_READY;
						return e.manualPaceEdit && !T(e.paceIntervals, _.paceIntervals)
							? l.SAVE_READY
							: l.SAVED;
					},
					T = (e, t) => {
						if (e.length !== t.length) return !1;
						for (let i = 0; i < e.length; i++) {
							const i = e[0],
								n = t[0];
							if (
								Math.round(1 / (i.splitAvgSpeed / i.splitDistance)) !==
								Math.round(1 / (n.splitAvgSpeed / n.splitDistance))
							)
								return !1;
						}
						return !0;
					},
					C = (e) => e.paceProCreate,
					S = {
						[n.xSB]: (e, t) => {
							const i = {
								...e,
								course: t.paceProCreate.course,
								distance: s.COURSE,
								customDistance: t.paceProCreate.customDistance,
								goalTime: A(t.paceProCreate.customDistance * y),
								splits: t.paceProCreate.splits,
								name: t.paceProCreate.name,
								id: 0,
							};
							return { ...i, saveState: E(i) };
						},
						[n.n$R]: (e, t) => {
							const i = {
								...e,
								course: t.paceProCreate.course,
								distance: s.OTHER,
								customDistance: t.paceProCreate.customDistance,
								eventDistance: t.paceProCreate.eventDistance,
								goalTime:
									t.paceProCreate.customTime ||
									A(t.paceProCreate.customDistance * y),
								splits: t.paceProCreate.splits,
								name: t.paceProCreate.name,
								id: 0,
								customTime: t.paceProCreate.customTime,
								eventId: t.paceProCreate.eventId,
								shareableEventUuid: t.paceProCreate.shareableEventUuid,
								eventDate: t.paceProCreate.eventDate,
							};
							return { ...i, saveState: E(i) };
						},
						[n.xpi]: (e, t) => {
							const i = Object.keys(s),
								n = t.paceProCreate.distance;
							if (-1 === i.indexOf(n)) return e;
							let a = e.customDistance,
								l = e.goalTime;
							n === s.OTHER
								? ((0 === t.paceProCreate.customDistance ||
										t.paceProCreate.customDistance) &&
										(a = parseFloat(t.paceProCreate.customDistance)),
									(l = a * y))
								: ((a = r[t.paceProCreate.distance]),
									(l = o[t.paceProCreate.distance]));
							let c = e.customDistanceUnit;
							t.paceProCreate.customDistanceUnit &&
								(c = t.paceProCreate.customDistanceUnit);
							const d = {
								...e,
								distance: n,
								customDistance: a,
								customDistanceUnit: c,
								course: null,
								goalTime: A(l),
								id: null === e.id ? 0 : e.id,
							};
							return { ...d, saveState: E(d) };
						},
						[n.FNQ]: C,
						[n.kCx]: (e, t) => ((_ = { ...p }), p),
						[n.mTK]: (e, t) => {
							const i = { ...e, pacingStrategy: p.pacingStrategy };
							return { ...i, saveState: E(i) };
						},
						[n.lB5]: (e, t) => {
							const i = { ...e, hillEffort: p.hillEffort };
							return { ...i, saveState: E(i) };
						},
						[n.MrY]: (e, t) => {
							const i = {
								...e,
								elevationSegmentMinLength: p.elevationSegmentMinLength,
							};
							return { ...i, saveState: E(i) };
						},
						[n.jX2]: (e, t) => {
							const i = parseFloat(t.paceProCreate.pacingStrategy, 10) || 0;
							if ((i || 0 === i) && i < h.MIN && i > h.MAX) return e;
							const n = { ...e, pacingStrategy: i };
							return { ...n, saveState: E(n) };
						},
						[n.kwJ]: (e, t) => {
							const i = parseFloat(t.paceProCreate.hillEffort, 10) || 0;
							if ((i || 0 === i) && i < g.MIN && i > g.MAX) return e;
							const n = { ...e, hillEffort: i };
							return { ...n, saveState: E(n) };
						},
						[n.NZI]: (e, t) => {
							const i =
								parseFloat(t.paceProCreate.elevationSegmentMinLength, 10) || 0;
							if ((i || 0 === i) && i < m.MIN && i > m.MAX) return e;
							const n = { ...e, elevationSegmentMinLength: i };
							return { ...n, saveState: E(n) };
						},
						[n.NMx]: (e, t) => {
							const i = Object.values(a),
								n = t.paceProCreate.splits;
							if (-1 === i.indexOf(n)) return e;
							const s = { ...e, splits: t.paceProCreate.splits };
							return { ...s, saveState: E(s) };
						},
						[n.wmB]: (e, t) => {
							const i = { ...e, goalTime: A(t.paceProCreate.goalTime) };
							return { ...i, saveState: E(i) };
						},
						[n.smW]: (e, t) => {
							const i = { ...e, paceIntervals: t.paceProCreate.paceIntervals };
							return { ...i, saveState: E(i) };
						},
						[n.TI0]: (e, t) => {
							const i = { ...e, name: t.paceProCreate.name };
							return { ...i, saveState: E(i) };
						},
						[n.tN$]: (e, t) => {
							const i = {
								...e,
								saveState: l.SAVED,
								...((t.paceProCreate.id || 0 === t.paceProCreate.id) && {
									id: t.paceProCreate.id,
								}),
								...(t.paceProCreate.name && { name: t.paceProCreate.name }),
								...(t.paceProCreate.splits && {
									splits: t.paceProCreate.splits,
								}),
								...(t.paceProCreate.goalTime && {
									goalTime: A(t.paceProCreate.goalTime),
								}),
								...((t.paceProCreate.hillEffort ||
									0 === t.paceProCreate.hillEffort) && {
									hillEffort: parseFloat(t.paceProCreate.hillEffort, 10),
								}),
								...((t.paceProCreate.pacingStrategy ||
									0 === t.paceProCreate.pacingStrategy) && {
									pacingStrategy: parseFloat(
										t.paceProCreate.pacingStrategy,
										10
									),
								}),
								...((t.paceProCreate.elevationSegmentMinLength ||
									0 === t.paceProCreate.elevationSegmentMinLength) && {
									elevationSegmentMinLength: parseFloat(
										t.paceProCreate.elevationSegmentMinLength,
										10
									),
								}),
								...(t.paceProCreate.customDistance && {
									customDistance: t.paceProCreate.customDistance,
								}),
								...(t.paceProCreate.customDistanceUnit && {
									customDistanceUnit: t.paceProCreate.customDistanceUnit,
								}),
								...(t.paceProCreate.course && {
									course: t.paceProCreate.course,
								}),
								...(t.paceProCreate.distance && {
									distance: t.paceProCreate.distance,
								}),
								...(void 0 !== t.paceProCreate.manualPaceEdit && {
									manualPaceEdit: t.paceProCreate.manualPaceEdit,
								}),
							};
							return { ...i, saveState: E(i) };
						},
						[n.l3Z]: (e, t) => {
							const i = t.paceProCreate,
								n = Object.keys(p);
							let a = {};
							for (let r of n)
								if (void 0 !== i[r]) {
									if ('customDistanceUnit' === r && null === i[r]) continue;
									a[r] = i[r];
								}
							let s = { ...e, ...a };
							return (_ = { ...s }), s;
						},
						[n.IRv]: (e, t) => {
							const i = {
								...e,
								manualPaceEdit: t.paceProCreate.manualPaceEdit,
							};
							return { ...i, saveState: E(i) };
						},
					};
				function I(e = p, t = {}) {
					const i = S[t.type];
					return i ? i(e, t) : e;
				}
			},
			758516: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, O: () => r });
				var n = i(316550);
				const a = {
						entity: {
							messageText: '',
							messageType: null,
							pageNotFound: !1,
							pageForbidden: !1,
						},
					},
					s = {
						[n.lVf]: (e, t) => ({
							entity: {
								...e.entity,
								messageText: t.messageText,
								messageType: t.messageType,
								messageView: t.messageView,
							},
						}),
						[n.fhx]: () => a,
						[n.mhb]: (e, t) =>
							403 === t.status
								? { entity: { ...e.entity, pageForbidden: !0 } }
								: { entity: { ...e.entity, pageNotFound: !0 } },
					},
					r = (e) => e.pageMessages.entity;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			642073: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => l, a: () => o });
				var n = i(316550);
				const a = {
						view: null,
						displayName: null,
						typeFilter: null,
						pointsFilter: null,
					},
					s = (e, t, i) => ({ ...t, [e + 'Filter']: i.value }),
					r = {
						[n.AkP]: (e, t) => ({
							...e,
							view: t.view,
							displayName:
								void 0 !== t.displayName ? t.displayName : e.displayName,
						}),
						[n.$QK]: () => a,
						[n.YlI]: s.bind(void 0, 'type'),
						[n.Hx4]: s.bind(void 0, 'points'),
						[n.XbS]: (e) => ({ ...e, typeFilter: null, pointsFilter: null }),
					},
					o = (e) => e.badgesPage;
				function l(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			626607: (e, t, i) => {
				'use strict';
				i.d(t, {
					A5: () => h,
					Aj: () => g,
					Ay: () => _,
					E_: () => p,
					LR: () => m,
					QY: () => A,
					Y0: () => y,
					hB: () => u,
					o2: () => d,
				});
				var n = i(316550),
					a = i(702291),
					s = i(422460);
				const r = {
						calendarSnackbar: '',
						showNavSidebar: !0,
						showAddSidebar: !1,
						addSidebarContent: {},
						refreshCalendar: null,
						preferences: null,
						isFetchingPreferences: !1,
						year: null,
						month: null,
						date: null,
						calendarWeek: {
							isFetching: !1,
							activeRequests: 0,
							data: null,
							isEcgFetching: !1,
							ecgData: null,
						},
						calendarMonth: {
							isFetching: !1,
							activeRequests: 0,
							data: null,
							isEcgFetching: !1,
							ecgData: null,
						},
						calendarYear: {
							isFetching: !1,
							data: null,
							isEcgFetching: !1,
							ecgData: null,
						},
						notes: { data: {}, activeRequests: 0, isFetching: !1 },
						event: { data: null, isFetching: !1 },
						primaryEvent: { data: null, isFetching: !1 },
						modalDispatcher: {},
						addMenu: { date: null },
						export: { isFetching: !1, data: null },
						groupCalendar: !1,
						showCalendarMessage: !1,
						calendarSentToDeviceSuccess: !1,
						calendarSentToDeviceError: !1,
						upcomingEventsFetching: !0,
						upcomingEventsList: [],
					},
					o = (e) => (t, i) => {
						const n =
							e && i.data
								? i.data.map((e) => ({
										...e,
										itemType: 'ecg',
										date: s.Ay.formatISODate(a.A.parseISO(e.startTimeLocal)),
									}))
								: [];
						switch (i.periodType) {
							case 'week':
								return {
									...t,
									calendarWeek: {
										...t.calendarWeek,
										isEcgFetching: !1,
										ecgData: n,
									},
								};
							case 'month':
								return {
									...t,
									calendarMonth: {
										...t.calendarMonth,
										isEcgFetching: !1,
										ecgData: n,
									},
								};
							default:
								return {
									...t,
									calendarYear: {
										...t.calendarYear,
										isEcgFetching: !1,
										ecgData: n,
									},
								};
						}
					},
					l = (e) => (t, i) => {
						if (!e) return t;
						let n = -1;
						const a = i.payload,
							s = { ...t.calendarWeek };
						s.ecgData &&
							((n = s.ecgData.findIndex((e) => e.detailId === a)),
							n >= 0 && s.ecgData.splice(n, 1));
						const r = { ...t.calendarMonth };
						r.ecgData &&
							((n = r.ecgData.findIndex((e) => e.detailId === a)),
							n >= 0 && r.ecgData.splice(n, 1));
						const o = { ...t.calendarYear };
						return (
							o.ecgData &&
								((n = o.ecgData.findIndex((e) => e.detailId === a)),
								n >= 0 && o.ecgData.splice(n, 1)),
							{ ...t, calendarWeek: s, calendarMonth: r, calendarYear: o }
						);
					},
					c = {
						[n.QdA]: (e) => ({ ...e, isFetchingPreferences: !0 }),
						[n.Kel]: (e, t) => ({
							...e,
							showNavSidebar: t.calendarPreferences.showOptions,
							preferences: { ...t.calendarPreferences },
							isFetchingPreferences: !1,
						}),
						[n.ZsZ]: (e, t) => ({
							...e,
							year: t.year || e.year,
							month: isNaN(t.month) ? e.month : t.month,
							date: t.date || e.date,
							addMenu: r.addMenu,
						}),
						[n.AcC]: (e, t) => {
							const i = t.append
								? { ...e.calendarWeek }
								: { ...r.calendarWeek };
							return {
								...e,
								calendarWeek: {
									...i,
									activeRequests: t.append
										? e.calendarWeek.activeRequests
										: e.calendarWeek.activeRequests + 1,
									isFetching: !t.append,
									ecgData: e.calendarWeek.ecgData,
								},
							};
						},
						[n.yDr]: (e, t) => {
							const i = t.calendarWeek ? t.calendarWeek.calendarItems : {};
							return {
								...e,
								calendarWeek: {
									...e.calendarWeek,
									activeRequests: t.append
										? e.calendarWeek.activeRequests
										: e.calendarWeek.activeRequests - 1,
									isFetching: e.calendarWeek.activeRequests > 1,
									data: e.calendarWeek.data
										? {
												...e.calendarWeek.data,
												calendarItems: [
													...e.calendarWeek.data.calendarItems,
													...i,
												],
											}
										: t.calendarWeek,
									lastUpdated: t.receivedAt,
								},
							};
						},
						[n.y4K]: (e, t) => {
							const i = t.append
								? { ...e.calendarMonth }
								: { ...r.calendarMonth };
							return {
								...e,
								calendarMonth: {
									...i,
									activeRequests: t.append
										? e.calendarMonth.activeRequests
										: e.calendarMonth.activeRequests + 1,
									isFetching: !t.append,
									ecgData: e.calendarMonth.ecgData,
								},
							};
						},
						[n.Wm1]: (e, t) => {
							const i = t.calendarMonth ? t.calendarMonth.calendarItems : {};
							return {
								...e,
								calendarMonth: {
									...e.calendarMonth,
									activeRequests: t.append
										? e.calendarMonth.activeRequests
										: e.calendarMonth.activeRequests - 1,
									isFetching: e.calendarMonth.activeRequests > 1,
									data: e.calendarMonth.data
										? {
												...e.calendarMonth.data,
												calendarItems: [
													...e.calendarMonth.data.calendarItems,
													...i,
												],
											}
										: t.calendarMonth,
									lastUpdated: t.receivedAt,
								},
							};
						},
						[n.n6s]: (e) => ({
							...e,
							calendarYear: {
								...r.calendarYear,
								isFetching: !0,
								ecgData: e.calendarYear.ecgData,
							},
						}),
						[n.XCM]: (e, t) => ({
							...e,
							calendarYear: {
								...e.calendarYear,
								isFetching: !1,
								data: t.calendarYear,
								lastUpdated: t.receivedAt,
							},
						}),
						[n.rkL]: (e, t) => ({
							...e,
							showNavSidebar: !1,
							showAddSidebar: !0,
							addSidebarContent: {
								content: t.content,
								date: t.date,
								editMode: t.editMode,
								data: t.data,
							},
							addMenu: r.addMenu,
						}),
						[n.o84]: (e) => ({
							...e,
							showNavSidebar: e.preferences.showOptions,
							showAddSidebar: r.showAddSidebar,
							addSidebarContent: r.addSidebarContent,
							addMenu: r.addMenu,
						}),
						[n.bsy]: (e, t) => ({
							...e,
							modalDispatcher: {
								modal: t.modal,
								data: t.data,
								date: t.date,
								trainingPlanId: t.trainingPlanId,
							},
							addMenu: r.addMenu,
						}),
						[n.uxq]: (e) => ({
							...e,
							modalDispatcher: r.modalDispatcher,
							notes: r.notes,
							event: r.event,
							addMenu: r.addMenu,
						}),
						[n.Kyh]: (e, t) => ({ ...e, calendarSnackbar: t.message }),
						[n.I_T]: (e, t) => ({
							...e,
							addMenu: {
								date: t.date,
								clickTop: t.clickTop,
								clickLeft: t.clickLeft,
							},
						}),
						[n.r7g]: (e) => ({ ...e, addMenu: r.addMenu }),
						[n.skk]: (e) => {
							const t =
								0 === e.notes.activeRequests ? r.notes.data : e.notes.data;
							return {
								...e,
								notes: {
									data: { ...t },
									isFetching: !0,
									activeRequests: e.notes.activeRequests + 1,
								},
							};
						},
						[n.mRG]: (e, t) => ({
							...e,
							notes: {
								data: { ...e.notes.data, [t.noteId]: t.json },
								isFetching: e.notes.activeRequests > 1,
								activeRequests: e.notes.activeRequests - 1,
							},
						}),
						[n.Wfb]: (e) => ({ ...e, event: { ...r.event, isFetching: !0 } }),
						[n.K$7]: (e, t) => ({
							...e,
							event: { data: t.json, isFetching: !1 },
						}),
						[n.qOx]: (e, t) => ({
							...e,
							[t.view]: {
								...e[t.view],
								data: { ...e[t.view].data, calendarItems: t.items },
							},
						}),
						[n.Y3L]: (e) => ({ ...e, export: { ...r.export, isFetching: !0 } }),
						[n.yge]: (e, t) => ({
							...e,
							export: { data: t.json, isFetching: !1 },
						}),
						[n.ns7]: () => r,
						[n.KO4]: (e, t) => ({ ...e, showCalendarMessage: t.show }),
						[n._1h]: (e) => ({ ...e, calendarSentToDeviceSuccess: !0 }),
						[n.jau]: (e) => ({
							...e,
							calendarSentToDeviceSuccess: !1,
							calendarSentToDeviceError: !1,
						}),
						[n.lnI]: (e) => ({ ...e, calendarSentToDeviceError: !0 }),
						[n.Fl7]: (e, t) => ({ ...e, refreshCalendar: { date: t.date } }),
						[n.mzN]: (e, t) => {
							switch (t.periodType) {
								case 'week':
									return {
										...e,
										calendarWeek: { ...e.calendarWeek, isEcgFetching: !0 },
									};
								case 'month':
									return {
										...e,
										calendarMonth: { ...e.calendarMonth, isEcgFetching: !0 },
									};
								default:
									return {
										...e,
										calendarYear: { ...e.calendarYear, isEcgFetching: !0 },
									};
							}
						},
						[n.xIf]: o(!0),
						[n.YqN]: o(!1),
						[n.A79]: l(!0),
						[n.hwF]: l(!1),
						[n.mQ6]: (e, t) => ({
							...e,
							primaryEvent: { data: t.json, isFetching: !1 },
						}),
						[n.QLz]: (e) => ({
							...e,
							primaryEvent: { ...r.primaryEvent, isFetching: !0 },
						}),
						[n.gPC]: (e, t) => ({ ...e, upcomingEventsFetching: !1 }),
						[n.cN1]: (e) => ({ ...e, upcomingEventsFetching: !0 }),
					},
					d = (e, t) => ((e.calendarPage.groupCalendar = !!t), e.calendarPage),
					u = (e) => !0 === e.calendarPage.calendarSentToDeviceSuccess,
					p = (e) => !0 === e.calendarPage.calendarSentToDeviceError,
					y = (e) => !0 === e.calendarPage.showCalendarMessage,
					h = (e) => e.calendarPage.primaryEvent.data,
					g = (e) => e.calendarPage.addSidebarContent,
					m = (e) => e.calendarPage.preferences,
					A = (e) => e.calendarPage.upcomingEventsFetching;
				function _(e = r, t = {}) {
					const i = c[t.type];
					return i ? i(e, t) : e;
				}
			},
			502714: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, GW: () => o, L_: () => r });
				var n = i(316550);
				const a = {
						isFetching: !1,
						selectedTab: 1,
						reportDialog: { open: !1, submitting: !1, reviewStatus: null },
					},
					s = {
						SELECT_PROFILE_PAGE_TAB: (e, t) => ({
							...e,
							selectedTab: t.selectedTab,
						}),
						[n.uI8]: (e, t) => ({
							...e,
							reportDialog: {
								open: t.open,
								submitting: t.submitting,
								reviewStatus: t.reviewStatus,
							},
						}),
						[n.cvz]: () => a,
					},
					r = (e) => e.profilePage,
					o = (e) => r(e).reportDialog;
				function l(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			782722: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => u,
					RZ: () => l,
					ce: () => d,
					fh: () => c,
					xZ: () => o,
				});
				var n = i(316550);
				const a = {
						initialized: !1,
						polyline: null,
						lineChart: -1,
						draggingMarker: !1,
						segmentStartPointIndex: -1,
						segmentEndPointIndex: -1,
						tempStart: -1,
						tempEnd: -1,
						selectedTab: i(115883).Uk.CREATED_BY_ME,
						activity: null,
						error: null,
					},
					s = (e) =>
						e.map((e) => ({ ...e, lat: e.latitude, lon: e.longitude })),
					r = {
						[n.YAw]: ((e, t) => ({ ...e, ...t.data, initialized: !0 })).bind(
							void 0
						),
						[n.fll]: (e, t) => ({
							...e,
							error: null,
							polyline: s(t.data.polyline),
						}),
						[n.WJC]: (e, { error: t }) => ({ ...e, error: t }),
						[n.NVV]: (e, t) => ({ ...e, polyline: s(t.polyline) }),
						[n.mQt]: (e, t) => ({ ...e, selectedTab: t.selectedTab }),
						[n.y4l]: () => a,
						[n.Ki8]: (e, t) => ({ ...e, activity: t.activity }),
					},
					o = (e) => e.segmentPage,
					l = (e) => e.segmentPage.polyline,
					c = (e) => e.segmentPage.activity,
					d = (e) => e.segmentPage.error;
				function u(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			399460: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, dv: () => l, p9: () => o });
				var n = i(316550);
				const a = {
						data: {},
						personalRecordByActivityIdFetching: !1,
						personalRecordByActivityIdFetchFail: !1,
					},
					s = {
						[n.V0o]: (e, t) => ({
							...e,
							personalRecordByActivityIdFetching: !0,
							personalRecordByActivityIdFetchFail: !1,
						}),
						[n.GSt]: (e, t) => ({
							...e,
							data: { ...e.data, [t.activityId]: [...t.data] },
							personalRecordByActivityIdFetching: !1,
							personalRecordByActivityIdFetchFail: !1,
						}),
						[n.d6P]: (e, t) => ({
							...e,
							personalRecordByActivityIdFetching: !1,
							personalRecordByActivityIdFetchFail: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t) {
					return {
						activityId: e,
						type: n.Abj,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				const l = (e, t) =>
					(t &&
						e.personalRecordByActivityId &&
						e.personalRecordByActivityId.data &&
						e.personalRecordByActivityId.data[t]) ||
					[];
			},
			901343: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					OF: () => p,
					UB: () => c,
					UJ: () => l,
					sh: () => d,
					zV: () => u,
				});
				var n = i(316550);
				i(444200);
				const a = {
						data: [],
						personalRecordCandidatesFetching: !1,
						personalRecordCandidatesFetchFail: !1,
						personalRecordCandidateDeleteFail: !1,
						personalRecordCandidateDeleteSuccess: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						personalRecordCandidateDeleteSuccess: e,
						personalRecordCandidateDeleteFail: !e,
					}),
					r = {
						[n.G2h]: (e, t) => ({
							...e,
							personalRecordCandidatesFetching: !0,
							personalRecordCandidatesFetchFail: !1,
						}),
						[n.xrQ]: (e, t) => ({
							...e,
							data: [...t.data],
							personalRecordCandidatesFetching: !1,
							personalRecordCandidatesFetchFail: !1,
						}),
						[n.cbv]: (e, t) => ({
							...e,
							personalRecordCandidatesFetching: !1,
							personalRecordCandidatesFetchFail: !0,
						}),
						[n.b8x]: s(!0),
						[n.umx]: s(!1),
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t) {
					return {
						displayName: e,
						type: n.jOm,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function c(e, t) {
					return { type: n.dx0, personalRecordCandidate: t, displayName: e };
				}
				const d = (e) =>
						e.personalRecordCandidates.data
							? e.personalRecordCandidates.data
							: null,
					u = (e) =>
						e.personalRecordCandidates.personalRecordCandidateDeleteSuccess,
					p = (e) =>
						e.personalRecordCandidates.personalRecordCandidatesFetching;
			},
			668696: (e, t, i) => {
				'use strict';
				i.d(t, {
					AQ: () => u,
					Ay: () => o,
					Rf: () => l,
					Wm: () => y,
					hw: () => c,
					lY: () => p,
					tR: () => d,
				});
				var n = i(316550),
					a = i(586797);
				const s = {
						data: [],
						filteredPersonalRecordsTypes: null,
						personalRecordTypesFetching: !1,
						personalRecordTypesFetchFail: !1,
					},
					r = {
						[n.zwW]: (e, t) => ({
							...e,
							personalRecordTypesFetching: !0,
							personalRecordTypesFetchFail: !1,
						}),
						[n.y5R]: (e, t) => {
							const i = Object.keys(a.G8),
								n = Object.fromEntries(i.map((e) => [e, (0, a.Ow)(e, t.data)]));
							return {
								...e,
								data: [...t.data],
								filteredPersonalRecordsTypes: n,
								personalRecordTypesFetching: !1,
								personalRecordTypesFetchFail: !1,
							};
						},
						[n.VF_]: (e, t) => ({
							...e,
							personalRecordTypesFetching: !1,
							personalRecordTypesFetchFail: !0,
						}),
					};
				function o(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t) {
					return {
						displayName: e,
						type: n.coK,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function c(e, t) {
					return { displayName: t, recordType: e, type: n.Ar6 };
				}
				const d = (e) =>
						e.personalRecordTypes.data ? e.personalRecordTypes.data : null,
					u = (e) =>
						e.personalRecordTypes.filteredPersonalRecordsTypes
							? e.personalRecordTypes.filteredPersonalRecordsTypes
							: null,
					p = (e) => e.personalRecordTypes.personalRecordTypesFetching,
					y = (e) => !1 === e.personalRecordTypes.personalRecordTypesFetchFail;
			},
			444200: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => c,
					Db: () => p,
					L2: () => d,
					Le: () => u,
					Vi: () => E,
					ZW: () => y,
					_Z: () => m,
					mx: () => A,
					pH: () => h,
					qW: () => _,
					qq: () => g,
				});
				var n = i(316550);
				const a = {
						data: [],
						personalRecordsFetching: !1,
						personalRecordsFetchFail: !1,
						personalRecordDeleteFail: !1,
						personalRecordDeleteSuccess: !1,
						presonalRecordAddSuccess: !1,
						personalRecordAddFail: !1,
						updatePersonalRecordSuccess: !1,
						updatePersonalRecordFail: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						personalRecordDeleteSuccess: e,
						personalRecordDeleteFail: !e,
					}),
					r = (e) => (t, i) => ({
						...t,
						presonalRecordAddSuccess: e,
						personalRecordAddFail: !e,
					}),
					o = (e) => (t, i) => ({
						...t,
						updatePersonalRecordSuccess: e,
						updatePersonalRecordFail: !e,
					}),
					l = {
						[n.kgH]: (e, t) => ({
							...e,
							personalRecordsFetching: !0,
							personalRecordsFetchFail: !1,
						}),
						[n.hST]: (e, t) => {
							const { displayName: i, data: n } = t;
							return {
								...e,
								data: { ...e.data, [i]: n },
								personalRecordsFetching: !1,
								personalRecordsFetchFail: !1,
							};
						},
						[n.I_F]: (e, t) => ({
							...e,
							personalRecordsFetching: !1,
							personalRecordsFetchFail: !0,
						}),
						[n.Vso]: s(!0),
						[n.osn]: s(!1),
						[n.VZ]: r(!0),
						[n.KiN]: r(!1),
						[n.LIf]: o(!0),
						[n.CeJ]: o(!1),
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
				function d(e, t) {
					return {
						displayName: e,
						type: n.zdJ,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function u(e, t) {
					return { type: n.Var, displayName: e, personalRecord: t };
				}
				function p(e, t) {
					return { type: n.fOQ, displayName: e, personalRecord: t };
				}
				function y(e) {
					return { type: n.T8n, personalRecord: e };
				}
				const h = (e) =>
						e.personalRecords.data ? e.personalRecords.data : null,
					g = (e, t) =>
						e.personalRecords.data[t] ? e.personalRecords.data[t] : null,
					m = (e) => e.personalRecords.personalRecordDeleteSuccess,
					A = (e) => e.personalRecords.presonalRecordAddSuccess,
					_ = (e) => e.personalRecords.updatePersonalRecordSuccess,
					E = (e) => e.personalRecords.personalRecordsFetching;
			},
			638704: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => L,
					Dl: () => C,
					EB: () => _,
					Ey: () => v,
					FO: () => b,
					Ft: () => g,
					I7: () => T,
					II: () => m,
					Ih: () => f,
					MB: () => R,
					U7: () => I,
					fm: () => A,
					kz: () => y,
					mD: () => E,
					pS: () => D,
					sV: () => S,
					wt: () => h,
					xP: () => N,
				});
				var n = i(316550),
					a = i(109285),
					s = i.n(a);
				const r = {
						powerGuidanceList: [],
						powerGuidanceListFetching: !1,
						powerGuidanceListByCourseId: [],
						updatePowerZoneSuccess: !1,
						wereChangesMade: !1,
						powerGuideUpdated: !1,
						powerGuideSaveFail: !1,
						fetchingPowerGuidanceError: !1,
						deletePowerGuideanceError: !1,
						duplicatePowerGuideanceError: !1,
						latestFunctionalThresholdPower: !1,
						courseData: null,
						powerGuidanceData: {
							powerGuidancePk: null,
							powerGuidanceSummary: {
								powerGuidancePk: null,
								powerGuidanceName: '',
								coursePk: null,
								userProfilePk: null,
								goalEffort: 0.5,
								userFTP: null,
								splitCount: null,
								aeroCoefficient: 0.5,
								rollingResistanceCoefficient: 0.5,
								riderMass: null,
								bikeMass: 0,
								minSegmentLength: null,
								elevationSegmentTolerance: null,
								estimatedDuration: null,
								ftpUsagePercent: null,
								meanPowerUsage: null,
								maxPowerUsage: null,
								createdDate: new (s())().toISOString(),
								lastUpdatedDate: new (s())().toISOString(),
								distance: null,
								aeroProfile: 'STANDARD',
								terrainProfile: 'GRAVEL',
								estimatedDurationHigh: 0,
								estimatedDurationLow: 0,
							},
							powerGuidanceSplits: null,
							fitnessStats: [],
							fitnessStatsFetching: !1,
							fitnessStatsError: !1,
							powerZones: [],
							event: {},
							powerGuideFromEvent: !1,
						},
					},
					o = (e, t) => ({ ...e, powerGuideSaveFail: !0 }),
					l = (e, t) => {
						let i = !1;
						return (
							t.type === n.FY1 && (i = !0),
							{
								...e,
								wereChangesMade: !1,
								powerGuideSaveFail: !1,
								powerGuideUpdated: i,
								powerGuidanceData: { ...t.data },
							}
						);
					},
					c = (e, t) => ({ ...r }),
					d = (e, t) => ({
						...e,
						updatePowerZoneSuccess: !0,
						powerZones: t.response.data,
					}),
					u = (e) => ({ ...e, updatePowerZoneSuccess: !1 }),
					p = {
						[n.jlu]: (e) => ({ ...e, powerGuidanceListFetching: !0 }),
						[n.dXp]: (e) => ({
							...e,
							powerGuidanceListFetching: !1,
							fetchingPowerGuidanceError: !0,
						}),
						[n.XXo]: (e, t) => ({
							...e,
							fetchingPowerGuidanceError: !1,
							powerGuidanceListFetching: !1,
							powerGuidanceList: t.data,
						}),
						[n.pVu]: (e, t) => ({ ...e, powerGuidanceListByCourseId: t.data }),
						[n.M63]: (e, t) => ({
							...e,
							wereChangesMade: !0,
							powerGuidanceData: {
								...e.powerGuidanceData,
								powerGuidanceSummary: {
									...e.powerGuidanceData.powerGuidanceSummary,
									powerGuidanceName: t.value,
								},
							},
						}),
						[n.JnV]: (e, t) => ({
							...e,
							powerGuidanceData: {
								...e.powerGuidanceData,
								powerGuidanceSummary: {
									...e.powerGuidanceData.powerGuidanceSummary,
									...t.summary,
								},
							},
						}),
						[n.oHl]: (e, t) => ({
							...e,
							powerGuidanceData: {
								...e.powerGuidanceData,
								powerGuidanceSplits: [...t.splits],
							},
						}),
						[n.hEq]: (e, t) =>
							t.overWritePowerGuidance
								? {
										...e,
										courseData: { ...t.course },
										powerGuidanceData: {
											...e.powerGuidanceData,
											powerGuidanceSummary: {
												...e.powerGuidanceData.powerGuidanceSummary,
												powerGuidanceName: t.course.courseName,
												coursePk: t.course.courseId,
											},
										},
									}
								: { ...e, courseData: { ...t.course } },
						[n.psu]: l,
						[n.d1r]: (e, t) => ({
							...e,
							wereChangesMade: !0,
							powerGuidanceData: {
								...e.powerGuidanceData,
								powerGuidanceSummary: {
									...e.powerGuidanceData.powerGuidanceSummary,
									[t.key]: t.value,
								},
							},
						}),
						[n.F8p]: c,
						[n.HCb]: c,
						[n.QI5]: c,
						[n.FY1]: l,
						[n.yRW]: o,
						[n._FU]: o,
						[n.pDX]: (e) => ({ ...e, fitnessStatsFetching: !0 }),
						[n.nb]: (e) => ({
							...e,
							fitnessStatsFetching: !1,
							fitnessStatsError: !0,
						}),
						[n.GOn]: (e, t) => ({
							...e,
							fitnessStatsError: !1,
							fitnessStatsFetching: !1,
							fitnessStats: t.data,
						}),
						[n.DhK]: u,
						[n.DKG]: u,
						[n.SJ4]: (e, t) => ({ ...e, updatePowerZoneSuccess: !0 }),
						[n.EVx]: d,
						[n.WBI]: (e) => ({ ...e, deletePowerGuideanceError: !0 }),
						[n.ecG]: (e) => ({ ...e, deletePowerGuideanceError: !1 }),
						[n.g4t]: (e) => ({ ...e, duplicatePowerGuideanceError: !1 }),
						[n.KBe]: (e) => ({ ...e, duplicatePowerGuideanceError: !0 }),
						[n.fxo]: (e, t) => ({
							...e,
							latestFunctionalThresholdPower: t.data,
						}),
						[n.EVx]: d,
						[n.BID]: (e, t) => ({ ...e, event: t.value }),
						[n.quN]: (e, t) => ({ ...e, powerGuideFromEvent: t.value }),
					},
					y = (e) => e.powerGuidance.powerGuidanceList,
					h = (e) => e.powerGuidance.powerGuidanceListFetching,
					g = (e) => e.powerGuidance.courseData,
					m = (e) => e.powerGuidance.powerGuidanceData.powerGuidanceSummary,
					A = (e) => e.powerGuidance.powerGuidanceData.powerGuidanceSplits,
					_ = (e) => e.powerGuidance.wereChangesMade,
					E = (e) => e.powerGuidance.fitnessStatsFetching,
					T = (e) =>
						e.powerGuidance.powerGuidanceData.powerGuidanceSummary.bikeMass,
					C = (e) => e.powerGuidance.updatePowerZoneSuccess,
					S = (e) => e.powerGuidance.powerGuideUpdated,
					I = (e) => e.powerGuidance.powerGuideSaveFail,
					v = (e) => e.powerGuidance.deletePowerGuideanceError,
					f = (e) => e.powerGuidance.duplicatePowerGuideanceError,
					D = (e) => e.powerGuidance.latestFunctionalThresholdPower,
					N = (e) => e.powerGuidance.event,
					R = (e) => e.powerGuidance.powerGuideFromEvent,
					b = (e) => e.powerGuidance.powerGuidanceListByCourseId;
				function L(e = r, t = {}) {
					const i = p[t.type];
					return i ? i(e, t) : e;
				}
			},
			242216: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => u,
					Cs: () => r,
					Rl: () => s,
					Tj: () => p,
					_X: () => o,
					_Y: () => h,
					bW: () => y,
					xO: () => l,
				});
				var n = i(651232);
				const a = { finishedFetching: !1, userPreferenceSaving: !1 };
				function s() {
					return { type: n.ZH, payload: {} };
				}
				function r(e) {
					return { type: n.Ep, payload: { selectedFields: e } };
				}
				const o = (e, t, i) => ({
						type: n.KF,
						userPreference: t,
						preferenceKey: e,
						callback: i,
					}),
					l = (e, t, i) => ({
						type: n.py,
						key: e,
						meta: { cacheTime: t ? null : 12e4 },
						callback: i,
					}),
					c = (e, t) => ({ ...e, selectedFields: t.selectedFields }),
					d = {
						[n.F9]: c,
						[n.wx]: c,
						[n.Lj]: (e, t) => (
							e.userPreferences || (e.userPreferences = {}),
							(e.userPreferences[t.preferenceKey] = t.value),
							{ ...e, finishedFetching: !0 }
						),
						[n.Ai]: (e, t) => e,
						[n.KF]: (e, t) => ((e.userPreferenceSaving = !0), e),
						[n.Cp]: (e, t) => (
							e.userPreferences || (e.userPreferences = {}),
							(e.userPreferences[t.preferenceKey] = t.value),
							(e.userPreferenceSaving = !1),
							e
						),
						[n.D_]: (e, t) => (
							e.userPreferences || (e.userPreferences = {}),
							(e.userPreferences[t.preferenceKey] = null),
							(e.userPreferenceSaving = !1),
							e
						),
					};
				function u(e = a, t = {}) {
					const i = d[t.type];
					return i ? i(e, t) : e;
				}
				const p = (e, t, i, n) => {
						let a =
							e.preference && e.preference.userPreferences
								? e.preference.userPreferences[t]
								: null;
						return (
							(null !== a && 'undefined' !== typeof a) || !n || (a = n),
							null != a && i && (a = JSON.parse(a)),
							a
						);
					},
					y = (e) => e.preference.finishedFetching,
					h = (e) => !e.preference.userPreferenceSaving;
			},
			94904: (e, t, i) => {
				'use strict';
				i.d(t, {
					$I: () => y,
					$d: () => E,
					Ay: () => ne,
					Az: () => P,
					BD: () => O,
					Be: () => D,
					EE: () => L,
					Ez: () => A,
					G5: () => H,
					GH: () => r,
					Ip: () => U,
					LI: () => f,
					Lh: () => s,
					M: () => R,
					NF: () => V,
					PP: () => b,
					RE: () => M,
					Rq: () => W,
					Sz: () => _,
					Um: () => p,
					Ur: () => N,
					Yp: () => g,
					Zp: () => u,
					Zq: () => c,
					aB: () => w,
					bP: () => G,
					eD: () => d,
					eZ: () => o,
					i_: () => x,
					jP: () => m,
					mU: () => B,
					nZ: () => S,
					n_: () => C,
					nr: () => T,
					uo: () => v,
					vg: () => F,
					xD: () => I,
					xf: () => h,
					xy: () => k,
					yV: () => l,
				});
				var n = i(222192);
				const a = {
						stopTracking: {
							stopTrackingType: null,
							endDate: null,
							pregnancyNotes: null,
							cycleType: null,
							updating: !1,
							updatingFail: !1,
							success: !1,
						},
						takeBreak: { updating: !1, updatingFail: !1, success: !1 },
						setup: {
							dueDate: null,
							title: null,
							hydrationGoal: null,
							updating: !1,
							updatingFail: !1,
							success: !1,
							weightGoalUserInputs: {
								weightGoalRecommendation: !1,
								heightInCm: null,
								weightInGram: null,
							},
							advancedMetrics: { deviceId: null, advancedMetrics: [] },
							moveAlerts: { deviceId: null, enabled: !0 },
							trainingStatusEnabled: null,
							send: !1,
							success: !1,
							setupError: !1,
							hydrationError: !1,
							trainingStatusError: !1,
							weightGainError: !1,
							dueDateError: !1,
							indexScaleError: !1,
							moveAlertError: !1,
							conflictErrorCycleType: null,
							conflictPeriodStartDate: null,
						},
						pregnancySnapshots: {
							snapshots: null,
							success: !1,
							error: !1,
							fetching: !1,
							updating: !1,
							updateSuccess: null,
							updateError: null,
						},
						dayView: { data: null, fetching: !1, success: !1, error: !1 },
						dailyLog: { dayLog: null, success: !1, error: !1 },
						glucose: {
							addSuccess: !1,
							addError: !1,
							data: null,
							fetching: !1,
							success: !1,
							error: !1,
							updateSuccess: !1,
							updateError: !1,
							deleteSuccess: !1,
							deleteError: !1,
						},
						pregnancyIcons: { icons: {}, fetching: !1, success: !1, error: !1 },
						weightGainGoals: {
							data: null,
							fetching: !1,
							success: !1,
							error: !1,
						},
					},
					s = (e) => e.pregnancyTracking.pregnancyIcons.success,
					r = (e) => e.pregnancyTracking.pregnancyIcons.icons,
					o = (e) => e.pregnancyTracking.stopTracking,
					l = (e) => e.pregnancyTracking.stopTracking.updating,
					c = (e) => e.pregnancyTracking.stopTracking.success,
					d = (e) => e.pregnancyTracking.stopTracking.updatingFail,
					u = (e) => e.pregnancyTracking.takeBreak.updating,
					p = (e) => e.pregnancyTracking.takeBreak.success,
					y = (e) => e.pregnancyTracking.takeBreak.updatingFail,
					h = (e) => e.pregnancyTracking.setup,
					g = (e) => e.pregnancyTracking.setup.success,
					m = (e) => e.pregnancyTracking.setup.setupError,
					A = (e) => e.pregnancyTracking.setup.conflictErrorCycleType,
					_ = (e) => e.pregnancyTracking.setup.conflictPeriodStartDate,
					E = (e) => e.pregnancyTracking.setup.hydrationError,
					T = (e) => e.pregnancyTracking.setup.trainingStatusError,
					C = (e) => e.pregnancyTracking.setup.send,
					S = (e) => e.pregnancyTracking.setup.weightGainError,
					I = (e) => e.pregnancyTracking.setup.indexScaleError,
					v = (e) => e.pregnancyTracking.setup.moveAlertError,
					f = (e) => e.pregnancyTracking.pregnancySnapshots.snapshots,
					D = (e) => e.pregnancyTracking.pregnancySnapshots.fetching,
					N = (e) => e.pregnancyTracking.pregnancySnapshots.success,
					R = (e) => e.pregnancyTracking.pregnancySnapshots.updating,
					b = (e) => e.pregnancyTracking.pregnancySnapshots.updateError,
					L = (e) => e.pregnancyTracking.dayView.data,
					P = (e) => e.pregnancyTracking.dayView.fetching,
					O = (e) => e.pregnancyTracking.dayView.success,
					w = (e) => e.pregnancyTracking.dayView.error,
					F = (e) => e.pregnancyTracking.dailyLog.dayLog,
					k = (e) => e.pregnancyTracking.dailyLog.error,
					U = (e) => e.pregnancyTracking.glucose.success,
					M = (e) => e.pregnancyTracking.glucose.error,
					G = (e) => e.pregnancyTracking.glucose.data,
					x = (e) => e.pregnancyTracking.glucose.addError,
					B = (e) => e.pregnancyTracking.glucose.updateError,
					H = (e) => e.pregnancyTracking.glucose.deleteError,
					V = (e) => e.pregnancyTracking.weightGainGoals.data,
					W = (e) => e.pregnancyTracking.weightGainGoals.fetching,
					J = (e) => (t, i) => ({
						...t,
						stopTracking: { ...t.stopTracking, updating: e, success: !e },
					}),
					Y = (e) => (t) => ({
						...t,
						takeBreak: { ...t.takeBreak, updating: e, success: !e },
					}),
					$ = (e) => (t, i) => {
						let n = [];
						return (
							e &&
								(t.pregnancySnapshots.snapshots.length > 1
									? t.pregnancySnapshots.snapshots.forEach((e) => {
											e.originalDueDate === i.pregnancySnapshot.originalDueDate
												? n.push(i.pregnancySnapshot)
												: n.push(e);
										})
									: n.push(i.pregnancySnapshot)),
							{
								...t,
								pregnancySnapshots: {
									...t.pregnancySnapshots,
									snapshots: e ? n : t.pregnancySnapshots.snapshots,
									updateSuccess: e,
									updateError: !e,
									updating: !1,
								},
							}
						);
					},
					j = (e) => (t, i) => ({
						...t,
						pregnancySnapshots: {
							...t.pregnancySnapshots,
							snapshots: e ? i.data : null,
							success: e,
							error: !e,
							fetching: !1,
						},
					}),
					K = (e) => (t, i) => ({
						...t,
						dayView: {
							...t.dayView,
							data: e ? i.data : null,
							fetching: !1,
							success: e,
							error: !e,
						},
						dailyLog: { ...t.dailyLog, dayLog: e ? i.data.dayLog : null },
					}),
					z = (e) => (t, i) => ({
						...t,
						dailyLog: { ...t.dailyLog, dayLog: i.data, success: e, error: !e },
					}),
					q = (e) => (t, i) => ({
						...t,
						glucose: {
							...t.glucose,
							data: i.data,
							success: e,
							error: !e,
							fetching: !1,
							addSuccess: !1,
							addError: !1,
						},
					}),
					Q = (e) => (t, i) => ({
						...t,
						glucose: {
							...t.glucose,
							addSuccess: e,
							addError: !e,
							fetching: !1,
							updateSuccess: !1,
							updateError: !1,
							deleteSuccess: !1,
							deleteError: !1,
						},
					}),
					X = (e) => (t, i) => ({
						...t,
						glucose: {
							...t.glucose,
							addSuccess: !1,
							addError: !1,
							deleteSuccess: !1,
							deleteError: !1,
							updateSuccess: e,
							updateError: !e,
							fetching: !1,
						},
					}),
					Z = (e) => (t, i) => ({
						...t,
						glucose: {
							...t.glucose,
							deleteSuccess: e,
							deleteError: !e,
							fetching: !1,
							updateSuccess: !1,
							updateError: !1,
							addSuccess: !1,
							addError: !1,
						},
					}),
					ee = (e) => (t, i) => ({
						...t,
						pregnancyIcons: {
							...t.pregnancyIcons,
							icons: {
								...t.pregnancyIcons.icons,
								[i.data.iconKey]: i.data.iconData,
							},
							success: e,
							error: !e,
						},
					}),
					te = (e) => (t, i) => ({
						...t,
						weightGainGoals: {
							...t.weightGainGoals,
							data: { ...t.weightGainGoals.data, weightGainGoals: i.data },
							fetching: !1,
							success: e,
							error: !e,
						},
					}),
					ie = {
						[n.Mb]: (e, t) => ({
							...e,
							stopTracking: { ...e.stopTracking, stopTrackingType: t.reason },
						}),
						[n.oC]: (e, t) => ({
							...e,
							stopTracking: { ...e.stopTracking, endDate: t.endDate },
						}),
						[n.VM]: (e, t) => ({
							...e,
							stopTracking: { ...e.stopTracking, pregnancyNotes: t.notes },
						}),
						[n.db]: (e, t) => ({
							...e,
							stopTracking: { ...e.stopTracking, cycleType: t.cycleType },
						}),
						[n.VB]: (e) => ({ ...e, stopTracking: a.stopTracking }),
						[n.yf]: J(!0),
						[n.DN]: J(!1),
						[n.e4]: (e, t) => ({
							...e,
							stopTracking: {
								...e.stopTracking,
								updating: !1,
								updatingFail: !0,
							},
						}),
						[n.Dv]: Y(!0),
						[n.K9]: Y(!1),
						[n.px]: (e) => ({
							...e,
							takeBreak: { ...e.takeBreak, updating: !1, updatingFail: !0 },
						}),
						[n.O7]: (e) => ({ ...e, takeBreak: a.takeBreak }),
						[n.YS]: (e) => ({ ...e, setup: a.setup }),
						[n.CU]: (e, t) => ({
							...e,
							setup: { ...e.setup, dueDate: t.dueDate, title: t.title },
						}),
						[n.fM]: (e, t) => ({
							...e,
							setup: { ...e.setup, hydrationGoal: t.hydrationGoal },
						}),
						[n.vs]: (e, t) => ({
							...e,
							setup: {
								...e.setup,
								weightGoalUserInputs: t.weightGoalUserInputs,
							},
						}),
						[n.$G]: (e, t) => ({
							...e,
							setup: { ...e.setup, advancedMetrics: t.advancedMetrics },
						}),
						[n.G]: (e, t) => ({
							...e,
							setup: {
								...e.setup,
								moveAlerts: { deviceId: t.deviceId, enabled: t.enabled },
							},
						}),
						[n.wQ]: (e, t) => ({
							...e,
							setup: {
								...e.setup,
								trainingStatusEnabled: t.enableTrainingStatusAlerts,
							},
						}),
						[n.i_]: (e, t) => ({
							...e,
							setup: {
								...e.setup,
								success: !0,
								send: !1,
								setupError: !1,
								hydrationError: !1,
								trainingStatusError: !1,
								weightGainError: !1,
								dueDateError: !1,
								indexScaleError: !1,
								moveAlertError: !1,
								conflictErrorCycleType: null,
								conflictPeriodStartDate: null,
							},
						}),
						[n.jP]: (e, t) => ({
							...e,
							setup: {
								...e.setup,
								success: !1,
								send: !1,
								setupError: !0,
								hydrationError: !1,
								trainingStatusError: !1,
								weightGainError: !1,
								dueDateError: !1,
								indexScaleError: !1,
								moveAlertError: !1,
								conflictErrorCycleType: null,
								conflictPeriodStartDate: null,
							},
						}),
						[n.vc]: (e, t) => ({
							...e,
							setup: {
								...e.setup,
								success: !1,
								send: !1,
								setupError: !1,
								hydrationError: !0,
								trainingStatusError: !1,
								weightGainError: !1,
								dueDateError: !1,
								indexScaleError: !1,
								moveAlertError: !1,
							},
						}),
						[n.SQ]: (e, t) => ({
							...e,
							setup: {
								...e.setup,
								success: !1,
								send: !1,
								setupError: !1,
								hydrationError: !1,
								trainingStatusError: !0,
								weightGainError: !1,
								dueDateError: !1,
								indexScaleError: !1,
								moveAlertError: !1,
							},
						}),
						[n.fU]: (e, t) => ({
							...e,
							setup: {
								...e.setup,
								send: !0,
								success: !1,
								setupError: !1,
								hydrationError: !1,
								trainingStatusError: !1,
								weightGainError: !1,
								dueDateError: !1,
								indexScaleError: !1,
								moveAlertError: !1,
							},
						}),
						[n.QD]: (e, t) => ({
							...e,
							setup: {
								...e.setup,
								success: !1,
								send: !1,
								setupError: !1,
								hydrationError: !1,
								trainingStatusError: !1,
								weightGainError: !0,
								dueDateError: !1,
								indexScaleError: !1,
								moveAlertError: !1,
							},
						}),
						[n.ye]: (e, t) => ({
							...e,
							setup: {
								...e.setup,
								success: !1,
								send: !1,
								setupError: !1,
								hydrationError: !1,
								trainingStatusError: !1,
								weightGainError: !1,
								dueDateError: !1,
								indexScaleError: !0,
								moveAlertError: !1,
							},
						}),
						[n.HL]: (e, t) => ({
							...e,
							setup: {
								...e.setup,
								success: !1,
								send: !1,
								setupError: !1,
								hydrationError: !1,
								trainingStatusError: !1,
								weightGainError: !1,
								dueDateError: !1,
								indexScaleError: !1,
								moveAlertError: !0,
							},
						}),
						[n.hE]: j(!0),
						[n.KP]: (e, t) => ({
							...e,
							pregnancySnapshots: {
								...e.pregnancySnapshots,
								snapshots: null,
								fetching: !0,
							},
						}),
						[n.Us]: j(!1),
						[n.iO]: (e, t) => ({
							...e,
							pregnancySnapshots: { ...e.pregnancySnapshots, updating: !0 },
						}),
						[n.tq]: $(!0),
						[n.Q0]: $(!1),
						[n.IR]: (e, t) => ({
							...e,
							dayView: { ...e.dayView, data: null, fetching: !0 },
						}),
						[n.H6]: K(!0),
						[n.cz]: K(!1),
						[n.Bt]: z(!0),
						[n.GC]: z(!1),
						[n.r9]: (e, t) => ({
							...e,
							glucose: { ...e.glucose, fetching: !0 },
						}),
						[n.mg]: q(!0),
						[n.pm]: q(!1),
						[n.dD]: Q(!0),
						[n.or]: Q(!1),
						[n.p7]: X(!0),
						[n.eG]: X(!1),
						[n.rv]: Z(!0),
						[n.QQ]: Z(!1),
						[n.RA]: ee(!0),
						[n.Ob]: ee(!1),
						[n.S3]: (e, t) => ({
							...e,
							setup: {
								...e.setup,
								success: !1,
								send: !1,
								setupError: !1,
								hydrationError: !1,
								trainingStatusError: !1,
								weightGainError: !1,
								dueDateError: !1,
								indexScaleError: !1,
								moveAlertError: !1,
								conflictErrorCycleType: t.conflictType,
								conflictPeriodStartDate: t.periodStartDate,
							},
						}),
						[n.uP]: (e, t) => ({
							...e,
							weightGainGoals: {
								...e.weightGainGoals,
								data: null,
								fetching: !0,
							},
						}),
						[n.lG]: te(!0),
						[n.IC]: te(!1),
					};
				function ne(e = a, t = {}) {
					const i = ie[t.type];
					return i ? i(e, t) : e;
				}
			},
			270690: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, RV: () => l, tT: () => o });
				var n = i(316550);
				const a = { payload: {}, dailyAcclimation: {} },
					s = {
						[n.Ytm]: (e, t) => ({
							payload: t.pulseOxAcclimation,
							dailyAcclimation: {
								...e.dailyAcclimation,
								[t.userProfileId]: {
									...e.dailyAcclimation[t.userProfileId],
									[t.calendarDate]: t.pulseOxAcclimation,
								},
							},
						}),
						[n.ReH]: (e, t) => ({
							payload: t.pulseOxAcclimation,
							dailyAcclimation: {
								...e.dailyAcclimation,
								[t.userProfileId]: {
									...e.dailyAcclimation[t.userProfileId],
									[t.calendarDate]: {},
								},
							},
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i) {
					return {
						type: n.OQj,
						userProfileId: e,
						date: t,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				const l = (e, t, i) =>
					e.pulseOxAcclimation.dailyAcclimation[t]
						? e.pulseOxAcclimation.dailyAcclimation[t][i]
						: null;
			},
			996002: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, kU: () => o, q8: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entity: null },
					s = {
						[n.uOE]: (e) => ({ ...e, isFetching: !0 }),
						[n.Q$H]: (e, t) => ({
							...e,
							entity: t.activities365Report.userMetrics
								? t.activities365Report.userMetrics[0]
								: {},
							isFetching: !1,
							lastUpdated: t.receivedAt,
						}),
						[n.IGR]: () => a,
					},
					r = (e) => e.activities365Report.entity,
					o = (e) => e.activities365Report.isFetching;
				function l(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			599363: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					Ji: () => d,
					NY: () => o,
					RQ: () => l,
					cH: () => u,
					pY: () => c,
				});
				var n = i(563117);
				const a = {
						dailyEnduranceScoreData: [],
						dailyEnduranceScoreDataFetching: !1,
						dailyEnduranceScoreDataFetchFail: !1,
						weeklyEnduranceScoreData: [],
						weeklyEnduranceScoreDataFetching: !1,
						weeklyEnduranceScoreDataFetchFail: !1,
						monthlyEnduranceScoreData: [],
						monthlyEnduranceScoreDataFetching: !1,
						monthlyEnduranceScoreDataFetchFail: !1,
						latestEnduranceScoreData: {},
						latestEnduranceScoreDataFetching: !1,
						latestEnduranceScoreDataFetchFail: !1,
						activeToggle: 'score',
					},
					s = {
						[n.us]: (e) => ({
							...e,
							dailyEnduranceScoreDataFetching: !0,
							dailyEnduranceScoreDataFetchFail: !1,
						}),
						[n.DA]: (e, t) => ({
							...e,
							dailyEnduranceScoreData: t.enduranceScoreData,
							dailyEnduranceScoreDataFetching: !1,
							dailyEnduranceScoreDataFetchFail: !1,
						}),
						[n.Gs]: (e) => ({
							...e,
							dailyEnduranceScoreDataFetching: !1,
							dailyEnduranceScoreDataFetchFail: !0,
						}),
						[n.w6]: (e) => ({
							...e,
							weeklyEnduranceScoreDataFetching: !0,
							weeklyEnduranceScoreDataFetchFail: !1,
						}),
						[n.Dj]: (e, t) => ({
							...e,
							weeklyEnduranceScoreData: t.enduranceScoreData,
							weeklyEnduranceScoreDataFetching: !1,
							weeklyEnduranceScoreDataFetchFail: !1,
						}),
						[n.SP]: (e) => ({
							...e,
							weeklyEnduranceScoreDataFetching: !1,
							weeklyEnduranceScoreDataFetchFail: !0,
						}),
						[n.u4]: (e) => ({
							...e,
							monthlyEnduranceScoreDataFetching: !0,
							monthlyEnduranceScoreDataFetchFail: !1,
						}),
						[n.NP]: (e, t) => ({
							...e,
							monthlyEnduranceScoreData: t.enduranceScoreData,
							monthlyEnduranceScoreDataFetching: !1,
							monthlyEnduranceScoreDataFetchFail: !1,
						}),
						[n.Sc]: (e) => ({
							...e,
							monthlyEnduranceScoreDataFetching: !1,
							monthlyEnduranceScoreDataFetchFail: !0,
						}),
						[n.WZ]: (e) => ({
							...e,
							latestEnduranceScoreDataFetching: !0,
							latestEnduranceScoreDataFetchFail: !1,
						}),
						[n.$1]: (e, t) => ({
							...e,
							latestEnduranceScoreData: t.enduranceScoreData,
							latestEnduranceScoreDataFetching: !1,
							latestEnduranceScoreDataFetchFail: !1,
						}),
						[n.mj]: (e) => ({
							...e,
							latestEnduranceScoreDataFetching: !1,
							latestEnduranceScoreDataFetchFail: !0,
						}),
						[n.n2]: (e, t) => ({ ...e, activeToggle: t.payload }),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t) {
					return {
						payload: e,
						type: n.Ff,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				function l(e, t) {
					return {
						payload: e,
						type: n.tU,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				function c(e, t) {
					return {
						payload: e,
						type: n.xt,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				function d(e, t) {
					return {
						payload: e,
						type: n.Fm,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				function u(e) {
					return { payload: e, type: n.n2 };
				}
			},
			245489: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, bw: () => o, f0: () => c, fc: () => l });
				var n = i(410567);
				const a = {
						dailyHillScoreDataOneDay: {},
						dailyHillScoreData: {},
						dailyHillScoreDataFetching: !1,
						dailyHillScoreDataFetchFail: !1,
						weeklyHillScoreData: {},
						weeklyHillScoreDataFetching: !1,
						weeklyHillScoreDataFetchFail: !1,
						monthlyHillScoreData: {},
						monthlyHillScoreDataFetching: !1,
						monthlyHillScoreDataFetchFail: !1,
					},
					s = {
						[n.O3]: (e) => ({
							...e,
							dailyHillScoreDataFetching: !0,
							dailyHillScoreDataFetchFail: !1,
						}),
						[n.hI]: (e, t) => ({
							...e,
							dailyHillScoreData: t.hillScoreData,
							dailyHillScoreDataFetching: !1,
							dailyHillScoreDataFetchFail: !1,
						}),
						[n.$K]: (e, t) => ({
							...e,
							dailyHillScoreDataOneDay: t.hillScoreData,
							dailyHillScoreDataFetching: !1,
							dailyHillScoreDataFetchFail: !1,
						}),
						[n.WB]: (e) => ({
							...e,
							dailyHillScoreData: {},
							dailyHillScoreDataOneDay: {},
							dailyHillScoreDataFetching: !1,
							dailyHillScoreDataFetchFail: !0,
						}),
						[n.gJ]: (e) => ({
							...e,
							weeklyHillScoreDataFetching: !0,
							weeklyHillScoreDataFetchFail: !1,
						}),
						[n.Fd]: (e, t) => ({
							...e,
							weeklyHillScoreData: t.hillScoreData,
							weeklyHillScoreDataFetching: !1,
							weeklyHillScoreDataFetchFail: !1,
						}),
						[n.oH]: (e) => ({
							...e,
							weeklyHillScoreDataFetching: !1,
							weeklyHillScoreDataFetchFail: !0,
						}),
						[n.we]: (e) => ({
							...e,
							monthlyHillScoreDataFetching: !0,
							monthlyHillScoreDataFetchFail: !1,
						}),
						[n.RM]: (e, t) => ({
							...e,
							monthlyHillScoreData: t.hillScoreData,
							monthlyHillScoreDataFetching: !1,
							monthlyHillScoreDataFetchFail: !1,
						}),
						[n.wG]: (e) => ({
							...e,
							monthlyHillScoreDataFetching: !1,
							monthlyHillScoreDataFetchFail: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t) {
					return {
						payload: e,
						type: n.L7,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				function l(e, t) {
					return {
						payload: e,
						type: n.T0,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				function c(e, t) {
					return {
						payload: e,
						type: n.Hh,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
			},
			234014: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					E8: () => c,
					Os: () => u,
					Ot: () => p,
					i9: () => d,
					wo: () => l,
					wv: () => y,
				});
				var n = i(771173),
					a = i(316550);
				const s = {
						dailyHydrationData: [],
						dailyHydrationDataFetching: !1,
						dailyHydrationDataFetchFail: !1,
						weeklyHydrationData: [],
						weeklyHydrationDataFetching: !1,
						weeklyHydrationDataFetchFail: !1,
					},
					r = {
						[n.SB]: (e) => ({
							...e,
							dailyHydrationDataFetching: !0,
							dailyHydrationDataFetchFail: !1,
						}),
						[n.Xv]: (e, t) => ({
							...e,
							dailyHydrationData: t.dailyHydrationData,
							dailyHydrationDataFetching: !1,
							dailyHydrationDataFetchFail: !1,
						}),
						[n.ul]: (e) => ({
							...e,
							dailyHydrationDataFetching: !1,
							dailyHydrationDataFetchFail: !0,
						}),
						[n.u2]: (e) => ({
							...e,
							weeklyHydrationDataFetching: !0,
							weeklyHydrationDataFetchFail: !1,
						}),
						[n.pt]: (e, t) => ({
							...e,
							weeklyHydrationData: t.weeklyHydrationData,
							weeklyHydrationDataFetching: !1,
							weeklyHydrationDataFetchFail: !1,
						}),
						[n.WM]: (e) => ({
							...e,
							weeklyHydrationDataFetching: !1,
							weeklyHydrationDataFetchFail: !0,
						}),
						[a.cvz]: () => s,
					};
				function o(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t) {
					return {
						payload: e,
						type: n.xE,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				function c(e, t) {
					return {
						type: n.Nv,
						payload: e,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				const d = (e) =>
						e.hydrationDataReports.dailyHydrationData
							? e.hydrationDataReports.dailyHydrationData
							: null,
					u = (e) => e.hydrationDataReports.dailyHydrationDataFetching,
					p = (e) =>
						e.hydrationDataReports.weeklyHydrationData
							? e.hydrationDataReports.weeklyHydrationData
							: null,
					y = (e) => e.hydrationDataReports.weeklyHydrationDataFetching;
			},
			12936: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, MX: () => o, er: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entity: null },
					s = {
						[n.Fzl]: (e) => ({ ...e, isFetching: !0 }),
						[n.H_H]: (e, t) => ({
							...e,
							entity: t.monthlyReport || {},
							isFetching: !1,
							lastUpdated: t.receivedAt,
						}),
						[n.ZgN]: () => a,
					},
					r = (e) => e.monthlyReport.entity,
					o = (e) => e.monthlyReport.isFetching;
				function l(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			682184: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					Im: () => h,
					Ol: () => p,
					QH: () => y,
					QN: () => c,
					Ur: () => u,
					Wl: () => m,
					_o: () => d,
					g1: () => g,
					y8: () => l,
				});
				var n = i(706670),
					a = i(316550);
				const s = {
						dailyPushes: [],
						dailyPushesFetching: !1,
						dailyPushesFetchFail: !1,
						weeklyPushes: [],
						weeklyPushesFetching: !1,
						weeklyPushesFetchFail: !1,
						monthlyPushes: [],
						monthlyPushesFetching: !1,
						monthlyPushesFetchFail: !1,
						metricPeriodFilter: 'weekly',
					},
					r = {
						[n.jE]: (e) => ({
							...e,
							dailyPushesFetching: !0,
							dailyPushesFetchFail: !1,
						}),
						[n.G9]: (e, t) => {
							let i = [];
							for (const n of t.dailyPushes) {
								let e = { calendarDate: n.calendarDate, ...n.values };
								i.push(e);
							}
							return {
								...e,
								dailyPushes: i,
								dailyPushesFetching: !1,
								dailyPushesFetchFail: !1,
							};
						},
						[n.zG]: (e) => ({
							...e,
							dailyPushesFetching: !1,
							dailyPushesFetchFail: !0,
						}),
						[n.Dx]: (e) => ({
							...e,
							weeklyPushesFetching: !0,
							weeklyPushesFetchFail: !1,
						}),
						[n.A9]: (e, t) => ({
							...e,
							weeklyPushes: t.weeklyPushes,
							weeklyPushesFetching: !1,
							weeklyPushesFetchFail: !1,
						}),
						[n.L$]: (e) => ({
							...e,
							weeklyPushesFetching: !1,
							weeklyPushesFetchFail: !0,
						}),
						[n.Nx]: (e) => ({
							...e,
							monthlyPushesFetching: !0,
							monthlyPushesFetchFail: !1,
						}),
						[n.Gl]: (e, t) => ({
							...e,
							monthlyPushes: t.monthlyPushes,
							monthlyPushesFetching: !1,
							monthlyPushesFetchFail: !1,
						}),
						[n.vW]: (e) => ({
							...e,
							monthlyPushesFetching: !1,
							monthlyPushesFetchFail: !0,
						}),
						[a.cvz]: () => s,
						[n.tU]: (e, { payload: { filter: t } }) => ({
							...e,
							metricPeriodFilter: t,
						}),
					};
				function o(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t) {
					return {
						payload: e,
						type: n._d,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				function c(e, t) {
					return {
						type: n.qO,
						payload: e,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				function d(e, t) {
					return {
						type: n.ci,
						payload: e,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				const u = (e) =>
						e.pushesReports.dailyPushes ? e.pushesReports.dailyPushes : null,
					p = (e) => e.pushesReports.dailyPushesFetching,
					y = (e) =>
						e.pushesReports.weeklyPushes ? e.pushesReports.weeklyPushes : null,
					h = (e) => e.pushesReports.weeklyPushesFetching,
					g = (e) =>
						e.pushesReports.monthlyPushes
							? e.pushesReports.monthlyPushes
							: null,
					m = (e) => e.pushesReports.monthlyPushesFetching;
			},
			289236: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, IM: () => l, c0: () => o });
				const n = 'SWITCH_REPORTS_TOGGLED_ITEMS',
					a = { toggledItems: {} },
					s = {
						[n]: (e, { payload: t }) => ({
							...e,
							toggledItems: { ...e.toggledItems, ...t },
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return { payload: e, type: n };
				}
				const l = (e) => e.reportsToggledItems.toggledItems;
			},
			514757: (e, t, i) => {
				'use strict';
				i.d(t, {
					$H: () => u,
					Ay: () => o,
					BF: () => c,
					Bp: () => d,
					bq: () => p,
					ri: () => l,
					xg: () => y,
				});
				var n = i(883716),
					a = i(316550);
				const s = {
						dailySleepData: [],
						dailySleepDataFetching: !1,
						dailySleepDataFetchFail: !1,
						weeklySleepData: [],
						weeklySleepDataFetching: !1,
						weeklySleepDataFetchFail: !1,
					},
					r = {
						[n.BT]: (e) => ({
							...e,
							dailySleepDataFetching: !0,
							dailySleepDataFetchFail: !1,
						}),
						[n.UQ]: (e, t) => ({
							...e,
							dailySleepData: t.dailySleepData,
							dailySleepDataFetching: !1,
							dailySleepDataFetchFail: !1,
						}),
						[n.$m]: (e) => ({
							...e,
							dailySleepDataFetching: !1,
							dailySleepDataFetchFail: !0,
						}),
						[n.R0]: (e) => ({
							...e,
							weeklySleepDataFetching: !0,
							weeklySleepDataFetchFail: !1,
						}),
						[n.kF]: (e, t) => ({
							...e,
							weeklySleepData: t.weeklySleepData,
							weeklySleepDataFetching: !1,
							weeklySleepDataFetchFail: !1,
						}),
						[n.Vo]: (e) => ({
							...e,
							weeklySleepDataFetching: !1,
							weeklySleepDataFetchFail: !0,
						}),
						[a.cvz]: () => s,
					};
				function o(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t) {
					return {
						payload: e,
						type: n.I0,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				function c(e, t) {
					return {
						type: n.iQ,
						payload: e,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				const d = (e) =>
						e.sleepDataReports.dailySleepData
							? e.sleepDataReports.dailySleepData
							: null,
					u = (e) => e.sleepDataReports.dailySleepDataFetching,
					p = (e) =>
						e.sleepDataReports.weeklySleepData
							? e.sleepDataReports.weeklySleepData
							: null,
					y = (e) => e.sleepDataReports.weeklySleepDataFetching;
			},
			395741: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					Ki: () => _,
					P6: () => u,
					PQ: () => c,
					RN: () => p,
					VV: () => l,
					XM: () => m,
					bW: () => d,
					nc: () => h,
					to: () => g,
					tw: () => y,
					xC: () => A,
				});
				var n = i(96211),
					a = i(316550);
				const s = {
						dailySteps: [],
						dailyStepsFetching: !1,
						dailyStepsFetchFail: !1,
						weeklySteps: [],
						weeklyStepsFetching: !1,
						weeklyStepsFetchFail: !1,
						monthlySteps: [],
						monthlyStepsFetching: !1,
						monthlyStepsFetchFail: !1,
						metricPeriodFilter: 'weekly',
					},
					r = {
						[n.Sb]: (e) => ({
							...e,
							dailyStepsFetching: !0,
							dailyStepsFetchFail: !1,
						}),
						[n.JO]: (e, t) => ({
							...e,
							dailySteps: t.dailySteps,
							dailyStepsFetching: !1,
							dailyStepsFetchFail: !1,
						}),
						[n.Wl]: (e) => ({
							...e,
							dailyStepsFetching: !1,
							dailyStepsFetchFail: !0,
						}),
						[n.Ud]: (e) => ({
							...e,
							weeklyStepsFetching: !0,
							weeklyStepsFetchFail: !1,
						}),
						[n.Fp]: (e, t) => ({
							...e,
							weeklySteps: t.weeklySteps,
							weeklyStepsFetching: !1,
							weeklyStepsFetchFail: !1,
						}),
						[n.uC]: (e) => ({
							...e,
							weeklyStepsFetching: !1,
							weeklyStepsFetchFail: !0,
						}),
						[n.cY]: (e) => ({
							...e,
							monthlyStepsFetching: !0,
							monthlyStepsFetchFail: !1,
						}),
						[n.bf]: (e, t) => ({
							...e,
							monthlySteps: t.monthlySteps,
							monthlyStepsFetching: !1,
							monthlyStepsFetchFail: !1,
						}),
						[n.qj]: (e) => ({
							...e,
							monthlyStepsFetching: !1,
							monthlyStepsFetchFail: !0,
						}),
						[a.cvz]: () => s,
						[n.sQ]: (e, { payload: { filter: t } }) => ({
							...e,
							metricPeriodFilter: t,
						}),
					};
				function o(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t) {
					return {
						payload: e,
						type: n.PL,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				function c(e, t) {
					return {
						type: n.BJ,
						payload: e,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				function d(e, t) {
					return {
						type: n.pc,
						payload: e,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				function u(e) {
					return { payload: e, type: n.sQ };
				}
				const p = (e) =>
						e.stepsReports.dailySteps ? e.stepsReports.dailySteps : null,
					y = (e) => e.stepsReports.dailyStepsFetching,
					h = (e) =>
						e.stepsReports.weeklySteps ? e.stepsReports.weeklySteps : null,
					g = (e) => e.stepsReports.weeklyStepsFetching,
					m = (e) =>
						e.stepsReports.monthlySteps ? e.stepsReports.monthlySteps : null,
					A = (e) => e.stepsReports.monthlyStepsFetching,
					_ = (e) => e.stepsReports.metricPeriodFilter;
			},
			879212: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					Cq: () => p,
					I2: () => y,
					IN: () => l,
					m$: () => u,
					sD: () => c,
					yu: () => d,
				});
				var n = i(69330),
					a = i(316550);
				const s = {
						dailyStressData: [],
						dailyStressDataFetching: !1,
						dailyStressDataFetchFail: !1,
						weeklyStressData: [],
						weeklyStressDataFetching: !1,
						weeklyStressDataFetchFail: !1,
					},
					r = {
						[n.qI]: (e) => ({
							...e,
							dailyStressDataFetching: !0,
							dailyStressDataFetchFail: !1,
						}),
						[n.Rx]: (e, t) => ({
							...e,
							dailyStressData: t.dailyStressData,
							dailyStressDataFetching: !1,
							dailyStressDataFetchFail: !1,
						}),
						[n.g3]: (e) => ({
							...e,
							dailyStressDataFetching: !1,
							dailyStressDataFetchFail: !0,
						}),
						[n._l]: (e) => ({
							...e,
							weeklyStressDataFetching: !0,
							weeklyStressDataFetchFail: !1,
						}),
						[n.vB]: (e, t) => ({
							...e,
							weeklyStressData: t.weeklyStressData,
							weeklyStressDataFetching: !1,
							weeklyStressDataFetchFail: !1,
						}),
						[n.K3]: (e) => ({
							...e,
							weeklyStressDataFetching: !1,
							weeklyStressDataFetchFail: !0,
						}),
						[a.cvz]: () => s,
					};
				function o(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t) {
					return {
						payload: e,
						type: n.$c,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				function c(e, t) {
					return {
						type: n.nr,
						payload: e,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				const d = (e) =>
						e.stressDataReports.dailyStressData
							? e.stressDataReports.dailyStressData
							: null,
					u = (e) => e.stressDataReports.dailyStressDataFetching,
					p = (e) =>
						e.stressDataReports.weeklyStressData
							? e.stressDataReports.weeklyStressData
							: null,
					y = (e) => e.stressDataReports.weeklyStressDataFetching;
			},
			311942: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					Ye: () => l,
					bo: () => g,
					gC: () => c,
					mq: () => u,
					o: () => d,
					xY: () => p,
					y2: () => h,
					yR: () => y,
				});
				var n = i(469612),
					a = i(316550);
				const s = {
						dailyTotalCalories: [],
						dailyTotalCaloriesFetching: !1,
						dailyTotalCaloriesFetchFail: !1,
						weeklyTotalCalories: [],
						weeklyTotalCaloriesFetching: !1,
						weeklyTotalCaloriesFetchFail: !1,
					},
					r = {
						[n.GT]: (e) => ({
							...e,
							dailyTotalCaloriesFetching: !0,
							dailyTotalCaloriesFetchFail: !1,
						}),
						[n.LN]: (e, t) => ({
							...e,
							dailyTotalCalories: t.dailyTotalCalories,
							dailyTotalCaloriesFetching: !1,
							dailyTotalCaloriesFetchFail: !1,
						}),
						[n.ed]: (e) => ({
							...e,
							dailyTotalCaloriesFetching: !1,
							dailyTotalCaloriesFetchFail: !0,
						}),
						[n.Oi]: (e) => ({
							...e,
							weeklyTotalCaloriesFetching: !0,
							weeklyTotalCaloriesFetchFail: !1,
						}),
						[n.hp]: (e, t) => ({
							...e,
							weeklyTotalCalories: t.weeklyTotalCalories,
							weeklyTotalCaloriesFetching: !1,
							weeklyTotalCaloriesFetchFail: !1,
						}),
						[n.gf]: (e) => ({
							...e,
							weeklyTotalCaloriesFetching: !1,
							weeklyTotalCaloriesFetchFail: !0,
						}),
						[a.cvz]: () => s,
					};
				function o(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t) {
					return {
						payload: e,
						type: n.fP,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				function c(e, t) {
					return {
						type: n.Tm,
						payload: e,
						meta: { cacheTime: t ? null : 1e3 },
					};
				}
				const d = (e) =>
						e.totalCaloriesReports.dailyTotalCalories
							? e.totalCaloriesReports.dailyTotalCalories
							: null,
					u = (e) => e.totalCaloriesReports.dailyTotalCaloriesFetching,
					p = (e) => e.totalCaloriesReports.dailyTotalCaloriesFetchFail,
					y = (e) =>
						e.totalCaloriesReports.weeklyTotalCalories
							? e.totalCaloriesReports.weeklyTotalCalories
							: null,
					h = (e) => e.totalCaloriesReports.weeklyTotalCaloriesFetching,
					g = (e) => e.totalCaloriesReports.weeklyTotalCaloriesFetchFail;
			},
			531461: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					Ep: () => c,
					Qw: () => o,
					YS: () => l,
					aA: () => d,
				});
				var n = i(316550);
				const a = { dailyRespirationData: {}, isFetching: !1, fetchFailed: !1 },
					s = {
						[n.wSQ]: (e) => ({ ...e, isFetching: !0, fetchFailed: !1 }),
						[n.$Vz]: (e, t) => ({
							dailyRespirationData: {
								...e.dailyRespirationData,
								[t.displayName]: {
									...e.dailyRespirationData[t.displayName],
									[t.calendarDate]: t.dailyRespirationData,
								},
							},
							isFetching: !1,
							fetchFailed: !1,
						}),
						[n.sEL]: (e, t) => ({
							dailyRespirationData: {
								...e.dailyRespirationData,
								[t.displayName]: {
									...e.dailyRespirationData[t.displayName],
									[t.calendarDate]: {},
								},
							},
							isFetching: !1,
							fetchFailed: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i, a) {
					return {
						type: n.Ngh,
						displayName: e,
						calendarDate: t,
						nonSleepBufferMinutes: i,
						meta: { cacheTime: a ? null : 1e4 },
					};
				}
				const l = (e, t, i) =>
						e.dailyRespirationData.dailyRespirationData[t]
							? e.dailyRespirationData.dailyRespirationData[t][i]
							: null,
					c = (e) => e.dailyRespirationData.isFetching,
					d = (e) => e.dailyRespirationData.fetchFailed;
			},
			681684: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, DF: () => o, Yx: () => l });
				var n = i(808171);
				const a = { indoorClimbDifficulty: {} },
					s = { [n.ph]: (e, t) => ({ ...t.indoorClimbDifficulty }) };
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e) {
					return { type: n.p1, meta: { cacheTime: e ? null : 12e4 } };
				}
				const l = (e) => e.indoorClimbDifficulty;
			},
			691828: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => p,
					Mo: () => r,
					W1: () => u,
					Wq: () => o,
					cF: () => l,
					hL: () => c,
					jM: () => d,
				});
				var n = i(316550);
				const a = {
						isFetching: !1,
						entity: null,
						leaderBoard: null,
						expectedMoreData: !0,
						onlyMySegmentLeaderBoard: {},
						segmentsFilters: {
							keyword: '',
							myFavorites: !1,
							mineOnly: !0,
							activityTypePk: [0],
							classificationPk: [1],
							surfaceTypePk: [1],
							groupPk: [],
							minGrade: '',
							maxGrade: '',
							minDistance: '',
							maxDistance: '',
						},
						filtersSectionOpenedState: {
							activeSegmentDistanceTypeFilter: !1,
							activeSegmentAverageGradeFilter: !1,
						},
						fetchError: !1,
					},
					s = {
						[n.TlM]: (e) => ({ ...e, isFetching: !0 }),
						[n.hLx]: (e) => {
							let t = e.onlyMySegmentLeaderBoard;
							return {
								...a,
								onlyMySegmentLeaderBoard: t,
								segmentsFilters: e.segmentsFilters,
							};
						},
						[n.pqn]: (e, t) => ({
							...e,
							entity: t.data,
							isFetching: !1,
							fetchError: !1,
						}),
						[n.cZ4]: (e) => ({ ...e, isFetching: !0 }),
						[n.SST]: (e, t) => {
							let i = Object.assign({}, t.data);
							return (
								t.isEndlessLoading &&
									(i.leaderboardRowDTOList =
										e.leaderBoard && e.leaderBoard.leaderboardRowDTOList
											? e.leaderBoard.leaderboardRowDTOList.concat(
													t.data.leaderboardRowDTOList
												)
											: i.leaderboardRowDTOList),
								{
									...e,
									leaderBoard: i,
									isFetching: !1,
									expectedMoreData: !!(
										t.data &&
										t.data.leaderboardRowDTOList &&
										t.data.leaderboardRowDTOList.length &&
										i.leaderboardRowDTOList.length > 8
									),
								}
							);
						},
						[n.Gf2]: (e) => ({ ...e, isFetching: !0 }),
						[n.CJj]: (e, t) => ({
							...e,
							onlyMySegmentLeaderBoard: {
								...e.onlyMySegmentLeaderBoard,
								[t.data.uuid]: t.data,
							},
							isFetching: !1,
						}),
						[n.UOc]: (e, t) => ({
							...e,
							onlyMySegmentLeaderBoard: t.data,
							isFetching: !1,
						}),
						[n.RC3]: (e, t) =>
							e.entity
								? { ...e, entity: { ...e.entity, favorite: t.favorite } }
								: { ...e },
						[n.ALi]: (e, t) => ({
							...e,
							filtersSectionOpenedState: {
								...e.filtersSectionOpenedState,
								[t.data]: !e.filtersSectionOpenedState[t.data],
							},
						}),
						[n.FXg]: (e) => ({
							...e,
							filtersSectionOpenedState: {
								filtersSectionOpenedState: a.filtersSectionOpenedState,
							},
						}),
						[n.QaH]: (e, t) => {
							let i = t.filterValue;
							if ('object' === typeof e.segmentsFilters[t.filterName]) {
								i = t.onlyOneValueSelected
									? []
									: e.segmentsFilters[t.filterName];
								let n = i.indexOf(t.filterValue);
								-1 !== n ? i.splice(n, 1) : i.push(t.filterValue);
							}
							return {
								...e,
								segmentsFilters: { ...e.segmentsFilters, [t.filterName]: i },
							};
						},
						[n.XXh]: (e, t) => ({ ...e, fetchError: !0 }),
					},
					r = (e) => e.segment.entity,
					o = (e) => e.segment.segmentsFilters,
					l = (e) => e.segment.filtersSectionOpenedState,
					c = (e) => e.segment,
					d = (e, t) => e.segment.onlyMySegmentLeaderBoard[t] || {},
					u = (e) => e.segment.fetchError;
				function p(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			738339: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, T: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entity: [] },
					s = {
						[n.Kp_]: (e) => ({ ...e, isFetching: !0 }),
						[n.yjs]: (e, t) => ({
							...e,
							isFetching: !1,
							entity: t.segmentTypes,
							lastUpdated: t.receivedAt,
						}),
					},
					r = (e) => e.segmentTypes.entity;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			527099: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => u, Ln: () => l, Rd: () => d, nl: () => c });
				var n = i(316550);
				const a = {
						isFetching: !1,
						entities: null,
						favoriteSegmentsInGroup: {},
					},
					s = (e, t, i) =>
						e.entities.map(function (e) {
							return e.segmentPk === t && (e.favorite = i), e;
						}),
					r = (e, t) =>
						e.entities.filter(function (e) {
							return e.uuid !== t.segmentUuid;
						}),
					o = {
						[n.zF2]: (e) => ({ ...e, isFetching: !0 }),
						[n.dOI]: (e, t) => ({
							...e,
							isFetching: !1,
							entities: t.data || [],
							lastUpdated: t.receivedAt,
						}),
						[n.PHf]: (e) => ({ ...e, isFetching: !0 }),
						[n.dsR]: (e, t) => ({
							...e,
							favoriteSegmentsInGroup: {
								...e.favoriteSegmentsInGroup,
								[t.response.groupPk]: t.response,
							},
							isFetching: !1,
						}),
						[n.Bjb]: (e) => ({
							...e,
							favoriteSegmentsInGroup: a.favoriteSegmentsInGroup,
							isFetching: !1,
						}),
						[n.QnG]: (e, t) => {
							const i = s(e, t.segmentpk, t.favorite);
							return { ...e, entities: i };
						},
						[n.IDU]: (e, t) => {
							const i = r(e, t);
							return { ...e, entities: i };
						},
					},
					l = (e) => e.segments.entities,
					c = (e) => e.segments.favoriteSegmentsInGroup,
					d = (e) => e.segments.isFetching;
				function u(e = a, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
			},
			363605: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, J: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entity: [] },
					s = {
						[n.S4v]: (e) => ({ ...e, isFetching: !0 }),
						[n.uuz]: (e, t) => ({
							...e,
							isFetching: !1,
							entity: t.surfaceTypes,
							lastUpdated: t.receivedAt,
						}),
					},
					r = (e) => e.surfaceTypes.entity;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			971376: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => c,
					DL: () => h,
					M4: () => _,
					MV: () => A,
					PD: () => m,
					Po: () => y,
					d4: () => g,
					r7: () => u,
					s5: () => p,
					vY: () => d,
				});
				var n = i(316550);
				const a = {
						eventDetails: {},
						fetching: !1,
						error: !1,
						success: !1,
						events: [],
						eventToCopy: null,
						editEventInfo: null,
						raceEventProviders: {
							providers: [],
							success: !1,
							fetching: !1,
							error: !1,
						},
						temporaryEvent: null,
					},
					s = (e) => (t, i) => ({
						...t,
						eventDetails: {
							...t.eventDetails,
							event: e ? i.event : null,
							success: e,
							error: !e,
						},
						fetching: !1,
					}),
					r = (e) => (t, i) => ({
						...t,
						fetching: !1,
						error: !e,
						success: e,
						events: e ? i.events : [],
					}),
					o = (e) => (t, i) => ({
						...t,
						raceEventProviders: {
							providers: i.providers,
							fetching: !1,
							success: e,
							error: !e,
						},
					}),
					l = {
						[n.pkM]: (e) => ({
							...e,
							eventDetails: { ...e.eventDetails, event: null },
							fetching: !0,
						}),
						[n.e0n]: s(!0),
						[n.bNV]: s(!1),
						[n.ztF]: (e) => ({
							...e,
							error: !1,
							success: !1,
							fetching: !0,
							events: [],
						}),
						[n.I$f]: r(!0),
						[n.b9T]: r(!1),
						[n.OkU]: (e) => ({
							...e,
							fetching: !1,
							error: !1,
							success: !1,
							events: [],
						}),
						[n.FLj]: (e, t) => ({ ...e, eventToCopy: t.event }),
						[n.A9V]: (e) => ({ ...e, eventToCopy: null }),
						[n.s29]: (e, t) => ({
							...e,
							editEventInfo: {
								tab: t.tab,
								date: t.date,
								id: t.id,
								shareableEventUuid: t.shareableEventUuid,
								pageIndex: t.pageIndex,
								sortColumn: t.sortColumn,
								sortOrder: t.sortOrder,
							},
						}),
						[n.lrD]: (e) => ({ ...e, editEventInfo: null }),
						[n.Y$2]: (e) => ({
							...e,
							raceEventProviders: {
								...e.raceEventProviders,
								fetching: !0,
								success: !1,
								error: !1,
							},
						}),
						[n.fGZ]: o(!0),
						[n.MNr]: o(!0),
						[n.lNg]: (e, t) => ({ ...e, temporaryEvent: t.event }),
						[n.GDX]: (e) => ({ ...e, temporaryEvent: null }),
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
				const d = (e) => e.shareableEvent.eventDetails.event,
					u = (e) => e.shareableEvent.fetching,
					p = (e) => e.shareableEvent.success,
					y = (e) => e.shareableEvent.events,
					h = (e) => e.shareableEvent.eventToCopy,
					g = (e) => e.shareableEvent.editEventInfo,
					m = (e) => e.shareableEvent.raceEventProviders.success,
					A = (e) => e.shareableEvent.raceEventProviders.providers,
					_ = (e) => e.shareableEvent.temporaryEvent;
			},
			129273: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					E7: () => y,
					Iy: () => c,
					Lh: () => l,
					M1: () => p,
					MJ: () => h,
					Qu: () => m,
					U1: () => g,
					Uu: () => C,
					aU: () => T,
					cF: () => d,
					dR: () => A,
					gM: () => u,
					hi: () => _,
					oV: () => E,
				});
				var n = i(316550),
					a = i(635438);
				const s = {
						dailySleeps: {},
						isFetching: {},
						fetchFailed: {},
						noteUpdating: !1,
						noteUpdateFailed: !1,
						lastNote: '',
						sleepWindowUpdating: !1,
						sleepWindowUpdateFailed: !1,
						dailySleepAdding: !1,
						dailySleepAddingFailed: !1,
						openTab: null,
						dailyNaps: {
							isFetching: {},
							fetchFailed: {},
							fetchSuccess: {},
							naps: {},
							isAddingNap: !1,
							isAddingNapSuccess: !1,
							isAddingNapFailed: !1,
						},
						hrvStatus: { isFetching: {}, fetchFailed: {}, hrv: {} },
					},
					r = {
						[n.Bto]: (e, t) => ({
							...e,
							isFetching: { ...e.isFetching, [t.calendarDate]: !0 },
							fetchFailed: { ...e.fetchFailed, [t.calendarDate]: !1 },
						}),
						[n.q1c]: (e, t) => ({
							...e,
							dailySleeps: {
								...e.dailySleeps,
								[t.calendarDate]: t.dailySleepData,
							},
							isFetching: { ...e.isFetching, [t.calendarDate]: !1 },
							fetchFailed: { ...e.fetchFailed, [t.calendarDate]: !1 },
						}),
						[n.DAU]: (e, t) => ({
							...e,
							dailySleeps: { ...e.dailySleeps, [t.calendarDate]: {} },
							isFetching: { ...e.isFetching, [t.calendarDate]: !1 },
							fetchFailed: { ...e.fetchFailed, [t.calendarDate]: !0 },
						}),
						[n.PCN]: (e, t) => {
							const { userNote: i, calendarDate: n } = t;
							return {
								...e,
								dailySleeps: {
									...e.dailySleeps,
									[n]: {
										...e.dailySleeps[n],
										dailySleepDTO: {
											...e.dailySleeps[n].dailySleepDTO,
											userNote: i,
										},
									},
								},
								noteUpdating: !0,
							};
						},
						[n.DRW]: (e, t) => {
							const { userNote: i } = t;
							return {
								...e,
								noteUpdating: s.noteUpdating,
								noteUpdateFailed: s.noteUpdateFailed,
								lastNote: i,
							};
						},
						[n.U8F]: (e, t) => {
							const { calendarDate: i } = t;
							return {
								...e,
								dailySleeps: {
									...e.dailySleeps,
									[i]: {
										...e.dailySleeps[i],
										dailySleepDTO: {
											...e.dailySleeps[i].dailySleepDTO,
											userNote: e.lastNote,
										},
									},
								},
								noteUpdating: s.noteUpdating,
								noteUpdateFailed: !0,
							};
						},
						[n.yLp]: (e) => ({
							...e,
							sleepWindowUpdating: !0,
							sleepWindowUpdateFailed: s.sleepWindowUpdateFailed,
						}),
						[n.BA4]: (e, t) => {
							const { dailySleepData: i, calendarDate: n } = t;
							return {
								...e,
								dailySleeps: { ...e.dailySleeps, [n]: i },
								sleepWindowUpdating: s.sleepWindowUpdating,
								sleepWindowUpdateFailed: s.sleepWindowUpdateFailed,
							};
						},
						[n.mdI]: (e, t) => {
							const { calendarDate: i } = t;
							return {
								...e,
								dailySleeps: { ...e.dailySleeps, [i]: null },
								sleepWindowUpdating: s.sleepWindowUpdating,
								sleepWindowUpdateFailed: !0,
							};
						},
						[n.Xej]: (e) => ({
							...e,
							dailySleepAdding: !0,
							dailySleepAddingFailed: s.dailySleepAddingFailed,
						}),
						[n.shm]: (e, t) => {
							const { dailySleepData: i, calendarDate: n } = t;
							return {
								...e,
								dailySleeps: { ...e.dailySleeps, [n]: i },
								dailySleepAdding: s.dailySleepAdding,
								dailySleepAddingFailed: s.dailySleepAddingFailed,
							};
						},
						[n.ByZ]: (e, t) => {
							const { calendarDate: i } = t;
							return {
								...e,
								dailySleeps: { ...e.dailySleeps, [i]: null },
								dailySleepAdding: s.dailySleepAdding,
								dailySleepAddingFailed: !0,
							};
						},
						[n.g2Q]: (e) => ({
							...e,
							dailySleepAdding: s.dailySleepAdding,
							dailySleepAddingFailed: s.dailySleepAddingFailed,
						}),
						[n.arQ]: (e, t) => {
							const { tab: i } = t;
							return { ...e, openTab: i };
						},
						[n.tZ0]: (e, t) => {
							const i = t.startDate + t.endDate;
							return {
								...e,
								hrvStatus: {
									...e.hrvStatus,
									isFetching: { ...e.hrvStatus.isFetching, [i]: !0 },
									fetchFailed: { ...e.hrvStatus.fetchFailed, [i]: !1 },
								},
							};
						},
						[n.U82]: (e, t) => {
							const i = t.startDate + t.endDate;
							return {
								...e,
								hrvStatus: {
									...e.hrvStatus,
									hrv: { ...e.hrvStatus.hrv, [i]: t.hrvData },
									isFetching: { ...e.hrvStatus.isFetching, [i]: !1 },
									fetchFailed: { ...e.hrvStatus.fetchFailed, [i]: !1 },
								},
							};
						},
						[n.d9n]: (e, t) => {
							const i = t.startDate + t.endDate;
							return {
								...e,
								hrvStatus: {
									...e.hrvStatus,
									hrv: { ...e.hrvStatus.hrv, [i]: {} },
									isFetching: { ...e.hrvStatus.isFetching, [i]: !1 },
									fetchFailed: { ...e.hrvStatus.fetchFailed, [i]: !0 },
								},
							};
						},
						[n.pbH]: (e, t) => ({
							...e,
							dailyNaps: {
								...e.dailyNaps,
								isFetching: { ...e.dailyNaps.isFetching, [t.calendarDate]: !0 },
								fetchFailed: {
									...e.dailyNaps.fetchFailed,
									[t.calendarDate]: !1,
								},
								fetchSuccess: {
									...e.dailyNaps.fetchSuccess,
									[t.calendarDate]: !1,
								},
							},
						}),
						[n.Cp8]: (e, t) => ({
							...e,
							dailyNaps: {
								...e.dailyNaps,
								naps: { ...e.dailyNaps.naps, [t.calendarDate]: t.dailyNapData },
								isFetching: { ...e.dailyNaps.isFetching, [t.calendarDate]: !1 },
								fetchFailed: {
									...e.dailyNaps.fetchFailed,
									[t.calendarDate]: !1,
								},
								fetchSuccess: {
									...e.dailyNaps.fetchSuccess,
									[t.calendarDate]: !0,
								},
							},
							dailySleeps: {
								...e.dailySleeps,
								[t.calendarDate]: {
									...e.dailySleeps[t.calendarDate],
									dailySleepDTO: {
										...e.dailySleeps[t.calendarDate].dailySleepDTO,
										dailyNapDTOS: t.dailyNapData,
									},
								},
							},
						}),
						[n.Br5]: (e, t) => ({
							...e,
							dailyNaps: {
								...e.dailyNaps,
								naps: { ...e.dailyNaps.naps, [t.calendarDate]: {} },
								isFetching: { ...e.dailyNaps.isFetching, [t.calendarDate]: !1 },
								fetchFailed: {
									...e.dailyNaps.fetchFailed,
									[t.calendarDate]: !0,
								},
								fetchSuccess: {
									...e.dailyNaps.fetchSuccess,
									[t.calendarDate]: !1,
								},
							},
						}),
						[n.jm5]: (e, t) => ({
							...e,
							dailyNaps: {
								...e.dailyNaps,
								isAddingNap: !0,
								isAddingNapSuccess: !1,
							},
						}),
						[n.Yt7]: (e, t) => ({
							...e,
							dailyNaps: {
								...e.dailyNaps,
								isAddingNap: !1,
								isAddingNapSuccess: !0,
							},
						}),
						[n.LMM]: (e, t) => ({
							...e,
							dailySleeps: {
								...e.dailySleeps,
								[t.calendarDate]: {
									...e.dailySleeps[t.calendarDate],
									dailySleepDTO: {
										...e.dailySleeps[t.calendarDate].dailySleepDTO,
										dailyNapDTOS:
											e.dailySleeps[t.calendarDate].dailySleepDTO.dailyNapDTOS,
									},
								},
							},
						}),
						[n.Tto]: (e, t) => ({
							...e,
							dailySleeps: {
								...e.dailySleeps,
								[t.calendarDate]: {
									...e.dailySleeps[t.calendarDate],
									dailySleepDTO: {
										...t.payload,
										dailyNapDTOS: t.payload.dailyNapDTOS,
									},
								},
							},
						}),
						[n._dh]: (e, t) => ({
							...e,
							dailySleeps: {
								...e.dailySleeps,
								[t.calendarDate]: { ...e.dailySleeps[t.calendarDate] },
							},
						}),
					};
				function o(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				const l = (e, t, i) => {
						const n = e.dailySleepEpochs.dailySleeps[t];
						return n
							? {
									...n,
									skinTempData: n.skinTempData
										? n.skinTempData.map((e) => {
												let t = i ? e.deviationCelsius : e.deviationFahrenheit;
												return (
													(void 0 === t || isNaN(t)) && (t = null),
													i
														? (t > a.MP.MAX_C || t < a.MP.MIN_C) && (t = null)
														: (t > a.MP.MAX_F || t < a.MP.MIN_F) && (t = null),
													{ ...e, value: t }
												);
											})
										: null,
								}
							: null;
					},
					c = (e, t) =>
						!!e.dailySleepEpochs.isFetching && e.dailySleepEpochs.isFetching[t],
					d = (e, t) =>
						!!e.dailySleepEpochs.fetchFailed &&
						e.dailySleepEpochs.fetchFailed[t],
					u = (e) => e.dailySleepEpochs.sleepWindowUpdating,
					p = (e) => e.dailySleepEpochs.sleepWindowUpdateFailed,
					y = (e) => e.dailySleepEpochs.dailySleepAdding,
					h = (e) => e.dailySleepEpochs.dailySleepAddingFailed,
					g = (e) => e.dailySleepEpochs.openTab,
					m = (e) =>
						!!e.dailySleepEpochs.dailyNaps.isAddingNap &&
						e.dailySleepEpochs.dailyNaps.isAddingNap,
					A = (e) =>
						!!e.dailySleepEpochs.dailyNaps.isAddingNapSuccess &&
						e.dailySleepEpochs.dailyNaps.isAddingNapSuccess,
					_ = (e, t) =>
						e.dailySleepEpochs.dailySleeps[t].dailySleepDTO.dailyNapDTOS,
					E = (e, t, i) =>
						!!e.dailySleepEpochs.hrvStatus.isFetching &&
						e.dailySleepEpochs.hrvStatus.isFetching[t + i],
					T = (e, t, i) =>
						!!e.dailySleepEpochs.hrvStatus.fetchFailed &&
						e.dailySleepEpochs.hrvStatus.fetchFailed[t + i],
					C = (e, t, i) => e.dailySleepEpochs.hrvStatus.hrv[t + i];
			},
			780294: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, aS: () => l, q1: () => c });
				var n = i(316550),
					a = i(635438);
				const s = {
						sleepReportData: null,
						isSleepReportDataFetching: !1,
						didSleepReportDataFail: !1,
						skinTempReportData: null,
						isSkinTempReportDataFetching: !1,
						didSkinTempReportDataFail: !1,
					},
					r = {
						[n.qyj]: (e) => ({
							...e,
							isSleepReportDataFetching: !0,
							didSleepReportDataFail: !1,
						}),
						[n.HuX]: (e, t) => ({
							...e,
							sleepReportData: t.data,
							isSleepReportDataFetching: !1,
							didSleepReportDataFail: !1,
						}),
						[n.SaL]: (e, t) => ({
							...e,
							sleepReportData: null,
							isSleepReportDataFetching: !1,
							didSleepReportDataFail: !0,
						}),
					};
				function o(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				const l = (e, t) => {
						const { sleepReportData: i } = e.sleepReport;
						return i
							? i.overallStats
								? {
										...i,
										overallStats: {
											...i.overallStats,
											averageSkinTemp: t
												? i.overallStats.averageSkinTempC
												: i.overallStats.averageSkinTempF,
										},
										individualStats: i.individualStats.map((e) => {
											let i = t ? e.values.skinTempC : e.values.skinTempF;
											return (
												(void 0 === i || isNaN(i)) && (i = null),
												t
													? (i > a.MP.MAX_C || i < a.MP.MIN_C) && (i = null)
													: (i > a.MP.MAX_F || i < a.MP.MIN_F) && (i = null),
												{ ...e, values: { ...e.values, skinTemp: i } }
											);
										}),
									}
								: i
							: null;
					},
					c = (e) => e.sleepReport.isSleepReportDataFetching;
			},
			293038: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, Co: () => l, xs: () => o });
				var n = i(316550);
				const a = {
						limitErrorDialog: { open: !1, errorType: '', isGroup: !1 },
					},
					s = {
						[n.V7_]: (e, t) => ({
							...e,
							limitErrorDialog: {
								open: t.open,
								errorType: t.errorType,
								isGroup: t.isGroup,
							},
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				const o = (e) => {
						const t = ((e) => e.socialReducer)(e);
						return t.limitErrorDialog;
					},
					l = (e) => {
						const t = o(e);
						return !!t && t.open && 'comment' === t.errorType;
					};
			},
			982075: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					FQ: () => p,
					GY: () => u,
					Mt: () => o,
					ZN: () => y,
					bY: () => h,
					bb: () => l,
					pI: () => c,
					yw: () => d,
				});
				var n = i(470564);
				const a = {
						solarDailyDataDTOs: [],
						solarGainDailyDetailDTOList: [],
						solarCharge: [],
						solarIntensityFetching: !1,
					},
					s = {
						[n.u$]: (e, t) => ({
							...e,
							...t,
							[t.deviceId]: { ...e[t.deviceId] },
							solarIntensityFetching: !1,
							solarIntensityFetchingSuccess: !0,
						}),
						[n.xB]: (e, t) => ({
							...e,
							[t.deviceId]: {
								[t.calendarDate]: { ...t.solarTimeLine, ...t.activitySummary },
								[t.calendarRange]: t.solarCharge,
								[t.previousCalendarRange]: t.previousSolarCharge,
								...e[t.deviceId],
							},
							solarIntensityFetching: !1,
							solarIntensityFetchingSuccess: !0,
						}),
						[n.e0]: (e, t) => ({
							...e,
							[t.deviceId]: { [t.calendarDate]: { solarDailyDataDTOs: [] } },
							solarIntensityFetching: !1,
							solarIntensityFetchingSuccess: !1,
						}),
						[n.mg]: (e, t) => ({
							...e,
							[t.deviceId]: {
								[t.calendarDate]: { ...t.solarTimeLine, ...t.activitySummary },
								[t.calendarRange]: t.solarCharge,
								[t.previousCalendarRange]: t.previousSolarCharge,
								...e[t.deviceId],
							},
							solarIntensityFetching: !0,
							solarIntensityFetchingSuccess: !1,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i = e + '-' + e, a) {
					return {
						type: n.u$,
						calendarDate: e,
						calendarRange: i,
						previousCalendarRange: a,
						deviceId: t,
					};
				}
				function l(e, t) {
					return {
						type: n.$S,
						payload: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				const c = (e, t, i) =>
						e.solarIntensity[i]
							? e.solarIntensity[i][t] &&
								e.solarIntensity[i][t].solarDailyDataDTOs
							: e.solarIntensity,
					d = (e, t, i) =>
						e.solarIntensity[i]
							? e.solarIntensity[i][t] && e.solarIntensity[i][t]
							: e.solarIntensity,
					u = (e, t, i) =>
						e.solarIntensity[i]
							? e.solarIntensity[i][t] && e.solarIntensity[i][t]
							: e.solarIntensity,
					p = (e, t, i) =>
						e.solarIntensity[i]
							? e.solarIntensity[i][t] && e.solarIntensity[i][t].activitiesList
							: e.solarIntensity,
					y = (e) => e.solarIntensity.solarIntensityFetching,
					h = (e) => e.solarIntensity.solarIntensityFetchingSuccess;
			},
			593096: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => d,
					CA: () => o,
					F$: () => r,
					Ok: () => p,
					l$: () => u,
					o3: () => s,
				});
				var n = i(270715);
				const a = {
					fitnessStatsFetching: !1,
					fitnessStatsFetchSuccess: !1,
					fitnessStatsFetchError: !1,
					fitnessStatsFetchingPendingRequests: [],
					fitnessRecentStats: {
						metrics: {},
						fitnessRecentStatsFetching: {},
						fitnessRecentStatsFetchError: {},
						fitnessRecentStatsFetchSuccess: {},
					},
					userAveragePace: {
						userAvgPace: {},
						userAvgPaceFetching: !1,
						userAvgPaceFetchSuccess: !1,
						userAvgPaceFetchError: !1,
					},
				};
				function s(e, t, i, a, s, r, o, l, c = !1, d) {
					return {
						type: n.Pb,
						payload: {
							aggregation: e,
							groupBy: t,
							activityType: i,
							userFirstDay: a,
							timeframe: s,
							startDate: r,
							endDate: o,
							metrics: l,
							standardizedUnits: c,
							pendingRequestsKeys: d,
						},
					};
				}
				const r = ({ activityType: e, metric: t }) => ({
						type: n.jl,
						payload: { activityType: e, metric: t },
					}),
					o = (e) => ({ type: n.jw, payload: { activityType: e } }),
					l = (e, t) => {
						let i = e || 'all';
						return (
							'all' === i && 'ACTIVITY' === t
								? (i = 'groupByActivity')
								: 'all' === i && 'EVENT' === t && (i = 'groupByEvent'),
							i
						);
					},
					c = {
						[n.vb]: (e, t) => {
							let i = l(t.activityType, t.groupBy),
								n = e[t.aggregation] ? e[t.aggregation][i] : {};
							n || (n = {}), (n[t.timeframe] = t.stats);
							const a = [...e.fitnessStatsFetchingPendingRequests];
							if (t.pendingRequestsKeys) {
								const e = a.indexOf(t.pendingRequestsKeys);
								e > -1 && a.splice(e, 1);
							}
							return {
								...e,
								fitnessStatsFetching: a.length > 0,
								fitnessStatsFetchSuccess: 0 === a.length,
								fitnessStatsFetchError: !1,
								fitnessStatsFetchingPendingRequests: a,
								[t.aggregation]: { ...e[t.aggregation], [i]: n },
							};
						},
						[n.m1]: (e, t) => {
							const i = [...e.fitnessStatsFetchingPendingRequests];
							return (
								t.pendingRequestsKeys && i.push(t.pendingRequestsKeys),
								{
									...e,
									fitnessStatsFetchSuccess: !1,
									fitnessStatsFetchError: !1,
									fitnessStatsFetching: !0,
									fitnessStatsFetchingPendingRequests: i,
								}
							);
						},
						[n.YX]: (e, t) => ({
							...e,
							fitnessStatsFetchSuccess: !1,
							fitnessStatsFetchError: !0,
							fitnessStatsFetching: !1,
							fitnessStatsFetchingPendingRequests: [],
						}),
						[n.nJ]: (e, t) => ({
							...e,
							fitnessRecentStats: {
								...e.fitnessRecentStats,
								metrics: {
									...e.fitnessRecentStats.metrics,
									[t.metric]: t.stats,
								},
								fitnessRecentStatsFetching: {
									...e.fitnessRecentStats.fitnessRecentStatsFetching,
									[t.metric]: !1,
								},
								fitnessRecentStatsFetchError: {
									...e.fitnessRecentStats.fitnessRecentStatsFetchError,
									[t.metric]: !1,
								},
								fitnessRecentStatsFetchSuccess: {
									...e.fitnessRecentStats.fitnessRecentStatsFetchSuccess,
									[t.metric]: !0,
								},
							},
						}),
						[n.A_]: (e, t) => ({
							...e,
							fitnessRecentStats: {
								...e.fitnessRecentStats,
								metrics: { ...e.fitnessRecentStats.metrics, [t.metric]: [] },
								fitnessRecentStatsFetching: {
									...e.fitnessRecentStats.fitnessRecentStatsFetching,
									[t.metric]: !0,
								},
								fitnessRecentStatsFetchError: {
									...e.fitnessRecentStats.fitnessRecentStatsFetchError,
									[t.metric]: !1,
								},
								fitnessRecentStatsFetchSuccess: {
									...e.fitnessRecentStats.fitnessRecentStatsFetchSuccess,
									[t.metric]: !1,
								},
							},
						}),
						[n.Ql]: (e, t) => ({
							...e,
							fitnessRecentStats: {
								...e.fitnessRecentStats,
								metrics: { ...e.fitnessRecentStats.metrics, [t.metric]: [] },
								fitnessRecentStatsFetching: {
									...e.fitnessRecentStats.fitnessRecentStatsFetching,
									[t.metric]: !1,
								},
								fitnessRecentStatsFetchError: {
									...e.fitnessRecentStats.fitnessRecentStatsFetchError,
									[t.metric]: !0,
								},
								fitnessRecentStatsFetchSuccess: {
									...e.fitnessRecentStats.fitnessRecentStatsFetchSuccess,
									[t.metric]: !1,
								},
							},
						}),
						[n.DA]: (e, t) => ({
							...e,
							userAveragePace: {
								userAvgPace: {
									...e.userAveragePace.userAvgPace,
									[t.activityType]: t.userAveragePace,
								},
								userAvgPaceFetching: !1,
								userAvgPaceFetchSuccess: !0,
								userAvgPaceFetchError: !1,
							},
						}),
						[n.sL]: (e, t) => ({
							...e,
							userAveragePace: {
								...e.userAveragePace,
								userAvgPaceFetching: !0,
								userAvgPaceFetchSuccess: !1,
								userAvgPaceFetchError: !1,
							},
						}),
						[n._D]: (e, t) => ({
							...e,
							userAveragePace: {
								...e.userAveragePace,
								userAvgPaceFetching: !1,
								userAvgPaceFetchSuccess: !1,
								userAvgPaceFetchError: !0,
							},
						}),
					},
					d = (e = a, t = {}) => {
						const i = c[t.type];
						return i ? i(e, t) : e;
					},
					u = (e, t) => {
						var i;
						return null === (i = e.fitnessStats.fitnessRecentStats) ||
							void 0 === i
							? void 0
							: i.metrics[t];
					},
					p = (e) => e.fitnessStats.userAveragePace.userAvgPace;
			},
			558784: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					GT: () => o,
					QR: () => d,
					Zk: () => c,
					c4: () => h,
					dF: () => p,
					fY: () => g,
					iU: () => y,
					k_: () => u,
					yK: () => l,
				});
				var n = i(316550);
				const a = {
						stravaAccessInfo: {},
						stravaAccessInfoFetching: null,
						stravaAccessInfoFail: null,
						stravaConsumerData: {},
						stravaConsumerDataFetching: null,
						stravaConsumerDataFail: null,
						stravaDeviceStatus: {},
						stravaDeviceStatusFetching: null,
						stravaDeviceStatusFail: null,
						stravaAccessInfoUpdating: null,
						stravaAccessInfoUpdateSucceed: null,
						stravaAccessInfoUpdateFail: null,
					},
					s = {
						[n.fU2]: (e, t) => ({
							...e,
							stravaAccessInfoFetching: !0,
							stravaAccessInfoFail: !1,
						}),
						[n.Snr]: (e, t) => ({
							...e,
							stravaAccessInfo: t.stravaAccessInfo,
							stravaAccessInfoFetching: !1,
							stravaAccessInfoFail: !1,
						}),
						[n.dxq]: (e, t) => ({
							...e,
							stravaAccessInfo: t.stravaAccessInfo,
							stravaAccessInfoFetching: !1,
							stravaAccessInfoFail: !0,
						}),
						[n.YK7]: (e, t) => ({
							...e,
							stravaConsumerDataFetching: !0,
							stravaConsumerDataFail: !1,
						}),
						[n.zZW]: (e, t) => ({
							...e,
							stravaConsumerData: t.stravaConsumerData,
							stravaConsumerDataFetching: !1,
							stravaConsumerDataFail: !1,
						}),
						[n.C92]: (e, t) => ({
							...e,
							stravaConsumerData: t.stravaConsumerData,
							stravaConsumerDataFetching: !1,
							stravaConsumerDataFail: !0,
						}),
						[n.GVD]: (e, t) => ({
							...e,
							stravaDeviceStatusFetching: !0,
							stravaDeviceStatusFail: !1,
						}),
						[n.No2]: (e, t) => ({
							...e,
							stravaDeviceStatus: t.stravaDeviceStatus,
							stravaDeviceStatusFetching: !1,
							stravaDeviceStatusFail: !1,
						}),
						[n.IK7]: (e, t) => ({
							...e,
							stravaDeviceStatus: t.stravaDeviceStatus,
							stravaDeviceStatusFetching: !1,
							stravaDeviceStatusFail: !0,
						}),
						[n.uKb]: (e, t) => ({
							...e,
							stravaAccessInfoUpdating: !0,
							stravaAccessInfoUpdateSucceed: !1,
							stravaAccessInfoUpdateFail: !1,
						}),
						[n.tER]: (e, t) => ({
							...e,
							stravaAccessInfo: t.stravaAccessInfo,
							stravaAccessInfoUpdating: !1,
							stravaAccessInfoUpdateSucceed: !0,
							stravaAccessInfoUpdateFail: !1,
						}),
						[n.cks]: (e, t) => ({
							...e,
							stravaAccessInfo: t.stravaAccessInfo,
							stravaAccessInfoUpdating: !1,
							stravaAccessInfoUpdateSucceed: !1,
							stravaAccessInfoUpdateFail: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				const o = (e) => e.strava.stravaAccessInfo,
					l = (e) => e.strava.stravaAccessInfoFetching,
					c = (e) => e.strava.stravaAccessInfoFail,
					d = (e) => e.strava.stravaConsumerData,
					u = (e) => e.strava.stravaConsumerDataFetching,
					p = (e) => e.strava.stravaConsumerDataFail,
					y = (e) => e.strava.stravaDeviceStatus,
					h = (e) => e.strava.stravaDeviceStatusFetching,
					g = (e) => e.strava.stravaDeviceStatusFail;
			},
			831716: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, V4: () => r, gr: () => o, iy: () => l });
				var n = i(316550);
				const a = {
						isFetching: !1,
						hasFetched: !1,
						entity: { value: '' },
						systemStatus: null,
					},
					s = {
						[n.Euz]: (e, t) => ({
							...e,
							entity: { value: t.systemMessage.value },
							isFetching: !1,
							hasFetched: !0,
							lastUpdated: t.receivedAt,
						}),
						[n.$FJ]: (e) => ({ ...e, isFetching: !0 }),
						[n.VKR]: (e, t) => ({ ...e, systemStatus: t.systemStatus }),
					},
					r = (e) => e.systemMessage.entity,
					o = (e) => e.systemMessage.hasFetched,
					l = (e) => e.systemMessage.systemStatus;
				function c(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			414256: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, FX: () => s, Vd: () => o, cZ: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entities: {} },
					s = (e, t) => ({
						key: [t],
						value: e.systemPreference.entities[t] || null,
					}),
					r = (e, t) => e.systemPreference.entities[t] || null,
					o = (e) => e.systemPreference.isFetching,
					l = {
						[n.Sft]: (e, t) => ({
							...e,
							isFetching: !1,
							entities: { ...e.entities, [t.key]: t.preference.value },
							lastUpdated: t.receivedAt,
						}),
						[n.ISL]: (e) => ({ ...e, isFetching: !0 }),
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
			},
			315210: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, o1: () => n });
				const n = {
						SHOW_SNACKBAR_MESSAGE: 'SHOW_SNACKBAR_MESSAGE',
						HIDE_SNACKBAR_MESSAGE: 'HIDE_SNACKBAR_MESSAGE',
					},
					a = { snackbarMessage: { content: '', show: !1 } },
					s = (e, t, i) => ({
						...e,
						snackbarMessage: { ...e.snackbarMessage, content: t, show: i },
					}),
					r = {
						[n.SHOW_SNACKBAR_MESSAGE]: (e, t) =>
							e.snackbarMessage.show ? e : s(e, t.content, !0),
						[n.HIDE_SNACKBAR_MESSAGE]: (e, t) =>
							s(e, e.snackbarMessage.content, !1),
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			956661: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, Bv: () => c, Fg: () => l, yt: () => d });
				var n = i(316550);
				const a = { timezoneUnits: {}, fetching: !1, error: !1, success: !1 },
					s = (e) => (t, i) => ({
						...t,
						timezoneUnits: {
							...t.timezoneUnits,
							units: e
								? i.timezones.sort((e, t) => e.gmtOffset - t.gmtOffset)
								: null,
						},
						success: e,
						error: !e,
						fetching: !1,
					}),
					r = {
						[n.Lvd]: (e) => ({
							...e,
							timezoneUnits: { ...e.timezoneUnits, units: null },
							fetching: !0,
						}),
						[n.UX4]: s(!0),
						[n.RS8]: s(!1),
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				const l = (e) => e.timeZones.timezoneUnits.units,
					c = (e) => e.timeZones.fetching,
					d = (e) => e.timeZones.success;
			},
			743168: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ar: () => S,
					Ay: () => y,
					BH: () => E,
					CG: () => s,
					S5: () => A,
					bH: () => _,
					e0: () => C,
					g$: () => m,
					gv: () => h,
					k: () => g,
					ty: () => T,
				});
				var n = i(316550),
					a = i(230268);
				const s = { ALL: 'ALL', IMPORT: 'IMPORT', EXPORT: 'EXPORT' },
					r = {
						oauthTokens: [],
						oauthTokensFetching: !1,
						oauthTokensFetchSuccess: !1,
						oauthTokensFetchFail: !1,
						oauthTokensDeleting: !1,
						oauthTokensDeleteFail: !1,
						oauthTokensDeleteSuccess: !1,
						partnerPermissions: [],
						partnerPermissionsFetching: !1,
						partnerPermissionsFetchSuccess: !1,
						partnerPermissionsFetchFail: !1,
						capabilities: {},
						capabilitiesFetching: !1,
						capabilitiesFetchSuccess: !1,
						capabilitiesFetchFail: !1,
						partnerPermissionsUpdating: !1,
						partnerPermissionsUpdateSuccess: !1,
						partnerPermissionsUpdateFail: !1,
					},
					o = (e) => (t, i) => ({
						...t,
						oauthTokens: e ? i.oauthTokens : t.oauthTokens,
						oauthTokensFetching: !1,
						oauthTokensFetchSuccess: e,
						oauthTokensFetchFail: !e,
					}),
					l = (e) => (t, i) => ({
						...t,
						partnerPermissions: e ? i.partnerPermissions : t.partnerPermissions,
						partnerPermissionsFetching: !1,
						partnerPermissionsFetchSuccess: e,
						partnerPermissionsFetchFail: !e,
					}),
					c = (e) => (t, i) => ({
						...t,
						capabilities: {
							...t.capabilities,
							...(e && { [i.capabilities.consumerKey]: i.capabilities }),
						},
						capabilitiesFetching: !1,
						capabilitiesFetchSuccess: e,
						capabilitiesFetchFail: !e,
					}),
					d = (e) => (t, i) => {
						let n = t.partnerPermissions;
						if (e) {
							let e = n.findIndex(
								(e) => e.consumerKey === i.partnerPermissions.consumerKey
							);
							-1 === e && i.partnerPermissions.permissions.length > 0
								? n.unshift(i.partnerPermissions)
								: ((n[e] = i.partnerPermissions),
									i.partnerPermissions.permissions.length < 1 &&
										n.splice(e, 1));
						}
						return {
							...t,
							partnerPermissions: n,
							partnerPermissionsUpdating: !1,
							partnerPermissionsUpdateSuccess: e,
							partnerPermissionsUpdateFail: !e,
						};
					},
					u = (e, t) => {
						const i = e.oauthTokens.find(
							(e) => e.oAuthTokenId === t.oAuthTokenId
						);
						let n = e.partnerPermissions,
							a = n.findIndex((e) => e.consumerKey === i.consumerKey);
						-1 !== a && n.splice(a, 1);
						let s = e.capabilities;
						return (
							delete s[i.consumerKey],
							{
								...e,
								oauthTokens: e.oauthTokens.filter(
									(e) => e.oAuthTokenId !== t.oAuthTokenId
								),
								oauthTokensDeleting: !1,
								oauthTokensDeleteFail: !1,
								oauthTokensDeleteSuccess: !0,
								capabilities: s,
								partnerPermissions: n,
							}
						);
					},
					p = {
						[n._Kp]: (e) => ({
							...e,
							oauthTokensFetching: !0,
							oauthTokensFetchSuccess: !1,
							oauthTokensFetchFail: !1,
						}),
						[n.N1D]: o(!0),
						[n.whr]: o(!1),
						[n.Cod]: u,
						[n.OWM]: (e) => ({
							...e,
							oauthTokensDeleting: !0,
							oauthTokensDeleteFail: !1,
							oauthTokensDeleteSuccess: !1,
						}),
						[n.ny0]: u,
						[n.WeC]: (e) => ({
							...e,
							oauthTokensDeleting: !1,
							oauthTokensDeleteFail: !0,
						}),
						[n.LJg]: (e) => ({
							...e,
							partnerPermissionsFetching: !0,
							partnerPermissionsFetchSuccess: !1,
							partnerPermissionsFetchFail: !1,
						}),
						[n.EV4]: l(!0),
						[n.DtS]: l(!1),
						[n.XUu]: (e) => ({
							...e,
							capabilitiesFetching: !0,
							capabilitiesFetchSuccess: !1,
							capabilitiesFetchFail: !1,
						}),
						[n.Emh]: c(!0),
						[n.xNS]: c(!1),
						[n.rFN]: (e) => ({
							...e,
							partnerPermissionsUpdating: !0,
							partnerPermissionsUpdateSuccess: !1,
							partnerPermissionsUpdateFail: !1,
						}),
						[n.JqS]: d(!0),
						[n.MIJ]: d(!1),
					};
				function y(e = r, t = {}) {
					const i = p[t.type];
					return i ? i(e, t) : e;
				}
				const h = (e) => e.thirdPartyApps.oauthTokens,
					g = (e) => e.thirdPartyApps.oauthTokensFetching,
					m = (e) => e.thirdPartyApps.partnerPermissions,
					A = (e) => e.thirdPartyApps.partnerPermissionsFetching,
					_ = (e, t, i) => {
						const n = s[i],
							r = e.thirdPartyApps.capabilities[t] || {};
						if (!r.capabilities) return [];
						const o = r.capabilities.filter(
							(e) =>
								!r.userInapplicableCapabilities ||
								(r.userInapplicableCapabilities &&
									-1 ===
										r.userInapplicableCapabilities.indexOf(
											e.consumerCapability
										))
						);
						if (n === s.IMPORT) {
							return o.filter((e) => (0, a.L)(e.consumerCapability));
						}
						if (n === s.EXPORT) {
							return o.filter((e) => !(0, a.L)(e.consumerCapability));
						}
						return o;
					},
					E = (e) => e.thirdPartyApps.capabilitiesFetching,
					T = (e, t) =>
						e.thirdPartyApps.partnerPermissions.find(
							(e) => e.consumerKey === t
						),
					C = (e, t, i) => {
						if (!t || !i)
							throw new Error('consumerKey and capability required.');
						const n = e.thirdPartyApps.partnerPermissions.find(
							(e) => e.consumerKey === t
						);
						return !(!n || !n.permissions.includes(i));
					},
					S = (e, t) =>
						e.thirdPartyApps.capabilities[t].userInapplicableCapabilities;
			},
			404472: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, Wf: () => o, oM: () => l });
				var n = i(316550);
				const a = { payload: {}, stepsLifetimeTotalsList: {} },
					s = {
						[n.bS4]: (e, t) => ({
							payload: t.stepsLifetimeTotals,
							stepsLifetimeTotalsList: {
								...e.stepsLifetimeTotalsList,
								[t.displayName]: { ...t.stepsLifetimeTotals },
							},
						}),
						[n.ioR]: (e, t) => ({
							payload: t.stepsLifetimeTotals,
							stepsLifetimeTotalsList: e.stepsLifetimeTotalsList,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t) {
					return {
						type: n.Jxe,
						displayName: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				const l = (e, t) =>
					e.stepsLifetimeTotals && e.stepsLifetimeTotals.stepsLifetimeTotalsList
						? e.stepsLifetimeTotals.stepsLifetimeTotalsList[t]
						: {};
			},
			7823: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => o,
					BN: () => m,
					D9: () => T,
					Mn: () => h,
					O$: () => y,
					Sp: () => A,
					UW: () => E,
					Ub: () => l,
					V_: () => S,
					X5: () => C,
					Yx: () => c,
					ZD: () => p,
					j8: () => _,
					pn: () => u,
					qB: () => I,
					uh: () => g,
					vx: () => d,
				});
				var n = i(316550),
					a = i(378016);
				const s = {
						nearbyTrails: [],
						savedTrails: [],
						trailsListNearbySortType: null,
						trailsListSavedSortType: null,
						trailsListFilters: null,
						favoritesNotificationData: { show: !1 },
						trailsListNearbyFilters: null,
						trailsListSavedFilters: null,
						suggestEditModalOpened: !1,
						reportIssueModalOpened: !1,
						submitReviewModalOpened: !1,
						starRatingValue: null,
						trailReviewsSortType: null,
						selectedTrailReview: null,
						submitReviewPhotos: [],
						centerLocation: null,
						searchedLocation: null,
						shareReviewModalStatus: { show: !1, tripReportId: null },
						searchAdditionalData: {},
						lastFetchedNearbyTrails: [],
					},
					r = {
						[n.zMT]: (e, t) => ({
							...e,
							trailsListNearbySortType: t.trailsListNearbySortType,
						}),
						[n.vBN]: (e, t) => ({
							...e,
							trailsListSavedSortType: t.trailsListSavedSortType,
						}),
						[n.Vit]: (e, t) => ({
							...e,
							trailsListNearbyFilters: t.trailsListNearbyFilters,
						}),
						[n.FvW]: (e, t) => ({
							...e,
							trailsListSavedFilters: t.trailsListSavedFilters,
						}),
						[n.wvs]: (e, t) =>
							t.nearbyTrails
								? {
										...e,
										nearbyTrails: t.nearbyTrails,
										lastFetchedNearbyTrails: t.nearbyTrails,
									}
								: { ...e, nearbyTrails: t.nearbyTrails },
						[n.WlW]: (e, t) => ({ ...e, savedTrails: t.savedTrails }),
						[n.Bt5]: (e, t) => ({
							...e,
							savedTrails: [...e.savedTrails, t.trail],
						}),
						[n.bNu]: (e, t) => ({
							...e,
							savedTrails: e.savedTrails.filter(
								(e) => e.curatedCourseId !== t.curatedCourseId
							),
						}),
						[n.Vd1]: (e, t) => ({ ...e, savedTrails: t.trails }),
						[n.Qk]: (e, t) => ({
							...e,
							favoritesNotificationData: { ...t.data },
						}),
						[n.ANw]: (e, t) => ({
							...e,
							suggestEditModalOpened: t.suggestEditModalOpened,
						}),
						[n.LW7]: (e, t) => ({
							...e,
							reportIssueModalOpened: t.reportIssueModalOpened,
						}),
						[n.cAO]: (e, t) => ({
							...e,
							submitReviewModalOpened: t.submitReviewModalOpened,
						}),
						[n.oMt]: (e, t) => ({ ...e, starRatingValue: t.starRatingValue }),
						[n.vBh]: (e, t) => ({
							...e,
							trailReviewsSortType: t.trailReviewsSortType,
						}),
						[n.$8n]: (e, t) => ({
							...e,
							selectedTrailReview: t.selectedTrailReview,
						}),
						[n.d7Y]: (e, t) => ({
							...e,
							submitReviewPhotos: t.submitReviewPhotos,
						}),
						[n.V0m]: (e, t) => ({ ...e, centerLocation: t.centerLocation }),
						[n.nrT]: (e, t) => ({ ...e, searchedLocation: t.searchedLocation }),
						[n.P3c]: (e, t) => ({
							...e,
							shareReviewModalStatus: t.shareReviewModalStatus,
						}),
						[n.D1C]: (e, t) => ({
							...e,
							searchAdditionalData: t.additionalData,
						}),
					};
				function o(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				const l = (e) => e.trails.trailsListNearbyFilters,
					c = (e) => e.trails.trailsListSavedFilters,
					d = (e) => {
						var t;
						return null !== (t = e.trails.nearbyTrails) &&
							void 0 !== t &&
							t.length
							? e.trails.nearbyTrails
							: e.trails.lastFetchedNearbyTrails;
					},
					u = (e) => e.trails.savedTrails,
					p = (e) => e.trails.favoritesNotificationData,
					y = (e) => {
						let t =
							e.trails.nearbyTrails && e.trails.nearbyTrails.length
								? [...e.trails.nearbyTrails]
								: [...e.trails.lastFetchedNearbyTrails];
						return (
							e.trails.trailsListNearbySortType &&
								t &&
								t.length &&
								(t = (0, a.c3)(t, e.trails.trailsListNearbySortType)),
							e.trails.trailsListNearbyFilters &&
								t &&
								t.length &&
								(t = (0, a.aN)(t, e.trails.trailsListNearbyFilters)),
							t
						);
					},
					h = (e) => {
						let t =
							e.trails.savedTrails && e.trails.savedTrails.length
								? [...e.trails.savedTrails]
								: [];
						return (
							e.trails.trailsListSavedSortType &&
								t &&
								t.length &&
								(t = (0, a.c3)(t, e.trails.trailsListSavedSortType)),
							e.trails.trailsListSavedFilters &&
								t &&
								t.length &&
								(t = (0, a.aN)(t, e.trails.trailsListSavedFilters)),
							t
						);
					},
					g = (e) => e.trails.suggestEditModalOpened,
					m = (e) => e.trails.reportIssueModalOpened,
					A = (e) => e.trails.submitReviewModalOpened,
					_ = (e) => e.trails.starRatingValue,
					E = (e) => e.trails.selectedTrailReview,
					T = (e) => e.trails.centerLocation,
					C = (e) => e.trails.searchedLocation,
					S = (e) => e.trails.shareReviewModalStatus,
					I = (e) => e.trails.searchAdditionalData;
			},
			167042: (e, t, i) => {
				'use strict';
				i.d(t, {
					A8: () => O,
					Ab: () => U,
					Ag: () => M,
					Ay: () => P,
					CB: () => L,
					Hj: () => R,
					Nc: () => v,
					OG: () => T,
					Pf: () => m,
					S0: () => D,
					S8: () => N,
					TP: () => C,
					VM: () => E,
					Vi: () => I,
					Wk: () => A,
					Ws: () => S,
					Y0: () => G,
					eC: () => f,
					fk: () => w,
					kU: () => b,
					rf: () => x,
					y2: () => F,
					zI: () => _,
					zo: () => k,
				});
				var n = i(316550);
				const a = {
						isEntityFetching: !0,
						isPlanTypesFetchError: !1,
						isActivePlanFetchError: !1,
						isCompletedPlanFetchError: !1,
						entity: null,
						atpPlanTypes: [],
						completedPlans: [],
						activePlans: [],
						status: null,
						content: {},
						inProcessPlanSetup: {
							planTypeId: null,
							selectedGoal: null,
							prePlanWeeklyMileage: null,
							prePlanTrainingPace: null,
							selectedPaceGoalTime: null,
							longRunDay: null,
							selectedRace: null,
							selectedWorkoutDays: [],
							selectedWorkoutPlanId: null,
							selectedWorkoutsPerWeek: null,
							overview: {
								maxWeeksPerPlan: null,
								maxWorkoutsPerWeek: null,
								minWeeksPerPlan: null,
								minWorkoutsPerWeek: null,
								coachId: null,
							},
						},
						coachAction: { data: {}, success: !1, error: !1 },
						preplanDistance: {},
						preplanPace: {},
						preplanGoals: {},
						preplanPaceTimes: {},
						preplanCoaches: [],
						preplanCoachInfo: {},
						coachInfoWithVideo: {},
					},
					s = (e) => (t, i) => ({
						...t,
						content: {
							[i.workoutPlanTypeId]: {
								success: e,
								error: !e,
								data: e ? { ...i.data } : null,
							},
						},
					}),
					r = (e) => (t, i) => ({
						...t,
						coachAction: { success: e, error: !e, data: i.data },
					}),
					o = (e) => (t, i) => ({ ...t, preplanDistance: e ? i.data : {} }),
					l = (e) => (t, i) => ({ ...t, preplanPace: e ? i.data : {} }),
					c = (e) => (t, i) => ({ ...t, preplanGoals: e ? i.data : {} }),
					d = (e) => (t, i) => ({ ...t, preplanPaceTimes: e ? i.data : {} }),
					u = (e) => (t, i) => ({ ...t, preplanCoaches: e ? i.data : [] }),
					p = (e) => (t, i) => {
						let n = i.data.contentfulContentId;
						return {
							...t,
							preplanCoachInfo: {
								...t.preplanCoachInfo,
								[n]: e ? i.data.atpCoachInfo : null,
							},
						};
					},
					y = (e) => (t, i) => {
						let n = i.data.contentfulContentId;
						return {
							...t,
							coachInfoWithVideo: {
								...t.coachInfoWithVideo,
								[n]: e
									? { coachInfo: i.data.coachInfo, videoData: i.data.videoData }
									: null,
							},
						};
					};
				function h(e, t) {
					return Object.assign({}, e, t);
				}
				const g = {
						[n.C2V]: (e, t) => ({
							...e,
							isEntityFetching: !1,
							entity: t.atpPlan,
							status: null,
						}),
						[n.n5B]: (e, t) => ({
							...e,
							entity: a.entity,
							isEntityFetching: !1,
							status: t.error.response.status,
						}),
						[n.gJ3]: (e, t) => ({
							...e,
							isEntityFetching: !1,
							isPlanTypesFetchError: !1,
							atpPlanTypes: [...t.atpPlanTypes],
						}),
						[n.TLl]: (e, t) => ({
							...e,
							isEntityFetching: !1,
							isActivePlanFetchError: !1,
							activePlans: [...t.activePlans],
						}),
						[n.U9W]: (e, t) => ({
							...e,
							isEntityFetching: !1,
							isCompletedPlanFetchError: !1,
							completedPlans: [...t.completedPlans],
						}),
						[n.O_6]: (e, t) => ({ ...e, coachPlan: t.coachPlan }),
						[n.MQ4]: (e = {}, t = {}) => {
							if (t.type === n.MQ4)
								switch (t.planStatus) {
									case 'pause':
										return (function (e, t) {
											var i = h(e.entity, {
												pause: { date: t.response.date, state: !0 },
											});
											return { ...e, entity: i };
										})(e, t);
									case 'unpause':
										return (function (e, t) {
											var i = h(e.entity, { pause: null });
											return { ...e, entity: i };
										})(e);
									case 'quit':
										return (function (e, t) {
											var i = h(e.entity, {
												quit: { date: t.response.date, state: !0 },
											});
											return { ...e, entity: i };
										})(e, t);
									case 'complete':
										return (function (e, t) {
											var i = h(e.entity, { planCompleted: !0 });
											return { ...e, entity: i };
										})(e);
									case 'react':
										return (function (e, t) {
											return e;
										})(e);
									default:
										return e;
								}
							return e;
						},
						[n.hk$]: s(!0),
						[n.UJj]: s(!1),
						[n.MN5]: (e) => ({
							...e,
							inProcessPlanSetup: a.inProcessPlanSetup,
						}),
						[n.Qdh]: (e, t) => {
							let i = {
								...e.inProcessPlanSetup,
								...t.data,
								overview: {
									...e.inProcessPlanSetup.overview,
									...t.data.overview,
								},
							};
							return { ...e, inProcessPlanSetup: i };
						},
						[n.eCA]: r(!0),
						[n.nl0]: r(!1),
						[n._Yt]: o(!0),
						[n.Dbj]: o(!1),
						[n.Sc5]: l(!0),
						[n.PRO]: l(!1),
						[n.v3k]: c(!0),
						[n.O_r]: c(!1),
						[n.vTv]: d(!0),
						[n.aqZ]: d(!1),
						[n.zo]: u(!0),
						[n.Cpz]: u(!1),
						[n.u6Q]: p(!0),
						[n.TX6]: p(!1),
						[n.O$d]: y(!0),
						[n.RLf]: y(!1),
						[n.Qo]: (e) => ({ ...e, entity: null }),
					},
					m = (e) => e.atpPlan.entity,
					A = (e) => e.atpPlan.completedPlans || [],
					_ = (e) => e.atpPlan.activePlans || [],
					E = (e) => e.atpPlan.atpPlanTypes || [],
					T = (e) => e.atpPlan.isEntityFetching,
					C = (e) => e.atpPlan.status,
					S = (e) => e.atpPlan.coachPlan,
					I = (e, t) => (e.atpPlan.content[t] ? e.atpPlan.content[t] : {}),
					v = (e) => e.atpPlan.inProcessPlanSetup,
					f = (e) => e.atpPlan.coachAction,
					D = (e) => e.atpPlan.preplanDistance,
					N = (e) => e.atpPlan.preplanPace,
					R = (e) => e.atpPlan.preplanGoals,
					b = (e) => e.atpPlan.preplanPaceTimes,
					L = (e, t) => e.atpPlan.coachInfoWithVideo[t];
				function P(e = a, t = {}) {
					const i = g[t.type];
					return i ? i(e, t) : e;
				}
				function O({ lang: e }, t = !0) {
					return {
						type: n.qGQ,
						payload: e,
						meta: { cacheTime: t ? null : 6e4 },
					};
				}
				function w() {
					return { type: n.Vag };
				}
				function F() {
					return { type: n.C4w };
				}
				function k(e) {
					return {
						type: n.Ge4,
						payload: {
							athletePlanId: e.athletePlanId,
							lang: e.lang,
							callback: e.callback,
						},
					};
				}
				function U(e, t) {
					return { type: n.o1N, payload: { workoutPlanId: e, lang: t } };
				}
				function M() {
					return { type: n.MN5 };
				}
				function G(e) {
					return { type: n.Qdh, data: e };
				}
				function x() {
					return { type: n.Qo };
				}
			},
			828052: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => s, p: () => r });
				var n = i(316550);
				const a = {
					[n.jA$]: (e, t) => ({
						...e,
						...t.activityFeedback,
						receivedAt: Date.now(),
					}),
				};
				function s(e = {}, t = {}) {
					const i = a[t.type];
					return i ? i(e, t) : e;
				}
				function r(e, t) {
					return { type: n.h3e, payload: { activityId: t, feedBack: e } };
				}
			},
			837774: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, iG: () => s, xb: () => l });
				var n = i(316550);
				const a = { isFetching: !1, entities: {} },
					s = (e, t) => e.adaptiveTrainingPlanArticle.entities[t],
					r = {
						[n.am]: (e, t) => ({
							isFetching: !1,
							entities: {
								...e.entities,
								[t.action.contentID]: {
									error: !1,
									adaptiveTrainingPlanArticle: t.adaptiveTrainingPlanArticle,
								},
							},
						}),
						[n.a28]: (e, t) => ({
							isFetching: !1,
							entities: {
								...e.entities,
								[t.action.contentID]: {
									error: !0,
									adaptiveTrainingPlanArticle: null,
								},
							},
						}),
						[n.kwR]: (e, t) => ({
							isFetching: !0,
							entities: { ...e.entities },
						}),
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t) {
					return { type: n.s9A, payload: { contentID: e, locale: t } };
				}
			},
			417336: (e, t, i) => {
				'use strict';
				i.d(t, {
					$9: () => y,
					Ay: () => u,
					GE: () => p,
					cb: () => o,
					k1: () => l,
					oQ: () => c,
					vm: () => d,
				});
				var n = i(316550);
				const a = 'RESET',
					s = { fetching: !1, error: !1, hasFetched: !1, entity: {} },
					r = {
						[n.rn3]: (e, t) => ({
							fetching: !0,
							error: !1,
							hasFetched: !1,
							entity: {},
						}),
						[n.PWo]: (e, t) => ({
							fetching: !1,
							error: !1,
							hasFetched: !0,
							entity: { ...t.atpCalendar },
						}),
						[n.Uol]: (e, t) => ({ fetching: !1, error: !0, entity: {} }),
						[a]: (e) => s,
					},
					o = (e) => e.atpCalendar.entity,
					l = (e) => e.atpCalendar.error,
					c = (e) => e.atpCalendar.hasFetched,
					d = (e) => e.atpCalendar.fetching;
				function u(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function p(e, t, i, a) {
					return {
						type: n.nO7,
						payload: { athletePlanId: e, startDate: t, endDate: i, lang: a },
					};
				}
				function y() {
					return { type: a };
				}
			},
			841094: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, JF: () => a, re: () => o });
				var n = i(316550);
				const a = (e) => e.atpCoachInfo.coachInfo,
					s = {
						[n.jyr]: (e, t) => ({ ...e, coachInfo: t.atpCoachInfo }),
						[n.Z6Z]: (e, t) => ({ ...e, error: t.error }),
					};
				function r(e = {}, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t) {
					return { type: n.N5l, payload: { contentID: e, locale: t } };
				}
			},
			749058: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => c,
					HB: () => r,
					OE: () => d,
					fw: () => o,
					rD: () => s,
				});
				var n = i(316550);
				const a = { isFetching: !1, isError: !1, entities: [] },
					s = (e) => e.atpFeed.isFetching,
					r = (e) => e.atpFeed.isError,
					o = (e) => [...e.atpFeed.entities],
					l = {
						[n.h_v]: (e, t) => ({
							isFetching: !1,
							isError: !1,
							entities: [...t.atpFeed],
						}),
						[n.SY$]: (e, t) => ({ isFetching: !1, isError: !0, entities: [] }),
						[n.BfN]: (e, t) => ({ isFetching: !0, isError: !1, entities: [] }),
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
				function d(e, t) {
					return { type: n.pGz, payload: { athletePlanId: e, lang: t } };
				}
			},
			981384: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => d,
					IK: () => l,
					Nz: () => o,
					RZ: () => c,
					_N: () => r,
					ih: () => u,
					nC: () => p,
				});
				var n = i(316550);
				const a = { fetching: !1, hasFetched: !1, error: !1, entity: {} },
					s = {
						[n.Dfe]: () => a,
						[n.gP]: (e, t) => ({
							fetching: !1,
							error: !1,
							hasFetched: !0,
							entity: { ...t.atpNextWorkout, ...t.atpWorkout },
						}),
						[n.f3V]: (e, t) => ({
							fetching: !1,
							error: !0,
							hasFetched: !1,
							entity: { ...t.atpNextWorkout, ...t.atpWorkout },
						}),
						[n.kMJ]: (e, t) => ({ ...e, fetching: !0, hasFetched: !1 }),
					},
					r = (e) => e.atpNextWorkout.entity,
					o = (e) => e.atpNextWorkout.error,
					l = (e) => e.atpNextWorkout.hasFetched,
					c = (e) => e.atpNextWorkout.fetching;
				function d(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function u(e) {
					return { type: n.yoI, payload: { athletePlanId: e } };
				}
				function p() {
					return { type: n.Dfe };
				}
			},
			323947: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, qs: () => l, y$: () => s });
				var n = i(316550);
				const a = { isFetching: !1, entities: {} },
					s = (e, t) => e.atpFeedPartialContent.entities[t],
					r = {
						[n.q$b]: (e, t) => ({
							isFetching: !1,
							entities: {
								...e.entities,
								[t.action.contentID]: {
									error: !1,
									atpFeedPartialContent: t.atpFeedPartialContent,
								},
							},
						}),
						[n.CT3]: (e, t) => ({
							isFetching: !1,
							entities: {
								...e.entities,
								[t.action.contentID]: {
									error: !0,
									atpFeedPartialContent: null,
								},
							},
						}),
						[n.HFH]: (e, t) => ({
							isFetching: !0,
							entities: { ...e.entities },
						}),
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t) {
					return { type: n.qNB, payload: { contentID: e, locale: t } };
				}
			},
			349236: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, X5: () => l, Z4: () => s });
				var n = i(316550);
				const a = { isFetching: !1, entities: {} },
					s = (e, t) => e.atpContentFulVideoItem.entities[t],
					r = {
						[n.eEA]: (e, t) => ({
							isFetching: !1,
							entities: {
								...e.entities,
								[t.action.contentID]: {
									error: !1,
									atpContentFulVideoItem: t.atpContentFulVideoItem,
								},
							},
						}),
						[n.mSg]: (e, t) => ({
							isFetching: !1,
							entities: {
								...e.entities,
								[t.action.contentID]: {
									error: !0,
									atpContentFulVideoItem: null,
								},
							},
						}),
						[n.ccf]: (e, t) => ({
							isFetching: !0,
							entities: { ...e.entities },
						}),
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t) {
					return { type: n.eQq, payload: { contentID: e, locale: t } };
				}
			},
			477065: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => D,
					DM: () => I,
					Fq: () => S,
					He: () => _,
					OP: () => m,
					f6: () => T,
					hf: () => y,
					iS: () => A,
					o: () => E,
					qg: () => f,
					rO: () => h,
					sQ: () => v,
					vs: () => C,
					zC: () => g,
				});
				var n = i(316550),
					a = i(109285),
					s = i.n(a),
					r = i(422460),
					o = i(53335);
				let l = new (s())().add(22, 'weeks').toDate();
				const c = {
						phasedTrainingPlanSetup: {
							plans: null,
							trainingPlanLevelData: null,
							setupData: {
								hasPowerMeter: !1,
								hasHRMonitor: !1,
								hasIndoorTrainer: !1,
								daysAvailable: [...o.XX],
								longRideDay: null,
								eventType: 'Cycling',
								eventSubType: null,
								trainingPlanLevel: null,
								localKey: null,
								startDate: r.Ay.formatISODate(new Date()),
								eventDate: r.Ay.formatISODate(l),
								trainingPlanName: null,
								currentTrainingLevel: null,
							},
						},
						userCurrentTrainingData: null,
						phasedTrainingPlanById: null,
						phasedTrainingPlanByIdSuccess: null,
						skipRaceDayStep: null,
						isFetchingATrainingPlan: !1,
						creatingPhasedTrainingPlanInProgress: null,
						createdAPhasedTrainingPlan: !1,
						createdPlanError: null,
						workoutScheduleByPeriod: null,
						deletedTrainingPlan: !1,
						isDeletingTrainingPlan: !1,
					},
					d = (e) => (t, i) => ({
						...t,
						deletedTrainingPlan: e,
						isDeletingTrainingPlan: !1,
					}),
					u = {
						[n.i6j]: (e) => ({ ...e, isFetchingATrainingPlan: !0 }),
						[n.ojr]: (e, t) => ({
							...e,
							isFetchingATrainingPlan: !1,
							phasedTrainingPlanSetup: {
								...c.phasedTrainingPlanSetup,
								plans: t.trainingPlan,
							},
						}),
						[n.tgI]: (e, t) => ({
							...e,
							isFetchingATrainingPlan: !1,
							phasedTrainingPlanSetup: { ...c.phasedTrainingPlanSetup },
						}),
						[n.dcY]: (e, t) => ({
							...e,
							userCurrentTrainingData: t.userTrainingData,
						}),
						[n.XOU]: (e, t) => {
							let i = {};
							return (
								(i[t.field] = t.value),
								{
									...e,
									phasedTrainingPlanSetup: {
										...e.phasedTrainingPlanSetup,
										setupData: { ...e.phasedTrainingPlanSetup.setupData, ...i },
									},
								}
							);
						},
						[n.sen]: (e, t) => {
							let i = {};
							return (
								t.trainingPlanLevelData &&
									'object' === typeof t.trainingPlanLevelData &&
									(i = { ...t.trainingPlanLevelData }),
								{
									...e,
									phasedTrainingPlanSetup: {
										...e.phasedTrainingPlanSetup,
										trainingPlanLevelData: i,
									},
								}
							);
						},
						[n.cQB]: (e) => ({
							...c,
							phasedTrainingPlanSetup: {
								...c.phasedTrainingPlanSetup,
								plans: [...e.phasedTrainingPlanSetup.plans],
							},
						}),
						[n.Ier]: (e, t) => ({
							...e,
							createdAPhasedTrainingPlan: !0,
							creatingPhasedTrainingPlanInProgress: !1,
						}),
						[n.Vut]: (e, t) => ({
							...e,
							creatingPhasedTrainingPlanInProgress: !0,
						}),
						[n.FM3]: (e, t) => ({
							...e,
							creatingPhasedTrainingPlanInProgress: !1,
							createdPlanError: { ...t.error },
						}),
						[n.Gxb]: (e) => ({ ...e, skipRaceDayStep: !0 }),
						[n.k8E]: (e) => ({ ...e, skipRaceDayStep: c.skipRaceDayStep }),
						[n.iZ2]: (e, t) => ({ ...e, phasedTrainingPlanByIdSuccess: null }),
						[n.AGY]:
							((p = !0),
							(e, t) => ({
								...e,
								phasedTrainingPlanByIdSuccess: p,
								phasedTrainingPlanById: { ...t.trainingPlan },
							})),
						[n.fCB]: (e, t) => ({
							...e,
							workoutScheduleByPeriod: t.workoutScheduleByPeriod,
						}),
						[n.E_A]: (e, t) => ({
							...e,
							deletedTrainingPlan: !1,
							isDeletingTrainingPlan: !0,
						}),
						[n.PTi]: d(!0),
						[n.I6l]: d(!1),
						[n.oRM]: (e) => ({
							...e,
							phasedTrainingPlanById: c.phasedTrainingPlanById,
						}),
					};
				var p;
				const y = (e) => e.phasedTrainingPlan.phasedTrainingPlanSetup.plans,
					h = (e) => e.phasedTrainingPlan.userCurrentTrainingData,
					g = (e) => e.phasedTrainingPlan.isFetchingATrainingPlan,
					m = (e) => e.phasedTrainingPlan.phasedTrainingPlanSetup.setupData,
					A = (e) => e.phasedTrainingPlan.createdAPhasedTrainingPlan,
					_ = (e) => e.phasedTrainingPlan.createdPlanError,
					E = (e) => e.phasedTrainingPlan.creatingPhasedTrainingPlanInProgress,
					T = (e) => e.phasedTrainingPlan.skipRaceDayStep,
					C = (e) => e.phasedTrainingPlan.phasedTrainingPlanById,
					S = (e) => e.phasedTrainingPlan.deletedTrainingPlan,
					I = (e) => e.phasedTrainingPlan.isDeletingTrainingPlan,
					v = (e) => e.phasedTrainingPlan.phasedTrainingPlanByIdSuccess,
					f = (e) =>
						e.phasedTrainingPlan.phasedTrainingPlanSetup.trainingPlanLevelData;
				function D(e = c, t = {}) {
					const i = u[t.type];
					return i ? i(e, t) : e;
				}
			},
			79886: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, jl: () => r, mw: () => l });
				var n = i(316550);
				const a = { isFetching: !1, entities: [] },
					s = {
						[n.Yyk]: (e, t) => ({ ...e, isFetching: !0 }),
						[n.Uoj]: (e, t) => ({
							...e,
							entities: [...t.atpRescheduleDays],
							isFetching: !1,
						}),
					},
					r = (e) => e.atpRescheduleDays;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function l(e, t, i, a = 'en') {
					return {
						type: n.Yyk,
						payload: { athletePlanId: e, startDate: t, endDate: i, lang: a },
					};
				}
			},
			315704: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, iR: () => r, o: () => o });
				var n = i(316550);
				const a = { isFetching: !1, entity: { date: null, tps: [] } },
					s = {
						[n.JVA]: (e) => ({ ...e, entity: a.entity, isFetching: !0 }),
						[n.Nr3]: (e, t) => ({
							...e,
							isFetching: !1,
							entity: { date: t.date, tps: t.tps },
							lastUpdated: t.receivedAt,
						}),
					},
					r = (e) => e.trainingPlansForDate.entity,
					o = (e) => e.trainingPlansForDate.isFetching;
				function l(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			536020: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => d, hZ: () => o, lI: () => r, nI: () => l });
				var n = i(316550);
				const a = {
						trainingReadinessData: null,
						fetching: !1,
						widgetsData: {},
						key: null,
						success: !1,
						error: !1,
						fetching: !1,
					},
					s = (e) => (t, i) => (
						'key' in i && (t.widgetsData[i.key] = i.data),
						{
							...t,
							trainingReadinessData: e ? i.data : null,
							key: e ? i.key : null,
							fetching: !1,
							success: e,
							error: !e,
						}
					),
					r = (e) => e.trainingReadiness.fetching,
					o = (e) => e.trainingReadiness.trainingReadinessData,
					l = (e, t) =>
						t in e.trainingReadiness.widgetsData
							? e.trainingReadiness.widgetsData[t]
							: [],
					c = {
						[n.BuB]: s(!0),
						[n.wYd]: (e) => ({
							...e,
							trainingReadinessData: null,
							key: null,
							fetching: !0,
						}),
						[n.CPF]: s(!1),
					};
				function d(e = a, t = {}) {
					const i = c[t.type];
					return i ? i(e, t) : e;
				}
			},
			187595: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					CM: () => c,
					Kj: () => o,
					Tx: () => d,
					sM: () => l,
				});
				var n = i(316550);
				const a = {
						payload: {},
						trainingStatusAggregatedData: {},
						trainingStatusMostRecentData: {},
						isFetching: !1,
						fetchFailed: !1,
					},
					s = {
						[n.n3F]: (e) => ({ ...e, isFetching: !0, fetchFailed: !1 }),
						[n.y4]: (e, t) => ({
							payload: t.trainingStatusDaily,
							trainingStatusAggregatedData: {
								...e.trainingStatusAggregatedData,
								[t.userProfileId]: {
									...e.trainingStatusAggregatedData[t.userProfileId],
									[t.calendarDate]: t.trainingStatusDaily,
								},
							},
							isFetching: !1,
							fetchFailed: !1,
						}),
						[n.bn2]: (e, t) => ({
							payload: t.trainingStatusDaily,
							trainingStatusAggregatedData: {
								...e.trainingStatusAggregatedData,
								[t.userProfileId]: {
									...e.trainingStatusAggregatedData[t.userProfileId],
									[t.calendarDate]: {},
								},
							},
							isFetching: !1,
							fetchFailed: !0,
						}),
						[n.Nrv]: (e) => ({ ...e, isFetching: !0, fetchFailed: !1 }),
						[n.Ycf]: (e, t) => ({
							payload: t.trainingStatusDaily,
							trainingStatusMostRecentData: {
								...e.trainingStatusMostRecentData,
								[t.userProfileId]: {
									...e.trainingStatusMostRecentData[t.userProfileId],
									[t.calendarDate]: t.trainingStatusDaily,
								},
							},
							isFetching: !1,
							fetchFailed: !1,
						}),
						[n.Pyg]: (e, t) => ({
							payload: t.trainingStatusDaily,
							trainingStatusMostRecentData: {
								...e.trainingStatusMostRecentData,
								[t.userProfileId]: {
									...e.trainingStatusMostRecentData[t.userProfileId],
									[t.calendarDate]: {},
								},
							},
							isFetching: !1,
							fetchFailed: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i) {
					return {
						type: n.CUS,
						calendarDate: t,
						userProfileId: e,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				const l = (e, t, i) =>
						e.trainingStatusDaily.trainingStatusAggregatedData[t]
							? e.trainingStatusDaily.trainingStatusAggregatedData[t][i]
							: null,
					c = (e) => e.trainingStatusDaily.isFetching,
					d = (e) => e.trainingStatusDaily.fetchFailed;
			},
			208040: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					RB: () => l,
					UJ: () => c,
					Xd: () => d,
					x8: () => o,
				});
				var n = i(316550);
				const a = {
						trainingStatusReportData: null,
						isFetching: !1,
						fetchFailed: !1,
					},
					s = {
						[n.ziN]: (e) => ({ ...e, isFetching: !0, fetchFailed: !1 }),
						[n._5I]: (e, t) => {
							var i;
							return {
								trainingStatusReportData:
									null === (i = t.data) || void 0 === i ? void 0 : i.reportData,
								isFetching: !1,
								fetchFailed: !1,
							};
						},
						[n.Zxz]: (e, t) => ({
							trainingStatusReportData: t.data,
							isFetching: !1,
							fetchFailed: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				const o = (e) =>
						e.trainingStatusReport.trainingStatusReportData &&
						Object.keys(e.trainingStatusReport.trainingStatusReportData)
							.length > 0
							? e.trainingStatusReport.trainingStatusReportData
							: null,
					l = (e) => {
						var t;
						return null === (t = e.trainingStatusReport) || void 0 === t
							? void 0
							: t.isFetching;
					},
					c = (e) => {
						var t;
						return null === (t = e.trainingStatusReport) || void 0 === t
							? void 0
							: t.fetchFailed;
					};
				function d(e, t) {
					return {
						type: n.mDq,
						payload: e,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
			},
			275660: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => l, _: () => o });
				var n = i(316550);
				const a = { isFetching: !1, entities: {} },
					s = (e, t) => ({
						...e,
						isFetching: !1,
						entities: { ...e.entities, [t.displayName]: t.userConnections },
						lastUpdated: t.receivedAt,
					}),
					r = {
						[n.yK$]: (e) => ({ ...e, isFetching: !0 }),
						[n.Yfh]: s,
						[n.AeV]: s,
						[n.AgV]: () => a,
					},
					o = (e) => e.connectionProfileStatus.entities;
				function l(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			913671: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, f: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entities: [] },
					s = {
						[n.kf1]: (e) => ({ ...e, isFetching: !0 }),
						[n._Uj]: (e, t) => ({
							...e,
							isFetching: !1,
							entities: t.json,
							lastUpdated: t.receivedAt,
						}),
						[n.wu1]: () => a,
					},
					r = (e) => e.pendingConnections.entities;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			663456: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => u,
					CL: () => l,
					Gn: () => c,
					Ix: () => d,
					rE: () => o,
				});
				var n = i(316550);
				const a = { isFetching: !1, entities: {}, showGeneralError: !1 },
					s = (e, t) => ({
						...e,
						isFetching: !1,
						entities: { ...e.entities, [t.displayName]: t.publicUserProfile },
						lastUpdated: t.receivedAt,
					}),
					r = {
						[n.m3P]: (e) => ({ ...e, isFetching: !0 }),
						[n.wGf]: s,
						[n.qk7]: s,
						[n.rNk]: (e, t) => ({ ...e, showGeneralError: t.show }),
						[n.Guc]: () => a,
					},
					o = (e) => e.publicUserProfile.entities,
					l = (e, t) => e.publicUserProfile.entities[t],
					c = (e) => e.publicUserProfile.isFetching,
					d = (e) => e.publicUserProfile.showGeneralError;
				function u(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			390460: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, dn: () => o, y6: () => r });
				var n = i(316550);
				const a = {
						isFetching: !1,
						isFetchingForCourseId: !1,
						entities: {},
						upcomingEventsForCourseId: null,
					},
					s = {
						[n.h7W]: (e) => ({ ...e, isFetching: !0 }),
						[n.FVI]: (e, t) => ({
							...e,
							entities: { ...e.entities, [t.displayName]: t.upcomingEvents },
							isFetching: !1,
							lastUpdated: t.receivedAt,
						}),
						[n.SK8]: (e) => ({ ...e, isFetchingForCourseId: !0 }),
						[n.uqG]: (e, { response: t }) => ({
							...e,
							isFetchingForCourseId: !1,
							upcomingEventsForCourseId: t.data,
						}),
						[n.P1U]: (e) => ({ ...e, isFetchingForCourseId: !1 }),
						[n.XDw]: () => a,
					},
					r = (e) => e.upcomingEvents.entities,
					o = (e) => e.upcomingEvents.upcomingEventsForCourseId;
				function l(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			533622: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => p,
					C2: () => c,
					JG: () => y,
					UQ: () => d,
					WC: () => u,
					WP: () => l,
					kG: () => o,
				});
				var n = i(316550);
				const a = {
						isFetching: !1,
						deviceBasedIndicators: {},
						performanceBasedIndicators: {},
						historicalBasedIndicators: {},
						compiledIndicators: {},
						reportAvailability: {},
					},
					s = (e) => (t, i) => {
						if (!e)
							return {
								...t,
								isFetching: !1,
								deviceBasedIndicators: {},
								performanceBasedIndicators: {},
								historicalBasedIndicators: {},
								compiledIndicators: {},
								reportAvailability: {},
								lastUpdated: i.receivedAt,
							};
						const n = t.compiledIndicators || {},
							a = {
								...i.data.deviceBasedIndicators,
								...i.data.historicalDeviceBasedIndicators,
							};
						return (
							Object.keys(a).forEach((e) => {
								n[e] =
									i.data.deviceBasedIndicators[e] ||
									i.data.historicalDeviceBasedIndicators[e];
							}),
							{
								...t,
								isFetching: !1,
								deviceBasedIndicators: i.data.deviceBasedIndicators,
								performanceBasedIndicators: i.data.performanceBasedIndicators,
								historicalBasedIndicators:
									i.data.historicalDeviceBasedIndicators,
								compiledIndicators: n,
								reportAvailability: i.data.ReportAvailability,
								lastUpdated: i.receivedAt,
							}
						);
					},
					r = {
						[n.Ptp]: (e) => ({ ...e, isFetching: !0 }),
						[n.HNW]: s(!0),
						[n._Sr]: s(!1),
					},
					o = (e) => e.usageIndicators.isFetching,
					l = (e) => e.usageIndicators.deviceBasedIndicators,
					c = (e) => e.usageIndicators.performanceBasedIndicators,
					d = (e) => e.usageIndicators.compiledIndicators,
					u = (e) => e.usageIndicators.historicalBasedIndicators;
				function p(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function y(e, t) {
					let i = {};
					if (e.usageIndicators.historicalBasedIndicators)
						if (t)
							for (let n = 0; n < t.length; n++)
								i[t[n]] =
									!!e.usageIndicators.historicalBasedIndicators[t[n]] &&
									e.usageIndicators.historicalBasedIndicators[t[n]];
						else i = e.usageIndicators.historicalBasedIndicators;
					return i;
				}
			},
			894792: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => l, Y: () => o });
				var n = i(316550);
				const a = { isFetching: !1, entities: null, hasMoreDataToLoad: !0 },
					s = (e, t) => {
						let i = e.entities;
						return (
							i || (i = []),
							(i = [...i, ...t.data]),
							{
								...e,
								isFetching: !1,
								entities: i,
								lastUpdated: t.receivedAt,
								hasMoreDataToLoad: 10 === t.data.length,
							}
						);
					},
					r = {
						[n.ivV]: (e) => ({ ...e, isFetching: !0 }),
						[n.QAG]: s,
						[n.YdH]: s,
						[n.IHw]: () => a,
					},
					o = (e) => e.userDailySteps;
				function l(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			549580: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, Sp: () => l, gd: () => o });
				var n = i(316550);
				const a = { isFetching: !1, entity: {} },
					s = (e, t) => ({
						...e,
						isFetching: !1,
						entity: t.json,
						lastUpdated: t.receivedAt,
					}),
					r = {
						[n.q9c]: (e) => ({ ...e, isFetching: !0 }),
						[n.W1J]: s,
						[n._UK]: s,
						[n.iII]: () => a,
					},
					o = (e) => e.userPersonalInfo.entity,
					l = (e) => e.userPersonalInfo.isFetching;
				function c(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			448286: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => d, LU: () => c, iE: () => o, or: () => l });
				var n = i(316550);
				const a = { isFetching: !1, isFinished: !1, entities: {} },
					s = (e, t) => ({
						...e,
						isFetching: !1,
						isFinished: !0,
						entities: { ...e.entities, [t.displayName]: t.userPrivacy },
						lastUpdated: t.receivedAt,
					}),
					r = {
						[n.rKr]: (e) => ({ ...e, isFetching: !0, isFinished: !1 }),
						[n.H0w]: s,
						[n.hWY]: s,
						[n.fdT]: s,
					},
					o = (e) => e.userPrivacy.entities,
					l = (e) => e.userPrivacy.isFetching,
					c = (e) => e.userPrivacy.isFinished;
				function d(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			777658: (e, t, i) => {
				'use strict';
				i.d(t, {
					$V: () => d,
					Ay: () => o,
					Ev: () => A,
					K8: () => m,
					Kg: () => l,
					Rk: () => y,
					TP: () => g,
					hf: () => h,
					mh: () => c,
					oV: () => _,
					rL: () => u,
					yn: () => p,
				});
				var n = i(316550);
				const a = {
						userSocialProfiles: {},
						userRoles: [],
						userSocialProfilesFetching: !1,
						userSocialProfilesFetchSuccess: !1,
						userSocialProfilesFetchFail: !1,
						userSocialProfilesUpdating: !1,
						userSocialProfilesUpdateFail: !1,
					},
					s =
						(e) =>
						(t, { profile: i, displayName: n }) => ({
							...t,
							userSocialProfiles: e
								? { ...t.userSocialProfiles, [n]: i }
								: t.userSocialProfiles,
							userRoles: e ? { ...t.userRoles, [n]: i.userRoles } : t.userRoles,
							userSocialProfilesFetching: !1,
							userSocialProfilesFetchSuccess: e,
							userSocialProfilesFetchFail: !e,
						}),
					r = {
						[n.GD]: (e) => ({
							...e,
							userSocialProfilesFetching: !0,
							userSocialProfilesFetchSuccess: !1,
							userSocialProfilesFetchFail: !1,
						}),
						[n.FWo]: s(!0),
						[n.AI7]: s(!1),
						[n.LbT]: (e) => ({
							...e,
							userSocialProfilesUpdating: !0,
							userSocialProfilesUpdateFail: !1,
						}),
						[n.SNx]: (e, { profile: t, displayName: i }) => ({
							...e,
							userSocialProfiles: { ...e.userSocialProfiles, [i]: t },
							userSocialProfilesUpdating: !1,
							userSocialProfilesUpdateFail: !1,
						}),
						[n.VJ9]: (e) => ({
							...e,
							userSocialProfilesUpdating: !1,
							userSocialProfilesUpdateFail: !0,
						}),
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				const l = (e, t) => e.userSocialProfile.userSocialProfiles[t],
					c = (e) => e.userSocialProfile.userSocialProfilesFetching,
					d = (e) => e.userSocialProfile.userSocialProfilesFetchFail,
					u = (e) => e.userSocialProfile.userSocialProfilesUpdating,
					p = (e) => e.userSocialProfile.userSocialProfilesUpdateFail,
					y = (e, t) => e.userSocialProfile.userRoles[t],
					h = (e, t, i) => e.userSocialProfile.userRoles[t].includes(i),
					g = (e, t) =>
						e.userSocialProfile.userRoles[t].includes('ROLE_WELLNESS_USER'),
					m = (e, t) =>
						e.userSocialProfile.userRoles[t].includes('ROLE_FITNESS_USER'),
					A = (e, t) =>
						e.userSocialProfile.userRoles[t].includes('ROLE_DIVE_USER'),
					_ = (e, t) => {
						var i;
						return null === (i = e.userSocialProfile.userRoles[t]) ||
							void 0 === i
							? void 0
							: i.includes('ROLE_CONNECTBETAUSER');
					};
			},
			306463: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, V: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entities: {} },
					s = {
						[n.uPQ]: (e) => ({ ...e, isFetching: !0 }),
						[n.I8F]: (e, t) => ({
							...e,
							isFetching: !1,
							entities: { ...e.entities, [t.displayName]: t.json },
							lastUpdated: t.receivedAt,
						}),
						[n.G2X]: () => a,
					},
					r = (e) => e.userStatistics.entities;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			410754: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, K9: () => r, KF: () => s, KM: () => o });
				var n = i(462205);
				const a = (e) => (t, i) => ({
						...t,
						userSummaryAverages: i.userSummaryAverages || {},
						userSummaryAveragesFetching: !1,
						userSummaryAveragesFetchFail: !e,
					}),
					s = (e) => e.userSummaryAverages.userSummaryAveragesFetching,
					r = (e) => e.userSummaryAverages.userSummaryAveragesFetchFail,
					o = (e) => e.userSummaryAverages.userSummaryAverages,
					l = {
						[n.Eq]: (e) => ({
							...e,
							userSummaryAveragesFetching: !0,
							userSummaryAveragesFetchFail: !1,
						}),
						[n.pO]: a(!0),
						[n.KJ]: a(!1),
					};
				function c(e = {}, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
			},
			693241: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					Vb: () => c,
					e_: () => d,
					pO: () => o,
					tS: () => l,
				});
				var n = i(316550);
				const a = {
						data: null,
						userSummaryMonthlyFetching: !1,
						userSummaryMonthlyFail: !1,
					},
					s = {
						[n.DIR]: (e, t) => ({
							...e,
							userSummaryMonthlyFetching: !0,
							userSummaryMonthlyFail: !1,
						}),
						[n.ebH]: (e, t) => ({
							data: { ...t.data },
							userSummaryMonthlyFetching: !1,
							userSummaryMonthlyFail: !1,
						}),
						[n.P2N]: (e, t) => ({
							data: { ...e.data },
							userSummaryMonthlyFetching: !1,
							userSummaryMonthlyFail: !0,
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t, i, a) {
					return {
						type: n.ePi,
						displayName: e,
						startDate: t,
						endDate: i,
						meta: { cacheTime: a ? null : 12e4 },
					};
				}
				const l = (e) =>
						e.userSummaryMonthly ? e.userSummaryMonthly.data : null,
					c = (e) => e.userSummaryMonthly.userSummaryMonthlyFetching,
					d = (e) => e.userSummaryMonthly.userSummaryMonthlyFail;
			},
			172840: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, _L: () => r, _W: () => o });
				var n = i(316550);
				const a = {
						userCapable: null,
						userCapableFetching: !1,
						userCapableFetchFail: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						userCapable: {
							...t.userCapable,
							[i.capableName]: e ? i.userCapable : null,
						},
						userCapableFetching: !1,
						userCapableFetchFail: !e,
					}),
					r = (e) => e.userCapable.userCapableFetching,
					o = (e, t) =>
						e.userCapable.userCapable ? e.userCapable.userCapable[t] : null,
					l = {
						[n.T7H]: (e) => ({
							...e,
							userCapableFetching: !0,
							userCapableFetchFail: !1,
						}),
						[n.Qrg]: s(!0),
						[n.LZp]: s(!1),
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
			},
			554688: (e, t, i) => {
				'use strict';
				i.d(t, {
					Au: () => h,
					Ay: () => g,
					E$: () => c,
					H8: () => p,
					KO: () => r,
					Kj: () => u,
					NI: () => l,
					NK: () => y,
					_n: () => o,
					kY: () => d,
				});
				var n = i(316550);
				const a = {
						userFocus: null,
						userFocusFetching: !1,
						userFocusFetchFail: !1,
						userFocusFetchSuccess: !1,
						userFocusUpdating: !1,
						userFocusUpdateFail: !1,
						userFocusUpdateSuccess: !1,
						userFocusesSuggested: null,
						userFocusesSuggestedFetching: !1,
						userFocusesSuggestedFetchFail: !1,
						userFocusesSuggestedFetchSuccess: !1,
					},
					s = {
						[n.NO0]: (e) => ({
							...e,
							userFocusFetching: !0,
							userFocusFetchFail: !1,
							userFocusFetchSuccess: !1,
						}),
						[n.i4L]: (e, t) => ({
							...e,
							userFocus: t.data,
							userFocusFetching: !1,
							userFocusFetchFail: !1,
							userFocusFetchSuccess: !0,
						}),
						[n.vhE]: (e, t) => ({
							...e,
							userFocus: null,
							userFocusFetching: !1,
							userFocusFetchFail: !0,
							userFocusFetchSuccess: !1,
						}),
						[n.Az4]: (e) => ({
							...e,
							userFocusUpdating: !0,
							userFocusUpdateFail: !1,
							userFocusUpdateSuccess: !1,
						}),
						[n.f5x]: (e, t) => ({
							...e,
							userFocus: t.payload,
							userFocusUpdating: !1,
							userFocusUpdateFail: !1,
							userFocusUpdateSuccess: !0,
						}),
						[n.W3k]: (e, t) => ({
							...e,
							userFocus: null,
							userFocusUpdating: !1,
							userFocusUpdateFail: !0,
							userFocusUpdateSuccess: !1,
						}),
						[n.pWl]: (e) => ({
							...e,
							userFocusesSuggestedFetching: !0,
							userFocusesSuggestedFetchFail: !1,
							userFocusesSuggestedFetchSuccess: !1,
						}),
						[n.mM3]: (e, t) => ({
							...e,
							userFocusesSuggested: t.data,
							userFocusesSuggestedFetching: !1,
							userFocusesSuggestedFetchFail: !1,
							userFocusesSuggestedFetchSuccess: !0,
						}),
						[n.n$m]: (e, t) => ({
							...e,
							userFocusesSuggested: null,
							userFocusesSuggestedFetching: !1,
							userFocusesSuggestedFetchFail: !0,
							userFocusesSuggestedFetchSuccess: !1,
						}),
					},
					r = (e) => (e.userFocus ? e.userFocus.userFocus : null),
					o = (e) => (e.userFocus ? e.userFocus.userFocusFetching : null),
					l = (e) => (e.userFocus ? e.userFocus.userFocusFetchFail : null),
					c = (e) => (e.userFocus ? e.userFocus.userFocusUpdating : null),
					d = (e) => (e.userFocus ? e.userFocus.userFocusUpdateSuccess : null),
					u = (e) => (e.userFocus ? e.userFocus.userFocusUpdateFail : null),
					p = (e) => (e.userFocus ? e.userFocus.userFocusesSuggested : null),
					y = (e) =>
						e.userFocus ? e.userFocus.userFocusesSuggestedFetching : null,
					h = (e) =>
						e.userFocus ? e.userFocus.userFocusesSuggestedFetchFail : null;
				function g(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			630325: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => p,
					Es: () => d,
					IW: () => l,
					Pt: () => u,
					Tj: () => o,
					cC: () => c,
				});
				var n = i(316550),
					a = i(586816);
				const s = {
						isFetching: !1,
						isFinished: !1,
						finishStatus: {},
						entities: {},
					},
					r = {
						[n.gZE]: (e) => ({ ...e, isFetching: !0, isFinished: !1 }),
						[n.sP1]: (e, t) => ({
							...e,
							isFetching: !1,
							isFinished: !0,
							entities: {
								...e.entities,
								[t.preference.key]: t.preference.value,
							},
							finishStatus: { ...e.finishStatus, [t.preference.key]: !0 },
							lastUpdated: t.receivedAt,
						}),
						[n.Vyg]: (e, t) => ({
							...e,
							entities: {
								...e.entities,
								[t.preference.key]: t.preference.value,
							},
						}),
					},
					o = (e, t) => ({
						key: [t],
						value: e.userPreference.entities[t] || null,
					}),
					l = (e, t) => {
						if ((0, a.B)()) return { key: [t], value: 'baidu' };
						let i;
						return (
							null === e.userPreference.entities[t] && (i = 'google'),
							{ key: [t], value: e.userPreference.entities[t] || i }
						);
					},
					c = (e, t) => e.userPreference.entities[t] || null,
					d = (e, t) => e.userPreference.finishStatus[t] || !1,
					u = (e) => e.userPreference.isFetching;
				function p(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			952612: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => _,
					T9: () => A,
					U5: () => u,
					_K: () => d,
					_P: () => c,
					dx: () => g,
					f_: () => l,
					hc: () => s,
					jQ: () => m,
					p2: () => y,
				});
				var n = i(316550);
				const a = {
						userPrivacy: {},
						userPrivacyFetching: !1,
						bulkPrivacy: {},
						bulkPrivacySavedSuccessfully: null,
					},
					s = {
						PROFILE: 'profilePrivacySettings',
						ACTIVITY: 'activityPrivacySettings',
						WELLNESS: 'wellnessPrivacySettings',
					},
					r = (e, t) => ({
						...e,
						userPrivacy: t.data,
						userPrivacyFetching: !1,
					}),
					o = {
						[n.qOu]: r,
						[n.mES]: r,
						[n.Z5J]: (e, t) => ({ ...e, bulkPrivacy: t.data }),
						[n.sZM]: (e, t) => ({
							...e,
							bulkPrivacySavedSuccessfully: a.bulkPrivacySavedSuccessfully,
						}),
						[n.f_Y]: (e, t) => ({ ...e, bulkPrivacySavedSuccessfully: !0 }),
						[n.unu]: (e, t) => ({ ...e, bulkPrivacySavedSuccessfully: !1 }),
						[n.BJc]: (e, t) => ({ ...e, userPrivacyFetching: !0 }),
					},
					l = (e) => e.customUserPrivacy.userPrivacy,
					c = (e) => p(e, 'ACTIVITY'),
					d = (e) => p(e, 'PROFILE'),
					u = (e) => p(e, 'WELLNESS'),
					p = (e, t) => {
						const i = s[t] || s.ACTIVITY;
						return (
							e.customUserPrivacy.userPrivacy &&
							e.customUserPrivacy.userPrivacy[i] &&
							e.customUserPrivacy.userPrivacy[i].categoryDetails &&
							e.customUserPrivacy.userPrivacy[i].categoryDetails
								.categoryAccessRule &&
							e.customUserPrivacy.userPrivacy[i].categoryDetails
								.categoryAccessRule
						);
					},
					y = (e) => h(e, 'ACTIVITY'),
					h = (e, t) => {
						const i = s[t] || s.ACTIVITY;
						return (
							e.customUserPrivacy.userPrivacy &&
							e.customUserPrivacy.userPrivacy[i] &&
							e.customUserPrivacy.userPrivacy[i].subcategoryPrivacySettings
						);
					},
					g = (e) => e.userPrivacyFetching,
					m = (e) => e.customUserPrivacy.bulkPrivacy,
					A = (e) => e.customUserPrivacy.bulkPrivacySavedSuccessfully;
				function _(e = a, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
			},
			503484: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => u,
					Sk: () => l,
					ep: () => o,
					wc: () => c,
					wf: () => r,
				});
				var n = i(316550);
				const a = {
						userProfileBase: !1,
						userProfileBaseFetching: !1,
						userProfileBaseFetchFail: !1,
						userProfileBaseFetchFinished: !1,
					},
					s = (e, t) => ({
						...e,
						userProfileBase: t.data,
						userProfileBaseFetching: !1,
						userProfileBaseFetchFinished: !0,
						userProfileBaseFetchFail: !1,
					}),
					r = (e) => e.userProfileBase.userProfileBase,
					o = (e) => e.userProfileBase.userProfileBaseFetching,
					l = (e) => e.userProfileBase.userProfileBaseFetchFinished,
					c = (e) => e.userProfileBase.userProfileBaseFetchFail,
					d = {
						[n.wPM]: (e) => ({
							...e,
							userProfileBaseFetching: !0,
							userProfileBaseFetchFinished: !1,
							userProfileBaseFetchFail: !1,
						}),
						[n.pHz]: s,
						[n.g3v]: s,
					};
				function u(e = a, t = {}) {
					const i = d[t.type];
					return i ? i(e, t) : e;
				}
			},
			809906: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => m,
					D4: () => l,
					L9: () => u,
					S2: () => p,
					YQ: () => h,
					h_: () => y,
					p1: () => c,
					pI: () => d,
				});
				var n = i(316550);
				const a = {
						userSettings: null,
						userSettingsFetching: !1,
						userSettingsFetchFail: !1,
						userSettingsUpdating: !1,
						userSettingsUpdateError: !1,
						userSettingsFetchFinished: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						userSettings: e ? i.userSettings : null,
						userSettingsFetching: !1,
						userSettingsFetchFail: !e,
						userSettingsFetchFinished: !0,
					}),
					r = (e) => (t, i) => ({
						...t,
						userSettings: {
							...t.userSettings,
							userData: { ...t.userSettings.userData, ...i.userSettings },
						},
						userSettingsUpdating: !1,
						userSettingsUpdateError: !e,
						userSettingsFetchFinished: !0,
					}),
					o = (e) => (t, i) => ({
						...t,
						userSettings: {
							...t.userSettings,
							userMenstrualCycleSettings: {
								...t.userSettings.userMenstrualCycleSettings,
								...i.userMenstrualCycleSettings,
							},
						},
						userSettingsUpdating: !1,
						userSettingsUpdateError: !e,
						userSettingsFetchFinished: !0,
					}),
					l = (e) => e.userSettings.userSettingsFetchFinished,
					c = (e) => e.userSettings.userSettingsFetching,
					d = (e) => e.userSettings.userSettingsFetchFail,
					u = (e) => e.userSettings.userSettingsUpdating,
					p = (e) => e.userSettings.userSettingsUpdateError,
					y = (e) => e.userSettings.userSettings,
					h = (e) => e.userSettings.userSettings.userMenstrualCycleSettings,
					g = {
						[n.seO]: (e) => ({
							...e,
							userSettingsFetching: !0,
							userSettingsFetchFail: !1,
							userSettingsFetchFinished: !1,
						}),
						[n.DD8]: s(!0),
						[n.KH1]: s(!1),
						[n.bnb]: (e) => ({
							...e,
							userSettingsUpdating: !0,
							userSettingsUpdateError: !1,
							userSettingsFetchFinished: !1,
						}),
						[n.UYL]: r(!0),
						[n.bis]: r(!1),
						[n.pMx]: o(!0),
						[n.q4r]: o(!1),
						[n._7Y]: () => a,
						[n.CjE]: (e) => ({
							...e,
							userSettingsUpdating: !1,
							userSettingsUpdateError: !1,
							userSettingsFetchFinished: !1,
						}),
					};
				function m(e = a, t = {}) {
					const i = g[t.type];
					return i ? i(e, t) : e;
				}
			},
			718012: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => c,
					C4: () => C,
					CY: () => _,
					W2: () => g,
					XC: () => m,
					Xp: () => p,
					bf: () => E,
					dR: () => h,
					fH: () => y,
					fh: () => A,
					h9: () => u,
					zC: () => T,
					zH: () => d,
				});
				var n = i(316550);
				const a = {
						userStatsWellnessDaily: {},
						userStatsWellnessWeekly: {},
						userStatsWellnessMonthly: {},
						userStatsWellnessDailyFetching: !1,
						userStatsWellnessDailyFetchFail: !1,
						userStatsWellnessWeeklyFetching: !1,
						userStatsWellnessWeeklyFetchFail: !1,
						userStatsWellnessMonthlyFetching: !1,
						userStatsWellnessMonthlyFetchFail: !1,
					},
					s = (e, t, i) => {
						let n = JSON.parse(JSON.stringify(e));
						return (
							Object.keys(e).length > 0
								? Object.keys(t).map((a) => {
										if (e[a]) {
											let s = [...e[a], ...t[a]],
												l = r(s, i),
												c = o(l, i);
											n[a] = c;
										} else n[a] = t[a];
									})
								: (n = t),
							n
						);
					},
					r = (e, t) => {
						let i,
							n = [],
							a = [];
						for (let s = 0, r = e.length; s < r; s++)
							(i = e[s][t]), -1 === a.indexOf(i) && (n.push(e[s]), a.push(i));
						return n;
					},
					o = (e, t) => e.sort((e, i) => new Date(e[t]) - new Date(i[t])),
					l = {
						[n.Em2]: (e) => ({
							...e,
							userStatsWellnessDailyFetching: !0,
							userStatsWellnessDailyFetchFail: !1,
						}),
						[n.ZoO]: (e, t) => {
							const i = e.userStatsWellnessDaily,
								n = t.userStatsWellnessDaily.allMetrics.metricsMap;
							let a = s(i, n, 'calendarDate');
							return {
								...e,
								userStatsWellnessDaily: a,
								userStatsWellnessDailyFetching: !1,
								userStatsWellnessDailyFetchFail: !1,
							};
						},
						[n.I6M]: (e) => ({
							...e,
							userStatsWellnessDailyFetching: !1,
							userStatsWellnessDailyFetchFail: !0,
						}),
						[n.I$h]: (e) => ({
							...e,
							userStatsWellnessWeeklyFetching: !0,
							userStatsWellnessWeeklyFetchFail: !1,
						}),
						[n.xDI]: (e, t) => {
							const i = e.userStatsWellnessWeekly,
								n = t.userStatsWellnessWeekly.allMetrics.metricsMap;
							let a = s(i, n, 'startDateOfWeek');
							return {
								...e,
								userStatsWellnessWeekly: a,
								userStatsWellnessWeeklyFetching: !1,
								userStatsWellnessWeeklyFetchFail: !1,
							};
						},
						[n.Q5r]: (e) => ({
							...e,
							userStatsWellnessWeeklyFetching: !1,
							userStatsWellnessWeeklyFetchFail: !0,
						}),
						[n.Szd]: (e) => ({
							...e,
							userStatsWellnessMonthlyFetching: !0,
							userStatsWellnessMonthlyFetchFail: !1,
						}),
						[n.Tbi]: (e, t) => ({
							...e,
							userStatsWellnessMonthly:
								t.userStatsWellnessMonthly.allMetrics.metricsMap,
							userStatsWellnessMonthlyFetching: !1,
							userStatsWellnessMonthlyFetchFail: !1,
						}),
						[n.Szy]: (e) => ({
							...e,
							userStatsWellnessMonthlyFetching: !1,
							userStatsWellnessMonthlyFetchFail: !0,
						}),
					};
				function c(e = a, t = {}) {
					const i = l[t.type];
					return i ? i(e, t) : e;
				}
				function d(e, t) {
					return {
						payload: e,
						type: n.F2f,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function u(e, t) {
					return {
						payload: e,
						type: n.bO2,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				function p(e, t) {
					return {
						payload: e,
						type: n.Fm1,
						meta: { cacheTime: t ? null : 12e4 },
					};
				}
				const y = (e) =>
						e.userStats.userStatsWellnessDaily
							? e.userStats.userStatsWellnessDaily
							: null,
					h = (e) => e.userStats.userStatsWellnessDailyFetching,
					g = (e) => e.userStats.userStatsWellnessDailyFetchFail,
					m = (e) =>
						e.userStats.userStatsWellnessWeekly
							? e.userStats.userStatsWellnessWeekly
							: null,
					A = (e) => e.userStats.userStatsWellnessWeeklyFetching,
					_ = (e) => e.userStats.userStatsWellnessWeeklyFetchFail,
					E = (e) =>
						e.userStats.userStatsWellnessMonthly
							? e.userStats.userStatsWellnessMonthly
							: null,
					T = (e) => e.userStats.userStatsWellnessMonthlyFetching,
					C = (e) => e.userStats.userStatsWellnessMonthlyFetchFail;
			},
			610593: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => s, u: () => a });
				var n = i(316550);
				const a = (e) => e.validateDailySummary.entities,
					s = (e = { isFetching: !1, entities: [] }, t) => {
						switch (t.type) {
							case n.sfP:
								return { ...e, isFetching: !0 };
							case n.ERt:
								return {
									...e,
									isFetching: !1,
									entities: t.validateDailySummary,
									lastUpdated: t.receivedAt,
								};
							default:
								return e;
						}
					};
			},
			534707: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => r, S: () => s });
				var n = i(316550);
				const a = { isFetching: !1, entities: [] },
					s = (e) => e.validateDeviceEpoch.entities,
					r = (e = a, t) => {
						switch (t.type) {
							case n.m7E:
								return { ...a, isFetching: !0 };
							case n.s6F:
								return {
									...e,
									isFetching: !1,
									entities: [...e.entities, t.validateDeviceEpoch],
									lastUpdated: t.receivedAt,
								};
							default:
								return e;
						}
					};
			},
			149867: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, H5: () => s });
				var n = i(316550);
				const a = { isFetching: !1, entities: [] },
					s = (e, t) =>
						e.validateDeviceEpochSummary.entities.reduce(
							(e, i) => (
								(e[i.epochTimestamp] = ((e, t) => {
									switch (t) {
										case 'steps':
											return e.minuteLevelSteps;
										case 'floors':
											return e.floorsAscendedInMeters;
										case 'calories':
											return e.activeKiloCalories;
										case 'distance':
											return e.distanceInMeters;
										case 'intensityMin':
											var i = e.moderateIntensityMinutes || 0,
												n = e.vigorousIntensityMinutes || 0;
											return i || n ? i + 2 * n : null;
										default:
											return null;
									}
								})(i, t)),
								e
							),
							{}
						),
					r = (e = a, t) => {
						switch (t.type) {
							case n.FcZ:
								return { ...a, isFetching: !0 };
							case n.Hxz:
								return {
									...e,
									isFetching: !1,
									entities: t.validateDeviceEpochSummary,
									lastUpdated: t.receivedAt,
								};
							default:
								return e;
						}
					};
			},
			252652: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => r, B: () => s });
				var n = i(316550);
				const a = { isFetching: !1, entities: [] },
					s = (e) => e.validateDeviceHeartRate.entities,
					r = (e = a, t) => {
						switch (t.type) {
							case n.wKt:
								return { ...a, isFetching: !0 };
							case n.mlh:
								return {
									...e,
									isFetching: !1,
									entities: [...e.entities, t.validateDeviceHeartRate],
									lastUpdated: t.receivedAt,
								};
							default:
								return e;
						}
					};
			},
			439890: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, mP: () => s });
				var n = i(316550);
				const a = { isFetching: !1, entities: [] },
					s = (e, t) =>
						e.validateDeviceHeartRateSummary.entities.reduce(
							(e, t) => ((e[t.epochTimestamp] = t.heartRate), e),
							{}
						),
					r = (e = a, t) => {
						switch (t.type) {
							case n.jl6:
								return { ...a, isFetching: !0 };
							case n.bVL:
								return {
									...e,
									isFetching: !1,
									entities: t.validateDeviceHeartRateSummary,
									lastUpdated: t.receivedAt,
								};
							default:
								return e;
						}
					};
			},
			741236: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => r,
					ZM: () => c,
					k5: () => o,
					mM: () => d,
					mt: () => u,
					wE: () => l,
				});
				var n = i(316550);
				const a = {
						viewerUserPreferencesFetching: !1,
						viewerUserPreferencesFetchFail: !1,
						viewerUserPreferencesUpdating: !1,
						viewerUserPreferencesUpdateFail: !1,
						viewerUserPreferences: null,
					},
					s = {
						[n._5U]: (e) => ({
							...e,
							viewerUserPreferencesFetching: !0,
							viewerUserPreferencesFetchFail: !1,
						}),
						[n.xUt]: (e, t) => ({
							...e,
							viewerUserPreferencesFetching: !1,
							viewerUserPreferencesFetchFail: !1,
							viewerUserPreferences: t.viewerUserPreferences,
						}),
						[n.OJ0]: (e) => ({
							...e,
							viewerUserPreferencesFetching: !1,
							viewerUserPreferencesFetchFail: !0,
							viewerUserPreferences: null,
						}),
						[n.$z2]: (e) => ({
							...e,
							viewerUserPreferencesUpdating: !0,
							viewerUserPreferencesUpdateFail: !1,
						}),
						[n.OD1]: (e, t) => ({
							...e,
							data: t.data,
							viewerUserPreferencesUpdating: !1,
							viewerUserPreferencesUpdateFail: !1,
						}),
						[n.rWJ]: (e) => ({
							...e,
							viewerUserPreferencesUpdating: !1,
							viewerUserPreferencesUpdateFail: !0,
						}),
						[n.loq]: (e, t) => ({
							...e,
							viewerUserPreferences: { ...e.viewerUserPreferences, ...t.data },
						}),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				const o = (e) => e.viewerUserPreferences.viewerUserPreferences,
					l = (e) => e.viewerUserPreferences.viewerUserPreferencesFetching,
					c = (e) => e.viewerUserPreferences.viewerUserPreferencesFetchFail,
					d = (e) => e.viewerUserPreferences.viewerUserPreferencesUpdating,
					u = (e) => e.viewerUserPreferences.viewerUserPreferencesUpdateFail;
			},
			935124: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => u, EI: () => c, SY: () => l, qx: () => o });
				var n = i(316550);
				const a = {
						vo2MaxMetricsData: null,
						vo2MaxRangesData: null,
						fetching: !1,
						success: !1,
						error: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						vo2MaxMetricsData: e ? i.data : null,
						fetching: !1,
						success: e,
						error: !e,
					}),
					r = (e) => (t, i) => ({
						...t,
						vo2MaxRangesData: e ? i.data : null,
						fetching: !1,
						success: e,
						error: !e,
					}),
					o = (e) => e.vo2MaxMetrics.vo2MaxRangesData,
					l = (e) => e.vo2MaxMetrics.fetching,
					c = (e) => e.vo2MaxMetrics.error,
					d = {
						[n.nJ3]: s(!0),
						[n.Ik3]: (e) => ({
							...e,
							vo2MaxMetricsData: null,
							key: null,
							fetching: !0,
						}),
						[n.sMg]: s(!1),
						[n.idc]: r(!0),
						[n.lmp]: (e) => ({
							...e,
							vo2MaxRangesData: null,
							key: null,
							fetching: !0,
						}),
						[n.TOR]: r(!1),
					};
				function u(e = a, t = {}) {
					const i = d[t.type];
					return i ? i(e, t) : e;
				}
			},
			250031: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, eq: () => l, wj: () => c });
				var n = i(490781);
				const a = {
						forecast: [],
						historical: {},
						success: !1,
						error: !1,
						fetching: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						success: e,
						error: !e,
						forecast: (e && i.data.forecast) || [],
						historical: (e && i.data.historical) || {},
					}),
					r = {
						[n.ot]: s(!0),
						[n.zn]: s(!1),
						[n.b1]: (e, t) => ({ ...e, fetching: !0, success: !1, error: !1 }),
						[n.vQ]: () => (e) => ({ ...a }),
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				const l = (e) => e.gcsWeather.forecast,
					c = (e) => e.gcsWeather.historical;
			},
			997130: (e, t, i) => {
				'use strict';
				i.d(t, {
					$1: () => A,
					$v: () => g,
					A$: () => w,
					AW: () => B,
					A_: () => R,
					Ay: () => p,
					CY: () => T,
					D5: () => M,
					DT: () => k,
					G1: () => O,
					Ij: () => y,
					L7: () => J,
					OJ: () => L,
					P8: () => I,
					QE: () => H,
					RA: () => $,
					Rs: () => F,
					S0: () => V,
					VB: () => U,
					Y6: () => j,
					ZI: () => N,
					az: () => Y,
					bd: () => D,
					bw: () => S,
					cF: () => C,
					fD: () => _,
					fS: () => P,
					hb: () => b,
					iA: () => x,
					kF: () => W,
					oR: () => f,
					pq: () => E,
					rD: () => v,
					rM: () => m,
					yc: () => G,
					zu: () => h,
				});
				var n = i(748630),
					a = i(692135),
					s = i(316550);
				const r = {
						weights: {},
						monthlyWeights: { isFetching: null, didFetchFail: !1 },
						oneMonthWeights: { isFetching: null, didFetchFail: !1 },
						sevenDaysWeights: { isFetching: null, didFetchFail: !1 },
						fourWeeksWeights: { isFetching: null, didFetchFail: !1 },
						fiftyTwoWeeksWeights: { isFetching: null, didFetchFail: !1 },
						fiftyTwoWeeksWeightsReport: { isFetching: null, didFetchFail: !1 },
						userSettings: null,
						isFetching: null,
						didFetchFail: !1,
						currentTab: a.DF.ONE_DAY,
						deletedUserWeight: null,
						deletedUserWeightFetching: null,
						dailyWeights: {
							weights: null,
							isFetching: !1,
							error: !1,
							success: !1,
						},
						weightGainGoals: {
							userGoalRanges: null,
							userGoals: null,
							isFetching: !1,
							error: !1,
							success: !1,
						},
					},
					o = (e, t) => {
						e.dailyWeightSummaries &&
							e.dailyWeightSummaries.forEach((e) => {
								const i = e.latestWeight;
								V(i, t.userSettings),
									e.allWeightMetrics &&
										e.allWeightMetrics.length &&
										e.allWeightMetrics.forEach((e) => {
											V(e, t.userSettings);
										});
							});
					},
					l = (e) => (t, i) => (
						i.reloadPage && window.location.reload(),
						{ ...t, deletedUserWeight: e, deletedUserWeightFetching: !1 }
					),
					c = (e) => (t, i) => ({
						...t,
						dailyWeights: {
							...t.dailyWeights,
							weights: e ? i.data : null,
							isFetching: !1,
							success: e,
							error: !e,
						},
					}),
					d = (e) => (t, i) => ({
						...t,
						weightGainGoals: {
							...t.weightGainGoals,
							userGoalRanges: e ? i.data.userGoalRanges : null,
							userGoals: e ? i.data.userGoals : null,
							isFetching: !1,
							success: e,
							error: !e,
						},
					}),
					u = {
						[n.ak]: (e) => ({
							...e,
							weights: { ...e.weights },
							isFetching: !0,
							didFetchFail: !1,
						}),
						[n.Ih]: (e, t) => (
							t.data &&
								t.data.dateWeightList &&
								t.data.dateWeightList.forEach((t) => {
									V(t, e.userSettings);
								}),
							{
								...e,
								weights: { ...e.weights, [t.date]: t.data },
								isFetching: !1,
								didFetchFail: !1,
							}
						),
						[n.XV]: (e, t) => (
							delete e.dayWeightList.weights[t.date],
							{
								...e,
								weights: { ...e.weights },
								isFetching: !1,
								didFetchFail: !0,
							}
						),
						[n.S9]: (e, t) => ({ ...e, currentTab: t.currentTab }),
						[n.Y7]: (e) => ({
							...e,
							monthlyWeights: {
								...e.monthlyWeights,
								isFetching: !0,
								didFetchFail: !1,
							},
						}),
						[n.RJ]: (e, t) => {
							if (t.data) {
								if (
									(t.data.monthlyWeightSummarys &&
										t.data.monthlyWeightSummarys.forEach((t) => {
											const i = t.averageWeight;
											V(i, e.userSettings);
										}),
									t.data.previousMonthAverageDTO)
								) {
									let i = t.data.previousMonthAverageDTO;
									V(i, e.userSettings);
								}
								if (t.data.nextMonthAverageDTO) {
									let i = t.data.nextMonthAverageDTO;
									V(i, e.userSettings);
								}
							}
							return {
								...e,
								monthlyWeights: {
									...e.monthlyWeights,
									[t.endDate]: t.data,
									isFetching: !1,
									didFetchFail: !1,
								},
							};
						},
						[n.Q1]: (e) => ({
							...e,
							monthlyWeights: {
								...e.monthlyWeights,
								isFetching: !1,
								didFetchFail: !0,
							},
						}),
						[n.Os]: (e) => ({
							...e,
							fiftyTwoWeeksWeights: {
								...e.fiftyTwoWeeksWeights,
								isFetching: !0,
								didFetchFail: !1,
							},
						}),
						[n.NH]: (e, t) => {
							if (t.data) {
								if (
									(t.data.weeklyWeightSummaries &&
										t.data.weeklyWeightSummaries.forEach((t) => {
											const i = t.averageWeight;
											V(i, e.userSettings);
										}),
									t.data.previousWeekAverageDTO)
								) {
									let i = t.data.previousWeekAverageDTO;
									V(i, e.userSettings);
								}
								if (t.data.nextWeekAverageDTO) {
									let i = t.data.nextWeekAverageDTO;
									V(i, e.userSettings);
								}
							}
							return {
								...e,
								fiftyTwoWeeksWeights: {
									...e.fiftyTwoWeeksWeights,
									[t.endDate]: t.data,
									isFetching: !1,
									didFetchFail: !1,
								},
							};
						},
						[n.Cc]: (e) => ({
							...e,
							fiftyTwoWeeksWeights: {
								...e.fiftyTwoWeeksWeights,
								isFetching: !1,
								didFetchFail: !0,
							},
						}),
						[n.pl]: (e) => ({
							...e,
							fiftyTwoWeeksWeightsReport: {
								...e.fiftyTwoWeeksWeightsReport,
								isFetching: !0,
								didFetchFail: !1,
							},
						}),
						[n.cy]: (e, t) => (
							t.data && t.data.dailyWeightSummaries && o(t.data, e),
							{
								...e,
								fiftyTwoWeeksWeightsReport: {
									...e.fiftyTwoWeeksWeightsReport,
									[t.endDate]: t.data,
									isFetching: !1,
									didFetchFail: !1,
								},
							}
						),
						[n.v]: (e) => ({
							...e,
							fiftyTwoWeeksWeightsReport: {
								...e.fiftyTwoWeeksWeightsReport,
								isFetching: !1,
								didFetchFail: !0,
							},
						}),
						[n.R_]: (e, t) => {
							let i = t.dateRange ? t.dateRange : a.qE.SEVEN_DAYS;
							return {
								...e,
								[i]: { ...e[i], isFetching: !0, didFetchFail: !1 },
							};
						},
						[n.sf]: (e, t) => {
							if (t.data) {
								if ((o(t.data, e), t.data.previousDateWeight)) {
									let i = t.data.previousDateWeight;
									V(i, e.userSettings);
								}
								if (t.data.nextDateWeight) {
									let i = t.data.nextDateWeight;
									V(i, e.userSettings);
								}
							}
							let i = t.dateRange ? t.dateRange : a.qE.SEVEN_DAYS;
							return {
								...e,
								[i]: {
									...e[i],
									[t.endDate]: t.data,
									isFetching: !1,
									didFetchFail: !1,
								},
							};
						},
						[n.ZE]: (e, t) => {
							let i = t.dateRange ? t.dateRange : a.qE.SEVEN_DAYS;
							return {
								...e,
								[i]: { ...e[i], isFetching: !1, didFetchFail: !0 },
							};
						},
						[n.PQ]: (e) => ({ ...e, deletedUserWeightFetching: !0 }),
						[n.nX]: l(!0),
						[n.gc]: l(!1),
						[s.DD8]: (e, t) => ({ ...e, userSettings: t.userSettings }),
						[n.nD]: (e) => ({
							...e,
							dailyWeights: { ...e.dailyWeights, isFetching: !0 },
						}),
						[n.OE]: c(!0),
						[n.t8]: c(!1),
						[n.o4]: (e) => ({
							...e,
							weightGainGoals: { ...e.weightGainGoals, isFetching: !0 },
						}),
						[n.JA]: d(!0),
						[n.Gz]: d(!1),
					};
				function p(e = r, t = {}) {
					const i = u[t.type];
					return i ? i(e, t) : e;
				}
				function y(e) {
					return { type: n.ak, date: e };
				}
				function h(e) {
					return { type: n.S9, currentTab: e };
				}
				function g(e, t) {
					return { type: n.PW, dates: e, meta: { cacheTime: t ? null : 12e4 } };
				}
				function m(e, t) {
					return { type: n._D, dates: e, meta: { cacheTime: t ? null : 12e4 } };
				}
				function A(e, t, i) {
					return {
						type: n.G0,
						dates: e,
						dateRange: t,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				function _(e, t, i, a) {
					return {
						type: n.n3,
						weightId: e,
						date: t,
						actionToDispatch: i,
						reloadPage: a,
					};
				}
				const E = (e, t, i) => ({
						type: n.vh,
						dates: { startDate: e, endDate: t },
						callback: i,
					}),
					T = (e, t) => ({ type: n.H$, dates: { startDate: e, endDate: t } }),
					C = (e, t) => e.dayWeightList.weights[t],
					S = (e) => e.dayWeightList.currentTab,
					I = (e, t) =>
						e.dayWeightList.fiftyTwoWeeksWeights[t]
							? e.dayWeightList.fiftyTwoWeeksWeights[t].weeklyWeightSummaries
							: null,
					v = (e, t) =>
						e.dayWeightList.fiftyTwoWeeksWeightsReport[t]
							? e.dayWeightList.fiftyTwoWeeksWeightsReport[t]
									.dailyWeightSummaries
							: null,
					f = (e, t) =>
						e.dayWeightList.sevenDaysWeights[t]
							? e.dayWeightList.sevenDaysWeights[t].dailyWeightSummaries
							: null,
					D = (e, t) =>
						e.dayWeightList.sevenDaysWeights[t]
							? e.dayWeightList.sevenDaysWeights[t].previousDateWeight
							: null,
					N = (e, t) =>
						e.dayWeightList.sevenDaysWeights[t]
							? e.dayWeightList.sevenDaysWeights[t].nextDateWeight
							: null,
					R = (e) => e.dayWeightList.sevenDaysWeights.isFetching,
					b = (e) => e.dayWeightList.isFetching,
					L = (e) => e.dayWeightList.monthlyWeights.isFetching,
					P = (e) => e.dayWeightList.fiftyTwoWeeksWeights.isFetching,
					O = (e) => e.dayWeightList.fourWeeksWeights.isFetching,
					w = (e, t) =>
						e.dayWeightList.fourWeeksWeights[t]
							? e.dayWeightList.fourWeeksWeights[t].dailyWeightSummaries
							: null,
					F = (e, t) =>
						e.dayWeightList.fourWeeksWeights[t]
							? e.dayWeightList.fourWeeksWeights[t].previousDateWeight
							: null,
					k = (e, t) =>
						e.dayWeightList.fourWeeksWeights[t]
							? e.dayWeightList.fourWeeksWeights[t].nextDateWeight
							: null,
					U = (e) => e.dayWeightList.oneMonthWeights.isFetching,
					M = (e, t) =>
						e.dayWeightList.oneMonthWeights[t]
							? e.dayWeightList.oneMonthWeights[t].dailyWeightSummaries
							: null,
					G = (e, t) =>
						e.dayWeightList.oneMonthWeights[t]
							? e.dayWeightList.oneMonthWeights[t].previousDateWeight
							: null,
					x = (e, t) =>
						e.dayWeightList.oneMonthWeights[t]
							? e.dayWeightList.oneMonthWeights[t].nextDateWeight
							: null,
					B = (e, t) =>
						e.dayWeightList.fiftyTwoWeeksWeights[t]
							? e.dayWeightList.fiftyTwoWeeksWeights[t].previousWeekAverageDTO
							: null,
					H = (e, t) =>
						e.dayWeightList.fiftyTwoWeeksWeights[t]
							? e.dayWeightList.fiftyTwoWeeksWeights[t].nextWeekAverageDTO
							: null,
					V = (e, t) => {
						e &&
							(e.bmi ||
								'INDEX_SCALE' === e.sourceType ||
								(e.bmi = (0, a.Hv)(e.weight, t)));
					},
					W = (e) => e.dayWeightList.dailyWeights.success,
					J = (e) => e.dayWeightList.dailyWeights.weights,
					Y = (e) => e.dayWeightList.weightGainGoals.isFetching,
					$ = (e) => e.dayWeightList.weightGainGoals.success,
					j = (e) => e.dayWeightList.weightGainGoals.userGoalRanges;
			},
			111141: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => r, KQ: () => o, _z: () => c, o9: () => l });
				var n = i(748630);
				const a = { latestWeight: {}, isFetching: !0, didFetchFail: !1 },
					s = {
						[n.uQ]: (e) => ({
							latestWeight: { ...e.latestWeight },
							isFetching: !0,
							didFetchFail: !1,
						}),
						[n.Oq]: (e, t) => ({
							latestWeight: { ...e.latestWeight, [t.date]: t.data },
							isFetching: !1,
							didFetchFail: !1,
						}),
						[n.l_]: (e, t) => (
							delete e.latestWeight[t.date],
							{
								latestWeight: { ...e.latestWeight },
								isFetching: !1,
								didFetchFail: !0,
							}
						),
					};
				function r(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
				function o(e, t) {
					return { type: n.uQ, date: e, meta: { cacheTime: t ? null : 12e4 } };
				}
				const l = (e, t) => e.latestWeight.latestWeight[t],
					c = (e) => e.latestWeight.isFetching;
			},
			783250: (e, t, i) => {
				'use strict';
				i.d(t, {
					$G: () => c,
					Ay: () => l,
					Hf: () => u,
					Kv: () => p,
					pJ: () => d,
				});
				var n = i(316550);
				const a = {
						weightList: [],
						isWeightListFetching: !1,
						didWeightListFetchFail: !1,
					},
					s = (e, t) => {
						let i,
							n = [],
							a = [];
						for (let s = 0, r = e.length; s < r; s++)
							(i = e[s][t]), -1 === a.indexOf(i) && (n.push(e[s]), a.push(i));
						return n;
					},
					r = (e) =>
						e.sort(
							(e, t) => new Date(e.calendarDate) - new Date(t.calendarDate)
						),
					o = {
						[n.Mcb]: (e, t) => ({
							weightList: [...e.weightList],
							isWeightListFetching: !0,
							didWeightListFetchFail: !1,
						}),
						[n.$fs]: (e, t) => {
							const i = e.weightList,
								n = t.weightList.dateWeightList;
							let a;
							if (i.length > 0) {
								let e = [...i, ...n],
									t = s(e, 'calendarDate');
								a = r(t);
							} else a = n;
							return {
								weightList: a,
								isWeightListFetching: !1,
								didWeightListFetchFail: !1,
							};
						},
						[n.yho]: (e, t) => ({
							weightList: [...e.weightList.weightList],
							isWeightListFetching: !1,
							didWeightListFetchFail: !0,
						}),
					};
				function l(e = a, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
				function c(e, t, i) {
					return {
						type: n.jTh,
						startDate: e,
						endDate: t,
						meta: { cacheTime: i ? null : 12e4 },
					};
				}
				const d = (e) =>
						e.weightList.weightList ? e.weightList.weightList : [],
					u = (e) => e.weightList.isWeightListFetching,
					p = (e) => e.weightList.didWeightListFetchFail;
			},
			197897: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => l,
					Fv: () => A,
					OZ: () => y,
					Ud: () => c,
					aD: () => _,
					b8: () => u,
					f8: () => C,
					gd: () => h,
					hL: () => T,
					hf: () => E,
					hg: () => d,
					hl: () => m,
					i6: () => p,
					lL: () => g,
				});
				var n = i(748630),
					a = i(422460);
				const s = {
						firstWeight: void 0,
						weightPageState: {
							updatingUserGoal: !1,
							currentPageDate: null,
							addUserWeightFetching: null,
							overlayEnabled: !1,
							selectedDataTypes: [i(692135).xz.weight],
						},
					},
					r = () => (e, t) => (
						t.reloadPage && window.location.reload(),
						{
							...e,
							weightPageState: {
								...e.weightPageState,
								addUserWeightFetching: !1,
							},
						}
					),
					o = {
						[n.XX]: (e, t) => {
							let i = e.weightPageState.selectedDataTypes,
								n = t.dataType;
							return (
								e.weightPageState.overlayEnabled
									? i.indexOf(n) > -1
										? i.length > 1 && (i = i.filter((e) => e !== n))
										: (i.length > 1 && i.pop(), i.push(n))
									: (i = [n]),
								{
									...e,
									weightPageState: {
										...e.weightPageState,
										selectedDataTypes: [...i],
									},
								}
							);
						},
						[n.n2]: (e) => ({
							...e,
							weightPageState: { ...e.weightPageState, updatingUserGoal: !0 },
						}),
						[n.ey]: (e) => ({
							...e,
							weightPageState: { ...e.weightPageState, updatingUserGoal: !1 },
						}),
						[n.oY]: (e, t) => {
							let i = a.Ay.formatISODate(new Date()),
								n = t.currentPageDate > i ? i : t.currentPageDate;
							return {
								...e,
								weightPageState: { ...e.weightPageState, currentPageDate: n },
							};
						},
						[n.vU]: (e) => {
							const t = s;
							return (
								(t.weightPageState.selectedDataTypes =
									e.weightPageState.selectedDataTypes),
								(t.weightPageState.overlayEnabled =
									e.weightPageState.overlayEnabled),
								{ ...e, weightPageState: t.weightPageState }
							);
						},
						[n.FQ]: (e) => {
							const t = e.weightPageState.overlayEnabled
								? [e.weightPageState.selectedDataTypes[0]]
								: e.weightPageState.selectedDataTypes;
							return {
								...e,
								weightPageState: {
									...e.weightPageState,
									overlayEnabled: !e.weightPageState.overlayEnabled,
									selectedDataTypes: t,
								},
							};
						},
						[n.Ce]: (e) => ({
							...e,
							weightPageState: {
								...e.weightPageState,
								addUserWeightFetching: !0,
							},
						}),
						[n.L_]: r(),
						[n.Ow]: r(),
						[n.Vb]: (e, t) => ({
							...e,
							firstWeight: (t.data && t.data.date) || null,
						}),
					};
				function l(e = s, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
				function c(e) {
					return { type: n.oY, currentPageDate: e };
				}
				function d() {
					return { type: n.vU };
				}
				function u() {
					return { type: n.FQ };
				}
				function p(e, t) {
					return { type: n.iQ, payload: e, displayName: t };
				}
				function y(e) {
					return { type: n.VI, goalId: e };
				}
				function h(e) {
					return { type: n.XX, dataType: e };
				}
				function g(e, t, i, a) {
					return {
						type: n.Xk,
						payload: e,
						currentDate: t,
						actionToDispatch: i,
						reloadPage: a,
					};
				}
				function m() {
					return { type: n.xV };
				}
				const A = (e) => e.weightPage.weightPageState.selectedDataTypes,
					_ = (e) => e.weightPage.weightPageState.overlayEnabled,
					E = (e) => e.weightPage.weightPageState.currentPageDate,
					T = (e) => e.weightPage.weightPageState.addUserWeightFetching,
					C = (e) => e.weightPage.firstWeight;
			},
			815656: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => d, ML: () => l, YE: () => o, oc: () => c });
				var n = i(316550);
				const a = {
						workout: {},
						isFetching: !1,
						isUpdating: !1,
						providerWorkout: {},
						isFetchingProviderWorkout: !1,
					},
					s = (e) => (t, i) => ({
						...t,
						workout: e ? i.workout : t.workout,
						updateSuccess: e,
						updateError: !e,
						isUpdating: !1,
					}),
					r = {
						[n.y8l]: (e) => ({ ...e, isFetching: !0 }),
						[n.wox]: (e, t) => ({
							...e,
							workout: t.workoutById,
							isFetching: !1,
						}),
						[n.fUw]: (e, t) => ({ ...e, isUpdating: !0 }),
						[n.Axc]: s(!0),
						[n.xIW]: s(!1),
						[n.EeR]: (e) => ({ ...e, isFetchingProviderWorkout: !0 }),
						[n.HXR]: (e, t) => ({
							...e,
							providerWorkout: t.providerWorkout,
							isFetchingProviderWorkout: !1,
						}),
						[n.M8R]: (e) => ({ ...e, isFetchingProviderWorkout: !1 }),
					},
					o = (e) => e.workoutById,
					l = (e) => e.workoutById.isFetching,
					c = (e) => e.workoutById && e.workoutById.isUpdating;
				function d(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			284733: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, lD: () => o, q7: () => c });
				var n = i(316550),
					a = i(228268);
				const s = { isFetching: !1, entities: {}, lastUpdated: null },
					r = {
						[n.ECM]: (e) => ({ ...e, isFetching: !0 }),
						[n.qzx]: (e, t) => {
							const i =
								t.data && t.data.workout && t.data.workout.workoutSegments
									? (0, a.FK)(t.data.workout.workoutSegments)
									: [];
							return {
								...e,
								entities: {
									...t.data,
									workout: { ...t.data.workout, workoutSegments: i },
								},
								isFetching: !1,
								lastUpdated: t.receivedAt,
							};
						},
						[n.VgC]: (e, t) => {
							const { workoutSchedule: i } = t;
							return {
								...e,
								entities: { [i.workoutScheduleId]: i },
								lastUpdated: t.receivedAt,
							};
						},
					},
					o = (e) => e.workoutSchedule;
				function l(e = s, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
				function c(e) {
					return {
						type: n.RIx,
						payload: {
							workoutScheduleId: e.workoutScheduleId,
							calendarDate: e.calendarDate,
							workoutScheduleDTO: e.workoutScheduleDTO,
						},
					};
				}
			},
			704993: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => l, x: () => o });
				var n = i(316550);
				const a = { workoutSteps: [], isFetching: !1 };
				function s(e) {
					let t = [];
					if (e)
						for (let i = 0, n = e.length; i < n; i++)
							if ('RepeatGroupDTO' === e[i].type)
								t.push(...s(e[i].workoutSteps));
							else if ('ExecutableStepDTO' === e[i].type) {
								e[i].exerciseName = e[i].exerciseName || e[i].category;
								if (
									!(
										[null, void 0].includes(e[i].category) &&
										[null, void 0].includes(e[i].exerciseName)
									)
								) {
									const n = e[i].category + '/' + e[i].exerciseName;
									t.push({ url: n, stepOrder: e[i].stepOrder });
								}
							}
					return t;
				}
				const r = {
						[n.wox]: (e, t) => ({
							...e,
							workoutSteps: s(t.workoutById.workoutSegments[0].workoutSteps),
							isFetching: !1,
						}),
					},
					o = (e) => e.workoutSteps;
				function l(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			501943: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => u,
					Bl: () => r,
					Xz: () => o,
					cV: () => c,
					qn: () => l,
				});
				var n = i(316550),
					a = i(228268);
				const s = {
						workoutTypes: [],
						workoutTypesFetching: !1,
						workoutTypesFetchFail: !1,
						workoutAllTypes: {},
						workoutAllTypesFetching: !1,
						workoutAllTypesFetchFail: !1,
					},
					r = (e) => e.workoutTypes.workoutTypes,
					o = (e) => e.workoutTypes.workoutTypesFetching,
					l = (e) => e.workoutTypes.workoutAllTypes,
					c = (e) => e.workoutTypes.workoutConditionTypesFetching,
					d = {
						[n.ytU]: (e) => ({
							...e,
							workoutTypesFetching: !0,
							workoutTypesFetchFail: !1,
						}),
						[n.$bN]: (e, t) => ({
							...e,
							workoutTypes: (0, a.eg)(t.data),
							workoutTypesFetching: !1,
							workoutTypesFetchFail: !1,
						}),
						[n.CLe]: (e, t) => ({
							...e,
							workoutTypesFetching: !1,
							workoutTypesFetchFail: !0,
						}),
						[n.oOV]: (e) => ({
							...e,
							workoutAllTypesFetching: !0,
							workoutAllTypesFetchFail: !1,
						}),
						[n.n7Z]: (e, t) => ({
							...e,
							workoutAllTypes: t.data,
							workoutAllTypesFetching: !1,
							workoutAllTypesFetchFail: !1,
						}),
						[n.SxR]: (e) => ({
							...e,
							workoutAllTypesFetching: !1,
							workoutAllTypesFetchFail: !0,
						}),
					};
				function u(e = s, t = {}) {
					const i = d[t.type];
					return i ? i(e, t) : e;
				}
			},
			807151: (e, t, i) => {
				'use strict';
				i.d(t, {
					AR: () => u,
					Ay: () => g,
					Qw: () => c,
					X_: () => p,
					Z$: () => l,
					ax: () => h,
					eC: () => y,
					zb: () => d,
				});
				var n = i(316550),
					a = i(926538);
				const s = {
						isFetching: !1,
						entity: [],
						filteredWorkouts: [],
						providerWorkouts: [],
						primaryMuscles: [],
						goals: [],
						difficultyMapper: {},
						equipment: {},
					},
					r = (e, t) =>
						e.filteredWorkouts.length !== e.providerWorkouts.length
							? e.filteredWorkouts
							: t.workouts,
					o = {
						[n.JQj]: (e) => ({ ...e, isFetching: !0 }),
						[n.vol]: (e, t) => ({
							...e,
							entity: t.workouts,
							filteredWorkouts: t.workouts,
							isFetching: !1,
							lastUpdated: t.receivedAt,
						}),
						[n.fYC]: (e) => ({ ...e, isFetching: !0 }),
						[n.lEv]: (e, t) => ({
							...e,
							providerWorkouts: t.workouts,
							filteredWorkouts: r(e, t),
							primaryMuscles: t.primaryMuscles,
							goals: t.goals,
							difficultyMapper: t.difficultyMapper,
							equipment: t.equipment,
							isFetching: !1,
							lastUpdated: t.receivedAt,
						}),
						[n.UPU]: (e, t) => {
							let i = e.providerWorkouts,
								n = t.enabledFilters;
							if (n.SEARCH) {
								i = new a.A(i, [
									'workoutName',
									'sportTypeKey',
									'difficulty',
									'primaryMuscles',
									'goals',
								]).search(n.SEARCH);
							}
							if (
								(n.ACTIVITY &&
									'ALL' !== n.ACTIVITY[0] &&
									(i = i.filter((e) => n.ACTIVITY.includes(e.sportTypeKey))),
								n.DIFFICULTY &&
									0 !== n.DIFFICULTY.length &&
									'ALL' !== n.DIFFICULTY[0] &&
									(i = i.filter((e) => n.DIFFICULTY.includes(e.difficulty))),
								n.DURATION &&
									0 !== n.DURATION.length &&
									'ALL' !== n.DURATION[0])
							) {
								let e = {};
								for (let i = 0; i < n.DURATION.length; i++)
									'LT20' === n.DURATION[i]
										? ((e[-1] = !0), e[1199] ? delete e[1199] : (e[1199] = !0))
										: '20TO40' === n.DURATION[i]
											? (e[1199] ? delete e[1199] : (e[1199] = !0),
												e[2401] ? delete e[2401] : (e[2401] = !0))
											: '40TO60' === n.DURATION[i]
												? (e[2401] ? delete e[2401] : (e[2401] = !0),
													e[3601] ? delete e[3601] : (e[3601] = !0))
												: 'GT60' === n.DURATION[i] &&
													(e[3601] ? delete e[3601] : (e[3601] = !0),
													(e[1 / 0] = !0));
								let t = Object.keys(e).sort((e, t) => +e - +t);
								i = i.filter((e) => {
									let i = !1;
									for (let n = 0; n < t.length; n += 2)
										e.duration > t[n] && e.duration < t[n + 1] && (i = !0);
									return i;
								});
							}
							if (
								n.PRIMARY_MUSCLES &&
								0 !== n.PRIMARY_MUSCLES.length &&
								'ALL' !== n.PRIMARY_MUSCLES[0]
							) {
								let e = ',' + n.PRIMARY_MUSCLES.join(',') + ',';
								i = i.filter(
									(t) =>
										t.primaryMuscles &&
										t.primaryMuscles.some((t) => e.indexOf(',' + t + ',') >= 0)
								);
							}
							if (n.GOALS && 0 !== n.GOALS.length && 'ALL' !== n.GOALS[0]) {
								let e = ',' + n.GOALS.join(',') + ',';
								i = i.filter((t) =>
									t.goals.some((t) => e.indexOf(',' + t + ',') >= 0)
								);
							}
							return { ...e, filteredWorkouts: i };
						},
						[n.i0f]: (e, t) => {
							let i = e.providerWorkouts;
							return { ...e, filteredWorkouts: i };
						},
					},
					l = (e) => e.workouts,
					c = (e) => e.workouts.providerWorkouts,
					d = (e) => e.workouts.primaryMuscles,
					u = (e) => e.workouts.equipment,
					p = (e) => e.workouts.difficultyMapper,
					y = (e) => e.workouts.filteredWorkouts,
					h = (e) => e.workouts.goals;
				function g(e = s, t = {}) {
					const i = o[t.type];
					return i ? i(e, t) : e;
				}
			},
			659321: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, f: () => r });
				var n = i(316550);
				const a = { isFetching: !1, entity: {} },
					s = {
						[n.Ohz]: (e) => ({ ...a, isFetching: !0 }),
						[n.QmB]: (e, t) => ({
							...e,
							entity: t.data,
							isFetching: !1,
							lastUpdated: t.receivedAt,
						}),
					},
					r = (e) => e.workoutsExport;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			728245: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, Z: () => r });
				var n = i(316550);
				const a = {
						SEARCH: '',
						ACTIVITY: ['ALL'],
						DIFFICULTY: ['ALL'],
						PRIMARY_MUSCLES: ['ALL'],
						DURATION: ['ALL'],
						GOALS: ['ALL'],
					},
					s = {
						[n.UPU]: (e, t) => ({
							...e,
							SEARCH: t.enabledFilters.SEARCH,
							ACTIVITY: t.enabledFilters.ACTIVITY,
							DIFFICULTY: t.enabledFilters.DIFFICULTY,
							PRIMARY_MUSCLES: t.enabledFilters.PRIMARY_MUSCLES,
							DURATION: t.enabledFilters.DURATION,
						}),
						[n.i0f]: () => ({
							SEARCH: '',
							ACTIVITY: ['ALL'],
							DIFFICULTY: ['ALL'],
							PRIMARY_MUSCLES: ['ALL'],
							DURATION: ['ALL'],
							GOALS: ['ALL'],
						}),
					},
					r = (e) => e.workoutsFilter;
				function o(e = a, t = {}) {
					const i = s[t.type];
					return i ? i(e, t) : e;
				}
			},
			349368: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, L: () => s });
				var n = i(316550);
				const a = {
						selfEvaluationIcons: {},
						selfEvaluationIconsFetching: !1,
						selfEvaluationIconsFetchFail: !1,
					},
					s = (e) => e.workoutExecutionMetrics.selfEvaluationIcons,
					r = {
						[n.iOn]: (e) => ({
							...e,
							selfEvaluationIconsFetching: !0,
							selfEvaluationIconsFetchFail: !1,
						}),
						[n.ptg]: (e, t) => ({
							...e,
							selfEvaluationIcons: { ...t.response.data.icons },
							selfEvaluationIconsFetching: !1,
							selfEvaluationIconsFetchFail: !1,
						}),
						[n.c0n]: (e) => ({
							...e,
							selfEvaluationIconsFetching: !1,
							selfEvaluationIconsFetchFail: !0,
						}),
					};
				function o(e = a, t = {}) {
					const i = r[t.type];
					return i ? i(e, t) : e;
				}
			},
			624438: (e, t, i) => {
				'use strict';
				i.d(t, { $4: () => s, FB: () => n, L2: () => r, fX: () => a });
				const n = 'ecg-recordings',
					a = 'jet-lag-trips',
					s = 'body-battery',
					r = '0fa2a8b5-0312-4c85-98a8-e0d4b39881c4';
			},
			752734: (e, t, i) => {
				'use strict';
				i.d(t, { Pn: () => u });
				var n = i(627066),
					a = i(109285),
					s = i.n(a),
					r = i(765722),
					o = i(316550),
					l = i(257931),
					c = i(447349);
				function d(e, t) {
					e && e.onSuccess && e.onSuccess(t.data);
				}
				const u = [
					(0, n.jP)(o.yoI, function* (e) {
						try {
							const { athletePlanId: t } = e.payload;
							yield (0, n.yJ)({ type: o.kMJ });
							const i = yield (0, n.T1)(
								r.q8.get,
								`/atp/athlete/nextWorkout?athletePlanId=${t}`
							);
							let a;
							if (i && i.data) {
								const e = i.data.scheduleWorkoutId;
								a = yield (0, n.T1)(r.tI.get, `/workout-service/schedule/${e}`);
							}
							yield (0, n.yJ)({
								type: o.gP,
								atpNextWorkout: i && i.data ? i.data : {},
								atpWorkout: a && a.data ? a.data : {},
							});
						} catch (t) {
							yield (0, n.yJ)({
								type: o.f3V,
								atpNextWorkout: {},
								atpWorkout: {},
								error: t,
							});
						}
					}),
					(0, n.jP)(o.Yyk, function* (e) {
						try {
							const {
								athletePlanId: t,
								startDate: i,
								endDate: a,
								lang: s,
							} = e.payload;
							yield (0, n.yJ)({ type: o.rn3 });
							const l = yield (0, n.T1)(
								r.q8.get,
								`/atp/athlete/calendar?athletePlanId=${t}&startDate=${i}&endDate=${a}&lang=${s}`
							);
							yield (0, n.yJ)({ type: o.Uoj, atpRescheduleDays: l.data });
						} catch (t) {
							yield (0, n.yJ)({ type: o.Uol, error: t });
						}
					}),
					(0, n.jP)(o.nO7, function* (e) {
						try {
							const {
								athletePlanId: t,
								startDate: i,
								endDate: a,
								lang: s,
							} = e.payload;
							yield (0, n.yJ)({ type: o.rn3 });
							const l = (yield (0, n.T1)(
								r.q8.get,
								`/atp/athlete/calendar?athletePlanId=${t}&startDate=${i}&endDate=${a}&lang=${s}`
							)).data;
							if (l) {
								let e = [];
								Object.keys(l).map((t) => {
									const i = l[t].scheduleWorkoutId;
									i &&
										e.push(
											(0, n.T1)(r.tI.get, `/workout-service/schedule/${i}`)
										);
								});
								const t = yield (0, n.Q7)(e);
								Object.keys(l).map((e) => {
									t[e] && (l[e].workoutName = t[e].data.workout.workoutName);
								});
							}
							yield (0, n.yJ)({ type: o.PWo, atpCalendar: l });
						} catch (t) {
							yield (0, n.yJ)({ type: o.Uol, error: t });
						}
					}),
					(0, n.jP)(o.qGQ, function* (e) {
						try {
							const t = e.payload,
								i = yield (0, n.T1)(r.q8.get, `/atp/types/?lang=${t || 'en'}`);
							yield (0, n.yJ)({ type: o.gJ3, atpPlanTypes: i.data });
						} catch (t) {}
					}),
					(0, n.jP)(o.Vag, function* (e) {
						try {
							const e = yield (0, n.T1)(r.q8.get, '/atp/athlete/active');
							yield (0, n.yJ)({ type: o.TLl, activePlans: e.data });
						} catch (t) {}
					}),
					(0, n.jP)(o.C4w, function* (e) {
						try {
							const e = yield (0, n.T1)(r.q8.get, '/atp/athlete/completed');
							yield (0, n.yJ)({ type: o.U9W, completedPlans: e.data });
						} catch (t) {}
					}),
					(0, n.jP)(o.Ge4, function* (e) {
						try {
							const { athletePlanId: t, lang: i, callback: a } = e.payload,
								s = yield (0, n.T1)(
									r.q8.get,
									`/atp/athlete/plan?athletePlanId=${t}&lang=${i}`
								);
							yield (0, n.yJ)({ type: o.C2V, atpPlan: s.data }),
								a && (yield (0, n.T1)(c.G, a, s));
						} catch (t) {
							yield (0, n.yJ)({ type: o.n5B, error: t, action: e }),
								e.payload.callback &&
									(yield (0, n.T1)(c.j, e.payload.callback, t));
						}
					}),
					(0, n.jP)(o.o1N, function* (e) {
						try {
							const { workoutPlanId: t, lang: i } = e.payload,
								a = yield (0, n.T1)(
									r.q8.get,
									`/atp/setup/plan?workoutPlanId=${t}&lang=${i}`
								);
							yield (0, n.yJ)({ type: o.O_6, coachPlan: a.data });
						} catch (t) {
							yield (0, n.yJ)({ type: o.XD0, error: t, action: e });
						}
					}),
					(0, n.jP)(l.HF, function* ({ athletePlanId: e }) {
						try {
							const t = yield r.q8.post(
								`/atp/athlete/pause?athletePlanId=${e}`
							);
							yield (0, n.yJ)((0, l.dj)(t, 'pause'));
						} catch (t) {
							yield (0, n.yJ)((0, l.YQ)(t));
						}
					}),
					(0, n.jP)(
						l.ic,
						function* ({ athletePlanId: e, reason: t, callback: i }) {
							try {
								const a = yield r.q8.post(
									`/atp/athlete/unpause/${t}?athletePlanId=${e}`
								);
								yield (0, n.yJ)((0, l.dj)(a, 'unpause')),
									yield (0, n.T1)(d, i, a);
							} catch (a) {
								yield (0, n.yJ)((0, l.YQ)(a));
							}
						}
					),
					(0, n.jP)(
						l.Z4,
						function* ({
							athletePlanId: e,
							actionId: t,
							actionOptionId: i,
							callback: a,
						}) {
							try {
								yield (0, n.yJ)(
									(0, l.cR)({ athletePlanId: e, planStatus: 'react' })
								);
								const o = {
										athletePlanId: e,
										reaction: {
											actionId: t,
											actionOptionId: i,
											reactionDate: new (s())().format(
												s().HTML5_FMT.DATETIME_LOCAL_MS
											),
										},
									},
									c = yield r.q8.post('/atp/athlete/react', o);
								yield (0, n.yJ)((0, l.dj)(c)), yield (0, n.T1)(d, a, c);
							} catch (o) {
								yield (0, n.yJ)((0, l.YQ)(o));
							}
						}
					),
					(0, n.jP)(l.W0, function* ({ athletePlanId: e, callback: t }) {
						try {
							yield (0, n.yJ)((0, l.cR)({ athletePlanId: e }));
							const i = yield r.q8.post(`/atp/athlete/quit?athletePlanId=${e}`);
							yield (0, n.yJ)((0, l.dj)(i, 'quit')), yield (0, n.T1)(d, t, i);
						} catch (i) {
							yield (0, n.yJ)((0, l.YQ)(i));
						}
					}),
					(0, n.jP)(o.TNY, function* ({ workoutPlanTypeId: e, lang: t }) {
						try {
							const i = yield (0, n.T1)(
								r.q8.get,
								`/atp/types/content?workoutPlanTypeId=${e}&lang=${t}`
							);
							yield (0, n.yJ)({
								type: o.hk$,
								data: i.data,
								workoutPlanTypeId: e,
							});
						} catch (i) {
							yield (0, n.yJ)({ type: o.UJj, error: i });
						}
					}),
					(0, n.jP)(
						o.Qdd,
						function* ({
							planTypeId: e,
							prePlanWeeklyMileage: t,
							prePlanTrainingPace: i,
							selectedGoal: a,
							selectedPaceGoalTime: s,
						}) {
							let l = {
								planTypeId: e,
								prePlanWeeklyMileage: t,
								prePlanTrainingPace: i,
							};
							a && (l.selectedGoal = a), s && (l.selectedPaceGoalTime = s);
							try {
								const e = yield (0, n.T1)(
									r.q8.post,
									'/atp/setup/coachCaution',
									l
								);
								yield (0, n.yJ)({ type: o.eCA, data: e.data });
							} catch (c) {
								yield (0, n.yJ)({ type: o.nl0, error: c });
							}
						}
					),
					(0, n.jP)(o.WmP, function* ({ workoutPlanTypeId: e, unitType: t }) {
						try {
							const i = yield (0, n.T1)(
								r.q8.get,
								`/atp/setup/prePlanMileage?workoutPlanTypeId=${e}&unitType=${t}`
							);
							yield (0, n.yJ)({ type: o._Yt, data: i.data });
						} catch (i) {
							yield (0, n.yJ)({ type: o.Dbj, error: i });
						}
					}),
					(0, n.jP)(o.O0X, function* ({ workoutPlanTypeId: e, unitType: t }) {
						try {
							const i = yield (0, n.T1)(
								r.q8.get,
								`/atp/setup/prePlanTrainingPace?workoutPlanTypeId=${e}&unitType=${t}`
							);
							yield (0, n.yJ)({ type: o.Sc5, data: i.data });
						} catch (i) {
							yield (0, n.yJ)({ type: o.PRO, error: i });
						}
					}),
					(0, n.jP)(
						o.jR8,
						function* ({
							workoutPlanTypeId: e,
							prePlanTrainingPace: t,
							prePlanWeeklyMileage: i,
							lang: a,
						}) {
							try {
								const s = yield (0, n.T1)(
									r.q8.get,
									`/atp/setup/goals?planTypeId=${e}&prePlanTrainingPace=${t}&prePlanWeeklyMileage=${i}&lang=${a}`
								);
								yield (0, n.yJ)({ type: o.v3k, data: s.data });
							} catch (s) {
								yield (0, n.yJ)({ type: o.O_r, error: s });
							}
						}
					),
					(0, n.jP)(
						o.vJl,
						function* ({
							workoutPlanTypeId: e,
							prePlanWeeklyMileage: t,
							prePlanTrainingPace: i,
							lang: a,
						}) {
							try {
								const s = yield (0, n.T1)(
									r.q8.get,
									`/atp/setup/paceTimes?${e ? 'planTypeId=' + e + '&' : ''}&prePlanTrainingPace=${i}&prePlanWeeklyMileage=${t}&lang=${a}`
								);
								yield (0, n.yJ)({ type: o.vTv, data: s.data });
							} catch (s) {
								yield (0, n.yJ)({ type: o.aqZ, error: s });
							}
						}
					),
					(0, n.jP)(
						o.TIL,
						function* ({
							workoutPlanTypeId: e,
							goal: t,
							raceGoalTime: i,
							prePlanWeeklyMileage: a,
							prePlanTrainingPace: s,
							lang: l,
							callback: d,
						}) {
							try {
								const u = yield (0, n.T1)(
									r.q8.get,
									`/atp/setup/plans?planTypeId=${e}&lang=${l}&goal=${t}${i ? '&raceGoalTime=' + i : ''}&prePlanWeeklyMileage=${a}&prePlanTrainingPace=${s}`
								);
								d
									? yield (0, n.T1)(c.G, d, u)
									: yield (0, n.yJ)({ type: o.zo, data: u.data });
							} catch (u) {
								d
									? yield (0, n.T1)(c.j, d, u)
									: yield (0, n.yJ)({ type: o.Cpz, error: u });
							}
						}
					),
				];
			},
			876802: (e, t, i) => {
				'use strict';
				i.d(t, { M: () => f, jf: () => R, FU: () => v });
				var n = i(765722),
					a = i(627066),
					s = i(513058),
					r = i(316550);
				const o = {
					DEFAULT_MAX_CHART_SIZE: 99999,
					DEFAULT_MAX_POLYLINE_SIZE: 99999,
					mergeMetricsAndDescriptors: function (e) {
						let t = [],
							i = null;
						if (e && e.metricDescriptors && e.activityDetailMetrics) {
							i = e;
							let n = [...e.metricDescriptors],
								a = [...e.activityDetailMetrics];
							if (!a || 0 === a.length) return null;
							for (let e = 0; e < a[0].metrics.length; e++) t[e] = [];
							for (let e = 0; e < a.length; e++) {
								let i = a[e].metrics;
								for (let n = 0; n < i.length; n++) t[n][e] = i[n];
							}
							n.map((e, n) => {
								i[e.key] = t[e.metricsIndex];
							});
						}
						return i;
					},
				};
				var l = i(760953),
					c = i(507963),
					d = i(318383),
					u = i(576797),
					p = i(19045);
				const { DEFAULT_MAX_CHART_SIZE: y, DEFAULT_MAX_POLYLINE_SIZE: h } = o,
					g = 200,
					m = 200,
					A = ({ maxChartSize: e, maxPolylineSize: t }) =>
						`maxChartSize=${e}&maxPolylineSize=${t}&metric=sumDistance&metric=sumDuration&metric=directTimestamp&metric=directSpeed&metric=directPower&metric=directElevation&metric=directHeartRate`;
				function* _(e) {
					const t = A({ maxChartSize: g, maxPolylineSize: m });
					return (yield (0, a.Q7)(
						e.map((e) =>
							(0, a.T1)(
								n.tI.get,
								`/activity-service/activity/${e}/details?${t}`
							)
						)
					))
						.map(({ data: e }) => {
							const t = o.mergeMetricsAndDescriptors(e);
							return [e.activityId.toString(), t];
						})
						.reduce(p.vw, {});
				}
				const E = (e) => {
					const t = [];
					let i = 0;
					for (const n of e) {
						const e = n.map((e) => e + i);
						(i = e[e.length - 1]), t.push(e);
					}
					return t.flat();
				};
				var T = i(413551);
				const { DEFAULT_MAX_CHART_SIZE: C, DEFAULT_MAX_POLYLINE_SIZE: S } = o,
					I = 3e4;
				function v(e) {
					let t = e.indexOf('proxy/');
					return t > -1
						? e.substring(t + 5)
						: (function (e) {
								return e.substring(e.indexOf('/', 10));
							})(e);
				}
				function* f(e) {
					try {
						yield (0, a.yJ)({ type: r.ox_ });
						const t = (yield (0, a.Q7)(
							e.map((e) =>
								(0, a.T1)(n.tI.get, `/activity-service/activity/${e}`)
							)
						)).map((e) => e.data);
						return yield (0, a.yJ)((0, l.xC)({ childActivities: t })), t;
					} catch (t) {
						yield (0, a.yJ)((0, l.As)());
					}
				}
				function* D(e) {
					const t = yield (0, a.T1)(
						n.tI.get,
						`/activity-service/activity/v2/${e}/reconstruct`,
						{ timeout: I }
					);
					yield (0, a.yJ)((0, l.ty)({ activityMetricsDTO: t.data }));
				}
				function* N(e) {
					let t = !1;
					const i = v(e.location),
						r = e['location-in-milliseconds'];
					switch ((yield (0, a.T1)(n.tI.get, i)).status) {
						case 201:
						default:
							t = !1;
							break;
						case 202:
							t = !0;
					}
					t && (yield (0, s.cb)(+r), yield N(e));
				}
				const R = [
					(0, a.jP)(r.WXR, function* (e) {
						const { activityId: t } = e.payload;
						try {
							yield (0, a.yJ)((0, l.YU)());
							const e = yield (0, a.T1)(
								n.tI.get,
								`/activity-service/activity/${t}`
							);
							if (
								(yield (0, a.yJ)((0, l.h4)({ activityData: e.data })),
								e.data.isMultiSportParent)
							) {
								const { childIds: i } = e.data.metadataDTO;
								yield (0, a.T1)(f, i), yield (0, a.T1)(D, t);
							}
						} catch (i) {
							yield (0, a.yJ)((0, l.Yk)(i));
						}
					}),
					(0, a.jP)(r.nIQ, function* (e) {
						const { activityId: t } = e.payload;
						try {
							yield (0, a.yJ)((0, l.YU)());
							const e = yield (0, a.T1)(
									n.tI.get,
									`/activity-service/activity/${t}`
								),
								i = 'maxChartSize=200&maxPolylineSize=200',
								s = yield (0, a.T1)(
									n.tI.get,
									`/activity-service/activity/${t}/details?${i}`
								),
								r = { activityData: e.data, metricsData: s.data };
							yield (0, a.yJ)((0, l.h4)(r));
							const o = [+t];
							yield (0, a.T1)(f, o), yield (0, a.T1)(D, t);
						} catch (i) {
							yield (0, a.yJ)((0, l.Yk)(i));
						}
					}),
					(0, a.jP)(r.lXe, function* (e) {
						const {
							selectReconstructDTOs: t,
							navigationParams: i,
							isConvertOperation: s,
						} = e.payload;
						yield (0, a.yJ)((0, l.SE)());
						const r = yield (function* () {
								return (yield (0, a.Lt)()).multiSportActivitySummary;
							})(),
							{
								reconstructDTOs: o,
								analyticsData: p,
								convertAnalyticsString: y,
							} = t(r),
							{ activityId: h } = (0, c.Ki)(r),
							g = { reconstructRequest: o },
							m = { timeout: I };
						try {
							const e = yield (0, a.T1)(
								n.tI.put,
								`/activity-service/activity/v2/${h}/reconstruct`,
								g,
								m
							);
							if (202 === e.status) {
								yield (0, a.T1)(N, e.headers), yield (0, a.yJ)((0, l.x1)());
								const t = s
									? [`activity/manual/${h}/edit`, i].filter(Boolean).join('?')
									: [`activity/${h}`, i].filter(Boolean).join('?');
								d.default.navigate(t);
							}
							if (
								(s &&
									u.A.push({
										event: 'track_event',
										category: 'Advanced Multisport Editing',
										action: 'Convert to Multisport',
										label: y,
									}),
								p && !s)
							) {
								const {
									addedLegsCount: e,
									deletedLegsCount: t,
									editedLegsCount: i,
								} = p;
								u.A.push({
									event: 'track_event',
									category: 'Advanced Multisport Editing',
									action: 'Added legs',
									label: `count:  ${e}`,
								}),
									u.A.push({
										event: 'track_event',
										category: 'Advanced Multisport Editing',
										action: 'Deleted legs',
										label: `count:  ${t}`,
									}),
									u.A.push({
										event: 'track_event',
										category: 'Advanced Multisport Editing',
										action: 'Edited legs',
										label: `count:  ${i}`,
									});
							}
						} catch (A) {
							yield (0, a.yJ)((0, l.eA)());
						}
					}),
					(0, a.jP)(r.ZQw, function* (e) {
						const { legIndex: t } = e.payload;
						yield (0, a.yJ)((0, l.CG)(t)),
							yield (0, a.yJ)((0, l.mh)(T.G$)),
							yield (0, a.yJ)((0, l.mh)(T.Md));
					}),
					(0, a.jP)(r.Mc, function* (e) {
						yield (0, a.yJ)((0, l.og)(e.payload)),
							yield (0, a.yJ)((0, l.mh)(T.G$)),
							yield (0, a.yJ)((0, l.mh)(T.Md));
					}),
					(0, a.jP)(r.psl, function* (e) {
						const { activityId: t } = e.payload;
						try {
							yield (0, a.yJ)((0, l.YU)());
							const e = yield (0, a.T1)(
									n.tI.get,
									`/activity-service/activity/${t}`
								),
								{ data: i } = e;
							if (
								(yield (0, a.yJ)((0, l.h4)({ activityData: i })),
								i.isMultiSportParent)
							) {
								const { childIds: e } = i.metadataDTO,
									t = yield (0, a.T1)(f, e),
									n = yield (0, a.T1)(_, e),
									s = t.map((e) => ({
										...n[e.activityId],
										typeId: e.activityTypeDTO.typeId,
										typeKey: e.activityTypeDTO.typeKey,
									})),
									r = ((e) => {
										const t = {
											sumDistance: e.map((e) => e.sumDistance).flat(),
											sumDuration: E(e.map((e) => e.sumDuration)),
											directTimestamp: e.map((e) => e.directTimestamp).flat(),
											directSpeed: e.map((e) => e.directSpeed).flat(),
											directPower: e.map((e) => e.directPower).flat(),
											directElevation: e.map((e) => e.directElevation).flat(),
											directHeartRate: e.map((e) => e.directHeartRate).flat(),
											polyline: e
												.map((e) =>
													e.geoPolylineDTO ? e.geoPolylineDTO.polyline : []
												)
												.flat(),
										};
										return (0, p.lg)(t), t;
									})(s),
									o = ((e) => {
										const t = { metricsCount: 0, polylineCount: 0 },
											i = [];
										for (const n of e) {
											const e = {
												activityId: n.activityId,
												typeKey: n.typeKey,
												typeId: n.typeId,
												metricsStartIdx: t.metricsCount,
												polylineStartIdx: t.polylineCount,
												timestamp: null,
											};
											i.push(e), (t.metricsCount += n.metricsCount);
											const a = n.geoPolylineDTO
												? n.geoPolylineDTO.polyline.length
												: 0;
											t.polylineCount += a;
										}
										return (
											i.push({
												activityId: null,
												typeKey: null,
												typeId: null,
												metricsStartIdx: t.metricsCount - 1,
												polylineStartIdx: t.polylineCount - 1,
												timestamp: null,
											}),
											i
										);
									})(s);
								yield (0, a.yJ)(
									(0, l.M$)({ metricsByKey: r, legIndexData: o })
								);
							}
						} catch (i) {
							yield (0, a.yJ)((0, l.Yk)(i));
						}
					}),
				];
			},
			447349: (e, t, i) => {
				'use strict';
				function n(e, t) {
					e && e.onSuccess && e.onSuccess(t.data);
				}
				function a(e, t) {
					e && e.onError && e.onError(t);
				}
				i.d(t, { G: () => n, j: () => a });
			},
			803190: (e, t, i) => {
				'use strict';
				i.d(t, { a1: () => d, sU: () => u });
				var n = i(627066),
					a = i(765722),
					s = i(233544),
					r = i(316550),
					o = i(462026),
					l = i(447349),
					c = i(87786);
				const d = { start: 1, limit: 100, sortOrder: 'desc' };
				const u = [
					(0, n.jP)(s.X4, function* (e) {
						try {
							yield (0, n.yJ)({ type: s.IN });
							const t = yield (0, n.T1)(
								a.tI.get,
								`/goal-service/goal/user/${e.userGoalType}/${e.trackingPeriodType}`
							);
							yield (0, n.yJ)({
								type: s.ne,
								userGoalType: e.userGoalType,
								trackingPeriodType: e.trackingPeriodType,
								data: t.data,
							});
						} catch (t) {
							yield (0, n.yJ)({
								type: s.ID,
								userGoalType: e.userGoalType,
								trackingPeriodType: e.trackingPeriodType,
								data: {},
							});
						}
					}),
					(0, n.jP)(
						r.YVf,
						function* ({
							status: e,
							start: t = d.start,
							limit: i = d.limit,
							sortOrder: s = d.sortOrder,
							replace: r = !1,
						}) {
							const l = (0, c.zJ)({
								status: e,
								start: t,
								limit: i,
								sortOrder: s,
							});
							try {
								yield (0, n.yJ)((0, o.OHR)());
								const c = yield a.tI.get(`/goal-service/goal/goals${l}`);
								yield (0, n.yJ)((0, o.EOC)(c.data, e, t, i, s, r));
							} catch (u) {}
						}
					),
					(0, n.jP)(
						r.cTA,
						function* ({
							callback: e,
							start: t = d.start,
							limit: i = d.limit,
							sortOrder: s = d.sortOrder,
						}) {
							const r = (0, c.zJ)({
								status: 'past',
								start: t,
								limit: i,
								sortOrder: s,
							});
							try {
								yield (0, n.yJ)((0, o.OHR)());
								const c = {
									active: (yield a.tI.get(
										'/goal-service/goal/goals?status=active'
									)).data,
									future: (yield a.tI.get(
										'/goal-service/goal/goals?status=future'
									)).data,
									past: (yield a.tI.get(`/goal-service/goal/goals${r}`)).data,
								};
								yield (0, n.yJ)((0, o.HKn)(c, t, i, s)),
									yield (0, n.T1)(l.G, e, c);
							} catch (u) {
								yield (0, n.T1)(l.j, e, u);
							}
						}
					),
					(0, n.jP)(r.k_1, function* ({ goalId: e, callback: t }) {
						try {
							yield (0, n.yJ)((0, o.iwK)(e));
							const i = yield a.tI.delete(`/goal-service/goal/goal/${e}`);
							yield (0, n.T1)(l.G, t, i);
						} catch (i) {
							yield (0, n.T1)(l.j, t, i);
						}
					}),
					(0, n.jP)(r.pL, function* ({ data: e, callback: t }) {
						try {
							yield (0, n.yJ)((0, o.XYI)()), yield (0, n.yJ)({ type: r.Y3S });
							const i = yield a.tI.post('/goal-service/goal/goal', e);
							yield (0, n.yJ)({ type: r.dAD }), yield (0, n.T1)(l.G, t, i);
						} catch (i) {
							yield (0, n.yJ)({ type: r.wOg }), yield (0, n.T1)(l.j, t, i);
						}
					}),
					(0, n.jP)(r.wuq, function* ({ goalId: e, data: t, callback: i }) {
						try {
							yield (0, n.yJ)({ type: r.RPB, goalId: e, data: t });
							const s = yield a.tI.put(`/goal-service/goal/goal/${e}`, t);
							yield (0, n.yJ)({ type: r.IgD, goalId: e, data: t }),
								yield (0, n.T1)(l.G, i, s);
						} catch (s) {
							yield (0, n.yJ)({ type: r.T2z, data: t, goalId: e }),
								yield (0, n.T1)(l.j, i, s);
						}
					}),
				];
			},
			726009: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, vA: () => r });
				var n = i(734906),
					a = i(765722);
				const s = (0, n.xP)({
						reducerPath: 'activityApi',
						baseQuery: (
							({ baseUrl: e } = { baseUrl: '' }) =>
							async ({ url: t, method: i, data: n, params: s }) => {
								try {
									return {
										data: (
											await (0, a.tI)({
												url: e + t,
												method: i,
												data: n,
												params: s,
											})
										).data,
									};
								} catch (l) {
									var r, o;
									let e = l;
									return {
										error: {
											status:
												null === (r = e.response) || void 0 === r
													? void 0
													: r.status,
											data:
												(null === (o = e.response) || void 0 === o
													? void 0
													: o.data) || e.message,
										},
									};
								}
							}
						)({ baseUrl: 'activity-service/' }),
						endpoints: (e) => ({
							updateActivityData: e.mutation({
								query: ({ activityId: e, data: t }) => ({
									url: `activity/${e}`,
									method: 'PUT',
									data: t,
								}),
							}),
						}),
					}),
					{ useUpdateActivityDataMutation: r } = s,
					o = s;
			},
			295021: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => c, Z9: () => r, aq: () => o });
				var n = i(734906),
					a = i(765722);
				const s = (0, n.xP)({
						reducerPath: 'courseApi',
						baseQuery: (
							({ baseUrl: e } = { baseUrl: '' }) =>
							async ({ url: t, method: i, data: n, params: s }) => {
								try {
									return {
										data: (
											await (0, a.tI)({
												url: e + t,
												method: i,
												data: n,
												params: s,
											})
										).data,
									};
								} catch (l) {
									var r, o;
									let e = l;
									return {
										error: {
											status:
												null === (r = e.response) || void 0 === r
													? void 0
													: r.status,
											data:
												(null === (o = e.response) || void 0 === o
													? void 0
													: o.data) || e.message,
										},
									};
								}
							}
						)({ baseUrl: 'course-service/' }),
						endpoints: (e) => ({
							getCuratedCourseCandidates: e.query({
								query: ({ activityId: e }) => ({
									url: `curated/matching/candidates/${e}`,
									method: 'GET',
								}),
							}),
							deleteCuratedCourseCandidate: e.mutation({
								query: ({ activityId: e }) => ({
									url: `curated/matching/candidates/${e}`,
									method: 'DELETE',
								}),
							}),
							saveMatchingCandidate: e.mutation({
								query: (e) => ({
									url: 'validation/candidates',
									method: 'POST',
									data: e,
								}),
							}),
						}),
					}),
					{
						useGetCuratedCourseCandidatesQuery: r,
						useDeleteCuratedCourseCandidateMutation: o,
						useSaveMatchingCandidateMutation: l,
					} = s,
					c = s;
			},
			746602: (e, t, i) => {
				'use strict';
				i.d(t, {
					$2: () => le,
					$4: () => M,
					$J: () => se,
					$P: () => G,
					$T: () => F,
					Al: () => me,
					An: () => de,
					Ay: () => Te,
					BF: () => J,
					CX: () => _e,
					DQ: () => Ae,
					Dr: () => ge,
					J2: () => ue,
					Jk: () => ce,
					LO: () => oe,
					O2: () => re,
					OR: () => ae,
					OW: () => f,
					Rl: () => Ee,
					SB: () => ye,
					Ul: () => Z,
					V: () => x,
					VD: () => ne,
					Vi: () => ee,
					Vl: () => pe,
					XZ: () => V,
					Z9: () => B,
					_5: () => q,
					e3: () => H,
					gV: () => ie,
					gr: () => Q,
					hc: () => w,
					hn: () => te,
					is: () => R,
					jQ: () => S,
					kC: () => U,
					kt: () => P,
					nn: () => D,
					oL: () => b,
					qo: () => X,
					se: () => he,
					tt: () => W,
					wU: () => K,
					yD: () => j,
					yh: () => N,
				});
				var n = i(734906),
					a = i(100075),
					s = i(422460),
					r = i(758948),
					o = i(630105);
				const l = new Date(),
					c = new Date(l),
					d = new Date(),
					u = new Date();
				c.setDate(c.getDate() + 1),
					d.setHours(0, 0, 0, 0),
					u.setHours(23, 59, 59, 999);
				const p = s.Ay.formatISODate(new Date()),
					y = s.Ay.formatISODate(c),
					h = s.Ay.formatConnectTimestamp(d),
					g = s.Ay.formatConnectTimestamp(u),
					m = r.A.subtractDays(l, 27),
					A = s.Ay.formatISODate(m),
					_ = r.A.subtractDays(l, 364),
					E = s.Ay.formatISODate(_),
					T = new a.l4('/graphql-gateway/graphql', {
						requestMiddleware: async (e) => {
							const t = await o.A.getToken();
							return {
								...e,
								headers: {
									...e.headers,
									Authorization: `Bearer ${t}`,
									'DI-Backend': window.DI_BACKENDS && window.DI_BACKENDS.gcapi,
								},
							};
						},
					}),
					C = (0, n.xP)({
						reducerPath: 'dashboardDataApi',
						tagTypes: [
							'Workout',
							'BP',
							'HealthSnapshot',
							'GolfScorecard',
							'Weight',
							'HeatAcclimationSnapshot',
							'UserDailySummary',
							'FitnessAgeSnapshot',
							'WeightInterval',
							'Pregnancy',
							'MenstrualCycle',
							'HRVStatus',
							'TrainingLoad',
							'TrainingStatusWeekly',
							'Vo2MaxSnapshot',
							'Sleep',
							'SleepSummaries',
							'UserGoals',
							'Activities',
							'ActivityPolyline',
							'Workout',
							'BloodPressure',
							'HealthSnapshot',
							'HeatAcclimationSnapshot',
							'GolfScorecard',
							'PulseOx',
							'EnduranceScore',
							'PowerCurve',
							'PowerCurveLifetime',
							'HeartRate',
							'HeartRateVariability',
							'TrainingPlan',
							'TrainingLoadBalance',
							'RunningLactateThreshold',
							'PowerToWeight',
							'CriticalSwimSpeed',
							'HillScore',
							'FunctionalThresholdPower',
							'Event',
							'TrainingReadiness',
							'ActivityStats',
							'AllActivityStats',
							'TrainingReadiness',
							'LatestWeight',
							'LatestFitnessAge',
							'Event',
							'LastActivity',
							'EpochData',
							'ActivityTrendsStreak',
							'UserDailySummaryV2',
							'Vo2Max',
							'JetLagData',
							'TimelineEvents',
							'PersonalRecords',
							'AdhocChallenges',
							'AdhocChallengePendingInvite',
							'BadgeChallenges',
							'ExpeditionsChallenges',
							'ActivityList',
						],
						baseQuery: async ({ body: e }) => {
							try {
								return { data: await T.request(e) };
							} catch (t) {
								return t instanceof a.MZ
									? { error: { status: t.response.status, data: t } }
									: { error: { status: 500, data: t } };
							}
						},
						refetchOnMountOrArgChange: !0,
						endpoints: (e) => ({
							getActivities: e.query({
								query: ({
									displayName: e,
									startTimestampLocal: t,
									endTimestampLocal: i,
								}) => ({
									body: a.J1`query{activitiesScalar(displayName:"${e}", startTimestampLocal:"${t}", endTimestampLocal:"${i}", limit:40)}`,
									providesTags: ['Activities'],
								}),
							}),
							getLastActivity: e.query({
								query: () => ({
									body: a.J1`
                    query {
                        firstLastActivityScalar
                    }
                `,
									providesTags: ['LastActivity'],
								}),
							}),
							getActivityPolyline: e.query({
								query: ({ activityId: e, maxPolylineSize: t }) => ({
									body: a.J1`query{activityPolylineScalar(activityId:"${e}", maxPolylineSize:${t})}`,
									providesTags: ['ActivityPolyline'],
								}),
							}),
							getWorkouts: e.query({
								query: () => ({
									body: a.J1`query{workoutScheduleSummariesScalar(startDate:"${p}", endDate:"${y}")}`,
								}),
								providesTags: ['Workout'],
							}),
							getBloodPressure: e.query({
								query: ({ startDate: e, endDate: t }) => ({
									body: a.J1`query{bloodPressureScalar(startDate:"${e}", endDate:"${t}")}`,
									providesTags: ['BloodPressure'],
								}),
							}),
							getHealthSnapshot: e.query({
								query: ({
									startDateISOFormatted: e = p,
									endDateISOFormatted: t = p,
								}) => ({
									body: a.J1`query{healthSnapshotScalar(startDate:"${e}", endDate:"${t}")}`,
									providesTags: ['HealthSnapshot'],
								}),
							}),
							getHeatAcclimationSnapshot: e.query({
								query: () => ({
									body: a.J1`query{heatAltitudeAcclimationScalar(date:"${p}")}`,
									providesTags: ['HeatAcclimationSnapshot'],
								}),
							}),
							getTrainingLoadBalance: e.query({
								query: () => ({
									body: a.J1`query{trainingLoadBalanceScalar(calendarDate:"${p}", fullHistoryScan:true)}`,
									providesTags: ['TrainingLoadBalance'],
								}),
							}),
							getTrainingReadiness: e.query({
								query: () => ({
									body: a.J1`query{trainingReadinessScalar(calendarDate:"${p}")}`,
									providesTags: ['TrainingReadiness'],
								}),
							}),
							getGolfScorecard: e.query({
								query: ({ startDateLocal: e = h, endDateLocal: t = g }) => ({
									body: a.J1`query{golfScorecardScalar(startTimestampLocal:"${e}", endTimestampLocal:"${t}")}`,
									providesTags: ['GolfScorecard'],
								}),
							}),
							getWeight: e.query({
								query: ({
									startDateISOFormatted: e = p,
									endDateISOFormatted: t = p,
								}) => ({
									body: a.J1`query{weightScalar(startDate:"${e}", endDate:"${t}")}`,
									providesTags: ['Weight'],
								}),
							}),
							getUserDailySummary: e.query({
								query: ({ startDate: e, endDate: t }) => ({
									body: a.J1`query{userDailySummaryScalar(startDate:"${e}", endDate:"${t}")}`,
									providesTags: ['UserDailySummary'],
								}),
							}),
							getEnduranceScore: e.query({
								query: ({ startDate: e, endDate: t, aggregation: i }) => ({
									body: a.J1`query{enduranceScoreScalar(startDate:"${e}", endDate:"${t}", aggregation:"${i}")}`,
									providesTags: ['EnduranceScore'],
								}),
							}),
							getFitnessAgeSnapshot: e.query({
								query: () => ({
									body: a.J1`query{fitnessAgeScalar(startDate:"${A}", endDate:"${p}")}`,
									providesTags: ['FitnessAgeSnapshot'],
								}),
							}),
							getLatestFitnessAge: e.query({
								query: () => ({
									body: a.J1`
                    query {
                        latestFitnessAgeScalar(asOfDate:"${p}")
                    }
                `,
									providesTags: ['LatestFitnessAge'],
								}),
							}),
							getWeightInterval: e.query({
								query: ({ startDate: e, endDate: t }) => ({
									body: a.J1`query{weightScalar(startDate:"${e}", endDate:"${t}")}`,
									providesTags: ['WeightInterval'],
								}),
							}),
							getPregnancy: e.query({
								query: () => ({
									body: a.J1`query{pregnancyScalar(date:"${p}")}`,
									providedTags: ['Pregnancy'],
								}),
							}),
							getMenstrualCycle: e.query({
								query: () => ({
									body: a.J1`query{menstrualCycleScalar(date:"${p}")}`,
									providedTags: ['MenstrualCycle'],
								}),
							}),
							getHrvStatus: e.query({
								query: ({ startDate: e, endDate: t }) => ({
									body: a.J1`query{heartRateVariabilityScalar(startDate:"${e}", endDate:"${t}")}`,
									providedTags: ['HrvStatus'],
								}),
							}),
							getTrainingStatusDaily: e.query({
								query: () => ({
									body: a.J1`query{trainingStatusDailyScalar(calendarDate:"${p}")}`,
									providedTags: ['TrainingStatusDaily'],
								}),
							}),
							getTrainingStatusWeekly: e.query({
								query: ({ startDate: e, endDate: t, displayName: i }) => ({
									body: a.J1`query{trainingStatusWeeklyScalar(startDate:"${e}", endDate:"${t}", displayName:"${i}")}`,
									providedTags: ['TrainingStatusWeekly'],
								}),
							}),
							getVo2MaxSnapshot: e.query({
								query: () => ({
									body: a.J1`query{vo2MaxScalar(startDate:"${A}", endDate:"${p}")}`,
									providesTags: ['Vo2MaxSnapshot'],
								}),
							}),
							getVo2Max: e.query({
								query: ({ sport: e }) => ({
									body: a.J1`query{vo2MaxScalar(startDate:"${A}", endDate:"${p}", sport:"${e}")}`,
									providesTags: ['Vo2Max'],
								}),
							}),
							getPulseOx: e.query({
								query: () => ({
									body: a.J1`query{spO2AcclimationScalar(date:"${p}")}`,
									providedTags: ['PulseOx'],
								}),
							}),
							getSleep: e.query({
								query: () => ({
									body: a.J1`query{sleepScalar(date:"${p}", sleepOnly: true)}`,
									providesTags: ['Sleep'],
								}),
							}),
							getHeartRate: e.query({
								query: () => ({
									body: a.J1`query{heartRateScalar(date:"${p}")}`,
									providesTags: ['HeartRate'],
								}),
							}),
							getHeartRateVariability: e.query({
								query: ({ startDate: e, endDate: t }) => ({
									body: a.J1`query{heartRateVariabilityScalar(startDate:"${e}", endDate:"${t}")}`,
									providesTags: ['HeartRateVariability'],
								}),
							}),
							getSleepSummaries: e.query({
								query: ({ startDate: e, endDate: t }) => ({
									body: a.J1`query{sleepSummariesScalar(startDate:"${e}", endDate:"${t}")}`,
									providesTags: ['SleepSummaries'],
								}),
							}),
							getUserGoals: e.query({
								query: () => ({
									body: a.J1`
                    query {
                        userGoalsScalar
                    }
                `,
									providesTags: ['UserGoals'],
								}),
							}),
							getPowerCurveSnapshot: e.query({
								query: () => ({
									body: a.J1`query{powerCurveScalar(startDate:"${A}", endDate:"${p}")}`,
									providesTags: ['PowerCurve'],
								}),
							}),
							getPowerCurveLifetimeSnapshot: e.query({
								query: () => ({
									body: a.J1`
                    query {
                        powerCurveScalar(startDate: null, endDate: null)
                    }
                `,
									providesTags: ['PowerCurveLifetime'],
								}),
							}),
							getTrainingPlans: e.query({
								query: ({ locale: e, firstDayOfWeek: t }) => ({
									body: a.J1`query{trainingPlanScalar(calendarDate:"${p}", lang:"${e}", firstDayOfWeek:"${t}")}`,
									providesTags: ['TrainingPlan'],
								}),
							}),
							getRunningLactateThreshold: e.query({
								query: () => ({
									body: a.J1`
                    query {
                        runningLactateThresholdScalar
                    }
                `,
									providesTags: ['RunningLactateThreshold'],
								}),
							}),
							getPowerToWeight: e.query({
								query: ({ sport: e }) => ({
									body: a.J1`query{powerToWeightScalar(date:"${p}", sports:"${e}")}`,
									providesTags: ['PowerToWeight'],
								}),
							}),
							getCriticalSwimSpeed: e.query({
								query: () => ({
									body: a.J1`query{criticalSwimSpeedScalar(startDate:"${E}", endDate:"${p}")}`,
									providesTags: ['CriticalSwimSpeed'],
								}),
							}),
							getHillScore: e.query({
								query: () => ({
									body: a.J1`query{hillScoreScalar(startDate:"${A}", endDate:"${p}", aggregation:"${'weekly'}")}`,
									providesTags: ['HillScore'],
								}),
							}),
							getFunctionalThresholdPower: e.query({
								query: ({ startDate: e, endDate: t, sports: i }) => ({
									body: a.J1`query{functionalThresholdPowerScalar(startDate:"${e}", endDate:"${t}", sports:"${i}")}`,
									providedTags: ['FunctionalThresholdPower'],
								}),
							}),
							getLatestWeight: e.query({
								query: () => ({
									body: a.J1`
                    query {
                        latestWeightScalar(asOfDate:"${p}")
                    }
                `,
									providesTags: ['LatestWeight'],
								}),
							}),
							getActivityStats: e.query({
								query: ({ aggregation: e, startDate: t, endDate: i }) => ({
									body: a.J1`query{activityStatsScalar(
                    aggregation:"${e}",
                    startDate:"${t}",
                    endDate:"${i}",
                    metrics:["duration","distance"],
                    activityType:["running","cycling","swimming","walking","multi_sport","fitness_equipment","para_sports"],
                    groupByParentActivityType:true,
                    standardizedUnits: true)}`,
									providesTags: ['ActivityStats'],
								}),
							}),
							getAllActivityStats: e.query({
								query: ({ aggregation: e, startDate: t, endDate: i }) => ({
									body: a.J1`query{activityStatsScalar(
                    aggregation:"${e}",
                    startDate:"${t}",
                    endDate:"${i}",
                    metrics:["duration","distance"],
                    groupByParentActivityType:false,
                    standardizedUnits: true)}`,
									providesTags: ['AllActivityStats'],
								}),
							}),
							getActivityTrendsStreak: e.query({
								query: ({ activityType: e, date: t }) => ({
									body: a.J1`query{activityTrendsScalar(activityType:"${e}",date:"${t}")}`,
									providesTags: ['ActivityTrendsStreak'],
								}),
							}),
							getEvents: e.query({
								query: () => ({
									body: a.J1`query{myDayCardEventsScalar(timeZone:"GMT", date:"${p}")}`,
									providesTags: ['Event'],
								}),
							}),
							getEpochData: e.query({
								query: ({ includeParams: e }) => ({
									body: a.J1`query{epochChartScalar(date:"${p}", include:${JSON.stringify(e)})}`,
									providesTags: ['EpochData'],
								}),
							}),
							userDailySummaryV2: e.query({
								query: ({ startDate: e, endDate: t }) => ({
									body: a.J1`query{userDailySummaryV2Scalar(startDate:"${e}", endDate:"${t}")}`,
									providesTags: ['UserDailySummaryV2'],
								}),
							}),
							getJetLagData: e.query({
								query: () => ({
									body: a.J1`query{jetLagScalar(date:"${p}")}`,
									providesTags: ['JetLagData'],
								}),
							}),
							getTimelineEvents: e.query({
								query: () => ({
									body: a.J1`query{dailyEventsScalar(date:"${p}")}`,
									providesTags: ['TimelineEvents'],
								}),
							}),
							getPersonalRecords: e.query({
								query: () => ({
									body: a.J1`
                    query {
                        personalRecordsScalar
                    }
                `,
									providedTags: ['PersonalRecords'],
								}),
							}),
							getAdhocChallenges: e.query({
								query: () => ({
									body: a.J1`
                    query {
                        adhocChallengesScalar
                    }
                `,
									providesTags: ['AdhocChallenges'],
								}),
							}),
							getAdhocChallengePendingInvite: e.query({
								query: () => ({
									body: a.J1`
                    query {
                        adhocChallengePendingInviteScalar
                    }
                `,
									providesTags: ['AdhocChallengePendingInvite'],
								}),
							}),
							getBadgeChallenges: e.query({
								query: () => ({
									body: a.J1`
                    query {
                        badgeChallengesScalar
                    }
                `,
									providesTags: ['BadgeChallenges'],
								}),
							}),
							getExpeditionsChallenges: e.query({
								query: () => ({
									body: a.J1`
                    query {
                        expeditionsChallengesScalar
                    }
                `,
									providesTags: ['ExpeditionsChallenges'],
								}),
							}),
							getActivityList: e.query({
								query: ({ start: e, limit: t }) => ({
									body: a.J1`query{searchActivitiesScalar(start:${e}, limit:${t})}`,
									providesTags: ['ActivityList'],
								}),
							}),
						}),
						transformResponse: (e) => e.data,
					}),
					{
						useGetActivitiesQuery: S,
						useGetLastActivityQuery: I,
						useGetActivityPolylineQuery: v,
						useGetWorkoutsQuery: f,
						useGetBloodPressureQuery: D,
						useGetHealthSnapshotQuery: N,
						useGetGolfScorecardQuery: R,
						useGetHeatAcclimationSnapshotQuery: b,
						useGetFitnessAgeSnapshotQuery: L,
						useGetWeightQuery: P,
						useGetUserDailySummaryQuery: O,
						useGetPregnancyQuery: w,
						useGetMenstrualCycleQuery: F,
						useGetWeightIntervalQuery: k,
						useGetHrvStatusQuery: U,
						useGetTrainingStatusDailyQuery: M,
						useGetTrainingStatusWeeklyQuery: G,
						useGetVo2MaxSnapshotQuery: x,
						useGetUserGoalsQuery: B,
						useGetPulseOxQuery: H,
						useGetSleepQuery: V,
						useGetSleepSummariesQuery: W,
						useGetEnduranceScoreQuery: J,
						useGetPowerCurveSnapshotQuery: Y,
						useGetPowerCurveLifetimeSnapshotQuery: $,
						useGetHeartRateQuery: j,
						useGetTrainingLoadBalanceQuery: K,
						useGetHeartRateVariabilityQuery: z,
						useGetTrainingPlansQuery: q,
						useGetRunningLactateThresholdQuery: Q,
						useGetPowerToWeightQuery: X,
						useGetCriticalSwimSpeedQuery: Z,
						useGetHillScoreQuery: ee,
						useGetFunctionalThresholdPowerQuery: te,
						useGetActivityStatsQuery: ie,
						useGetAllActivityStatsQuery: ne,
						useGetTrainingReadinessQuery: ae,
						useGetLatestWeightQuery: se,
						useGetLatestFitnessAgeQuery: re,
						useGetEventsQuery: oe,
						useGetEpochDataQuery: le,
						useGetActivityTrendsStreakQuery: ce,
						useUserDailySummaryV2Query: de,
						useGetVo2MaxQuery: ue,
						useGetJetLagDataQuery: pe,
						useGetTimelineEventsQuery: ye,
						useGetPersonalRecordsQuery: he,
						useGetAdhocChallengesQuery: ge,
						useGetAdhocChallengePendingInviteQuery: me,
						useGetBadgeChallengesQuery: Ae,
						useGetExpeditionsChallengesQuery: _e,
						useGetActivityListQuery: Ee,
					} = C,
					Te = C;
			},
			361168: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => d, R0: () => c });
				var n = i(734906),
					a = i(765722),
					s = i(80879);
				s.Ay.loadNamespaces(['units', 'workout', 'activity']);
				const r = [
						1, 2, 5, 10, 20, 30, 60, 120, 300, 600, 1200, 1800, 3600, 7200,
					],
					o = [1, 100],
					l = (0, n.xP)({
						reducerPath: 'powerCurveApi',
						baseQuery: (
							({ baseUrl: e } = { baseUrl: '' }) =>
							async ({ url: t, method: i, data: n, params: s }) => {
								try {
									return {
										data: (
											await (0, a.tI)({
												url: e + t,
												method: i,
												data: n,
												params: s,
											})
										).data,
									};
								} catch (l) {
									var r, o;
									let e = l;
									return {
										error: {
											status:
												null === (r = e.response) || void 0 === r
													? void 0
													: r.status,
											data:
												(null === (o = e.response) || void 0 === o
													? void 0
													: o.data) || e.message,
										},
									};
								}
							}
						)({ baseUrl: 'fitnessstats-service/powerCurve/' }),
						endpoints: (e) => ({
							getPowerCurveWorkoutTargets: e.query({
								query: ({ startDate: e, endDate: t }) => ({
									url: 'workoutTargets',
									method: 'GET',
									params: { startDate: e, endDate: t },
								}),
								transformResponse: (e, t, i) => (
									((e = e.filter(function (e) {
										return (
											r.includes(e.duration) &&
											e.duration <= 7200 &&
											!e.interpolated
										);
									})).entries = []),
									e.forEach(function (t) {
										t.targetDropdownValues = [];
										for (let e = o[0]; e <= o[1]; e += 1) {
											const i = {},
												n =
													t.duration < 60
														? s.Ay.t('activity:avg_power_range_customsec', {
																0: t.duration,
															})
														: t.duration < 3600
															? t.duration / 60 +
																' ' +
																s.Ay.t('units:activity_duration_unit')
															: s.Ay.t('common:time_hour', {
																	0: t.duration / 3600,
																}),
												a = t.power
													? '(' + Math.round((t.power * e) / 100) + ' W)'
													: '(' + s.Ay.t('workout:no_data_power_curve') + ')',
												r = t.power
													? t.power - 10 + ' - ' + (t.power + 10) + ' W'
													: s.Ay.t('workout:no_data_power_curve');
											(i.percentage = e),
												(i.powerAtPercentage = t.power
													? +Math.round((t.power * e) / 100) + ' W'
													: s.Ay.t('workout:no_data_power_curve')),
												(i.text = e + '% ' + a),
												(i.label =
													e +
													'% ' +
													s.Ay.t('workout:of') +
													' ' +
													n +
													' ' +
													s.Ay.t('units:power') +
													'</br>(' +
													r +
													')'),
												t.targetDropdownValues.push(i);
										}
										e.entries[t.duration] = t;
									}),
									e
								),
							}),
						}),
					}),
					{ useGetPowerCurveWorkoutTargetsQuery: c } = l,
					d = l;
			},
			590015: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => d,
					gU: () => o,
					k1: () => l,
					ol: () => c,
					us: () => r,
				});
				var n = i(734906),
					a = i(765722);
				const s = (0, n.xP)({
						reducerPath: 'setUpApi',
						baseQuery: (
							({ baseUrl: e } = { baseUrl: '' }) =>
							async ({ url: t, method: i, data: n, params: s }) => {
								try {
									return {
										data: (
											await (0, a.tI)({
												url: e + t,
												method: i,
												data: n,
												params: s,
											})
										).data,
									};
								} catch (l) {
									var r, o;
									let e = l;
									return {
										error: {
											status:
												null === (r = e.response) || void 0 === r
													? void 0
													: r.status,
											data:
												(null === (o = e.response) || void 0 === o
													? void 0
													: o.data) || e.message,
										},
									};
								}
							}
						)({ baseUrl: '/userfocus-service' }),
						tagTypes: ['Dashboard'],
						endpoints: (e) => ({
							postSuggestedFocus: e.mutation({
								query: (e) => ({
									url: '/focus/suggestedFocuses',
									method: 'POST',
									data: e,
								}),
							}),
							getDashboardConfig: e.query({
								query: () => ({ url: '/dashboard', method: 'GET' }),
								providesTags: ['Dashboard'],
							}),
							updateDashboard: e.mutation({
								query: ({ config: e }) => ({
									url: '/dashboard',
									method: 'PUT',
									data: e,
								}),
								invalidatesTags: ['Dashboard'],
							}),
						}),
					}),
					{
						usePostSuggestedFocusMutation: r,
						useGetDashboardConfigQuery: o,
						useUpdateDashboardMutation: l,
						useLazyGetDashboardConfigQuery: c,
					} = s,
					d = s;
			},
			86429: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => o, Bd: () => r });
				var n = i(734906),
					a = i(765722);
				const s = (0, n.xP)({
						reducerPath: 'subscriptionApi',
						baseQuery: (
							({ baseUrl: e } = { baseUrl: '' }) =>
							async ({ url: t, method: i, data: n, params: s }) => {
								try {
									return {
										data: (
											await (0, a.Z2)({
												url: e + t,
												method: i,
												data: n,
												params: s,
											})
										).data,
									};
								} catch (l) {
									var r, o;
									let e = l;
									return {
										error: {
											status:
												null === (r = e.response) || void 0 === r
													? void 0
													: r.status,
											data:
												(null === (o = e.response) || void 0 === o
													? void 0
													: o.data) || e.message,
										},
									};
								}
							}
						)({ baseUrl: '/api/subscription/' }),
						endpoints: (e) => ({
							getSubscriptionData: e.query({
								query: ({ customerGuid: e }) => ({
									url: `customers/${e}/subscriptions`,
									method: 'GET',
								}),
							}),
						}),
					}),
					{ useGetSubscriptionDataQuery: r } = s,
					o = s;
			},
			785221: (e, t, i) => {
				'use strict';
				i.d(t, {
					$6: () => L,
					Ay: () => $,
					BY: () => G,
					Ch: () => y,
					Cq: () => l,
					J2: () => J,
					LJ: () => E,
					Ni: () => H,
					Nt: () => D,
					Oe: () => P,
					Q2: () => k,
					Q5: () => b,
					R_: () => Y,
					Rp: () => V,
					TJ: () => w,
					Ux: () => x,
					Vv: () => U,
					YO: () => p,
					_z: () => N,
					b4: () => W,
					cN: () => A,
					ce: () => C,
					e5: () => S,
					fv: () => F,
					gK: () => d,
					gX: () => M,
					gr: () => m,
					jy: () => f,
					k0: () => u,
					nc: () => _,
					oU: () => R,
					uL: () => h,
					uQ: () => B,
					wO: () => T,
					xI: () => g,
				});
				var n = i(734906),
					a = i(765722),
					s = i(378016);
				const r =
						({ baseUrl: e } = { baseUrl: '' }) =>
						async ({ url: t, method: i, data: n, params: s }) => {
							try {
								return {
									data: (
										await (0, a.SM)({
											url: e + t,
											method: i,
											data: n,
											params: s,
										})
									).data,
								};
							} catch (l) {
								var r, o;
								let e = l;
								return {
									error: {
										status:
											null === (r = e.response) || void 0 === r
												? void 0
												: r.status,
										data:
											(null === (o = e.response) || void 0 === o
												? void 0
												: o.data) || e.message,
									},
								};
							}
						},
					o = (0, n.xP)({
						reducerPath: 'trailsApi',
						baseQuery: r({ baseUrl: 'curated-course/course/curated/' }),
						endpoints: (e) => ({
							getTrailData: e.query({
								query: () => ({
									url: 'US/Colorado/testing2?locale=EN&unit=STATUTE',
									method: 'GET',
								}),
							}),
							getTrails: e.mutation({
								query: (e) => ({ url: 'search', method: 'POST', data: e }),
								transformResponse: (e) =>
									e
										.map((e) => ({
											...e,
											convertedPolyline: (0, s.YC)(e.courseWKT),
										}))
										.toSorted(
											(e, t) => t.courseDifficulty - e.courseDifficulty
										),
							}),
							getFavoriteTrails: e.mutation({
								query: () => ({
									url: 'search/favorite',
									method: 'POST',
									data: {},
								}),
								transformResponse: (e) =>
									e.map((e) => ({
										...e,
										convertedPolyline: (0, s.YC)(e.courseWKT),
									})),
							}),
							addTrailToFavorites: e.mutation({
								query: ({ curatedCourseId: e }) => ({
									url: `favorite/${e}`,
									method: 'POST',
								}),
							}),
							removeTrailFromFavorites: e.mutation({
								query: ({ curatedCourseId: e }) => ({
									url: `favorite/${e}`,
									method: 'DELETE',
								}),
							}),
							getTrailDetails: e.query({
								query: ({
									countryCode: e,
									provinceName: t,
									courseName: i,
									...n
								}) => ({ url: `${e}/${t}/${i}`, method: 'GET', params: n }),
							}),
							getTrailByCuratedCourseId: e.query({
								query: ({ curatedCourseId: e }) => ({
									url: `${e}`,
									method: 'GET',
								}),
								transformResponse: (e) => {
									var t;
									return {
										...e.curatedCourseDTO,
										convertedPolyline: (0, s.YC)(
											null === e ||
												void 0 === e ||
												null === (t = e.curatedCourseDTO) ||
												void 0 === t
												? void 0
												: t.courseWKT
										),
									};
								},
							}),
							getTrailUsage: e.query({
								query: ({ curatedCourseId: e }) => ({
									url: `usage/${e}`,
									method: 'GET',
								}),
								transformResponse: (e) => (0, s.Yv)(e),
							}),
							getTrailImages: e.query({
								serializeQueryArgs: ({ endpointName: e }) => e,
								merge: (e, t, { arg: i }) => {
									if (0 === i.pageStart) return t;
									e = {
										images: e.images.push(
											...(null === t || void 0 === t ? void 0 : t.images)
										),
										imageCount: e.imageCount,
									};
								},
								forceRefetch: ({ currentArg: e, previousArg: t }) => e !== t,
								query: ({ curatedCourseId: e, pageStart: t, pageEnd: i }) => ({
									url: `images/${e}?pageStart=${t}&pageEnd=${i}`,
									method: 'GET',
								}),
								keepUnusedDataFor: 0,
							}),
							addTrailSuggestionOrIssue: e.mutation({
								query: (e) => ({ url: 'suggestion', method: 'POST', data: e }),
							}),
						}),
					}),
					l = (0, n.xP)({
						reducerPath: 'tripReportsApi',
						baseQuery: r({ baseUrl: 'curated-course/trip/report/' }),
						tagTypes: [
							'MyTrailReviews',
							'TrailReviews',
							'getReviewById',
							'ImageRating',
						],
						endpoints: (e) => ({
							getImageRating: e.query({
								serializeQueryArgs: ({ endpointName: e }) => e,
								query: ({ imageId: e }) => ({
									url: `image/${e}/rate`,
									method: 'GET',
								}),
							}),
							addImageRating: e.mutation({
								query: ({ imageId: e }) => ({
									url: `image/${e}/rate`,
									method: 'POST',
								}),
								async onQueryStarted(
									{ imageId: e },
									{ dispatch: t, queryFulfilled: i }
								) {
									const n = t(
											o.util.updateQueryData('getTrailImages', void 0, (t) => {
												const i = t.images.findIndex(
													(t) =>
														(null === t || void 0 === t
															? void 0
															: t.imageId) === e
												);
												-1 !== i &&
													(t.images[i].imageHelpfulCount =
														t.images[i].imageHelpfulCount + 1);
											})
										),
										a = t(
											l.util.updateQueryData('getTrailReviews', void 0, (t) => {
												const i = t.tripReports.findIndex((t) =>
														null === t || void 0 === t
															? void 0
															: t.images.find((t) => t.imageId === e)
													),
													n = t.tripReports.find((t) =>
														null === t || void 0 === t
															? void 0
															: t.images.find((t) => t.imageId === e)
													),
													a =
														null === n || void 0 === n
															? void 0
															: n.images.findIndex((t) => t.imageId === e);
												-1 !== i &&
													-1 !== a &&
													(t.tripReports[i].images[a].imageHelpfulCount =
														t.tripReports[i].images[a].imageHelpfulCount + 1);
											})
										);
									try {
										await i;
									} catch {
										n.undo(), a.undo();
									}
								},
							}),
							deleteImageRating: e.mutation({
								query: ({ imageId: e }) => ({
									url: `image/${e}/rate`,
									method: 'DELETE',
								}),
								async onQueryStarted(
									{ imageId: e },
									{ dispatch: t, queryFulfilled: i }
								) {
									const n = t(
											o.util.updateQueryData('getTrailImages', void 0, (t) => {
												const i = t.images.findIndex(
													(t) =>
														(null === t || void 0 === t
															? void 0
															: t.imageId) === e
												);
												-1 !== i &&
													(t.images[i].imageHelpfulCount =
														t.images[i].imageHelpfulCount - 1);
											})
										),
										a = t(
											l.util.updateQueryData('getTrailReviews', void 0, (t) => {
												const i = t.tripReports.findIndex((t) =>
														null === t || void 0 === t
															? void 0
															: t.images.find((t) => t.imageId === e)
													),
													n = t.tripReports.find((t) =>
														null === t || void 0 === t
															? void 0
															: t.images.find((t) => t.imageId === e)
													),
													a =
														null === n || void 0 === n
															? void 0
															: n.images.findIndex((t) => t.imageId === e);
												-1 !== i &&
													-1 !== a &&
													(t.tripReports[i].images[a].imageHelpfulCount =
														t.tripReports[i].images[a].imageHelpfulCount - 1);
											})
										);
									try {
										await i;
									} catch {
										n.undo(), a.undo();
									}
								},
							}),
							getTrailReviews: e.query({
								query: ({
									curatedCourseId: e,
									order: t,
									pageStart: i,
									pageEnd: n,
								}) => ({
									url: `course/${e}?order=${t}&pageStart=${i}&pageEnd=${n}`,
									method: 'GET',
								}),
								serializeQueryArgs: ({ endpointName: e }) => e,
								merge: (e, t, i) => (
									(e && e.tripReports && Array.isArray(e.tripReports)) ||
										(e = { tripReports: [] }),
									t &&
										t.tripReports &&
										Array.isArray(t.tripReports) &&
										e.tripReports.push(...t.tripReports),
									e
								),
								forceRefetch: ({ currentArg: e, previousArg: t }) => t !== e,
								transformResponse: (e) => {
									const t = (
										(null === e || void 0 === e ? void 0 : e.tripReports) || []
									).filter((e) => (0, s.Tt)(e));
									return { ...e, tripReports: t };
								},
								providesTags: ['TrailReviews'],
							}),
							getTrailReviewImages: e.query({
								query: ({ tripReportId: e, pageStart: t, pageEnd: i }) => ({
									url: `${e}/images?pageStart=${t}&pageEnd=${i}`,
									method: 'GET',
								}),
							}),
							addTrailReviewRating: e.mutation({
								query: ({ tripReportId: e, data: t }) => ({
									url: `${e}/rate`,
									method: 'POST',
									data: t,
								}),
							}),
							deleteTrailReviewRating: e.mutation({
								query: ({ tripReportId: e }) => ({
									url: `${e}/rate`,
									method: 'DELETE',
								}),
							}),
							getTrailReviewRatings: e.query({
								query: ({ curatedCourseId: e }) => ({
									url: `course/ratings/${e}`,
									method: 'GET',
								}),
							}),
							addTrailReview: e.mutation({
								query: ({ data: e }) => ({
									url: 'create',
									method: 'POST',
									data: e,
								}),
							}),
							addImageToTrailReview: e.mutation({
								query: ({
									tripReportId: e,
									displayOrder: t,
									imageData: i,
								}) => ({
									url: `${e}/image/${t}`,
									method: 'POST',
									data: i,
									formData: !0,
								}),
								async onQueryStarted(
									{ tripReportId: e },
									{ dispatch: t, queryFulfilled: i }
								) {
									try {
										const { data: n } = await i;
										t(
											l.util.updateQueryData('getTrailReviews', void 0, (t) => {
												const i = t.tripReports.findIndex(
													(t) =>
														(null === t || void 0 === t
															? void 0
															: t.tripReportId) === e
												);
												t.tripReports[i].images.push({ ...n });
											})
										),
											t(
												l.util.updateQueryData(
													'getMyTrailReviews',
													void 0,
													(t) => {
														const i = t.findIndex(
															(t) =>
																(null === t || void 0 === t
																	? void 0
																	: t.tripReportId) === e
														);
														t[i].images.push({ ...n });
													}
												)
											);
									} catch {}
								},
							}),
							deleteImageFromTrailReview: e.mutation({
								query: ({ tripReportId: e, imageId: t }) => ({
									url: `${e}/image/${t}`,
									method: 'DELETE',
								}),
								async onQueryStarted(
									{ tripReportId: e, imageId: t },
									{ dispatch: i, queryFulfilled: n }
								) {
									const a = i(
											l.util.updateQueryData('getTrailReviews', void 0, (i) => {
												var n;
												const a = i.tripReports.findIndex(
													(t) =>
														(null === t || void 0 === t
															? void 0
															: t.tripReportId) === e
												);
												i.tripReports[a].images =
													null === (n = i.tripReports[a]) || void 0 === n
														? void 0
														: n.images.filter((e) => e.imageId !== t);
											})
										),
										s = i(
											l.util.updateQueryData(
												'getMyTrailReviews',
												void 0,
												(i) => {
													var n;
													const a = i.findIndex(
														(t) =>
															(null === t || void 0 === t
																? void 0
																: t.tripReportId) === e
													);
													i[a].images =
														null === (n = i[a]) || void 0 === n
															? void 0
															: n.images.filter((e) => e.imageId !== t);
												}
											)
										);
									try {
										await n;
									} catch {
										a.undo(), s.undo();
									}
								},
							}),
							reorderImagesFromTrailReview: e.mutation({
								query: ({ tripReportId: e, data: t }) => ({
									url: `${e}/images/reorder`,
									method: 'POST',
									data: t,
								}),
							}),
							getMyTrailReviews: e.query({
								query: () => ({ url: 'user', method: 'GET' }),
								providesTags: ['MyTrailReviews'],
							}),
							removeTrailReport: e.mutation({
								query: ({ tripReportId: e }) => ({
									url: `${e}`,
									method: 'DELETE',
								}),
								async onQueryStarted(
									{ tripReportId: e },
									{ dispatch: t, queryFulfilled: i }
								) {
									const n = t(
											l.util.updateQueryData(
												'getMyTrailReviews',
												void 0,
												(t) => {
													const i = t.findIndex(
														(t) =>
															(null === t || void 0 === t
																? void 0
																: t.tripReportId) === e
													);
													-1 !== i && t.splice(i, 1);
												}
											)
										),
										a = t(
											l.util.updateQueryData('getTrailReviews', void 0, (t) => {
												const i = t.tripReports.findIndex(
													(t) =>
														(null === t || void 0 === t
															? void 0
															: t.tripReportId) === e
												);
												-1 !== i && (t.tripReports[i] = void 0);
											})
										);
									try {
										await i;
									} catch {
										n.undo(), a.undo();
									}
								},
								invalidatesTags: ['getReviewById'],
							}),
							updateTrailReport: e.mutation({
								query: ({ tripReportId: e, data: t }) => ({
									url: `${e}`,
									method: 'PUT',
									data: t,
								}),
								async onQueryStarted(
									{ tripReportId: e, data: t },
									{ dispatch: i, queryFulfilled: n }
								) {
									const a = i(
											l.util.updateQueryData('getTrailReviews', void 0, (i) => {
												const n = i.tripReports.findIndex(
													(t) =>
														(null === t || void 0 === t
															? void 0
															: t.tripReportId) === e
												);
												i.tripReports[n] = { ...i[n], ...t };
											})
										),
										s = i(
											l.util.updateQueryData(
												'getMyTrailReviews',
												void 0,
												(i) => {
													const n = i.findIndex(
														(t) =>
															(null === t || void 0 === t
																? void 0
																: t.tripReportId) === e
													);
													i[n] = { ...i[n], ...t };
												}
											)
										);
									try {
										await n;
									} catch {
										a.undo(), s.undo();
									}
								},
								invalidatesTags: ['getReviewById'],
							}),
							translateReview: e.query({
								query: ({ tripReportId: e, targetLocale: t }) => ({
									url: `${e}/translatedReviewComment?targetLocale=${t}`,
									method: 'GET',
								}),
							}),
							reportReview: e.mutation({
								query: ({ tripReportId: e, data: t }) => ({
									url: `${e}/flag`,
									method: 'POST',
									data: t,
								}),
							}),
							reportImage: e.mutation({
								query: ({ imageId: e, data: t }) => ({
									url: `image/${e}/flag`,
									method: 'POST',
									data: t,
								}),
							}),
							getReviewById: e.query({
								query: ({ tripReportId: e }) => ({
									url: `${e}`,
									method: 'GET',
								}),
								providesTags: ['getReviewById'],
							}),
							getMatchingReview: e.query({
								query: ({ curatedCourseId: e, activityId: t }) => ({
									url: `course/match/${e}/${t}`,
									method: 'GET',
								}),
							}),
							getPromptForCourse: e.mutation({
								query: ({ curatedCourseId: e }) => ({
									url: `prompt/${e}`,
									method: 'POST',
									curatedCourseId: e,
								}),
							}),
							getLatestUnreviewedTrail: e.query({
								query: () => ({ url: 'prompt/postSubmission', method: 'GET' }),
							}),
							getReviewStats: e.query({
								query: () => ({ url: 'stats', method: 'GET' }),
							}),
						}),
					}),
					{
						useGetTrailDataQuery: c,
						useGetTrailsMutation: d,
						useGetFavoriteTrailsMutation: u,
						useAddTrailToFavoritesMutation: p,
						useRemoveTrailFromFavoritesMutation: y,
						useGetTrailDetailsQuery: h,
						useGetTrailUsageQuery: g,
						useLazyGetTrailImagesQuery: m,
						useAddTrailSuggestionOrIssueMutation: A,
						useGetTrailByCuratedCourseIdQuery: _,
						useLazyGetTrailByCuratedCourseIdQuery: E,
					} = o,
					{
						useLazyGetImageRatingQuery: T,
						useAddImageRatingMutation: C,
						useDeleteImageRatingMutation: S,
						useLazyGetTrailReviewsQuery: I,
						useGetTrailReviewImagesQuery: v,
						useAddTrailReviewRatingMutation: f,
						useDeleteTrailReviewRatingMutation: D,
						useGetTrailReviewRatingsQuery: N,
						useAddTrailReviewMutation: R,
						useAddImageToTrailReviewMutation: b,
						useDeleteImageFromTrailReviewMutation: L,
						useReorderImagesFromTrailReviewMutation: P,
						useLazyGetMyTrailReviewsQuery: O,
						useGetMyTrailReviewsQuery: w,
						useRemoveTrailReportMutation: F,
						useUpdateTrailReportMutation: k,
						useGetTrailReviewsQuery: U,
						useLazyTranslateReviewQuery: M,
						useReportReviewMutation: G,
						useReportImageMutation: x,
						useGetReviewByIdQuery: B,
						useGetMatchingReviewQuery: H,
						useGetPromptForCourseMutation: V,
						useLazyGetLatestUnreviewedTrailQuery: W,
						useGetLatestUnreviewedTrailQuery: J,
						useGetReviewStatsQuery: Y,
					} = l,
					$ = o;
			},
			688501: (e, t, i) => {
				'use strict';
				i.d(t, { Ay: () => l, R2: () => o, oy: () => r });
				var n = i(734906),
					a = i(765722);
				const s = (0, n.xP)({
						reducerPath: 'trailsSearchApi',
						baseQuery: (
							({ baseUrl: e } = { baseUrl: '' }) =>
							async ({ url: t, method: i, data: n, params: s }) => {
								try {
									return {
										data: (
											await (0, a.SM)({
												url: e + t,
												method: i,
												data: n,
												params: s,
											})
										).data,
									};
								} catch (l) {
									var r, o;
									let e = l;
									return {
										error: {
											status:
												null === (r = e.response) || void 0 === r
													? void 0
													: r.status,
											data:
												(null === (o = e.response) || void 0 === o
													? void 0
													: o.data) || e.message,
										},
									};
								}
							}
						)({ baseUrl: 'trails-search/trails/' }),
						endpoints: (e) => ({
							trailsSearch: e.mutation({
								query: (e) => ({
									url: 'search/bestMatches',
									method: 'POST',
									data: e,
								}),
							}),
							trailsSearchSelectItem: e.mutation({
								query: (e) => ({
									url: 'search/selectedItem',
									method: 'POST',
									data: e,
								}),
							}),
						}),
					}),
					{ useTrailsSearchMutation: r, useTrailsSearchSelectItemMutation: o } =
						s,
					l = s;
			},
			170545: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => W });
				var n = i(228748),
					a = i(893855),
					s = i.n(a),
					r = i(82040),
					o = i(668712),
					l = i(547052),
					c = i(946186),
					d = i.n(c),
					u = i(882155),
					p = i.n(u),
					y = i(127433),
					h = i.n(y),
					g = i(188626),
					m = i.n(g),
					A = i(108990),
					_ = i.n(A),
					E = i(389827),
					T = i.n(E),
					C = i(934082),
					S = {};
				(S.styleTagTransform = T()),
					(S.setAttributes = m()),
					(S.insert = h().bind(null, 'head')),
					(S.domAPI = p()),
					(S.insertStyleElement = _());
				d()(C.A, S);
				const I = C.A && C.A.locals ? C.A.locals : void 0;
				var v = i(717776);
				class f extends n.Component {
					constructor(e) {
						super(e);
					}
					render() {
						const {
							messageKey: e,
							itemName: t,
							autoClose: i,
							isShow: n,
							onClose: a,
							onLearnMoreHelpItemClicked: s,
							zIndex: r,
						} = this.props;
						return (
							null !== e &&
							(0, v.jsx)(o.Eg, {
								open: n,
								onClose: a,
								autoClose: i,
								zIndex: r,
								children: (0, v.jsx)('div', {
									className: I.css_table,
									children: (0, v.jsxs)('div', {
										className: I.css_tr,
										children: [
											(0, v.jsx)('div', {
												className: I.css_td_notificationNote,
												children: (0, v.jsx)(l.A, {
													ns: 'device',
													content: e,
													params: { 0: t },
												}),
											}),
											(0, v.jsx)('div', {
												className: I.css_td_notificationLink,
												onClick: s,
												children: (0, v.jsx)(l.A, {
													className: I.notificationLearnMore,
													ns: 'device',
													content: 'send_to_device_learn_more',
													tag: 'div',
												}),
											}),
										],
									}),
								}),
							})
						);
					}
				}
				f.defaultProps = {
					onClose: () => {},
					autoClose: !0,
					renderTimeoutVal: 1e3,
					nameSpace: 'activity',
				};
				const D = f;
				var N = i(47610),
					R = i(223715),
					b = i(765722);
				var L = i(58195),
					P = i(702076),
					O = i(576797),
					w = i(996605),
					F = i(106235),
					k = i(34581),
					U = i(228268),
					M = i(80879),
					G = i(698164),
					x = i(281202),
					B = i(462026);
				const H = {
					fetchRegisteredDeviceList: N.V6,
					sendPaceProBandToDevice: R.hd,
					sendPowerGuidanceToDevice: L.Vw,
				};
				class V extends n.Component {
					constructor(e) {
						super(e),
							(this.onLaunchGE = () => {
								this.setState({ launchGE: !this.state.launchGE });
							}),
							(this.onDeviceChecked = () => {
								(this.checkedDevice = this.compatibleDevice.filter(
									(e) => document.getElementById(e.deviceId).checked
								)),
									this.checkedDevice.length > 0
										? this.setState({ sendButtonDisabled: !1 })
										: this.setState({ sendButtonDisabled: !0 });
							}),
							(this.onCloseModalConfirm = () => {
								const { onClose: e } = this.props;
								this.isSendToDevice &&
									(this.showNotification(!0),
									this.updateNotificationMessage(
										this.messageKey,
										this.deviceList
									)),
									k.A.setLaunchGECookies(this.state.launchGE),
									(this.isSendToDevice = !1),
									e ? e() : this.setState({ showPopup: !1 });
							}),
							(this.openModalConfirm = () => {
								const { open: e } = this.props;
								return 'undefined' !== typeof e ? e : this.state.showPopup;
							}),
							(this.sendToDeviceBtn = () => {
								const { sendType: e, onSendToDeviceButtonClicked: t } =
									this.props;
								let i = null,
									n = [];
								if (
									((this.messageKey = ''),
									(this.deviceList = []),
									1 === this.compatibleDevice.length)
								)
									(i = this.compatibleDevice[0].deviceId),
										this.processSendToDevicePayload(
											i,
											e,
											n,
											this.compatibleDevice[0]
										),
										this.deviceList.push(this.compatibleDevice[0].displayName),
										(this.messageKey = 'send_to_device_to_single_device');
								else {
									this.checkedDevice = this.compatibleDevice.filter(
										(e) => document.getElementById(e.deviceId).checked
									);
									for (var a = 0; a < this.checkedDevice.length; a++)
										(i = this.checkedDevice[a].deviceId),
											this.processSendToDevicePayload(
												i,
												e,
												n,
												this.checkedDevice[a]
											),
											this.deviceList.push(this.checkedDevice[a].displayName);
									1 === this.checkedDevice.length
										? (this.messageKey = 'send_to_device_to_single_device')
										: this.checkedDevice.length >= 2 &&
											(this.messageKey = 'send_to_device_to_mutiple_device');
								}
								var s;
								n.length &&
									((s = n),
									b.tI.post('/device-service/devicemessage/messages', s)),
									(this.isSendToDevice = !0),
									this.pushSendToDeviceAnalyticsEvents(),
									document.getElementById('launchGE').checked &&
										P.A.openAgent(i),
									t && 'function' === typeof t && t(i),
									this.onCloseModalConfirm();
							}),
							(this.onGarminConnectHelpItemClicked = () => {
								this.pushSendToDeviceHelpItemsAnalyticsEvents('Garmin Connect');
							}),
							(this.onGarminExpressHelpItemClicked = () => {
								this.pushSendToDeviceHelpItemsAnalyticsEvents('Garmin Express');
							}),
							(this.onLearnMoreHelpItemClicked = () => {
								this.pushSendToDeviceHelpItemsAnalyticsEvents('Learn More');
							}),
							(this.showNotification = (e) => {
								e && this.setState({ showNotification: !0 });
							}),
							(this.updateNotificationMessage = (e, t) => {
								this.setState({ notificationMessageKey: e, deviceList: t });
							}),
							(this.state = {
								needHelp: !1,
								sendToDevice: !1,
								syncMessage: !1,
								launchGE: k.A.getLaunchGEFromCookies(),
								sendButtonDisabled: !0,
								showNotification: !1,
								showPopup: !0,
							}),
							(this.paragraphRef = n.createRef());
					}
					componentDidMount() {
						const { fetchRegisteredDeviceList: e } = this.props;
						e();
					}
					componentDidUpdate() {
						if (this.paragraphRef) {
							const e = document.querySelector('#clickGC'),
								t = document.querySelector('#clickGE');
							e &&
								e.addEventListener(
									'click',
									this.onGarminConnectHelpItemClicked
								),
								t &&
									t.addEventListener(
										'click',
										this.onGarminExpressHelpItemClicked
									);
						}
					}
					componentWillUnmount() {
						const e = document.querySelector('#clickGC'),
							t = document.querySelector('#clickGE');
						e &&
							e.removeEventListener(
								'click',
								this.onGarminConnectHelpItemClicked
							),
							t &&
								t.removeEventListener(
									'click',
									this.onGarminExpressHelpItemClicked
								);
					}
					processSendToDevicePayload(e, t, i, n) {
						const {
							segmentDetails: a,
							sendPaceProBandToDevice: s,
							workoutId: r,
							courseId: o,
							activityId: l,
							messageName: c,
							powerGuidanceId: d,
							sendPowerGuidanceToDevice: u,
							eventId: p,
							eventOrganizer: y,
							shareableEventUuid: h,
						} = this.props;
						let g = {},
							m = null;
						if (t === w.cz)
							(g = { deviceId: e, paceBandId: this.props.paceBandId }), s(g);
						else if (t === w.xl)
							(g = {
								deviceId: e,
								messageUrl: 'course-service/leaderboard/fit/' + a.uuid,
								messageType: 'segment-leaders',
								messageName: a.name,
								groupName: 'Segments',
								priority: 0,
								fileType: 'FIT',
								metaDataId: null,
							}),
								i.push(g);
						else if (t === w.$5)
							(m = null !== n.workoutFileType ? n.workoutFileType : 'FIT'),
								(g = {
									deviceId: e,
									messageUrl: 'workout-service/workout/' + m + '/' + r,
									messageType: 'workouts',
									messageName: c,
									groupName: null,
									priority: 1,
									fileType: m,
									metaDataId: r,
								}),
								i.push(g);
						else if (t === w.jg)
							(m = null !== n.courseFileType ? n.courseFileType : 'fit'),
								(g = {
									deviceId: e,
									messageUrl:
										'course-service/course/' +
										m.toLowerCase() +
										'/' +
										o +
										'/' +
										e +
										'?elevation=true',
									messageType: 'courses',
									messageName: c,
									groupName: null,
									priority: 0,
									fileType: m,
									metaDataId: o,
								}),
								i.push(g);
						else if (t === w.a3)
							(g = {
								deviceId: e,
								messageUrl: 'personalrecord-service/personalrecord/FIT/',
								messageType: 'personal-records',
								messageName: c,
								groupName: null,
								priority: 1,
								fileType: 'FIT',
								metaDataId: null,
							}),
								i.push(g);
						else if (t === w.fS)
							(m = null !== n.courseFileType ? n.courseFileType : 'fit'),
								(g = {
									deviceId: e,
									messageUrl:
										'course-service/course/copyFromActivity/' +
										m.toLowerCase() +
										'/' +
										l +
										'/' +
										e +
										'?elevation=true',
									messageType: 'courses',
									messageName: c,
									groupName: null,
									priority: 0,
									fileType: m,
									metaDataId: l,
								}),
								i.push(g);
						else if (t === w.wO) {
							u({ deviceId: n.deviceId, powerGuidanceId: d });
						} else
							t === w.Jz &&
								((g = {
									deviceId: e,
									messageUrl: y
										? `calendar-service/event/fit/${p}`
										: `calendar-service/event/${h}/shareable/fit`,
									messageType: 'sporting-event',
									messageName: c,
									groupName: null,
									priority: 0,
									fileType: 'FIT',
									metaDataId: p,
								}),
								i.push(g));
					}
					loadingSpinner() {
						return (0, v.jsx)(o.LS, {
							container: !0,
							center: !0,
							children: (0, v.jsx)(o.y$, {}),
						});
					}
					render() {
						return (0, v.jsxs)(n.Fragment, {
							children: [
								(0, v.jsxs)(o.lG, {
									open: this.openModalConfirm(),
									onClose: this.onCloseModalConfirm,
									children: [
										(0, v.jsx)(o.L3, {
											children: (0, v.jsx)(l.A, {
												ns: 'course',
												content: 'send_to_device',
											}),
										}),
										this.getContent(),
									],
								}),
								this.getNotification(),
							],
						});
					}
					getContent() {
						const {
							sendType: e,
							registeredDeviceList: t,
							isRegisteredDeviceListFetching: i,
							additionalWorkoutFilter: a,
						} = this.props;
						return (
							e === w.cz
								? this.filterDevicesForGcj02Case('pacebandCapable')
								: e === w.xl
									? (this.compatibleDevice = t.filter((e) => e.segmentCapable))
									: e === w.$5
										? ((this.compatibleDevice = t.filter(
												(e) => e.workoutCapable
											)),
											(this.compatibleDevice = a
												? t.filter((e) => e.workoutCapable && e[a])
												: t.filter((e) => e.workoutCapable)),
											this.isSpecialWorkout() &&
												this.initialDeviceListForSpecialWorkout())
										: e === w.jg
											? this.filterDevicesForGcj02Case('courseCapable')
											: e === w.a3
												? (this.compatibleDevice = t.filter(
														(e) => e.personalRecordCapable
													))
												: e === w.fS
													? (this.compatibleDevice = t.filter(
															(e) => e.courseCapable
														))
													: e === w.wO
														? this.filterDevicesForGcj02Case(
																'powerGuidanceCapable'
															)
														: e === w.Jz &&
															this.filterDevicesForGcj02Case(
																'sportingEventCapable'
															),
							i
								? this.loadingSpinner()
								: !this.compatibleDevice || this.compatibleDevice.length < 1
									? (0, v.jsx)(n.Fragment, {
											children: (0, v.jsxs)(o.Cf, {
												children: [
													(0, v.jsx)('div', {
														children: (0, v.jsx)('p', {
															children: (0, v.jsx)(l.A, {
																ns: 'device',
																content: 'send_to_device_no_devices',
															}),
														}),
													}),
													this.getNoteMessage(),
												],
											}),
										})
									: (0, v.jsxs)(n.Fragment, {
											children: [
												(0, v.jsxs)(o.Cf, {
													className: I.dialogBody,
													children: [
														(0, v.jsx)('div', {
															children: (0, v.jsx)('p', {
																children:
																	1 === this.compatibleDevice.length
																		? (0, v.jsx)(l.A, {
																				ns: 'device',
																				content: 'send_to_device_your_device',
																			})
																		: (0, v.jsx)(l.A, {
																				ns: 'device',
																				content: 'send_to_device_which_device',
																			}),
															}),
														}),
														this.getDeviceList(),
														this.getNoteMessage(),
													],
												}),
												(0, v.jsxs)(o.ii, {
													children: [
														(0, v.jsx)('span', {
															className: 'pull-left ' + I.launchLable,
															children: (0, v.jsxs)('label', {
																htmlFor: 'launchGE',
																children: [
																	(0, v.jsx)('input', {
																		type: 'checkbox',
																		id: 'launchGE',
																		checked: this.state.launchGE,
																		onChange: this.onLaunchGE,
																	}),
																	(0, v.jsx)('span', {
																		className: I.launchText,
																		children: (0, v.jsx)(l.A, {
																			ns: 'device',
																			content: 'send_to_device_launch_ge',
																		}),
																	}),
																],
															}),
														}),
														(0, v.jsx)('button', {
															className:
																'btn btn-secondary cancel ' + I.cancelBtn,
															onClick: this.onCloseModalConfirm,
															children: (0, v.jsx)(l.A, {
																ns: 'common',
																content: 'button_cancel',
															}),
														}),
														(0, v.jsx)('button', {
															className: 'btn btn-confirm',
															onClick: this.sendToDeviceBtn,
															disabled:
																this.compatibleDevice.length > 1 &&
																this.state.sendButtonDisabled,
															children: (0, v.jsx)(l.A, {
																ns: 'personal-record-api',
																content: 'pr.button.send.label',
															}),
														}),
													],
												}),
											],
										})
						);
					}
					filterDevicesForGcj02Case(e) {
						const {
							courseOriginalCoordinateSystem: t,
							courseId: i,
							registeredDeviceList: n,
						} = this.props;
						t
							? t === w.It
								? (this.compatibleDevice = n.filter(
										(t) => t[e] && t.gcj02CourseCapable
									))
								: (this.compatibleDevice = n.filter((t) => t[e]))
							: i && i > 0
								? (0, B.fW9)(i).then((t) => {
										t && t.data && t.data.originalCoordinateSystem === w.It
											? (this.compatibleDevice = n.filter(
													(t) => t[e] && t.gcj02CourseCapable
												))
											: (this.compatibleDevice = n.filter((t) => t[e]));
									})
								: (this.compatibleDevice = n.filter((t) => t[e]));
					}
					getNoteMessage() {
						return (0, v.jsx)('div', {
							className: I.deviceNote,
							ref: this.paragraphRef,
							dangerouslySetInnerHTML: {
								__html: M.Ay.t('device:send_to_device_note_2', {
									0:
										`<a class="colored" href="${(0, x.hg)('8CBmYmJHUr36wvJ6AktXFA')}" target="_blank" id="clickGC"> ` +
										M.Ay.t('send_to_device:gc') +
										'</a>',
									1:
										`<a class="colored" href="${(0, x.hg)('eagCIGaxGr1eDoN2yOW2b8')}" target="_blank" id="clickGE">` +
										M.Ay.t('device:device.garmin.express') +
										'</a>',
									interpolation: { escapeValue: !1 },
								}),
							},
						});
					}
					isSpecialWorkout() {
						const { sendType: e, completeWorkoutData: t } = this.props;
						return (
							e === w.$5 &&
							t &&
							(this.workoutHasSecondaryTarget() ||
								this.workoutHasPowerCurve() ||
								this.workoutHasBenchmarkScaledExercise() ||
								this.workoutHasAudioNotes())
						);
					}
					getDeviceList() {
						if (this.isSpecialWorkout()) {
							if (
								0 === this.fullComatibleDeviceList.length &&
								this.partiallyCompatibleDeviceList.length > 0
							)
								return this.partiallyCompatibleDeviceList.length > 1
									? this.getPartiallyCompatibleDeviceList()
									: (0, v.jsxs)(
											'div',
											{
												className: I.device,
												children: [
													(0, v.jsx)('img', {
														className: I.deviceImage,
														src: this.partiallyCompatibleDeviceList[0].imageUrl,
														alt: this.partiallyCompatibleDeviceList[0]
															.displayName,
													}),
													(0, v.jsx)('h3', {
														className: I.deviceName,
														children:
															this.partiallyCompatibleDeviceList[0].displayName,
													}),
													(0, v.jsx)(o.m_, {
														title: this.partiallyCompatibleTooltipTitle(
															this.partiallyCompatibleDeviceList[0]
														),
														position: 'right',
														children: (0, v.jsx)('span', {
															className: I.deviceHelpIcon,
															children: (0, v.jsx)(o.NT, {}),
														}),
													}),
												],
											},
											this.partiallyCompatibleDeviceList[0].deviceId
										);
							if (
								this.fullComatibleDeviceList.length > 0 &&
								this.partiallyCompatibleDeviceList.length > 0
							)
								return (0, v.jsxs)(n.Fragment, {
									children: [
										(0, v.jsx)('div', {
											className: I.deviceListTitle,
											children: (0, v.jsx)(l.A, {
												ns: 'device',
												content: 'send_to_device_fully_compatible_devices',
											}),
										}),
										this.getFullyCompatibleDeviceList(),
										(0, v.jsx)('div', {
											className: I.deviceListTitle,
											children: (0, v.jsx)(l.A, {
												ns: 'device',
												content: 'send_to_device_partially_compatible_devices',
											}),
										}),
										this.getPartiallyCompatibleDeviceList(),
									],
								});
						}
						return this.compatibleDevice.length > 1
							? this.compatibleDevice.map((e) =>
									(0, v.jsx)(
										'div',
										{
											className: I.device,
											children: (0, v.jsxs)('label', {
												htmlFor: e.deviceId,
												className: I.deviceLabel,
												children: [
													(0, v.jsx)('input', {
														type: 'checkbox',
														value: e.displayName,
														id: e.deviceId,
														onClick: this.onDeviceChecked,
													}),
													(0, v.jsx)('img', {
														className: I.deviceImage,
														src: e.imageUrl,
														alt: e.displayName,
													}),
													(0, v.jsx)('h3', {
														className: I.deviceName,
														children: e.displayName,
													}),
												],
											}),
										},
										e.deviceId
									)
								)
							: this.compatibleDevice.map((e) =>
									(0, v.jsxs)(
										'div',
										{
											className: I.device,
											children: [
												(0, v.jsx)('img', {
													className: I.deviceImage,
													src: e.imageUrl,
													alt: e.displayName,
												}),
												(0, v.jsx)('h3', {
													className: I.deviceName,
													children: e.displayName,
												}),
											],
										},
										e.deviceId
									)
								);
					}
					getFullyCompatibleDeviceList() {
						return this.fullComatibleDeviceList.map((e) =>
							(0, v.jsx)(
								'div',
								{
									className: I.device,
									children: (0, v.jsxs)('label', {
										htmlFor: e.deviceId,
										className: I.deviceLabel,
										children: [
											(0, v.jsx)('input', {
												type: 'checkbox',
												value: e.displayName,
												id: e.deviceId,
												onClick: this.onDeviceChecked,
											}),
											(0, v.jsx)('img', {
												className: I.deviceImage,
												src: e.imageUrl,
												alt: e.displayName,
											}),
											(0, v.jsx)('h3', {
												className: I.deviceName,
												children: e.displayName,
											}),
										],
									}),
								},
								e.deviceId
							)
						);
					}
					getPartiallyCompatibleDeviceList() {
						return this.partiallyCompatibleDeviceList.map((e) =>
							(0, v.jsxs)(
								'div',
								{
									className: I.device,
									children: [
										(0, v.jsxs)('label', {
											htmlFor: e.deviceId,
											className: I.deviceLabel,
											children: [
												(0, v.jsx)('input', {
													type: 'checkbox',
													value: e.displayName,
													id: e.deviceId,
													onClick: this.onDeviceChecked,
												}),
												(0, v.jsx)('img', {
													className: I.deviceImage,
													src: e.imageUrl,
													alt: e.displayName,
												}),
												(0, v.jsx)('h3', {
													className: I.deviceName,
													children: e.displayName,
												}),
											],
										}),
										(0, v.jsx)(o.m_, {
											title: this.partiallyCompatibleTooltipTitle(e),
											position: 'right',
											children: (0, v.jsx)('span', {
												className: I.deviceHelpIcon,
												children: (0, v.jsx)(o.NT, {}),
											}),
										}),
									],
								},
								e.deviceId
							)
						);
					}
					partiallyCompatibleTooltipTitle(e) {
						const { includeAudioNotes: t } = this.props;
						let i = '';
						return (
							this.workoutHasAudioNotes() && t
								? (i = M.Ay.t('workout:audio_notes_not_available', {
										0: e.displayName,
									}))
								: this.workoutHasSecondaryTarget()
									? (i = M.Ay.t(
											'device:send_to_device_partially_compatible_warning',
											{
												0: e.displayName,
												1: M.Ay.t('workout:secondary_targets_capable'),
											}
										))
									: this.workoutHasPowerCurve()
										? (i = M.Ay.t(
												'device:send_to_device_partially_compatible_warning',
												{
													0: e.displayName,
													1: M.Ay.t('workout:power_curve_capable'),
												}
											))
										: this.workoutHasBenchmarkScaledExercise() &&
											(i = M.Ay.t(
												'device:send_to_device_partially_compatible_warning',
												{ 0: e.displayName, 1: '' }
											)),
							i
						);
					}
					initialDeviceListForSpecialWorkout() {
						const { registeredDeviceList: e } = this.props;
						(this.fullComatibleDeviceList = []),
							(this.partiallyCompatibleDeviceList = []),
							this.workoutHasAudioNotes()
								? ((this.fullComatibleDeviceList = e.filter(
										(e) => e.workoutCapable && e.workoutAudioPromptsCapable
									)),
									(this.partiallyCompatibleDeviceList = e.filter(
										(e) => e.workoutCapable && !e.workoutAudioPromptsCapable
									)))
								: this.workoutHasSecondaryTarget()
									? ((this.fullComatibleDeviceList = e.filter(
											(e) =>
												e.workoutCapable && e.secondaryWorkoutStepTargetCapable
										)),
										(this.partiallyCompatibleDeviceList = e.filter(
											(e) =>
												e.workoutCapable && !e.secondaryWorkoutStepTargetCapable
										)))
									: this.workoutHasPowerCurve()
										? ((this.fullComatibleDeviceList = e.filter(
												(e) => e.workoutCapable && e.powerCurveCapable
											)),
											(this.partiallyCompatibleDeviceList = e.filter(
												(e) => e.workoutCapable && !e.powerCurveCapable
											)))
										: this.workoutHasBenchmarkScaledExercise() &&
											((this.fullComatibleDeviceList = e.filter(
												(e) => e.workoutCapable && e.benchmarkExerciseCapable
											)),
											(this.partiallyCompatibleDeviceList = e.filter(
												(e) => e.workoutCapable && !e.benchmarkExerciseCapable
											))),
							this.fullComatibleDeviceList.length > 0 &&
							0 === this.partiallyCompatibleDeviceList.length
								? (this.compatibleDevice = this.fullComatibleDeviceList)
								: 0 === this.fullComatibleDeviceList.length &&
									  this.partiallyCompatibleDeviceList.length > 0
									? (this.compatibleDevice = this.partiallyCompatibleDeviceList)
									: this.fullComatibleDeviceList.length > 0 &&
										this.partiallyCompatibleDeviceList.length > 0 &&
										(this.compatibleDevice =
											this.fullComatibleDeviceList.concat(
												this.partiallyCompatibleDeviceList
											));
					}
					workoutHasAudioNotes() {
						const { completeWorkoutData: e } = this.props;
						if (e) {
							const e = !!this.getWorkoutDataField('workoutAudioNoteUuid'),
								t = this.getWorkoutDataField('workoutSegments'),
								i = (t && t.length > 0 ? t[0].workoutSteps : []).some(
									(e) => e.stepAudioNoteUuid
								);
							return e || i;
						}
						return !1;
					}
					workoutHasSecondaryTarget() {
						const { completeWorkoutData: e } = this.props;
						let t = null;
						if (e && 'object' === typeof e) {
							let e =
								this.getWorkoutDataField('workoutSegments')[0].workoutSteps;
							e &&
								e.length &&
								(t = e.find((e) =>
									e.workoutSteps
										? e.workoutSteps.find((e) =>
												e.workoutSteps && e.workoutSteps.length
													? e.workoutSteps.find(
															(e) =>
																!(
																	!e.secondaryTargetType ||
																	!e.secondaryTargetType.workoutTargetTypeKey ||
																	e.secondaryTargetType.workoutTargetTypeKey ===
																		F.A.TargetTypes.No_Target
																)
														)
													: !(
															!e.secondaryTargetType ||
															!e.secondaryTargetType.workoutTargetTypeKey ||
															e.secondaryTargetType.workoutTargetTypeKey ===
																F.A.TargetTypes.No_Target
														)
											)
										: !(
												!e.secondaryTargetType ||
												!e.secondaryTargetType.workoutTargetTypeKey ||
												e.secondaryTargetType.workoutTargetTypeKey ===
													F.A.TargetTypes.No_Target
											)
								));
						}
						return t;
					}
					workoutHasPowerCurve() {
						const { completeWorkoutData: e } = this.props;
						let t = null;
						if (e && 'object' === typeof e) {
							let e =
									this.getWorkoutDataField('workoutSegments')[0].workoutSteps,
								i = F.A.TargetTypes.Power_Curve;
							e &&
								e.length &&
								(t = e.find((e) =>
									e.workoutSteps
										? e.workoutSteps.find((e) =>
												e.workoutSteps && e.workoutSteps.length
													? e.workoutSteps.find(
															(e) =>
																!(
																	!e.secondaryTargetType ||
																	!e.secondaryTargetType.workoutTargetTypeKey ||
																	e.secondaryTargetType.workoutTargetTypeKey !==
																		i
																) ||
																!(
																	!e.targetType ||
																	!e.targetType.workoutTargetTypeKey ||
																	e.targetType.workoutTargetTypeKey !== i
																)
														)
													: !(
															!e.secondaryTargetType ||
															!e.secondaryTargetType.workoutTargetTypeKey ||
															e.secondaryTargetType.workoutTargetTypeKey !== i
														) ||
														!(
															!e.targetType ||
															!e.targetType.workoutTargetTypeKey ||
															e.targetType.workoutTargetTypeKey !== i
														)
											)
										: !(
												!e.secondaryTargetType ||
												!e.secondaryTargetType.workoutTargetTypeKey ||
												e.secondaryTargetType.workoutTargetTypeKey !== i
											) ||
											!(
												!e.targetType ||
												!e.targetType.workoutTargetTypeKey ||
												e.targetType.workoutTargetTypeKey !== i
											)
								));
						}
						return t;
					}
					workoutHasBenchmarkScaledExercise() {
						const { completeWorkoutData: e } = this.props;
						let t = !1;
						if (e && 'object' === typeof e) {
							const e = this.getWorkoutDataField('workoutSegments'),
								i = (e) => e.benchmarkKey || e.benchmarkPercentage > 0;
							t = (0, U.ge)(e, i);
						}
						return t;
					}
					getWorkoutDataField(e) {
						const { completeWorkoutData: t } = this.props;
						return t[e] || (t instanceof s().Model && t.get(e));
					}
					getNotification() {
						const { sendType: e } = this.props;
						let t = '';
						switch (e) {
							case w.$5:
								t = M.Ay.t('send_to_device:queue.workout');
								break;
							case w.fS:
							case w.jg:
								t = M.Ay.t('activity-api:course');
								break;
							case w.xl:
								t = M.Ay.t('send_to_device:queue.segment');
								break;
							case w.cz:
								t = M.Ay.t('widgets:label_pace_pro');
								break;
							case w.a3:
								t = M.Ay.t('personal-record-api:pr.label');
								break;
							case w.wO:
								t = M.Ay.t('common:title_powerguide_widget');
								break;
							default:
								t = M.Ay.t('send_to_device:queue.workout');
						}
						return (
							this.state.showNotification &&
							(0, v.jsx)(D, {
								messageKey: this.state.notificationMessageKey,
								itemName: t.toLowerCase(),
								autoClose: !0,
								isShow: this.state.showNotification,
								onClose: () => {
									this.setState({ showNotification: !1 });
								},
								onLearnMoreHelpItemClicked:
									this.onLearnMoreHelpItemClicked.bind(this),
								zIndex: 6,
							})
						);
					}
					pushSendToDeviceAnalyticsEvents() {
						const { sendType: e, sendToDeviceFrom: t } = this.props;
						let i =
							this.checkedDevice && this.checkedDevice.length >= 2
								? 'Sent Multiple Devices'
								: 'Sent Single Device';
						O.A.push({
							event: 'track_event',
							category: 'Send ' + e + ' To Device Events From ' + t,
							action: i,
							label: 'Is Garmin Express Launched : ' + this.state.launchGE,
						});
					}
					pushSendToDeviceHelpItemsAnalyticsEvents(e) {
						O.A.push({
							event: 'track_event',
							category: 'Send To Device Events',
							action: 'Help Link : ' + e + ' Clicked',
						});
					}
				}
				const W = (0, G.CI)([
					'device',
					'send_to_device',
					'workout',
					'activity-api',
					'common',
					'personal-record-api',
					'widgets',
					'activity-api',
					'trails',
				])(
					(0, r.Ng)(
						(e, t) => ({
							registeredDeviceList: (0, N.dM)(e),
							isRegisteredDeviceListFetching: (0, N.Fn)(e),
						}),
						H
					)(V)
				);
			},
			996605: (e, t, i) => {
				'use strict';
				i.d(t, {
					$5: () => n,
					Fw: () => p,
					It: () => u,
					Jz: () => d,
					a3: () => o,
					cz: () => r,
					fS: () => l,
					jg: () => a,
					wO: () => c,
					xl: () => s,
				});
				const n = 'workout',
					a = 'course',
					s = 'segment',
					r = 'pacepro',
					o = 'personalRecord',
					l = 'activity',
					c = 'powerGuidance',
					d = 'sporting-event',
					u = 'GCJ02',
					p = 'LaunchGEPreference';
			},
			517023: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => a });
				var n = i(315210);
				const a = {
					display: (e) => {
						window.ConnectReduxStore.dispatch({
							type: n.o1.SHOW_SNACKBAR_MESSAGE,
							content: e,
						});
					},
				};
			},
			787006: (e, t, i) => {
				'use strict';
				function n() {
					return !0 === window.IS_READONLY;
				}
				function a() {
					return !0 === window.PRODUCT_SUPPORT_MODE;
				}
				function s() {
					return (
						!0 === window.IS_READONLY && !0 !== window.PRODUCT_SUPPORT_MODE
					);
				}
				function r() {
					return !0 === window.IS_RACE_MANAGEMENT;
				}
				function o() {
					if (n()) return () => Window.App.displayPageNotFoundPage();
				}
				function l() {
					if (s()) return () => Window.App.displayPageNotFoundPage();
				}
				i.d(t, {
					H1: () => s,
					I7: () => a,
					O1: () => c,
					Yd: () => r,
					aO: () => n,
					uf: () => l,
					xj: () => o,
				});
				const c = (e) => (e) => (t) => {
					switch (t.type) {
						case 'REQUEST_CALENDAR_WEEK':
						case 'REQUEST_CALENDAR_MONTH':
							if (t.groupId) return;
						default:
							return e(t);
					}
				};
			},
			582333: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ay: () => a,
					L0: () => s,
					VX: () => r,
					Zc: () => o,
					b2: () => n,
					te: () => l,
				});
				const n = [
					'running',
					'cycling',
					'fitness_equipment',
					'swimming',
					'walking',
					'hiking',
					'multi_sport',
					'diving',
					'winter_sports',
					'water_sports',
					'team_sports',
					'racket_sports',
					'para_sports',
					'other',
					'safety',
				];
				class a {
					constructor(e) {
						(this.findByTypeId = function (e) {
							if (!this.idMap) {
								var t = {};
								this.activityTypes.forEach((e) => {
									t[e.typeId] = e;
								}),
									(this.idMap = t);
							}
							return this.idMap[e];
						}),
							(this.findByTypeKey = function (e) {
								return this.activityTypes.find((t) => e == t.typeKey);
							}),
							(this.getParentType = function (e) {
								var t = this.findByTypeKey(e);
								if (t) {
									var i = t.parentTypeId;
									if (i) {
										var n = this.findByTypeId(i);
										return 'all' == n.typeKey ? t : n;
									}
									return t;
								}
								return null;
							}),
							(this.activityTypes = e),
							(this.idMap = null);
					}
				}
				const s = function (e) {
						for (let t = 0, i = n.length; t < i; t++) if (e === n[t]) return t;
						return -1;
					},
					r = (e, t, i) => {
						let n = e.filter(
							(e) => e.parentTypeId === t && 'steps' !== e.typeKey
						);
						return i && n.sort((e, t) => (e[i] < t[i] ? -1 : 1)), n;
					},
					o = function (e) {
						let t = [];
						return (
							e &&
								e.length &&
								((t = [...e]),
								t.forEach((e) => {
									let t = e.privacySubcategoryType;
									'winter_sport' === t && (t = 'winter_sports'),
										(e.displayOrder = s(t));
								}),
								t.sort((e, t) => (e.displayOrder < t.displayOrder ? -1 : 0))),
							t
						);
					},
					l = function (e) {
						var t = new a(e).findByTypeKey('all').typeId,
							i = [];
						return (
							e.forEach((e) => {
								if (e.parentTypeId === t) {
									var n = { ...e };
									(n.children = []), i.push(n);
								}
							}),
							e.forEach((e) => {
								if (e.typeId !== t && e.parentTypeId !== t) {
									var n = e.parentTypeId,
										a = i.find((e) => e.typeId === n);
									a && a.children && a.children.push(e);
								}
							}),
							i.forEach((e) => {
								e.children = e.children.sort((e, t) =>
									e.typeKey < t.typeKey ? -1 : e.typeKey > t.typeKey ? 1 : 0
								);
							}),
							i
						);
					};
			},
			278941: (e, t, i) => {
				'use strict';
				i.d(t, { $z: () => s, Fx: () => a, Pj: () => o, R3: () => r });
				const n = (e) => {
						let t = null;
						if (e && e.length > 0) {
							t = e.reduce((e, t) => e + t, 0) / e.length;
						}
						return t;
					},
					a = (e) => {
						let t = { avg: null, stdev: null };
						if (e && e.length > 0) {
							t.avg = n(e);
							let i = e.map((e) => {
									let i = e - t.avg;
									return i * i;
								}),
								a = n(i);
							t.stdev = Math.sqrt(a);
						}
						return t;
					},
					s = (e, t) =>
						e.reduce((e, i) => {
							let n = t(i);
							return e.hasOwnProperty(n) || (e[n] = []), e[n].push(i), e;
						}, {}),
					r = (e, t) => {
						let i,
							n = [],
							a = [];
						for (let s = 0, r = e.length; s < r; s++)
							(i = t ? e[s][t] : e[s]),
								-1 === a.indexOf(i) && (n.push(e[s]), a.push(i));
						return n;
					},
					o = (e, t, i) => e.splice(i, 0, e.splice(t, 1)[0]);
			},
			435687: (e, t, i) => {
				'use strict';
				i.d(t, {
					FD: () => d,
					JU: () => m,
					M5: () => p,
					MQ: () => c,
					RG: () => r,
					SK: () => y,
					UL: () => g,
					Uu: () => l,
					V: () => s,
					Wg: () => o,
					ft: () => u,
					nl: () => h,
				});
				var n = i(798718);
				const a = window.URL_BUST_VALUE,
					s = (e) => e.badgeTypeIds.includes(n.sc.REPEATABLE),
					r = () => `${n.Me}?bust=${a}`,
					o = (e, t = 'lrg', i) => {
						if (!e && !i)
							throw 'getBadgeImageUrl(badgeId): badgeId not specified';
						return i
							? `/images/badges/xxhdpi/badge_${i}_${t}.png?bust=${a}`
							: `/images/badges/xxhdpi/badge_${e}_${t}.png?bust=${a}`;
					},
					l = (e, t, i = !0) =>
						`/images/badges/web/art_badge_challenge_${i ? 'desktop' : 'mobile'}_category_${e}_${t}.png?bust=${a}`,
					c = (e) => `/images/badges/xxhdpi/logo_${e}_lrg.png?bust=${a}`,
					d = (e) => {
						const t = e.badgeTypeIds;
						return (
							t.includes(n.sc.LIMITED_ANNUAL) || t.includes(n.sc.LIMITED_SINGLE)
						);
					},
					u = (e, t) => t.localize('badge_title_' + e),
					p = (e, t) => t.t('badges-list:badge_title_' + e),
					y = (e, t) => t.t('badges-list:badge_description_' + e),
					h = (e) => 4 === e.badgeCategoryId,
					g = (e) => 4 === e.badgeCategoryId && 9 === e.badgeAssocTypeId,
					m = (e) => {
						if (null === e.badgeEndDate) return !1;
						const t = new Date(e.badgeEndDate);
						return new Date() > t;
					};
			},
			680616: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => n });
				const n = {
					calendarSyncCapMap: [
						{
							header: 'training.plans.workouts',
							bodyText: 'training.plans.workouts',
							capabilities: ['trainingPlanCapable', 'workoutCapable'],
						},
					],
					getCapabilityValue: (e, t) => {
						let i = !1;
						return (
							e &&
								t.forEach((t) => {
									i = e[t];
								}),
							i
						);
					},
					hasDeviceWithCapability: (e, t) => {
						let i = !1;
						return (
							!!e &&
							(e.forEach((e) => {
								e[t] && (i = !0);
							}),
							i)
						);
					},
					getDevicesWithCapability: (e, t) => {
						let i = [];
						return (
							t.forEach((t) => {
								t[e] && i.push(t);
							}),
							i
						);
					},
				};
			},
			586816: (e, t, i) => {
				'use strict';
				i.d(t, { B: () => n, w: () => a });
				const n = () =>
						-1 !== window.location.href.indexOf('garmin.cn') ||
						window.chinaMode,
					a = () =>
						window.chinaMode ||
						(-1 !== window.location.href.indexOf('garmin.cn') &&
							-1 === window.location.href.indexOf('connectus.garmin.cn'));
			},
			815835: (e, t, i) => {
				'use strict';
				i.d(t, { E2: () => n, Ob: () => s, j5: () => a, xH: () => r });
				const n = (e) => {
						e = e.replace(
							/^#?([a-f\d])([a-f\d])([a-f\d])$/i,
							(e, t, i, n) => t + t + i + i + n + n
						);
						const t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
						return t
							? [parseInt(t[1], 16), parseInt(t[2], 16), parseInt(t[3], 16)]
							: null;
					},
					a = (e) => {
						const t = n(e);
						return `rgba(${t[0]}, ${t[1]}, ${t[2]}, 1)`;
					},
					s = (e, t, i) =>
						'#' + ((1 << 24) + (e << 16) + (t << 8) + i).toString(16).slice(1),
					r = (e, t, i) => {
						const n = (2 * (1 - i) - 1 + 1) / 2,
							a = 1 - n;
						return [
							Math.round(e[0] * n + t[0] * a),
							Math.round(e[1] * n + t[1] * a),
							Math.round(e[2] * n + t[2] * a),
						];
					};
			},
			450566: (e, t, i) => {
				'use strict';
				i.d(t, {
					A3: () => x,
					AV: () => L,
					Ab: () => b,
					Cd: () => B,
					FZ: () => C,
					Fc: () => S,
					Fy: () => O,
					GV: () => g,
					Kl: () => F,
					Q5: () => _,
					SL: () => A,
					U0: () => V,
					Uh: () => G,
					WU: () => I,
					Zo: () => M,
					eW: () => D,
					eg: () => P,
					gP: () => H,
					gc: () => f,
					hb: () => T,
					lV: () => k,
					qP: () => m,
					qi: () => N,
					qm: () => v,
					r0: () => h,
					t: () => U,
					uq: () => E,
					xD: () => w,
					ys: () => R,
				});
				var n = i(109285),
					a = i.n(n),
					s = i(479137),
					r = i.n(s),
					o = i(121769),
					l = i.n(o),
					c = i(644194),
					d = i.n(c),
					u = i(283756),
					p = i.n(u),
					y = i(151322);
				const h = {
						'MM/DD/YYYY': 'mm/dd/yy',
						'DD/MM/YYYY': 'dd/mm/yy',
						'YYYY/MM/DD': 'yy/mm/dd',
					},
					g = (e) => {
						let t = e.firstDayOfWeek.dayId - 2;
						return t < 0 && (t += 7), t;
					},
					m = (e = 0, t) => {
						let i = a()(t).day(e);
						return i.isAfter(t, 'day') && i.add(-7, 'day'), i;
					},
					A = (e = 0, t) => {
						let i = a()(t).day(e);
						i.isAfter(t, 'day') && i.add(-7, 'day');
						return i.add(6, 'day');
					},
					_ = (e) => a()(e).startOf('month'),
					E = (e) => a()(e).endOf('month'),
					T = (e) => a()(e).startOf('year'),
					C = (e) => a()(e).endOf('year'),
					S = (e, t, i) => {
						let n = '',
							a = e && e.length > 0 ? e.length : 0,
							s = {
								SUNDAY: 0,
								MONDAY: 1,
								TUESDAY: 2,
								WEDNESDAY: 3,
								THURSDAY: 4,
								FRIDAY: 5,
								SATURDAY: 6,
							};
						if (7 === a) return i.t('common:every_day');
						if (
							5 === a &&
							-1 !== e.indexOf('MONDAY') &&
							-1 !== e.indexOf('TUESDAY') &&
							-1 !== e.indexOf('WEDNESDAY') &&
							-1 !== e.indexOf('THURSDAY') &&
							-1 !== e.indexOf('FRIDAY')
						)
							return i.t('common:weekdays');
						if (
							2 === a &&
							-1 !== e.indexOf('SATURDAY') &&
							-1 !== e.indexOf('SUNDAY')
						)
							return i.t('common:weekends');
						for (let r = 0; r < a; r += 1)
							e[r] &&
								((n += i.t(
									'common:day.' + s[e[r]] + (t ? '.' + t.toLowerCase() : '')
								)),
								r + 1 !== a && (n += ', '));
						return n;
					},
					I = (e, t) => {
						let i = a()(t),
							n = a()(e);
						return Math.round(a().duration(i.diff(n)).asDays());
					},
					v = (e) => a()().isSame(a()(e), 'day'),
					f = (e) => {
						const t = a()().isoWeek();
						return a()(e).isoWeek() === t;
					},
					D = (e) => {
						switch (e) {
							case y.A.MMDDYYYY:
								return 'MM/DD/YYYY';
							case y.A.DDMMYYYY:
								return 'DD/MM/YYYY';
							case y.A.YYYYMMDD:
								return 'YYYY/MM/DD';
							default:
								return 'MM/DD/YYYY';
						}
					},
					N = (e, t) => {
						let i = new Date(e.getTime()),
							n = new Date(t.getTime());
						return (
							i.setHours(0, 0, 0, 0),
							n.setHours(0, 0, 0, 0),
							+(Math.round(n.getTime() - i.getTime()) / 864e5).toFixed(0)
						);
					},
					R = (e, t) => {
						let i = N(e, t),
							n = i >= 365 ? Math.floor(i / 365) : 0,
							a = 0,
							s = 0;
						return (
							n > 0
								? ((a = Math.round((i % 365) / 7)),
									(s = Math.round((i % 365) % 7)))
								: ((a = Math.floor(i / 7)), (s = Math.round(i - 7 * a))),
							{ years: n, weeks: a, totalDays: i, days: s }
						);
					},
					b = () => a()().subtract(1, 'month').startOf('month'),
					L = () => {
						const e = new Date(),
							t = e.getFullYear();
						let i = (e.getMonth() + 1).toString();
						i.length < 2 && (i = `0${i}`);
						let n = e.getDate().toString();
						return n.length < 2 && (n = `0${n}`), `${t}-${i}-${n}`;
					},
					P = (e) => e.toISOString().split('T')[0],
					O = (e) => new Date(`${e}T00:00:00`),
					w = (e) => new Date(e),
					F = (e, t) => (r().extend(d()), P(r().utc(e).add(t, 'day'))),
					k = (e, t) => (r().extend(d()), P(r().utc(e).add(t, 'month'))),
					U = (e) => {
						const t = new Date(e);
						return t.setDate(1), P(t);
					},
					M = (e) => {
						const t = new Date(e),
							i = new Date(Date.UTC(t.getFullYear(), t.getMonth() + 1, 0));
						return P(i);
					},
					G = (e, t) => {
						const i = e.split('-')[1];
						return t.t(`common:month.abbr.${i}`);
					},
					x = (e = 'UTC', t = new Date()) => {
						const i = new Date(t.toLocaleString('en-US', { timeZone: 'UTC' }));
						let n;
						try {
							n = new Date(t.toLocaleString('en-US', { timeZone: e }));
						} catch (a) {
							n = new Date(t.toLocaleString('en-US', { timeZone: 'UTC' }));
						}
						return (n.getTime() - i.getTime()) / 36e3;
					},
					B = (e = 'UTC', t = new Date()) => {
						const i = x(e, t) / 100,
							n = Math.sign(i),
							a = Math.floor(Math.abs(i));
						return { hours: a * n, minutes: 60 * (Math.abs(i) - a) * n };
					},
					H = (e, t) => (
						r().extend(l()),
						r().extend(d()),
						r().extend(p()),
						r()(t).tz(e, !1).utcOffset()
					),
					V = (e, t) => {
						const i = new Date(),
							n = new Date(e),
							a = Math.abs(i.getTime() - n.getTime());
						return Math.ceil(a / 864e5) <= t;
					};
			},
			267264: (e, t, i) => {
				'use strict';
				i.d(t, { i: () => r, x: () => o });
				const n = /[&<>"'`\/]/g,
					a = {
						'&': '&amp;',
						'<': '&lt;',
						'>': '&gt;',
						'"': '&quot;',
						"'": '&#x27;',
						'`': '&#x60;',
						'/': '&#x2F;',
					},
					s = {
						'&amp;': '&',
						'&lt;': '<',
						'&gt;': '>',
						'&quot;': '"',
						'&#x27;': "'",
						'&#x60;': '`',
						'&#x2F;': '/',
					},
					r = (e) =>
						('' + e).replace(n, function (e) {
							return a[e];
						}),
					o = (e) => {
						let t = '(?:' + Object.keys(s).join('|') + ')',
							i = RegExp(t, 'g');
						return ('' + e).replace(i, function (e) {
							return s[e];
						});
					};
			},
			655984: (e, t, i) => {
				'use strict';
				i.d(t, { Az: () => s, Li: () => o, WO: () => a, oD: () => r });
				var n = i(80879);
				n.Ay.loadNamespaces(['exercise_types']);
				const a = (e) =>
						'UNKNOWN' === e.categoryKey
							? n.Ay.t('activity:choose_an_exercise')
							: n.Ay.t(
									`exercise_types:${e.categoryKey}_${e.exerciseKey ? e.exerciseKey : e.categoryKey}`
								),
					s = (e) => `${e.categoryKey}|${e.exerciseKey ? e.exerciseKey : ''}`,
					r = (e, t, i) => {
						if (!e.categories) return [];
						let n = [];
						if (
							(Object.keys(e.categories).forEach((t) => {
								const s = e.categories[t].exercises;
								let r = !1;
								const o = Object.keys(s).map((e) => {
									t === e && (r = !0);
									return {
										...s[e],
										categoryKey: t,
										exerciseKey: e,
										exerciseName: a({ exerciseKey: e, categoryKey: t }, i),
									};
								});
								if (!r) {
									const n = e.categories[t];
									o.push({
										isBodyWeight: null,
										counterpart: null,
										exerciseKey: t,
										exerciseName: a({ exerciseKey: t, categoryKey: t }, i),
										categoryKey: t,
										primaryMuscles: n.primaryMuscles,
										secondaryMuscles: n.secondaryMuscles,
									});
								}
								n = n.concat(o);
							}),
							t)
						) {
							const e = t.replace('_', '-');
							try {
								n.sort(function (t, i) {
									const n = t.exerciseName.toLowerCase(),
										a = i.exerciseName.toLowerCase();
									return n.localeCompare(a, e, {
										sensitivity: 'base',
										ignorePunctuation: !0,
									});
								});
							} catch (s) {
								return n;
							}
						}
						return n;
					},
					o = (e, t, i) => {
						const n =
							i &&
							i.length > 0 &&
							i.find((i) => i.exerciseKey === t && i.categoryKey === e);
						return n && n.isBodyWeight;
					};
			},
			903673: (e, t, i) => {
				'use strict';
				i.d(t, {
					Qd: () => I,
					RQ: () => r,
					S0: () => p,
					Vw: () => f,
					YX: () => u,
					Z2: () => N,
					gy: () => c,
					jq: () => v,
					lN: () => o,
					s3: () => D,
					u2: () => l,
				});
				var n = i(408822),
					a = i(29273),
					s = i(534720);
				const r = (e, t) => Math.floor((e / t) * 100),
					o = {
						goal: { cup: 80, oz: 640, ml: 19e3 },
						container: { cup: 16, oz: 128, ml: 3785 },
						intake: { cup: 277, oz: 2216, ml: 65534 },
					},
					l = (e) => o.goal[Object.keys(u).find((t) => u[t] === e)],
					c = (e) => o.container[Object.keys(u).find((t) => u[t] === e)],
					d = { cup: [1, 2, 3], oz: [8, 16, 24], ml: [250, 500, 750] },
					u = { cup: 'cup', oz: 'ounce', ml: 'milliliter' },
					p = (e) => {
						const t = Object.keys(u).find((t) => u[t] === e),
							i = [];
						return (
							d[t].forEach((t, a) => {
								i.push({
									name: n.A.localize('container_number', a + 1),
									volume: t,
									unit: e,
								});
							}),
							i
						);
					},
					y = 91,
					h = 125,
					g = 64,
					m = 72,
					A = 96,
					_ = 2.7,
					E = 3.7,
					T = 1900,
					C = 2100,
					S = 2800,
					I = (e, t) => {
						let i = {};
						switch (e) {
							case u.cup:
								(i.hydrationDailyIntakeFemale = y),
									(i.hydrationDailyIntakeMale = h),
									(i.hydrationCommonGoal = g),
									(i.hydrationDefaultGoal = (0, s.Y9)(t) ? A : m),
									(i.fluidType1 = n.A.localize('cup_unit_pl')),
									(i.fluidType2 = n.A.localize('oz_unit').toLowerCase());
								break;
							case u.oz:
								(i.hydrationDailyIntakeFemale = y),
									(i.hydrationDailyIntakeMale = h),
									(i.hydrationCommonGoal = g),
									(i.hydrationDefaultGoal = (0, s.Y9)(t) ? A : m),
									(i.fluidType1 = n.A.localize('oz_unit').toLowerCase()),
									(i.fluidType2 = n.A.localize('oz_unit').toLowerCase());
								break;
							case u.ml:
								(i.hydrationDailyIntakeFemale = a.A.formatDecimalNumber(_, 1)),
									(i.hydrationDailyIntakeMale = a.A.formatDecimalNumber(E, 1)),
									(i.hydrationCommonGoal = a.A.formatDecimalNumber(T / 1e3, 1)),
									(i.hydrationDefaultGoal = (0, s.Y9)(t) ? S : C),
									(i.fluidType1 = n.A.localize('ml_unit').toLowerCase()),
									(i.fluidTypeAlternate = n.A.localize('l_unit').toLowerCase());
						}
						return i;
					},
					v = (e, t) => {
						let i = 0;
						switch (t) {
							case u.ml:
								i = e;
								break;
							case u.oz:
								i = e * a.A.ConversionFactors.FluidOuncesToMilliliters;
								break;
							case u.cup:
								i = e * a.A.ConversionFactors.CupsToMilliliters;
						}
						return (i = Math.round(1e4 * i) / 1e4), i;
					},
					f = (e, t) => {
						const i = N(t);
						return a.A.convertFluid(e, i, !0);
					},
					D = (e, t) => {
						const i = N(t);
						return a.A.personalizeFluid(e || 0, i, !1);
					},
					N = (e) =>
						e &&
						e.userData &&
						'undefined' !== typeof e.userData.hydrationMeasurementUnit
							? e.userData.hydrationMeasurementUnit
							: R(e),
					R = (e) =>
						(null === e || void 0 === e
							? void 0
							: e.userData.measurementSystem) === a.A.MeasurementSystems.METRIC
							? u.ml
							: u.cup;
			},
			281202: (e, t, i) => {
				'use strict';
				i.d(t, { D0: () => s, hg: () => a, sj: () => r });
				const n = 'support.garmin.com/sas/connect/',
					a = (e) => `//${n}?contentId=${e}`,
					s = (e) => `//${n}?serialNumber=${e}`,
					r = (e) => `//${n}?partNumber=${e}&focus=manuals`;
			},
			716343: (e, t, i) => {
				'use strict';
				i.d(t, {
					$3: () => Z,
					En: () => y,
					Fg: () => Q,
					Fl: () => ee,
					GK: () => j,
					If: () => m,
					JQ: () => T,
					Mw: () => f,
					N4: () => x,
					P7: () => te,
					PU: () => I,
					PW: () => A,
					Pc: () => p,
					QY: () => X,
					R5: () => L,
					RW: () => w,
					Rj: () => J,
					Rx: () => M,
					Um: () => d,
					WA: () => O,
					Xf: () => D,
					_V: () => $,
					a$: () => h,
					a0: () => _,
					cZ: () => N,
					dP: () => R,
					eo: () => b,
					fA: () => C,
					gL: () => q,
					kM: () => G,
					mR: () => E,
					mq: () => P,
					nj: () => S,
					oA: () => Y,
					rg: () => u,
					tB: () => v,
					wO: () => B,
					wr: () => W,
					yB: () => K,
					z8: () => z,
					zd: () => g,
				});
				var n = i(109285),
					a = i.n(n),
					s = i(80879),
					r = i(993980),
					o = i(534720),
					l = i(576797),
					c = i(544310);
				const d = (e, t, i) => e && (!(0, o.Y9)(t) || h(t)) && !!i,
					u = (e, t) => e && (!(0, o.Y9)(t) || h(t)),
					p = (e, t) =>
						e &&
						e.userMenstrualCycleSettings &&
						e.userMenstrualCycleSettings.menstrualCycleType !== r.T5 &&
						t,
					y = (e) =>
						e &&
						e.userMenstrualCycleSettings &&
						e.userMenstrualCycleSettings.menstrualCycleType === r.ip,
					h = (e) =>
						e &&
						e.userMenstrualCycleSettings &&
						('REGULAR' !== e.userMenstrualCycleSettings.menstrualCycleType ||
							e.userMenstrualCycleSettings.avgCycleLength > 1),
					g = (e) => isNaN(e),
					m = (e) => e.dayInCycle === e.periodLength + 4,
					A = (e) => e.predictedCycle,
					_ = (e) =>
						e.periodPrediction || (e.ovulationPrediction && e.periodPrediction),
					E = (e) =>
						e &&
						(e.dischargeTracking ||
							(e.physicalSymptomsTracking && e.menstrualCycleType !== r.T5) ||
							e.moodTracking ||
							e.ovulationDateTracking ||
							e.physicalSymptomsTracking ||
							e.sexDriveTracking ||
							e.sexualActivityTracking),
					T = (e) => e && e.menstrualCycleType === r.T5,
					C = (e) => e && e.flowTracking,
					S = (e) => E(e) || C(e),
					I = (e, t, i, n) => {
						let a = {
							...e,
							userProfilePk: t,
							calendarDate: i,
							reportTimestamp: n,
						};
						for (let s in a)
							(null === a[s] ||
								void 0 === a[s] ||
								(0 === a[s].length && 'notes' !== s)) &&
								delete a[s];
						return a;
					},
					v = (e, t, i, n = []) => {
						let s = {
								loggedOvulationDays: [],
								loggedSymptomDays: [],
								fertileDates: [],
								menstrualDates: [],
								loggedNoteDays: [],
								overlapDates: [],
							},
							o = t || e;
						return (
							Object.keys(o).forEach((e) => {
								let t = o[e];
								Object.keys(t.loggedSymptomDays).forEach((e) => {
									let i = t.loggedSymptomDays[e];
									-1 === s.loggedSymptomDays.indexOf(i) &&
										s.loggedSymptomDays.push(i);
								}),
									Object.keys(t.loggedOvulationDays).forEach((e) => {
										let i = t.loggedOvulationDays[e];
										-1 === s.loggedOvulationDays.indexOf(i) &&
											s.loggedOvulationDays.push(i);
									}),
									Object.keys(t.loggedNoteDays).forEach((e) => {
										let i = t.loggedNoteDays[e];
										-1 === s.loggedNoteDays.indexOf(i) &&
											s.loggedNoteDays.push(i);
									}),
									Object.keys(t.cycleSummaries).forEach((e) => {
										let i = t.cycleSummaries[e];
										for (let t = 0; t < i.periodLength; t++) {
											let e = a()(i.startDate).add(t, 'days').format(r.DX);
											-1 === s.menstrualDates.indexOf(e) &&
												-1 === n.indexOf(e) &&
												s.menstrualDates.push(e);
										}
										for (let t = 0; t < O(i); t++) {
											let e = P(i) + t - 1,
												o = e > 0 ? e : 0,
												l = a()(i.startDate).add(o, 'days').format(r.DX);
											-1 === s.fertileDates.indexOf(l) &&
												-1 === n.indexOf(l) &&
												s.fertileDates.push(l);
										}
										if (i.overlapCycleList)
											for (
												let t = 0;
												t < i.overlapCycleList[0].periodLength;
												t++
											) {
												let e = a()(i.overlapCycleList[0].startDate)
													.add(t, 'days')
													.format(r.DX);
												-1 === s.overlapDates.indexOf(e) &&
													s.overlapDates.push(e),
													-1 === s.menstrualDates.indexOf(e) &&
														s.menstrualDates.push(e);
											}
									});
							}),
							i &&
								Object.keys(i).forEach((e) => {
									s[e] = [...s[e], ...i[e]].filter(
										(t, n) => [...s[e], ...i[e]].indexOf(t) === n
									);
								}),
							s
						);
					},
					f = (e) => e.startOf('month').format(r.DX),
					D = (e) => e.endOf('month').format(r.DX),
					N = (e) => e.split('/')[0],
					R = (e, t) => {
						const i = (t, i) => a()(e[t]).add(i, 'd').format(r.DX);
						for (let n in e) {
							let a = 1,
								s = -1;
							for (; -1 !== t.indexOf(i(n, a)) && -1 === e.indexOf(i(n, a)); )
								e.push(i(n, a)), a++;
							for (; -1 !== t.indexOf(i(n, s)) && -1 === e.indexOf(i(n, s)); )
								e.push(i(n, s)), s--;
						}
						return e;
					},
					b = (e, t, i) => {
						let n = [],
							s = a()().format(r.DX),
							o = [...e];
						if (i || -1 !== o.indexOf(t)) {
							if (i && -1 !== o.indexOf(t)) {
								let e = o.indexOf(t);
								o.splice(e, 1);
							}
						} else o.push(t);
						return o.length && -1 !== o.indexOf(s) && (n = R([s], o)), [...n];
					},
					L = (e, t) => {
						let i = a()(new Date()).format(r.DX),
							n = t.filter((t) => e.indexOf(t) < 0).sort(),
							s = e.filter((e) => t.indexOf(e) < 0).sort(),
							o = n.length > 0 || s.length > 0,
							l = {},
							c = [],
							d = [],
							u = null;
						if (o) {
							(s = R(s, t)), (n = R(n, t));
							let r = [...s, ...n].sort();
							r && r.length && r[r.length - 1] > i && (i = r[r.length - 1]);
							let o = e.filter((e) => e <= i),
								p = [...t.filter((e) => e <= i), ...o].sort(),
								y = p[0],
								h = p[p.length - 1];
							(l = { startDate: y, endDate: h }),
								o.sort().map(function (e, t) {
									e >= y &&
										e <= h &&
										(null !== u &&
											a()(e) > a()(u).add(1, 'day') &&
											(c.push(d), (d = [])),
										d.push(e),
										(u = e),
										h === e && (c.push(d), (d = [])));
								}),
								d.length > 0 && (c.push(d), (d = []));
						}
						return (l.arrayOfCycles = [...c]), l;
					},
					P = (e) => {
						const { fertileWindowStart: t } = e;
						return t < 0 ? 0 : t;
					},
					O = (e) => {
						const { fertileWindowStart: t, lengthOfFertileWindow: i } = e;
						return t < 0 ? Math.max(i + t, 0) : i;
					},
					w = (e, t, i, n) => ({
						selectedDate: t,
						isAPredictionSelected:
							!(!e || !e.periodLength) || (e && e.fertileWindowStart),
						userIsInactive: i,
						customWidth: 227,
						customHeight: 227,
						dayInCycle: e ? e.dayInCycle : null,
						currentPhase: e ? e.currentPhase : null,
						daysUntilNextPhase: e ? e.daysUntilNextPhase : null,
						predictedCycleLength: F(e, n),
						predictedCycle: e ? e.predictedCycle : null,
						lengthOfFertileWindow: e ? O(e) : null,
						fertileWindowStart: e ? P(e) : null,
						periodLength: e ? e.periodLength : null,
						lutealPhaseStart: e ? e.lutealPhaseStart : null,
						isMenstrualCycleConfigured: h(n),
						isCycleTypeNone:
							n &&
							n.userMenstrualCycleSettings &&
							n.userMenstrualCycleSettings.menstrualCycleType === r.T5,
						periodPrediction: !(!e || !e.periodLength),
						contraception: k(e),
						ovulationPrediction: !(!e || !U(e.fertileWindowStart)),
					}),
					F = (e, t) =>
						e && e.predictedCycleLength
							? e.predictedCycleLength
							: t && t.userMenstrualCycleSettings
								? t.userMenstrualCycleSettings.avgPeriodLength
								: 0,
					k = (e) => {
						let t = 'NONE';
						return (
							e &&
								e.periodLength &&
								(t =
									(U(e.fertileWindowStart) && !e.lutealPhaseStart) ||
									(!U(e.fertileWindowStart) && e.lutealPhaseStart)
										? 'NONE'
										: 'OTHER'),
							t
						);
					},
					U = (e) => 'undefined' !== typeof e && null !== e,
					M = (e, t, i) =>
						(e ||
							(i &&
								(i.periodPrediction || i.ovulationPrediction) &&
								i.contraception === r.Eo)) &&
						i.periodPrediction &&
						!e &&
						'' !== t,
					G = (e, t, i) => {
						switch (t) {
							case 1:
								return 'label_phase_name_menstrual';
							case 2:
								return 'label_phase_name_follicular';
							case 3:
								return i
									? e
										? 'label_phase_name_ovulation'
										: 'label_phase_name_follicular'
									: 'label_phase_name_luteal';
							case 4:
								return 'label_phase_name_luteal';
							default:
								return '--';
						}
					},
					x = (e, t, i) =>
						1 === e
							? 'label_next_phase'
							: 2 === e
								? !i && t
									? 'label_next_period'
									: 'label_next_phase'
								: 3 === e
									? (i && !t) || (!i && t)
										? 'label_next_period'
										: 'label_next_phase'
									: 'label_next_period',
					B = (e) => a()(e).isSame(a()(), 'd'),
					H = {
						FINE: [],
						HAPPY: [],
						ENERGETIC: [],
						MOTIVATED: [],
						MOOD_SWINGS: [],
						SAD: [],
						EMOTIONAL: [],
						OVERWHELMED: [],
						IRRITABLE: [],
						FRUSTRATED: [],
						WORRIED: [],
					},
					V = {
						NO_DISCHARGE: [],
						CREAMY: [],
						EGG_WHITE: [],
						SPOTTING: [],
						STICKY: [],
						UNUSUAL: [],
						LIGHT: [],
						MEDIUM: [],
						HEAVY: [],
					},
					W = (e, t) => {
						let i = null;
						if ('discharge' === t) i = Object.keys(V);
						else if ('moods' === t) i = Object.keys(H);
						else if ('symptoms' === t) return q(e);
						if (null !== i) {
							let t = Array(i.length);
							return (
								i.forEach((i, n) => {
									e.forEach((e) => {
										e === i && t.splice(n, 0, e);
									});
								}),
								t.filter((e) => 'undefined' !== typeof e)
							);
						}
						return e;
					},
					J = (e) => {
						let t = [
								'discharge',
								'flow',
								'moods',
								'ovulationDay',
								'sexDrive',
								'sexualActivity',
								'symptoms',
							],
							i = {
								flow: { LIGHT: [], MEDIUM: [], HEAVY: [] },
								symptoms: {
									ACNE: [],
									BACKACHE: [],
									BLOATING: [],
									BODY_ACHES: [],
									CONSTIPATION: [],
									CONTRACTIONS: [],
									CRAMPS: [],
									CRAVINGS: [],
									DIARRHEA: [],
									DIZZINESS: [],
									FATIGUE: [],
									HEADACHE: [],
									INSOMNIA: [],
									NAUSEA: [],
									TENDER_BREASTS: [],
									TROUBLE_BREATHING: [],
									CHILLS: [],
									DISTRACTED: [],
									DRY_SKIN: [],
									FREQUENT_URINATION: [],
									HAIR_LOSS: [],
									HOT_FLASHES: [],
									NIGHT_SWEATS: [],
									URINE_LEAKAGE: [],
									VAGINAL_DRYNESS: [],
									VOMITING: [],
									WEIGHT_GAIN: [],
									SWELLING: [],
									HEARTBURN: [],
									ROUND_LIGAMENT_PAIN: [],
								},
								moods: Object.assign({}, H),
								discharge: Object.assign({}, V),
								ovulationDay: {},
								sexualActivity: { PROTECTED: [], UNPROTECTED: [] },
								sexDrive: { LOW: [], AVERAGE: [], HIGH: [] },
							};
						e &&
							e.forEach((e) => {
								let n = e;
								n.dailyLogs &&
									n.dailyLogs.map(function (e) {
										for (let n in e)
											if (e.hasOwnProperty(n) && t.indexOf(n) > -1 && e[n]) {
												let t = {};
												if ('object' === typeof e[n])
													t = {
														...e[n].reduce(function (t, a) {
															return (
																(t[a] =
																	i[n] && i[n][a]
																		? [...i[n][a], e.calendarDate]
																		: [e.calendarDate]),
																t
															);
														}, {}),
													};
												else if (
													'string' === typeof e[n] ||
													'boolean' === typeof e[n]
												) {
													let a = !0 === e[n] ? n + '_pural' : e[n];
													(t = { ...t }),
														(t[a] =
															i[n] && i[n][a]
																? [...i[n][a], e.calendarDate]
																: [e.calendarDate]);
												}
												i[n] = { ...i[n], ...t };
											}
									});
							});
						for (let n in i) {
							for (let e in i[n]) 0 === i[n][e].length && delete i[n][e];
							i.hasOwnProperty(n) &&
								0 === Object.keys(i[n]).length &&
								delete i[n];
						}
						return i;
					},
					Y = (e) => {
						let t = 0;
						if (e)
							return (
								Object.keys(e).forEach((i) => {
									let n = e[i];
									n.cycleSummaries
										? Object.keys(n.cycleSummaries).forEach((e) => {
												let i = n.cycleSummaries[e];
												t += i.cycleLength;
											})
										: (t += n.avgCycleLength);
								}),
								t
							);
					},
					$ = (e) =>
						e &&
						((e.discharge && e.discharge.length) ||
							(e.flow && e.flow.length) ||
							(e.moods && e.moods.length) ||
							e.ovulationDay ||
							(e.sexDrive && e.sexDrive.length) ||
							(e.sexualActivity && e.sexualActivity.length) ||
							(e.symptoms && e.symptoms.length)),
					j = (e) =>
						(0, o._8)({ value: 'ROLE_WELLNESS_USER, ROLE_FITNESS_USER' }, e),
					K = [
						{ value: r.ip, label_translation: '--' },
						{ value: r.T5, label_translation: 'no_period' },
						{ value: r.pI, label_translation: 'regular_cycle_type' },
						{ value: r.Qp, label_translation: 'irregular_cycle_type' },
						{ value: r.ou, label_translation: 'pregnant' },
					],
					z = [
						{ value: r.cF, label_translation: 'label_contraceptive_injection' },
						{ value: r.em, label_translation: 'label_contraceptive_patch' },
						{ value: r.uJ, label_translation: 'label_IUD' },
						{ value: r.Tq, label_translation: 'label_implant' },
						{ value: r.Wb, label_translation: 'label_oral_contraceptive' },
						{ value: r.Np, label_translation: 'label_vaginal_ring' },
						{ value: r.a1, label_translation: 'label_none' },
					],
					q = (e) => {
						let t = e.map((e) => ({
							key: e,
							label: s.Ay.t(`menstrual-cycle-tracking:${e.toLowerCase()}`),
						}));
						return (
							t.sort((e, t) => e.label.localeCompare(t.label)),
							(e = t.map((e) => e.key))
						);
					},
					Q = (e) => {
						l.A.push({
							event: 'track_event',
							category: "Women's Health Event",
							action: e,
						});
					},
					X = (e, t, i, n = 28, a, s, r) => {
						const o = i;
						let l = e;
						const c = e + t - 1;
						if ((l <= 0 && !isNaN(l) && (l = i), a && n >= 20)) {
							let a = i + 1,
								s = e - 1;
							return (
								e <= 0 && t > 0 && ((a = null), (s = null)),
								{
									startMenstrualPhase: 1,
									endMenstrualPhase: o,
									startFollicularPhase: a,
									endFollicularPhase: s,
									startFertilePhase: l,
									endFertilePhase: c,
									startLutealPhase: c + 1,
									endLutealPhase: n,
								}
							);
						}
						{
							const e = n || 28;
							return 'NONE' === s && n >= 20
								? {
										startMenstrualPhase: 1,
										endMenstrualPhase: o,
										endFertilePhase: r || c || o + 7,
										endCyclePhase: e,
									}
								: {
										startMenstrualPhase: 1,
										endMenstrualPhase: o,
										startCyclePhase: i,
										endCyclePhase: e,
									};
						}
					},
					Z = (e) => {
						const {
							dayInCycle: t,
							calendarDate: i,
							selectedDate: n,
							isAPredictionSelected: a,
							userIsInactive: s,
							predictedCycle: r,
							currentPhase: o,
						} = e;
						let l = { predictionsOn: !0 };
						return (
							!(!i || !n) &&
							n === i &&
							!a &&
							((e, t) => {
								return (
									!1 ===
										(i = { predictedCycle: e, currentPhase: t })
											.predictedCycle && 1 === i.currentPhase
								);
								var i;
							})(r, o)
								? (l = {
										title: t,
										subtitle: 'label_period_day',
										predictionsOn: !1,
									})
								: !a ||
									  ((e, t) => {
											return (
												!0 ===
													(i = { predictedCycle: e, currentPhase: t })
														.predictedCycle || 1 === i.currentPhase
											);
											var i;
									  })(r, o)
									? (l = {
											title: null === t ? '_ _' : t,
											subtitle: 'label_cycle_day',
											predictionsOn: a,
										})
									: s &&
										(l = {
											title: '_ _',
											subtitle: 'label_cycle_day',
											predictionsOn: !1,
										}),
							l
						);
					},
					ee = (e, t, i) => {
						const {
							periodLength: n,
							contraception: a,
							ovulationPrediction: s,
							currentPhase: r,
							fertileWindowStart: o,
							lengthOfFertileWindow: l,
							lutealPhaseStart: d,
						} = i;
						if (e.predictionsOn) {
							const e = X(o, l, n, t, s, a, d),
								i = {
									color: c.Color704,
									newColor: c.ColorVioletPrimary,
									from: e.startMenstrualPhase,
									to: 1 === n ? 2 : e.endMenstrualPhase,
									innerRadius: '92%',
									outerRadius: '108%',
									borderColor: c.Color106,
									borderWidth: 4,
								};
							if (t < 20)
								return [
									{
										...i,
										color: c.Color142,
										newColor: c.ColorDarkuiAccent3,
										from: e.endMenstrualPhase,
										to: t,
									},
									{ ...i },
								];
							let r =
									1 === n &&
									null !== e.endFollicularPhase &&
									null !== e.startFollicularPhase &&
									e.endFollicularPhase - e.startFollicularPhase === 0,
								u = [
									{ ...i },
									{
										...i,
										color: c.Color142,
										newColor: c.ColorDarkuiAccent3,
										from: r ? 2 : e.startFollicularPhase - 1,
										to: r ? 3 : e.endFollicularPhase,
									},
									{
										...i,
										color: 'NONE' === a ? c.Color419 : c.Color142,
										newColor:
											'NONE' === a ? c.ColorGreenPrimary : c.ColorDarkuiAccent3,
										from: r ? 3 : e.startFertilePhase - 1,
										to: e.endFertilePhase,
									},
									{
										...i,
										color: c.Color142,
										newColor: c.ColorDarkuiAccent3,
										from: e.startLutealPhase - 1,
										to: e.endLutealPhase,
									},
								];
							return (
								s || 'NONE' === a
									? s ||
										'NONE' !== a ||
										(u = [
											{ ...i },
											{
												...i,
												color: c.Color142,
												newColor: c.ColorDarkuiAccent3,
												from: e.endMenstrualPhase,
												to: e.endFertilePhase,
											},
											{
												...i,
												color: c.Color142,
												newColor: c.ColorDarkuiAccent3,
												from: e.endFertilePhase,
												to: e.endCyclePhase,
											},
										])
									: (u = [
											{ ...i },
											{
												...i,
												color: c.Color142,
												newColor: c.ColorDarkuiAccent3,
												from: e.startCyclePhase - 1,
												to: e.endCyclePhase,
											},
										]),
								u
							);
						}
						return [
							{
								color: 1 === r ? c.Color704 : c.Color142,
								newColor: 1 === r ? c.ColorVioletPrimary : c.ColorDarkuiAccent3,
								from: 1,
								to: t || 28,
								innerRadius: '92%',
								outerRadius: '108%',
								borderColor: c.Color106,
								borderWidth: 4,
							},
						];
					},
					te = (e, t, i) => {
						const n = ee(e, t, i),
							{ currentPhase: a } = i;
						return n.map((e, t) => {
							const i = a && a === t + 1,
								n = e.from,
								s = e.to,
								r = i ? s - n + 1 : s - n;
							return { color: e.newColor, value: r, secondaryMetricText: '' };
						});
					};
			},
			785646: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => n });
				const n = (e, t = 'en', i = { useGrouping: !0 }) => (
					'string' !== typeof t && ((i = t), (t = 'en')),
					Intl.NumberFormat(t, i).format(e)
				);
			},
			362905: (e, t, i) => {
				'use strict';
				i.d(t, { A0: () => a, Dq: () => r, F9: () => s, r9: () => n });
				const n = (e, t) => {
						const i = new RegExp('^-?\\d+(?:\\.\\d{0,' + t + '})?', 'g'),
							n = e.toString().match(i)[0],
							a = n.indexOf('.');
						if (-1 === a) return n + '.' + '0'.repeat(t);
						const s = t - (n.length - a) + 1;
						return s > 0 ? n + '0'.repeat(s) : n;
					},
					a = (e) =>
						null !== e && void 0 !== e ? Math.round(10 * e) / 10 : null,
					s = (e) => {
						if ('number' === typeof e)
							return Math.round(100 * (e + Number.EPSILON)) / 100;
						if ('string' === typeof e) {
							const t = parseFloat(e);
							if (t) return Math.round(100 * (t + Number.EPSILON)) / 100;
						}
						return 0;
					},
					r = function (e, t, i) {
						const n = t.val(),
							a = new RegExp(
								',' === ('decimal_comma' === e ? ',' : '.')
									? /^[0-9]+,[0-9]$/
									: /^[0-9]+\.[0-9]$/,
								'g'
							).test(n),
							s = n.length;
						s < i && !a && t.attr('maxlength', i), a && t.attr('maxlength', s);
					};
			},
			188932: (e, t, i) => {
				'use strict';
				i.d(t, {
					DV: () => a,
					FC: () => r,
					Im: () => n,
					aI: () => o,
					t7: () => s,
				});
				const n = (e) => !e || (!!e && 0 === Object.keys(e).length),
					a = (e, t) => {
						const i = Object.keys(e),
							n = Object.keys(t);
						return i.length === n.length && i.every((e) => n.indexOf(e) > -1);
					},
					s = (e, t) => {
						if (!a(e, t)) return !1;
						const i = Object.keys(e);
						for (let n = 0; n < i.length; n++) {
							let a = i[n];
							if (e[a] !== t[a] && (!isNaN(e[a]) || !isNaN(t[a]))) return !1;
						}
						return !0;
					},
					r = (e) =>
						Object.keys(e)
							.filter((t) => null != e[t])
							.reduce(
								(t, i) =>
									Array.isArray(e[i])
										? { ...t, [i]: [...e[i]] }
										: 'object' === typeof e[i]
											? { ...t, [i]: r(e[i]) }
											: { ...t, [i]: e[i] },
								{}
							),
					o = (e, ...t) => t.reduce((e, t) => e && e[t], e);
			},
			586797: (e, t, i) => {
				'use strict';
				i.d(t, {
					At: () => g,
					Db: () => A,
					G8: () => h,
					HU: () => C,
					Ow: () => v,
					TT: () => S,
					b3: () => E,
					dQ: () => m,
					sc: () => I,
				});
				i(228748);
				var n = i(408822),
					a = i(29273),
					s = i(702291),
					r = i(422460),
					o = i(353463),
					l = i(70660),
					c = i(895509),
					d = i(689469),
					u = i(374607),
					p = i(303642),
					y = i(717776);
				const h = {
						STEPS: 'STEPS',
						WALKING: 'WALKING',
						CYCLING: 'CYCLING',
						RUNNING: 'RUNNING',
						SWIMMING: 'SWIMMING',
						TRAINING: 'TRAINING',
						WHEELCHAIR_PUSH_WALK: 'WHEELCHAIR_PUSH_WALK',
						WHEELCHAIR_PUSH_RUN: 'WHEELCHAIR_PUSH_RUN',
					},
					g = [36, 37],
					m = [15, 16],
					A = function (e) {
						switch (e) {
							case 'RUNNING':
								return 'icon-activity-running';
							case 'CYCLING':
								return 'icon-activity-cycling';
							case 'SWIMMING':
								return 'icon-activity-swimming';
							case 'WHEELCHAIR_PUSH_WALK':
							case 'WHEELCHAIR_PUSH_RUN':
								return 'icon-activity-wheelchair-push-walk';
							default:
								return 'icon-steps-1';
						}
					},
					_ = (e, t) => {
						var i = (0, u.Bu)(e.key),
							n = (0, u.Bu)(t.key);
						return i < n ? -1 : i > n ? 1 : 0;
					},
					E = (e, t, i) => {
						let n,
							a,
							o = '',
							l = s.A.parseISO(e);
						switch (t) {
							case u.Or.STEPS_BEST_DAY:
							case u.Or.PUSHES_BEST_DAY:
								o = r.Ay.formatMonthDayYear(l);
								break;
							case u.Or.STEPS_BEST_WEEK:
							case u.Or.PUSHES_BEST_WEEK:
								let e = l.getDay();
								0 == e && (e = 7);
								let t = l.getDate() - e + 1,
									s = t + 6;
								(n = new Date(l)),
									n.setDate(t),
									(a = new Date(l)),
									a.setDate(s),
									(o = T(n, a));
								break;
							case u.Or.STEPS_BEST_MONTH:
							case u.Or.PUSHES_BEST_MONTH:
								o = r.Ay.formatMonthYear(l);
								break;
							case u.Or.STEPS_LONGEST_STREAK:
							case u.Or.STEPS_CURRENT_STREAK:
							case u.Or.PUSHES_LONGEST_STREAK:
							case u.Or.PUSHES_CURRENT_STREAK:
								n = new Date(l);
								let c = i ? [...i].findIndex((e) => isNaN(e)) : -1;
								(i = -1 !== c ? i.slice(0, c) : i || 0),
									n.setDate(n.getDate() - (i - 1)),
									(a = new Date(l)),
									(o =
										0 == i
											? '--'
											: 1 == i
												? r.Ay.formatMonthDayYear(l)
												: T(n, a));
								break;
							default:
								o = r.Ay.formatMonthDayYear(l);
						}
						return o;
					},
					T = (e, t) => r.Ay.formatDateRange(e, t),
					C = (e, t, i) => {
						let n = (0, y.jsx)(y.Fragment, { children: i });
						switch (t) {
							case u.Or.RUN_FARTHEST:
							case u.Or.CYCLE_FARTHEST:
							case u.Or.SWIM_LONGEST:
							case u.Or.CYCLE_MAX_ELEV:
							case u.Or.CYCLE_MAX_POWER:
								n = (0, y.jsx)(p.A, {
									componentRef: e,
									typeFormat: 'decimal',
									children: i,
								});
								break;
							case u.Or.RUN_1K:
							case u.Or.RUN_5K:
							case u.Or.RUN_10K:
							case u.Or.RUN_HALF_MARATHON:
							case u.Or.RUN_MARATHON:
							case u.Or.CYCLE_40K:
							case u.Or.SWIM_100M:
							case u.Or.SWIM_400M:
							case u.Or.SWIM_750M:
							case u.Or.SWIM_1000M:
							case u.Or.SWIM_1500M:
							case u.Or.SWIM_100YD:
							case u.Or.SWIM_500YD:
							case u.Or.SWIM_1000YD:
							case u.Or.SWIM_1650YD:
							default:
								n = (0, y.jsx)(y.Fragment, { children: i });
						}
						return n;
					},
					S = (e, t) => {
						let i;
						const s = t.current.innerText;
						switch (e) {
							case u.Or.RUN_FARTHEST:
							case u.Or.CYCLE_FARTHEST:
								if (
									((i = new l.A({
										element: t.current,
										required: !0,
										mustBePositive: !0,
										minValue: 0,
										maxValue: 160934400.07,
										conversionFunction: (e) => {
											let t =
												a.A.getMeasurementSystem() ===
												a.A.MeasurementSystems.METRIC
													? 'kilometer'
													: 'mile';
											return a.A.convertDistanceToCm(e, t);
										},
									})),
									i.validateInputNow())
								)
									return n.A.localize(
										'validation.activity.distance.invalid',
										s
									);
								break;
							case u.Or.SWIM_LONGEST:
								if (
									((i = new l.A({
										element: t.current,
										required: !0,
										mustBePositive: !0,
										minValue: 0,
										maxValue: 160934400.07,
										conversionFunction: (e) => {
											let t =
												a.A.getMeasurementSystem() ===
												a.A.MeasurementSystems.METRIC
													? 'meter'
													: 'yard';
											return a.A.convertDistanceToCm(e, t);
										},
									})),
									i.validateInputNow())
								)
									return n.A.localize(
										'validation.activity.distance.invalid',
										s
									);
								break;
							case u.Or.RUN_1K:
							case u.Or.RUN_5K:
							case u.Or.RUN_10K:
							case u.Or.RUN_HALF_MARATHON:
							case u.Or.RUN_MARATHON:
							case u.Or.CYCLE_40K:
							case u.Or.SWIM_100M:
							case u.Or.SWIM_400M:
							case u.Or.SWIM_750M:
							case u.Or.SWIM_1000M:
							case u.Or.SWIM_1500M:
							case u.Or.SWIM_100YD:
							case u.Or.SWIM_500YD:
							case u.Or.SWIM_1000YD:
							case u.Or.SWIM_1650YD:
								if (
									((i = new o.A({ required: !0, element: t.current })),
									i.validateInputNow())
								)
									return n.A.localize('pr.time.format.maxValue', s);
								break;
							case u.Or.CYCLE_MAX_ELEV:
								if (
									((i = new l.A({
										element: t.current,
										required: !0,
										mustBePositive: !0,
										minValue: 0,
										maxValue: 30479.6953,
										conversionFunction: (e) =>
											a.A.getMeasurementSystem() ===
											a.A.MeasurementSystems.METRIC
												? e
												: e * (1 / a.A.ConversionFactors.MetersToFeet),
									})),
									i.validateInputNow())
								) {
									let e =
											a.A.getMeasurementSystem() ===
											a.A.MeasurementSystems.METRIC
												? n.A.localize('elevation_unit_metric')
												: n.A.localize('elevation_unit_statute'),
										t =
											a.A.getMeasurementSystem() ===
											a.A.MeasurementSystems.METRIC
												? '30,479'
												: '99,999';
									return n.A.localize('pr.edit.error.message', t, e);
								}
								break;
							case u.Or.CYCLE_MAX_POWER:
								if (
									((i = new l.A({
										element: t.current,
										required: !0,
										mustBePositive: !0,
										minValue: 0,
										maxValue: 999,
									})),
									i.validateInputNow())
								)
									return n.A.localize('pr.power.maxValue');
						}
					},
					I = (e) => {
						let t;
						switch (e) {
							case c.A.Running:
								t = h.RUNNING;
								break;
							case c.A.Cycling:
								t = h.CYCLING;
								break;
							case c.A.LapSwimming:
								t = h.SWIMMING;
								break;
							case c.A.StrengthTraining:
								t = h.TRAINING;
								break;
							case c.A.WheelchairPushWalk:
								t = h.WHEELCHAIR_PUSH_WALK;
								break;
							case c.A.WheelchairPushRun:
								t = h.WHEELCHAIR_PUSH_RUN;
								break;
							default:
								t = h.STEPS;
						}
						return t;
					},
					v = (e, t) => {
						let i = [];
						return (
							t &&
								t.length > 0 &&
								(i = t.filter((t) => {
									let i = d.A.getRecordTypeFromKey(t.key);
									return t.sport === e && i;
								})),
							i.sort(_),
							i
						);
					};
			},
			289456: (e, t, i) => {
				'use strict';
				i.d(t, {
					$D: () => P,
					AQ: () => J,
					Ap: () => G,
					B1: () => Z,
					BV: () => C,
					CJ: () => f,
					D4: () => g,
					Fg: () => T,
					GM: () => S,
					I2: () => R,
					I8: () => O,
					JF: () => j,
					MA: () => E,
					Ni: () => le,
					O1: () => A,
					OT: () => Q,
					P9: () => de,
					Rd: () => B,
					Rw: () => F,
					Sr: () => ee,
					Sv: () => L,
					TO: () => x,
					Ux: () => Y,
					XN: () => $,
					ai: () => ae,
					az: () => m,
					b_: () => ie,
					g$: () => z,
					gx: () => W,
					h6: () => v,
					iC: () => I,
					jm: () => ce,
					kb: () => w,
					kd: () => U,
					mM: () => D,
					pr: () => k,
					sM: () => oe,
					tA: () => _,
					tb: () => X,
					v1: () => re,
					vB: () => K,
					wF: () => N,
					xC: () => b,
					xi: () => ne,
					xn: () => M,
					yh: () => V,
					yr: () => H,
					zF: () => te,
				});
				var n = i(109285),
					a = i.n(n),
					s = i(765722),
					r = (i(228748), i(903673)),
					o = i(576797),
					l = i(318383),
					c = i(422460),
					d = i(993980),
					u = i(547052),
					p = i(668712),
					y = i(80879),
					h = i(717776);
				const g = 42,
					m = [
						{ value: 'SINGLE', label_translation: 'label_single_child' },
						{ value: 'MULTIPLE', label_translation: 'label_multiple_children' },
					],
					A = [
						{
							value: 'milligramsPerDecilitre',
							label_translation: 'milligrams_per_100_millilitres',
							maxValue: 500,
							minValue: 50,
							typeFormat: 'integer',
						},
						{
							value: 'millimolesPerLitre',
							label_translation: 'millimoles_per_litre',
							maxValue: 27.7,
							minValue: 2.8,
							typeFormat: 'decimal',
						},
					],
					_ = {
						Initial: { id: 0, flow: 0 },
						Had: { id: 1, flow: 1 },
						Loss: { id: 2, flow: 2 },
						NotSay: { id: 3, flow: 3 },
					},
					E = {
						oz: 80,
						minOz: 1,
						maxOz: r.lN.goal.oz,
						ml: 2366,
						minMl: 1,
						maxMl: r.lN.goal.ml,
						cups: 10,
						minCups: 1,
						maxCups: r.lN.goal.cup,
					},
					T = (e) => {
						o.A.push({
							event: 'track_event',
							category: "Women's Health Event",
							action: e,
						});
					},
					C = {
						pregnancy: '/pregnancy-detail/',
						mct: '/menstrual-cycle-tracking/',
					},
					S = { First: 5, Second: 6, Third: 7 },
					I = { First: 91, Second: 98, Third: 91, Total: 280 },
					v = (e) =>
						e.sort(
							(e, t) =>
								a()(t.startTimestamp).toDate() - a()(e.startTimestamp).toDate()
						),
					f = (e) =>
						e.sort(
							(e, t) =>
								a()(t.userMeasurementTimestamp).toDate() -
								a()(e.userMeasurementTimestamp).toDate()
						),
					D = (e) => {
						let t = null;
						return (
							e &&
								(t = e.find(
									(e) => null === e.deliveryDate && null === e.endDate
								)),
							t
						);
					},
					N = (e, t) => {
						if ('millimolesPerLitre' === t) {
							e = parseFloat((0.0555 * e).toFixed(1));
						}
						return e;
					},
					R = { Format12: 1, Format24: 1 },
					b = () => {
						window.postMessage && window.postMessage('RELOAD_NAVIGATION', '*');
					},
					L = (e, t) => !!F(e, t),
					P = (e, t, i) => {
						let n = a()(t, c.Ay.LINK_FORMAT);
						const s = a()(i, c.Ay.LINK_FORMAT);
						let r = null;
						for (; n <= s && ((r = F(e, n.toDate())), !r); ) n.add(1, 'days');
						return r;
					},
					O = (e) => e && null === e.deliveryDate && null === e.endDate,
					w = (e, t, i) => {
						let n = a()(t),
							s = a()(i),
							r = !1;
						return (
							e &&
								(r =
									(n.isSameOrAfter(a()(e.pregnancyCycleStart)) ||
										s.isSameOrAfter(a()(e.pregnancyCycleStart))) &&
									s.isSameOrBefore(
										a()(e.deliveryDate || e.endDate || e.dueDate)
									)),
							r
						);
					},
					F = (e, t) => {
						const i = a()(t).set({
							hour: 0,
							minute: 0,
							second: 0,
							millisecond: 0,
						});
						let n = null;
						if (e) {
							let t = [...e];
							t.sort(
								(e, t) =>
									a()(t.pregnancyCycleStart).toDate() -
									a()(e.pregnancyCycleStart).toDate()
							),
								(n = t.find((e) => {
									let t = !1;
									return (
										i.isSameOrAfter(a()(e.pregnancyCycleStart)) &&
											((null === e.deliveryDate && null === e.endDate) ||
												(null !== e.deliveryDate &&
													i.isSameOrBefore(a()(e.deliveryDate))) ||
												(null !== e.endDate &&
													i.isSameOrBefore(a()(e.endDate)))) &&
											(t = !0),
										t
									);
								}));
						}
						return n;
					},
					k = (e, t, i) => {
						const n = a()(e).set({ hour: 0, minute: 0, second: 0 });
						let s = a()(t).add(i - 1, 'weeks');
						return n.diff(s, 'days') + 1;
					},
					U = (e, t) => {
						const i = a()(t),
							n = a()(e).set({ hour: 0, minute: 0, second: 0 }),
							s = n.diff(i, 'weeks') + 1,
							r = i.add(s - 1, 'weeks');
						return { numberOfWeek: s, daysInWeek: n.diff(r, 'days') + 1 };
					},
					M = (e) => {
						const t = a()(),
							i = e ? a()(e.pregnancyCycleStart).toDate() : null;
						let n = null;
						if (e) {
							let i = a()(e.pregnancyCycleStart).add(45, 'weeks');
							n = t.isBefore(i) ? t.toDate() : i.toDate();
						}
						return { maxDate: n, minDate: i };
					},
					G = (e) => {
						return (
							e &&
							'undefined' !== typeof (t = e.currentPhase) &&
							(t === S.First || t === S.Second || t === S.Third)
						);
						var t;
					},
					x = () => {
						l.default.navigate('/pregnancy-stop-tracking/1/0');
					},
					B = () => {
						l.default.navigate('/pregnancy-tracking/true');
					},
					H = (e) => a()(e).subtract(279, 'days').toDate(),
					V = (e) => ({
						startDate: a()(e).subtract(14, 'days').format(c.Ay.LINK_FORMAT),
						endDate: a()(e).add(14, 'days').format(c.Ay.LINK_FORMAT),
					}),
					W = (e, t) => {
						let i = null;
						t.sort((e, t) => new Date(e.date) - new Date(t.date));
						for (let n = 0; n < t.length; n++)
							if (new Date(t[n].date) <= e) i = t[n];
							else if (null === i) {
								i = t[n];
								break;
							}
						return i;
					},
					J = {
						Announcements: {
							key: 'Announcements',
							url: '/web-data/pregnancy/baby_announcement.json',
						},
						Delivery: {
							key: 'Delivery',
							url: '/web-data/pregnancy/baby_delivery.json',
						},
						GENERAL: {
							key: 'GENERAL',
							url: '/web-data/pregnancy/babymovement_general.json',
						},
						KICKS: {
							key: 'KICKS',
							url: '/web-data/pregnancy/babymovement_kick.json',
						},
						HICCUPS: {
							key: 'HICCUPS',
							url: '/web-data/pregnancy/babymovement_hiccups.json',
						},
					},
					Y = (e, t) =>
						c.Ay.formatLocalizeTime(a()(e).toDate()) ===
						c.Ay.formatLocalizeTime(a()(t).toDate()),
					$ = (e, t) => {
						let i = !1;
						if (
							e &&
							e.userMenstrualCycleSettings &&
							e.userMenstrualCycleSettings.menstrualCycleType === d.ou &&
							null !== t
						)
							if (0 === t.length) i = !0;
							else {
								i =
									void 0 ===
									t.find((e) => null === e.deliveryDate && null === e.endDate);
							}
						return i;
					},
					j = async (e, t, i) => {
						let n = !1;
						if (
							e &&
							e.userMenstrualCycleSettings &&
							e.userMenstrualCycleSettings.menstrualCycleType !== d.ou
						) {
							let e = [];
							if (t) e = t;
							else {
								let t = await (async () =>
									await s.tI.get(
										'/periodichealth-service/menstrualcycle/pregnancysnapshot/all'
									))();
								e = t && t.data ? t.data : [];
							}
							n =
								void 0 !==
								e.find((e) => null === e.deliveryDate && null === e.endDate);
						}
						i(n);
					},
					K = (e = () => {}, t = () => {}) => {
						s.tI
							.put('/userprofile-service/userprofile/user-settings', {
								userMenstrualCycleSettings: { menstrualCycleType: d.ou },
							})
							.then(() => {
								e();
							})
							.catch((e) => {
								t();
							});
					},
					z = {
						Symptoms: 'symptoms',
						BloodGlucose: 'blood_glucose',
						BabyMovements: 'baby_movement',
						Notes: 'notes',
					},
					q = {
						symptoms: [
							'ACNE',
							'BACKACHE',
							'BLOATING',
							'BODY_ACHES',
							'CONSTIPATION',
							'CRAMPS',
							'CRAVINGS',
							'DIARRHEA',
							'FATIGUE',
							'HEADACHE',
							'INSOMNIA',
							'NAUSEA',
							'TENDER_BREASTS',
							'CHILLS',
							'DISTRACTED',
							'DRY_SKIN',
							'FREQUENT_URINATION',
							'HAIR_LOSS',
							'HOT_FLASHES',
							'NIGHT_SWEATS',
							'URINE_LEAKAGE',
							'VAGINAL_DRYNESS',
							'WEIGHT_GAIN',
						],
						moods: [
							'FINE',
							'HAPPY',
							'ENERGETIC',
							'MOTIVATED',
							'MOOD_SWINGS',
							'SAD',
							'EMOTIONAL',
							'OVERWHELMED',
							'IRRITABLE',
							'FRUSTRATED',
						],
						discharge: [
							'NO_DISCHARGE',
							'CREAMY',
							'EGG_WHITE',
							'SPOTTING',
							'STICKY',
							'UNUSUAL',
						],
						sexualActivity: ['PROTECTED', 'UNPROTECTED'],
						sexDrive: ['LOW', 'AVERAGE', 'HIGH'],
						flow: ['LIGHT', 'MEDIUM', 'HEAVY'],
					},
					Q = {
						REGULAR: q,
						IRREGULAR: q,
						NONE: q,
						PREGNANT: {
							symptoms: [
								'ACNE',
								'BACKACHE',
								'BLOATING',
								'BODY_ACHES',
								'CONSTIPATION',
								'CONTRACTIONS',
								'CRAMPS',
								'CRAVINGS',
								'DIARRHEA',
								'DIZZINESS',
								'FATIGUE',
								'HEADACHE',
								'INSOMNIA',
								'NAUSEA',
								'TENDER_BREASTS',
								'TROUBLE_BREATHING',
								'VOMITING',
								'FREQUENT_URINATION',
								'SWELLING',
								'HEARTBURN',
								'ROUND_LIGAMENT_PAIN',
							],
							moods: [
								'FINE',
								'HAPPY',
								'ENERGETIC',
								'MOTIVATED',
								'MOOD_SWINGS',
								'SAD',
								'EMOTIONAL',
								'OVERWHELMED',
								'IRRITABLE',
								'FRUSTRATED',
								'WORRIED',
							],
							discharge: [
								'NO_DISCHARGE',
								'LIGHT',
								'MEDIUM',
								'HEAVY',
								'SPOTTING',
							],
							sexualActivity: ['PROTECTED', 'UNPROTECTED'],
							sexDrive: ['LOW', 'AVERAGE', 'HIGH'],
						},
					},
					X = (e, t, i) =>
						t.filter((t) => Q[i] && Q[i][e] && Q[i][e].indexOf(t) > -1),
					Z = (e, t) => {
						const i = A.find((e) => e.value === t);
						return e > i.maxValue && (e = i.maxValue), e;
					},
					ee = (e, t, i) => {
						let n = [],
							s = a()(t, c.Ay.LINK_FORMAT);
						const r = a()(i, c.Ay.LINK_FORMAT);
						for (
							n.push({
								startWeek: U(s.format(c.Ay.LINK_FORMAT), e).numberOfWeek,
								start: s.format(c.Ay.LINK_FORMAT),
								end: s.add(27, 'day').format(c.Ay.LINK_FORMAT),
								endWeek: U(s.format(c.Ay.LINK_FORMAT), e).numberOfWeek,
								items: [],
							});
							s.isBefore(r);

						) {
							let t = s.add(1, 'day').format(c.Ay.LINK_FORMAT),
								i = s.add(27, 'day').format(c.Ay.LINK_FORMAT);
							n.push({
								startWeek: U(t, e).numberOfWeek,
								start: t,
								end: i,
								endWeek: U(i, e).numberOfWeek,
								items: [],
							});
						}
						return n;
					},
					te = (e) =>
						!!(
							e &&
							e.userMenstrualCycleSettings &&
							e.userMenstrualCycleSettings.pregnancySetup
						),
					ie = async (e = a()().format(c.Ay.LINK_FORMAT), t) => {
						let i = { cycleType: null, startDate: null, periodStartDate: null };
						const n = [d.pI, d.Qp];
						let r = a()(),
							{ data: o } = await s.tI.get(
								`/periodichealth-service/menstrualcycle/lastconfirmed/${e}`
							);
						if (o) {
							let e = a()(o.periodStartDate);
							o.cycleType === d.ou
								? (e.add(o.cycleLength, 'day'),
									(e = e.isSameOrBefore(r, 'day') ? e.toDate() : null))
								: (e = e.isSame(r, 'day')
										? null
										: e
												.add(
													((l = o.cycleType),
													n.includes(l) && n.includes(t) ? 0 : 1),
													'day'
												)
												.toDate()),
								(i.cycleType = o.cycleType),
								(i.startDate = e),
								(i.periodStartDate = o.periodStartDate);
						}
						var l;
						return i;
					},
					ne = (e, t, i) =>
						se('conflicting_dates', 'pregnancy_conflict_date', e, t, i),
					ae = (e, t, i) =>
						se('conflicting_dates', 'mct_conflict_date', e, t, i),
					se = (e, t, i = !1, n = () => {}, a = () => {}) =>
						(0, h.jsxs)(p.lG, {
							open: i,
							onClose: n,
							children: [
								(0, h.jsx)(p.L3, {
									children: (0, h.jsx)(u.A, { ns: 'pregnancy', content: e }),
								}),
								(0, h.jsx)(p.Cf, {
									children: (0, h.jsx)(u.A, { ns: 'pregnancy', content: t }),
								}),
								(0, h.jsx)(p.ii, {
									children: (0, h.jsx)(p.$n, {
										onClick: a,
										children: (0, h.jsx)(u.A, {
											ns: 'common',
											content: 'button_ok',
										}),
									}),
								}),
							],
						}),
					re = (e = () => {}, t = () => {}) => {
						const i = c.Ay.formatConnectTimestampUTC(a()().toDate());
						s.tI
							.put('/userprofile-service/userprofile/user-settings', {
								userMenstrualCycleSettings: {
									menstrualCycleType: d.ip,
									inactiveReportTimestamp: i,
								},
							})
							.then(() => {
								e();
							})
							.catch((e) => {
								t();
							});
					},
					oe = ['BEFOREMEAL', 'AFTERMEAL', 'BEFOREBED', 'OTHER'],
					le = ['GENERAL', 'KICKS', 'HICCUPS'],
					ce = (e, t) =>
						e.t('menstrual-cycle-tracking:label_pregnancy') +
						' ' +
						a()(t, c.Ay.LINK_FORMAT).format('YYYY'),
					de = (e, t, i, n) => {
						let a = e - 1,
							s = '';
						if (0 === a)
							s = y.Ay.t('pregnancy:lbl_short_day_no_space', { 0: t });
						else if (a < 42) {
							const e = n
								? 'pregnancy:lbl_week_and_day_no_space'
								: 'pregnancy:lbl_week_and_day';
							s = y.Ay.t(e, { 0: a, 1: t });
						} else s = y.Ay.t('pregnancy:greater_than_42');
						return (0, h.jsx)('span', { className: i, children: s });
					};
			},
			637898: (e, t, i) => {
				'use strict';
				i.d(t, {
					AT: () => r,
					FI: () => a,
					FN: () => c,
					FX: () => l,
					Mp: () => s,
					hZ: () => o,
				});
				var n = i(576797);
				const a = {
						PUBLIC: 'public',
						PRIVATE: 'private',
						SUBSCRIBERS: 'subscribers',
						CONNECTIONS: 'subscribers',
						GROUPS: 'groups',
						CUSTOM: 'custom',
						FOLLOWING: 'following',
					},
					s = [
						{ value: a.PRIVATE, textKey: 'privacy.alert.only.me' },
						{ value: a.SUBSCRIBERS, textKey: 'privacy.alert.connections' },
						{ value: a.GROUPS, textKey: 'privacy.alert.groups' },
						{ value: a.PUBLIC, textKey: 'privacy.alert.everyone' },
					],
					r = '0',
					o = { ALL: 'all', CUSTOM: 'custom' },
					l = {
						GO_TO_PAST_ACTIVITY_PRIVACY:
							'User CLicks on the Update Past Activities privacy Link',
						USER_SELECTS_ALL_PAST_ACTIVITIES:
							'User Selects all past activities privacy option',
						USER_SELECTS_CUSTOM_PAST_ACTIVITIES:
							'User Selects custom past activities privacy option',
						USER_SAVES_PAST_ACTIVITIES:
							'User Saves past activities privacy changes',
					},
					c = (e, t) => {
						n.A.push({
							event: 'track_event',
							category: 'User Past Activity Privacy Settings Changed Events',
							action: e,
							label: t,
						});
					};
			},
			703174: (e, t, i) => {
				'use strict';
				i.d(t, { a: () => s, t: () => r });
				var n = i(109285),
					a = i.n(n);
				i(972579);
				const s = (e, t = 'seconds', i = 'hh:mm:ss', n = !0) =>
						a().duration(e, t).format(i, { trim: n }),
					r = (e, t, i = !1) => {
						let n = e.split(':'),
							a = '';
						return (
							(n = n.map(function (e) {
								return parseInt(e, 10);
							})),
							n.length < 3 && n.splice(0, 0, 0),
							n[0] > 0 &&
								(a = t.t(n[0] > 1 ? 'common:time_hours' : 'common:time_hour', {
									0: n[0],
								})),
							n[1] > 0 &&
								(a +=
									' ' +
									t.t(n[1] > 1 ? 'common:time_minutes' : 'common:time_minute', {
										0: n[1],
									}) +
									' '),
							i &&
								n[2] > 0 &&
								(a += t.t(
									n[2] > 1 ? 'common:time_seconds' : 'common:time_second',
									{ 0: n[2] }
								)),
							a
						);
					};
			},
			87786: (e, t, i) => {
				'use strict';
				i.d(t, { Kc: () => a, mv: () => s, zJ: () => n });
				const n = (e) => {
						let t = '?';
						for (const i in e)
							if (
								e.hasOwnProperty(i) &&
								'undefined' !== typeof e[i] &&
								null !== e[i]
							)
								if (
									e[i] &&
									'object' === typeof e[i] &&
									e[i].constructor === Array
								) {
									let n = '';
									e[i].forEach((e) => {
										n += `${i}=${e}&`;
									}),
										(t += n);
								} else t += `${i}=${e[i]}&`;
						return (t = t.slice(0, -1)), t;
					},
					a = (e) => {
						const t = e.split('?')[0].split('/'),
							i = t[t.length - 1],
							n = new URL(e).searchParams;
						return {
							inviteId: i,
							devicePartNumber: n.get('devicePartNumber'),
							deviceName: n.get('deviceName'),
						};
					},
					s = (e) =>
						new RegExp(
							'^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$',
							'i'
						).test(e);
			},
			155190: (e, t, i) => {
				'use strict';
				i.d(t, { Cr: () => o, JZ: () => s, cr: () => r });
				i(952612);
				var n = i(637898),
					a = i(576797);
				const s = (e, t, i) => {
						const a = (t, a) =>
								t.newAccessRule === n.FI.CUSTOM
									? i &&
										i[t.privacyType] &&
										i[t.privacyType].fields &&
										i[t.privacyType].fields[a.privacySubcategoryType]
										? i[t.privacyType].fields[a.privacySubcategoryType]
										: e[t.privacyType].subcategoryPrivacySettings.find(
												(e) =>
													e.privacySubcategoryType === a.privacySubcategoryType
											).subcategoryDetails.accessRule
									: t.newAccessRule,
							s = (t) =>
								e[t.privacyType].subcategoryPrivacySettings.map((e) => ({
									...e,
									subcategoryDetails: {
										...e.subcategoryDetails,
										accessRule: a(t, e),
									},
								})),
							r = {};
						t.forEach((t) => {
							r[t.privacyType] = {
								...e[t.privacyType],
								categoryDetails: {
									...e[t.privacyType].categoryDetails,
									categoryAccessRule: t.newAccessRule,
								},
								subcategoryPrivacySettings: s(t),
							};
						});
						return { ...e, ...r };
					},
					r = (e, t) => {
						a.A.push({
							event: 'track_event',
							category: 'User Privacy Settings Changed Events',
							action: e,
							label: t,
						});
					},
					o = {
						ACTIVITY_PRIVACY_SETTINGS_CHANGED:
							'User Changed Activity Privacy Settings',
						USER_PROFILE_PRIVACY_SETTINGS_CHANGED:
							'User Profile Privacy Settings',
						PAST_ACTIVITY_PRIVACY_SETTINGS_CHANGED:
							'User Changed Past Activity Privacy Settings',
						STEPS_PRIVACY_SETTINGS_CHANGED:
							'User Changed Steps Privacy Settings',
						BADGES_PRIVACY_SETTINGS_CHANGED:
							'User Changed Badges Privacy Settings',
						SINGLE_ACTIVITY_PRIVACY_SETTINGS_CHANGED:
							'User Changed The Privacy For a Specific Single Activity',
					};
			},
			534720: (e, t, i) => {
				'use strict';
				i.d(t, { Y9: () => n, _8: () => a });
				const n = (e) => e && e.userData && 'MALE' === e.userData.gender,
					a = (e, t) => {
						const i = t.userRoles,
							n = e.value.split(',');
						for (let a = 0; a < n.length; a++)
							if (i.indexOf(n[a].trim()) >= 0) return !0;
						return !1;
					};
			},
			129582: (e, t, i) => {
				'use strict';
				i.d(t, { a: () => n, b: () => a });
				const n = {
						'/ecg/ecg': '5c8d3401-e6e7-4354-9095-39526016a47c',
						'/sleep_skin_temp/sleep_skin_temp':
							'd3c94498-8962-4a62-bd3a-0d80a08e3386',
						'/body_battery_3/body_battery_3':
							'ce34657d-8a85-4b6e-8bb4-00897590c217',
						'/sleep_navigation/sleep_navigation':
							'7ae52c9a-1967-46e9-952f-3e40e3770bde',
					},
					a = (e, t) => {
						if (e && window.PREFERENCES) {
							const i = window.PREFERENCES[e];
							return !(i && t && t.indexOf(i) >= 0);
						}
						return !1;
					};
			},
			699990: (e, t, i) => {
				'use strict';
				i.d(t, {
					GE: () => g,
					IV: () => u,
					QO: () => l,
					QT: () => y,
					VI: () => m,
					iC: () => p,
					jj: () => h,
					l5: () => c,
					wU: () => d,
				});
				var n = i(80879),
					a = i(29273),
					s = i(353761),
					r = i(505157),
					o = i(655984);
				n.Ay.loadNamespaces(['activity', 'activity-api', 'units']);
				const l = (e, t) => {
						const i = {
							categoryKey: '',
							exerciseKey: 'choose_an_exercise',
							localizeString: n.Ay.t('activity:choose_an_exercise'),
						};
						let a = 0;
						return (
							t && (i.localizeString = n.Ay.t('activity-api:device.unknown')),
							e &&
								e.length > 0 &&
								e.forEach((e) => {
									e.probability > a &&
										(e.exerciseKey.includes('_WHEELCHAIR')
											? (a = 24.9999999999)
											: ((i.localizeString = (0, o.WO)(e)),
												(i.exerciseKey = e.exerciseKey),
												(i.categoryKey = e.categoryKey),
												(a = e.probability)));
								}),
							i
						);
					},
					c = (e) => (
						(e.categoryKey && e.exerciseKey) ||
							((e.categoryKey = e.category),
							(e.exerciseKey = e.name || e.category),
							delete e.name,
							delete e.category),
						e
					),
					d = (e) => (
						(e.category = e.categoryKey),
						(e.name = e.exerciseKey !== e.categoryKey ? e.exerciseKey : null),
						delete e.categoryKey,
						delete e.exerciseKey,
						e
					),
					u = (e, t) => {
						let i = {
							setNumberTitle: n.Ay.t('units:label_set'),
							setName: n.Ay.t('activity:label_exercise_name'),
							chooseSetLabelKey: null,
						};
						return (
							e &&
								(i = {
									setNumberTitle: n.Ay.t('activity:label_move'),
									setName: n.Ay.t('activity:label_move_name'),
									chooseSetLabelKey: n.Ay.t('activity:choose_a_move'),
								}),
							t &&
								(i = {
									setNumberTitle: n.Ay.t('activity:label_pose'),
									setName: n.Ay.t('activity:label_pose_name'),
									chooseSetLabelKey: n.Ay.t('activity:choose_a_pose'),
								}),
							i
						);
					},
					p = (e, t) => {
						var i = {
							setNameLabel: n.Ay.t('activity:label_exercise_name'),
							addSetLabel: n.Ay.t('activity:add_exercise'),
						};
						return (
							e &&
								(i = {
									setNameLabel: n.Ay.t('activity:label_move_name'),
									addSetLabel: n.Ay.t('activity:add_move'),
								}),
							t &&
								(i = {
									setNameLabel: n.Ay.t('activity:label_pose_name'),
									addSetLabel: n.Ay.t('activity:add_pose'),
								}),
							i
						);
					},
					y = (e, t, i, n) =>
						(!e ||
							(e &&
								(null === e.weight ||
									void 0 === e.weight ||
									-1 === e.weight))) &&
						!(0, o.Li)(t, i, n),
					h = (e, t, i, r) => {
						const l =
							!e ||
							(e &&
								(null === e.weight || void 0 === e.weight || -1 === e.weight));
						if (l && !(0, o.Li)(t, i, r)) return n.Ay.t('activity:add_weight');
						if (l) return n.Ay.t('activity:body_weight');
						{
							const t = parseFloat(e.weight);
							return a.A.personalizeWeight(t, s.A.PRECISION1_NOSEP_NOZERO);
						}
					},
					g = (e = -1) => -1 === e || 0 === e || '' === e,
					m = (e, t) => {
						if (!e || !t) return null;
						const i = r.A.hoursMinutesAndSecondsToSeconds(e),
							a = t.find(
								(e) => e.startTimeInSeconds <= i && i <= e.endTimeInSeconds
							);
						return a
							? a.exerciseKey
								? 'choose_an_exercise' === a.exerciseKey
									? n.Ay.t('activity-api:device.unknown')
									: a.localizeString
								: n.Ay.t('activity:interval_type_rest')
							: null;
					};
			},
			155641: (e, t, i) => {
				'use strict';
				i.d(t, {
					CA: () => l,
					Cx: () => s,
					I3: () => y,
					Qm: () => c,
					Wv: () => d,
					Xx: () => r,
					gP: () => a,
					io: () => p,
					or: () => n,
					vL: () => u,
					y7: () => o,
				});
				const n = {
						NO_CONNECTION: 0,
						CREATED: 1,
						ACCEPTED: 2,
						DECLINED: 3,
						CANCELLED: 4,
						FOLLOWING: 5,
						BLOCKING: 6,
						BLOCKED: 7,
						MUTED: 8,
					},
					a = (e) => e === n.NO_CONNECTION,
					s = (e) => e === n.ACCEPTED,
					r = (e) => e === n.CREATED,
					o = (e) => e === n.FOLLOWING,
					l = (e) => e === n.BLOCKING,
					c = (e) => e === n.MUTED,
					d = (e, t) => !t && e === n.NO_CONNECTION,
					u = (e, t) => t && a(e),
					p = (e) => e === n.ACCEPTED || e === n.MUTED,
					y = (e) => e !== n.ACCEPTED && e !== n.BLOCKING && e !== n.MUTED;
			},
			145134: (e, t, i) => {
				'use strict';
				i.d(t, { MH: () => a, jF: () => s });
				const n = {
						ar: 'ar-AR',
						bg: 'bg-BG',
						pt: 'pt-PT',
						pt_BR: 'pt-BR',
						pl: 'pl-PL',
						no: 'nb-NO',
						cs: 'cs-CZ',
						da: 'da-DK',
						de: 'de-DE',
						es: 'es-ES',
						et: 'et-EE',
						fr: 'fr-FR',
						hr: 'hr-HR',
						it: 'it-IT',
						iw: 'iw-IL',
						hu: 'hu-HU',
						lv: 'lv-LV',
						lt: 'lt-LT',
						nl: 'nl-NL',
						nb: 'nb-NO',
						sl: 'sl-SI',
						sk: 'sk-SK',
						fi: 'fi-FI',
						sv: 'sv-SE',
						en: 'en-US',
						el: 'el-GR',
						ru: 'ru-RU',
						ro: 'ro-RO',
						ja: 'ja-JP',
						ko: 'ko-KR',
						th: 'th-TH',
						vi: 'vi-VN',
						tr: 'tr-TR',
						in: 'in-ID',
						ms: 'ms-MY',
						zh_CN: 'zh-CN',
						zh_TW: 'zh-TW',
					},
					a = (e) => {
						let t = n[e];
						return 'undefined' === typeof t && (t = 'en-US'), t;
					},
					s = (e) => e && 'et' !== e && 'lt' !== e && 'lv' !== e && 'bg' !== e;
			},
			838626: (e, t, i) => {
				'use strict';
				i.d(t, { F: () => a });
				var n = i(998813);
				const a = (e) => {
					n('.has-tooltip').each(function () {
						let t = n(this);
						t.tooltip({ container: t.data('container') || e || '.main-body' });
					});
				};
			},
			619123: (e, t, i) => {
				'use strict';
				i.d(t, {
					BE: () => o,
					Cj: () => u,
					Ge: () => p,
					NM: () => a,
					Sh: () => n,
					Xz: () => d,
					al: () => l,
					cO: () => r,
					ib: () => c,
					ns: () => s,
				});
				const n = 'ghs.ecgEnabled',
					a = {
						initialStartIndex: 1,
						pageSize: 20,
						startTimeOfEcg: '2021-01-01',
						loadingTypes: {
							fetchInitial: 'fetchInitial',
							reloadTable: 'reloadTable',
							fetchMore: 'fetchMore',
						},
					},
					s = 3,
					r = [
						'INCONCLUSIVE_POOR_SIGNAL',
						'INCONCLUSIVE_SR_WITH_HR_100_TO_120',
						'INCONCLUSIVE_OTHER',
					],
					o = ['INCONCLUSIVE_HR_UNDER_50', 'INCONCLUSIVE_HR_OVER_120_50'],
					l = {
						SINUS_NORMAL: 'SINUS_NORMAL',
						AFIB: 'AFIB',
						INCONCLUSIVE_POOR_SIGNAL: 'INCONCLUSIVE_POOR_SIGNAL',
						INCONCLUSIVE_HR_UNDER_50: 'INCONCLUSIVE_HR_UNDER_50',
						INCONCLUSIVE_HR_OVER_120_50: 'INCONCLUSIVE_HR_OVER_120_50',
						INCONCLUSIVE_SR_WITH_HR_100_TO_120:
							'INCONCLUSIVE_SR_WITH_HR_100_TO_120',
						INCONCLUSIVE_OTHER: 'INCONCLUSIVE_OTHER',
						INVALID: 'INVALID',
					},
					c =
						'https://connectvideo.garmin.com/2bf4f409/10af7233-877a-44ff-9a81-e18260e64a20.mp4',
					d = {
						SYMPTOMS: {
							type: 'SYMPTOMS',
							translationNsAndKey: 'ecg:ecg_symptom',
						},
						RESULT: { type: 'RESULT', translationNsAndKey: 'ecg:ecg_result' },
						DATE: { type: 'DATE', translationNsAndKey: 'common:date' },
					},
					u = {
						RAPID_HEARTBEAT: 'RAPID_HEARTBEAT',
						SKIPPED_HEARTBEAT: 'SKIPPED_HEARTBEAT',
						FATIGUE: 'FATIGUE',
						SHORTNESS_OF_BREATH: 'SHORTNESS_OF_BREATH',
						CHEST_TIGHTNESS: 'CHEST_TIGHTNESS',
						FAINTING: 'FAINTING',
						DIZZINESS: 'DIZZINESS',
						OTHER: 'OTHER',
						NO_SYMPTOMS: 'NO_SYMPTOMS',
						NO_SELECTION: 'NO_SELECTION',
					},
					p = {
						SINUS_NORMAL: [l.SINUS_NORMAL],
						AFIB: [l.AFIB],
						INCONCLUSIVE_HR_OVER_120_50: [l.INCONCLUSIVE_HR_OVER_120_50],
						INCONCLUSIVE_HR_UNDER_50: [l.INCONCLUSIVE_HR_UNDER_50],
						INCONCLUSIVE: [
							l.INCONCLUSIVE_POOR_SIGNAL,
							l.INCONCLUSIVE_SR_WITH_HR_100_TO_120,
							l.INCONCLUSIVE_OTHER,
						],
					};
			},
			394188: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ib: () => o,
					KY: () => r,
					Mb: () => d,
					VT: () => u,
					bw: () => l,
					fb: () => c,
					sq: () => s,
				});
				var n = i(80879),
					a = i(619123);
				const s = (e, t = !0) => {
						if (e && e.length) {
							const i = e.indexOf('OTHER');
							i && e.push(e.splice(i, 1)[0]);
							const a = e.map((e) => n.Ay.t(`ecg:ECG_${e}`));
							return (
								t ? a.map((e, t) => (t > 0 ? e.toLowerCase() : e)) : a
							).join(', ');
						}
						return '--';
					},
					r = (e) => {
						if (e && e.length) {
							return e
								.map((e) => n.Ay.t(`ecg:ecg_rhythm_classification_${e}`))
								.join(', ');
						}
						return '--';
					},
					o = (e) =>
						n.Ay.t('ecg:ecg_recording') +
						' - ' +
						n.Ay.t(`ecg:ecg_rhythm_classification_${e}`),
					l = (e = []) =>
						e.length > 1
							? e.length
							: 1 === e.length
								? 'NO_SYMPTOMS' === e[0]
									? 0
									: 1
								: 0,
					c = (e, t, i) => {
						const n = {
							symptoms: e && e.symptoms ? [...e.symptoms] : [],
							resultTypes: e && e.resultTypes ? [...e.resultTypes] : [],
							dates:
								e && e.dates ? { ...e.dates } : { fromDate: '', toDate: '' },
						};
						let s = -1;
						switch (t) {
							case a.Xz.SYMPTOMS.type:
								(s = n.symptoms.indexOf(i)),
									-1 === s ? n.symptoms.push(i) : n.symptoms.splice(s, 1);
								break;
							case a.Xz.RESULT.type:
								(s = n.resultTypes.indexOf(i)),
									-1 === s ? n.resultTypes.push(i) : n.resultTypes.splice(s, 1);
								break;
							case a.Xz.DATE.type:
								const { fromDate: e, toDate: t } = i;
								n.dates = { fromDate: e, toDate: t };
						}
						return n;
					},
					d = (e) => {
						let t = [];
						return (
							e.forEach((e) => {
								t = t.concat(a.Ge[e]);
							}),
							t
						);
					},
					u = (e, t, i) =>
						e.featureEnabled() &&
						t &&
						'true' === t.getValue() &&
						i.hasCurrentOrHistoricalIndicator('device', 'hasEcgCapableDevice');
			},
			563707: (e, t, i) => {
				'use strict';
				i.d(t, { G2: () => r, NQ: () => s, NS: () => o, _S: () => a });
				var n = i(544310);
				const a = {
						vigorousDaysAvg: {
							key: 'vigorousDaysAvg',
							translations_key: 'vigorousDaysAvg',
							hideWhenStale: !0,
							reportColor: n.ColorGreenPrimary,
							directRecommendations: {
								titleKey: 'fitness_age_popup_to_help_achieve_goal',
								list: [
									'fitness_age_popup_direct_recommendation_text_vigorousDaysAvg_1_update',
									'fitness_age_popup_direct_recommendation_text_vigorousDaysAvg_2_update',
									'fitness_age_popup_direct_recommendation_text_vigorousDaysAvg_3_update',
								],
							},
							educationalParagraphs: [
								'fitness_age_popup_educational_text_vigorousDaysAvg_1_update',
								'fitness_age_popup_educational_text_vigorousDaysAvg_2_update',
							],
							bottomLinks: [
								{
									key: 'fitness_age_popup_link_bottom_vigorousDaysAvg_1_update',
									value: 'https://medlineplus.gov/howmuchexercisedoineed.html',
									isExternal: !0,
								},
								{
									key: 'fitness_age_popup_link_bottom_vigorousDaysAvg_2',
									value: '/training-plan',
								},
							],
						},
						vigorousMinutesAvg: {
							key: 'vigorousMinutesAvg',
							translations_key: 'vigorousMinutesAvg',
							hideWhenStale: !0,
							reportColor: n.ColorGreenPrimary,
							directRecommendations: {
								titleKey: 'fitness_age_popup_to_help_achieve_goal',
								list: [
									'fitness_age_popup_direct_recommendation_text_vigorousMinutesAvg_1',
									'fitness_age_popup_direct_recommendation_text_vigorousMinutesAvg_2',
									'fitness_age_popup_direct_recommendation_text_vigorousMinutesAvg_3',
								],
							},
							educationalParagraphs: [
								'fitness_age_popup_educational_text_vigorousMinutesAvg_1',
								'fitness_age_popup_educational_text_vigorousMinutesAvg_2',
							],
							bottomLinks: [
								{
									key: 'fitness_age_popup_link_bottom_vigorousMinutesAvg_1',
									value:
										'https://www.mayoclinic.org/healthy-lifestyle/fitness/in-depth/exercise-intensity/art-20046887',
									isExternal: !0,
								},
								{
									key: 'fitness_age_popup_link_bottom_vigorousMinutesAvg_2',
									value: '/training-plan',
								},
							],
						},
						rhr: {
							key: 'rhr',
							translations_key: 'rhr',
							reportColor: n.ColorBluePrimary,
							directRecommendations: {
								titleKey: 'fitness_age_popup_to_help_achieve_goal_rhr',
								list: [
									'fitness_age_popup_direct_recommendation_text_rhr_1',
									'fitness_age_popup_direct_recommendation_text_rhr_2',
									'fitness_age_popup_direct_recommendation_text_rhr_3',
									'fitness_age_popup_direct_recommendation_text_rhr_4',
								],
							},
							middleLink: {
								key: 'fitness_age_popup_link_middle_rhr',
								value:
									'https://www.health.harvard.edu/blog/increase-in-resting-heart-rate-is-a-signal-worth-watching-201112214013',
								isExternal: !0,
							},
							educationalParagraphs: [
								'fitness_age_popup_educational_text_rhr_1',
							],
							bottomLinks: [
								{
									key: 'fitness_age_popup_link_bottom_rhr',
									value:
										'https://www.heart.org/en/health-topics/high-blood-pressure/the-facts-about-high-blood-pressure/all-about-heart-rate-pulse',
									isExternal: !0,
								},
							],
						},
						bodyFat: {
							key: 'bodyFat',
							translations_key: 'bodyFat',
							reportColor: n.ColorVioletPrimary,
							directRecommendations: {
								titleKey: 'fitness_age_popup_to_help_achieve_goal',
								list: [
									'fitness_age_popup_direct_recommendation_text_bodyFat_1_update',
									'fitness_age_popup_direct_recommendation_text_bodyFat_2',
								],
							},
							middleLink: {
								key: 'fitness_age_popup_link_middle_bodyFat',
								value:
									'https://www.acefitness.org/education-and-resources/lifestyle/blog/112/what-are-the-guidelines-for-percentage-of-body-fat-loss/',
								isExternal: !0,
							},
							educationalParagraphs: [
								'fitness_age_popup_educational_text_bodyFat_1',
								'fitness_age_popup_educational_text_bodyFat_2',
							],
						},
						bmi: {
							key: 'bmi',
							translations_key: 'bmi',
							reportColor: n.ColorYellowPrimary,
							directRecommendations: {
								titleKey: 'fitness_age_popup_to_help_achieve_goal',
								list: [
									'fitness_age_popup_direct_recommendation_text_bmi_1_update',
								],
							},
							educationalParagraphs: [
								'fitness_age_popup_educational_text_bmi_1',
								'fitness_age_popup_educational_text_bmi_2',
								'fitness_age_popup_educational_text_bmi_3',
							],
							middleLink: {
								key: 'fitness_age_popup_link_middle_bmi',
								value:
									'https://www.mayoclinic.org/healthy-lifestyle/fitness/in-depth/exercise-intensity/art-20046887',
								isExternal: !0,
							},
							bottomLinks: [
								{
									key: 'fitness_age_popup_link_bottom_bmi',
									value:
										'https://www.who.int/news-room/fact-sheets/detail/obesity-and-overweight',
									isExternal: !0,
								},
								{ key: 'fitness_age_popup_add_weight', value: null },
							],
						},
					},
					s = {
						recommendation: 'RECOMMENDATION',
						onTarget: 'ON_TARGET',
						stale: 'STALE',
						missingUserSettings: 'MISSING_USER_SETTINGS',
					},
					r = 'FitnessAge.LastDecreasedDate',
					o = {
						USER_EMPTY_AGE: 'USER_EMPTY_AGE',
						USER_UNDER_AGE: 'USER_UNDER_AGE',
						USER_OVER_AGE: 'USER_OVER_AGE',
						USER_PREGNANT: 'USER_PREGNANT',
					};
			},
			34523: (e, t, i) => {
				'use strict';
				i.d(t, { Vj: () => r, kf: () => o, nn: () => s, zP: () => l });
				var n = i(563707),
					a = i(576797);
				const s = {
						USER_UNDER_AGE: 'USER_UNDER_AGE',
						USER_OVER_AGE: 'USER_OVER_AGE',
						USER_PREGNANT: 'USER_PREGNANT',
					},
					r = (e) => e === n._S.bmi.key || e === n._S.bodyFat.key,
					o = (e) => {
						if (
							!e ||
							0 === Object.keys(e).length ||
							!e.achievableFitnessAge ||
							!e.fitnessAge
						)
							return e;
						const t = window.structuredClone(e);
						return (
							(t.achievableFitnessAge =
								Math.floor(2 * e.achievableFitnessAge) / 2),
							e.fitnessAge > e.achievableFitnessAge
								? (t.fitnessAge = Math.ceil(2 * e.fitnessAge) / 2)
								: (t.fitnessAge = Math.floor(2 * e.fitnessAge) / 2),
							t.components && 0 !== Object.keys(t.components).length
								? (Object.keys(t.components).forEach((e) => {
										const i = t.components[e];
										if (i.potentialAge) {
											const n = Math.ceil(2 * i.potentialAge) / 2;
											t.components[e].potentialAge = n;
										}
										if (e == n._S.vigorousMinutesAvg.key) {
											const n = Math.round(i.value);
											t.components[e].value = n;
										}
									}),
									t)
								: t
						);
					};
				function l(e) {
					a.A.push({
						event: 'track_event',
						category: 'Fitness Age Events',
						action: e,
					});
				}
			},
			147449: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => b });
				var n = i(228748),
					a = i(82040),
					s = i(668712),
					r = i(547052),
					o = i(309507),
					l = i(632246),
					c = i(946186),
					d = i.n(c),
					u = i(882155),
					p = i.n(u),
					y = i(127433),
					h = i.n(y),
					g = i(188626),
					m = i.n(g),
					A = i(108990),
					_ = i.n(A),
					E = i(389827),
					T = i.n(E),
					C = i(95682),
					S = {};
				(S.styleTagTransform = T()),
					(S.setAttributes = m()),
					(S.insert = h().bind(null, 'head')),
					(S.domAPI = p()),
					(S.insertStyleElement = _());
				d()(C.A, S);
				const I = C.A && C.A.locals ? C.A.locals : void 0;
				var v = i(756992),
					f = (i(414256), i(462026)),
					D = i(717776);
				const N = {
					setGdprLimitedFeaturesAlert: v.Vb,
					fetchSystemPreference: f.h$7,
				};
				class R extends n.Component {
					constructor(...e) {
						super(...e),
							(this.state = { updateConsentFailed: !1 }),
							(this.handleStorageAndProcessing = () => {
								o.A.handleGdprUploadConsent(
									this.handleGdprCallback,
									!0,
									this.handleGdprError
								);
							}),
							(this.handleDeviceSync = () => {
								o.A.openDeviceUploadModal(
									this.handleGdprCallback,
									this.handleGdprError
								);
							}),
							(this.handleGdprCallback = () => {
								this.closeFeatureAlert(),
									this.props.acceptGdprCallback &&
										this.props.acceptGdprCallback();
							}),
							(this.closeFeatureAlert = () => {
								this.props.setGdprLimitedFeaturesAlert(!1);
							}),
							(this.handleGdprError = () => {
								this.setState({ updateConsentFailed: !0 });
							});
					}
					render() {
						const {
								gdprUploadFeature: e,
								displayGdprLimitedFeatureAlert: t,
								handleDeviceSyncAlone: i,
								deviceSyncEnabled: n,
							} = this.props,
							a = e && l.A.isDataDeletionInProgress(e.deleteStatus),
							o = e && e.userOption,
							c = e && e.consentEnforcementState,
							d = e && e.sourceType,
							u = l.A.isFeatureForUserOn(o, c, d);
						let p = () => {};
						u
							? i && !n && (p = this.handleDeviceSync)
							: (p = this.handleStorageAndProcessing);
						const y = a
							? (0, D.jsx)(r.A, {
									ns: 'common',
									content: 'unavailable_features_alert',
								})
							: (0, D.jsxs)(D.Fragment, {
									children: [
										(0, D.jsx)(r.A, {
											ns: 'common',
											content: 'limited_feature_alert',
										}),
										'\xa0',
										(0, D.jsx)('a', {
											onClick: p,
											children: (0, D.jsx)(r.A, {
												ns: 'common',
												content: 'limited_feature_alert_manage_permissions',
											}),
										}),
									],
								});
						if ((!t || u) && (!i || n)) return null;
						const h = !u || (i && !n);
						return t && h
							? (0, D.jsx)(s.fS, {
									open: t && h,
									onClose: this.closeFeatureAlert,
									children: (0, D.jsx)(s.KE, {
										children: (0, D.jsx)(s.DK, {
											children: (0, D.jsx)('p', {
												className: I.limitedFeatureAlertText,
												children: y,
											}),
										}),
									}),
								})
							: this.state.updateConsentFailed
								? (0, D.jsx)('div', {
										className: I.errorContainer,
										children: (0, D.jsx)(r.A, {
											ns: 'settings',
											content: 'something_went_wrong',
										}),
									})
								: null;
					}
				}
				R.defaultProps = {
					acceptGdprCallback: () => {},
					handleDeviceSyncAlone: !1,
					deviceSyncEnabled: !0,
				};
				const b = (0, a.Ng)(
					(e) => ({ displayGdprLimitedFeatureAlert: (0, v.Ih)(e) }),
					N
				)(R);
			},
			625124: (e, t, i) => {
				'use strict';
				i.d(t, {
					AZ: () => o,
					Ew: () => y,
					HT: () => s,
					KC: () => u,
					R1: () => d,
					d: () => r,
					nl: () => c,
					rv: () => l,
					wL: () => p,
				});
				var n = i(244028),
					a = i(87786);
				const s = {
						ALL_18_HOLES: 'ALL_18_HOLES',
						FRONT_9_HOLES: 'FRONT_9_HOLES',
						BACK_9_HOLES: 'BACK_9_HOLES',
					},
					r = {
						ALL_18_HOLES: 'leaderboard.round.type.full',
						FRONT_9_HOLES: 'leaderboard.round.type.front.9',
						BACK_9_HOLES: 'leaderboard.round.type.back.9',
					},
					o = (e, t) => {
						if (e && e.roundTypeStats && e.roundTypeStats.length) {
							const i = e.roundTypeStats.find((e) => e.statsRoundType === t);
							return i || void 0;
						}
					},
					l = (e) => {
						const t = [],
							i = [];
						e.scoresPerScorecard.forEach((e) => {
							e.score && (t.push(e), i.push(e.score));
						});
						const a = e.lifetimeBestAndWorst.bestRoundStrokes,
							s = e.lifetimeBestAndWorst.worstRoundStrokes,
							r = e.avgScore,
							o = [];
						for (let n = a; n <= s; n++) {
							let e = t.filter((e) => e.score === n);
							const i = Math.min(e.length, 4);
							o.push({ low: 0 === i ? 0 : -i, high: e.length });
						}
						return {
							chartData: o,
							max: s,
							min: a,
							avg: r,
							formatter: (e) => (0, n.rp)(e, 0),
							isAvgIndex: (e) => e === Math.floor(r - a),
						};
					},
					c = (e) => {
						const t = [],
							i = [];
						e.scoresPerScorecard.forEach((e) => {
							e.avgGir && (t.push(e), i.push(100 * e.avgGir));
						});
						const a = 100 * e.lifetimeBestAndWorst.worstRoundGir,
							s = 100 * e.lifetimeBestAndWorst.bestRoundGir,
							r = 100 * e.avgGir,
							o = [];
						for (let n = a; n <= s; n++) {
							let e = t.filter((e) => 100 * e.avgGir === n);
							const i = Math.min(e.length, 4);
							o.push({ low: 0 === i ? 0 : -i, high: e.length });
						}
						return {
							chartData: o,
							max: s,
							min: a,
							avg: r,
							formatter: n.xe,
							isAvgIndex: (e) => e === Math.floor(r - a),
						};
					},
					d = (e) => {
						const t = [],
							i = [];
						e.scoresPerScorecard.forEach((e) => {
							e.avgPuttsPerHole && (t.push(e), i.push(e.avgPuttsPerHole));
						});
						const a = e.lifetimeBestAndWorst.bestRoundPuttsPerHole,
							s = e.lifetimeBestAndWorst.worstRoundPuttsPerHole,
							r = e.avgPuttsPerHole,
							o = [];
						for (let n = a; n <= s; n += 0.1) {
							let e = t.filter(
								(e) =>
									Math.round(10 * e.avgPuttsPerHole) / 10 ===
									Math.round(10 * n) / 10
							);
							const i = Math.min(e.length, 4);
							o.push({ low: 0 === i ? 0 : -i, high: e.length });
						}
						return {
							chartData: o,
							max: s,
							min: a,
							avg: r,
							formatter: (e) => (0, n.rp)(e, 1),
							isAvgIndex: (e) => e / 10 === Math.round(10 * (r - a)) / 10,
						};
					},
					u = (e, t, i) =>
						`/golf-course-stats${(0, a.zJ)({ courseSnapshotId: e, courseGlobalId: t, backNineCourseGlobalId: i })}`,
					p = (e, t, i) =>
						`/golf-course-stats/scorecards${(0, a.zJ)({ courseSnapshotId: e, courseGlobalId: t, backNineCourseGlobalId: i })}`,
					y = (e, t, i) => (i && t ? `${t}-${i}` : e);
			},
			568574: (e, t, i) => {
				'use strict';
				i.d(t, {
					$n: () => D,
					Bw: () => d,
					Gn: () => _,
					Jw: () => g,
					N9: () => p,
					Ob: () => r,
					QC: () => y,
					Qd: () => v,
					Qe: () => o,
					Tx: () => A,
					Xo: () => C,
					Zq: () => c,
					b3: () => N,
					d3: () => a,
					kM: () => E,
					kq: () => s,
					oY: () => h,
					rH: () => u,
					tn: () => l,
					vg: () => I,
					w4: () => m,
					yi: () => f,
				});
				var n = i(576797);
				const a = { groups: 'Groups Page Events', group: 'Group Page Events' },
					s = { activity: 'ACTIVITY', post: 'NEWS_POST' },
					r = { activity: 'activityList', post: 'newsPosts' },
					o = { ALL: 'all', ACTIVITIES: 'activities', POSTS: 'posts' },
					l = { PUBLIC: 'PUBLIC', PRIVATE: 'PRIVATE', INVITE: 'INVITE' },
					c = { VISIBLE: 'VISIBLE', HIDDEN: 'HIDDEN' },
					d = { OWNER: 'OWNER', ADMIN: 'ADMIN', MEMBER: 'MEMBER' },
					u = {
						FEED: 'feed',
						LEADERBOARD: 'leaderboard',
						CHALLENGES: 'challenges',
						GROUP_MEMBERS: 'members',
						COURSES: 'courses',
						ABOUT: 'about',
						SETTINGS: 'settings',
						SEARCH: 'search',
					},
					p = {
						NO_ALL_FEEDS: 'NO_ALL_FEEDS',
						NO_RECENT_ACTIVITIES: 'NO_RECENT_ACTIVITIES',
						SETTINGS_OFF: 'SETTINGS_OFF',
						NO_POSTS: 'NO_POSTS',
						POST_UNAVAILABLE: 'POST_UNAVAILABLE',
						POST_PRIVATE: 'POST_PRIVATE',
						ACTIVITY_UNAVAILABLE: 'ACTIVITY_UNAVAILABLE',
						ACTIVITY_PRIVATE: 'ACTIVITY_PRIVATE',
						NO_GROUP_DESCRIPTION: 'NO_GROUP_DESCRIPTION',
						ADMIN_NO_GROUP_DESCRIPTION: 'ADMIN_NO_GROUP_DESCRIPTION',
						GROUP_DELETED: 'GROUP_DELETED',
					},
					y = {
						groupDeleted: 'groupDeleted',
						acceptRequestNoPermission: 'acceptRequestNoPermission',
						requestCancelled: 'requestCancelled',
						invitationCancelled: 'invitationCancelled',
						announcementDeleted: 'announcementDeleted',
					},
					h = {
						joinInstantly: 'joinInstantly',
						requestJoin: 'requestJoin',
						acceptInvitation: 'acceptInvitation',
					},
					g = {
						myGroups: 'My Groups',
						findGroups: 'Find Groups',
						createGroup: 'Create a Group',
					},
					m = 2,
					A = 15,
					_ = 10,
					E = 'running_01',
					T = [
						'running',
						'roadcycling',
						'mountain_cycling',
						'swimming',
						'health_fitness',
						'golf',
						'para_sports',
					],
					C = {
						large: 'large',
						largeSquare: 'large_square',
						medium: 'medium',
						small: 'small',
						xl: 'xl',
					},
					S = '/web-images/group/group_default',
					I = (e, t) => {
						const i = a.groups;
						'string' === typeof t && t.length > 0
							? n.A.push({
									event: 'track_event',
									category: i,
									action: e,
									label: t,
								})
							: n.A.push({ event: 'track_event', category: i, action: e });
					},
					v = (e, t) => {
						const i = a.group;
						'string' === typeof t && t.length > 0
							? n.A.push({
									event: 'track_event',
									category: i,
									action: e,
									label: t,
								})
							: n.A.push({ event: 'track_event', category: i, action: e });
					},
					f = (e) => {
						v('Feed Tab Actions', e);
					},
					D = () =>
						T.map((e) => {
							const t = `${e}_01`;
							return { src: `${S}_${t}_large.png`, name: t };
						}),
					N = (e, t = C.large) => {
						let i = E;
						return (
							((e) => {
								if (!e) return !1;
								const t = e.lastIndexOf('_'),
									i = e.substring(0, t),
									n = e.substring(t + 1);
								return T.includes(i) && '01' === n;
							})(e) && (i = e),
							`${S}_${i}_${t}.png`
						);
					};
			},
			438909: (e, t, i) => {
				'use strict';
				i.d(t, { N: () => n });
				const n = { initialStartIndex: 1, pageSize: 20 };
			},
			307356: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o, w: () => r });
				var n = i(228748),
					a = i(880938);
				const { startSM: s } = a.A,
					r = (e) => {
						const t = parseFloat(getComputedStyle(document.head).fontSize),
							i = document.getElementsByClassName('main-body');
						return (e ? i[0].offsetWidth : window.innerWidth) < parseInt(s) * t;
					},
					o = (e = !1) => {
						const [t, i] = (0, n.useState)(r(e));
						(0, n.useEffect)(
							() => (
								window.addEventListener('resize', a),
								a(),
								() => {
									window.removeEventListener('resize', a);
								}
							)
						);
						const a = () => {
							const t = r(e);
							i(t);
						};
						return t;
					};
			},
			385192: (e, t, i) => {
				'use strict';
				i.d(t, {
					AF: () => a,
					Km: () => c,
					Mt: () => l,
					Sx: () => r,
					h5: () => n,
					j$: () => s,
					rS: () => o,
				});
				const n = { CLIMB_ACTIVE: 'CLIMB_ACTIVE', CLIMB_REST: 'CLIMB_REST' },
					a = {
						CLIMB_COMPLETED: 'CLIMB_COMPLETED',
						CLIMB_ATTEMPTED: 'CLIMB_ATTEMPTED',
					},
					s = (e) => {
						const t = { sends: 0, completed: 0, attempted: 0, gradeValue: {} };
						let i = {};
						return (
							e.forEach((e) => {
								if (e.type === n.CLIMB_ACTIVE) {
									let n = i[e.gradeValue.valueKey];
									switch ((n || (n = { ...t }), e.status)) {
										case a.CLIMB_ATTEMPTED:
											n.attempted++;
											break;
										case a.CLIMB_COMPLETED:
										default:
											e.climbSend ? n.sends++ : n.completed++;
									}
									i[e.gradeValue.valueKey] = { ...n, gradeValue: e.gradeValue };
								}
							}),
							Object.values(i).sort(
								(e, t) => e.gradeValue.sortOrder - t.gradeValue.sortOrder
							)
						);
					},
					r = (e, t, i) => (i && i[e] && i[e][t] ? i[e][t].value : null),
					o = (e) => e.reduce((e, t) => ((e[t.splitType] = t), e), {}),
					l = (e) => e && e.some((e) => 'SIMPLE' === e.mode),
					c = (e) => {
						for (let t = 0; t < e.length; t++) {
							let i = e[t];
							if (i.type === n.CLIMB_ACTIVE && !i.gradeValue) return !1;
						}
						return !0;
					};
			},
			898499: (e, t, i) => {
				'use strict';
				i.d(t, {
					G7: () => o,
					N9: () => a,
					TD: () => s,
					gy: () => n,
					wS: () => r,
				});
				const n = { REQUEST: 'request', CONFIRM: 'confirm' },
					a = {
						NO_CONNECTIONS: 'no_connections',
						NO_RECENT_ACTIVITIES: 'no_recent_activities',
						NO_RESULTS: 'no_results',
					},
					s = 3,
					r = 20,
					o = 5e3;
			},
			895292: (e, t, i) => {
				'use strict';
				i.d(t, { I: () => a, Q: () => s });
				var n = i(576797);
				const a = () => window.location.href.includes('newsfeed'),
					s = (e, t) => {
						a() &&
							(t
								? n.A.push({
										event: 'track_event',
										category: 'News Feed Events',
										action: e,
										label: t,
									})
								: n.A.push({
										event: 'track_event',
										category: 'News Feed Events',
										action: e,
									}));
					};
			},
			82628: (e, t, i) => {
				'use strict';
				i.d(t, {
					B8: () => l,
					XB: () => r,
					b0: () => a,
					j: () => s,
					kZ: () => n,
					sg: () => o,
				});
				const n = (e) => null === e,
					a = (e) => void 0 === e,
					s = (e) => e !== e,
					r = (e, t) =>
						e.find((e) => Object.keys(t).every((i) => e[i] === t[i])),
					o = (e, t = 1e3) => {
						let i;
						return (...n) => {
							clearTimeout(i),
								(i = setTimeout(() => {
									e(...n);
								}, t));
						};
					},
					l = (e) =>
						Object.entries(e).reduce((e, [t, i]) => ((e[i] = t), e), {});
			},
			2995: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => n });
				const n = {
					MIN_LENGTH: 1608,
					MAX_LENGTH: 241500,
					COURSE_TYPE: 'running',
					RANGE_TOLERANCE: 1e-5,
				};
			},
			276812: (e, t, i) => {
				'use strict';
				i.d(t, {
					$x: () => u,
					BO: () => d,
					JS: () => y,
					Tu: () => g,
					VP: () => r,
					Wf: () => E,
					Yy: () => a,
					iY: () => A,
					k1: () => s,
					r7: () => h,
					w0: () => m,
					w9: () => _,
					wC: () => o,
					xl: () => p,
				});
				var n = i(275704);
				const a = (e) => 11930464.71 * e,
					s = (e, t) => {
						if (t) return n.RT.COURSE;
						return n.mt['5K'] - 2 < e && e < n.mt['5K'] + 2
							? n.RT['5K']
							: n.mt['10K'] - 2 < e && e < n.mt['10K'] + 2
								? n.RT['10K']
								: n.mt.HALF_MARATHON - 2 < e && e < n.mt.HALF_MARATHON + 2
									? n.RT.HALF_MARATHON
									: n.mt.MARATHON - 2 < e && e < n.mt.MARATHON + 2
										? n.RT.MARATHON
										: n.RT.OTHER;
					},
					r = (e, t) => Math.round(e * t),
					o = (e, t) => {
						if (e.length !== t.length) return !1;
						for (let i = 0; i < e.length; i++) {
							const n = e[i],
								a = t[i];
							if (!l(n, a)) return !1;
						}
						return !0;
					},
					l = (e, t) =>
						e.splitAvgSpeed === t.splitAvgSpeed &&
						e.splitDistance === t.splitDistance,
					c = (e, t) => {
						const i = s(e);
						return i === n.RT['5K'] || i === n.RT['10K'] ? n.sg.KM : t || '';
					},
					d = (e, t, i) => {
						switch (c(e, t)) {
							case n.sg.KM:
								return i.formatDistance(e * i.ConversionFactors.MetersToKm);
							case n.sg.MI:
								return i.formatDistance(e * i.ConversionFactors.MetersToMiles);
							default:
								return i.personalizeDistance(e);
						}
					},
					u = (e, t, i) => {
						switch (c(e, t)) {
							case n.sg.KM:
								return 'distance_unit_metric';
							case n.sg.MI:
								return 'distance_unit_statute';
							default:
								return i.getDistanceUnitKey();
						}
					},
					p = (e, t) => {
						switch (e) {
							case n.BQ.MILE:
								return 'distance_unit_statute';
							case n.BQ.KILOMETER:
								return 'distance_unit_metric';
							case n.BQ.ELEVATION:
							default:
								return t.getDistanceUnitKey();
						}
					},
					y = (e, t, i) => {
						switch (e) {
							case n.BQ.MILE:
								return i.formatDistance(t * i.ConversionFactors.MetersToMiles);
							case n.BQ.KILOMETER:
								return i.formatDistance(t * i.ConversionFactors.MetersToKm);
							case n.BQ.ELEVATION:
							default:
								return i.personalizeDistance(t);
						}
					},
					h = 241500,
					g = 1500,
					m = 240,
					A = 1.5,
					_ = 150,
					E = 1;
			},
			569875: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => n });
				const n = {
					MIN_LENGTH: 15e3,
					MAX_LENGTH: 3e5,
					COURSE_TYPE: ['road_biking', 'mountain_biking', 'gravel_cycling'],
					RANGE_TOLERANCE: 1e-5,
				};
			},
			968619: (e, t, i) => {
				'use strict';
				i.d(t, {
					Cs: () => r,
					Kw: () => p,
					NM: () => o,
					RE: () => u,
					UP: () => g,
					Wf: () => y,
					f8: () => h,
					ft: () => s,
					hL: () => m,
					lm: () => a,
					qF: () => c,
					sS: () => d,
					wD: () => l,
				});
				var n = i(544310);
				const a = {
						black: '#000000',
						white: '#ffffff',
						deep_sleep: n.ColorBlueDark3,
						light_sleep: n.ColorBluePrimary,
						rem_sleep: n.ColorVioletDark3,
						total_sleep: n.ColorPurpleDark1,
						awake: n.ColorVioletLight1,
						stress: '#2a88e6',
						manually_entered: '#64AFCD',
						unmeasurable: 'transparent',
						grey_1: '#282828',
						grey_2: '#C5C5C5',
						grey_3: '#E6E6E6',
						grey_4: '#F9F9F9',
						pulse_ox: '#9E9E9E',
						blue_1: '#11a9ed',
						blue_2: '#67C7F2',
						blue_3: '#BFE7F8',
						blue_4: '#76ccf3',
						backgroundChart: '#6D8595',
						respiration: n.Color222,
						restlessness: n.ColorBlueLight2,
						restlessness_updated: n.ColorDarkuiAccent2,
					},
					s = {
						levels: 'tab_levels',
						score: 'tab_score',
						pulseOx: 'tab_pulseOx',
						respiration: 'tab_respiration',
					},
					r = {
						levels: 'chart_levels',
						movement: 'chart_movement',
						restlessMoments: 'chart_sleepRestlessMoments',
						pulseOx: 'chart_pulseOx',
						respiration: 'chart_respiration',
					},
					o = 0.35,
					l = 100,
					c = {
						total_sleep: {
							key: 'total_sleep',
							translation_ns: 'wellness',
							translation_key: 'sleep_duration',
						},
						stress: {
							key: 'stress',
							translation_ns: 'stress',
							translation_key: 'label_stress',
						},
						deep_sleep: {
							key: 'deep_sleep',
							translation_ns: 'wellness',
							translation_key: 'deep',
						},
						light_sleep: {
							key: 'light_sleep',
							translation_ns: 'wellness',
							translation_key: 'light',
						},
						rem_sleep: {
							key: 'rem_sleep',
							translation_ns: 'wellness',
							translation_key: 'rem',
						},
						awake: {
							key: 'awake',
							translation_ns: 'wellness',
							translation_key: 'awake_time',
							idealDuration: 300,
						},
						restlessness: {
							key: 'restlessness',
							translation_ns: 'wellness',
							translation_key: 'restlessness',
						},
					},
					d = { sleep: 'sleep', awake: 'awake' },
					u = {
						POSITIVE_HIGHLY_RECOVERING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/excessive-sleepiness/performance/good-nights-sleep-helps-job-performance',
						},
						POSITIVE_OPTIMAL_STRUCTURE: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/how-sleep-works/what-happens-when-you-sleep',
						},
						POSITIVE_LONG_AND_RECOVERING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_american_association',
							learnMoreLink: 'https://www.apa.org/monitor/2017/10/cover-sleep',
						},
						POSITIVE_LONG_AND_DEEP: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleep.org/articles/what-happens-during-sleep/',
						},
						POSITIVE_LONG_AND_REFRESHING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleep.org/articles/what-happens-during-sleep/',
						},
						POSITIVE_LONG_AND_CONTINUOUS: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/sleep-deprivation/interrupted-sleep',
						},
						POSITIVE_LONG_AND_CALM: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mental_health',
							learnMoreLink:
								'https://www.mhanational.org/rest-relaxation-and-exercise',
						},
						POSITIVE_RECOVERING: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mayo_clinic',
							learnMoreLink:
								'https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/sleep-the-foundation-for-healthy-habits/art-20270117',
						},
						POSITIVE_DEEP: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleep.org/articles/what-happens-during-sleep/',
						},
						POSITIVE_REFRESHING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleep.org/articles/what-happens-during-sleep/',
						},
						POSITIVE_CONTINUOUS: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleep.org/articles/interrupted-sleep-what-happens-to-your-body/',
						},
						POSITIVE_CALM: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_arthritis_foundation',
							learnMoreLink:
								'https://www.arthritis.org/health-wellness/healthy-living/managing-pain/fatigue-sleep/sleep-and-pain',
						},
						POSITIVE_SHORT_BUT_RECOVERING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/articles/healthy-sleep-tips',
						},
						POSITIVE_SHORT_BUT_DEEP: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mayo_clinic',
							learnMoreLink:
								'https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/sleep/art-20048379',
						},
						POSITIVE_SHORT_BUT_REFRESHING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/sleep-hygiene/healthy-sleep-tips',
						},
						POSITIVE_SHORT_BUT_CONTINUOUS: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/insomnia/treatment/what-do-when-you-cant-sleep',
						},
						POSITIVE_SHORT_BUT_CALM: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/bedroom-environment/technology-in-the-bedroom',
						},
						NEGATIVE_LONG_BUT_NOT_RESTORATIVE: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mayo_clinic',
							learnMoreLink:
								'https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/sleep/art-20048379',
						},
						NEGATIVE_LONG_BUT_LIGHT: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_american_association_2',
							learnMoreLink:
								'https://www.sleepassociation.org/about-sleep/stages-of-sleep/deep-sleep/',
						},
						NEGATIVE_LONG_BUT_NOT_REFRESHING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								' https://www.sleepfoundation.org/insomnia/treatment/what-do-when-you-cant-sleep',
						},
						NEGATIVE_LONG_BUT_DISCONTINUOUS: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_american_academy',
							learnMoreLink:
								'https://www.sleepfoundation.org/excessive-sleepiness/performance/good-nights-sleep-helps-job-performance',
						},
						NEGATIVE_LONG_BUT_RESTLESS: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/sleep-deprivation/interrupted-sleep',
						},
						NEGATIVE_LONG_BUT_POOR_QUALITY: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								' https://www.sleepfoundation.org/sleep-hygiene/healthy-sleep-tips',
						},
						NEGATIVE_NOT_RESTORATIVE: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mayo_clinic',
							learnMoreLink:
								'https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/sleep/art-20048379',
						},
						NEGATIVE_LIGHT: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_american_association_2',
							learnMoreLink:
								'https://www.sleepassociation.org/about-sleep/stages-of-sleep/deep-sleep/',
						},
						NEGATIVE_NOT_REFRESHING: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mayo_clinic',
							learnMoreLink:
								'https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/sleep/art-20048379',
						},
						NEGATIVE_DISCONTINUOUS: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_american_academy',
							learnMoreLink:
								'https://www.sleepfoundation.org/excessive-sleepiness/performance/good-nights-sleep-helps-job-performance',
						},
						NEGATIVE_RESTLESS: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/insomnia/treatment/what-do-when-you-cant-sleep',
						},
						NEGATIVE_POOR_STRUCTURE: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mayo_clinic',
							learnMoreLink:
								'https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/sleep/art-20048379',
						},
						NEGATIVE_SHORT_AND_NONRECOVERING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_american_academy',
							learnMoreLink:
								'http://sleepeducation.org/essentials-in-sleep/healthy-sleep-habits',
						},
						NEGATIVE_SHORT_AND_POOR_STRUCTURE: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/sleep-hygiene/healthy-sleep-tips',
						},
						NEGATIVE_SHORT_AND_POOR_QUALITY: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink: 'https://www.sleep.org/improve-your-sleep/',
						},
						NEGATIVE_LONG_BUT_NOT_ENOUGH_REM: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/insomnia/treatment/what-do-when-you-cant-sleep',
						},
						NEGATIVE_LONG_BUT_TOO_MUCH_REM: {
							learnMoreTranslationKey: 'sleep_score_learn_more_university_1',
							learnMoreLink:
								'https://www.sciencedaily.com/releases/2019/01/190128101104.htm',
						},
						NEGATIVE_NOT_ENOUGH_REM: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mayo_clinic',
							learnMoreLink:
								'https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/sleep/art-20048379',
						},
						NEGATIVE_TOO_MUCH_REM: {
							learnMoreTranslationKey: 'sleep_score_learn_more_university_2',
							learnMoreLink:
								'https://www.pennmedicine.org/news/news-releases/2016/june/weight-and-diet-may-help-predi',
						},
					},
					p = {
						POSITIVE_HIGHLY_RECOVERING: { genericGuidanceMissing: !0 },
						POSITIVE_LONG_AND_RECOVERING: { longFeedbackMissing: !0 },
						POSITIVE_LONG_AND_DEEP: { longFeedbackMissing: !0 },
						POSITIVE_LONG_AND_REFRESHING: { longFeedbackMissing: !0 },
						POSITIVE_LONG_AND_CONTINUOUS: { longFeedbackMissing: !0 },
						POSITIVE_LONG_AND_CALM: { longFeedbackMissing: !0 },
						POSITIVE_REFRESHING: { genericGuidanceMissing: !0 },
					},
					y = { CHART_52_WEEKS_LENGTH: 13, SCORE_YEAR_REPORT_WEEKS_COUNT: 52 },
					h = 3,
					g = 2,
					m = ['deep', 'light', 'rem', 'awake'];
			},
			540708: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => l, J: () => c });
				var n = i(968619),
					a = i(80879),
					s = i(702291),
					r = i(576797),
					o = i(680616);
				class l {
					static getBedTime(e, t) {
						if (!t) return null;
						let i =
							(e.sleepStartTimestampGMT -
								s.A.parseISOUTC(t.wellnessStartTimeGmt).getTime()) /
							1e3;
						return i < 0 && (i = 86400 + i), i;
					}
					static getWakeTime(e, t) {
						if (!t) return null;
						let i =
							(e.sleepEndTimestampGMT -
								s.A.parseISOUTC(t.wellnessStartTimeGmt).getTime()) /
							1e3;
						return i < 0 && (i = 86400 + i), i;
					}
					static getTotalSleepTypeDurations(e, t, i) {
						const n = {
							unmeasurableSleep: 0,
							deepSleep: 0,
							lightSleep: 0,
							remSleep: 0,
							awake: 0,
						};
						if (!t) return n;
						const {
							awakeSleepSeconds: a,
							deepSleepSeconds: r,
							lightSleepSeconds: o,
							remSleepSeconds: c,
							unmeasurableSleepSeconds: d,
						} = t;
						if (a || r || o || c || d)
							return {
								unmeasurableSleep: d,
								deepSleep: r,
								lightSleep: o,
								remSleep: c,
								awake: a,
							};
						let u,
							p,
							y,
							h,
							g = s.A.parseISOUTC(l.getSleepTimeGMT(t)),
							m = s.A.parseISOUTC(l.getWakeTimeGMT(t));
						if (!e || e.length <= 0) return !1;
						for (let l = 0, A = e.length; l < A; l++)
							(u = e[l]),
								(p = s.A.parseISOUTC(u.startGMT)),
								(y = s.A.parseISOUTC(u.endGMT)),
								p.getTime() < g.getTime() ||
									y.getTime() > m.getTime() ||
									((h = this.calculateDuration(p, y) / 1e3),
									i
										? -1 === u.activityLevel
											? (n.unmeasurableSleep += h)
											: 0 === u.activityLevel
												? (n.deepSleep += h)
												: 1 === u.activityLevel
													? (n.lightSleep += h)
													: 2 === u.activityLevel
														? (n.remSleep += h)
														: 3 === u.activityLevel && (n.awake += h)
										: 0 === u.activityLevel
											? (n.deepSleep += h)
											: 1 === u.activityLevel
												? (n.lightSleep += h)
												: (n.awake += h));
						return n;
					}
					static calculateDuration(e, t) {
						return e && t ? t.getTime() - e.getTime() : 0;
					}
					static getSleepBuffer(e) {
						return e <= 3600 ? 0 : e > 36e3 ? Math.round((0.1 * e) / 60) : 60;
					}
					static getLevelChartColor(e, t) {
						return -1 === e
							? n.lm.unmeasurable
							: 0 === e
								? n.lm.deep_sleep
								: 1 === e
									? n.lm.light_sleep
									: t && 2 === e
										? n.lm.rem_sleep
										: 2 === e || 3 === e
											? n.lm.awake
											: 'transparent';
					}
					static getLevelChartLabel(e, t) {
						if (-1 === e) return a.Ay.t('wellness:unmeasurable');
						if (0 === e) return a.Ay.t('wellness:deep');
						if (1 === e) return a.Ay.t('wellness:light');
						if (t) {
							if (2 === e) return a.Ay.t('wellness:rem');
							if (3 === e) return a.Ay.t('wellness:awake');
						} else if (2 === e) return a.Ay.t('wellness:awake');
					}
					static getDeviceId(e, t) {
						if (o.A.hasDeviceWithCapability(e, t)) {
							let i = o.A.getDevicesWithCapability(t, e),
								n = i.find((e) => e.primaryActivityTrackerIndicator);
							return n ? n.deviceId : i[0].deviceId;
						}
					}
					static getIsManuallyEnteredSleep(e) {
						return (
							e &&
							(('off_wrist' === e.sleepWindowConfirmationType &&
								e.sleepWindowConfirmed) ||
								('manually_confirmed' === e.sleepWindowConfirmationType &&
									e.sleepWindowConfirmed &&
									null === e.deepSleepSeconds &&
									null === e.lightSleepSeconds &&
									null === e.remSleepSeconds &&
									null === e.awakeSleepSeconds &&
									null === e.unmeasurableSleepSeconds))
						);
					}
					static getIsUnmeasurableSleep(e) {
						if (e) {
							const { dailySleepDTO: t } = e;
							if (t)
								return (
									('off_wrist' === t.sleepWindowConfirmationType ||
										'unconfirmed' === t.sleepWindowConfirmationType) &&
									!t.sleepWindowConfirmed
								);
						}
						return null;
					}
					static getForegroundChartFromActiveTab(e) {
						let t = null;
						switch (e) {
							case n.ft.levels:
								t = n.Cs.levels;
								break;
							case n.ft.pulseOx:
								t = n.Cs.pulseOx;
								break;
							case n.ft.respiration:
								t = n.Cs.respiration;
						}
						return t;
					}
					static getSleepTimeGMT(e) {
						return e
							? e.sleepStartTimestampGMT || e.autoSleepStartTimestampGMT
							: null;
					}
					static getWakeTimeGMT(e) {
						return e
							? e.sleepEndTimestampGMT || e.autoSleepEndTimestampGMT
							: null;
					}
					static getSleepChartMinAndMaxX(e, t) {
						if (!e) return null;
						const { dailySleepDTO: i } = e,
							n = this.getSleepTimeGMT(i),
							a = this.getWakeTimeGMT(i),
							s = this.getSleepBuffer(i.sleepTimeSeconds);
						return t
							? { min: n - 6e4 * s, max: a + 6e4 * s }
							: { min: n, max: a };
					}
					static getBufferLevelSeries(e, t, i) {
						const a = [];
						for (let s = e; s <= t; s += i) a.push([s, n.NM]);
						return {
							type: 'area',
							data: a,
							color: 'transparent',
							showInLegend: !1,
							states: { hover: { enabled: !1, halo: null } },
						};
					}
					static buildLevelSeriesForChart(e, t, i, a) {
						const r = e.sleepLevels || [],
							o = 6e4,
							c = [],
							d = this.getSleepTimeGMT(e.dailySleepDTO),
							u = this.getWakeTimeGMT(e.dailySleepDTO),
							{ min: p, max: y } = this.getSleepChartMinAndMaxX(e, a),
							h = this.getIsManuallyEnteredSleep(e.dailySleepDTO);
						if (i && a) {
							const e = p,
								t = s.A.parseISOUTC(
									r && 0 !== r.length ? r[0].startGMT : d
								).getTime();
							c.push(this.getBufferLevelSeries(e, t, o));
						}
						if (h) {
							const e = {
								type: 'area',
								color: n.lm.manually_entered,
								showInLegend: !1,
								data: [
									[d, n.NM],
									[u, n.NM],
								],
								states: { hover: { enabled: !1 } },
							};
							c.push(e);
						} else
							r.forEach((e) => {
								const a = s.A.parseISOUTC(e.startGMT),
									r = s.A.parseISOUTC(e.endGMT),
									d = l.getLevelChartColor(e.activityLevel, t),
									u = [];
								for (let t = a.getTime(); t <= r.getTime(); t += o) {
									const a = i
										? n.NM
										: e.activityLevel < 0
											? 0
											: e.activityLevel + 1;
									u.push([t, a]);
								}
								c.push({
									type: 'area',
									data: u,
									color: d,
									showInLegend: !1,
									states: { hover: { enabled: !1 } },
								});
							});
						if (i && a) {
							const e = y,
								t = s.A.parseISOUTC(
									r && 0 !== r.length ? r[r.length - 1].endGMT : u
								).getTime();
							c.push(this.getBufferLevelSeries(t, e, o));
						}
						return [...c];
					}
					static getDynamicTextForAgeGroup(e, t) {
						if ('UNDEFINED' === e) return null;
						const i = Math.floor(t / 3600),
							n = Math.floor((t - 3600 * i) / 60),
							s =
								'sleep_duration_dynamic_ideal_hours' +
								(n > 0 ? '_and_minutes' : ''),
							r = `sleep_score_age_group_${e}`;
						return `${a.Ay.t('wellness:sleep_duration_dynamic_ideal')} ${a.Ay.t('wellness:' + s, { 0: i, 1: n })} ${a.Ay.t('wellness:' + r)}`;
					}
					static getFeedbackStructure(e) {
						let t = !0,
							i = !0;
						return n.Kw[e]
							? ('genericGuidanceMissing' in n.Kw[e] && (t = !1),
								'longFeedbackMissing' in n.Kw[e] && (i = !1),
								{ showLongFeedback: i, showGenericGuidance: t })
							: { showLongFeedback: !0, showGenericGuidance: !0 };
					}
				}
				function c(e) {
					r.A.push({
						event: 'track_event',
						category: 'Sleep Events',
						action: e,
					});
				}
			},
			635438: (e, t, i) => {
				'use strict';
				i.d(t, {
					Ad: () => E,
					Cs: () => o,
					F$: () => f,
					GS: () => w,
					Ki: () => b,
					Kw: () => _,
					MP: () => R,
					NM: () => c,
					Nj: () => L,
					O7: () => v,
					RE: () => A,
					UP: () => C,
					Us: () => O,
					Xr: () => m,
					Zo: () => I,
					e3: () => P,
					f8: () => T,
					fj: () => N,
					ft: () => r,
					hL: () => D,
					kL: () => l,
					lm: () => s,
					o4: () => g,
					oc: () => h,
					qF: () => p,
					r6: () => S,
					sS: () => y,
					wD: () => d,
					zq: () => u,
				});
				var n = i(544310),
					a = i(281202);
				const s = {
						black: '#000000',
						white: '#ffffff',
						deep_sleep: n.ColorBluePrimary,
						light_sleep: n.ColorBlueLight2,
						rem_sleep: n.ColorVioletPrimary,
						total_sleep: n.ColorPurpleDark1,
						awake: n.ColorVioletLight2,
						stress: '#2a88e6',
						manually_entered: n.ColorBluePrimary,
						unmeasurable: 'transparent',
						grey_1: '#282828',
						grey_2: '#C5C5C5',
						grey_3: '#E6E6E6',
						grey_4: '#F9F9F9',
						pulse_ox: '#9E9E9E',
						blue_1: '#11a9ed',
						blue_2: '#67C7F2',
						blue_3: '#BFE7F8',
						blue_4: '#76ccf3',
						backgroundChart: '#6D8595',
						respiration: n.Color222,
						restlessness: n.ColorBlueLight2,
						restlessness_updated: n.ColorDarkuiAccent2,
						skinTempReport: n.ColorVioletLight3,
						sleepScoreReport: n.ColorPurpleLight2,
						respirationReport: n.ColorTealPrimary,
						sleepDuration: n.ColorBluePrimary,
						sleepNeed: n.ColorLightuiAccent1,
						goalReached: n.Color409,
						restingHeartRateReport: n.ColorBlueLight2,
						bodyBatteryChangeReport: n.ColorBlueLight2,
						sleepConsistencyReport: n.ColorBluePrimary,
					},
					r = {
						levels: 'tab_levels',
						score: 'tab_score',
						pulseOx: 'tab_pulseOx',
						respiration: 'tab_respiration',
					},
					o = {
						levels: 'chart_levels',
						movement: 'chart_movement',
						restlessMoments: 'chart_sleepRestlessMoments',
						heartRate: 'chart_heartRate',
						bodyBattery: 'chart_bodyBattery',
						pulseOx: 'chart_pulseOx',
						respiration: 'chart_respiration',
						overnightHrv: 'chart_overnightHrv',
					},
					l = {
						skinTemp: {
							type: 'chart_skinTemp',
							translation_ns: 'sleep_skin_temp',
							translation_key: 'skin_temp_change',
						},
						pulseOx: {
							type: 'chart_pulseOx',
							translation_ns: 'units',
							translation_key: 'label_pulse_ox',
						},
						respiration: {
							type: 'chart_respiration',
							translation_ns: 'units',
							translation_key: 'label_respiration',
						},
						restingHeartRate: {
							type: 'chart_restingHeartRate',
							translation_ns: 'daily_summary',
							translation_key: 'resting_heart_rate',
						},
						bodyBatteryChange: {
							type: 'chart_bodyBatteryChange',
							translation_ns: 'bodybattery',
							translation_key: 'body_battery',
						},
						hrvStatus: {
							type: 'chart_hrvStatus',
							translation_ns: 'hrv_status',
							translation_key: 'card_type_hrvStatus',
						},
					},
					c = 0.35,
					d = 100,
					u = 8,
					p = {
						total_sleep: {
							key: 'total_sleep',
							translation_ns: 'wellness',
							translation_key: 'sleep_duration',
						},
						stress: {
							key: 'stress',
							translation_ns: 'stress',
							translation_key: 'label_stress',
						},
						deep_sleep: {
							key: 'deep_sleep',
							translation_ns: 'wellness',
							translation_key: 'deep',
						},
						light_sleep: {
							key: 'light_sleep',
							translation_ns: 'wellness',
							translation_key: 'light',
						},
						rem_sleep: {
							key: 'rem_sleep',
							translation_ns: 'wellness',
							translation_key: 'rem',
						},
						awake: {
							key: 'awake',
							translation_ns: 'wellness',
							translation_key: 'awake_time',
							idealDuration: 300,
						},
						restlessness: {
							key: 'restlessness',
							translation_ns: 'wellness',
							translation_key: 'restlessness',
						},
					},
					y = { sleep: 'sleep', awake: 'awake' },
					h = [
						'POSITIVE_SHORT_BUT_RECOVERING',
						'POSITIVE_SHORT_BUT_DEEP',
						'POSITIVE_SHORT_BUT_REFRESHING',
						'POSITIVE_SHORT_BUT_CONTINUOUS',
						'POSITIVE_SHORT_BUT_CALM',
						'NEGATIVE_LIGHT',
					],
					g = [
						'GENERAL_POS_EXCELLENT_OR_GOOD_SLEEP',
						'GENERAL_POS_FAIR_OR_POOR_SLEEP',
						'GENERAL_NEG_EXCELLENT_OR_GOOD_SLEEP',
						'GENERAL_NEG_FAIR_OR_POOR_SLEEP',
					],
					m = [
						'EVENT_DAY_POS_EXCELLENT_SLEEP',
						'EVENT_DAY_POS_GOOD_SLEEP',
						'EVENT_DAY_POS_FAIR_SLEEP_GOOD_DURATION',
						'EVENT_DAY_POS_FAIR_SLEEP_NOTGOOD_DURATION',
						'EVENT_DAY_POS_POOR_SLEEP',
						'EVENT_DAY_NEG_GOOD_SLEEP',
						'EVENT_DAY_NEG_FAIR_SLEEP_GOOD_DURATION',
						'EVENT_DAY_NEG_FAIR_SLEEP_NOTGOOD_DURATION',
						'EVENT_DAY_NEG_POOR_SLEEP',
						'AFTER_EVENT_DAY_POS_EXCELLENT_OR_GOOD_SLEEP',
						'AFTER_EVENT_DAY_POS_FAIR_SLEEP_GOOD_DURATION',
						'AFTER_EVENT_DAY_POS_FAIR_SLEEP_NOTGOOD_DURATION',
						'AFTER_EVENT_DAY_POS_POOR_SLEEP',
						'AFTER_EVENT_DAY_NEG_GOOD_SLEEP',
						'AFTER_EVENT_DAY_NEG_FAIR_SLEEP_GOOD_DURATION',
						'AFTER_EVENT_DAY_NEG_FAIR_SLEEP_NOTGOOD_DURATION',
						'AFTER_EVENT_DAY_NEG_POOR_SLEEP',
						'HARD_EXERCISE_POS_EXCELLENT_OR_GOOD_SLEEP_STRENUOUS_DURING_DAY',
						'HARD_EXERCISE_POS_EXCELLENT_OR_GOOD_SLEEP_HARD_TO_STRENUOUS_DURING_DAY_OUTDOOR',
						'HARD_EXERCISE_POS_FAIR_SLEEP_HARD_TO_STRENUOUS_DURING_DAY_OUTDOOR',
						'HARD_EXERCISE_POS_EXCELLENT_OR_GOOD_SLEEP_HARD_DURING_DAY',
						'HARD_EXERCISE_POS_FAIR_SLEEP_HARD_TO_STRENUOUS_DURING_DAY',
						'MOD_EXERCISE_POS_EXCELLENT_OR_GOOD_SLEEP_RELAX_CLOSE_BED',
						'MOD_EXERCISE_POS_EXCELLENT_OR_GOOD_SLEEP_ACTIVE_DAY',
						'MOD_EXERCISE_POS_EXCELLENT_OR_GOOD_SLEEP_VIGOROUS_DURING_DAY_OUTDOOR',
						'MOD_EXERCISE_POS_EXCELLENT_OR_GOOD_SLEEP_MODERATE_DURING_DAY_OUTDOOR',
						'MOD_EXERCISE_POS_FAIR_SLEEP_MOD_TO_VIG_DURING_DAY_OUTDOOR',
						'MOD_EXERCISE_POS_EXCELLENT_OR_GOOD_SLEEP_VIGOROUS_CLOSE_BED',
						'MOD_EXERCISE_POS_EXCELLENT_OR_GOOD_SLEEP_MODERATE_CLOSE_BED',
						'MOD_EXERCISE_POS_EXCELLENT_OR_GOOD_SLEEP_VIGOROUS_DURING_DAY',
						'MOD_EXERCISE_POS_EXCELLENT_OR_GOOD_SLEEP_MODERATE_DURING_DAY',
						'MOD_EXERCISE_POS_FAIR_SLEEP_MOD_TO_VIG_DURING_DAY',
						'ALTITUDE_POS_EXCELLENT_OR_GOOD_SLEEP',
						'ALTITUDE_POS_FAIR_SLEEP',
						'NAPPING_NEG_GOOD_SLEEP_GOOD_DURATION_INTERRUPTED',
						'NAPPING_NEG_GOOD_SLEEP_GOOD_DURATION_RESTLESS',
						'NAPPING_NEG_FAIR_SLEEP_GOOD_DURATION_UNBALANCED',
						'NAPPING_NEG_FAIR_SLEEP_GOOD_DURATION_INTERRUPTED',
						'NAPPING_NEG_FAIR_SLEEP_GOOD_DURATION_RESTLESS',
						'NAPPING_NEG_FAIR_SLEEP_GOOD_DURATION_POOR_QUALITY',
						'NAPPING_NEG_FAIR_SLEEP_NOTGOOD_DURATION_UNBALANCED',
						'NAPPING_NEG_FAIR_SLEEP_NOTGOOD_DURATION_INTERRUPTED',
						'NAPPING_NEG_FAIR_SLEEP_NOTGOOD_DURATION_RESTLESS',
						'NAPPING_NEG_FAIR_SLEEP_NOTGOOD_DURATION_POOR_QUALITY',
						'NAPPING_POS_POOR_SLEEP_NOTGOOD_DURATION',
						'NAPPING_NEG_POOR_SLEEP_UNBALANCED',
						'NAPPING_NEG_POOR_SLEEP_DISTURBED',
						'NAPPING_NEG_POOR_SLEEP_POOR_QUALITY',
						'PREGNANCY_1TRIM_POS_GOOD_OR_WORSE_SLEEP_GOOD_DURATION',
						'PREGNANCY_1TRIM_NEG_GOOD_OR_WORSE_SLEEP_POOR_RECOVERY',
						'PREGNANCY_1TRIM_NEG_GOOD_OR_WORSE_SLEEP_LOW_DEEP',
						'PREGNANCY_2TRIM_POS_GOOD_OR_WORSE_SLEEP_GOOD_DURATION',
						'PREGNANCY_2TRIM_NEG_GOOD_OR_WORSE_SLEEP_POOR_RECOVERY',
						'PREGNANCY_2TRIM_NEG_GOOD_OR_WORSE_SLEEP_LOW_DEEP',
						'PREGNANCY_2TRIM_NEG_GOOD_OR_WORSE_SLEEP_LOW_REM',
						'PREGNANCY_3TRIM_POS_GOOD_OR_WORSE_SLEEP_GOOD_DURATION',
						'PREGNANCY_3TRIM_NEG_GOOD_OR_WORSE_SLEEP_POOR_RECOVERY',
						'PREGNANCY_3TRIM_NEG_GOOD_OR_WORSE_SLEEP_LOW_DEEP',
						'PREGNANCY_3TRIM_NEG_GOOD_OR_WORSE_SLEEP_LOW_REM',
						'PREGNANCY_POSTP_POS_EXCELLENT_OR_WORSE_SLEEP_GOOD_RECOVERY',
						'PREGNANCY_POSTP_POS_GOOD_OR_WORSE_SLEEP_HIGH_DEEP',
						'PREGNANCY_POSTP_POS_GOOD_OR_WORSE_SLEEP_HIGH_REM',
						'PREGNANCY_POSTP_NEG_GOOD_OR_WORSE_SLEEP_POOR_RECOVERY',
						'PREGNANCY_POSTP_NEG_GOOD_OR_WORSE_SLEEP_HIGH_INTERRUPTED',
						'PREGNANCY_POSTP_NEG_GOOD_OR_WORSE_SLEEP_NOTGOOD_DURATION_POOR_QUALITY',
						'RHYTHM_POS_EXCELLENT_SLEEP_EXCELLENT_TIMING',
						'RHYTHM_POS_EXCELLENT_SLEEP_GOOD_TIMING',
						'RHYTHM_POS_GOOD_SLEEP_EXCELLENT_TIMING',
						'RHYTHM_POS_GOOD_SLEEP_GOOD_TIMING',
						'RHYTHM_POS_FAIR_OR_POOR_SLEEP_GOOD_TIMING',
						'STRESS_POS_EXCELLENT_OR_GOOD_SLEEP_VERY_RESTFUL_DAY',
						'STRESS_POS_EXCELLENT_OR_GOOD_SLEEP_RESTFUL_DAY',
						'STRESS_POS_FAIR_OR_POOR_SLEEP_RESTFUL_DAY',
						'STRESS_POS_EXCELLENT_OR_GOOD_SLEEP_RESTFUL_EVENING',
						'STRESS_POS_FAIR_OR_POOR_SLEEP_RESTFUL_EVENING',
					],
					A = {
						POSITIVE_HIGHLY_RECOVERING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/excessive-sleepiness/performance/good-nights-sleep-helps-job-performance',
						},
						POSITIVE_OPTIMAL_STRUCTURE: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/how-sleep-works/what-happens-when-you-sleep',
						},
						POSITIVE_LONG_AND_RECOVERING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_american_association',
							learnMoreLink: 'https://www.apa.org/monitor/2017/10/cover-sleep',
						},
						POSITIVE_LONG_AND_DEEP: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleep.org/articles/what-happens-during-sleep/',
						},
						POSITIVE_LONG_AND_REFRESHING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleep.org/articles/what-happens-during-sleep/',
						},
						POSITIVE_LONG_AND_CONTINUOUS: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/sleep-deprivation/interrupted-sleep',
						},
						POSITIVE_LONG_AND_CALM: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mental_health',
							learnMoreLink:
								'https://www.mhanational.org/rest-relaxation-and-exercise',
						},
						POSITIVE_RECOVERING: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mayo_clinic',
							learnMoreLink:
								'https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/sleep-the-foundation-for-healthy-habits/art-20270117',
						},
						POSITIVE_DEEP: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleep.org/articles/what-happens-during-sleep/',
						},
						POSITIVE_REFRESHING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleep.org/articles/what-happens-during-sleep/',
						},
						POSITIVE_CONTINUOUS: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleep.org/articles/interrupted-sleep-what-happens-to-your-body/',
						},
						POSITIVE_CALM: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_arthritis_foundation',
							learnMoreLink:
								'https://www.arthritis.org/health-wellness/healthy-living/managing-pain/fatigue-sleep/sleep-and-pain',
						},
						POSITIVE_SHORT_BUT_RECOVERING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/articles/healthy-sleep-tips',
						},
						POSITIVE_SHORT_BUT_DEEP: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mayo_clinic',
							learnMoreLink:
								'https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/sleep/art-20048379',
						},
						POSITIVE_SHORT_BUT_REFRESHING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/sleep-hygiene/healthy-sleep-tips',
						},
						POSITIVE_SHORT_BUT_CONTINUOUS: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/insomnia/treatment/what-do-when-you-cant-sleep',
						},
						POSITIVE_SHORT_BUT_CALM: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/bedroom-environment/technology-in-the-bedroom',
						},
						NEGATIVE_LONG_BUT_NOT_RESTORATIVE: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mayo_clinic',
							learnMoreLink:
								'https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/sleep/art-20048379',
						},
						NEGATIVE_LONG_BUT_LIGHT: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_american_association_2',
							learnMoreLink:
								'https://www.sleepassociation.org/about-sleep/stages-of-sleep/deep-sleep/',
						},
						NEGATIVE_LONG_BUT_NOT_REFRESHING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								' https://www.sleepfoundation.org/insomnia/treatment/what-do-when-you-cant-sleep',
						},
						NEGATIVE_LONG_BUT_DISCONTINUOUS: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_american_academy',
							learnMoreLink:
								'https://www.sleepfoundation.org/excessive-sleepiness/performance/good-nights-sleep-helps-job-performance',
						},
						NEGATIVE_LONG_BUT_RESTLESS: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/sleep-deprivation/interrupted-sleep',
						},
						NEGATIVE_LONG_BUT_POOR_QUALITY: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								' https://www.sleepfoundation.org/sleep-hygiene/healthy-sleep-tips',
						},
						NEGATIVE_NOT_RESTORATIVE: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mayo_clinic',
							learnMoreLink:
								'https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/sleep/art-20048379',
						},
						NEGATIVE_LIGHT: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_american_association_2',
							learnMoreLink:
								'https://www.sleepassociation.org/about-sleep/stages-of-sleep/deep-sleep/',
						},
						NEGATIVE_NOT_REFRESHING: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mayo_clinic',
							learnMoreLink:
								'https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/sleep/art-20048379',
						},
						NEGATIVE_DISCONTINUOUS: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_american_academy',
							learnMoreLink:
								'https://www.sleepfoundation.org/excessive-sleepiness/performance/good-nights-sleep-helps-job-performance',
						},
						NEGATIVE_RESTLESS: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/insomnia/treatment/what-do-when-you-cant-sleep',
						},
						NEGATIVE_POOR_STRUCTURE: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mayo_clinic',
							learnMoreLink:
								'https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/sleep/art-20048379',
						},
						NEGATIVE_SHORT_AND_NONRECOVERING: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_american_academy',
							learnMoreLink:
								'http://sleepeducation.org/essentials-in-sleep/healthy-sleep-habits',
						},
						NEGATIVE_SHORT_AND_POOR_STRUCTURE: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/sleep-hygiene/healthy-sleep-tips',
						},
						NEGATIVE_SHORT_AND_POOR_QUALITY: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink: 'https://www.sleep.org/improve-your-sleep/',
						},
						NEGATIVE_LONG_BUT_NOT_ENOUGH_REM: {
							learnMoreTranslationKey:
								'sleep_score_learn_more_national_foundation',
							learnMoreLink:
								'https://www.sleepfoundation.org/insomnia/treatment/what-do-when-you-cant-sleep',
						},
						NEGATIVE_LONG_BUT_TOO_MUCH_REM: {
							learnMoreTranslationKey: 'sleep_score_learn_more_university_1',
							learnMoreLink:
								'https://www.sciencedaily.com/releases/2019/01/190128101104.htm',
						},
						NEGATIVE_NOT_ENOUGH_REM: {
							learnMoreTranslationKey: 'sleep_score_learn_more_mayo_clinic',
							learnMoreLink:
								'https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/sleep/art-20048379',
						},
						NEGATIVE_TOO_MUCH_REM: {
							learnMoreTranslationKey: 'sleep_score_learn_more_university_2',
							learnMoreLink:
								'https://www.pennmedicine.org/news/news-releases/2016/june/weight-and-diet-may-help-predi',
						},
					},
					_ = {
						POSITIVE_HIGHLY_RECOVERING: { genericGuidanceMissing: !0 },
						POSITIVE_LONG_AND_RECOVERING: { longFeedbackMissing: !0 },
						POSITIVE_LONG_AND_DEEP: { longFeedbackMissing: !0 },
						POSITIVE_LONG_AND_REFRESHING: { longFeedbackMissing: !0 },
						POSITIVE_LONG_AND_CONTINUOUS: { longFeedbackMissing: !0 },
						POSITIVE_LONG_AND_CALM: { longFeedbackMissing: !0 },
						POSITIVE_REFRESHING: { genericGuidanceMissing: !0 },
					},
					E = (0, a.hg)('qvzNMwxuTb9NxZ6Ce2a9z9'),
					T = 3,
					C = 2,
					S = 1,
					I = 2,
					v = 3,
					f = 5,
					D = ['deep', 'light', 'rem', 'awake'],
					N = 28800,
					R = { MIN_C: -20, MIN_F: -36, MAX_C: 20, MAX_F: 36 },
					b = { score: 'score', coach: 'coach' },
					L = {
						SleepHistory: 'SleepHistory',
						ActivityHistory: 'ActivityHistory',
						HrvStatus: 'HrvStatus',
						Naps: 'Naps',
					},
					P = ['NO_CHANGE_BALANCED', 'NO_CHANGE_NO_ADJUSTMENTS', 'NONE'],
					O = ['NO_CHANGE', 'NO_DATA'],
					w = { timeline: 'timeline', stages: 'stages' };
			},
			230268: (e, t, i) => {
				'use strict';
				i.d(t, { L: () => n, S: () => a });
				const n = (e) => e.indexOf('_IMPORT') > -1,
					a = (e) => n(e.consumerCapability) && e.uploadConsentRequired;
			},
			363436: (e, t, i) => {
				'use strict';
				i.d(t, {
					BO: () => A,
					Ft: () => h,
					IB: () => y,
					IH: () => m,
					Rp: () => _,
					cU: () => g,
					il: () => T,
					kl: () => u,
					nE: () => E,
					q8: () => p,
				});
				var n = i(544310),
					a = i(815835),
					s = i(278941),
					r = i(106235),
					o = i(699990),
					l = i(80879);
				l.Ay.loadNamespaces(['exercise_types']);
				const c = {
						BackNeck: 'BackNeck',
						BackTriceps: 'BackTriceps',
						BackForearms: 'BackForearms',
						BackShoulders: 'BackShoulders',
						BackTraps: 'BackTraps',
						BackLats: 'BackLats',
						BackLowerBack: 'BackLowerBack',
						BackAbductors: 'BackAbductors',
						BackAdductors: 'BackAdductors',
						BackGlutes: 'BackGlutes',
						BackHamstrings: 'BackHamstrings',
						BackCalves: 'BackCalves',
						FrontShoulders: 'FrontShoulders',
						FrontChest: 'FrontChest',
						FrontBiceps: 'FrontBiceps',
						FrontForearms: 'FrontForearms',
						FrontObliques: 'FrontObliques',
						FrontAbs: 'FrontAbs',
						FrontHips: 'FrontHips',
						FrontQuads: 'FrontQuads',
					},
					d = {
						ABS: [c.FrontAbs],
						BICEPS: [c.FrontBiceps],
						CALVES: [c.BackCalves],
						CHEST: [c.FrontChest],
						FOREARM: [c.FrontForearms, c.BackForearms],
						GLUTES: [c.BackGlutes],
						HAMSTRINGS: [c.BackHamstrings],
						ABDUCTORS: [c.BackAbductors],
						ADDUCTORS: [c.BackAdductors],
						HIPS: [c.FrontHips],
						LATS: [c.BackLats],
						LOWER_BACK: [c.BackLowerBack],
						OBLIQUES: [c.FrontObliques],
						QUADS: [c.FrontQuads],
						SHOULDERS: [c.FrontShoulders, c.BackShoulders],
						TRAPS: [c.BackTraps],
						TRICEPS: [c.BackTriceps],
						NECK: [c.BackNeck],
					},
					u = (e) => (e ? e.map((e) => d[e]).flat() : []),
					p = () => (0, a.j5)(n.ColorRedDark2),
					y = () => (0, a.j5)(n.ColorYellowDark1),
					h = () => (0, a.j5)(n.ColorLightuiAccent1),
					g = [
						r.A.StepTypes.Warm_Up,
						r.A.StepTypes.Cool_Down,
						r.A.StepTypes.Recovery,
					],
					m = (e, t) => {
						let i = [],
							n = [];
						const a = e.filter(
							(e) =>
								null !== e && void 0 !== e && (e.categoryKey || e.exerciseKey)
						);
						return (
							t.forEach((e) => {
								a.find(
									(t) =>
										t.categoryKey === e.categoryKey &&
										t.exerciseKey === e.exerciseKey
								) &&
									(e.primaryMuscles && (i = i.concat(e.primaryMuscles)),
									e.secondaryMuscles && (n = n.concat(e.secondaryMuscles)));
							}),
							(i = (0, s.R3)(i)),
							(n = (0, s.R3)(n)),
							{ primaryMuscles: i, secondaryMuscles: n }
						);
					},
					A = (e, t) => {
						const i = [];
						return (
							(e && e.length > 0
								? e.filter(
										(e) =>
											'REST' !== e.setType &&
											null !== e.repetitionCount &&
											e.repetitionCount >= 0
									)
								: []
							).forEach((e) => {
								const { wktStepIndex: n, exercises: a } = e;
								let { categoryKey: s, exerciseKey: r } = (0, o.QO)(a),
									l = 'ACTIVE';
								void 0 === n || null === n
									? (l = 'ACTIVE')
									: t &&
										t.length > 0 &&
										t.forEach((e) => {
											if (e.steps && e.steps[n]) {
												const t = e.steps[n];
												t.exerciseKey === r &&
													t.categoryKey === s &&
													((l = t.intensity),
													(r = t.exerciseKey),
													(s = t.categoryKey));
											} else l = 'ACTIVE';
										}),
									i.push({ exerciseKey: r, categoryKey: s, stepType: l });
							}),
							i
						);
					},
					_ = (e, t, i) => {
						const n = A(e, t).filter(
							(e) => !g.includes(e.stepType.toLowerCase())
						);
						return m(n, i);
					},
					E = () => Object.values(c),
					T = (e, t) => {
						if (e && 0 !== e.length)
							return t && e.length <= 3
								? l.Ay.t('workout:number_of_muscle_groups', { 0: e.length })
								: e
										.map((e) => l.Ay.t(`exercise_types:muscle_type_${e}`))
										.join(', ');
					};
			},
			228268: (e, t, i) => {
				'use strict';
				i.d(t, {
					FK: () => p,
					eg: () => l,
					ge: () => u,
					np: () => c,
					tY: () => r,
					wU: () => h,
				});
				var n = i(80879),
					a = i(363436),
					s = i(106235);
				const r = (e, t = !1) => {
						let i = e.workoutName;
						return (
							e.workoutName ||
								(e.sportType && e.sportType.sportTypeKey
									? ((i = n.Ay.t(
											'workout:workout.default.title.' +
												e.sportType.sportTypeKey
										)),
										t &&
											(e.sportType.sportTypeKey === s.A.SportTypes.Running &&
												(i = n.Ay.t(
													'workout:workout.default.title.push.run.speed'
												)),
											e.sportType.sportTypeKey === s.A.SportTypes.Cycling &&
												(i = n.Ay.t(
													'workout:workout.default.title.handcycling'
												))))
									: (i = n.Ay.t('workout:workout_label'))),
							i
						);
					},
					o = ['multi_sport', null],
					l = (e) => {
						if (!e || 0 === e.length) return [];
						let t = e.filter((e) => !o.includes(e.sportTypeKey));
						return (
							(t = t.map((e) => {
								let t = `activity_type_${e.sportTypeKey}`,
									i = `/workout/create/${e.sportTypeKey}`;
								switch (e.sportTypeKey) {
									case 'running':
										t = 'workout.run';
										break;
									case 'cycling':
										t = 'workout.bike';
										break;
									case 'other':
										t = 'workout.activity.type.other';
										break;
									case 'lap_swimming':
										(e.sportTypeKey = 'swimming'),
											(t = 'activity_type_lap_swimming'),
											(i = '/workout/create/swimming');
										break;
									case 'swimming':
										t = 'activity_type_lap_swimming';
										break;
									case 'strength_training':
										t = 'workout.strength';
										break;
									case 'cardio_training':
										t = 'workout.cardio';
										break;
									case 'yoga':
										t = 'workout.yoga';
										break;
									case 'pilates':
										t = 'workout.pilates';
								}
								return {
									...e,
									nameKey: t,
									navigationUrl: i,
									value: e.sportTypeKey,
								};
							})),
							(t = t.sort((e, t) => e.displayOrder - t.displayOrder)),
							t
						);
					},
					c = (e) => {
						const t = [];
						function i(e) {
							for (var n = 0, s = e.length; n < s; n += 1) {
								if (!e[n]) continue;
								const { exerciseKey: s, categoryKey: r, stepType: o } = e[n];
								a.cU.includes(o.stepTypeKey) ||
									t.push({ exerciseKey: s, categoryKey: r }),
									e[n].workoutSteps &&
										e[n].workoutSteps.length > 0 &&
										i(e[n].workoutSteps);
							}
						}
						if (e && e.length > 0)
							for (var n = 0, s = e.length; n < s; n += 1) {
								var r = e[n].workoutSteps;
								r && i(r);
							}
						return t;
					};
				function d(e, t) {
					if (!t || 'function' !== typeof t) return;
					let i = !1;
					for (var n = 0, a = e.length; n < a; n += 1) {
						if (e[n] && t(e[n])) return !0;
						e[n].workoutSteps &&
							e[n].workoutSteps.length > 0 &&
							(i = i || d(e[n].workoutSteps, t));
					}
					return i;
				}
				const u = (e, t) => {
						let i = !1;
						if (e && e.length > 0)
							for (var n = 0, a = e.length; n < a; n += 1) {
								var s = e[n].workoutSteps;
								s && (i = i || d(s, t));
							}
						return i;
					},
					p = (e, t) => {
						function i(e) {
							for (let n = 0, a = e.length; n < a; n += 1)
								e[n] && (t && 'function' === typeof t && t(e[n]), y(e[n])),
									e[n].workoutSteps &&
										e[n].workoutSteps.length > 0 &&
										i(e[n].workoutSteps);
						}
						if (e && e.length > 0)
							for (let n = 0, a = e.length; n < a; n += 1) {
								const t = e[n].workoutSteps;
								t && i(t);
							}
						return e;
					},
					y = (e) => {
						const { category: t, exerciseName: i } = e;
						(e.categoryKey = t),
							(e.exerciseKey = i || t),
							delete e.category,
							delete e.exerciseName;
					},
					h = (e) => {
						const { categoryKey: t, exerciseKey: i } = e;
						(e.category = t),
							(e.exerciseName = i !== t ? i : null),
							delete e.categoryKey,
							delete e.exerciseKey;
					};
			},
			24217: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = r()(a());
				l.i(o.A, '', !0),
					l.push([
						e.id,
						`.CommentEditor_commentEditorContainer__tZ\\+2N {\n    position: relative;\n    border-radius: 4px;\n    transition: border linear 0.2s;\n    border: 1px solid transparent;\n}\n\n.CommentEditor_commentEditorContainer__tZ\\+2N:focus-within {\n    border-color: ${o.A.locals.blue_light_1};\n}\n\n.CommentEditor_editorTextFieldContainer__giOxc {\n    position: relative;\n}\n\n.CommentEditor_editorTextField__W3hYP {\n    outline: none;\n    color: ${o.A.locals.textMedium};\n    border-radius: 4px;\n\n    font-size: 12px;\n    font-family: 'Open Sans', 'HelveticaNeue-Light', 'Helvetica Neue Light', 'Helvetica Neue', Helvetica, Arial,\n        sans-serif;\n    line-height: 22px;\n\n    word-break: break-word;\n}\n\n.CommentEditor_editorPlaceholder__ce9q\\+ {\n    color: ${o.A.locals.darkui_surface_3}; /* was textMedium, darkui_surface_3 to fix ADA */\n    position: absolute;\n    top: 0;\n    left: 0;\n    pointer-events: none;\n    opacity: 0.7;\n\n    font-size: 12px;\n    font-family: 'Open Sans', 'HelveticaNeue-Light', 'Helvetica Neue Light', 'Helvetica Neue', Helvetica, Arial,\n        sans-serif;\n    line-height: 22px;\n\n    max-width: calc(100% - 8px);\n    white-space: nowrap;\n    overflow: hidden;\n}\n\n/* ensure placeholder background transparent */\n.CommentEditor_editorTextFieldContainer__giOxc .CommentEditor_editorPlaceholder__ce9q\\+ {\n    background: transparent;\n}\n\n.CommentEditor_editorTextField__W3hYP span[data-type='tag'] {\n    font-weight: bold;\n    color: ${o.A.locals.blue_primary};\n}\n\n.CommentEditor_commentEditorContainer__tZ\\+2N .CommentEditor_tooltipContainer__fRHLZ {\n    position: absolute;\n    left: 50%;\n    top: -50%;\n    opacity: 0;\n    user-select: none;\n}\n\n.CommentEditor_commentEditorContainer__tZ\\+2N:focus-within .CommentEditor_tooltipContainer__fRHLZ[aria-hidden='false'] {\n    opacity: 1;\n}\n`,
						'',
						{
							version: 3,
							sources: [
								'webpack://./src/CommentEditor/components/CommentEditor.module.css',
							],
							names: [],
							mappings:
								'AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,8BAA8B;IAC9B,6BAA6B;AACjC;;AAEA;IACI,0DAA0B;AAC9B;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,mDAAiB;IACjB,kBAAkB;;IAElB,eAAe;IACf;kBACc;IACd,iBAAiB;;IAEjB,sBAAsB;AAC1B;;AAEA;IACI,mDAAuB,EAAE,gDAAgD;IACzE,kBAAkB;IAClB,MAAM;IACN,OAAO;IACP,oBAAoB;IACpB,YAAY;;IAEZ,eAAe;IACf;kBACc;IACd,iBAAiB;;IAEjB,2BAA2B;IAC3B,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA,8CAA8C;AAC9C;IACI,uBAAuB;AAC3B;;AAEA;IACI,iBAAiB;IACjB,mDAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,SAAS;IACT,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI,UAAU;AACd',
							sourcesContent: [
								"@value (blue_primary, textMedium, blue_light_1, darkui_surface_3) from 'ui-connect/styles/colors.module.css';\n\n.commentEditorContainer {\n    position: relative;\n    border-radius: 4px;\n    transition: border linear 0.2s;\n    border: 1px solid transparent;\n}\n\n.commentEditorContainer:focus-within {\n    border-color: blue_light_1;\n}\n\n.editorTextFieldContainer {\n    position: relative;\n}\n\n.editorTextField {\n    outline: none;\n    color: textMedium;\n    border-radius: 4px;\n\n    font-size: 12px;\n    font-family: 'Open Sans', 'HelveticaNeue-Light', 'Helvetica Neue Light', 'Helvetica Neue', Helvetica, Arial,\n        sans-serif;\n    line-height: 22px;\n\n    word-break: break-word;\n}\n\n.editorPlaceholder {\n    color: darkui_surface_3; /* was textMedium, darkui_surface_3 to fix ADA */\n    position: absolute;\n    top: 0;\n    left: 0;\n    pointer-events: none;\n    opacity: 0.7;\n\n    font-size: 12px;\n    font-family: 'Open Sans', 'HelveticaNeue-Light', 'Helvetica Neue Light', 'Helvetica Neue', Helvetica, Arial,\n        sans-serif;\n    line-height: 22px;\n\n    max-width: calc(100% - 8px);\n    white-space: nowrap;\n    overflow: hidden;\n}\n\n/* ensure placeholder background transparent */\n.editorTextFieldContainer .editorPlaceholder {\n    background: transparent;\n}\n\n.editorTextField span[data-type='tag'] {\n    font-weight: bold;\n    color: blue_primary;\n}\n\n.commentEditorContainer .tooltipContainer {\n    position: absolute;\n    left: 50%;\n    top: -50%;\n    opacity: 0;\n    user-select: none;\n}\n\n.commentEditorContainer:focus-within .tooltipContainer[aria-hidden='false'] {\n    opacity: 1;\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(l.locals = {
						blue_primary: `${o.A.locals.blue_primary}`,
						textMedium: `${o.A.locals.textMedium}`,
						blue_light_1: `${o.A.locals.blue_light_1}`,
						darkui_surface_3: `${o.A.locals.darkui_surface_3}`,
						commentEditorContainer:
							'CommentEditor_commentEditorContainer__tZ+2N',
						editorTextFieldContainer:
							'CommentEditor_editorTextFieldContainer__giOxc',
						editorTextField: 'CommentEditor_editorTextField__W3hYP',
						editorPlaceholder: 'CommentEditor_editorPlaceholder__ce9q+',
						tooltipContainer: 'CommentEditor_tooltipContainer__fRHLZ',
					});
				const c = l;
			},
			308508: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = r()(a());
				l.i(o.A, '', !0),
					l.push([
						e.id,
						`.Suggestions_suggestionsOverlay__GMC6u {\n    position: absolute;\n    background-color: white;\n    border: 1px solid ${o.A.locals.lightui_surface_4};\n    /* should be visible higher than map */\n    z-index: 1001;\n    max-height: 330px;\n    overflow: auto;\n}\n\n.Suggestions_suggestionsOverlay__GMC6u > :first-child {\n    max-height: 100%;\n    overflow: auto;\n}\n\n.Suggestions_suggestions__twt\\+k {\n    list-style: none;\n    margin: 0;\n}\n\n.Suggestions_suggestion__mIjz2 {\n    min-height: 66px;\n    cursor: pointer;\n    border: 1px solid transparent;\n}\n\n.Suggestions_suggestion__mIjz2:hover {\n    background-color: ${o.A.locals.lightui_surface_2};\n}\n\n.Suggestions_suggestion__mIjz2[aria-selected='true'] {\n    background-color: ${o.A.locals.lightui_surface_2};\n    border: 1px solid ${o.A.locals.blue_primary};\n    border-radius: 4px;\n}\n\n.Suggestions_suggestion__mIjz2 .Suggestions_anchor__gsuCN {\n    display: flex;\n    max-width: 100%;\n    padding: 8px 15px;\n    align-items: center;\n    text-decoration: none;\n}\n\n.Suggestions_suggestion__mIjz2 .Suggestions_nameWrapper__cBHz5 {\n    display: flex;\n    flex-direction: column;\n}\n\n.Suggestions_suggestion__mIjz2 .Suggestions_username__fHm\\+f {\n    font-size: 14px;\n    line-height: 21px;\n    word-break: break-word;\n}\n.Suggestions_suggestion__mIjz2 .Suggestions_location__CM7I7 {\n    font-size: 12px;\n    line-height: 20px;\n}\n\n/**\n * copy from ConnectionList.css, this was for preventing future merge conflict\n * recommend merge styles later\n */\n.Suggestions_avatarWrapper__BYzUY {\n    flex-shrink: 0; /* prevent it from being squashed */\n    margin-right: 24px;\n    position: relative;\n    height: 48px; /* same height as avatar to make sure badge level icon staying at correct position */\n}\n.Suggestions_avatarWrapper__BYzUY div[class^='badge-level'] {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n}\n.Suggestions_avatar__HsjS9 {\n    width: 48px;\n    height: 48px;\n    border-radius: 50%;\n}\n`,
						'',
						{
							version: 3,
							sources: [
								'webpack://./src/CommentEditor/components/Suggestions.module.css',
							],
							names: [],
							mappings:
								'AAEA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,8DAAmC;IACnC,sCAAsC;IACtC,aAAa;IACb,iBAAiB;IACjB,cAAc;AAClB;;AAEA;IACI,gBAAgB;IAChB,cAAc;AAClB;;AAEA;IACI,gBAAgB;IAChB,SAAS;AACb;;AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,6BAA6B;AACjC;;AAEA;IACI,8DAAmC;AACvC;;AAEA;IACI,8DAAmC;IACnC,8DAA8B;IAC9B,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,iBAAiB;IACjB,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,sBAAsB;AAC1B;AACA;IACI,eAAe;IACf,iBAAiB;AACrB;;AAEA;;;EAGE;AACF;IACI,cAAc,EAAE,mCAAmC;IACnD,kBAAkB;IAClB,kBAAkB;IAClB,YAAY,EAAE,oFAAoF;AACtG;AACA;IACI,kBAAkB;IAClB,SAAS;IACT,QAAQ;AACZ;AACA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;AACtB',
							sourcesContent: [
								"@value (textDark, blue_primary, blue_light_1, lightui_accent_2, lightui_surface_1, lightui_surface_2, lightui_surface_4) from 'ui-connect/styles/colors.module.css';\n\n.suggestionsOverlay {\n    position: absolute;\n    background-color: white;\n    border: 1px solid lightui_surface_4;\n    /* should be visible higher than map */\n    z-index: 1001;\n    max-height: 330px;\n    overflow: auto;\n}\n\n.suggestionsOverlay > :first-child {\n    max-height: 100%;\n    overflow: auto;\n}\n\n.suggestions {\n    list-style: none;\n    margin: 0;\n}\n\n.suggestion {\n    min-height: 66px;\n    cursor: pointer;\n    border: 1px solid transparent;\n}\n\n.suggestion:hover {\n    background-color: lightui_surface_2;\n}\n\n.suggestion[aria-selected='true'] {\n    background-color: lightui_surface_2;\n    border: 1px solid blue_primary;\n    border-radius: 4px;\n}\n\n.suggestion .anchor {\n    display: flex;\n    max-width: 100%;\n    padding: 8px 15px;\n    align-items: center;\n    text-decoration: none;\n}\n\n.suggestion .nameWrapper {\n    display: flex;\n    flex-direction: column;\n}\n\n.suggestion .username {\n    font-size: 14px;\n    line-height: 21px;\n    word-break: break-word;\n}\n.suggestion .location {\n    font-size: 12px;\n    line-height: 20px;\n}\n\n/**\n * copy from ConnectionList.css, this was for preventing future merge conflict\n * recommend merge styles later\n */\n.avatarWrapper {\n    flex-shrink: 0; /* prevent it from being squashed */\n    margin-right: 24px;\n    position: relative;\n    height: 48px; /* same height as avatar to make sure badge level icon staying at correct position */\n}\n.avatarWrapper div[class^='badge-level'] {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n}\n.avatar {\n    width: 48px;\n    height: 48px;\n    border-radius: 50%;\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(l.locals = {
						textDark: `${o.A.locals.textDark}`,
						blue_primary: `${o.A.locals.blue_primary}`,
						blue_light_1: `${o.A.locals.blue_light_1}`,
						lightui_accent_2: `${o.A.locals.lightui_accent_2}`,
						lightui_surface_1: `${o.A.locals.lightui_surface_1}`,
						lightui_surface_2: `${o.A.locals.lightui_surface_2}`,
						lightui_surface_4: `${o.A.locals.lightui_surface_4}`,
						suggestionsOverlay: 'Suggestions_suggestionsOverlay__GMC6u',
						suggestions: 'Suggestions_suggestions__twt+k',
						suggestion: 'Suggestions_suggestion__mIjz2',
						anchor: 'Suggestions_anchor__gsuCN',
						nameWrapper: 'Suggestions_nameWrapper__cBHz5',
						username: 'Suggestions_username__fHm+f',
						location: 'Suggestions_location__CM7I7',
						avatarWrapper: 'Suggestions_avatarWrapper__BYzUY',
						avatar: 'Suggestions_avatar__HsjS9',
					});
				const c = l;
			},
			517942: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = r()(a());
				l.i(o.A, '', !0),
					l.push([
						e.id,
						`.AddComment_container__dh7I0 {\n    display: flex;\n    align-items: flex-start;\n}\n.AddComment_container__dh7I0.AddComment_widget__Uor6F {\n    padding: 43px 21px 14px 21px;\n}\n.AddComment_container__dh7I0.AddComment_page__21XY1 {\n    padding-top: 16px;\n    padding-bottom: 32px;\n    padding-left: 16px;\n}\n.AddComment_container__dh7I0.AddComment_profile__uZY8g {\n    padding: 0 0 8px 8px;\n    margin-bottom: 12px;\n}\n.AddComment_container__dh7I0.AddComment_segment__iQH4\\+ {\n    padding-left: 10px;\n    padding-bottom: 10px;\n}\n\n.AddComment_container__dh7I0 .AddComment_profileImage__2PBu9 {\n    flex-shrink: 0;\n}\n.AddComment_container__dh7I0.AddComment_widget__Uor6F .AddComment_profileImage__2PBu9 {\n    margin-right: 15px;\n}\n.AddComment_container__dh7I0.AddComment_profile__uZY8g .AddComment_profileImage__2PBu9 {\n    margin-right: 12px;\n}\n.AddComment_container__dh7I0.AddComment_page__21XY1 .AddComment_profileImage__2PBu9,\n.AddComment_container__dh7I0.AddComment_segment__iQH4\\+ .AddComment_profileImage__2PBu9 {\n    margin-right: 8px;\n}\n.AddComment_container__dh7I0 .AddComment_profileImage__2PBu9 img {\n    width: 36px;\n    height: 36px;\n}\n.AddComment_container__dh7I0.AddComment_profile__uZY8g .AddComment_profileImage__2PBu9 img {\n    margin: 0;\n}\n.AddComment_container__dh7I0.AddComment_segment__iQH4\\+ .AddComment_profileImage__2PBu9 img {\n    width: 33px;\n    height: 33px;\n}\n.AddComment_container__dh7I0 .AddComment_profileImage__2PBu9 .AddComment_profile__uZY8g {\n    position: relative;\n}\n.AddComment_container__dh7I0 .AddComment_profileImage__2PBu9 .AddComment_profile__uZY8g .AddComment_proIconWrapper__C4MZu {\n    position: absolute;\n    left: 50%;\n    margin-top: 6px;\n}\n.AddComment_container__dh7I0.AddComment_widget__Uor6F .AddComment_profileImage__2PBu9 .AddComment_profile__uZY8g .AddComment_proIconWrapper__C4MZu {\n    margin-top: 0;\n}\n.AddComment_container__dh7I0 .AddComment_profileImage__2PBu9 .AddComment_profile__uZY8g .AddComment_proIcon__Qqgde {\n    position: absolute !important;\n    top: 100%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n.AddComment_container__dh7I0 .AddComment_right__9PVvA {\n    display: flex;\n    flex-grow: 1;\n    padding-top: 6px;\n    margin-right: 12px;\n}\n\n.AddComment_container__dh7I0 .AddComment_button__ujc9O {\n    flex-shrink: 0;\n    align-self: flex-start;\n    margin-top: 4px;\n    margin-left: 6px;\n    padding: 0 3px 1px;\n    width: 45px;\n    line-height: 21px;\n    font-size: 11px;\n}\n\n.AddComment_container__dh7I0 .AddComment_button__ujc9O[disabled] {\n    cursor: not-allowed;\n    background-color: white;\n    opacity: 0.8;\n    color: ${o.A.locals.textMedium};\n}\n\n.AddComment_editorContainer__0dF6Y {\n    flex-grow: 1;\n}\n\n.AddComment_editorTextArea__KxzxN {\n    background-color: ${o.A.locals.lightui_surface_3};\n    box-sizing: border-box;\n    border: none;\n    padding: 5px 6px;\n    max-height: 50px;\n    overflow-y: auto;\n}\n`,
						'',
						{
							version: 3,
							sources: ['webpack://./src/Conversations/AddComment.module.css'],
							names: [],
							mappings:
								'AAEA;IACI,aAAa;IACb,uBAAuB;AAC3B;AACA;IACI,4BAA4B;AAChC;AACA;IACI,iBAAiB;IACjB,oBAAoB;IACpB,kBAAkB;AACtB;AACA;IACI,oBAAoB;IACpB,mBAAmB;AACvB;AACA;IACI,kBAAkB;IAClB,oBAAoB;AACxB;;AAEA;IACI,cAAc;AAClB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,kBAAkB;AACtB;AACA;;IAEI,iBAAiB;AACrB;AACA;IACI,WAAW;IACX,YAAY;AAChB;AACA;IACI,SAAS;AACb;AACA;IACI,WAAW;IACX,YAAY;AAChB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,kBAAkB;IAClB,SAAS;IACT,eAAe;AACnB;AACA;IACI,aAAa;AACjB;AACA;IACI,6BAA6B;IAC7B,SAAS;IACT,SAAS;IACT,gCAAgC;AACpC;AACA;IACI,aAAa;IACb,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,sBAAsB;IACtB,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,WAAW;IACX,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,mDAAiB;AACrB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,8DAAmC;IACnC,sBAAsB;IACtB,YAAY;IACZ,gBAAgB;IAChB,gBAAgB;IAChB,gBAAgB;AACpB',
							sourcesContent: [
								"@value (textMedium, lightui_surface_3) from 'ui-connect/styles/colors.module.css';\n\n.container {\n    display: flex;\n    align-items: flex-start;\n}\n.container.widget {\n    padding: 43px 21px 14px 21px;\n}\n.container.page {\n    padding-top: 16px;\n    padding-bottom: 32px;\n    padding-left: 16px;\n}\n.container.profile {\n    padding: 0 0 8px 8px;\n    margin-bottom: 12px;\n}\n.container.segment {\n    padding-left: 10px;\n    padding-bottom: 10px;\n}\n\n.container .profileImage {\n    flex-shrink: 0;\n}\n.container.widget .profileImage {\n    margin-right: 15px;\n}\n.container.profile .profileImage {\n    margin-right: 12px;\n}\n.container.page .profileImage,\n.container.segment .profileImage {\n    margin-right: 8px;\n}\n.container .profileImage img {\n    width: 36px;\n    height: 36px;\n}\n.container.profile .profileImage img {\n    margin: 0;\n}\n.container.segment .profileImage img {\n    width: 33px;\n    height: 33px;\n}\n.container .profileImage .profile {\n    position: relative;\n}\n.container .profileImage .profile .proIconWrapper {\n    position: absolute;\n    left: 50%;\n    margin-top: 6px;\n}\n.container.widget .profileImage .profile .proIconWrapper {\n    margin-top: 0;\n}\n.container .profileImage .profile .proIcon {\n    position: absolute !important;\n    top: 100%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n.container .right {\n    display: flex;\n    flex-grow: 1;\n    padding-top: 6px;\n    margin-right: 12px;\n}\n\n.container .button {\n    flex-shrink: 0;\n    align-self: flex-start;\n    margin-top: 4px;\n    margin-left: 6px;\n    padding: 0 3px 1px;\n    width: 45px;\n    line-height: 21px;\n    font-size: 11px;\n}\n\n.container .button[disabled] {\n    cursor: not-allowed;\n    background-color: white;\n    opacity: 0.8;\n    color: textMedium;\n}\n\n.editorContainer {\n    flex-grow: 1;\n}\n\n.editorTextArea {\n    background-color: lightui_surface_3;\n    box-sizing: border-box;\n    border: none;\n    padding: 5px 6px;\n    max-height: 50px;\n    overflow-y: auto;\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(l.locals = {
						textMedium: `${o.A.locals.textMedium}`,
						lightui_surface_3: `${o.A.locals.lightui_surface_3}`,
						container: 'AddComment_container__dh7I0',
						widget: 'AddComment_widget__Uor6F',
						page: 'AddComment_page__21XY1',
						profile: 'AddComment_profile__uZY8g',
						segment: 'AddComment_segment__iQH4+',
						profileImage: 'AddComment_profileImage__2PBu9',
						proIconWrapper: 'AddComment_proIconWrapper__C4MZu',
						proIcon: 'AddComment_proIcon__Qqgde',
						right: 'AddComment_right__9PVvA',
						button: 'AddComment_button__ujc9O',
						editorContainer: 'AddComment_editorContainer__0dF6Y',
						editorTextArea: 'AddComment_editorTextArea__KxzxN',
					});
				const c = l;
			},
			426390: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = r()(a());
				l.i(o.A, '', !0),
					l.push([
						e.id,
						`a.CommentContent_mention__onOPu {\n    color: ${o.A.locals.blue_primary};\n    font-weight: bold;\n    word-break: break-word;\n}\n`,
						'',
						{
							version: 3,
							sources: [
								'webpack://./src/Conversations/Comment/CommentContent.module.css',
							],
							names: [],
							mappings: 'AAEA;IACI,mDAAmB;IACnB,iBAAiB;IACjB,sBAAsB;AAC1B',
							sourcesContent: [
								"@value (blue_primary) from 'ui-connect/styles/colors.module.css';\n\na.mention {\n    color: blue_primary;\n    font-weight: bold;\n    word-break: break-word;\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(l.locals = {
						blue_primary: `${o.A.locals.blue_primary}`,
						mention: 'CommentContent_mention__onOPu',
					});
				const c = l;
			},
			824359: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s)()(a());
				r.push([
					e.id,
					'.NewsFeedLikeWidgetWrapper_likeIcon__Fh-ct {\n    position: relative;\n    display: inline;\n}\n',
					'',
					{
						version: 3,
						sources: [
							'webpack://./src/NewsFeed/components/NewsFeedLikeWidgetWrapper/NewsFeedLikeWidgetWrapper.module.css',
						],
						names: [],
						mappings: 'AAAA;IACI,kBAAkB;IAClB,eAAe;AACnB',
						sourcesContent: [
							'.likeIcon {\n    position: relative;\n    display: inline;\n}\n',
						],
						sourceRoot: '',
					},
				]),
					(r.locals = {
						likeIcon: 'NewsFeedLikeWidgetWrapper_likeIcon__Fh-ct',
					});
				const o = r;
			},
			983725: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = r()(a());
				l.i(o.A, '', !0),
					l.push([
						e.id,
						`.NewsFeedWidgetSocialItem_entryLike__NzmG- {\n    width: 60px;\n    float: left;\n    display: block;\n    min-height: 0;\n    margin-left: 0;\n    box-sizing: border-box;\n}\n.NewsFeedWidgetSocialItem_entryComment__Ds-4P {\n    width: 70px;\n    float: left;\n    display: block;\n    min-height: 0;\n    margin-left: 5px;\n    box-sizing: border-box;\n}\n.NewsFeedWidgetSocialItem_btnCommentValue__fnbE5 {\n    font-size: 12px;\n    color: ${o.A.locals.blue_dark_1};\n    cursor: pointer;\n    margin-left: 3px;\n}\n.NewsFeedWidgetSocialItem_btnComment__wE1Md {\n    vertical-align: middle;\n    line-height: 22px;\n}\n.NewsFeedWidgetSocialItem_btnCommentNumber__A\\+SP1 {\n    color: ${o.A.locals.blue_dark_1};\n    vertical-align: middle;\n}\n.NewsFeedWidgetSocialItem_btnCommentSpeechIcon__-ODGt {\n    width: 16px;\n    height: 16px;\n    color: ${o.A.locals.blue_dark_1};\n    font-size: 16px;\n    text-align: center;\n    position: relative;\n}\n`,
						'',
						{
							version: 3,
							sources: [
								'webpack://./src/NewsFeed/components/NewsFeedLikeWidgetWrapper/NewsFeedWidgetSocialItem.module.css',
							],
							names: [],
							mappings:
								'AAEA;IACI,WAAW;IACX,WAAW;IACX,cAAc;IACd,aAAa;IACb,cAAc;IACd,sBAAsB;AAC1B;AACA;IACI,WAAW;IACX,WAAW;IACX,cAAc;IACd,aAAa;IACb,gBAAgB;IAChB,sBAAsB;AAC1B;AACA;IACI,eAAe;IACf,mDAAkB;IAClB,eAAe;IACf,gBAAgB;AACpB;AACA;IACI,sBAAsB;IACtB,iBAAiB;AACrB;AACA;IACI,mDAAkB;IAClB,sBAAsB;AAC1B;AACA;IACI,WAAW;IACX,YAAY;IACZ,mDAAkB;IAClB,eAAe;IACf,kBAAkB;IAClB,kBAAkB;AACtB',
							sourcesContent: [
								"@value (blue_dark_1) from 'ui-connect/styles/colors.module.css';\n\n.entryLike {\n    width: 60px;\n    float: left;\n    display: block;\n    min-height: 0;\n    margin-left: 0;\n    box-sizing: border-box;\n}\n.entryComment {\n    width: 70px;\n    float: left;\n    display: block;\n    min-height: 0;\n    margin-left: 5px;\n    box-sizing: border-box;\n}\n.btnCommentValue {\n    font-size: 12px;\n    color: blue_dark_1;\n    cursor: pointer;\n    margin-left: 3px;\n}\n.btnComment {\n    vertical-align: middle;\n    line-height: 22px;\n}\n.btnCommentNumber {\n    color: blue_dark_1;\n    vertical-align: middle;\n}\n.btnCommentSpeechIcon {\n    width: 16px;\n    height: 16px;\n    color: blue_dark_1;\n    font-size: 16px;\n    text-align: center;\n    position: relative;\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(l.locals = {
						blue_dark_1: `${o.A.locals.blue_dark_1}`,
						entryLike: 'NewsFeedWidgetSocialItem_entryLike__NzmG-',
						entryComment: 'NewsFeedWidgetSocialItem_entryComment__Ds-4P',
						btnCommentValue: 'NewsFeedWidgetSocialItem_btnCommentValue__fnbE5',
						btnComment: 'NewsFeedWidgetSocialItem_btnComment__wE1Md',
						btnCommentNumber:
							'NewsFeedWidgetSocialItem_btnCommentNumber__A+SP1',
						btnCommentSpeechIcon:
							'NewsFeedWidgetSocialItem_btnCommentSpeechIcon__-ODGt',
					});
				const c = l;
			},
			890987: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s)()(a());
				r.push([
					e.id,
					'.NewsFeedWidgetEditCommentView_controlArea__ZiYhP {\n    display: flex;\n}\n.NewsFeedWidgetEditCommentView_buttonGroup__9UG6u {\n    margin-left: auto;\n}\n',
					'',
					{
						version: 3,
						sources: [
							'webpack://./src/NewsFeed/components/NewsFeedWidgetEditCommentView/NewsFeedWidgetEditCommentView.module.css',
						],
						names: [],
						mappings: 'AAAA;IACI,aAAa;AACjB;AACA;IACI,iBAAiB;AACrB',
						sourcesContent: [
							'.controlArea {\n    display: flex;\n}\n.buttonGroup {\n    margin-left: auto;\n}\n',
						],
						sourceRoot: '',
					},
				]),
					(r.locals = {
						controlArea: 'NewsFeedWidgetEditCommentView_controlArea__ZiYhP',
						buttonGroup: 'NewsFeedWidgetEditCommentView_buttonGroup__9UG6u',
					});
				const o = r;
			},
			473487: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s)()(a());
				r.push([
					e.id,
					'.NewsFeedWidgetEditCommentViewInput_container__v5kGA {\n    width: calc(100% - 56px);\n    margin-left: 56px;\n    margin-top: 4px;\n    margin-bottom: 12px;\n}\n',
					'',
					{
						version: 3,
						sources: [
							'webpack://./src/NewsFeed/components/NewsFeedWidgetEditCommentView/NewsFeedWidgetEditCommentViewInput.module.css',
						],
						names: [],
						mappings:
							'AAAA;IACI,wBAAwB;IACxB,iBAAiB;IACjB,eAAe;IACf,mBAAmB;AACvB',
						sourcesContent: [
							'.container {\n    width: calc(100% - 56px);\n    margin-left: 56px;\n    margin-top: 4px;\n    margin-bottom: 12px;\n}\n',
						],
						sourceRoot: '',
					},
				]),
					(r.locals = {
						container: 'NewsFeedWidgetEditCommentViewInput_container__v5kGA',
					});
				const o = r;
			},
			495377: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = i(989547),
					c = r()(a());
				c.i(o.A, '', !0),
					c.i(l.A, '', !0),
					c.push([
						e.id,
						`.Privacy_optionContainer__hHtKp {\n    align-items: center;\n    border-top: 1px solid ${o.A.locals.lightui_surface_3};\n    display: grid;\n    font-size: 14px;\n    grid-gap: 8px;\n    grid-template-columns: minmax(auto, 270px);\n    padding: 16px 0;\n}\n.Privacy_optionContainer__hHtKp:last-of-type {\n    border-bottom: 1px solid ${o.A.locals.lightui_surface_3};\n}\n.Privacy_optionTitleContainer__89Nuf {\n    grid-column: 1/-1;\n}\n.Privacy_cancelButtonWrapper__1fK0X {\n    margin-right: 16px;\n}\n.Privacy_removeCustomPrivacyHeader__wa7DX {\n    font-weight: bold;\n}\n.Privacy_selectInput__m8i\\+A {\n    width: 100%;\n}\n.Privacy_helpIcon__h-WkE {\n    color: ${o.A.locals.blue_primary};\n    margin: 5px 0 0 5px;\n    font-size: 16px;\n    cursor: pointer;\n}\n.Privacy_helpListContainer__IIzpR {\n    margin: 11px 0 22px 25px;\n}\n\n@media (min-width: ${l.A.locals.startSM}) {\n    .Privacy_optionContainer__hHtKp {\n        grid-template-columns: 25% minmax(auto, 270px);\n        text-align: right;\n    }\n    .Privacy_optionTitleContainer__89Nuf {\n        grid-column: initial;\n    }\n}\n\n@media (min-width: ${l.A.locals.startLG}) {\n    .Privacy_optionContainer__hHtKp {\n        grid-template-columns: 33% minmax(auto, 270px);\n    }\n}\n`,
						'',
						{
							version: 3,
							sources: [
								'webpack://./src/Privacy/Components/Privacy.module.css',
							],
							names: [],
							mappings:
								'AAGA;IACI,mBAAmB;IACnB,kEAAuC;IACvC,aAAa;IACb,eAAe;IACf,aAAa;IACb,0CAA0C;IAC1C,eAAe;AACnB;AACA;IACI,qEAA0C;AAC9C;AACA;IACI,iBAAiB;AACrB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,iBAAiB;AACrB;AACA;IACI,WAAW;AACf;AACA;IACI,mDAAmB;IACnB,mBAAmB;IACnB,eAAe;IACf,eAAe;AACnB;AACA;IACI,wBAAwB;AAC5B;;AAEA;IACI;QACI,8CAA8C;QAC9C,iBAAiB;IACrB;IACA;QACI,oBAAoB;IACxB;AACJ;;AAEA;IACI;QACI,8CAA8C;IAClD;AACJ',
							sourcesContent: [
								"@value (color_106, lightui_surface_3, blue_dark_1, black, blue_primary) from 'ui-connect/styles/colors.module.css';\n@value (startSM, startLG) from 'ui-connect/styles/variables.module.css';\n\n.optionContainer {\n    align-items: center;\n    border-top: 1px solid lightui_surface_3;\n    display: grid;\n    font-size: 14px;\n    grid-gap: 8px;\n    grid-template-columns: minmax(auto, 270px);\n    padding: 16px 0;\n}\n.optionContainer:last-of-type {\n    border-bottom: 1px solid lightui_surface_3;\n}\n.optionTitleContainer {\n    grid-column: 1/-1;\n}\n.cancelButtonWrapper {\n    margin-right: 16px;\n}\n.removeCustomPrivacyHeader {\n    font-weight: bold;\n}\n.selectInput {\n    width: 100%;\n}\n.helpIcon {\n    color: blue_primary;\n    margin: 5px 0 0 5px;\n    font-size: 16px;\n    cursor: pointer;\n}\n.helpListContainer {\n    margin: 11px 0 22px 25px;\n}\n\n@media (min-width: startSM) {\n    .optionContainer {\n        grid-template-columns: 25% minmax(auto, 270px);\n        text-align: right;\n    }\n    .optionTitleContainer {\n        grid-column: initial;\n    }\n}\n\n@media (min-width: startLG) {\n    .optionContainer {\n        grid-template-columns: 33% minmax(auto, 270px);\n    }\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(c.locals = {
						color_106: `${o.A.locals.color_106}`,
						lightui_surface_3: `${o.A.locals.lightui_surface_3}`,
						blue_dark_1: `${o.A.locals.blue_dark_1}`,
						black: `${o.A.locals.black}`,
						blue_primary: `${o.A.locals.blue_primary}`,
						startSM: `${l.A.locals.startSM}`,
						startLG: `${l.A.locals.startLG}`,
						optionContainer: 'Privacy_optionContainer__hHtKp',
						optionTitleContainer: 'Privacy_optionTitleContainer__89Nuf',
						cancelButtonWrapper: 'Privacy_cancelButtonWrapper__1fK0X',
						removeCustomPrivacyHeader:
							'Privacy_removeCustomPrivacyHeader__wa7DX',
						selectInput: 'Privacy_selectInput__m8i+A',
						helpIcon: 'Privacy_helpIcon__h-WkE',
						helpListContainer: 'Privacy_helpListContainer__IIzpR',
					});
				const d = c;
			},
			9471: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = i(989547),
					c = r()(a());
				c.i(o.A, '', !0),
					c.i(l.A, '', !0),
					c.push([
						e.id,
						`.CommentInput_textArea__ZXdm3 {\n    background: ${o.A.locals.lightui_surface_3};\n    box-sizing: border-box;\n    border: none;\n    padding: 6px 10px;\n    max-height: 64px;\n    overflow-y: auto;\n}\n\n@media (max-width: ${l.A.locals.endXS}) {\n    .CommentInput_textArea__ZXdm3 {\n        padding: 3px 8px;\n        max-height: 52px;\n    }\n}\n\n.CommentInput_unLimitedHeight__uvold {\n    max-height: unset;\n}\n`,
						'',
						{
							version: 3,
							sources: [
								'webpack://./src/components/CommentInput/CommentInput.module.css',
							],
							names: [],
							mappings:
								'AAGA;IACI,wDAA6B;IAC7B,sBAAsB;IACtB,YAAY;IACZ,iBAAiB;IACjB,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI;QACI,gBAAgB;QAChB,gBAAgB;IACpB;AACJ;;AAEA;IACI,iBAAiB;AACrB',
							sourcesContent: [
								"@value (lightui_surface_3) from 'ui-connect/styles/colors.module.css';\n@value (endXS) from 'ui-connect/styles/variables.module.css';\n\n.textArea {\n    background: lightui_surface_3;\n    box-sizing: border-box;\n    border: none;\n    padding: 6px 10px;\n    max-height: 64px;\n    overflow-y: auto;\n}\n\n@media (max-width: endXS) {\n    .textArea {\n        padding: 3px 8px;\n        max-height: 52px;\n    }\n}\n\n.unLimitedHeight {\n    max-height: unset;\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(c.locals = {
						lightui_surface_3: `${o.A.locals.lightui_surface_3}`,
						endXS: `${l.A.locals.endXS}`,
						textArea: 'CommentInput_textArea__ZXdm3',
						unLimitedHeight: 'CommentInput_unLimitedHeight__uvold',
					});
				const d = c;
			},
			47205: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s)()(a());
				r.push([
					e.id,
					'.ConnectionDialog_dialogBodyContainer__W4Ztl {\n    padding: 0; /* Override the padding 15px of DialogContent, because we need to show border right on the edge */\n}\n\n.ConnectionDialog_contentWrapper__MhZzf {\n    max-height: 600px;\n}\n',
					'',
					{
						version: 3,
						sources: [
							'webpack://./src/components/ConnectionDialog/ConnectionDialog.module.css',
						],
						names: [],
						mappings:
							'AAAA;IACI,UAAU,EAAE,iGAAiG;AACjH;;AAEA;IACI,iBAAiB;AACrB',
						sourcesContent: [
							'.dialogBodyContainer {\n    padding: 0; /* Override the padding 15px of DialogContent, because we need to show border right on the edge */\n}\n\n.contentWrapper {\n    max-height: 600px;\n}\n',
						],
						sourceRoot: '',
					},
				]),
					(r.locals = {
						dialogBodyContainer: 'ConnectionDialog_dialogBodyContainer__W4Ztl',
						contentWrapper: 'ConnectionDialog_contentWrapper__MhZzf',
					});
				const o = r;
			},
			460930: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = r()(a());
				l.i(o.A, '', !0),
					l.push([
						e.id,
						`.MaxConnectionsDialog_maxConnectonsModalContainer__VT0ny {\n    /* The max connection modal must be on the top of te page which is higher than the privacy modal */\n    z-index: 80;\n    position: relative;\n    font: 400 14px/22px 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    color: ${o.A.locals.color_120};\n    line-height: initial;\n}\n`,
						'',
						{
							version: 3,
							sources: [
								'webpack://./src/components/ConnectionDialog/MaxConnectionsDialog.module.css',
							],
							names: [],
							mappings:
								'AACA;IACI,kGAAkG;IAClG,WAAW;IACX,kBAAkB;IAClB,+EAA+E;IAC/E,mDAAgB;IAChB,oBAAoB;AACxB',
							sourcesContent: [
								"@value (color_120) from 'ui-connect/styles/colors.module.css';\n.maxConnectonsModalContainer {\n    /* The max connection modal must be on the top of te page which is higher than the privacy modal */\n    z-index: 80;\n    position: relative;\n    font: 400 14px/22px 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    color: color_120;\n    line-height: initial;\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(l.locals = {
						color_120: `${o.A.locals.color_120}`,
						maxConnectonsModalContainer:
							'MaxConnectionsDialog_maxConnectonsModalContainer__VT0ny',
					});
				const c = l;
			},
			785073: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = i(989547),
					c = r()(a());
				c.i(o.A, '', !0),
					c.i(l.A, '', !0),
					c.push([
						e.id,
						`.ConnectionList_itemContainer__poWfA {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: relative;\n    transition: opacity 1s, transform 1s ease 1s;\n}\n\n/* copy styles from ui-connect Card component */\n.ConnectionList_itemContainer__poWfA.ConnectionList_card__9iXQa {\n    background-color: white;\n    border: 1px solid ${o.A.locals.lightui_surface_4};\n    border-radius: 4px;\n    margin: 15px 0;\n}\n.ConnectionList_itemContainer__poWfA.ConnectionList_card__9iXQa.ConnectionList_dismissing__bHyDr {\n    border: none;\n}\n\n.ConnectionList_userWrapper__b53Qb {\n    display: flex;\n    width: 100%;\n    padding: 8px 15px;\n}\n.ConnectionList_userWrapper__b53Qb:hover {\n    padding: 7px 14px; /* decrease 1px on each direction for border 1px */\n    border: 1px solid ${o.A.locals.darkui_surface_2};\n    border-radius: 6px;\n}\n.ConnectionList_card__9iXQa .ConnectionList_userWrapper__b53Qb:hover {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n    border: none;\n    border-radius: 0;\n    padding: 8px 15px;\n}\n.ConnectionList_card__9iXQa.ConnectionList_dismissing__bHyDr {\n    box-shadow: none;\n}\n\n.ConnectionList_nameWrapper__YHgv- {\n    max-width: calc(100% - 130px); /* reserve 130px for connect button and dismiss button */\n    color: black; /* To override the gray color set for ".widget-footer a" selector which is applied to Activity Widget */\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n}\n\n.ConnectionList_fullWidth__I-vea {\n    max-width: 100%;\n}\n\n.ConnectionList_avatarWrapper__wZkKe {\n    flex-shrink: 0; /* prevent it from being squashed */\n    margin-right: 24px;\n    position: relative;\n    height: 48px; /* same height as avatar to make sure badge level icon staying at correct position */\n}\n.ConnectionList_avatarWrapper__wZkKe div[class^='badge-level'] {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n}\n.ConnectionList_avatar__COuHB {\n    aspect-ratio: 1;\n    width: 48px;\n    object-fit: cover;\n    border-radius: 50%;\n}\n\n.ConnectionList_userInfoContainer__rc\\+CB {\n    min-height: 48px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    line-height: normal; /* To override the 44px set for ".wighet-footer" selector which is applied to Activity Widget */\n}\n.ConnectionList_userName__fjt1I {\n    font-size: 14px;\n    font-weight: 700;\n    word-break: break-word;\n}\n\na.ConnectionList_userWrapper__b53Qb:hover .ConnectionList_userName__fjt1I {\n    text-decoration: underline;\n}\na.ConnectionList_userWrapper__b53Qb:hover {\n    text-decoration: none; /* This is for overriding a:hover underline effect, to prevent from adding underline to .textConnectionDescription\n                              when not hovering on it */\n}\n\n.ConnectionList_textConnectionDescription__pyXq2 {\n    font-size: 12px;\n    color: ${o.A.locals.darkui_accent_2};\n    width: fit-content;\n    max-width: calc(100% - 130px); /* reserve 130px for connect button and dismiss button */\n    text-decoration: none;\n}\n.ConnectionList_textConnectionDescription__pyXq2.ConnectionList_clickable__d6LzL:hover {\n    text-decoration: underline;\n    cursor: pointer;\n}\n\n.ConnectionList_animated__4ZsdO {\n    animation-duration: 0.5s;\n    animation-name: ConnectionList_slideUp__nRwh1;\n}\n\n@keyframes ConnectionList_slideUp__nRwh1 {\n    from {\n        transform: translateY(100%);\n    }\n    to {\n        transform: none;\n    }\n}\n\n.ConnectionList_dismissingOverlay__KoEt6 {\n    position: absolute;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: white;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-radius: 4px;\n    box-sizing: border-box;\n    padding: 8px 15px;\n    transition: opacity 1s;\n}\n.ConnectionList_dismissingOverlay__KoEt6:hover {\n    padding: 7px 14px;\n}\n\n/* For card style, we don't need to adjust padding on hover */\n.ConnectionList_itemContainer__poWfA.ConnectionList_card__9iXQa .ConnectionList_dismissingOverlay__KoEt6:hover {\n    padding: 8px 15px;\n}\n\n.ConnectionList_show__Qo3rf {\n    opacity: 1;\n}\n.ConnectionList_hide__fTj9D {\n    opacity: 0;\n    visibility: hidden;\n}\n\n.ConnectionList_actionWrapper__L1Wyt {\n    position: absolute;\n    right: 0;\n    margin-right: 15px; /* align left padding of userWrapper */\n    display: flex; /* For the action button to align center, mainly set for Activity Widget */\n}\n\n.ConnectionList_labelProWrapper__nfgaU {\n    margin-right: 8px;\n    width: unset; /* To prevent pro label becoming 2 lines */\n    top: 0; /* Override the top: -1px from .label-pro in _labels.scss */\n}\n.ConnectionList_labelProWrapper__nfgaU i[class^='icon-checkmark'] {\n    margin-right: 4px;\n}\n\n.ConnectionList_loaderContainer__exu-c {\n    width: 100%;\n    height: 60px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    padding: 8px 15px 16px;\n    box-sizing: border-box;\n}\n\n.ConnectionList_barWrapper__8DiQr {\n    width: calc(100% - 72px);\n    height: 48px;\n}\n\n.ConnectionList_spinner__CwQDd {\n    text-align: center;\n    height: 60px;\n}\n\n.ConnectionList_groupRoleLabel__n-8VM {\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 21px;\n    background-color: ${o.A.locals.lightui_accent_1};\n    border-radius: 4px;\n    padding: 0px 8px;\n    margin-left: 4px;\n}\n\n@media (max-width: ${l.A.locals.endXS}) {\n    .ConnectionList_userInfoContainer__rc\\+CB {\n        gap: 8px;\n    }\n\n    .ConnectionList_userName__fjt1I,\n    .ConnectionList_textConnectionDescription__pyXq2 {\n        display: -webkit-box;\n        -webkit-line-clamp: 2;\n        -webkit-box-orient: vertical; /* Need to add comment below to prevent this attribute from being removed */\n        /* autoprefixer: off */\n        word-break: break-word; /* For long name with no space to break into multiple lines */\n        overflow: hidden;\n        max-width: 100%;\n    }\n\n    .ConnectionList_actionWrapper__L1Wyt {\n        position: relative;\n        display: flex; /* For the action button to align center, mainly set for Activity Widget */\n        /* margin-top: 8px; */\n        margin-right: 0;\n    }\n}\n`,
						'',
						{
							version: 3,
							sources: [
								'webpack://./src/components/ConnectionList/ConnectionList.module.css',
							],
							names: [],
							mappings:
								'AAGA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,kBAAkB;IAClB,4CAA4C;AAChD;;AAEA,+CAA+C;AAC/C;IACI,uBAAuB;IACvB,8DAAmC;IACnC,kBAAkB;IAClB,cAAc;AAClB;AACA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,WAAW;IACX,iBAAiB;AACrB;AACA;IACI,iBAAiB,EAAE,kDAAkD;IACrE,8DAAkC;IAClC,kBAAkB;AACtB;AACA;IACI,yCAAyC;IACzC,YAAY;IACZ,gBAAgB;IAChB,iBAAiB;AACrB;AACA;IACI,gBAAgB;AACpB;;AAEA;IACI,6BAA6B,EAAE,wDAAwD;IACvF,YAAY,EAAE,uGAAuG;IACrH,aAAa;IACb,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,cAAc,EAAE,mCAAmC;IACnD,kBAAkB;IAClB,kBAAkB;IAClB,YAAY,EAAE,oFAAoF;AACtG;AACA;IACI,kBAAkB;IAClB,SAAS;IACT,QAAQ;AACZ;AACA;IACI,eAAe;IACf,WAAW;IACX,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB,EAAE,+FAA+F;AACxH;AACA;IACI,eAAe;IACf,gBAAgB;IAChB,sBAAsB;AAC1B;;AAEA;IACI,0BAA0B;AAC9B;AACA;IACI,qBAAqB,EAAE;uDAC4B;AACvD;;AAEA;IACI,eAAe;IACf,mDAAsB;IACtB,kBAAkB;IAClB,6BAA6B,EAAE,wDAAwD;IACvF,qBAAqB;AACzB;AACA;IACI,0BAA0B;IAC1B,eAAe;AACnB;;AAEA;IACI,wBAAwB;IACxB,6CAAuB;AAC3B;;AAEA;IACI;QACI,2BAA2B;IAC/B;IACA;QACI,eAAe;IACnB;AACJ;;AAEA;IACI,kBAAkB;IAClB,OAAO;IACP,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,kBAAkB;IAClB,sBAAsB;IACtB,iBAAiB;IACjB,sBAAsB;AAC1B;AACA;IACI,iBAAiB;AACrB;;AAEA,6DAA6D;AAC7D;IACI,iBAAiB;AACrB;;AAEA;IACI,UAAU;AACd;AACA;IACI,UAAU;IACV,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,kBAAkB,EAAE,sCAAsC;IAC1D,aAAa,EAAE,0EAA0E;AAC7F;;AAEA;IACI,iBAAiB;IACjB,YAAY,EAAE,0CAA0C;IACxD,MAAM,EAAE,2DAA2D;AACvE;AACA;IACI,iBAAiB;AACrB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,2BAA2B;IAC3B,uBAAuB;IACvB,sBAAsB;IACtB,sBAAsB;AAC1B;;AAEA;IACI,wBAAwB;IACxB,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,8DAAkC;IAClC,kBAAkB;IAClB,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI;QACI,QAAQ;IACZ;;IAEA;;QAEI,oBAAoB;QACpB,qBAAqB;QACrB,4BAA4B,EAAE,2EAA2E;QACzG,sBAAsB;QACtB,sBAAsB,EAAE,6DAA6D;QACrF,gBAAgB;QAChB,eAAe;IACnB;;IAEA;QACI,kBAAkB;QAClB,aAAa,EAAE,0EAA0E;QACzF,qBAAqB;QACrB,eAAe;IACnB;AACJ',
							sourcesContent: [
								"@value (darkui_accent_2, darkui_surface_2, lightui_surface_4, lightui_accent_1) from 'ui-connect/styles/colors.module.css';\n@value (endXS) from 'ui-connect/styles/variables.module.css';\n\n.itemContainer {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: relative;\n    transition: opacity 1s, transform 1s ease 1s;\n}\n\n/* copy styles from ui-connect Card component */\n.itemContainer.card {\n    background-color: white;\n    border: 1px solid lightui_surface_4;\n    border-radius: 4px;\n    margin: 15px 0;\n}\n.itemContainer.card.dismissing {\n    border: none;\n}\n\n.userWrapper {\n    display: flex;\n    width: 100%;\n    padding: 8px 15px;\n}\n.userWrapper:hover {\n    padding: 7px 14px; /* decrease 1px on each direction for border 1px */\n    border: 1px solid darkui_surface_2;\n    border-radius: 6px;\n}\n.card .userWrapper:hover {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n    border: none;\n    border-radius: 0;\n    padding: 8px 15px;\n}\n.card.dismissing {\n    box-shadow: none;\n}\n\n.nameWrapper {\n    max-width: calc(100% - 130px); /* reserve 130px for connect button and dismiss button */\n    color: black; /* To override the gray color set for \".widget-footer a\" selector which is applied to Activity Widget */\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n}\n\n.fullWidth {\n    max-width: 100%;\n}\n\n.avatarWrapper {\n    flex-shrink: 0; /* prevent it from being squashed */\n    margin-right: 24px;\n    position: relative;\n    height: 48px; /* same height as avatar to make sure badge level icon staying at correct position */\n}\n.avatarWrapper div[class^='badge-level'] {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n}\n.avatar {\n    aspect-ratio: 1;\n    width: 48px;\n    object-fit: cover;\n    border-radius: 50%;\n}\n\n.userInfoContainer {\n    min-height: 48px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    line-height: normal; /* To override the 44px set for \".wighet-footer\" selector which is applied to Activity Widget */\n}\n.userName {\n    font-size: 14px;\n    font-weight: 700;\n    word-break: break-word;\n}\n\na.userWrapper:hover .userName {\n    text-decoration: underline;\n}\na.userWrapper:hover {\n    text-decoration: none; /* This is for overriding a:hover underline effect, to prevent from adding underline to .textConnectionDescription\n                              when not hovering on it */\n}\n\n.textConnectionDescription {\n    font-size: 12px;\n    color: darkui_accent_2;\n    width: fit-content;\n    max-width: calc(100% - 130px); /* reserve 130px for connect button and dismiss button */\n    text-decoration: none;\n}\n.textConnectionDescription.clickable:hover {\n    text-decoration: underline;\n    cursor: pointer;\n}\n\n.animated {\n    animation-duration: 0.5s;\n    animation-name: slideUp;\n}\n\n@keyframes slideUp {\n    from {\n        transform: translateY(100%);\n    }\n    to {\n        transform: none;\n    }\n}\n\n.dismissingOverlay {\n    position: absolute;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: white;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-radius: 4px;\n    box-sizing: border-box;\n    padding: 8px 15px;\n    transition: opacity 1s;\n}\n.dismissingOverlay:hover {\n    padding: 7px 14px;\n}\n\n/* For card style, we don't need to adjust padding on hover */\n.itemContainer.card .dismissingOverlay:hover {\n    padding: 8px 15px;\n}\n\n.show {\n    opacity: 1;\n}\n.hide {\n    opacity: 0;\n    visibility: hidden;\n}\n\n.actionWrapper {\n    position: absolute;\n    right: 0;\n    margin-right: 15px; /* align left padding of userWrapper */\n    display: flex; /* For the action button to align center, mainly set for Activity Widget */\n}\n\n.labelProWrapper {\n    margin-right: 8px;\n    width: unset; /* To prevent pro label becoming 2 lines */\n    top: 0; /* Override the top: -1px from .label-pro in _labels.scss */\n}\n.labelProWrapper i[class^='icon-checkmark'] {\n    margin-right: 4px;\n}\n\n.loaderContainer {\n    width: 100%;\n    height: 60px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    padding: 8px 15px 16px;\n    box-sizing: border-box;\n}\n\n.barWrapper {\n    width: calc(100% - 72px);\n    height: 48px;\n}\n\n.spinner {\n    text-align: center;\n    height: 60px;\n}\n\n.groupRoleLabel {\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 21px;\n    background-color: lightui_accent_1;\n    border-radius: 4px;\n    padding: 0px 8px;\n    margin-left: 4px;\n}\n\n@media (max-width: endXS) {\n    .userInfoContainer {\n        gap: 8px;\n    }\n\n    .userName,\n    .textConnectionDescription {\n        display: -webkit-box;\n        -webkit-line-clamp: 2;\n        -webkit-box-orient: vertical; /* Need to add comment below to prevent this attribute from being removed */\n        /* autoprefixer: off */\n        word-break: break-word; /* For long name with no space to break into multiple lines */\n        overflow: hidden;\n        max-width: 100%;\n    }\n\n    .actionWrapper {\n        position: relative;\n        display: flex; /* For the action button to align center, mainly set for Activity Widget */\n        /* margin-top: 8px; */\n        margin-right: 0;\n    }\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(c.locals = {
						darkui_accent_2: `${o.A.locals.darkui_accent_2}`,
						darkui_surface_2: `${o.A.locals.darkui_surface_2}`,
						lightui_surface_4: `${o.A.locals.lightui_surface_4}`,
						lightui_accent_1: `${o.A.locals.lightui_accent_1}`,
						endXS: `${l.A.locals.endXS}`,
						itemContainer: 'ConnectionList_itemContainer__poWfA',
						card: 'ConnectionList_card__9iXQa',
						dismissing: 'ConnectionList_dismissing__bHyDr',
						userWrapper: 'ConnectionList_userWrapper__b53Qb',
						nameWrapper: 'ConnectionList_nameWrapper__YHgv-',
						fullWidth: 'ConnectionList_fullWidth__I-vea',
						avatarWrapper: 'ConnectionList_avatarWrapper__wZkKe',
						avatar: 'ConnectionList_avatar__COuHB',
						userInfoContainer: 'ConnectionList_userInfoContainer__rc+CB',
						userName: 'ConnectionList_userName__fjt1I',
						textConnectionDescription:
							'ConnectionList_textConnectionDescription__pyXq2',
						clickable: 'ConnectionList_clickable__d6LzL',
						animated: 'ConnectionList_animated__4ZsdO',
						slideUp: 'ConnectionList_slideUp__nRwh1',
						dismissingOverlay: 'ConnectionList_dismissingOverlay__KoEt6',
						show: 'ConnectionList_show__Qo3rf',
						hide: 'ConnectionList_hide__fTj9D',
						actionWrapper: 'ConnectionList_actionWrapper__L1Wyt',
						labelProWrapper: 'ConnectionList_labelProWrapper__nfgaU',
						loaderContainer: 'ConnectionList_loaderContainer__exu-c',
						barWrapper: 'ConnectionList_barWrapper__8DiQr',
						spinner: 'ConnectionList_spinner__CwQDd',
						groupRoleLabel: 'ConnectionList_groupRoleLabel__n-8VM',
					});
				const d = c;
			},
			995643: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s)()(a());
				r.push([
					e.id,
					'.DataPrivacyModal_buttonContainer__BQDIO {\n    display: flex;\n    justify-content: flex-end;\n}\n\n.DataPrivacyModal_buttonMargin__PuSWW {\n    margin-left: 5px;\n}\n\n.DataPrivacyModal_flexWrapper__31QqZ {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n}\n',
					'',
					{
						version: 3,
						sources: [
							'webpack://./src/components/DataPrivacyModal/DataPrivacyModal.module.css',
						],
						names: [],
						mappings:
							'AAAA;IACI,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,qBAAqB;AACzB',
						sourcesContent: [
							'.buttonContainer {\n    display: flex;\n    justify-content: flex-end;\n}\n\n.buttonMargin {\n    margin-left: 5px;\n}\n\n.flexWrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n}\n',
						],
						sourceRoot: '',
					},
				]),
					(r.locals = {
						buttonContainer: 'DataPrivacyModal_buttonContainer__BQDIO',
						buttonMargin: 'DataPrivacyModal_buttonMargin__PuSWW',
						flexWrapper: 'DataPrivacyModal_flexWrapper__31QqZ',
					});
				const o = r;
			},
			190801: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = r()(a());
				l.i(o.A, '', !0),
					l.push([
						e.id,
						`.EllipsisMenu_iconWrapper__EmHlJ {\n    width: 18px;\n    height: 18px;\n    border-radius: 4px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.EllipsisMenu_iconWrapper__EmHlJ:hover {\n    background-color: ${o.A.locals.lightui_surface_4};\n    transition: background-color 200ms;\n}\n\n.EllipsisMenu_largerFont__nqGnH {\n    font-size: larger;\n}\n\n.EllipsisMenu_itemLabel__HvhmI {\n    white-space: nowrap;\n}\n`,
						'',
						{
							version: 3,
							sources: [
								'webpack://./src/components/EllipsisMenu/EllipsisMenu.module.css',
							],
							names: [],
							mappings:
								'AAEA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,8DAAmC;IACnC,kCAAkC;AACtC;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;AACvB',
							sourcesContent: [
								"@value (lightui_surface_4 ) from 'ui-connect/styles/colors.module.css';\n\n.iconWrapper {\n    width: 18px;\n    height: 18px;\n    border-radius: 4px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.iconWrapper:hover {\n    background-color: lightui_surface_4;\n    transition: background-color 200ms;\n}\n\n.largerFont {\n    font-size: larger;\n}\n\n.itemLabel {\n    white-space: nowrap;\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(l.locals = {
						lightui_surface_4: `${o.A.locals.lightui_surface_4}`,
						iconWrapper: 'EllipsisMenu_iconWrapper__EmHlJ',
						largerFont: 'EllipsisMenu_largerFont__nqGnH',
						itemLabel: 'EllipsisMenu_itemLabel__HvhmI',
					});
				const c = l;
			},
			835371: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s)()(a());
				r.push([
					e.id,
					'.Like_likeContainer__iktO5 {\n    display: flex;\n    align-items: flex-end;\n}\n',
					'',
					{
						version: 3,
						sources: ['webpack://./src/components/Like/Like.module.css'],
						names: [],
						mappings: 'AAAA;IACI,aAAa;IACb,qBAAqB;AACzB',
						sourcesContent: [
							'.likeContainer {\n    display: flex;\n    align-items: flex-end;\n}\n',
						],
						sourceRoot: '',
					},
				]),
					(r.locals = { likeContainer: 'Like_likeContainer__iktO5' });
				const o = r;
			},
			787606: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s)()(a());
				r.push([
					e.id,
					'.LikeUtils_contentWrapper__PefnW {\n    max-width: 25vw;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n',
					'',
					{
						version: 3,
						sources: ['webpack://./src/components/Like/LikeUtils.module.css'],
						names: [],
						mappings:
							'AAAA;IACI,eAAe;IACf,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;AAC3B',
						sourcesContent: [
							'.contentWrapper {\n    max-width: 25vw;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n',
						],
						sourceRoot: '',
					},
				]),
					(r.locals = { contentWrapper: 'LikeUtils_contentWrapper__PefnW' });
				const o = r;
			},
			336741: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => d });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = i(989547),
					c = r()(a());
				c.i(o.A, '', !0),
					c.i(l.A, '', !0),
					c.push([
						e.id,
						`/* UX Doc reference: https://www.figma.com/file/nCZHeqxQWYPxFwNyx3uyYg/Group-Overhaul---2022?node-id=13094%3A229162 */\n/* The below magic numbers are from UX Document, which indicate the ratio of 'element width / wrapping box width' */\n\n.SkeletonLoadingCards_loaderContainer__X\\+K5C {\n    box-sizing: border-box;\n    padding: 16px 24px 30px;\n}\n\n.SkeletonLoadingCards_flexWrapper__AtwbF {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n}\n\n.SkeletonLoadingCards_avatar__wwG6U {\n    width: 42px;\n    height: 42px;\n}\n\n.SkeletonLoadingCards_barWrapper__GxB6U {\n    width: calc(100% - 66px); /* 66px for 'avatar 42px' + 'padding 24 px' */\n    height: 42px;\n}\n\n.SkeletonLoadingCards_bodyBar__YtPYp {\n    background: ${o.A.locals.color_142};\n    width: 100%;\n    height: 16px;\n    margin-top: 16px;\n}\n\n.SkeletonLoadingCards_bodyDataFieldWrapper__6BN97 {\n    display: flex;\n    margin-top: 16px;\n}\n\n.SkeletonLoadingCards_bodyDataFieldWrapper__6BN97 > div:not(:last-of-type) {\n    margin-right: 24px;\n}\n\n.SkeletonLoadingCards_bodyDataField__DqraO {\n    background: ${o.A.locals.color_142};\n    width: calc(100% * 110 / 656);\n    height: 36px;\n}\n\n.SkeletonLoadingCards_bodyMain__xXyqm {\n    background: ${o.A.locals.color_142};\n    height: 240px;\n    margin: 16px -24px 0;\n}\n\n.SkeletonLoadingCards_skeletonAvatar__llH4v {\n    background: ${o.A.locals.color_142};\n    border-radius: 50%;\n    margin-right: 24px;\n}\n\n.SkeletonLoadingCards_skeletonBarWrapper__CyWrf {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n}\n\n.SkeletonLoadingCards_skeletonBarWrapper__CyWrf * {\n    background: ${o.A.locals.color_142};\n    height: 10px;\n}\n\n.SkeletonLoadingCards_skeletonBarOne__5wPqA {\n    width: calc(100% * 294 / 542);\n}\n\n.SkeletonLoadingCards_skeletonBarTwo__Lvh6y {\n    width: calc(100% * 249 / 542);\n}\n\n@media (max-width: ${l.A.locals.endXS}) {\n    .SkeletonLoadingCards_avatar__wwG6U {\n        width: 36px;\n        height: 36px;\n    }\n\n    .SkeletonLoadingCards_barWrapper__GxB6U {\n        height: 36px;\n    }\n\n    .SkeletonLoadingCards_loaderContainer__X\\+K5C {\n        margin-bottom: 14px;\n        padding: 14px 16px;\n    }\n\n    .SkeletonLoadingCards_bodyMain__xXyqm {\n        margin: 16px -16px 0;\n    }\n\n    .SkeletonLoadingCards_skeletonAvatar__llH4v {\n        margin-right: 10px;\n    }\n\n    .SkeletonLoadingCards_skeletonBarOne__5wPqA {\n        width: calc(100% * 160 / 242);\n    }\n\n    .SkeletonLoadingCards_skeletonBarTwo__Lvh6y {\n        width: calc(100% * 134 / 242);\n    }\n}\n`,
						'',
						{
							version: 3,
							sources: [
								'webpack://./src/components/SkeletonLoadingCards/SkeletonLoadingCards.module.css',
							],
							names: [],
							mappings:
								'AAGA,qHAAqH;AACrH,mHAAmH;;AAEnH;IACI,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,uBAAuB;AAC3B;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,wBAAwB,EAAE,6CAA6C;IACvE,YAAY;AAChB;;AAEA;IACI,wDAAqB;IACrB,WAAW;IACX,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,wDAAqB;IACrB,6BAA6B;IAC7B,YAAY;AAChB;;AAEA;IACI,wDAAqB;IACrB,aAAa;IACb,oBAAoB;AACxB;;AAEA;IACI,wDAAqB;IACrB,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,6BAA6B;AACjC;;AAEA;IACI,wDAAqB;IACrB,YAAY;AAChB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI;QACI,WAAW;QACX,YAAY;IAChB;;IAEA;QACI,YAAY;IAChB;;IAEA;QACI,mBAAmB;QACnB,kBAAkB;IACtB;;IAEA;QACI,oBAAoB;IACxB;;IAEA;QACI,kBAAkB;IACtB;;IAEA;QACI,6BAA6B;IACjC;;IAEA;QACI,6BAA6B;IACjC;AACJ',
							sourcesContent: [
								"@value (color_142) from 'ui-connect/styles/colors.module.css';\n@value (endXS) from 'ui-connect/styles/variables.module.css';\n\n/* UX Doc reference: https://www.figma.com/file/nCZHeqxQWYPxFwNyx3uyYg/Group-Overhaul---2022?node-id=13094%3A229162 */\n/* The below magic numbers are from UX Document, which indicate the ratio of 'element width / wrapping box width' */\n\n.loaderContainer {\n    box-sizing: border-box;\n    padding: 16px 24px 30px;\n}\n\n.flexWrapper {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n}\n\n.avatar {\n    width: 42px;\n    height: 42px;\n}\n\n.barWrapper {\n    width: calc(100% - 66px); /* 66px for 'avatar 42px' + 'padding 24 px' */\n    height: 42px;\n}\n\n.bodyBar {\n    background: color_142;\n    width: 100%;\n    height: 16px;\n    margin-top: 16px;\n}\n\n.bodyDataFieldWrapper {\n    display: flex;\n    margin-top: 16px;\n}\n\n.bodyDataFieldWrapper > div:not(:last-of-type) {\n    margin-right: 24px;\n}\n\n.bodyDataField {\n    background: color_142;\n    width: calc(100% * 110 / 656);\n    height: 36px;\n}\n\n.bodyMain {\n    background: color_142;\n    height: 240px;\n    margin: 16px -24px 0;\n}\n\n.skeletonAvatar {\n    background: color_142;\n    border-radius: 50%;\n    margin-right: 24px;\n}\n\n.skeletonBarWrapper {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n}\n\n.skeletonBarWrapper * {\n    background: color_142;\n    height: 10px;\n}\n\n.skeletonBarOne {\n    width: calc(100% * 294 / 542);\n}\n\n.skeletonBarTwo {\n    width: calc(100% * 249 / 542);\n}\n\n@media (max-width: endXS) {\n    .avatar {\n        width: 36px;\n        height: 36px;\n    }\n\n    .barWrapper {\n        height: 36px;\n    }\n\n    .loaderContainer {\n        margin-bottom: 14px;\n        padding: 14px 16px;\n    }\n\n    .bodyMain {\n        margin: 16px -16px 0;\n    }\n\n    .skeletonAvatar {\n        margin-right: 10px;\n    }\n\n    .skeletonBarOne {\n        width: calc(100% * 160 / 242);\n    }\n\n    .skeletonBarTwo {\n        width: calc(100% * 134 / 242);\n    }\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(c.locals = {
						color_142: `${o.A.locals.color_142}`,
						endXS: `${l.A.locals.endXS}`,
						loaderContainer: 'SkeletonLoadingCards_loaderContainer__X+K5C',
						flexWrapper: 'SkeletonLoadingCards_flexWrapper__AtwbF',
						avatar: 'SkeletonLoadingCards_avatar__wwG6U',
						barWrapper: 'SkeletonLoadingCards_barWrapper__GxB6U',
						bodyBar: 'SkeletonLoadingCards_bodyBar__YtPYp',
						bodyDataFieldWrapper:
							'SkeletonLoadingCards_bodyDataFieldWrapper__6BN97',
						bodyDataField: 'SkeletonLoadingCards_bodyDataField__DqraO',
						bodyMain: 'SkeletonLoadingCards_bodyMain__xXyqm',
						skeletonAvatar: 'SkeletonLoadingCards_skeletonAvatar__llH4v',
						skeletonBarWrapper:
							'SkeletonLoadingCards_skeletonBarWrapper__CyWrf',
						skeletonBarOne: 'SkeletonLoadingCards_skeletonBarOne__5wPqA',
						skeletonBarTwo: 'SkeletonLoadingCards_skeletonBarTwo__Lvh6y',
					});
				const d = c;
			},
			126645: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s)()(a());
				r.push([
					e.id,
					".BadgeSummary_badgeTagsWrapper__eE0vz {\n    margin: 16px 0;\n}\n.BadgeSummary_badgeTagsWrapper__eE0vz[data-liststyle='true'] {\n    margin: 8px 0;\n}\n",
					'',
					{
						version: 3,
						sources: [
							'webpack://./src/components/badges/components/BadgeSummary.module.css',
						],
						names: [],
						mappings: 'AAAA;IACI,cAAc;AAClB;AACA;IACI,aAAa;AACjB',
						sourcesContent: [
							".badgeTagsWrapper {\n    margin: 16px 0;\n}\n.badgeTagsWrapper[data-liststyle='true'] {\n    margin: 8px 0;\n}\n",
						],
						sourceRoot: '',
					},
				]),
					(r.locals = {
						badgeTagsWrapper: 'BadgeSummary_badgeTagsWrapper__eE0vz',
					});
				const o = r;
			},
			780660: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = r()(a());
				l.i(o.A, '', !0),
					l.push([
						e.id,
						`.BadgeTags_badgeTags__1Zg9e .BadgeTags_badgeTag__oNRwk:not(:first-child) {\n    margin-left: 4px;\n}\n\n.BadgeTags_badgeTag__oNRwk {\n    color: ${o.A.locals.darkui_surface_1};\n    background-color: ${o.A.locals.lightui_accent_1};\n    padding: 4px 8px;\n    border-radius: 4px;\n    text-transform: uppercase;\n    font-size: 11px;\n}\n`,
						'',
						{
							version: 3,
							sources: [
								'webpack://./src/components/badges/components/BadgeTags.module.css',
							],
							names: [],
							mappings:
								'AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,mDAAuB;IACvB,8DAAkC;IAClC,gBAAgB;IAChB,kBAAkB;IAClB,yBAAyB;IACzB,eAAe;AACnB',
							sourcesContent: [
								"@value (darkui_surface_1, lightui_accent_1) from 'ui-connect/styles/colors.module.css';\n\n.badgeTags .badgeTag:not(:first-child) {\n    margin-left: 4px;\n}\n\n.badgeTag {\n    color: darkui_surface_1;\n    background-color: lightui_accent_1;\n    padding: 4px 8px;\n    border-radius: 4px;\n    text-transform: uppercase;\n    font-size: 11px;\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(l.locals = {
						darkui_surface_1: `${o.A.locals.darkui_surface_1}`,
						lightui_accent_1: `${o.A.locals.lightui_accent_1}`,
						badgeTags: 'BadgeTags_badgeTags__1Zg9e',
						badgeTag: 'BadgeTags_badgeTag__oNRwk',
					});
				const c = l;
			},
			874523: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s)()(a());
				r.push([
					e.id,
					'.BadgeNotification_fadeIn__YP8JS {\n    visibility: visible;\n    opacity: 1;\n    transition: opacity 0.4s linear;\n}\n\n.BadgeNotification_fadeOut__C3yYr {\n    visibility: hidden;\n    opacity: 0;\n    transition: opacity 0.4s linear;\n}\n',
					'',
					{
						version: 3,
						sources: [
							'webpack://./src/standaloneComponents/BadgeNotification.module.css',
						],
						names: [],
						mappings:
							'AAAA;IACI,mBAAmB;IACnB,UAAU;IACV,+BAA+B;AACnC;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,+BAA+B;AACnC',
						sourcesContent: [
							'.fadeIn {\n    visibility: visible;\n    opacity: 1;\n    transition: opacity 0.4s linear;\n}\n\n.fadeOut {\n    visibility: hidden;\n    opacity: 0;\n    transition: opacity 0.4s linear;\n}\n',
						],
						sourceRoot: '',
					},
				]),
					(r.locals = {
						fadeIn: 'BadgeNotification_fadeIn__YP8JS',
						fadeOut: 'BadgeNotification_fadeOut__C3yYr',
					});
				const o = r;
			},
			110056: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = r()(a());
				l.i(o.A, '', !0),
					l.push([
						e.id,
						`.Consent_consentBar__-KbtP {\n    position: fixed;\n    z-index: 110;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n    background-color: ${o.A.locals.darkui_surface_4};\n    color: ${o.A.locals.textDark};\n    margin: 0 auto;\n    font-size: 14px;\n    font-family: "'Open Sans','HelveticaNeue','HelveticaNeueu',Arial,sans-serif";\n}\n`,
						'',
						{
							version: 3,
							sources: [
								'webpack://./src/standaloneComponents/Consent/Consent.module.css',
							],
							names: [],
							mappings:
								'AAEA;IACI,eAAe;IACf,YAAY;IACZ,WAAW;IACX,OAAO;IACP,SAAS;IACT,8DAAkC;IAClC,mDAAe;IACf,cAAc;IACd,eAAe;IACf,4EAA4E;AAChF',
							sourcesContent: [
								"@value (textDark, darkui_surface_4) from 'ui-connect/styles/colors.module.css';\n\n.consentBar {\n    position: fixed;\n    z-index: 110;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n    background-color: darkui_surface_4;\n    color: textDark;\n    margin: 0 auto;\n    font-size: 14px;\n    font-family: \"'Open Sans','HelveticaNeue','HelveticaNeueu',Arial,sans-serif\";\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(l.locals = {
						textDark: `${o.A.locals.textDark}`,
						darkui_surface_4: `${o.A.locals.darkui_surface_4}`,
						consentBar: 'Consent_consentBar__-KbtP',
					});
				const c = l;
			},
			934082: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = r()(a());
				l.i(o.A, '', !0),
					l.push([
						e.id,
						`.NewSendToDevice_syncTitle__N2PP7 {\n    text-transform: uppercase;\n    font-size: 12px;\n    letter-spacing: 2px;\n    border-bottom: 1px solid ${o.A.locals.color_103};\n}\n\n.NewSendToDevice_syncInfo__BDHd0 {\n    font-size: 13px;\n}\n\n.NewSendToDevice_device__Lz6Ly {\n    position: relative;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    margin-top: 20px;\n}\n\n.NewSendToDevice_deviceLabel__sRIxa {\n    margin-top: 8px;\n    display: flex;\n    align-items: center;\n}\n\n.NewSendToDevice_deviceDetails__ySnyi {\n    -webkit-flex-grow: 1;\n    -ms-flex-positive: 1;\n    flex-grow: 1;\n    align-self: flex-start;\n}\n\n.NewSendToDevice_deviceName__N2BSn {\n    font-size: 18px;\n    font-weight: 100;\n    margin-bottom: 2px;\n}\n\n.NewSendToDevice_deviceImage__ZiG5U {\n    margin-right: 10px;\n    width: 70px;\n}\n\n.NewSendToDevice_deviceListTitle__RPMu- {\n    margin-top: 10px;\n    color: gray;\n    font-size: small;\n}\n\n.NewSendToDevice_deviceHelpIcon__eUDm7 {\n    margin-left: 10px;\n}\n\n.NewSendToDevice_disclaimer__W1AsS {\n    font-size: 12px;\n}\n\n.NewSendToDevice_deviceNote__fLZbl {\n    margin-top: 10px;\n}\n\n.NewSendToDevice_cancelBtn__lZUVs {\n    margin-right: 10px;\n    margin-bottom: 2px;\n}\n\n.NewSendToDevice_notificationLink__LJAxI {\n    white-space: nowrap;\n}\n\n.NewSendToDevice_notificationNote__nGnFq {\n    text-align: left;\n}\n\n.NewSendToDevice_css_table__\\+4OrP {\n    display: table;\n}\n.NewSendToDevice_css_tr__CMXvX {\n    display: table-row;\n}\n.NewSendToDevice_css_td_notificationNote__aYVhW {\n    display: table-cell;\n    text-align: left;\n    float: left;\n}\n.NewSendToDevice_css_td_notificationLink__ljKkf {\n    display: table-cell;\n    white-space: nowrap;\n    vertical-align: middle;\n}\n.NewSendToDevice_notificationLearnMore__qA7to {\n    margin-left: 10px;\n}\n.NewSendToDevice_notificationLearnMore__qA7to a {\n    font-weight: 700;\n    color: ${o.A.locals.color_106} !important;\n}\n\n.NewSendToDevice_bottomM__44kvY {\n    margin-bottom: 33px;\n}\n.NewSendToDevice_bottomNone__KRlur {\n    margin-bottom: 0;\n}\n\n.NewSendToDevice_launchText__OrLsO {\n    margin-left: 5px;\n    font-size: small;\n}\n\n.NewSendToDevice_launchLable__bRVDx {\n    margin-top: 5px;\n}\n\n.NewSendToDevice_dialogBody__K8GxW {\n    max-height: calc(90vh - 180px);\n}\n`,
						'',
						{
							version: 3,
							sources: [
								'webpack://./src/standaloneComponents/SendToDevice/NewSendToDevice.module.css',
							],
							names: [],
							mappings:
								'AAEA;IACI,yBAAyB;IACzB,eAAe;IACf,mBAAmB;IACnB,qEAAkC;AACtC;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;IACrB,oBAAoB;IACpB,aAAa;IACb,2BAA2B;IAC3B,sBAAsB;IACtB,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,oBAAoB;IACpB,oBAAoB;IACpB,YAAY;IACZ,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,gBAAgB;IAChB,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;AACf;AACA;IACI,mBAAmB;IACnB,mBAAmB;IACnB,sBAAsB;AAC1B;AACA;IACI,iBAAiB;AACrB;AACA;IACI,gBAAgB;IAChB,8DAA2B;AAC/B;;AAEA;IACI,mBAAmB;AACvB;AACA;IACI,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,8BAA8B;AAClC',
							sourcesContent: [
								"@value (color_103, color_106) from 'ui-connect/styles/colors.module.css';\n\n.syncTitle {\n    text-transform: uppercase;\n    font-size: 12px;\n    letter-spacing: 2px;\n    border-bottom: 1px solid color_103;\n}\n\n.syncInfo {\n    font-size: 13px;\n}\n\n.device {\n    position: relative;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    margin-top: 20px;\n}\n\n.deviceLabel {\n    margin-top: 8px;\n    display: flex;\n    align-items: center;\n}\n\n.deviceDetails {\n    -webkit-flex-grow: 1;\n    -ms-flex-positive: 1;\n    flex-grow: 1;\n    align-self: flex-start;\n}\n\n.deviceName {\n    font-size: 18px;\n    font-weight: 100;\n    margin-bottom: 2px;\n}\n\n.deviceImage {\n    margin-right: 10px;\n    width: 70px;\n}\n\n.deviceListTitle {\n    margin-top: 10px;\n    color: gray;\n    font-size: small;\n}\n\n.deviceHelpIcon {\n    margin-left: 10px;\n}\n\n.disclaimer {\n    font-size: 12px;\n}\n\n.deviceNote {\n    margin-top: 10px;\n}\n\n.cancelBtn {\n    margin-right: 10px;\n    margin-bottom: 2px;\n}\n\n.notificationLink {\n    white-space: nowrap;\n}\n\n.notificationNote {\n    text-align: left;\n}\n\n.css_table {\n    display: table;\n}\n.css_tr {\n    display: table-row;\n}\n.css_td_notificationNote {\n    display: table-cell;\n    text-align: left;\n    float: left;\n}\n.css_td_notificationLink {\n    display: table-cell;\n    white-space: nowrap;\n    vertical-align: middle;\n}\n.notificationLearnMore {\n    margin-left: 10px;\n}\n.notificationLearnMore a {\n    font-weight: 700;\n    color: color_106 !important;\n}\n\n.bottomM {\n    margin-bottom: 33px;\n}\n.bottomNone {\n    margin-bottom: 0;\n}\n\n.launchText {\n    margin-left: 5px;\n    font-size: small;\n}\n\n.launchLable {\n    margin-top: 5px;\n}\n\n.dialogBody {\n    max-height: calc(90vh - 180px);\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(l.locals = {
						color_103: `${o.A.locals.color_103}`,
						color_106: `${o.A.locals.color_106}`,
						syncTitle: 'NewSendToDevice_syncTitle__N2PP7',
						syncInfo: 'NewSendToDevice_syncInfo__BDHd0',
						device: 'NewSendToDevice_device__Lz6Ly',
						deviceLabel: 'NewSendToDevice_deviceLabel__sRIxa',
						deviceDetails: 'NewSendToDevice_deviceDetails__ySnyi',
						deviceName: 'NewSendToDevice_deviceName__N2BSn',
						deviceImage: 'NewSendToDevice_deviceImage__ZiG5U',
						deviceListTitle: 'NewSendToDevice_deviceListTitle__RPMu-',
						deviceHelpIcon: 'NewSendToDevice_deviceHelpIcon__eUDm7',
						disclaimer: 'NewSendToDevice_disclaimer__W1AsS',
						deviceNote: 'NewSendToDevice_deviceNote__fLZbl',
						cancelBtn: 'NewSendToDevice_cancelBtn__lZUVs',
						notificationLink: 'NewSendToDevice_notificationLink__LJAxI',
						notificationNote: 'NewSendToDevice_notificationNote__nGnFq',
						css_table: 'NewSendToDevice_css_table__+4OrP',
						css_tr: 'NewSendToDevice_css_tr__CMXvX',
						css_td_notificationNote:
							'NewSendToDevice_css_td_notificationNote__aYVhW',
						css_td_notificationLink:
							'NewSendToDevice_css_td_notificationLink__ljKkf',
						notificationLearnMore:
							'NewSendToDevice_notificationLearnMore__qA7to',
						bottomM: 'NewSendToDevice_bottomM__44kvY',
						bottomNone: 'NewSendToDevice_bottomNone__KRlur',
						launchText: 'NewSendToDevice_launchText__OrLsO',
						launchLable: 'NewSendToDevice_launchLable__bRVDx',
						dialogBody: 'NewSendToDevice_dialogBody__K8GxW',
					});
				const c = l;
			},
			599141: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = r()(a());
				l.i(o.A, '', !0),
					l.push([
						e.id,
						`.badge-level-progress .bar-complete.level-2 {\n    background: ${o.A.locals.blue_light_3};\n}\n\n.badge-level-progress .bar-complete.level-3 {\n    background: ${o.A.locals.orange_light_3};\n}\n\n.badge-level-progress .bar-complete.level-4 {\n    background: ${o.A.locals.red_light_3};\n}\n\n.badge-level-progress .bar-complete.level-5 {\n    background: ${o.A.locals.purple_light_3};\n}\n\n.badge-level-progress .bar-complete.level-6 {\n    background: ${o.A.locals.lime_dark_3};\n}\n\n.badge-level-progress .bar-complete.level-7 {\n    background: ${o.A.locals.teal_primary};\n}\n\n.badge-level-progress .bar-complete.level-8 {\n    background: ${o.A.locals.yellow_dark_3};\n}\n\n.badge-level-progress .bar-complete.level-9 {\n    background: ${o.A.locals.violet_light_3};\n}\n\n.badge-level-progress .bar-complete.level-10 {\n    background: ${o.A.locals.darkui_accent_2};\n}\n\n/* New badge marker - based on .cal-item-tag for Calendar */\n\n.badge-new-marker {\n    font-size: 9px;\n    font-weight: 400;\n    line-height: 1.2;\n    padding: 3px;\n    text-transform: uppercase;\n    color: #daf200;\n    border-radius: 3px;\n    background: #0a1f2e;\n}\n\n/* Repeatable count indicator */\n\n.badge-repeatable {\n    font-size: 12px;\n    position: absolute;\n    color: #888;\n}\n\n.badge-repeatable:before {\n    content: '\\00d7';\n}\n\n.badge-repeatable, a:hover .badge-repeatable {\n    color: #888;\n}\n\n/* Badge thumbnail */\n\n.badge-thumbnail {\n    position: relative;\n    display: inline-block;\n    text-align: center;\n}\n\n.badge-thumbnail:hover {\n    text-decoration: none;\n}\n\n.badge-thumbnail .badge-new-marker {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n\n.badge-thumbnail .badge-img {\n    width: 80px;\n    height: 93px;\n}\n\n.badge-thumbnail .badge-name {\n    font-size: 12px;\n    line-height: 1.2em;\n    margin-top: 7px;\n}\n\n.badge-thumbnail .badge-repeatable {\n    top: 74px;\n    left: 86px;\n}\n\n/* Available badge effect */\n\n.badge-available .badge-img {\n    opacity: 0.5;\n    -webkit-filter: grayscale(100%);\n    /* Safari 6.0 - 9.0 */\n    filter: grayscale(100%);\n}\n\n/* Badge Lists */\n\n.badge-summary .badge-name {\n    font-weight: 600;\n}\n\n.badge-summary .badge-points:after {\n    content: ' \u2022 ';\n}\n\n/* Avatar badge level indicators */\n\n.avatar.avatar-medium + .badge-level.level-sm {\n    position: absolute;\n    margin-top: -16px;\n    margin-left: 64px;\n}\n\n/* Badge detail modals */\n\n.badge-detail, .related-badges-list, .connections-with-badge {\n    max-width: 470px;\n    margin-right: auto;\n    margin-left: auto;\n}\n\n.badge-detail {\n    text-align: center;\n}\n\n.badge-detail a {\n    cursor: pointer;\n    color: ${o.A.locals.blue_dark_1};\n}\n\n.badge-detail .badge-img {\n    width: 300px;\n    margin-bottom: 11px;\n}\n\n.badge-detail .badge-progress {\n    font-size: 12px;\n    margin: 0 auto;\n}\n\n.badge-detail .badge-progress .progress-bar {\n    display: block;\n    width: 100px;\n    margin: 0 auto;\n}\n\n.badge-detail .badge-progress-label {\n    line-height: 1.2em;\n    margin-top: 5px;\n}\n\n.badge-detail .badge-summary {\n    margin-top: 22px;\n    margin-bottom: 22px;\n}\n\n.badge-detail .badge-name {\n    font-weight: 600;\n}\n\n.badge-detail .badge-earned-msg {\n    margin-bottom: 22px;\n}\n\n.badge-detail .badge-earned-msg-list {\n    margin: 11px auto 0;\n}\n\n.badge-detail .badge-earned-msg-list li:first-child {\n    border-top: 1px solid #ddd;\n}\n\n.badge-detail .badge-earned-msg-list li {\n    float: left;\n    width: 100%;\n    border-bottom: 1px solid #ddd;\n}\n\n.badge-detail .badge-earned-msg-list li div {\n    box-sizing: border-box;\n    padding: 8px;\n}\n\n.badge-detail .badge-earned-msg-list li .badge-date {\n    float: left;\n    width: 40%;\n    text-align: left;\n}\n\n.badge-detail .badge-earned-msg-list li .badge-event {\n    float: right;\n    width: 60%;\n    text-align: right;\n}\n\n.badge-detail .badge-share-btn {\n    display: inline-block;\n    margin-bottom: 22px;\n    text-align: left;\n}\n\n.badge-detail .badge-status-msg {\n    display: block;\n    margin-bottom: 22px;\n    padding: 10px 30px 10px 10px;\n    border: 1px solid #11a9ed;\n    border-radius: 4px;\n    background-color: #e1f4fc;\n}\n\n.related-badges-list, .connections-with-badge {\n    margin-bottom: 33px;\n}\n\n.related-badges-list .badge-img {\n    width: 60px;\n    height: 100%;\n}\n\n.related-badges-list .badge-summary {\n    margin-top: 13px;\n    display: inline-block;\n}\n\n.connections-with-badge:after {\n    display: table;\n    clear: both;\n    content: '';\n}\n\n.connections-with-badge a {\n    display: block;\n    float: left;\n    margin-right: 5px;\n    margin-bottom: 5px;\n}\n\n.connections-with-badge a:hover {\n    text-decoration: none;\n}\n\n.connections-with-badge .badge-level.level-sm {\n    top: 18px;\n    margin-left: -16px;\n    display: inline-block;\n}\n\n.connections-with-badge .additional-connections {\n    line-height: 34px;\n    width: 34px;\n    min-width: 34px;\n    height: 34px;\n    padding: 5px;\n    text-align: center;\n    color: #fff;\n    border-radius: 50%;\n    background: #11a9ed;\n}\n\n.connections-with-badge .additional-connections:hover {\n    text-decoration: underline;\n}\n\n.badge-available-date {\n    font-size: 12px;\n    margin: 0;\n    color: ${o.A.locals.textMedium};\n    text-align: center;\n}\n\n/*  ======================\n        Badge Level Indicator - based on http://csshexagon.com\n        ======================  */\n\n.badge-level {\n    position: relative;\n    display: block;\n    text-align: left;\n}\n\n.badge-level:before, .badge-level:after {\n    position: absolute;\n    width: 0;\n    content: '';\n    border-right: solid transparent;\n    border-left: solid transparent;\n}\n\n.badge-level:before {\n    bottom: 100%;\n    border-bottom-style: solid;\n}\n\n.badge-level:after {\n    top: 100%;\n    width: 0;\n    border-top-style: solid;\n}\n\n.badge-level span {\n    font-weight: bold;\n    position: absolute;\n    width: 100%;\n    text-align: center;\n    color: #fff;\n    text-shadow: 0 0 2px ${o.A.locals.black};\n}\n\n/* Badge level sizes */\n\n.badge-level.level-sm {\n    width: 16px;\n    height: 9.24px;\n    margin: 4.62px 0;\n}\n\n.badge-level.level-sm:before, .badge-level.level-sm:after {\n    border-right-width: 8px;\n    border-left-width: 8px;\n}\n\n.badge-level.level-sm:before {\n    border-bottom-width: 4.62px;\n}\n\n.badge-level.level-sm:after {\n    border-top-width: 4.62px;\n}\n\n.badge-level.level-sm span {\n    font-size: 10px;\n    line-height: 9.24px;\n}\n\n.badge-level.level-md {\n    width: 26px;\n    height: 15.01px;\n    margin: 7.51px 0;\n}\n\n.badge-level.level-md:before, .badge-level.level-md:after {\n    border-right-width: 13px;\n    border-left-width: 13px;\n}\n\n.badge-level.level-md:before {\n    border-bottom-width: 7.51px;\n}\n\n.badge-level.level-md:after {\n    border-top-width: 7.51px;\n}\n\n.badge-level.level-md span {\n    font-size: 14px;\n    line-height: 15.01px;\n}\n\n.badge-level.level-xl {\n    width: 173px;\n    height: 99.88px;\n    margin: 49.94px 0;\n}\n\n.badge-level.level-xl:before, .badge-level.level-xl:after {\n    border-right-width: 86.5px;\n    border-left-width: 86.5px;\n}\n\n.badge-level.level-xl:before {\n    border-bottom-width: 49.94px;\n}\n\n.badge-level.level-xl:after {\n    border-top-width: 49.94px;\n}\n\n.badge-level.level-xl span {\n    font-size: 108px;\n    line-height: 99.88px;\n}\n\n/* Badge level colors */\n\n.badge-level.level-1 {\n    background-color: ${o.A.locals.green_primary};\n}\n\n.badge-level.level-1:before {\n    border-bottom-color: ${o.A.locals.green_primary};\n}\n\n.badge-level.level-1:after {\n    border-top-color: ${o.A.locals.green_primary};\n}\n\n.badge-level.level-2 {\n    background-color: ${o.A.locals.blue_light_3};\n}\n\n.badge-level.level-2:before {\n    border-bottom-color: ${o.A.locals.blue_light_3};\n}\n\n.badge-level.level-2:after {\n    border-top-color: ${o.A.locals.blue_light_3};\n}\n\n.badge-level.level-3 {\n    background-color: ${o.A.locals.orange_light_3};\n}\n\n.badge-level.level-3:before {\n    border-bottom-color: ${o.A.locals.orange_light_3};\n}\n\n.badge-level.level-3:after {\n    border-top-color: ${o.A.locals.orange_light_3};\n}\n\n.badge-level.level-4 {\n    background-color: ${o.A.locals.red_light_3};\n}\n\n.badge-level.level-4:before {\n    border-bottom-color: ${o.A.locals.red_light_3};\n}\n\n.badge-level.level-4:after {\n    border-top-color: ${o.A.locals.red_light_3};\n}\n\n.badge-level.level-5 {\n    background-color: ${o.A.locals.purple_light_3};\n}\n\n.badge-level.level-5:before {\n    border-bottom-color: ${o.A.locals.purple_light_3};\n}\n\n.badge-level.level-5:after {\n    border-top-color: ${o.A.locals.purple_light_3};\n}\n\n.badge-level.level-6 {\n    background-color: ${o.A.locals.lime_dark_3};\n}\n\n.badge-level.level-6:before {\n    border-bottom-color: ${o.A.locals.lime_dark_3};\n}\n\n.badge-level.level-6:after {\n    border-top-color: ${o.A.locals.lime_dark_3};\n}\n\n.badge-level.level-7 {\n    background-color: ${o.A.locals.teal_primary};\n}\n\n.badge-level.level-7:before {\n    border-bottom-color: ${o.A.locals.teal_primary};\n}\n\n.badge-level.level-7:after {\n    border-top-color: ${o.A.locals.teal_primary};\n}\n\n.badge-level.level-8 {\n    background-color: ${o.A.locals.yellow_dark_3};\n}\n\n.badge-level.level-8:before {\n    border-bottom-color: ${o.A.locals.yellow_dark_3};\n}\n\n.badge-level.level-8:after {\n    border-top-color: ${o.A.locals.yellow_dark_3};\n}\n\n.badge-level.level-9 {\n    background-color: ${o.A.locals.violet_light_3};\n}\n\n.badge-level.level-9:before {\n    border-bottom-color: ${o.A.locals.violet_light_3};\n}\n\n.badge-level.level-9:after {\n    border-top-color: ${o.A.locals.violet_light_3};\n}\n\n.badge-level.level-10 {\n    background-color: ${o.A.locals.darkui_accent_2};\n}\n\n.badge-level.level-10:before {\n    border-bottom-color: ${o.A.locals.darkui_accent_2};\n}\n\n.badge-level.level-10:after {\n    border-top-color: ${o.A.locals.darkui_accent_2};\n}\n\n/*  ======================\n            Badges Sidebar\n            ======================  */\n\n.badge-container h4 {\n    margin-bottom: 8px;\n}\n\n/* Badge name vertical truncate */\n\n.widget .badge-item .badge-name, .page-sidebar .badge-item .badge-name {\n    height: 2.4em;\n    overflow: hidden;\n}\n\n.badge-name.line-clamp {\n    -webkit-line-clamp: 2;\n}\n\n/*  ======================\n        Badge shimmer effect - based on http://jsfiddle.net/AntonTrollback/nqQc7\n        ======================  */\n\n.badge-earned .badge-thumbnail {\n    overflow: hidden;\n}\n\n.badge-earned .badge-thumbnail:after {\n    position: absolute;\n    top: -110%;\n    left: -210%;\n    width: 200%;\n    height: 200%;\n    content: '';\n    transform: rotate(30deg);\n    opacity: 0;\n    background: linear-gradient(\n        to right,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0) 77%,\n        rgba(255, 255, 255, 0.5) 92%,\n        rgba(255, 255, 255, 0) 100%\n    );\n}\n\n/* Match sidebar background color */\n\n.border-wrapper .badge-earned .badge-thumbnail:after {\n    background: linear-gradient(\n        to right,\n        rgba(250, 250, 250, 0) 0%,\n        rgba(250, 250, 250, 0) 77%,\n        rgba(250, 250, 250, 0.5) 92%,\n        rgba(250, 250, 250, 0) 100%\n    );\n}\n\n/* Hover state - trigger effect */\n\n.badge-earned .badge-thumbnail:hover:after {\n    top: -30%;\n    left: -30%;\n    transition-timing-function: ease;\n    transition-duration: 0.7s, 0.7s, 0.15s;\n    transition-property: left, top, opacity;\n    opacity: 1;\n}\n\n/* Active state */\n\n.badge-earned .badge-thumbnail:active:after {\n    opacity: 0;\n}\n\n/* Z-index stuff so shimmer effect only shows in badge img */\n\n.badge-earned .badge-thumbnail:after {\n    z-index: 1;\n}\n\n.badge-earned .badge-thumbnail span, .badge-earned .badge-thumbnail div {\n    z-index: 2;\n}\n\n.badge-earned .badge-thumbnail .badge-name {\n    position: relative;\n}\n\n.widget .badge-earned .badge-thumbnail .badge-name {\n    z-index: 0;\n}\n\n.widget .badge-earned .badge-thumbnail .badge-repeatable {\n    z-index: 0;\n}\n\n.widget-takeover-content .badge-level {\n    display: inline-block;\n}\n\n.badge-level-summary .badge-level.level-md {\n    top: -2px;\n    margin-right: 5px;\n    margin-left: 5px;\n    vertical-align: middle;\n    display: inline-block;\n}\n\n/*  ======================\n        Badges Sidebar\n        ======================  */\n\n.page-sidebar .badge-level-summary {\n    float: left;\n    margin-left: 4px;\n}\n\n.page-sidebar .earned-badges-list {\n    display: flex;\n    flex-wrap: wrap;\n    text-align: center;\n    list-style-type: none;\n    margin-left: -5px;\n}\n\n.page-sidebar .earned-badges-list .badge-item {\n    margin-top: 11px;\n    margin-left: 5px;\n}\n\n.page-sidebar .earned-badges-list .badge-thumbnail {\n    width: calc(100% - 20px);\n}\n\n/* Responsive sidebar grid */\n\n@media (min-width: 1280px) {\n    .page-sidebar .earned-badges-list .badge-item {\n        width: calc(33.33334% - 5px);\n    }\n}\n\n@media (min-width: 1050px) and (max-width: 1279px) {\n    .page-sidebar .earned-badges-list .badge-item {\n        width: calc(50% - 5px);\n    }\n}\n\n@media (max-width: 1049px) {\n    .page-sidebar .earned-badges-list .badge-item {\n        width: 120px;\n    }\n}\n`,
						'',
						{
							version: 3,
							sources: ['webpack://./src/styles/badges.common.module.css'],
							names: [],
							mappings:
								'AAEA;IACI,wDAAwB;AAC5B;;AAEA;IACI,wDAA0B;AAC9B;;AAEA;IACI,wDAAuB;AAC3B;;AAEA;IACI,wDAA0B;AAC9B;;AAEA;IACI,wDAAuB;AAC3B;;AAEA;IACI,wDAAwB;AAC5B;;AAEA;IACI,yDAAyB;AAC7B;;AAEA;IACI,yDAA0B;AAC9B;;AAEA;IACI,yDAA2B;AAC/B;;AAEA,2DAA2D;;AAE3D;IACI,cAAc;IACd,gBAAgB;IAChB,gBAAgB;IAChB,YAAY;IACZ,yBAAyB;IACzB,cAAc;IACd,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA,+BAA+B;;AAE/B;IACI,eAAe;IACf,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IAEI,WAAW;AACf;;AAEA,oBAAoB;;AAEpB;IACI,kBAAkB;IAClB,qBAAqB;IACrB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,OAAO;AACX;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA,2BAA2B;;AAE3B;IACI,YAAY;IACZ,+BAA+B;IAC/B,qBAAqB;IACrB,uBAAuB;AAC3B;;AAEA,gBAAgB;;AAEhB;IACI,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;AAEA,kCAAkC;;AAElC;IACI,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA,wBAAwB;;AAExB;IAGI,gBAAgB;IAChB,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,mDAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,WAAW;IACX,WAAW;IACX,6BAA6B;AACjC;;AAEA;IACI,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI,qBAAqB;IACrB,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,mBAAmB;IACnB,4BAA4B;IAC5B,yBAAyB;IACzB,kBAAkB;IAClB,yBAAyB;AAC7B;;AAEA;IAEI,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,cAAc;IACd,WAAW;IACX,WAAW;AACf;;AAEA;IACI,cAAc;IACd,WAAW;IACX,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,SAAS;IACT,kBAAkB;IAClB,qBAAqB;AACzB;;AAEA;IACI,iBAAiB;IACjB,WAAW;IACX,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,WAAW;IACX,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,eAAe;IACf,SAAS;IACT,mDAAiB;IACjB,kBAAkB;AACtB;;AAEA;;iCAEiC;;AAEjC;IACI,kBAAkB;IAClB,cAAc;IACd,gBAAgB;AACpB;;AAEA;IAEI,kBAAkB;IAClB,QAAQ;IACR,WAAW;IACX,+BAA+B;IAC/B,8BAA8B;AAClC;;AAEA;IACI,YAAY;IACZ,0BAA0B;AAC9B;;AAEA;IACI,SAAS;IACT,QAAQ;IACR,uBAAuB;AAC3B;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,WAAW;IACX,kBAAkB;IAClB,WAAW;IACX,iEAA0B;AAC9B;;AAEA,sBAAsB;;AAEtB;IACI,WAAW;IACX,cAAc;IACd,gBAAgB;AACpB;;AAEA;IAEI,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,eAAe;IACf,gBAAgB;AACpB;;AAEA;IAEI,wBAAwB;IACxB,uBAAuB;AAC3B;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,eAAe;IACf,oBAAoB;AACxB;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,iBAAiB;AACrB;;AAEA;IAEI,0BAA0B;IAC1B,yBAAyB;AAC7B;;AAEA;IACI,4BAA4B;AAChC;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,gBAAgB;IAChB,oBAAoB;AACxB;;AAEA,uBAAuB;;AAEvB;IACI,8DAA+B;AACnC;;AAEA;IACI,iEAAkC;AACtC;;AAEA;IACI,8DAA+B;AACnC;;AAEA;IACI,8DAA8B;AAClC;;AAEA;IACI,iEAAiC;AACrC;;AAEA;IACI,8DAA8B;AAClC;;AAEA;IACI,8DAAgC;AACpC;;AAEA;IACI,iEAAmC;AACvC;;AAEA;IACI,8DAAgC;AACpC;;AAEA;IACI,8DAA6B;AACjC;;AAEA;IACI,iEAAgC;AACpC;;AAEA;IACI,8DAA6B;AACjC;;AAEA;IACI,8DAAgC;AACpC;;AAEA;IACI,iEAAmC;AACvC;;AAEA;IACI,8DAAgC;AACpC;;AAEA;IACI,8DAA6B;AACjC;;AAEA;IACI,iEAAgC;AACpC;;AAEA;IACI,8DAA6B;AACjC;;AAEA;IACI,8DAA8B;AAClC;;AAEA;IACI,iEAAiC;AACrC;;AAEA;IACI,8DAA8B;AAClC;;AAEA;IACI,+DAA+B;AACnC;;AAEA;IACI,kEAAkC;AACtC;;AAEA;IACI,+DAA+B;AACnC;;AAEA;IACI,+DAAgC;AACpC;;AAEA;IACI,kEAAmC;AACvC;;AAEA;IACI,+DAAgC;AACpC;;AAEA;IACI,+DAAiC;AACrC;;AAEA;IACI,kEAAoC;AACxC;;AAEA;IACI,+DAAiC;AACrC;;AAEA;;qCAEqC;;AAErC;IACI,kBAAkB;AACtB;;AAEA,iCAAiC;;AAEjC;IAEI,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;;iCAEiC;;AAEjC;IACI,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,WAAW;IACX,WAAW;IACX,YAAY;IACZ,WAAW;IACX,wBAAwB;IACxB,UAAU;IACV;;;;;;KAMC;AACL;;AAEA,mCAAmC;;AAEnC;IACI;;;;;;KAMC;AACL;;AAEA,iCAAiC;;AAEjC;IACI,SAAS;IACT,UAAU;IACV,gCAAgC;IAChC,sCAAsC;IACtC,uCAAuC;IACvC,UAAU;AACd;;AAEA,iBAAiB;;AAEjB;IACI,UAAU;AACd;;AAEA,4DAA4D;;AAE5D;IACI,UAAU;AACd;;AAEA;IAEI,UAAU;AACd;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,SAAS;IACT,iBAAiB;IACjB,gBAAgB;IAChB,sBAAsB;IACtB,qBAAqB;AACzB;;AAEA;;iCAEiC;;AAEjC;IACI,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,kBAAkB;IAClB,qBAAqB;IACrB,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA,4BAA4B;;AAE5B;IACI;QACI,4BAA4B;IAChC;AACJ;;AAEA;IACI;QACI,sBAAsB;IAC1B;AACJ;;AAEA;IACI;QACI,YAAY;IAChB;AACJ',
							sourcesContent: [
								"@value ( blue_dark_1, textMedium, black, green_primary, blue_light_3, orange_light_3, red_light_3, purple_light_3, lime_dark_3, teal_primary, yellow_dark_3, violet_light_3, darkui_accent_2 ) from 'ui-connect/styles/colors.module.css';\n\n:global .badge-level-progress .bar-complete.level-2 {\n    background: blue_light_3;\n}\n\n:global .badge-level-progress .bar-complete.level-3 {\n    background: orange_light_3;\n}\n\n:global .badge-level-progress .bar-complete.level-4 {\n    background: red_light_3;\n}\n\n:global .badge-level-progress .bar-complete.level-5 {\n    background: purple_light_3;\n}\n\n:global .badge-level-progress .bar-complete.level-6 {\n    background: lime_dark_3;\n}\n\n:global .badge-level-progress .bar-complete.level-7 {\n    background: teal_primary;\n}\n\n:global .badge-level-progress .bar-complete.level-8 {\n    background: yellow_dark_3;\n}\n\n:global .badge-level-progress .bar-complete.level-9 {\n    background: violet_light_3;\n}\n\n:global .badge-level-progress .bar-complete.level-10 {\n    background: darkui_accent_2;\n}\n\n/* New badge marker - based on .cal-item-tag for Calendar */\n\n:global .badge-new-marker {\n    font-size: 9px;\n    font-weight: 400;\n    line-height: 1.2;\n    padding: 3px;\n    text-transform: uppercase;\n    color: #daf200;\n    border-radius: 3px;\n    background: #0a1f2e;\n}\n\n/* Repeatable count indicator */\n\n:global .badge-repeatable {\n    font-size: 12px;\n    position: absolute;\n    color: #888;\n}\n\n:global .badge-repeatable:before {\n    content: '\\00d7';\n}\n\n:global .badge-repeatable,\n:global a:hover .badge-repeatable {\n    color: #888;\n}\n\n/* Badge thumbnail */\n\n:global .badge-thumbnail {\n    position: relative;\n    display: inline-block;\n    text-align: center;\n}\n\n:global .badge-thumbnail:hover {\n    text-decoration: none;\n}\n\n:global .badge-thumbnail .badge-new-marker {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n\n:global .badge-thumbnail .badge-img {\n    width: 80px;\n    height: 93px;\n}\n\n:global .badge-thumbnail .badge-name {\n    font-size: 12px;\n    line-height: 1.2em;\n    margin-top: 7px;\n}\n\n:global .badge-thumbnail .badge-repeatable {\n    top: 74px;\n    left: 86px;\n}\n\n/* Available badge effect */\n\n:global .badge-available .badge-img {\n    opacity: 0.5;\n    -webkit-filter: grayscale(100%);\n    /* Safari 6.0 - 9.0 */\n    filter: grayscale(100%);\n}\n\n/* Badge Lists */\n\n:global .badge-summary .badge-name {\n    font-weight: 600;\n}\n\n:global .badge-summary .badge-points:after {\n    content: ' \u2022 ';\n}\n\n/* Avatar badge level indicators */\n\n:global .avatar.avatar-medium + .badge-level.level-sm {\n    position: absolute;\n    margin-top: -16px;\n    margin-left: 64px;\n}\n\n/* Badge detail modals */\n\n:global .badge-detail,\n:global .related-badges-list,\n:global .connections-with-badge {\n    max-width: 470px;\n    margin-right: auto;\n    margin-left: auto;\n}\n\n:global .badge-detail {\n    text-align: center;\n}\n\n:global .badge-detail a {\n    cursor: pointer;\n    color: blue_dark_1;\n}\n\n:global .badge-detail .badge-img {\n    width: 300px;\n    margin-bottom: 11px;\n}\n\n:global .badge-detail .badge-progress {\n    font-size: 12px;\n    margin: 0 auto;\n}\n\n:global .badge-detail .badge-progress .progress-bar {\n    display: block;\n    width: 100px;\n    margin: 0 auto;\n}\n\n:global .badge-detail .badge-progress-label {\n    line-height: 1.2em;\n    margin-top: 5px;\n}\n\n:global .badge-detail .badge-summary {\n    margin-top: 22px;\n    margin-bottom: 22px;\n}\n\n:global .badge-detail .badge-name {\n    font-weight: 600;\n}\n\n:global .badge-detail .badge-earned-msg {\n    margin-bottom: 22px;\n}\n\n:global .badge-detail .badge-earned-msg-list {\n    margin: 11px auto 0;\n}\n\n:global .badge-detail .badge-earned-msg-list li:first-child {\n    border-top: 1px solid #ddd;\n}\n\n:global .badge-detail .badge-earned-msg-list li {\n    float: left;\n    width: 100%;\n    border-bottom: 1px solid #ddd;\n}\n\n:global .badge-detail .badge-earned-msg-list li div {\n    box-sizing: border-box;\n    padding: 8px;\n}\n\n:global .badge-detail .badge-earned-msg-list li .badge-date {\n    float: left;\n    width: 40%;\n    text-align: left;\n}\n\n:global .badge-detail .badge-earned-msg-list li .badge-event {\n    float: right;\n    width: 60%;\n    text-align: right;\n}\n\n:global .badge-detail .badge-share-btn {\n    display: inline-block;\n    margin-bottom: 22px;\n    text-align: left;\n}\n\n:global .badge-detail .badge-status-msg {\n    display: block;\n    margin-bottom: 22px;\n    padding: 10px 30px 10px 10px;\n    border: 1px solid #11a9ed;\n    border-radius: 4px;\n    background-color: #e1f4fc;\n}\n\n:global .related-badges-list,\n:global .connections-with-badge {\n    margin-bottom: 33px;\n}\n\n:global .related-badges-list .badge-img {\n    width: 60px;\n    height: 100%;\n}\n\n:global .related-badges-list .badge-summary {\n    margin-top: 13px;\n    display: inline-block;\n}\n\n:global .connections-with-badge:after {\n    display: table;\n    clear: both;\n    content: '';\n}\n\n:global .connections-with-badge a {\n    display: block;\n    float: left;\n    margin-right: 5px;\n    margin-bottom: 5px;\n}\n\n:global .connections-with-badge a:hover {\n    text-decoration: none;\n}\n\n:global .connections-with-badge .badge-level.level-sm {\n    top: 18px;\n    margin-left: -16px;\n    display: inline-block;\n}\n\n:global .connections-with-badge .additional-connections {\n    line-height: 34px;\n    width: 34px;\n    min-width: 34px;\n    height: 34px;\n    padding: 5px;\n    text-align: center;\n    color: #fff;\n    border-radius: 50%;\n    background: #11a9ed;\n}\n\n:global .connections-with-badge .additional-connections:hover {\n    text-decoration: underline;\n}\n\n:global .badge-available-date {\n    font-size: 12px;\n    margin: 0;\n    color: textMedium;\n    text-align: center;\n}\n\n/*  ======================\n        Badge Level Indicator - based on http://csshexagon.com\n        ======================  */\n\n:global .badge-level {\n    position: relative;\n    display: block;\n    text-align: left;\n}\n\n:global .badge-level:before,\n:global .badge-level:after {\n    position: absolute;\n    width: 0;\n    content: '';\n    border-right: solid transparent;\n    border-left: solid transparent;\n}\n\n:global .badge-level:before {\n    bottom: 100%;\n    border-bottom-style: solid;\n}\n\n:global .badge-level:after {\n    top: 100%;\n    width: 0;\n    border-top-style: solid;\n}\n\n:global .badge-level span {\n    font-weight: bold;\n    position: absolute;\n    width: 100%;\n    text-align: center;\n    color: #fff;\n    text-shadow: 0 0 2px black;\n}\n\n/* Badge level sizes */\n\n:global .badge-level.level-sm {\n    width: 16px;\n    height: 9.24px;\n    margin: 4.62px 0;\n}\n\n:global .badge-level.level-sm:before,\n:global .badge-level.level-sm:after {\n    border-right-width: 8px;\n    border-left-width: 8px;\n}\n\n:global .badge-level.level-sm:before {\n    border-bottom-width: 4.62px;\n}\n\n:global .badge-level.level-sm:after {\n    border-top-width: 4.62px;\n}\n\n:global .badge-level.level-sm span {\n    font-size: 10px;\n    line-height: 9.24px;\n}\n\n:global .badge-level.level-md {\n    width: 26px;\n    height: 15.01px;\n    margin: 7.51px 0;\n}\n\n:global .badge-level.level-md:before,\n:global .badge-level.level-md:after {\n    border-right-width: 13px;\n    border-left-width: 13px;\n}\n\n:global .badge-level.level-md:before {\n    border-bottom-width: 7.51px;\n}\n\n:global .badge-level.level-md:after {\n    border-top-width: 7.51px;\n}\n\n:global .badge-level.level-md span {\n    font-size: 14px;\n    line-height: 15.01px;\n}\n\n:global .badge-level.level-xl {\n    width: 173px;\n    height: 99.88px;\n    margin: 49.94px 0;\n}\n\n:global .badge-level.level-xl:before,\n:global .badge-level.level-xl:after {\n    border-right-width: 86.5px;\n    border-left-width: 86.5px;\n}\n\n:global .badge-level.level-xl:before {\n    border-bottom-width: 49.94px;\n}\n\n:global .badge-level.level-xl:after {\n    border-top-width: 49.94px;\n}\n\n:global .badge-level.level-xl span {\n    font-size: 108px;\n    line-height: 99.88px;\n}\n\n/* Badge level colors */\n\n:global .badge-level.level-1 {\n    background-color: green_primary;\n}\n\n:global .badge-level.level-1:before {\n    border-bottom-color: green_primary;\n}\n\n:global .badge-level.level-1:after {\n    border-top-color: green_primary;\n}\n\n:global .badge-level.level-2 {\n    background-color: blue_light_3;\n}\n\n:global .badge-level.level-2:before {\n    border-bottom-color: blue_light_3;\n}\n\n:global .badge-level.level-2:after {\n    border-top-color: blue_light_3;\n}\n\n:global .badge-level.level-3 {\n    background-color: orange_light_3;\n}\n\n:global .badge-level.level-3:before {\n    border-bottom-color: orange_light_3;\n}\n\n:global .badge-level.level-3:after {\n    border-top-color: orange_light_3;\n}\n\n:global .badge-level.level-4 {\n    background-color: red_light_3;\n}\n\n:global .badge-level.level-4:before {\n    border-bottom-color: red_light_3;\n}\n\n:global .badge-level.level-4:after {\n    border-top-color: red_light_3;\n}\n\n:global .badge-level.level-5 {\n    background-color: purple_light_3;\n}\n\n:global .badge-level.level-5:before {\n    border-bottom-color: purple_light_3;\n}\n\n:global .badge-level.level-5:after {\n    border-top-color: purple_light_3;\n}\n\n:global .badge-level.level-6 {\n    background-color: lime_dark_3;\n}\n\n:global .badge-level.level-6:before {\n    border-bottom-color: lime_dark_3;\n}\n\n:global .badge-level.level-6:after {\n    border-top-color: lime_dark_3;\n}\n\n:global .badge-level.level-7 {\n    background-color: teal_primary;\n}\n\n:global .badge-level.level-7:before {\n    border-bottom-color: teal_primary;\n}\n\n:global .badge-level.level-7:after {\n    border-top-color: teal_primary;\n}\n\n:global .badge-level.level-8 {\n    background-color: yellow_dark_3;\n}\n\n:global .badge-level.level-8:before {\n    border-bottom-color: yellow_dark_3;\n}\n\n:global .badge-level.level-8:after {\n    border-top-color: yellow_dark_3;\n}\n\n:global .badge-level.level-9 {\n    background-color: violet_light_3;\n}\n\n:global .badge-level.level-9:before {\n    border-bottom-color: violet_light_3;\n}\n\n:global .badge-level.level-9:after {\n    border-top-color: violet_light_3;\n}\n\n:global .badge-level.level-10 {\n    background-color: darkui_accent_2;\n}\n\n:global .badge-level.level-10:before {\n    border-bottom-color: darkui_accent_2;\n}\n\n:global .badge-level.level-10:after {\n    border-top-color: darkui_accent_2;\n}\n\n/*  ======================\n            Badges Sidebar\n            ======================  */\n\n:global .badge-container h4 {\n    margin-bottom: 8px;\n}\n\n/* Badge name vertical truncate */\n\n:global .widget .badge-item .badge-name,\n:global .page-sidebar .badge-item .badge-name {\n    height: 2.4em;\n    overflow: hidden;\n}\n\n:global .badge-name.line-clamp {\n    -webkit-line-clamp: 2;\n}\n\n/*  ======================\n        Badge shimmer effect - based on http://jsfiddle.net/AntonTrollback/nqQc7\n        ======================  */\n\n:global .badge-earned .badge-thumbnail {\n    overflow: hidden;\n}\n\n:global .badge-earned .badge-thumbnail:after {\n    position: absolute;\n    top: -110%;\n    left: -210%;\n    width: 200%;\n    height: 200%;\n    content: '';\n    transform: rotate(30deg);\n    opacity: 0;\n    background: linear-gradient(\n        to right,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0) 77%,\n        rgba(255, 255, 255, 0.5) 92%,\n        rgba(255, 255, 255, 0) 100%\n    );\n}\n\n/* Match sidebar background color */\n\n:global .border-wrapper .badge-earned .badge-thumbnail:after {\n    background: linear-gradient(\n        to right,\n        rgba(250, 250, 250, 0) 0%,\n        rgba(250, 250, 250, 0) 77%,\n        rgba(250, 250, 250, 0.5) 92%,\n        rgba(250, 250, 250, 0) 100%\n    );\n}\n\n/* Hover state - trigger effect */\n\n:global .badge-earned .badge-thumbnail:hover:after {\n    top: -30%;\n    left: -30%;\n    transition-timing-function: ease;\n    transition-duration: 0.7s, 0.7s, 0.15s;\n    transition-property: left, top, opacity;\n    opacity: 1;\n}\n\n/* Active state */\n\n:global .badge-earned .badge-thumbnail:active:after {\n    opacity: 0;\n}\n\n/* Z-index stuff so shimmer effect only shows in badge img */\n\n:global .badge-earned .badge-thumbnail:after {\n    z-index: 1;\n}\n\n:global .badge-earned .badge-thumbnail span,\n:global .badge-earned .badge-thumbnail div {\n    z-index: 2;\n}\n\n:global .badge-earned .badge-thumbnail .badge-name {\n    position: relative;\n}\n\n:global .widget .badge-earned .badge-thumbnail .badge-name {\n    z-index: 0;\n}\n\n:global .widget .badge-earned .badge-thumbnail .badge-repeatable {\n    z-index: 0;\n}\n\n:global .widget-takeover-content .badge-level {\n    display: inline-block;\n}\n\n:global .badge-level-summary .badge-level.level-md {\n    top: -2px;\n    margin-right: 5px;\n    margin-left: 5px;\n    vertical-align: middle;\n    display: inline-block;\n}\n\n/*  ======================\n        Badges Sidebar\n        ======================  */\n\n:global .page-sidebar .badge-level-summary {\n    float: left;\n    margin-left: 4px;\n}\n\n:global .page-sidebar .earned-badges-list {\n    display: flex;\n    flex-wrap: wrap;\n    text-align: center;\n    list-style-type: none;\n    margin-left: -5px;\n}\n\n:global .page-sidebar .earned-badges-list .badge-item {\n    margin-top: 11px;\n    margin-left: 5px;\n}\n\n:global .page-sidebar .earned-badges-list .badge-thumbnail {\n    width: calc(100% - 20px);\n}\n\n/* Responsive sidebar grid */\n\n@media (min-width: 1280px) {\n    :global .page-sidebar .earned-badges-list .badge-item {\n        width: calc(33.33334% - 5px);\n    }\n}\n\n@media (min-width: 1050px) and (max-width: 1279px) {\n    :global .page-sidebar .earned-badges-list .badge-item {\n        width: calc(50% - 5px);\n    }\n}\n\n@media (max-width: 1049px) {\n    :global .page-sidebar .earned-badges-list .badge-item {\n        width: 120px;\n    }\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(l.locals = {
						blue_dark_1: `${o.A.locals.blue_dark_1}`,
						textMedium: `${o.A.locals.textMedium}`,
						black: `${o.A.locals.black}`,
						green_primary: `${o.A.locals.green_primary}`,
						blue_light_3: `${o.A.locals.blue_light_3}`,
						orange_light_3: `${o.A.locals.orange_light_3}`,
						red_light_3: `${o.A.locals.red_light_3}`,
						purple_light_3: `${o.A.locals.purple_light_3}`,
						lime_dark_3: `${o.A.locals.lime_dark_3}`,
						teal_primary: `${o.A.locals.teal_primary}`,
						yellow_dark_3: `${o.A.locals.yellow_dark_3}`,
						violet_light_3: `${o.A.locals.violet_light_3}`,
						darkui_accent_2: `${o.A.locals.darkui_accent_2}`,
						'badge-level-progress': 'badge-level-progress',
						'bar-complete': 'bar-complete',
						'level-2': 'level-2',
						'level-3': 'level-3',
						'level-4': 'level-4',
						'level-5': 'level-5',
						'level-6': 'level-6',
						'level-7': 'level-7',
						'level-8': 'level-8',
						'level-9': 'level-9',
						'level-10': 'level-10',
						'badge-new-marker': 'badge-new-marker',
						'badge-repeatable': 'badge-repeatable',
						'badge-thumbnail': 'badge-thumbnail',
						'badge-img': 'badge-img',
						'badge-name': 'badge-name',
						'badge-available': 'badge-available',
						'badge-summary': 'badge-summary',
						'badge-points': 'badge-points',
						avatar: 'avatar',
						'avatar-medium': 'avatar-medium',
						'badge-level': 'badge-level',
						'level-sm': 'level-sm',
						'badge-detail': 'badge-detail',
						'related-badges-list': 'related-badges-list',
						'connections-with-badge': 'connections-with-badge',
						'badge-progress': 'badge-progress',
						'progress-bar': 'progress-bar',
						'badge-progress-label': 'badge-progress-label',
						'badge-earned-msg': 'badge-earned-msg',
						'badge-earned-msg-list': 'badge-earned-msg-list',
						'badge-date': 'badge-date',
						'badge-event': 'badge-event',
						'badge-share-btn': 'badge-share-btn',
						'badge-status-msg': 'badge-status-msg',
						'additional-connections': 'additional-connections',
						'badge-available-date': 'badge-available-date',
						'level-md': 'level-md',
						'level-xl': 'level-xl',
						'level-1': 'level-1',
						'badge-container': 'badge-container',
						widget: 'widget',
						'badge-item': 'badge-item',
						'page-sidebar': 'page-sidebar',
						'line-clamp': 'line-clamp',
						'badge-earned': 'badge-earned',
						'border-wrapper': 'border-wrapper',
						'widget-takeover-content': 'widget-takeover-content',
						'badge-level-summary': 'badge-level-summary',
						'earned-badges-list': 'earned-badges-list',
					});
				const c = l;
			},
			815810: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => o });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s)()(a());
				r.push([
					e.id,
					".connections-title-container h3 {\n    display: -webkit-box;\n    overflow: hidden;\n    max-height: 130px;\n    margin-top: 15px;\n    text-overflow: ellipsis;\n    -webkit-line-clamp: 4;\n    -webkit-box-orient: vertical;\n}\n\n.connections .account-status {\n    font-family: 'connect-icons';\n    speak: none;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n\n    /* Better Font Rendering =========== */\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n\n    /* Custom CSS to overwrite Bootstrap */\n    background-image: none;\n    display: inline-block;\n    margin: 0 10px;\n    position: relative;\n}\n\n.connections .account-status:after {\n    width: 18px;\n    height: 18px;\n    line-height: 18px;\n    border-radius: 50%;\n    display: inline-block;\n    text-align: center;\n    content: '\\e019'; /* arrow icon */\n    background: #e6e6e6;\n    color: #fff;\n    font-size: 10px;\n    vertical-align: middle;\n    margin-top: -2px;\n}\n\n.connections .social-account-list .social-account-entry:not(.active):hover .account-status:after {\n    background: #50b012; /* green */\n}\n\n.connections .social-account-list .active .account-status:after, .connections .social-account-section .account-status:after, .connections .widget-takeover .account-status:after {\n    content: '\\2714'; /* checkmark icon */\n    background: #11a9ed; /* blue */\n    color: #fff;\n    font-size: 14px;\n}\n\n/*  ======================\n      Connections Page\n      ======================  */\n/* right rail */\n\n/* connections and followers tweaks */\n.connections.page .grid-list .entry .span5, .connections-connections.page .grid-list .entry .span5, .connections.page .search-result .entry > .span3 {\n    width: 88px; /* forcing fixed width on the avatar */\n}\n\n.connections.page .grid-list .entry, .connections-connections.page .grid-list .entry {\n    min-height: 99px;\n    margin-bottom: 30px;\n}\n\n.page.connections .search-result .entry {\n    margin-bottom: 22px;\n}\n\n/*  ======================\n      Connections List\n      ======================  */\n.connections-inline-list {\n    width: 100%;\n}\n.connections-inline-list .connection {\n    position: relative;\n    margin-bottom: 5.5px;\n    padding: 5.5px 22px 5.5px 5.5px;\n}\n.connections-inline-list .connection:nth-child(2n) {\n    border-radius: 6px;\n    background: #ededed;\n}\n.connections-inline-list .avatar {\n    margin-right: 11px;\n}\n.connections-inline-list .connection-name, .connections-inline-list .connection-name + .connection-username {\n    display: inline-block;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n    vertical-align: middle;\n}\n.connections-inline-list .connection-name {\n    max-width: 45%;\n}\n.connections-inline-list .connection-name + .connection-username {\n    margin-left: 11px;\n    max-width: 20%;\n}\n.connections-inline-list .connection-username {\n    margin-right: 11px;\n    color: #888;\n}\n.connections-inline-list .connection-you .label, .connections-inline-list .btn, .connections-inline-list .connection-action-taken, .connections-inline-list .connection-type {\n    position: absolute;\n    top: 15px;\n    right: 11px;\n}\n.connections-inline-list .btn-small, .connections-inline-list .connection-action-taken, .connections-inline-list .connection-type {\n    min-width: 100px;\n}\n.connections-inline-list .connection-action-taken, .connections-inline-list .connection-type {\n    /* mimics button styles, but action has been taken */\n    padding: 3px 0;\n    line-height: 16px;\n    vertical-align: top;\n    font-size: 11px;\n\n    text-align: center;\n    color: #555;\n}\n.connections-inline-list + p {\n    margin-top: 22px;\n}\n\n/* Connect Checkbox */\n.connections-inline-list .connect-checkbox {\n    display: inline-block;\n    float: right;\n    margin-top: 10px;\n}\n.page.connections .search-result .social-account-section {\n    padding-bottom: 15px; /*Usually 11px for a small, but since 4px is taken for the icon, this has been updated to 15px.*/\n    border-bottom: 1px solid #ddd;\n}\n\n.page.connections .search-result .social-account-message {\n    border: none;\n}\n\n.connections .search-result .social-account-status {\n    margin: 0;\n}\n\n.page.connections .social-account-button {\n    width: 14px;\n    height: 14px;\n    display: inline-block;\n}\n\n.page.connections .social-account-button.facebook {\n    background: url(/modern/images/social-icons/facebook-sprite.png) 0 0/14px;\n}\n\n.page.connections .social-account-button.google {\n    background: url(/modern/images/social-icons/google-sprite.png) 0 0/14px;\n}\n\n.page.connections .search-result .social-account-icon {\n    width: 20px;\n    height: 20px;\n    display: inline-block;\n}\n\n.page.connections .social-account-icon.facebook {\n    background: url(/modern/images/social-icons/facebook-sprite.png) 0 0/20px;\n}\n\n.page.connections .social-account-icon.google {\n    background: url(/modern/images/social-icons/google-sprite.png) 0 0/20px;\n}\n\n.page.connections .social-icon-container {\n    position: relative;\n    line-height: 68px;\n    width: 60px;\n    height: 60px;\n    margin-top: -4px;\n    margin-right: 11px;\n    text-align: center;\n    border-radius: 50%;\n    box-shadow: 0 0 0 2px #ccc;\n}\n\n.page.connections .social-icon-container .account-status {\n    position: absolute;\n    top: 42px;\n    left: 30px;\n}\n\n/*  ======================\n      Connections Modal\n      ======================  */\n.mutual-connections.modal .row {\n    margin-left: 0;\n}\n.mutual-connections.modal .entry {\n    padding-bottom: 20px;\n}\n.mutual-connections.modal .entry + .entry {\n    padding-top: 20px;\n}\n.mutual-connections.modal .entry:not(:last-child) {\n    border-bottom: 1px solid rgba(221, 221, 221, 0.3);\n}\n.mutual-connections.modal .modal-body .entry-content {\n    word-wrap: break-word;\n}\n\n/* Search Icon For Connections Tab */\n.page.connections .nav-tabs > li > a i.icon-search {\n    padding: 1px 0 0 0;\n}\n\n.newsfeedLink {\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom: 10px;\n}\n\n.span4.newsfeedLink.desktop {\n    display: flex; /* Override display block of span4 */\n}\n\n.newsfeedLink.mobile {\n    display: none;\n}\n\n.newsfeedUnreadBubble {\n    background: #1976d2;\n    border-radius: 50%;\n    z-index: 1;\n    min-width: 6px;\n    height: 6px;\n    position: absolute;\n    margin-left: 22px;\n}\n\n/* To align the width setting for [class*='span'] in _BootstrapB.scss */\n@media (max-width: 1049px) {\n    .newsfeedLink.mobile {\n        display: flex;\n    }\n\n    .span4.newsfeedLink.desktop {\n        display: none;\n    }\n}\n",
					'',
					{
						version: 3,
						sources: ['webpack://./src/styles/connections.page.module.css'],
						names: [],
						mappings:
							'AAAA;IACI,oBAAoB;IACpB,gBAAgB;IAChB,iBAAiB;IACjB,gBAAgB;IAChB,uBAAuB;IACvB,qBAAqB;IACrB,4BAA4B;AAChC;;AAEA;IACI,4BAA4B;IAC5B,WAAW;IACX,kBAAkB;IAClB,mBAAmB;IACnB,oBAAoB;IACpB,oBAAoB;;IAEpB,sCAAsC;IACtC,mCAAmC;IACnC,kCAAkC;;IAElC,sCAAsC;IACtC,sBAAsB;IACtB,qBAAqB;IACrB,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,qBAAqB;IACrB,kBAAkB;IAClB,gBAAgB,EAAE,eAAe;IACjC,mBAAmB;IACnB,WAAW;IACX,eAAe;IACf,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,mBAAmB,EAAE,UAAU;AACnC;;AAEA;IAGI,gBAAgB,EAAE,mBAAmB;IACrC,mBAAmB,EAAE,SAAS;IAC9B,WAAW;IACX,eAAe;AACnB;;AAEA;;+BAE+B;AAC/B,eAAe;;AAEf,qCAAqC;AACrC;IAGI,WAAW,EAAE,sCAAsC;AACvD;;AAEA;IAEI,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;;+BAE+B;AAC/B;IACI,WAAW;AACf;AACA;IACI,kBAAkB;IAClB,oBAAoB;IACpB,+BAA+B;AACnC;AACA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;AACA;IACI,kBAAkB;AACtB;AACA;IAEI,qBAAqB;IACrB,uBAAuB;IACvB,mBAAmB;IACnB,gBAAgB;IAChB,sBAAsB;AAC1B;AACA;IACI,cAAc;AAClB;AACA;IACI,iBAAiB;IACjB,cAAc;AAClB;AACA;IACI,kBAAkB;IAClB,WAAW;AACf;AACA;IAII,kBAAkB;IAClB,SAAS;IACT,WAAW;AACf;AACA;IAGI,gBAAgB;AACpB;AACA;IAEI,oDAAoD;IACpD,cAAc;IACd,iBAAiB;IACjB,mBAAmB;IACnB,eAAe;;IAEf,kBAAkB;IAClB,WAAW;AACf;AACA;IACI,gBAAgB;AACpB;;AAEA,qBAAqB;AACrB;IACI,qBAAqB;IACrB,YAAY;IACZ,gBAAgB;AACpB;AACA;IACI,oBAAoB,EAAE,gGAAgG;IACtH,6BAA6B;AACjC;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,qBAAqB;AACzB;;AAEA;IACI,yEAAyE;AAC7E;;AAEA;IACI,uEAAuE;AAC3E;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,qBAAqB;AACzB;;AAEA;IACI,yEAAyE;AAC7E;;AAEA;IACI,uEAAuE;AAC3E;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;IAClB,0BAA0B;AAC9B;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;AACd;;AAEA;;+BAE+B;AAC/B;IACI,cAAc;AAClB;AACA;IACI,oBAAoB;AACxB;AACA;IACI,iBAAiB;AACrB;AACA;IACI,iDAAiD;AACrD;AACA;IACI,qBAAqB;AACzB;;AAEA,oCAAoC;AACpC;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,mBAAmB;AACvB;;AAEA;IACI,aAAa,EAAE,oCAAoC;AACvD;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,UAAU;IACV,cAAc;IACd,WAAW;IACX,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA,uEAAuE;AACvE;IACI;QACI,aAAa;IACjB;;IAEA;QACI,aAAa;IACjB;AACJ',
						sourcesContent: [
							":global .connections-title-container h3 {\n    display: -webkit-box;\n    overflow: hidden;\n    max-height: 130px;\n    margin-top: 15px;\n    text-overflow: ellipsis;\n    -webkit-line-clamp: 4;\n    -webkit-box-orient: vertical;\n}\n\n:global .connections .account-status {\n    font-family: 'connect-icons';\n    speak: none;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n\n    /* Better Font Rendering =========== */\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n\n    /* Custom CSS to overwrite Bootstrap */\n    background-image: none;\n    display: inline-block;\n    margin: 0 10px;\n    position: relative;\n}\n\n:global .connections .account-status:after {\n    width: 18px;\n    height: 18px;\n    line-height: 18px;\n    border-radius: 50%;\n    display: inline-block;\n    text-align: center;\n    content: '\\e019'; /* arrow icon */\n    background: #e6e6e6;\n    color: #fff;\n    font-size: 10px;\n    vertical-align: middle;\n    margin-top: -2px;\n}\n\n:global .connections .social-account-list .social-account-entry:not(.active):hover .account-status:after {\n    background: #50b012; /* green */\n}\n\n:global .connections .social-account-list .active .account-status:after,\n:global .connections .social-account-section .account-status:after,\n:global .connections .widget-takeover .account-status:after {\n    content: '\\2714'; /* checkmark icon */\n    background: #11a9ed; /* blue */\n    color: #fff;\n    font-size: 14px;\n}\n\n/*  ======================\n      Connections Page\n      ======================  */\n/* right rail */\n\n/* connections and followers tweaks */\n:global .connections.page .grid-list .entry .span5,\n:global .connections-connections.page .grid-list .entry .span5,\n:global .connections.page .search-result .entry > .span3 {\n    width: 88px; /* forcing fixed width on the avatar */\n}\n\n:global .connections.page .grid-list .entry,\n:global .connections-connections.page .grid-list .entry {\n    min-height: 99px;\n    margin-bottom: 30px;\n}\n\n:global .page.connections .search-result .entry {\n    margin-bottom: 22px;\n}\n\n/*  ======================\n      Connections List\n      ======================  */\n:global .connections-inline-list {\n    width: 100%;\n}\n:global .connections-inline-list .connection {\n    position: relative;\n    margin-bottom: 5.5px;\n    padding: 5.5px 22px 5.5px 5.5px;\n}\n:global .connections-inline-list .connection:nth-child(2n) {\n    border-radius: 6px;\n    background: #ededed;\n}\n:global .connections-inline-list .avatar {\n    margin-right: 11px;\n}\n:global .connections-inline-list .connection-name,\n:global .connections-inline-list .connection-name + .connection-username {\n    display: inline-block;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n    vertical-align: middle;\n}\n:global .connections-inline-list .connection-name {\n    max-width: 45%;\n}\n:global .connections-inline-list .connection-name + .connection-username {\n    margin-left: 11px;\n    max-width: 20%;\n}\n:global .connections-inline-list .connection-username {\n    margin-right: 11px;\n    color: #888;\n}\n:global .connections-inline-list .connection-you .label,\n:global .connections-inline-list .btn,\n:global .connections-inline-list .connection-action-taken,\n:global .connections-inline-list .connection-type {\n    position: absolute;\n    top: 15px;\n    right: 11px;\n}\n:global .connections-inline-list .btn-small,\n:global .connections-inline-list .connection-action-taken,\n:global .connections-inline-list .connection-type {\n    min-width: 100px;\n}\n:global .connections-inline-list .connection-action-taken,\n:global .connections-inline-list .connection-type {\n    /* mimics button styles, but action has been taken */\n    padding: 3px 0;\n    line-height: 16px;\n    vertical-align: top;\n    font-size: 11px;\n\n    text-align: center;\n    color: #555;\n}\n:global .connections-inline-list + p {\n    margin-top: 22px;\n}\n\n/* Connect Checkbox */\n:global .connections-inline-list .connect-checkbox {\n    display: inline-block;\n    float: right;\n    margin-top: 10px;\n}\n:global .page.connections .search-result .social-account-section {\n    padding-bottom: 15px; /*Usually 11px for a small, but since 4px is taken for the icon, this has been updated to 15px.*/\n    border-bottom: 1px solid #ddd;\n}\n\n:global .page.connections .search-result .social-account-message {\n    border: none;\n}\n\n:global .connections .search-result .social-account-status {\n    margin: 0;\n}\n\n:global .page.connections .social-account-button {\n    width: 14px;\n    height: 14px;\n    display: inline-block;\n}\n\n:global .page.connections .social-account-button.facebook {\n    background: url(/modern/images/social-icons/facebook-sprite.png) 0 0/14px;\n}\n\n:global .page.connections .social-account-button.google {\n    background: url(/modern/images/social-icons/google-sprite.png) 0 0/14px;\n}\n\n:global .page.connections .search-result .social-account-icon {\n    width: 20px;\n    height: 20px;\n    display: inline-block;\n}\n\n:global .page.connections .social-account-icon.facebook {\n    background: url(/modern/images/social-icons/facebook-sprite.png) 0 0/20px;\n}\n\n:global .page.connections .social-account-icon.google {\n    background: url(/modern/images/social-icons/google-sprite.png) 0 0/20px;\n}\n\n:global .page.connections .social-icon-container {\n    position: relative;\n    line-height: 68px;\n    width: 60px;\n    height: 60px;\n    margin-top: -4px;\n    margin-right: 11px;\n    text-align: center;\n    border-radius: 50%;\n    box-shadow: 0 0 0 2px #ccc;\n}\n\n:global .page.connections .social-icon-container .account-status {\n    position: absolute;\n    top: 42px;\n    left: 30px;\n}\n\n/*  ======================\n      Connections Modal\n      ======================  */\n:global .mutual-connections.modal .row {\n    margin-left: 0;\n}\n:global .mutual-connections.modal .entry {\n    padding-bottom: 20px;\n}\n:global .mutual-connections.modal .entry + .entry {\n    padding-top: 20px;\n}\n:global .mutual-connections.modal .entry:not(:last-child) {\n    border-bottom: 1px solid rgba(221, 221, 221, 0.3);\n}\n:global .mutual-connections.modal .modal-body .entry-content {\n    word-wrap: break-word;\n}\n\n/* Search Icon For Connections Tab */\n:global .page.connections .nav-tabs > li > a i.icon-search {\n    padding: 1px 0 0 0;\n}\n\n:global .newsfeedLink {\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom: 10px;\n}\n\n:global .span4.newsfeedLink.desktop {\n    display: flex; /* Override display block of span4 */\n}\n\n:global .newsfeedLink.mobile {\n    display: none;\n}\n\n:global .newsfeedUnreadBubble {\n    background: #1976d2;\n    border-radius: 50%;\n    z-index: 1;\n    min-width: 6px;\n    height: 6px;\n    position: absolute;\n    margin-left: 22px;\n}\n\n/* To align the width setting for [class*='span'] in _BootstrapB.scss */\n@media (max-width: 1049px) {\n    :global .newsfeedLink.mobile {\n        display: flex;\n    }\n\n    :global .span4.newsfeedLink.desktop {\n        display: none;\n    }\n}\n",
						],
						sourceRoot: '',
					},
				]),
					(r.locals = {
						'connections-title-container': 'connections-title-container',
						connections: 'connections',
						'account-status': 'account-status',
						'social-account-list': 'social-account-list',
						'social-account-entry': 'social-account-entry',
						active: 'active',
						'social-account-section': 'social-account-section',
						'widget-takeover': 'widget-takeover',
						page: 'page',
						'grid-list': 'grid-list',
						entry: 'entry',
						span5: 'span5',
						'connections-connections': 'connections-connections',
						'search-result': 'search-result',
						span3: 'span3',
						'connections-inline-list': 'connections-inline-list',
						connection: 'connection',
						avatar: 'avatar',
						'connection-name': 'connection-name',
						'connection-username': 'connection-username',
						'connection-you': 'connection-you',
						label: 'label',
						btn: 'btn',
						'connection-action-taken': 'connection-action-taken',
						'connection-type': 'connection-type',
						'btn-small': 'btn-small',
						'connect-checkbox': 'connect-checkbox',
						'social-account-message': 'social-account-message',
						'social-account-status': 'social-account-status',
						'social-account-button': 'social-account-button',
						facebook: 'facebook',
						google: 'google',
						'social-account-icon': 'social-account-icon',
						'social-icon-container': 'social-icon-container',
						'mutual-connections': 'mutual-connections',
						modal: 'modal',
						row: 'row',
						'modal-body': 'modal-body',
						'entry-content': 'entry-content',
						'nav-tabs': 'nav-tabs',
						'icon-search': 'icon-search',
						newsfeedLink: 'newsfeedLink',
						span4: 'span4',
						desktop: 'desktop',
						mobile: 'mobile',
						newsfeedUnreadBubble: 'newsfeedUnreadBubble',
					});
				const o = r;
			},
			120897: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = r()(a());
				l.i(o.A, '', !0),
					l.push([
						e.id,
						`.header-nav-item .header-nav-menu .js-new-requests-link > .new-items-alert {\n    position: absolute;\n    right: 9px;\n    top: 14px;\n    z-index: 1;\n    padding: 0;\n    min-width: 8px;\n    width: 8px;\n    height: 8px;\n}\n\n.header-nav-item.notifications .request-item .notification-body {\n    padding-left: 26px;\n}\n\n.header-nav-item.notifications .request-item.unread {\n    background-color: inherit;\n}\n\n.header-nav-item.notifications .request-item.unread:hover {\n    background-color: ${o.A.locals.lightui_surface_1};\n}\n\n.header-nav-item.notifications .request-item.unread::after {\n    content: '';\n    width: 8px;\n    height: 8px;\n    background-color: ${o.A.locals.blue_primary};\n    border-radius: 50%;\n    display: block;\n    position: absolute;\n    left: 8px;\n    top: 42px;\n    transform: translate(0, -50%);\n}\n.header-nav-item.notifications .request-item.inbox-link.unread::after {\n    top: 37px;\n}\n\n.header-nav-item.notifications .request-item.inbox-link {\n    text-decoration: none;\n    align-items: center;\n    padding-left: 26px;\n}\n.header-nav-item.notifications .request-item.inbox-link:hover {\n    background-color: ${o.A.locals.lightui_surface_1};\n}\n.header-nav-item.notifications .request-item.inbox-link :nth-child(2) {\n    flex-grow: 1;\n}\n.header-nav-item.notifications .request-item.inbox-link .inbox-link-request-images {\n    position: relative;\n    width: 40px;\n    height: 40px;\n    margin-right: 10px;\n}\n.header-nav-item.notifications .request-item.inbox-link .inbox-link-request-images > img {\n    position: absolute;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n}\n.header-nav-item.notifications .request-item.inbox-link .inbox-link-request-images > img:first-child {\n    position: absolute;\n    left: 0;\n    top: 0;\n}\n.header-nav-item.notifications .request-item.inbox-link .inbox-link-request-images > img:last-child {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    z-index: 1;\n}\n\n.header-nav-item.notifications .notification-item .notification-body {\n    padding-left: 26px;\n}\n\n.header-nav-item.notifications .notification-item.unread {\n    background-color: inherit;\n}\n\n.header-nav-item.notifications .notification-item.unread::after {\n    content: '';\n    width: 8px;\n    height: 8px;\n    background-color: ${o.A.locals.blue_primary};\n    border-radius: 50%;\n    display: block;\n    position: absolute;\n    left: 8px;\n    top: 50%;\n    transform: translate(0, -50%);\n}\n\n.header-nav-item.notifications .notification-item:hover {\n    background-color: ${o.A.locals.lightui_surface_1};\n}\n.header-nav-item.notifications .notification-item.unread:hover {\n    background-color: ${o.A.locals.lightui_surface_1};\n}\n\n.header-nav-item.notifications .request-item .inbox-response {\n    font-size: 12px;\n    color: ${o.A.locals.textMedium};\n}\n`,
						'',
						{
							version: 3,
							sources: [
								'webpack://./src/styles/notificationsPopupMenu.module.css',
							],
							names: [],
							mappings:
								'AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,SAAS;IACT,UAAU;IACV,UAAU;IACV,cAAc;IACd,UAAU;IACV,WAAW;AACf;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,8DAAmC;AACvC;;AAEA;IACI,WAAW;IACX,UAAU;IACV,WAAW;IACX,8DAA8B;IAC9B,kBAAkB;IAClB,cAAc;IACd,kBAAkB;IAClB,SAAS;IACT,SAAS;IACT,6BAA6B;AACjC;AACA;IACI,SAAS;AACb;;AAEA;IACI,qBAAqB;IACrB,mBAAmB;IACnB,kBAAkB;AACtB;AACA;IACI,8DAAmC;AACvC;AACA;IACI,YAAY;AAChB;AACA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,kBAAkB;AACtB;AACA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,kBAAkB;AACtB;AACA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;AACV;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,UAAU;AACd;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,WAAW;IACX,UAAU;IACV,WAAW;IACX,8DAA8B;IAC9B,kBAAkB;IAClB,cAAc;IACd,kBAAkB;IAClB,SAAS;IACT,QAAQ;IACR,6BAA6B;AACjC;;AAEA;IACI,8DAAmC;AACvC;AACA;IACI,8DAAmC;AACvC;;AAEA;IACI,eAAe;IACf,mDAAiB;AACrB',
							sourcesContent: [
								"@value (blue_primary, lightui_surface_1, textMedium) from 'ui-connect/styles/colors.module.css';\n\n:global .header-nav-item .header-nav-menu .js-new-requests-link > .new-items-alert {\n    position: absolute;\n    right: 9px;\n    top: 14px;\n    z-index: 1;\n    padding: 0;\n    min-width: 8px;\n    width: 8px;\n    height: 8px;\n}\n\n:global .header-nav-item.notifications .request-item .notification-body {\n    padding-left: 26px;\n}\n\n:global .header-nav-item.notifications .request-item.unread {\n    background-color: inherit;\n}\n\n:global .header-nav-item.notifications .request-item.unread:hover {\n    background-color: lightui_surface_1;\n}\n\n:global .header-nav-item.notifications .request-item.unread::after {\n    content: '';\n    width: 8px;\n    height: 8px;\n    background-color: blue_primary;\n    border-radius: 50%;\n    display: block;\n    position: absolute;\n    left: 8px;\n    top: 42px;\n    transform: translate(0, -50%);\n}\n:global .header-nav-item.notifications .request-item.inbox-link.unread::after {\n    top: 37px;\n}\n\n:global .header-nav-item.notifications .request-item.inbox-link {\n    text-decoration: none;\n    align-items: center;\n    padding-left: 26px;\n}\n:global .header-nav-item.notifications .request-item.inbox-link:hover {\n    background-color: lightui_surface_1;\n}\n:global .header-nav-item.notifications .request-item.inbox-link :nth-child(2) {\n    flex-grow: 1;\n}\n:global .header-nav-item.notifications .request-item.inbox-link .inbox-link-request-images {\n    position: relative;\n    width: 40px;\n    height: 40px;\n    margin-right: 10px;\n}\n:global .header-nav-item.notifications .request-item.inbox-link .inbox-link-request-images > img {\n    position: absolute;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n}\n:global .header-nav-item.notifications .request-item.inbox-link .inbox-link-request-images > img:first-child {\n    position: absolute;\n    left: 0;\n    top: 0;\n}\n:global .header-nav-item.notifications .request-item.inbox-link .inbox-link-request-images > img:last-child {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    z-index: 1;\n}\n\n:global .header-nav-item.notifications .notification-item .notification-body {\n    padding-left: 26px;\n}\n\n:global .header-nav-item.notifications .notification-item.unread {\n    background-color: inherit;\n}\n\n:global .header-nav-item.notifications .notification-item.unread::after {\n    content: '';\n    width: 8px;\n    height: 8px;\n    background-color: blue_primary;\n    border-radius: 50%;\n    display: block;\n    position: absolute;\n    left: 8px;\n    top: 50%;\n    transform: translate(0, -50%);\n}\n\n:global .header-nav-item.notifications .notification-item:hover {\n    background-color: lightui_surface_1;\n}\n:global .header-nav-item.notifications .notification-item.unread:hover {\n    background-color: lightui_surface_1;\n}\n\n:global .header-nav-item.notifications .request-item .inbox-response {\n    font-size: 12px;\n    color: textMedium;\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(l.locals = {
						blue_primary: `${o.A.locals.blue_primary}`,
						lightui_surface_1: `${o.A.locals.lightui_surface_1}`,
						textMedium: `${o.A.locals.textMedium}`,
						'header-nav-item': 'header-nav-item',
						'header-nav-menu': 'header-nav-menu',
						'js-new-requests-link': 'js-new-requests-link',
						'new-items-alert': 'new-items-alert',
						notifications: 'notifications',
						'request-item': 'request-item',
						'notification-body': 'notification-body',
						unread: 'unread',
						'inbox-link': 'inbox-link',
						'inbox-link-request-images': 'inbox-link-request-images',
						'notification-item': 'notification-item',
						'inbox-response': 'inbox-response',
					});
				const c = l;
			},
			747816: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = r()(a());
				l.i(o.A, '', !0),
					l.push([
						e.id,
						`.settings .settings-container {\n    max-width: 650px;\n}\n.settings label.label-90 {\n    width: 90px;\n    display: inline-block;\n    float: left;\n}\n/*ADDING CSS TO MAKE THE LABEL-90 CHECKBOXES CLICKABLE*/\n.settings .checkbox {\n    position: relative;\n    z-index: 1;\n}\n.settings table td.centered {\n    text-align: center;\n}\n/*  ======================\n      Unselected Label\n      ======================  */\n.settings .radio-buttons label {\n    display: inline-block;\n    position: relative;\n    padding: 0;\n    vertical-align: top;\n    cursor: pointer;\n    -webkit-transition: all 0.3s;\n    transition: all 0.3s;\n}\n.settings .radio-checkbox input[type='checkbox'], .settings .radio-buttons input[type='radio'] {\n    opacity: 0;\n    -webkit-appearance: none;\n    display: inline-block;\n    vertical-align: middle;\n    z-index: 100;\n}\n/*BORDER OF CHECK BOX*/\n/*this is to line up the radio buttons with the other form elements*/\n.settings .settings-container .controls-row [class*='span']:first-child {\n    margin-left: 0;\n}\n.settings .radio-buttons label::before {\n    content: '';\n    -webkit-transition: opacity 0.3s;\n    transition: opacity 0.3s;\n}\n.settings .checkbox-buttons input[type='checkbox'] + label, .settings .radio-buttons input[type='radio'] + label {\n    width: calc(100% - 20px);\n    color: ${o.A.locals.textDark};\n    padding: 10px;\n    margin-top: -20px;\n    text-align: center;\n    border-radius: 4px;\n    background-color: ${o.A.locals.white};\n    border: 1px solid #ccc;\n    box-shadow: 0 2px 0 #eee;\n}\n.settings .checkbox-buttons input[type='checkbox']:checked + label, .settings .radio-buttons input[type='radio']:checked + label {\n    color: ${o.A.locals.textDark};\n    background: ${o.A.locals.green_light_1};\n    border: 1px solid ${o.A.locals.green_dark_3};\n    -webkit-transition: all 0.3s;\n    transition: all 0.3s;\n}\n/*this helps the "display" text line up with the on/off switch*/\n.settings label.inline-block {\n    display: inline-block;\n    min-width: 50px;\n    margin-top: 5px;\n}\n.settings .profile-photo img {\n    background-size: 200px 200px;\n    border-radius: 7px;\n}\n/*this makes the firts checkbox in a column line up properly*/\n.settings .controls-row [class*='span']:first-child {\n    margin-left: 2.564102564102564%;\n}\n/* No greater than 900px, no less than 400px */\n@media (max-width: 1199px) and (min-width: 980px) {\n    .settings .controls-row [class*='span']:first-child {\n        margin-left: 1.4%;\n    }\n}\n.settings .personal-info .controls-row [class*='span']:first-child {\n    margin-left: 0;\n}\n/*This is for the save /cancel buttons on the inline-edit fields*/\n.settings .controls-row .inline-edit button {\n    margin-top: 4px;\n    margin-left: 3px;\n}\n/* Notification Settings Group Toggle Component */\n.toggle-group .control-group, .toggle-group .toggle-parent h6 {\n    margin-bottom: 0;\n}\n.toggle-group .toggle-child h6, .toggle-group .toggle-child > label {\n    margin-left: 20px;\n}\n.toggle-group .toggle-child > label {\n    clear: left;\n}\n.toggle-group .control-group > label {\n    float: left;\n}\n.toggle-group .btn-switch-container {\n    float: right;\n}\n/* Disabled Styles */\n.toggle-group .toggle-child.disabled input {\n    display: none;\n}\n.toggle-group .toggle-child.disabled label {\n    cursor: default;\n}\n.toggle-group .toggle-child.disabled .checkbox {\n    padding-left: 0;\n}\n.hydration-info-label {\n    font-size: 12px;\n    color: ${o.A.locals.textMedium};\n    max-width: 500px;\n}\n.hydration-settings-heading {\n    display: flex;\n}\n.hydration-info-containers h6 {\n    font-weight: 300;\n}\n.menstrual-cycle-tracking-settings-container .menstrual-cycle-tracking-sub-item {\n    padding-left: 40px;\n}\n.menstrual-cycle-tracking-sub-item .content-no-wrap {\n    white-space: nowrap;\n}\n.fertile-window-prediction-checkbox[disabled] + label, .period-prediction-checkbox[disabled] + label {\n    transition: width 0.5s;\n    opacity: 0.3;\n}\n.menstrual-cycle-tracking-settings-container .settings-container label {\n    word-break: break-all;\n}\n.menstrual-cycle-tracking-settings-container .settings-container label:nth-child(2n + 3) {\n    clear: both;\n}\n.disabled-label {\n    opacity: 0.5;\n}\n.to-lowercase {\n    text-transform: lowercase;\n}\n.predictions-information {\n    font-size: 12px;\n    color: ${o.A.locals.textMedium};\n}\n@media (max-width: 767px) {\n    .settings .input-large {\n        width: 210px;\n    }\n    .settings .input-prepend input.input-xsmall, .input-append input.input-xsmall {\n        width: 18px;\n    }\n    .settings .input-prepend input.input-mini, .input-append input.input-mini {\n        width: 30px;\n    }\n    .settings .input-prepend input.input-small, .input-append input.input-small {\n        width: 60px;\n    }\n}\n@media (max-width: 480px) {\n    .hydration-info-containers {\n        margin-left: 0;\n    }\n}\n.settings-container .flex-table {\n    display: flex;\n    flex-flow: column nowrap;\n    border-top: 1px solid #eee;\n    border-width: 1px 0;\n    margin-bottom: -1px;\n    margin-top: 5px;\n}\n.settings-container .flex-row {\n    display: flex;\n    margin-left: 0px;\n}\n.settings-container .flex-row.top-m {\n    margin-top: 20px;\n}\n.settings-container .flex-row.app-header {\n    margin-top: 30px;\n    margin-bottom: -20px;\n}\n.settings-container .flex-col {\n    flex-basis: 100%;\n    padding-top: 5px;\n    padding-bottom: 5px;\n}\n.settings-container .flex-col.right-align {\n    text-align: right;\n    padding-right: 10px;\n    padding-left: 30px;\n    flex: 1;\n}\n.settings-container .flex-col.left-align {\n    text-align: left;\n    padding-left: 10px;\n    flex: 2;\n}\n.settings-container .flex-col.center-align {\n    display: flex;\n    justify-content: center;\n}\n.option-spacing-right {\n    margin-right: 30px;\n}\n.privacy-action-button {\n    font-size: 14px;\n    text-align: left;\n}\n.notificationItem {\n    display: -webkit-box;\n    -webkit-line-clamp: 4;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    -webkit-box-orient: vertical !important;\n    /* autoprefixer: off */\n}\n`,
						'',
						{
							version: 3,
							sources: ['webpack://./src/styles/settings.page.module.css'],
							names: [],
							mappings:
								'AACA;IACI,gBAAgB;AACpB;AACA;IACI,WAAW;IACX,qBAAqB;IACrB,WAAW;AACf;AACA,uDAAuD;AACvD;IACI,kBAAkB;IAClB,UAAU;AACd;AACA;IACI,kBAAkB;AACtB;AACA;;+BAE+B;AAC/B;IACI,qBAAqB;IACrB,kBAAkB;IAClB,UAAU;IACV,mBAAmB;IACnB,eAAe;IACf,4BAA4B;IAC5B,oBAAoB;AACxB;AACA;IAEI,UAAU;IACV,wBAAwB;IACxB,qBAAqB;IACrB,sBAAsB;IACtB,YAAY;AAChB;AACA,sBAAsB;AACtB,oEAAoE;AACpE;IACI,cAAc;AAClB;AACA;IACI,WAAW;IACX,gCAAgC;IAChC,wBAAwB;AAC5B;AACA;IAEI,wBAAwB;IACxB,mDAAe;IACf,aAAa;IACb,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;IAClB,8DAAuB;IACvB,sBAAsB;IACtB,wBAAwB;AAC5B;AACA;IAEI,mDAAe;IACf,wDAAyB;IACzB,8DAA8B;IAC9B,4BAA4B;IAC5B,oBAAoB;AACxB;AACA,+DAA+D;AAC/D;IACI,qBAAqB;IACrB,eAAe;IACf,eAAe;AACnB;AACA;IACI,4BAA4B;IAC5B,kBAAkB;AACtB;AACA,6DAA6D;AAC7D;IACI,+BAA+B;AACnC;AACA,8CAA8C;AAC9C;IACI;QACI,iBAAiB;IACrB;AACJ;AACA;IACI,cAAc;AAClB;AACA,iEAAiE;AACjE;IACI,eAAe;IACf,gBAAgB;AACpB;AACA,iDAAiD;AACjD;IAEI,gBAAgB;AACpB;AACA;IAEI,iBAAiB;AACrB;AACA;IACI,WAAW;AACf;AACA;IACI,WAAW;AACf;AACA;IACI,YAAY;AAChB;AACA,oBAAoB;AACpB;IACI,aAAa;AACjB;AACA;IACI,eAAe;AACnB;AACA;IACI,eAAe;AACnB;AACA;IACI,eAAe;IACf,mDAAiB;IACjB,gBAAgB;AACpB;AACA;IACI,aAAa;AACjB;AACA;IACI,gBAAgB;AACpB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,mBAAmB;AACvB;AACA;IAEI,sBAAsB;IACtB,YAAY;AAChB;AACA;IACI,qBAAqB;AACzB;AACA;IACI,WAAW;AACf;AACA;IACI,YAAY;AAChB;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,eAAe;IACf,mDAAiB;AACrB;AACA;IACI;QACI,YAAY;IAChB;IACA;QAEI,WAAW;IACf;IACA;QAEI,WAAW;IACf;IACA;QAEI,WAAW;IACf;AACJ;AACA;IACI;QACI,cAAc;IAClB;AACJ;AACA;IACI,aAAa;IACb,wBAAwB;IACxB,0BAA0B;IAC1B,mBAAmB;IACnB,mBAAmB;IACnB,eAAe;AACnB;AACA;IACI,aAAa;IACb,gBAAgB;AACpB;AACA;IACI,gBAAgB;AACpB;AACA;IACI,gBAAgB;IAChB,oBAAoB;AACxB;AACA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,mBAAmB;AACvB;AACA;IACI,iBAAiB;IACjB,mBAAmB;IACnB,kBAAkB;IAClB,OAAO;AACX;AACA;IACI,gBAAgB;IAChB,kBAAkB;IAClB,OAAO;AACX;AACA;IACI,aAAa;IACb,uBAAuB;AAC3B;AACA;IACI,kBAAkB;AACtB;AACA;IACI,eAAe;IACf,gBAAgB;AACpB;AACA;IACI,oBAAoB;IACpB,qBAAqB;IACrB,uBAAuB;IACvB,gBAAgB;IAChB,uCAAuC;IACvC,sBAAsB;AAC1B',
							sourcesContent: [
								"@value ( black, white, textMedium, textDark, green_light_1, green_dark_3 ) from 'ui-connect/styles/colors.module.css';\n:global .settings .settings-container {\n    max-width: 650px;\n}\n:global .settings label.label-90 {\n    width: 90px;\n    display: inline-block;\n    float: left;\n}\n/*ADDING CSS TO MAKE THE LABEL-90 CHECKBOXES CLICKABLE*/\n:global .settings .checkbox {\n    position: relative;\n    z-index: 1;\n}\n:global .settings table td.centered {\n    text-align: center;\n}\n/*  ======================\n      Unselected Label\n      ======================  */\n:global .settings .radio-buttons label {\n    display: inline-block;\n    position: relative;\n    padding: 0;\n    vertical-align: top;\n    cursor: pointer;\n    -webkit-transition: all 0.3s;\n    transition: all 0.3s;\n}\n:global .settings .radio-checkbox input[type='checkbox'],\n:global .settings .radio-buttons input[type='radio'] {\n    opacity: 0;\n    -webkit-appearance: none;\n    display: inline-block;\n    vertical-align: middle;\n    z-index: 100;\n}\n/*BORDER OF CHECK BOX*/\n/*this is to line up the radio buttons with the other form elements*/\n:global .settings .settings-container .controls-row [class*='span']:first-child {\n    margin-left: 0;\n}\n:global .settings .radio-buttons label::before {\n    content: '';\n    -webkit-transition: opacity 0.3s;\n    transition: opacity 0.3s;\n}\n:global .settings .checkbox-buttons input[type='checkbox'] + label,\n:global .settings .radio-buttons input[type='radio'] + label {\n    width: calc(100% - 20px);\n    color: textDark;\n    padding: 10px;\n    margin-top: -20px;\n    text-align: center;\n    border-radius: 4px;\n    background-color: white;\n    border: 1px solid #ccc;\n    box-shadow: 0 2px 0 #eee;\n}\n:global .settings .checkbox-buttons input[type='checkbox']:checked + label,\n:global .settings .radio-buttons input[type='radio']:checked + label {\n    color: textDark;\n    background: green_light_1;\n    border: 1px solid green_dark_3;\n    -webkit-transition: all 0.3s;\n    transition: all 0.3s;\n}\n/*this helps the \"display\" text line up with the on/off switch*/\n:global .settings label.inline-block {\n    display: inline-block;\n    min-width: 50px;\n    margin-top: 5px;\n}\n:global .settings .profile-photo img {\n    background-size: 200px 200px;\n    border-radius: 7px;\n}\n/*this makes the firts checkbox in a column line up properly*/\n:global .settings .controls-row [class*='span']:first-child {\n    margin-left: 2.564102564102564%;\n}\n/* No greater than 900px, no less than 400px */\n@media (max-width: 1199px) and (min-width: 980px) {\n    :global .settings .controls-row [class*='span']:first-child {\n        margin-left: 1.4%;\n    }\n}\n:global .settings .personal-info .controls-row [class*='span']:first-child {\n    margin-left: 0;\n}\n/*This is for the save /cancel buttons on the inline-edit fields*/\n:global .settings .controls-row .inline-edit button {\n    margin-top: 4px;\n    margin-left: 3px;\n}\n/* Notification Settings Group Toggle Component */\n:global .toggle-group .control-group,\n:global .toggle-group .toggle-parent h6 {\n    margin-bottom: 0;\n}\n:global .toggle-group .toggle-child h6,\n:global .toggle-group .toggle-child > label {\n    margin-left: 20px;\n}\n:global .toggle-group .toggle-child > label {\n    clear: left;\n}\n:global .toggle-group .control-group > label {\n    float: left;\n}\n:global .toggle-group .btn-switch-container {\n    float: right;\n}\n/* Disabled Styles */\n:global .toggle-group .toggle-child.disabled input {\n    display: none;\n}\n:global .toggle-group .toggle-child.disabled label {\n    cursor: default;\n}\n:global .toggle-group .toggle-child.disabled .checkbox {\n    padding-left: 0;\n}\n:global .hydration-info-label {\n    font-size: 12px;\n    color: textMedium;\n    max-width: 500px;\n}\n:global .hydration-settings-heading {\n    display: flex;\n}\n:global .hydration-info-containers h6 {\n    font-weight: 300;\n}\n:global .menstrual-cycle-tracking-settings-container .menstrual-cycle-tracking-sub-item {\n    padding-left: 40px;\n}\n:global .menstrual-cycle-tracking-sub-item .content-no-wrap {\n    white-space: nowrap;\n}\n:global .fertile-window-prediction-checkbox[disabled] + label,\n:global .period-prediction-checkbox[disabled] + label {\n    transition: width 0.5s;\n    opacity: 0.3;\n}\n:global .menstrual-cycle-tracking-settings-container .settings-container label {\n    word-break: break-all;\n}\n:global .menstrual-cycle-tracking-settings-container .settings-container label:nth-child(2n + 3) {\n    clear: both;\n}\n:global .disabled-label {\n    opacity: 0.5;\n}\n:global .to-lowercase {\n    text-transform: lowercase;\n}\n:global .predictions-information {\n    font-size: 12px;\n    color: textMedium;\n}\n@media (max-width: 767px) {\n    :global .settings .input-large {\n        width: 210px;\n    }\n    :global .settings .input-prepend input.input-xsmall,\n    :global .input-append input.input-xsmall {\n        width: 18px;\n    }\n    :global .settings .input-prepend input.input-mini,\n    :global .input-append input.input-mini {\n        width: 30px;\n    }\n    :global .settings .input-prepend input.input-small,\n    :global .input-append input.input-small {\n        width: 60px;\n    }\n}\n@media (max-width: 480px) {\n    :global .hydration-info-containers {\n        margin-left: 0;\n    }\n}\n:global .settings-container .flex-table {\n    display: flex;\n    flex-flow: column nowrap;\n    border-top: 1px solid #eee;\n    border-width: 1px 0;\n    margin-bottom: -1px;\n    margin-top: 5px;\n}\n:global .settings-container .flex-row {\n    display: flex;\n    margin-left: 0px;\n}\n:global .settings-container .flex-row.top-m {\n    margin-top: 20px;\n}\n:global .settings-container .flex-row.app-header {\n    margin-top: 30px;\n    margin-bottom: -20px;\n}\n:global .settings-container .flex-col {\n    flex-basis: 100%;\n    padding-top: 5px;\n    padding-bottom: 5px;\n}\n:global .settings-container .flex-col.right-align {\n    text-align: right;\n    padding-right: 10px;\n    padding-left: 30px;\n    flex: 1;\n}\n:global .settings-container .flex-col.left-align {\n    text-align: left;\n    padding-left: 10px;\n    flex: 2;\n}\n:global .settings-container .flex-col.center-align {\n    display: flex;\n    justify-content: center;\n}\n:global .option-spacing-right {\n    margin-right: 30px;\n}\n:global .privacy-action-button {\n    font-size: 14px;\n    text-align: left;\n}\n:global .notificationItem {\n    display: -webkit-box;\n    -webkit-line-clamp: 4;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    -webkit-box-orient: vertical !important;\n    /* autoprefixer: off */\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(l.locals = {
						black: `${o.A.locals.black}`,
						white: `${o.A.locals.white}`,
						textMedium: `${o.A.locals.textMedium}`,
						textDark: `${o.A.locals.textDark}`,
						green_light_1: `${o.A.locals.green_light_1}`,
						green_dark_3: `${o.A.locals.green_dark_3}`,
						settings: 'settings',
						'settings-container': 'settings-container',
						'label-90': 'label-90',
						checkbox: 'checkbox',
						centered: 'centered',
						'radio-buttons': 'radio-buttons',
						'radio-checkbox': 'radio-checkbox',
						'controls-row': 'controls-row',
						'checkbox-buttons': 'checkbox-buttons',
						'inline-block': 'inline-block',
						'profile-photo': 'profile-photo',
						'personal-info': 'personal-info',
						'inline-edit': 'inline-edit',
						'toggle-group': 'toggle-group',
						'control-group': 'control-group',
						'toggle-parent': 'toggle-parent',
						'toggle-child': 'toggle-child',
						'btn-switch-container': 'btn-switch-container',
						disabled: 'disabled',
						'hydration-info-label': 'hydration-info-label',
						'hydration-settings-heading': 'hydration-settings-heading',
						'hydration-info-containers': 'hydration-info-containers',
						'menstrual-cycle-tracking-settings-container':
							'menstrual-cycle-tracking-settings-container',
						'menstrual-cycle-tracking-sub-item':
							'menstrual-cycle-tracking-sub-item',
						'content-no-wrap': 'content-no-wrap',
						'fertile-window-prediction-checkbox':
							'fertile-window-prediction-checkbox',
						'period-prediction-checkbox': 'period-prediction-checkbox',
						'disabled-label': 'disabled-label',
						'to-lowercase': 'to-lowercase',
						'predictions-information': 'predictions-information',
						'input-large': 'input-large',
						'input-prepend': 'input-prepend',
						'input-xsmall': 'input-xsmall',
						'input-append': 'input-append',
						'input-mini': 'input-mini',
						'input-small': 'input-small',
						'flex-table': 'flex-table',
						'flex-row': 'flex-row',
						'top-m': 'top-m',
						'app-header': 'app-header',
						'flex-col': 'flex-col',
						'right-align': 'right-align',
						'left-align': 'left-align',
						'center-align': 'center-align',
						'option-spacing-right': 'option-spacing-right',
						'privacy-action-button': 'privacy-action-button',
						notificationItem: 'notificationItem',
					});
				const c = l;
			},
			95682: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => c });
				var n = i(457578),
					a = i.n(n),
					s = i(373866),
					r = i.n(s),
					o = i(722496),
					l = r()(a());
				l.i(o.A, '', !0),
					l.push([
						e.id,
						`.GdprLimitedFeatureAlert_limitedFeatureAlertText__ypnkK {\n    word-break: break-word;\n    margin: 10px 0;\n}\n.GdprLimitedFeatureAlert_limitedFeatureAlertText__ypnkK a {\n    color: ${o.A.locals.blue_primary};\n    cursor: pointer;\n}\n\n.GdprLimitedFeatureAlert_errorContainer__s\\+VWE {\n    margin-bottom: 20px;\n    border-radius: 5px;\n    padding: 15px;\n    color: ${o.A.locals.textLight};\n    border: none;\n    background: ${o.A.locals.red_dark_2};\n}\n`,
						'',
						{
							version: 3,
							sources: [
								'webpack://./src/utils/gdpr/GdprLimitedFeatureAlert.module.css',
							],
							names: [],
							mappings:
								'AACA;IACI,sBAAsB;IACtB,cAAc;AAClB;AACA;IACI,mDAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,aAAa;IACb,mDAAgB;IAChB,YAAY;IACZ,wDAAsB;AAC1B',
							sourcesContent: [
								"@value (blue_primary, red_dark_2, textLight) from 'ui-connect/styles/colors.module.css';\n.limitedFeatureAlertText {\n    word-break: break-word;\n    margin: 10px 0;\n}\n.limitedFeatureAlertText a {\n    color: blue_primary;\n    cursor: pointer;\n}\n\n.errorContainer {\n    margin-bottom: 20px;\n    border-radius: 5px;\n    padding: 15px;\n    color: textLight;\n    border: none;\n    background: red_dark_2;\n}\n",
							],
							sourceRoot: '',
						},
					]),
					(l.locals = {
						blue_primary: `${o.A.locals.blue_primary}`,
						red_dark_2: `${o.A.locals.red_dark_2}`,
						textLight: `${o.A.locals.textLight}`,
						limitedFeatureAlertText:
							'GdprLimitedFeatureAlert_limitedFeatureAlertText__ypnkK',
						errorContainer: 'GdprLimitedFeatureAlert_errorContainer__s+VWE',
					});
				const c = l;
			},
			166343: (e) => {
				e.exports =
					'<%= Localizer.localize(message, args) %>\n<a href="#" id="alert"><%- Localizer.localize(\'course_map_alert_dismiss\') %></a>\n';
			},
			253743: (e) => {
				e.exports =
					'<style type="text/css">\n    body.wait,\n    body.wait * {\n        cursor: wait !important;\n    }\n</style>\n\n<div class="system-message-container"></div>\n<div class="gdprLimitedFeatureAlert"></div>\n<div class="betaTestingEndedPrompt"></div>\n<div class="betaTesterPrompt"></div>\n<div class="new-homepage-message"></div>\n<% for (var i = 0; i < numColumns; i++) { %>\n<div class="widget-column ui-sortable" id="column-<%- i %>"></div>\n<% } %>\n';
			},
			942546: (e) => {
				e.exports =
					'<div class="system-message-container"></div>\n<div id="pageContainer">\n    <style type="text/css">\n        body.wait,\n        body.wait * {\n            cursor: wait !important;\n        }\n    </style>\n</div>\n';
			},
			58408: (e) => {
				e.exports =
					'<main id="embedContainer">\n    <style type="text/css">\n        body.wait,\n        body.wait * {\n            cursor: wait !important;\n        }\n    </style>\n</main>\n';
			},
			543448: (e) => {
				e.exports =
					'<% if (showCancelButton) { %>\n    <button class="btn btn-secondary cancel" data-dismiss="modal"><%- Localizer.localize(cancel_text_key) %></button>\n<% } %>\n<button\n    href="#"\n    class="btn btn-primary js-saveBtn btn-danger <%-footerPrimaryButtonClasses%>"\n><%- Localizer.localize(confirmation_text_key) %></button>';
			},
			535911: (e) => {
				e.exports =
					'<div class="modal-body">\n    <h5><%- Localizer.localize(\'data_storage_consent_required\') %></h5>\n\n    <div class="bottom-s"><%- Localizer.localize(\'data_storage_consent_required_message\') %></div>\n</div>\n<div class="modal-footer">\n    <div class="pull-right">\n        <a href="" class="btn btn-secondary cancel" data-dismiss="modal"><%- Localizer.localize(\'button_cancel\') %></a>\n        <a href="" class="btn btn-primary cancel" data-dismiss="modal"><%- Localizer.localize(\'button_continue\') %></a>\n    </div>\n</div>';
			},
			205911: (e) => {
				e.exports =
					'<div class="modal-body">\n    <p class="marBottomXS"><%- Localizer.localize(\'device_upload\') %></p>\n    <div class="btn-switch-container marBottomMD">\n        <div class="btn-switch btn-switch-checked">\n            <input type="checkbox" name="btn-switch" class="btn-switch-checkbox <%- checked && \'checked\' %>" id="accountDeviceSyncToggle">\n            <label class="btn-switch-label" for="accountDeviceSyncToggle">\n                <div class="btn-switch-inner"></div>\n                <div class="btn-switch-dial"></div>\n            </label>\n        </div>\n    </div>\n    <div class="bottom-s">\n        <%- Localizer.localize(\'garmin_device_upload_message\') %>\n    </div>\n</div>\n<div class="modal-footer">\n    <div class="pull-right">\n        <button class="btn btn-primary cancel" data-dismiss="modal"><%- Localizer.localize(\'button.done\') %></button>\n    </div>\n</div>';
			},
			99815: (e) => {
				e.exports =
					"<h5><%- Localizer.localize('allow_device_upload') %></h5>\n\n<div class=\"bottom-s\"><%- Localizer.localize('allow_device_upload_message') %></div>";
			},
			52846: (e) => {
				e.exports =
					"<p><%- Localizer.localize('gdpr_challenge') %></p>\n<% if(isVivokidChallenge) {%>\n<p><%- Localizer.localize('gdpr_vivofit_discaimer_body') %></p>\n<% } %>\n";
			},
			602629: (e) => {
				e.exports =
					'<span class="like">\n    <button class="like-link" aria-label="<%- Localizer.localize(\'icon_heart\') %>">   \n        <div class="like-icon animated <%- likedByUser ? \'tada\' : \'fadeIn\' %>">\n            <i class="<%- likedByUser ? \'icon-heart\' : \'icon-heart-inverted\' %>"></i>\n        </div>                 \n    </button>\n    <button class="like js-like-count" data-rel="tooltip" data-html="true" title="">\n        <%- numberOfLikes %>\n    </button>\n</span>';
			},
			894024: (e) => {
				e.exports =
					'<div>\n    <p class="comment-title">\n        <a class="colored profile-link" href="/profile/<%- comment.authorDisplayName %>"><%- comment.nameDisplayValue %></a>\n\n        <% if (comment.userProfilePk == viewerProfilePk || conversationOwnerPk == viewerProfilePk) { %>\n            <span class="deleteModal"></span>\n        <% }                                                                                    %>\n    </p>\n\n    <span class="like-modal-entry"></span>\n\n        <% if (comment.authorPro) { %>\n            \x3c!-- per UX, PRO is not translated --\x3e\n            <span class="label-pro"><i class="icon-checkmark"></i>PRO</span>\n        <% } %>\n    <p class="comment-body-text"></p>\n\n    \x3c!-- Delete Comment --\x3e\n\n    <div class="comment-actions">\n\n        \x3c!--date stamp--\x3e\n        <span class="data-stamp comment-data-stamp">\n            <% if (isPosting) { %>\n                <%- Localizer.localize(\'comments_posting\') %>\n            <% } else { %>\n                <%- dayDisplay %>\n                <% if (updated) { %>\n                    <span>\n                        <%- Localizer.localize(\'label_comment_edited\') %>\n                    </span>\n                <% } %>\n            <% } %>\n        </span>\n\n        \x3c!--Likes--\x3e\n        <span class="entry-like"></span>\n\n    </div>\n\n</div>';
			},
			532163: (e) => {
				e.exports =
					'<%\n    var commentPicUrl = comment.authorImageUrl || \'/web-images/profile/profile-pic-default.svg\';\n    var likeTextKey = comment.likedByUser ? \'unlike\' : \'like\';\n%>\n\n\x3c!--avatar--\x3e\n<div class="object-img pull-left">\n    <a class="profile-link" href="/profile/<%- comment.authorDisplayName %>">\n        <img\n            class="media-object avatar comment-avatar"\n            data-src="holder.js/64x64"\n            alt="<%- comment.nameDisplayValue %>"\n            src="<%- commentPicUrl %>"\n        >\n    </a>\n</div>\n\n\x3c!--comment content--\x3e\n<div class="media-body comment-body">\n    <div class="comment-body-content">\n    </div>\n\n</div>\n\x3c!--end comment content--\x3e\n\n\n\n\n\n\n\n\n\n';
			},
			790332: (e) => {
				e.exports =
					'<div class="comment-container">\n\n    <h6 class="comment-container-title"><%- Localizer.localize(\'comments\') %></h6>\n    <div class="show-previous-comments" style="display:none">\n        <a href="#"><%- Localizer.localize(\'show_previous_comments\') %><a/>\n    </div>\n\n    \x3c!--comment set--\x3e\n    <div class="comment-item">\n\n\n    </div>\n\n</div>\n\n\n\n\n\n\n\n';
			},
			805123: (e) => {
				e.exports =
					"<p><strong><%- Localizer.localize('device.set.activity.tracker.verify.MAT') %></strong></p>\n<p><%- Localizer.localize('device.set.activity.tracker.info.MAT') %></p>";
			},
			486014: (e) => {
				e.exports =
					'<div class="alert bottom-xs alert-<%- alertType %>">\n    <% if (preLocalized) { %>\n    <span><%- message %></span>\n    <% } else { %>\n    <span><%- Localizer.localize(message) %></span>\n    <% } %>\n\n    <% if (alertType === \'info\') { %>\n    <a href="#" class="how-to-sync-link"><%- Localizer.localize(\'how.to.sync.msg\') %></a>.\n    <% } %>\n</div>';
			},
			653960: (e) => {
				e.exports =
					'<a class="colored btn btn-reverse pull-left" href="<%- learnMoreUrl %>" target="_blank"><%- Localizer.localize(\'agent.learn.more\') %></a>\n<button class="btn btn-secondary" data-dismiss="modal"><%- Localizer.localize(\'button_cancel\') %></button>\n<button class="btn set-active"><%- Localizer.localize(\'device.set\') %></button>';
			},
			309037: (e) => {
				e.exports =
					'\n<div class="alert alert-error" style="display: none;">\n    <p><%- Localizer.localize(errorMessage) %></p>\n</div>\n<h6 class="bottom-xs"><%- Localizer.localize(addNoteMessage) %></h6>\n<textarea rows="5" class="input-block-level add-post-textarea" aria-label="<%- Localizer.localize(addNoteMessage) %>"><%- postValue%></textarea>\n<div class="pull-right">\n    <% if(showCancelBtn) { %>\n    <button class="add-note-cancel-btn btn btn-small top-xs btn-mini btn-secondary bottom-s cancel-post-button"><%- Localizer.localize(cancelMessage) %></button>\n    <% } %>\n    <button class="btn top-xs btn-small bottom-s add-group-button"><%- Localizer.localize(saveMessage) %></button>\n</div>';
			},
			472749: (e) => {
				e.exports =
					"<h6><strong><%- Localizer.localize('gdpr_connections_modal_title') %></strong></h6>\n<p><%- Localizer.localize('invite_to_join_group_gdpr_consent') %></p>";
			},
			771750: (e) => {
				e.exports =
					'<span style="position: relative; width: <%- circleDiameter %>; height: <%- circleDiameter %>; display: inline-block; background-color: <%- color %>; border-radius: 50%; color: <%- color %>; cursor: pointer; margin-right: <%- marginRight %>;" title="<%- title %>">\n</span>\n\n<% if (text === 0 || text) { %>\n\t<span style="display: block; position: absolute; left: 50%; margin-left: <%- textPosition %>;"><%- text %></span>\n<% } %>';
			},
			778727: (e) => {
				e.exports =
					'<div class="alert alert-error" style="<% if (!pageViewFailureMessage) { print(\'display:none;\'); } %>">\n    <span class="alert-text"><%- pageViewFailureMessage %></span>\n\n    <% if(growl) { %>\n    <a class="notification-dismiss" href="#"><%- Localizer.localize(\'dismiss\') %></a>\n    <% } %>\n</div>\n\n<div class="alert alert-success" style="<% if (!pageViewSuccessMessage) { print(\'display:none;\'); } %>">\n    <span class="alert-text"><%- pageViewSuccessMessage %></span>\n\n    <% if(growl) { %>\n    <a class="notification-dismiss" href="#"><%- Localizer.localize(\'dismiss\') %></a>\n    <% } %>\n</div>\n\n<div class="alert alert-info" style="<% if (!pageViewInfoMessage) { print(\'display:none;\'); } %>">\n    <span class="alert-text"><%= pageViewInfoMessage %></span>\n\n    <button type="button" class="close" aria-label="<%-\xa0Localizer.localize(\'close\')\xa0%>">\xd7</button>\n</div>\n';
			},
			303074: (e) => {
				e.exports =
					'<div class="row-fluid">\n    <div class="span12 center">\n        <p>\n            <a class="survey-link" href="<%- survey.url %>" target="_blank"><%- survey.text %></a>\n            <span class="icon-close js-close-survey-banner"></span>\n        </p>\n    </div>\n</div>';
			},
			36314: (e) => {
				e.exports =
					'<div id="queueNotification-error" class="alert alert-error hide">\n    <p><%- Localizer.localize(\'queue.error\') %></p>\n</div>\n<% if(userHasDevices) { %>\n    <div class="header-nav-menu-section section-header">\n        <h2 class="section-name"><%- Localizer.localize(\'devices.link\') %></h2>\n        <a href="<%- url(\'/activity-sync\') %>" class="colored how-to-sync js-how-to-sync"><%- Localizer.localize(\'how.to.sync.msg\') %></a>\n    </div>\n    <% if(showManageDevicePriority) { %>\n        <div class="header-nav-menu-section section-header">\n            <a href="<%- url(\'/settings/devicePriority\') %>" class="colored" aria-label="<%- Localizer.localize(\'navigate_to_device_priority\') %>"><%- Localizer.localize(\'manage_device_priority\') %></a>\n        </div>\n    <% } %>\n<% } else { %>\n<div class="empty-state">\n    <%= Localizer.localize(\'express.transfer.info\') %>\n</div>\n<% } %>';
			},
			578761: (e) => {
				e.exports =
					'<a class="logo" href="<%- url(\'/\') %>" title="<%- Localizer.localize(\'gc\') %>">\x3c!-- <span class="mobile-logo"></span> --\x3e</a>\n<div class="main-nav-list">\n    <ul class="main-nav-group dashboards">\n        \x3c!-- Dashboards --\x3e\n        <li class="main-nav-item js-dashboards">\n        </li>\n    </ul>\n\n    <% if(showMain){ %>\n        <ul class="main-nav-group main">\n        </ul>\n    <% } %>\n\n    <% if(showSocial){ %>\n        <ul class="main-nav-group social">\n        </ul>\n    <% } %>\n\n    <% if(showOther){ %>\n        <ul class="main-nav-group other">\n        </ul>\n    <% } %>\n\n    <ul class="main-nav-group info">\n        <li class="main-nav-item">\n            <a href="<%- activityTrackingAccuracyUrl %>" target="_blank" rel="noopener noreferrer" class="main-nav-link">\n                <i class="nav-icon icon-info-2"></i>\n                <span class="nav-text"><%- Localizer.localize(\'activity_tracking_accuracy\') %></span>\n            </a>\n        </li>\n    </ul>\n\n    <% if(beta.isAlphaUser){ \n        var betaKey = beta.isBetaPool ? \'beta_leave\' : \'beta_join\' ; %>\n        <button class="beta-switch"><%- Localizer.localize(betaKey) %></button>\n    <% } %>\n    <span class="empty-for-empty-react-component"></span>\n</div>';
			},
			528889: (e) => {
				e.exports =
					'<div class="header-controls">\n    <div class="main-nav-toggle">\n        <i class="icon-arrow-left" title="<%-\xa0Localizer.localize(\'icon_toggle\')\xa0%>"></i>\n        <i class="icon-menu" title="<%-\xa0Localizer.localize(\'widget_menu_title\')\xa0%>"></i>\n    </div>\n    <a class="logo" href="<%- url(\'/\') %>" title="Garmin Connect"></a>\n</div>\n\n<div class="header-nav">\n    <span class="max-connections-modal-placeholder"></span>\n    <span class="mutual-connections-modal-placeholder"></span>\n    <span class="group-request-error-modal-placeholder"></span>\n    <div class="header-nav-item upload-import">\n        <a href="#" class="header-nav-link icon-activity-upload" aria-label="<%- Localizer.localize(\'upload_or_import_activity\') %>"></a>\n        <div class="header-nav-menu">\n            <div class="header-nav-menu-section">\n                <ul>\n                    <li><a href="<%- url(\'/activity-sync\') %>" class="colored js-how-to-sync"><%- Localizer.localize(\'how.to.sync.msg\') %></a></li>\n                    <li><a href="<%- url(\'/import-data\') %>" class="colored js-import-data"><%- Localizer.localize(\'import.data\') %></a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n    <div class="header-nav-item notifications">\n        <a href="#" class="header-nav-link icon-inbox" aria-label="<%-\xa0Localizer.localize(\'requests_and_notifications\')\xa0%>">\n            <span class="new-items-alert hide"></span>\n        </a>\n        <div class="header-nav-menu"></div>\n    </div>\n\n    <div class="header-nav-item device-sync">\n        <a href="#" class="header-nav-link icon-devices" aria-label="<%-\xa0Localizer.localize(\'device_and_sync_status\')\xa0%>">\n            <span class="new-items-alert hide"></span>\n        </a>\n        <div class="header-nav-menu"></div>\n    </div>\n\n    <div class="header-nav-item user-profile">\n        <a href="#" class="header-nav-link">\n            <img class="avatar" alt="<%-\xa0Localizer.localize(\'profile_and_account\')\xa0%>" src="xxxHTMLLINKxxx0.9315241033608670.47660509752659497xxx">\n            <% if (isProductSupportMode) { %>\n                <span class="productSupportAvatar">PS</span>\n            <% } else if (actorAvatarUrl) { %>\n            <img class="actorAvatar" alt="<%-\xa0Localizer.localize(\'profile_and_account\')\xa0%>" src="<%- actorAvatarUrl %>">\n            <% } %>\n        </a>\n        <div class="header-nav-menu"></div>\n    </div>\n</div>\n\n<div class="header-snackbar"></div>\n<div class="widget-limit-error-dialog" style="display:none"></div>';
			},
			643954: (e) => {
				e.exports =
					'<% if(isReadOnly) { %>\n<div class="header-nav-menu-section readOnlySection">\n    <%- Localizer.localize(\'read_only_mode_alert_1\') %>\n</div>\n<% } %>\n<div class="header-nav-menu-section">\n    <div class="full-name h5">\n        <% if (userIsPro) { %>\n            \x3c!-- per UX, PRO is not translated --\x3e\n            <span class="label-pro"><i class="icon-checkmark"></i>PRO</span>\n        <% } %>\n        <%- fullName %>\n    </div>\n    <a href="<%- profileUrl %>" class="colored view-profile"><%- Localizer.localize(\'view_user_profile\') %></a>\n</div>\n\n<div class="header-nav-menu-section">\n    <ul>\n        <li><a href="<%- settingsUrl %>" class="colored account-settings"><%- Localizer.localize(\'account_settings\') %></a></li>\n    </ul>\n</div>\n\n<div class="header-nav-menu-section">\n    <ul>\n        <li><a href="<%- helpUrl %>" target="_blank" rel="noopener noreferrer" class="colored"><%- Localizer.localize(\'help.title\') %></a></li>\n        <li><a href="<%- statusUrl %>" target="_blank" rel="noopener noreferrer" class="colored"><%- Localizer.localize(\'status_text\') %></a></li>\n        <li><a href="#" class="sign-out colored"><%- isReadOnly ? Localizer.localize(\'exit_account\', fullName) : Localizer.localize(\'sign.out.title\') %></a></li>\n    </ul>\n</div>\n\n<div class="header-nav-menu-section header-nav-menu-bottom">\n    <p>\n        <a href="<%- termsOfUseUrl %>" target="_blank" rel="noopener noreferrer"><%- Localizer.localize(\'terms_of_use_text\') %></a>\n        &bull;\n        <a href="<%- privacyUrl %>" target="_blank" rel="noopener noreferrer"><%- Localizer.localize(\'privacy_text\') %></a>\n        &bull;\n        <a href="<%- securityUrl %>" target="_blank" rel="noopener noreferrer"><%- Localizer.localize(\'security_text\') %></a>\n    </p>\n\n    <p id="cookie_preferences_container"></p>\n    \n    <p><%- Localizer.localize(\'connect_copyright_text\', year) %></p>\n</div>';
			},
			657771: (e) => {
				e.exports =
					'<nav class="nav-widgets">\n    <header class="nav-widgets-header">\n        <h3><%- Localizer.localize(\'add_to_dashboard\') %></h3>\n        <p><%- Localizer.localize(\'select_widget\') %></p>\n    </header>\n    <ul class="nav-widgets-list"></ul>\n    <footer class="nav-widgets-footer">\n        <div class="nav-widgets-cancel"><%- Localizer.localize(\'cancel\') %></div>\n    </footer>\n</nav>';
			},
			537565: (e) => {
				e.exports =
					'<li><a href="<%- linkUrl %>" class="widget-add" title="<%- name %>" data-widget-definition-id="<%- widgetDefinitionId %>"><%- name %></a></li>';
			},
			110547: (e) => {
				e.exports =
					'<% if(htmlFormat) { %>\n    <%= message %>\n<% } else { %>\n    <% if(message2) { %>\n        <div class="modal-body-message-one"><%= message %></div>\n        <div class="modal-body-message-two"><%= message2 %></div>\n    <% } else { %>\n        <p><%= message %></p>\n    <% } %>\n<% } %>\n';
			},
			549848: (e) => {
				e.exports =
					'<% if (showHeader) { %>\n    <div class="modal-header">\n        <% if (showCloseButton) { %>\n        <button type="button" class="close js-close" aria-label="<%-\xa0Localizer.localize(\'close\')\xa0%>">&times;</button>\n        <% } %>\n\n        <% if (customHeaderAction) { %>\n            <h3 class="js-custom-header-action"><%= customHeaderAction %></h3>\n        <% } %>\n        <h3 class="js-modal-header-title">\n            <% if (isHTMLTitle) { %>\n                <%= modalTitle %>\n            <% } else { %>\n                <%= modalTitle %>\n            <% } %>\n        </h3>\n    </div>\n<% }                            %>\n\n<div class="js-modal-body <%- customBodyClasses %>">\n\n</div>\n\n<% if (showBetaError) { %>\n    <div id="beta-error-message" class="beta-error-message hide">\n        <%-\xa0Localizer.localize(\'something_went_wrong\')\xa0%>\n    </div>\n<% } %>\n\n<% if (showFooter) {            %>\n    <div class="modal-footer">\n\n    </div>\n<% }                            %>\n\n';
			},
			843502: (e) => {
				e.exports =
					'<div class="alert alert-error" style="display: none;"><%- errorMessage %></div>\n<p><%- message %></p>';
			},
			542869: (e) => {
				e.exports =
					'<span class="react-placeholder <%- additionalClasses %>"></span>';
			},
			410626: (e) => {
				e.exports =
					'<% if (showCancelButton) { %>\n    <a href="#" class="btn btn-secondary cancel" data-dismiss="modal"><%- cancelText ? cancelText : Localizer.localize(cancel_text_key) %></a>\n<% } %>\n<% if (isDanger) { %>\n    <a\n    href="#"\n    class="btn btn-danger js-saveBtn <%-footerPrimaryButtonClasses%>"\n    <%- footerAttributes %>\n><%- saveText ? saveText : Localizer.localize(confirmation_text_key) %></a>\n<% } else { %>\n    <a\n    href="#"\n    class="btn btn-primary js-saveBtn <%-footerPrimaryButtonClasses%>"\n    <%- footerAttributes %>\n><%- saveText ? saveText : Localizer.localize(confirmation_text_key) %></a>\n<% } %>';
			},
			88450: (e) => {
				e.exports =
					'<% for (var i = 0; i < systemMessages.length; i++ ) { %>\n    <div class="system-message alert" style=""><%= systemMessages[i] %></div>\n<% }                                                  %>';
			},
			154763: (e) => {
				e.exports =
					'<div class="widget-header clearfix" />\n\n<div class="widget-content">\n\t<% if (!isSmallState) { %>\n        <i class="icon-face-sad"></i>\n    <% } %>\n        <div class="h5 font-thin"><%- errorMessage %></div>\n</div>\n\n';
			},
			158978: (e) => {
				e.exports =
					'<div class="pull-left">\n\n    <%\n        var showLeft = false;\n        var showRight = false;\n        if (navigationDirection == \'left\') {\n            var leftArrowClass = \'widget-next\';\n            var rightArrowClass = \'widget-previous\';\n\n            showLeft = showNext;\n            showRight = showPrevious;\n\n        } else if (navigationDirection == \'right\') {\n            var leftArrowClass = \'widget-previous\';\n            var rightArrowClass = \'widget-next\';\n\n            showLeft = showPrevious;\n            showRight = showNext;\n        } else if (navigationDirection == \'both\') {\n            var leftArrowClass = \'widget-previous\';\n            var rightArrowClass = \'widget-next\';\n\n            showLeft = true;\n            showRight = true;\n        }\n\n    %>\n\n    <span class="navButtons">\n        <button class="<%- leftArrowClass %> widget-footer-action <%- showLeft ? \'\' : \'disabled\' %>" aria-label="<%- Localizer.localize(\'previous\') %>">\n            <i class="icon-arrow-left"></i>\n        </button>\n        <button class="<%- rightArrowClass %> widget-footer-action <%- showRight ? \'\' : \'disabled\' %>" aria-label="<%- Localizer.localize(\'next\') %>">\n            <i class="icon-arrow-right"></i>\n        </button>\n    </span>\n    <span class="widget-scope widget-footer-action"><%= footerMarkup || \' \' %></span>\n</div>\n<div class="pull-right">\n\n    \x3c!-- Comments --\x3e\n    <% if (showLikesAndComments) {                  %>\n        <button class="btn-comment comments-trigger-js widget-footer-action speech-btn widget-footer-newsfeed"\n                data-convtype="<%- conversation.resourceType %>"\n                data-convresid="<%- conversation.resourceId || \'\' %>"\n                aria-label="<%- Localizer.localize(\'comments\') %>">\n            <i class="icon-speech-bubble2">\n            </i>\n        </button>\n        <button class="btn-comment-number comments-trigger-js"\n                data-convtype="<%- conversation.resourceType %>"\n                data-convresid="<%- conversation.resourceId || \'\' %>"\n                aria-label="<%- Localizer.localize(\'comments\') %>">\n            <span class="btn-comment-value"><%- conversation.numberOfComments || 0 %></span>\n        </button>\n        \x3c!--Likes--\x3e\n        <span class="entry-like-widget"></span>\n        \x3c!--End Likes--\x3e\n    <% }                                    %>\n\n    <% if (shareUrl) {                      %>\n        <div class="share-placeholder"></div>\n    <% }                                    %>\n\n    <% if (showHelpIcon) { %>\n        <a href="#" class="icon-help <% if (showHelpIconCss) { print(showHelpIconCss); } %>" title="<%- Localizer.localize(\'more_information\') %>" aria-label="<%- Localizer.localize(\'help.title\') %>"></a>\n    <% } %>\n\n    <%\n        for (var i = footerActionGroups.length - 1; i >= 0 ; i--) {\n            var actionGroup = footerActionGroups[i];\n\n            for (var j = actionGroup.actions.length - 1; j >= 0 ; j--) {\n                var action = actionGroup.actions[j];\n                if(typeof(action.show) === "undefined" || action.show(view)) {\n                    if(action.link === true) { %>\n                        <a href="" class="js-<%- action.key %>" title="<%- (action.title) ? Localizer.localize(action.title) : \'\' %>"><%- (action.title) ? Localizer.localize(action.title) : \'\' %></a>\n                    <% } else { %>\n                        <button class="widget-footer-action js-<%- action.key %>" title="<%- (action.title) ? Localizer.localize(action.title) : \'\' %>" aria-label="<%- (action.aria) ? Localizer.localize(action.aria) : \'\' %>">\n                            <i class="<%- action.icon %>"></i>\n                        </button>\n                    <% }\n                }\n            }\n        }\n    %>\n</div>\n';
			},
			620800: (e) => {
				e.exports =
					'<div class="widget-header clearfix" />\n\n<div class="widget-content">\n</div>\n\n<% if (showFooter) { %>\n<div class="widget-footer clearfix" />\n<% } %>\n<div class="suggestions-portal"></div>';
			},
			586192: (e) => {
				e.exports =
					'<h2 class="widget-title pull-left" title="<%- hoverText %>">\n<% if(showHeaderTitle) { %>\n\n    <% if (headerUrl) {     %>\n        <a <%- openInNewTab ? \'target="_blank"\' : \'\' %> href="<%- headerUrl %>"><%- Localizer.localize(header_title_key) %> </a>\n    <% } else {             %>\n        <span><%- Localizer.localize(header_title_key) %> </span>\n    <% }                    %>\n<% } %>\n</h2>\n\n<div class="dropdown widget-dropdown pull-right">\n    <button class="dropdown-trigger widget-header-action" data-toggle="dropdown" aria-label="<%- Localizer.localize(\'settings\') %>"><i class="icon-gear"></i></button>\n    <ul class="dropdown-menu" role="menu">\n        <li class="clearfix" role="presentation"><i class="icon-gear pull-right"></i></li>\n<%      for (var i = 0; i < menuGroups.length; i++) {\n            var menuGroup = menuGroups[i];\n            var displayDivider = true;\n            if (menuGroup.menuItems.length === 0) {\n                displayDivider = false;\n            }\n            for (var j = 0; j < menuGroup.menuItems.length; j++) {\n                var menuItem = menuGroup.menuItems[j];\n                var childMenuItems = menuItem.childMenuItems;\n                if (typeof (childMenuItems) == \'undefined\' || childMenuItems.length == 0) {\n                    var menuItemUrl = menuItem.url || \'#\'\n                %>\n                    <li class="<%- \'js-\' + menuGroup.groupName + \' js-\' + menuItem.key + (menuItem.handlerName == \'\' ? \' dropdown-submenu pull-left\' : \'\') %>" role="none"><a role="menuitem" href="<%- menuItemUrl %>"><%- Localizer.localize(menuItem.key) %></a></li>\n                <%\n                } else {\n                    displayDivider = false;\n                }\n            }\n            if (displayDivider) { // only add divider between menu items\n            %>\n                <li class="divider js-menu_item_divider" role="separator"></li>\n        <%  }\n        }                                                           %>\n        <% if(showStateMenu) { %>\n        <%  for (var j = 0; j < viewStates.length; j++) {                   %>\n        <%      var _state = viewStates[j];                                 %>\n        <%  for (var i = 0; i <  _state.views.length; i++) {                %>\n        <%      var _view = _state.views[i];                                %>\n        <%      var text = Localizer.localize(_view.menuKeyName);           %>\n        <%      var activityClass = \'\';                                     %>\n        <%      if (_state.name == state.name && _view.name == view.name) { %>\n        <%          activityClass=\'active\';                                 %>\n        <%      }                                                           %>\n            <li class="<%- activityClass %>" role="none"><a href="#" class=\'<%- _state.name %>*<%- _view.name %> menuStateSelection\' role="menuitem"><%- text %></a></li>\n        <%  }                                                               %>\n        <%  }                                                               %>\n        <li class="divider js-menu_item_divider" role="separator"></li>\n        <%  }                                                               %>\x3c!--if show state menu--\x3e\n        <%      if (headerUrl) { %>\n            <li role="none"><a href="<%- headerUrl %>" class="menu-fullpage" role="menuitem"><%- Localizer.localize(\'full_page\') %></a></li>\n        <%  }                                                               %>\n        <li role="none"><a href="#" class="remove-widget" role="menuitem"><%- Localizer.localize(\'remove\') %></a></li>\n    </ul>\n</div>\n\n<%      for (var i = menuGroups.length - 1; i >= 0 ; i--) {\n            var menuGroup = menuGroups[i];\n\n            for (var j = menuGroup.menuItems.length - 1; j >= 0 ; j--) {\n                var menuItem = menuGroup.menuItems[j];\n                var childMenuItems = menuItem.childMenuItems;\n\n                if (childMenuItems && childMenuItems.length > 0) {\n                    %>\n                    <div class="dropdown widget-dropdown pull-right">\n                    <button data-toggle="dropdown" class="widget-header-action pull-right js-<%- menuItem.key %>" aria-label="<%-\xa0(menuItem.aria)\xa0?\xa0Localizer.localize(menuItem.aria)\xa0:\xa0\'\'\xa0%>">\n                        <i class="<%- menuItem.icon %>"></i>\n                    </button>\n\n                    <ul class="dropdown-menu" role="menu">\n                        <li class="clearfix" aria-label="<%- Localizer.localize(\'add\') %>" role="menuitem"><i class="icon-add pull-right"></i></li>\n                        <li role="none"><a class="disabled" href="#" role="menuitem"><%- Localizer.localize(menuItem.key) %></a></li>\n<%\n                    for (var ch = 0; ch < childMenuItems.length; ch++) {\n                        var childMenuItem = childMenuItems[ch];\n%>\n                        <li class="<%- \'js-\'+ childMenuItem.key %>" role="none"><a href="#" role="menuitem"><%- Localizer.localize(childMenuItem.key) %></a></li>\n<%\n                    }\n%>\n                    </ul>\n                    </div>\n<%\n                } else {\n                    if (menuItem.icon) {\n%>\n                        <button class="widget-header-action pull-right js-<%- menuItem.key %>" aria-label="<%-\xa0(menuItem.aria)\xa0?\xa0Localizer.localize(menuItem.aria)\xa0:\xa0\'\'\xa0%>">\n                            <i class="<%- menuItem.icon %>"></i>\n                        </button>\n<%\n                    }\n                }\n%>\n\n<%          }\n        }                                                                %>\n';
			},
			968541: (e) => {
				e.exports =
					'<div class="text-center bottom-s">\n    <div class="large spinner" title="">\n    \t<div></div>\n \t</div>\n</div>\n<div class="h5 text-center font-thin"><%- loadingMessage %></div>';
			},
			763614: (e) => {
				e.exports =
					'<div class="nav-widgets-add icon-add"></div>\n<div class="nav-widgets-cancel"><%- Localizer.localize(\'cancel\') %></div>\n<div class="nav-widgets-loading spinner"><div></div></div>\n';
			},
			680399: (e) => {
				e.exports =
					'<button class="widget-message-sheet-close" aria-label="<%-\xa0Localizer.localize(\'close\')\xa0%>">&times;</button>\n\n<div class="widget-message-sheet-content"></div>\n\n';
			},
			278938: (e) => {
				e.exports =
					'<div class="widget-sheet-header clearfix">\n    <button class="widget-sheet-close close close-js" aria-label="<%-\xa0Localizer.localize(\'close\')\xa0%>"><i class="icon-arrow-down"></i></button>\n</div>\n\n<div class="widget-sheet-content">\n\n</div>\n\n\n';
			},
			922860: (e) => {
				e.exports =
					'<button type="button" class="widget-takeover-close close" data-dismiss="alert" aria-label="<%-\xa0Localizer.localize(\'close\')\xa0%>">\xd7</button>\n<div class="widget-takeover-content">\n\n</div>\n\n\n\n';
			},
			73477: (e) => {
				e.exports =
					'<div class="device">\n    <a href="<%- deviceUrl %>" class="js-device-link"><img class="device-image" src="<%- device.imageUrl %>" alt="<%- device.displayName %>"></a>\n\n    <div class="device-details">\n        <div class="device-name"><a href="<%- deviceUrl %>" class="js-device-link"><%- device.displayName %></a></div>\n\n        <% if(showBatteryLow) { %>\n            <div class="device-link battery-low"><i class="icon-battery-low"></i><%- Localizer.localize(\'device.battery.low\') %></div>\n        <% } %>\n\n        <% if(isRetired) { %>\n        <div class="label"><%- Localizer.localize(\'device.retired\') %></div>\n        <% } else { %>\n            <%- device.lastUploadTimestamp ? Localizer.localize(\'last_synced\') + \' \' +\n                DateFormatter.formatShortDateAndTime(device.lastUploadTimestamp): \'\' %>\n            <% if(isPrimaryWearableDevice) { %>\n                <div class="primaryDeviceLabel">\n                    <span class="primaryDeviceText">\n                        <%- Localizer.localize(\'primary_wearable\') %>\n                    </span>\n                </div>\n            <% } %>\n\n            <% if(isPrimaryTrainingDevice) { %>\n                <div class="primaryDeviceLabel">\n                    <span class="primaryDeviceText">\n                        <%- Localizer.localize(\'primary_training_device\') %>\n                    </span>\n                </div>\n            <% } %>\n            <% if(device.appSupport) { %>\n            <div class="device-link ciq"><a href="<%- appStoreUrl %>" class="colored"><%- Localizer.localize(\'garmin.app.store\') %></a></div>\n            <% } %>\n        <% } %>\n    </div>\n\n    <% if((messagesCount > 0) && !hideDeviceQueue) { %>\n    <div class="new-items-alert" title="<%- messagesCount === 1 ? Localizer.localize(\'item_to_sync\') : Localizer.localize(\'items_to_sync\', messagesCount) %>"><%- messagesCount %></div>\n    <% } %>\n</div>\n\n<% if (shouldShowFirmwareUpdateAwareness) { %>\n<div class="index2-firmware-update-awareness">\n    <%- Localizer.localize(\'firmware_update_awareness_index2_description_2\') %>\n    <a href="https://support.garmin.com/sas/gcapp/?productId=679362&contentId=2F2nEh0ILR0PzsdysYD9s5" target="_blank" class="colored"><%- Localizer.localize(\'learn_more\') %></a>\n</div>\n<% } %>\n\n<% if(messagesCount > 0) { %>\n<div class="sync-item-remove-confirm" style="display: none;">\n    <div class="confirm-text"></div>\n    <div class="confirm-buttons">\n        <button class="btn btn-small btn-secondary btn-keep"><%- Localizer.localize(\'queue.keep\') %></button>\n        <button class="btn btn-small btn-danger btn-confirm"><%- Localizer.localize(\'device.remove\') %></button>\n    </div>\n</div>\n\n<% var scaleMessageIsShown = false; %>\n\n<div class="sync-list hide">\n    <div class="device-sync-info">\n        <%- Localizer.localize(\'queue_sync_info\') %>\n    </div>\n<% _.each(messages, function(message, index) { %>\n    <% var nextMessage = messages[index + 1]; %>\n    <% var isWeightScale = (message.applicationKey !== null && message.applicationKey.indexOf(\'indexSmartScale\') > -1); %>\n    <% var listElementTag = \'\'; %>\n\n    <% if(message.isGroupChild) { %>\n        <% if(message.messageType === \'software-update\') { %>\n        <li><%- message.messageName %></li>\n\n        <% } else { %>\n        <div class="sync-item sync-item-<%- message.messageId %>">\n            <div class="sync-item-content">\n                <a class="sync-item-title" href="<%- message.connectUrl %>"><%- message.messageName %></a>\n                <% if(message.showDeleteButton) { %>\n                    <a href="#" class="sync-item-remove icon-close" title="<%- Localizer.localize(\'queue.remove\') %>" data-message="<%- JSON.stringify(message) %>" data-message-id="<%- message.messageId %>" data-message-name="<%- message.messageName %>" data-group-name=""></a>\n                <% } %>\n            </div>\n        </div>\n        <% } %>\n\n        <% if(!nextMessage) { %>\n            </<%- listElementTag %>>\n        </div>\n    </div>\n        <% } else if(!nextMessage.isGroupChild) { %>\n            </<%- listElementTag %>>\n        </div>\n    </div>\n</div>\n        <% } %>\n    <% } else { %>\n    <% if(isWeightScale && !scaleMessageIsShown) { %>\n        <% scaleMessageIsShown = true; %>\n        <div class="sync-item">\n            <div class="sync-item-content"><%- Localizer.localize(\'device.time.to.update\') %></div>\n        </div>\n    <% } %>\n    <div class="sync-item sync-item-<%- message.messageId %>">\n        <div class="sync-item-content">\n            <a class="sync-item-title" href="<%- message.connectUrl %>"><%- message.isGroupHeading ? message.groupName : message.messageName %></a>\n            <span class="sync-item-heading"><%= message.groupHeadingText %></span>\n            <% if(message.showMessageType) { %>\n                <div class="sync-item-type"><%- message.displayMessageType %></div>\n            <% } %>\n\n            <% if(message.showDeleteButton) { %>\n                <a href="#" class="sync-item-remove icon-close" title="<%- Localizer.localize(\'queue.remove\') %>" data-message-id="<%- message.messageId %>" data-message-name="<%- message.isGroupHeading ? message.groupName : message.messageName %>" data-group-name="<%- message.groupName %>"></a>\n            <% } %>\n\n            <% if(message.isGroupHeading) { %>\n            <div class="sync-item-list-toggle"><a href="#" class="colored"><%- Localizer.localize(\'details\') %></a></div>\n\n                <% if(nextMessage.messageType === \'software-update\') {\n                    listElementTag = \'ul\';\n                } else {\n                    listElementTag = \'div\';\n                } %>\n\n            <<%- listElementTag %> class="sync-item-list">\n            <% } else {%>\n        </div>\n    </div>\n            <% } %>\n    <% } %>\n\n<% }); %>\n</div>\n<% } %>';
			},
			634328: (e) => {
				e.exports =
					'<a href="<%- url %>" class="main-nav-link <%- customClasses %>"><%- title %></a>';
			},
			573614: (e) => {
				e.exports =
					'<a href="<%- link %>" class="<%- linkClass %>">\n    <i class="nav-icon <%- icon %>"></i>\n    <% if(showNewsFeedBubble){ %>\n        <span class="newsfeedUnreadBubble"></span>\n    <% } %>\n    <span class="nav-text"><%- title %></span>\n    <% if(hasChildren){ %>\n        <i class="nav-toggle-icon icon-arrow-down"></i>\n    <% } %>\n</a>\n<% if(hasChildren){ %>\n    <ul class="main-nav-menu">\n    </ul>\n<% } %>\n';
			},
			226413: (e) => {
				e.exports =
					'<div class="device">\n    <div class="device-image text-center"><img style="max-width: 48px;" src="<%- sensorImageUrl %>" alt="<%- deviceName %>" /></div>\n    <div class="device-details">\n        <div class="device-name"><%- deviceName %></div>\n        <span>\n            <% if(batteryStatusLabel){ %>\n                <% if( !isAboveLow ){ %>\n                    <img style="margin-right: 5px;" src="/web-images/devices/battery/<%- batteryStatusIconClass %>" alt="<%- Localizer.localize(batteryStatusLabel) %>" role="presentation"/>\n                <% } %>\n                <%- Localizer.localize(batteryStatusLabel) %>\n            <% } %>\n            <% if(lastConnectedDate){ %>\n            &nbsp;\u2022&nbsp;<%- Localizer.localize(\'sensor_last_checked\', lastConnectedDate) %>\n            <% } %>\n        </span>\n    </div>\n</div>';
			},
			878076: (e) => {
				e.exports =
					'\n<a\n    class="header-nav-menu-section request-item inbox-link"\n    href="<%- inboxUrl %>"\n    aria-label="<%- i18nSeeAllRequests %>"\n>\n    <div class="inbox-link-request-images">\n        <img src="<%- imageUrls[1] %>" role="presentation">\n        <img src="<%- imageUrls[0] %>" role="presentation">\n    </div>\n    <div class="">\n        <%- i18nYouHaveNRequests %>\n    </div>\n    <div class="inbox-link-icon">\n        <i class="icon-arrow-right"></i>\n    </div>\n</a>\n';
			},
			994844: (e) => {
				e.exports =
					'<div class="alert alert-error hide">\n    <p><%- Localizer.localize(\'request.error.msg\') %></p>\n</div>\n<% if(notificationsLoaded) { %>\n    <% if(showItems) { %>\n    <div class="header-nav-menu-section section-header requests-header">\n        <h2 class="section-name"><%- Localizer.localize(\'requests.title\') %></h2>\n        <div class="js-new-requests-count new-items-alert hide"></div>\n        <div class="js-new-requests-link hide">\n            <a class="colored" href="<%- inboxUrl %>" aria-label="<%- Localizer.localize(\'see_all_requests\') %>">\n                <%- Localizer.localize(\'see_all_requests\') %>\n            </a>\n            <span class="new-items-alert hide"></span>\n        </div>\n    </div>\n\n    <span class="js-pending-requests-placeholder"></span>\n\n    <div class="header-nav-menu-section section-header notifications-header">\n        <h2 class="section-name"><%- Localizer.localize(\'notifications.title\') %></h2>\n        <div class="js-new-notifications-count new-items-alert hide"></div>\n    </div>\n\n    <span class="js-pending-notifications-placeholder"></span>\n    <div class="lazyload notifications-skeletons" style="display: none;">\n        <div class="skeleton-item skeleton-request clearfix">\n            <div class="skeleton-object skeleton-avatar"></div>\n            <div class="skeleton-object skeleton-text"></div>\n            <div class="skeleton-object skeleton-button"></div>\n            <div class="skeleton-object skeleton-button"></div>\n        </div>\n    </div>\n    <% } else { %>\n    <div class="empty-state-wrapper">\n        <div class="empty-state-icon icon-inbox"></div>\n        <div class="empty-state js-no-pending-requests-or-notifications title"><%- notItemsTitle %></div>\n        <div class="empty-state js-no-pending-requests-or-notifications description"><%- notItemsDescription %></div>\n    </div>\n    <% } %>\n<% } else { %>\n<div class="notifications-skeletons">\n    <div class="skeleton-item skeleton-request clearfix">\n        <div class="skeleton-object skeleton-avatar"></div>\n        <div class="skeleton-object skeleton-text"></div>\n        <div class="skeleton-object skeleton-button"></div>\n        <div class="skeleton-object skeleton-button"></div>\n    </div>\n    <div class="skeleton-item skeleton-request clearfix">\n        <div class="skeleton-object skeleton-avatar"></div>\n        <div class="skeleton-object skeleton-text"></div>\n        <div class="skeleton-object skeleton-button"></div>\n        <div class="skeleton-object skeleton-button"></div>\n    </div>\n    <div class="skeleton-item skeleton-notification">\n        <div class="skeleton-object skeleton-text"></div>\n        <div class="skeleton-object skeleton-text"></div>\n        <div class="skeleton-object skeleton-date"></div>\n    </div>\n    <div class="skeleton-item skeleton-notification">\n        <div class="skeleton-object skeleton-text"></div>\n        <div class="skeleton-object skeleton-text"></div>\n        <div class="skeleton-object skeleton-date"></div>\n    </div>\n    <div class="skeleton-item skeleton-notification">\n        <div class="skeleton-object skeleton-text"></div>\n        <div class="skeleton-object skeleton-text"></div>\n        <div class="skeleton-object skeleton-date"></div>\n    </div>\n</div>\n<% } %>\n\n';
			},
			874118: (e) => {
				e.exports =
					'<a class="request-image js-user-link" href="<%- profileUrl %>">\n    <img class="avatar js-select-user" src="<%- picture %>" alt="<%- ownerName %>" title="<%- ownerName %>">\n</a>\n<div class="request-body">\n    <%= message %>\n    <% if (timeStamp) { %>\n        <div class="date-stamp"><%- timeStamp %></div>\n    <% } %>\n    <div class="request-actions">\n        <button type="button" class="btn btn-small btn-secondary decline js-decline-btn"><%- declineButtonText %></button>\n        <button type="button" class="btn btn-small accept js-accept-btn"><%- acceptButtonText %></button>\n        <span class="js-ignore-msg date-stamp" style="display: none;"><%- challengeIgnoredMessage %></span>\n        <span class="js-confirm-msg date-stamp" style="display: none;"><%- challengeAcceptedMessage %></span>\n    </div>\n    <div class="top-xs">\n        <a class="colored js-notification-privacy" href="#"><%- privacyText %></a>\n    </div>\n</div>';
			},
			604914: (e) => {
				e.exports =
					'<a href="<%- commentUrl %>" class="notification-body js-select-comment">\n    <div class="notificationItem">\n        <%= pendingComment.formatComment %>\n    </div>\n    <div class="date-stamp"><%- pendingComment.numberOfDaysAgo %></div>\n</a>\n<button class=\'js-dismiss-button icon-dismiss\' />\n<div class="undo-section" style="display: none;">\n    <div><%- Localizer.localize(\'notification_removed\') %></div>\n    <button class="js-undo-button"><%- Localizer.localize(\'weight.scale.decline.undo.button\') %></button>\n</div>';
			},
			183059: (e) => {
				e.exports =
					'<%\nvar connectionName = pendingConnection.displayName;\nif (pendingConnection.fullName) {\n    connectionName = pendingConnection.fullName;\n}\nconnectionName = _.escape(connectionName);\n%>\n\n    <a class="request-image" href="<%- profileUrl %>">\n        <img class="avatar js-select-connection" src="<%- imageUrl %>" alt="<%- connectionName %>" title="<%- connectionName %>">\n    </a>\n    <div class="request-body">\n        <% if (pendingConnection.userPro) { %>\n            \x3c!-- per UX, PRO is not translated --\x3e\n            <span class="label-pro"><i class="icon-checkmark"></i>PRO</span>\n        <% } %>\n        <%= Localizer.localize(\'connection.follow\', connectionName, profileUrl) %>\n        <% if (pendingConnection.mutualConnectionCount > 0) { %>\n            <button class="mutual-connections-label"><%- Localizer.localize(pendingConnection.mutualConnectionLabel, pendingConnection.mutualConnectionCount) %></button>\n        <% } %>\n        <% if (timeStamp) { %>\n            <div class="date-stamp"><%- timeStamp %></div>\n        <% } %>\n        <div class="request-actions">\n            <button type="button" class="btn btn-small btn-secondary delete-btn"><%- Localizer.localize(\'button_delete\') %></button>\n            <button type="button" class="btn btn-small confirm" data-id="<%- pendingConnection.connectionRequestId %>"><%- Localizer.localize(\'accept\') %></button>\n            <span class="js-delete-msg date-stamp" style="display: none;"><%- Localizer.localize(\'request.deleted\') %></span>\n            <span class="js-confirm-msg date-stamp" style="display: none;"><%= Localizer.localize(\'connection.request.accepted\') %></span>\n        </div>\n    </div>\n';
			},
			799095: (e) => {
				e.exports =
					'<a class="request-image" href="<%= profileUrl %>">\n    <img class="avatar js-select-user" src="<%- imageUrl %>" role="presentation">\n</a>\n<div class="request-body">\n    <%= groupRequestString %>\n    <% if (timeStamp) { %>\n        <div class="date-stamp"><%- timeStamp %></div>\n    <% } %>\n    <div class="request-actions">\n        <button type="button" class="btn btn-small btn-secondary ignore"><%- Localizer.localize(\'request_delete\') %></button>\n        <button type="button" class="btn btn-small confirm"><%- Localizer.localize(\'request_accept\') %></button>\n        <span class="js-ignore-msg date-stamp" style="display: none;"><%- Localizer.localize(\'request.deleted\') %></span>\n        <span class="js-confirm-msg date-stamp" style="display: none;"><%- Localizer.localize(\'request.accepted\') %></span>\n    </div>\n</div>';
			},
			205472: (e) => {
				e.exports =
					'<%\nvar imageUrl = "/modern/images/avatar-default.png";\nif (pendingRequest.invitorProfilePicURL) {\nimageUrl = pendingRequest.invitorProfilePicURL;\n}\n\nvar connectionName = pendingRequest.invitorName;\n%>\n\n<a class="request-image" href="<%- profileUrl %>">\n    <img class="avatar js-select-user" src="<%- imageUrl %>" alt="<%- connectionName %>" title="<%- connectionName %>">\n</a>\n<div class="request-body">\n    <a href="<%- profileUrl %>" class="colored js-select-user"><%- connectionName %></a> <%- i18nDeviceInvited %>\n    <div class="request-actions">\n        <% if (timeStamp) { %>\n            <div class="date-stamp marBottomXS"><%- timeStamp %></div>\n        <% } %>\n        <button type="button" class="btn btn-small btn-secondary decline btn-decline"><%- i18nDecline %></button>\n        <a href="<%- getStartedUrl %>" class="btn btn-small btn-get-started"><%- i18nAccept %></a>\n        <span class="inbox-response" style="display: none;"><%- i18nDeclinedDesc%>\n            <button aria-label="<%- i18nUndo %>" class="colored undo btn-undo-decline" style="margin-left: 16px;"><%- i18nUndo %></button>\n        </span>\n    </div>\n</div>';
			},
			956867: (e) => {
				e.exports =
					'    <button class="btn btn-secondary cancel" data-dismiss="modal" aria-hidden="true"><%- Localizer.localize(\'button_cancel\') %></button>\n    <button class="btn confirm"><%- Localizer.localize(\'button_save\') %></button>\n';
			},
			959628: (e) => {
				e.exports =
					'    <p><%- Localizer.localize(\'privacy.alert.msg.1\') %></p>\n    <form id="change-privacy-alert" class="">\n        <div class="control-group control-profile-privacy" style="display: none">\n            <label class="control-label" for="profile-privacy-options"><%- Localizer.localize(\'privacy.alert.msg.3\') %> <button class="help-icon">\n                <i class="icon-help profile-privacy-tip" data-rel="tooltip" data-container="#change-privacy-alert"></i></button></label>\n\n            <div class="controls">\n                <select id="profile-privacy-options" name="profileVisibility" class="select size4">\n                    <% if(userHasPrivacyUpdatesRole) { %>\n                        <option value="<%- privacySettingsVisibility.PRIVATE %>" <% if(preSelectedProfileVisibility === privacySettingsVisibility.PRIVATE) { %> selected <% } %>> <%- Localizer.localize(\'privacy.alert.only.me\') %></option>\n                        <option value="<%- privacySettingsVisibility.CONNECTIONS %>" <% if(preSelectedProfileVisibility === privacySettingsVisibility.CONNECTIONS) { %> selected <% } %>> <%- Localizer.localize(\'privacy.alert.connections\') %></option>\n                        <option value="<%- privacySettingsVisibility.GROUPS %>" <% if(preSelectedProfileVisibility === privacySettingsVisibility.GROUPS) { %> selected <% } %>> <%- Localizer.localize(\'privacy.alert.groups\') %></option>\n                        <option value="<%- privacySettingsVisibility.PUBLIC %>" <% if(preSelectedProfileVisibility === privacySettingsVisibility.PUBLIC) { %> selected <% } %>> <%- Localizer.localize(\'privacy.alert.everyone\') %></option>\n                    <% } else { %>\n                        <option value="private" selected="selected"><%- Localizer.localize(\'privacy.alert.only.me\') %></option>\n                        <option value="following"><%- Localizer.localize(\'privacy.alert.connections\') %></option>\n                        <option value="groups"><%- Localizer.localize(\'privacy.alert.groups\') %></option>\n                        <option value="public"><%- Localizer.localize(\'privacy.alert.everyone\') %></option>\n                    <% } %>\n                </select>\n            </div>\n        </div>\n        <div class="control-group control-activity-privacy" style="display: none">\n            <label class="control-label" for="activity-privacy-options"><%- Localizer.localize(\'privacy.alert.msg.4\') %> <button class="help-icon">\n                <i class="icon-help activity-privacy-tip" data-rel="tooltip" data-container="#change-privacy-alert"></i></button></label>\n            <div class="controls">\n                <select id="activity-privacy-options" name="activityVisibility" class="select size4">\n                    <% if(userHasPrivacyUpdatesRole) { %>\n                        <option value="<%- privacySettingsVisibility.PRIVATE %>" <% if(preSelectedActivityVisibility === privacySettingsVisibility.PRIVATE) { %> selected <% } %>> <%- Localizer.localize(\'privacy.alert.only.me\') %></option>\n                        <option value="<%- privacySettingsVisibility.CONNECTIONS %>" <% if(preSelectedActivityVisibility === privacySettingsVisibility.CONNECTIONS) { %> selected <% } %>> <%- Localizer.localize(\'privacy.alert.connections\') %></option>\n                        <option value="<%- privacySettingsVisibility.GROUPS %>" <% if(preSelectedActivityVisibility === privacySettingsVisibility.GROUPS) { %> selected <% } %>> <%- Localizer.localize(\'privacy.alert.groups\') %></option>\n                        <option value="<%- privacySettingsVisibility.PUBLIC %>" <% if(preSelectedActivityVisibility === privacySettingsVisibility.PUBLIC) { %> selected <% } %>> <%- Localizer.localize(\'privacy.alert.everyone\') %></option>\n                        <option value="<%- privacySettingsVisibility.CUSTOM %>" <% if(preSelectedActivityVisibility === privacySettingsVisibility.CUSTOM) { %> selected <% } %>> <%- Localizer.localize(\'privacy.alert.custom\') %></option>\n                     <% } else { %>\n                        <option value="private" selected="selected"><%- Localizer.localize(\'privacy.alert.only.me\') %></option>\n                        <option value="following"><%- Localizer.localize(\'privacy.alert.connections\') %></option>\n                        <option value="groups"><%- Localizer.localize(\'privacy.alert.groups\') %></option>\n                        <option value="public"><%- Localizer.localize(\'privacy.alert.everyone\') %></option>\n                    <% } %>\n                </select>\n                <% if(userHasPrivacyUpdatesRole) { %>\n                    <div>\n                        <button class="colored option-spacing-right privacy-action-button <%- preSelectedActivityVisibility === privacySettingsVisibility.CUSTOM ? \'\' : \'hidden\' %>" id="editCustomPrivacyLevels"><%- Localizer.localize(\'privacy_edit_custom_privacy\') %></button>\n                    </div>\n                <% } %>\n            </div>\n        </div>\n    </form>\n';
			},
			649538: (e) => {
				e.exports =
					'<button class="dropdown-trigger" aria-label="<%- Localizer.localize(\'share_button\') %>" data-toggle="dropdown"><i class="icon-share" /> <%- sharingLabel %></button>\n<ul class="dropdown-menu <%- pullClass %> <%- directionClass %>">\n<% if (showIcon) {          %>\n    <li class="clearfix"><i class="icon-share pull-right"></i></li>\n<% }  \n                      %>\n<% if (userInChina) { %>\n    <li>\n        <a id="shareToWeibo" class="" title="<%- Localizer.localize(\'share_sinaweibo\') %>">\n            <span class="at-icon-wrapper" style="background-color: rgb(230, 22, 45); line-height: 16px; height: 16px; width: 16px;">\n                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 32 32" class="at-icon at-icon-sinaweibo" style="width: 16px; height: 16px; fill: #fff; border: 0;">\n                    <g><path d="M14.24 23.808c-3.64.367-6.785-1.307-7.022-3.734-.236-2.43 2.525-4.693 6.164-5.06 3.642-.367 6.786 1.307 7.02 3.734.24 2.43-2.522 4.696-6.16 5.06m7.28-8.063c-.31-.096-.523-.157-.362-.57.352-.898.39-1.672.006-2.227-.713-1.036-2.667-.98-4.907-.028 0 0-.705.312-.523-.253.343-1.125.29-2.065-.243-2.61-1.214-1.238-4.446.045-7.216 2.86C6.205 15.023 5 17.26 5 19.192c0 3.694 4.664 5.942 9.226 5.942 5.98 0 9.96-3.53 9.96-6.333.003-1.695-1.402-2.657-2.665-3.055M25.494 8.983a5.76 5.76 0 0 0-5.542-1.823.855.855 0 0 0-.646 1.015.84.84 0 0 0 1 .657c1.398-.303 2.912.138 3.938 1.295a4.254 4.254 0 0 1 .865 4.113c-.144.45.1.93.542 1.076a.84.84 0 0 0 1.06-.55v-.002a5.973 5.973 0 0 0-1.218-5.78"></path><path d="M23.276 11.018a2.8 2.8 0 0 0-2.698-.885.74.74 0 0 0-.56.876c.086.396.472.65.86.563.467-.102.977.046 1.32.432.343.388.437.915.29 1.378a.742.742 0 0 0 .466.928.724.724 0 0 0 .913-.474c.3-.947.113-2.026-.59-2.818M14.44 19.41c-.126.223-.408.328-.627.235-.218-.09-.285-.34-.16-.555.127-.215.397-.32.612-.234.22.08.298.33.176.555m-1.16 1.512c-.353.57-1.11.82-1.676.558-.56-.26-.726-.922-.374-1.48.35-.555 1.078-.802 1.642-.56.57.25.753.905.407 1.482m1.322-4.04c-1.733-.46-3.69.42-4.443 1.97-.77 1.583-.025 3.34 1.723 3.914 1.815.595 3.95-.318 4.695-2.023.734-1.67-.182-3.39-1.976-3.86"></path></g>\n                </svg>\n            </span>\n            <%- Localizer.localize(\'share_sinaweibo\') %>\n        </a>\n    </li>\n<% } else { %>\n    <li>\n        <a id="shareToFacebook" class="" title="<%- Localizer.localize(\'share.facebook\') %>">\n            <span class="at-icon-wrapper" style="line-height: 16px; height: 16px; width: 16px; background-color: rgb(59, 89, 152); display: inline-block; overflow: hidden;">\n                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 32 32" class="at-icon at-icon-facebook" style="width: 16px; height: 16px; fill: #fff; border: 0;">\n                    <g><path d="M22 5.16c-.406-.054-1.806-.16-3.43-.16-3.4 0-5.733 1.825-5.733 5.17v2.882H9v3.913h3.837V27h4.604V16.965h3.823l.587-3.913h-4.41v-2.5c0-1.123.347-1.903 2.198-1.903H22V5.16z" fill-rule="evenodd"></path></g>\n                </svg>\n            </span>\n            <%- Localizer.localize(\'share.facebook\') %>\n        </a>\n    </li>\n    <li>\n        <a id="shareToTwitter" class="" title="<%- Localizer.localize(\'share.twitter\') %>">\n            <span class="at-icon-wrapper" style="line-height: 16px; height: 16px; width: 16px; background-color: rgb(29, 161, 242); display: inline-block; overflow: hidden;">\n                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 32 32" class="at-icon at-icon-twitter" style="width: 16px; height: 16px; fill: #fff; border: 0;">\n                    <g><path d="M27.996 10.116c-.81.36-1.68.602-2.592.71a4.526 4.526 0 0 0 1.984-2.496 9.037 9.037 0 0 1-2.866 1.095 4.513 4.513 0 0 0-7.69 4.116 12.81 12.81 0 0 1-9.3-4.715 4.49 4.49 0 0 0-.612 2.27 4.51 4.51 0 0 0 2.008 3.755 4.495 4.495 0 0 1-2.044-.564v.057a4.515 4.515 0 0 0 3.62 4.425 4.52 4.52 0 0 1-2.04.077 4.517 4.517 0 0 0 4.217 3.134 9.055 9.055 0 0 1-5.604 1.93A9.18 9.18 0 0 1 6 23.85a12.773 12.773 0 0 0 6.918 2.027c8.3 0 12.84-6.876 12.84-12.84 0-.195-.005-.39-.014-.583a9.172 9.172 0 0 0 2.252-2.336" fill-rule="evenodd"></path></g>\n                </svg>\n            </span>\n            <%- Localizer.localize(\'share.twitter\') %>\n        </a>\n    </li>\n<% } %>\n</ul>\n';
			},
			171805: (e) => {
				e.exports =
					'<button class="btn" id="select-experience-save" disabled><%-\n    Localizer.localize(\'userexperience.dialog.create.dashboard\') %>\n</button>';
			},
			108179: (e) => {
				e.exports =
					'<div class="row">\n    \x3c!-- OPTION 1 --\x3e\n    <div class="span12 experience-container wellness-experience-container">\n        <div class="experience-type-identifier">\n            <label for="button-experience-wellness">\n                <div class="icon-container">\n                    <i class="icon-steps-1"></i>\n                </div>\n            </label>\n        </div>\n        <div class="experience-type-body">\n            <label for="button-experience-wellness">\n                <h5><%- Localizer.localize(\'wellness_dashboard\') %></h5>\n                <p class="muted"><%- Localizer.localize(\'wellness_description\') %></p>\n            </label>\n        </div>\n\n        <div class="connect-checkbox pull-right top-m">\n            <input type="checkbox" id="button-experience-wellness" name="check"/>\n            <label for="button-experience-wellness"></label>\n        </div>\n    </div>\n\n    \x3c!-- OPTION 2 --\x3e\n    <div class="span12 experience-container fitness-experience-container disabled">\n        <div class="experience-type-identifier">\n            <label for="button-experience-fitness">\n                <div class="icon-container">\n                    <i class="icon-activities"></i>\n                </div>\n            </label>\n        </div>\n\n        <div class="experience-type-body">\n            <label for="button-experience-fitness">\n                <h5><%- Localizer.localize(\'fitness_dashboard\') %></h5>\n                <p class="muted"><%- Localizer.localize(\'fitness_description\') %></p>\n            </label>\n        </div>\n\n        <div class="connect-checkbox pull-right top-m">\n            <input class="connect-checkbox-input" type="checkbox" id="button-experience-fitness" name="check">\n            <label for="button-experience-fitness"></label>\n        </div>\n    </div>\n\n    \x3c!-- OPTION 3 --\x3e\n    <div class="span12 experience-container golf-experience-container disabled">\n        <div class="experience-type-identifier">\n            <label for="button-experience-golf">\n                <div class="icon-container">\n                    <i class="icon-activity-golf"></i>\n                </div>\n            </label>\n        </div>\n        <div class="experience-type-body">\n            <label for="button-experience-golf">\n                <h5><%- Localizer.localize(\'golf_dashboard\') %></h5>\n                <p class="muted"><%- Localizer.localize(\'golf_description\') %></p>\n            </label>\n        </div>\n\n        <div class="connect-checkbox pull-right top-m">\n            <input type="checkbox" id="button-experience-golf" name="check"/>\n            <label for="button-experience-golf"></label>\n        </div>\n    </div>\n\n    \x3c!-- OPTION 4 --\x3e\n    <div class="span12 experience-container dive-experience-container disabled">\n        <div class="experience-type-identifier">\n            <label for="button-experience-dive">\n                <div class="icon-container">\n                    <i class="icon-activity-diving"></i>\n                </div>\n            </label>\n        </div>\n        <div class="experience-type-body">\n            <label for="button-experience-dive">\n                <h5><%- Localizer.localize(\'dive_dashboard\') %></h5>\n                <p class="muted"><%- Localizer.localize(\'dive_description\') %></p>\n            </label>\n            <div id="externalBottomTime" class="user-experience-external-bottom-time bottom-xs" style="display: none">\n                <label class="user-experience-external-bottom-time-label muted"><%- Localizer.localize(\'total_dive_time_short\') + \' \' %><span class="colored has-tooltip help-icon" data-placement="top" title="<%- Localizer.localize(\'enter_any_previous_dives\') %>" aria-label="<%- Localizer.localize(\'enter_any_previous_dives\') %>"><i class="icon-help"></i></span></label>\n                <div class="externalBottomTimePlaceholder">\n                    <span class="format-example muted"><%- Localizer.localize(\'user.experience.manualActivity.formatExample.hhh.withoutSeconds\') %></span>\n                </div>\n            </div>\n        </div>\n\n        <div class="connect-checkbox pull-right top-m">\n            <input type="checkbox" id="button-experience-dive" name="check"/>\n            <label for="button-experience-dive"></label>\n        </div>\n    </div>\n\n    <% if(isMarineExperienceAvailable) { %>\n    \x3c!-- OPTION 5 --\x3e\n    <div class="span12 experience-container marine-experience-container disabled">\n        <div class="experience-type-identifier">\n            <label for="button-experience-marine">\n                <div class="icon-container">\n                    <i class="icon-activity-marine"></i>\n                </div>\n            </label>\n        </div>\n\n        <div class="experience-type-body">\n            <label for="button-experience-marine">\n                <h5><%- Localizer.localize(\'marine_dashboard\') %></h5>\n                <p class="muted bottom-xs"><%= Localizer.localize(\'marine_description\') %></p>\n                <div class="fine-print bottom-s">\n                    <%= Localizer.localize("quickdraw_upload_terms_and_conditions") %>\n                </div>\n            </label>\n        </div>\n\n        <div class="connect-checkbox pull-right top-m">\n            <input type="checkbox" id="button-experience-marine" name="check"/>\n            <label for="button-experience-marine"></label>\n        </div>\n    </div>\n    <% } %>\n</div>\n';
			},
			694146: (e) => {
				e.exports =
					'<% if (!hideHours) { %>\n<input \n    type="text" \n    id="<%- model.idPrefix %>-time-hour"\n    aria-label="<%- Localizer.localize(\'duration_hours_lowercase\') %>" \n    class="input-mini" \n    value="<%- model.timeHours == null ? \'\' : model.timeHours %>" \n    maxlength="<%- hourInputMaxLength %>"\n> :\n<% } %>\n<input \n    type="text" \n    id="<%- model.idPrefix %>-time-minute" \n    aria-label="<%- Localizer.localize(\'duration_minutes_lowercase\') %>"\n    class="input-mini" \n    value="<%- model.timeMinutes == null ? \'\' : model.timeMinutes %>" \n    maxlength="2"\n>\n<% if (!hideSeconds) { %>\n:\n<input \n    type="text" \n    id="<%- model.idPrefix %>-time-second" \n    aria-label="<%- Localizer.localize(\'duration_seconds_lowercase\') %>"\n    class="input-mini" \n    value="<%- model.timeSeconds == null ? \'\' : model.timeSeconds %>" \n    maxlength="2"\n>\n<% } %>\n<% if (!hideMilliseconds) { %>\n.\n<input \n    type="text" \n    id="<%- model.idPrefix %>-time-millisecond" \n    aria-label="<%- Localizer.localize(\'duration_milliseconds_lowercase\') %>"\n    class="input-mini" \n    value="<%- model.timeMilliseconds == null ? \'\' : model.timeMilliseconds %>" \n    maxlength="3"\n>\n<% } %>\n';
			},
			539583: (e) => {
				e.exports =
					'<style>\n    .privacy-policy-desc {\n        margin-bottom: 30px\n    }\n</style>\n\n<div class="privacy-content">\n    <h2 id="privacyPolicyHeader"><%- Localizer.localize(\'splits.print.privacyPolicy\') %></h2>\n    <h2 id="privacyPolicyUpdatedHeader"><%- Localizer.localize(\'privacy.policy.updates.title\') %></h2>\n    <div class="privacy-policy-desc" id="privacyPolicyUpdatedDesc"><%- Localizer.localize(\'privacy.policy.updates.description\') %></div>\n    <div class="privacy-items" id="privacyPolicyItems"></div>\n</div>\n';
			},
			863939: (e) => {
				e.exports =
					'<style>\n    .privacy_privacyItem {\n        margin-bottom: 30px;\n    }\n\n\n    .privacy_privacyItem  input.privacy-checkbox {\n        margin-right: 5px;\n        margin-bottom: 5px;\n    }\n\n    .privacy_privacyItem label{\n        display: table;\n    }\n\n    .privacy_privacyItem a {\n        margin-left: 20px;\n    }\n</style>\n\n<div class="privacy_privacyItem">\n    <div>\n        <label>\n            <input type="checkbox" class="privacy-checkbox">\n            <%- copy %>\n        </label>\n        <a class="colored" href="<%- link %>">\n            <%- text %>\n        </a>\n    </div>\n</div>\n';
			},
			628873: (e) => {
				e.exports =
					'<style>\n    .overlay-content .privacy-sign-out-button {\n        float: right;\n        color: #fff;\n        margin-top: 18px;\n    }\n\n    .overlay-content .privacy-layer-header {\n        height: 55px;\n        width: 100%;\n        padding: 0 10px;\n        background: #0a1f2e;\n    }\n\n    .overlay-content .privacy-header-content {\n        padding: 0 30px;\n    }\n\n    .overlay-content .privacy-garmin-logo {\n        top: 15px;\n    }\n\n    .overlay-content .privacies{\n        padding: 0 30px;\n        margin-top: 40px;\n    }\n</style>\n\n<div class="overlay-content" style="display: none">\n    <div class="privacy-layer-header">\n        <div class="privacy-header-content">\n            <a class="privacy-garmin-logo logo" href="/en-US/" title="<%- Localizer.localize(\'connect_powered_by_garmin\') %>">Garmin Connect</a>\n            <a class="privacy-sign-out-button" href="/auth/logout"><%- Localizer.localize(\'sign.out.title\') %></a>\n        </div>\n    </div>\n    <div class="privacies">\n        <div class="privacy-content-container"></div>\n        <button class="btn continue-button" disabled ><%- Localizer.localize(\'button_continue\') %></button>\n    </div>\n</div>';
			},
			153242: (e) => {
				e.exports =
					'<h5><%- modalTitle %> </h5>\n\n<span style="white-space: pre-line"><%= modalBody %></span>';
			},
			729629: (e) => {
				e.exports =
					'<div class="modal-header">\n    <% if (showCloseButton) { %>\n    <button type="button" class="close js-close" aria-label="<%-\xa0Localizer.localize(\'close\')\xa0%>">&times;</button>\n    <% } %>\n    <h3 class="js-modal-header-title"><%= modalTopTitle %></h3>\n</div>\n\n<div class="modal-body">\n    <% if(modalTitle) { %>\n        <h5><%- modalTitle %> </h5>\n    <% } %>\n\n    <span style="white-space: pre-line"><%= modalBody %></span>\n</div>\n\n<div class="modal-footer">\n    <div class="pull-right">\n        <% if(cancelBtn) { %>\n            <a href="" class="btn btn-secondary cancel <%-footerSecondaryButtonClasses%>" data-dismiss="modal"><%- cancelBtn %></a>\n        <% } %>\n        <a href="" class="btn btn-primary js-saveBtn <%-footerPrimaryButtonClasses%>"><%- saveBtn %></a>\n    </div>\n    <a href="<%- footerLink %>" target="_blank" class="pull-left colored"><%- footerTextLink %></a>\n</div>';
			},
			503407: (e) => {
				e.exports =
					'<div class="modal-header">\n    <button \n        type="button" \n        class="close js-close" \n        aria-label="<%-\xa0Localizer.localize(\'close\')\xa0%>"\n    >&times;</button>\n    <h3 class="js-modal-header-title"><%= modalTopTitle %></h3>\n</div>\n\n<div class="modal-body">\n    <% if(modalTitle) { %>\n        <h5><%- modalTitle %> </h5>\n    <% } %>\n\n    <span style="white-space: pre-line"><%= modalBody %></span>\n\n    <p><%- Localizer.localize(\'gdpr_revoke_consent_delete_notification\', userEmail) %></p>\n\n    <label class="control-label" for="passwordConfirm"><%- Localizer.localize(\'password\') %></label>\n    <input type="password" id="passwordConfirm" name="passwordConfirm" class="input-long" value="">\n    <div class="errorMessagePlaceHolder top-s"></div>\n</div>\n\n<div class="modal-footer">\n    <div class="pull-right">\n        <% if(cancelBtn) { %>\n            <a href="" class="btn btn-secondary cancel <%-footerSecondaryButtonClasses%>" data-dismiss="modal"><%- cancelBtn %></a>\n        <% } %>\n        <a href="" class="btn btn-primary js-saveBtn <%-footerPrimaryButtonClasses%>"><%- saveBtn %></a>\n    </div>\n    <a href="<%- footerLink %>" target="_blank" class="pull-left colored"><%- footerTextLink %></a>\n</div>';
			},
			404662: (e) => {
				e.exports =
					'<div class="pull-right">\n    <a href="#" class="btn btn-secondary js-cancel" data-dismiss="modal"><%- cancelBtn %></a>\n    <a href="#" class="btn btn-primary js-middleBtn <%- showMiddleBtn %>"><%- middleBtn %></a>\n    <a href="#" class="btn btn-primary js-saveBtn"><%- saveBtn %></a>\n</div>\n<div class="pull-left top-xs <%-showFooterLink %>">\n    <a href=<%-footerLink %> target="_blank" class="colored"><%-footerTextLink %></a>\n</div>';
			},
			174497: (e) => {
				e.exports =
					'<div class="modal-header">\n    <button \n        type="button" \n        class="close js-close" \n        aria-label="<%-\xa0Localizer.localize(\'close\')\xa0%>"\n    >&times;</button>\n    <h3 class="js-modal-header-title"><%= modalTopTitle %></h3>\n</div>\n\n<div class="modal-body">\n    <% if(modalTitle) { %>\n    <p class="marBottomXS"><%- modalTitle %></p>\n    <% } %>\n    <div class="btn-switch-container marBottomMD">\n        <div class="btn-switch btn-switch-checked">\n            <input type="checkbox" name="btn-switch" class="btn-switch-checkbox <%- switchIsChecked && \'checked\' %>" id="productEnhancementBtnSwitch" <%- switchIsChecked ? \'checked\' : \'\' %> >\n            <label class="btn-switch-label" for="productEnhancementBtnSwitch">\n                <div class="btn-switch-inner"></div>\n                <div class="btn-switch-dial"></div>\n            </label>\n        </div>\n    </div>\n    <div>\n        <%= modalBody %>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="<%- footerLink %>" target="_blank" class="pull-left colored"><%- footerTextLink %></a>\n\n    <div class="pull-right">\n        <button class="btn btn-primary js-saveBtn <%-footerPrimaryButtonClasses%>"><%- saveBtn %></button>\n    </div>\n</div>';
			},
			813436: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => A });
				var n = i(946186),
					a = i.n(n),
					s = i(882155),
					r = i.n(s),
					o = i(127433),
					l = i.n(o),
					c = i(188626),
					d = i.n(c),
					u = i(108990),
					p = i.n(u),
					y = i(389827),
					h = i.n(y),
					g = i(495377),
					m = {};
				(m.styleTagTransform = h()),
					(m.setAttributes = d()),
					(m.insert = l().bind(null, 'head')),
					(m.domAPI = r()),
					(m.insertStyleElement = p());
				a()(g.A, m);
				const A = g.A && g.A.locals ? g.A.locals : void 0;
			},
			636788: (e, t, i) => {
				'use strict';
				i.d(t, { A: () => A });
				var n = i(946186),
					a = i.n(n),
					s = i(882155),
					r = i.n(s),
					o = i(127433),
					l = i.n(o),
					c = i(188626),
					d = i.n(c),
					u = i(108990),
					p = i.n(u),
					y = i(389827),
					h = i.n(y),
					g = i(336741),
					m = {};
				(m.styleTagTransform = h()),
					(m.setAttributes = d()),
					(m.insert = l().bind(null, 'head')),
					(m.domAPI = r()),
					(m.insertStyleElement = p());
				a()(g.A, m);
				const A = g.A && g.A.locals ? g.A.locals : void 0;
			},
			66608: (e, t, i) => {
				'use strict';
				var n = i(946186),
					a = i.n(n),
					s = i(882155),
					r = i.n(s),
					o = i(127433),
					l = i.n(o),
					c = i(188626),
					d = i.n(c),
					u = i(108990),
					p = i.n(u),
					y = i(389827),
					h = i.n(y),
					g = i(599141),
					m = {};
				(m.styleTagTransform = h()),
					(m.setAttributes = d()),
					(m.insert = l().bind(null, 'head')),
					(m.domAPI = r()),
					(m.insertStyleElement = p());
				a()(g.A, m), g.A && g.A.locals && g.A.locals;
			},
			37873: (e, t, i) => {
				'use strict';
				var n = i(946186),
					a = i.n(n),
					s = i(882155),
					r = i.n(s),
					o = i(127433),
					l = i.n(o),
					c = i(188626),
					d = i.n(c),
					u = i(108990),
					p = i.n(u),
					y = i(389827),
					h = i.n(y),
					g = i(815810),
					m = {};
				(m.styleTagTransform = h()),
					(m.setAttributes = d()),
					(m.insert = l().bind(null, 'head')),
					(m.domAPI = r()),
					(m.insertStyleElement = p());
				a()(g.A, m), g.A && g.A.locals && g.A.locals;
			},
			8991: () => {},
		},
		t = {};
	function i(n) {
		var a = t[n];
		if (void 0 !== a) return a.exports;
		var s = (t[n] = { id: n, loaded: !1, exports: {} });
		return e[n].call(s.exports, s, s.exports, i), (s.loaded = !0), s.exports;
	}
	(i.m = e),
		(i.amdO = {}),
		(() => {
			var e = [];
			i.O = (t, n, a, s) => {
				if (!n) {
					var r = 1 / 0;
					for (d = 0; d < e.length; d++) {
						for (var [n, a, s] = e[d], o = !0, l = 0; l < n.length; l++)
							(!1 & s || r >= s) && Object.keys(i.O).every((e) => i.O[e](n[l]))
								? n.splice(l--, 1)
								: ((o = !1), s < r && (r = s));
						if (o) {
							e.splice(d--, 1);
							var c = a();
							void 0 !== c && (t = c);
						}
					}
					return t;
				}
				s = s || 0;
				for (var d = e.length; d > 0 && e[d - 1][2] > s; d--) e[d] = e[d - 1];
				e[d] = [n, a, s];
			};
		})(),
		(i.n = (e) => {
			var t = e && e.__esModule ? () => e.default : () => e;
			return i.d(t, { a: t }), t;
		}),
		(() => {
			var e,
				t = Object.getPrototypeOf
					? (e) => Object.getPrototypeOf(e)
					: (e) => e.__proto__;
			i.t = function (n, a) {
				if ((1 & a && (n = this(n)), 8 & a)) return n;
				if ('object' === typeof n && n) {
					if (4 & a && n.__esModule) return n;
					if (16 & a && 'function' === typeof n.then) return n;
				}
				var s = Object.create(null);
				i.r(s);
				var r = {};
				e = e || [null, t({}), t([]), t(t)];
				for (
					var o = 2 & a && n;
					'object' == typeof o && !~e.indexOf(o);
					o = t(o)
				)
					Object.getOwnPropertyNames(o).forEach((e) => (r[e] = () => n[e]));
				return (r.default = () => n), i.d(s, r), s;
			};
		})(),
		(i.d = (e, t) => {
			for (var n in t)
				i.o(t, n) &&
					!i.o(e, n) &&
					Object.defineProperty(e, n, { enumerable: !0, get: t[n] });
		}),
		(i.f = {}),
		(i.e = (e) =>
			Promise.all(Object.keys(i.f).reduce((t, n) => (i.f[n](e, t), t), []))),
		(i.u = (e) =>
			'static/js/' +
			e +
			'.' +
			{
				3: '96dc39cf',
				44: '2e381a29',
				73: 'ff7ac9b2',
				82: '738bd2f2',
				95: '973f92bc',
				111: '4e19b3f5',
				122: 'e94b77a9',
				174: '11500b7c',
				210: '325a0b11',
				233: 'ad499dd4',
				256: 'f0e05251',
				276: 'e0d0e003',
				279: '0947ff69',
				320: '2c02c742',
				332: 'abdefaa6',
				344: 'adeda5a0',
				354: '031d3742',
				358: '4dc2e7ff',
				378: '11d7fdfa',
				408: '7e5a4dbf',
				415: '89fae983',
				422: '8561cac8',
				453: '625e4e8f',
				459: 'f81b9389',
				468: '75a5f40a',
				490: 'd39fcbcd',
				547: '40b74900',
				559: '50ff6568',
				567: '03ea8ba4',
				576: 'be4d9a8e',
				612: '0ac3e0ac',
				671: 'e9db3f20',
				681: 'e1cfdc14',
				691: '999b58f6',
				698: 'b3d0c6f4',
				745: '791d807a',
				771: '2c682a85',
				779: '49d023b7',
				798: '5f877808',
				801: '64a7efd7',
				853: '0c712e4b',
				855: '6323f647',
				864: '25ee1621',
				896: 'd15645c6',
				935: '4045b767',
				965: '156050a7',
				984: '9c0ccc8a',
				1011: '187b3a1c',
				1037: 'f66bdf3a',
				1069: 'd2a30333',
				1089: '9a55e818',
				1095: 'ade6053a',
				1189: 'ecd89123',
				1197: '9b14e83d',
				1231: '96dfa3b9',
				1252: '5b7e2d10',
				1253: 'f5116d6a',
				1274: '53f1bbd0',
				1305: '2af4a126',
				1307: 'e1114824',
				1320: '4dd59809',
				1322: '73975b5f',
				1334: '76a56718',
				1389: 'ebbcb332',
				1390: 'e35ce546',
				1397: '135583d5',
				1416: 'f7aee063',
				1469: '71e57551',
				1476: '7b9bb2fa',
				1512: '12015b99',
				1526: 'cd0a2834',
				1536: '9b573c76',
				1543: '623f5048',
				1557: '92986ca4',
				1567: '76349868',
				1571: 'b3aa41a2',
				1573: '96d9f79f',
				1581: 'e1d2c3b2',
				1602: '5fc5997c',
				1620: '2c124c17',
				1630: '2bba7fd7',
				1662: '4684b4cc',
				1706: 'b711c589',
				1728: 'c41ec760',
				1756: 'e2f83317',
				1806: '3a888b9c',
				1817: '3d9a087e',
				1825: 'b419482e',
				1868: '827d8d2f',
				1883: '3228e56d',
				1920: '8a360582',
				1951: 'e9e0ff68',
				1954: '3c83ace3',
				1963: 'c2603336',
				1986: 'ce50a369',
				2006: 'e04f7d4e',
				2012: '9821f30a',
				2027: 'cdc67a31',
				2043: '1bf8409b',
				2058: '6134ea99',
				2076: 'd9666920',
				2090: '11ee3a1b',
				2106: '4e4e1f8e',
				2115: '91124733',
				2160: '86c972e0',
				2172: '0520f026',
				2173: 'a9f62bce',
				2179: '71637340',
				2283: '4e6c4e94',
				2291: '5915b335',
				2300: '34e2b929',
				2313: 'ff5aa571',
				2322: '3957d247',
				2326: '08f8ec05',
				2403: '376e3a47',
				2404: 'b62b6486',
				2418: '9545e4cf',
				2447: 'b1311b18',
				2472: 'a13d85b2',
				2478: 'ba16ff91',
				2492: 'd038be71',
				2568: '81b1c8df',
				2604: '7766acce',
				2664: 'da759a48',
				2667: '72261478',
				2687: '3ed24c1b',
				2711: '9409dd48',
				2742: '2d855dd4',
				2785: '86a6c14b',
				2802: '27f22740',
				2811: '32284507',
				2816: '7831ab5d',
				2885: '8d449cdb',
				2890: '0c3d9f72',
				2910: 'f90c1d5b',
				2971: '3a2dc0f3',
				2979: '636e8757',
				2994: '12d02e15',
				3033: '31a79903',
				3060: 'c08474c0',
				3067: 'a69e9260',
				3077: '4bef01ad',
				3093: 'd4e80663',
				3117: 'c8804005',
				3164: '131ce011',
				3167: '2bacfc58',
				3229: '903e60de',
				3292: '350bae54',
				3307: '08197666',
				3337: '2fbe16bf',
				3354: '2a05c987',
				3404: '2b91804a',
				3408: '8475fbcb',
				3431: '34f0e154',
				3493: '64358628',
				3516: '1c56c9fc',
				3531: '73bd24b0',
				3538: '422ecb24',
				3545: '802e855b',
				3551: 'a202c02f',
				3573: 'f1e855e7',
				3583: '4be3e5fd',
				3586: '3adfffe4',
				3616: '9889a912',
				3617: '42a73804',
				3674: 'a4568619',
				3683: '572505fe',
				3705: '16a454fc',
				3714: '1046f9b9',
				3725: '0354087b',
				3733: '2c038b61',
				3735: '7c751c0e',
				3737: 'ff71af67',
				3743: '5d208eab',
				3788: '492d3ab3',
				3792: '9d3e93db',
				3803: '2947c887',
				3805: '4c4dcde0',
				3806: '82dbd8e3',
				3866: '1efb84a2',
				3869: 'f4fd2c9a',
				3875: '49f3dbbd',
				3907: '08d900fb',
				3932: 'ceb09c01',
				3938: 'be3b3964',
				3959: '64890f50',
				3980: 'eaca5079',
				3988: 'c740d9c4',
				3998: 'd1cb8583',
				4005: '599c9bd7',
				4052: '0b1faae9',
				4066: 'b14ff315',
				4095: '036e403b',
				4112: 'f6a9fc80',
				4153: '647ace70',
				4158: 'a9b211f1',
				4173: '76942955',
				4214: '3c54f1ca',
				4222: '24b07393',
				4227: 'fad1ab75',
				4249: 'fe4377b5',
				4253: '192faac9',
				4260: '14408a35',
				4282: '3326dfb6',
				4283: '5a8b71b6',
				4329: '9d61aeba',
				4335: '85a7afed',
				4349: '0b38a6ad',
				4375: '77caa4d9',
				4379: 'f1b83db2',
				4385: '62889484',
				4386: '0ab18c78',
				4410: '26a09ed2',
				4415: '537084c0',
				4451: '7f7ab95f',
				4469: 'c7878098',
				4500: '575c2209',
				4547: 'b0824dce',
				4568: '58d8d683',
				4615: 'e603ef32',
				4619: 'f1cb6bcf',
				4635: '56cdf34b',
				4679: '317a4a63',
				4688: 'bbec0759',
				4703: '57f3c09c',
				4711: '74f95c45',
				4737: 'c2072c4b',
				4743: '4dddcc42',
				4759: '2dc967c6',
				4763: '6615f11a',
				4796: 'e8739fbb',
				4804: 'cf5ae778',
				4859: 'd70499c3',
				4862: '579a340d',
				4865: '07c24457',
				4876: '02f7b842',
				4936: 'f50fe706',
				4999: 'f69b881b',
				5117: 'ca79b2f5',
				5118: '9c0f4382',
				5142: '088e0f1f',
				5148: '119b8116',
				5167: '7a703043',
				5230: 'c94af535',
				5235: '5d78cb74',
				5245: '34c5a8e7',
				5288: '56a0ebfc',
				5378: '1f61225b',
				5390: '65bf63ec',
				5403: '36d8ca4c',
				5472: '9b72d486',
				5477: '363b015f',
				5478: '6119f4f9',
				5501: 'b30d43cd',
				5532: 'c7f8c524',
				5551: 'b95346bc',
				5605: '3c621a39',
				5638: '4ced4c63',
				5640: '84bb522f',
				5678: 'e594e63a',
				5686: 'e1aabb89',
				5716: '59d46d9e',
				5739: '35a5491c',
				5758: 'ddf5ec1c',
				5774: '24e5bb90',
				5805: '37a409fd',
				5824: '75ed94ed',
				5829: '2b90628e',
				5832: '9b1115f8',
				5849: '20318bcf',
				5850: '4e4f5af3',
				5902: 'bba99c3c',
				5906: 'b396d912',
				5915: '5f644cd9',
				5941: 'c210eb86',
				5948: '7501bab7',
				5980: '3fee29a7',
				6004: '48679f69',
				6051: '10d364ab',
				6075: '2a922ca1',
				6077: '5ffe2e71',
				6079: 'f13a7efa',
				6088: 'baf147a7',
				6103: '6093112e',
				6128: '2555d0a7',
				6171: '9a9cba87',
				6188: '6cdfe71b',
				6200: 'f2ce4b7a',
				6212: 'f5ba99a8',
				6232: '55266f5a',
				6240: '368c0660',
				6257: '09b26ff1',
				6288: '37f83537',
				6343: '771defc3',
				6352: '1506d88c',
				6384: '8fefb895',
				6411: 'ab091d88',
				6414: '5617390f',
				6428: '46ef17b2',
				6453: 'ae3faec6',
				6489: '5172600e',
				6499: 'd23540ae',
				6519: 'cddc57dd',
				6521: '9f47912c',
				6530: '872ed558',
				6536: 'f1228a3c',
				6598: 'e22859a7',
				6626: '4d9ed7cf',
				6628: 'b2861fad',
				6629: '5834d9f8',
				6642: '8abaf7fa',
				6676: 'b8194232',
				6705: '6e6fbab3',
				6721: 'e022937a',
				6748: '551a74db',
				6750: '41b3b85a',
				6757: '81031501',
				6766: 'f1f1b863',
				6780: '1c5e2103',
				6820: '2eaebd4c',
				6861: 'bf7a4093',
				6964: '5338e1af',
				6982: 'b4335ed3',
				7015: 'c4afebcd',
				7064: 'b0cc6d5d',
				7068: '4397a6bd',
				7075: '748cb60f',
				7082: '41f1d60d',
				7084: '203842c8',
				7101: '6bde53fe',
				7128: '651e3f1f',
				7131: '63baa4f9',
				7144: 'eec8fff6',
				7165: 'be955bc5',
				7175: '8ba8c1b5',
				7220: 'a2b98056',
				7270: '18608e11',
				7277: '0af3fca3',
				7315: 'ad1608a5',
				7325: '1082b203',
				7373: 'c12a4262',
				7374: 'fe5724e0',
				7404: 'ddfbc698',
				7409: 'b516a547',
				7443: '466b17e5',
				7449: '5403a7f6',
				7461: 'de71f6c0',
				7464: '20fa66fd',
				7473: '8391e68f',
				7504: 'bf0efee4',
				7506: 'dfdd7bc6',
				7511: 'c89cd2e1',
				7575: 'dbdb05ea',
				7586: '9d1ff6e4',
				7604: '97797144',
				7639: '00f5d861',
				7672: '10674e70',
				7680: '334179aa',
				7689: 'e14961fc',
				7690: '99e300c0',
				7704: '6ba170eb',
				7733: '7d84bac1',
				7745: '970b20aa',
				7809: '27c56362',
				7815: 'c611da5d',
				7856: '7f01847e',
				7894: 'd904b590',
				7909: '15127d10',
				7929: 'f2513fa2',
				7957: '656e11d7',
				7959: '126c795e',
				8030: '7606828f',
				8045: 'cfcfa900',
				8083: 'b7c5ff65',
				8086: 'ee3beddd',
				8161: 'f297dc1f',
				8166: '7cc6f978',
				8170: '341b0319',
				8203: '15af95e3',
				8230: 'addd04ba',
				8258: 'f93ca848',
				8264: '4b53ba13',
				8273: '9884a493',
				8300: '6ccc332b',
				8350: '807d447c',
				8363: '75e2b377',
				8364: '9635da71',
				8421: 'acc9e13f',
				8438: 'c66fcc05',
				8482: '149d9d2c',
				8483: '24fd2e43',
				8496: '3c46bd70',
				8532: '166f6253',
				8547: '31859f95',
				8569: 'ded4b5ae',
				8585: '401d181e',
				8600: 'e89d0802',
				8605: 'e14ba4be',
				8679: 'b7952d5e',
				8688: 'b8932bd8',
				8701: 'd43d6c3b',
				8720: '8230a8ff',
				8756: '378dfe43',
				8771: '583f57ab',
				8782: '7889f293',
				8832: '65879ef4',
				8833: '3a9a9fbf',
				8870: '54e49036',
				8900: 'd5a3c915',
				8927: 'ef8ffbe8',
				8943: '246f9ab8',
				8948: '781b5450',
				8955: '5870106a',
				8956: 'daf9ea62',
				8976: '16c091a4',
				9027: '01be04b6',
				9080: '0dc3e45f',
				9121: 'af4bfec0',
				9144: '41c07e41',
				9171: '9b40056b',
				9205: '58d1377f',
				9209: '58153c4c',
				9288: 'd02ec7cb',
				9289: 'bbdea625',
				9297: '8feeaf9d',
				9370: 'f4d2c633',
				9404: 'af215b4d',
				9420: 'ca400811',
				9421: '690c8c68',
				9433: '20db24df',
				9458: '6cf8eafe',
				9485: 'ac6c3213',
				9512: '215f8806',
				9551: '5f8b345f',
				9568: '9c6f5dbe',
				9569: '3df6f5d4',
				9578: '804a6f55',
				9583: '7dc16cea',
				9624: 'ce582ad6',
				9642: 'ff321b7e',
				9647: 'c6ed59ed',
				9648: 'ca1afe8b',
				9654: 'fde0bc05',
				9657: 'fe962807',
				9675: 'e343bd4f',
				9719: '04d388ae',
				9754: '58b5456c',
				9822: 'fc6be0b5',
				9849: '2e7ade97',
				9878: '74214be8',
				9891: '7f0f141c',
				9899: 'ab1c9860',
				9906: 'f8c2099a',
				9910: '6c89d09d',
				9941: 'aa63da9b',
				9967: '49e06eec',
				9968: 'b852351b',
				9975: '3eb2ca77',
				9985: '61d8f90d',
			}[e] +
			'.chunk.js'),
		(i.g = (function () {
			if ('object' === typeof globalThis) return globalThis;
			try {
				return this || new Function('return this')();
			} catch (e) {
				if ('object' === typeof window) return window;
			}
		})()),
		(i.hmd = (e) => (
			(e = Object.create(e)).children || (e.children = []),
			Object.defineProperty(e, 'exports', {
				enumerable: !0,
				set: () => {
					throw new Error(
						'ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' +
							e.id
					);
				},
			}),
			e
		)),
		(i.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)),
		(() => {
			var e = {},
				t = 'react-web:';
			i.l = (n, a, s, r) => {
				if (e[n]) e[n].push(a);
				else {
					var o, l;
					if (void 0 !== s)
						for (
							var c = document.getElementsByTagName('script'), d = 0;
							d < c.length;
							d++
						) {
							var u = c[d];
							if (
								u.getAttribute('src') == n ||
								u.getAttribute('data-webpack') == t + s
							) {
								o = u;
								break;
							}
						}
					o ||
						((l = !0),
						((o = document.createElement('script')).charset = 'utf-8'),
						(o.timeout = 120),
						i.nc && o.setAttribute('nonce', i.nc),
						o.setAttribute('data-webpack', t + s),
						(o.src = n)),
						(e[n] = [a]);
					var p = (t, i) => {
							(o.onerror = o.onload = null), clearTimeout(y);
							var a = e[n];
							if (
								(delete e[n],
								o.parentNode && o.parentNode.removeChild(o),
								a && a.forEach((e) => e(i)),
								t)
							)
								return t(i);
						},
						y = setTimeout(
							p.bind(null, void 0, { type: 'timeout', target: o }),
							12e4
						);
					(o.onerror = p.bind(null, o.onerror)),
						(o.onload = p.bind(null, o.onload)),
						l && document.head.appendChild(o);
				}
			};
		})(),
		(i.r = (e) => {
			'undefined' !== typeof Symbol &&
				Symbol.toStringTag &&
				Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
				Object.defineProperty(e, '__esModule', { value: !0 });
		}),
		(i.nmd = (e) => ((e.paths = []), e.children || (e.children = []), e)),
		(i.p = '/web-react/'),
		(() => {
			var e = { 8792: 0 };
			(i.f.j = (t, n) => {
				var a = i.o(e, t) ? e[t] : void 0;
				if (0 !== a)
					if (a) n.push(a[2]);
					else {
						var s = new Promise((i, n) => (a = e[t] = [i, n]));
						n.push((a[2] = s));
						var r = i.p + i.u(t),
							o = new Error();
						i.l(
							r,
							(n) => {
								if (i.o(e, t) && (0 !== (a = e[t]) && (e[t] = void 0), a)) {
									var s = n && ('load' === n.type ? 'missing' : n.type),
										r = n && n.target && n.target.src;
									(o.message =
										'Loading chunk ' + t + ' failed.\n(' + s + ': ' + r + ')'),
										(o.name = 'ChunkLoadError'),
										(o.type = s),
										(o.request = r),
										a[1](o);
								}
							},
							'chunk-' + t,
							t
						);
					}
			}),
				(i.O.j = (t) => 0 === e[t]);
			var t = (t, n) => {
					var a,
						s,
						[r, o, l] = n,
						c = 0;
					if (r.some((t) => 0 !== e[t])) {
						for (a in o) i.o(o, a) && (i.m[a] = o[a]);
						if (l) var d = l(i);
					}
					for (t && t(n); c < r.length; c++)
						(s = r[c]), i.o(e, s) && e[s] && e[s][0](), (e[s] = 0);
					return i.O(d);
				},
				n = (globalThis.webpackChunkreact_web =
					globalThis.webpackChunkreact_web || []);
			n.forEach(t.bind(null, 0)), (n.push = t.bind(null, n.push.bind(n)));
		})(),
		(i.nc = void 0);
	var n = i.O(void 0, [5220, 6566], () => i(344565));
	n = i.O(n);
})();
//# sourceMappingURL=bundle.js.map
